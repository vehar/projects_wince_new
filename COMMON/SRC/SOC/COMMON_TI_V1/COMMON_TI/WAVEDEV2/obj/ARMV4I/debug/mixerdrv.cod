; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\WAVEDEV2\mixerdrv.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@BJPEGCKG@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@KOFAABPH@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@OALPFLIM@?$AAP?$AAl?$AAa?$AAy?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GKAFBHEE@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAL?$AAL?$AAI?$AAT?$AAI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@KGPLLMHC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAC?$AAR?$AAO?$AAT?$AAI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@MHHEILGF@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAT?$AAE?$AAR?$AAE?$AAO?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@MOGMEDOD@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAO?$AAN?$AAO?$AAF?$AAF?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@DCLFABPP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAT?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@BCDOONIF@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAO?$AAN?$AAO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@FIBKNKLH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAL?$AAO?$AAU?$AAD?$AAN?$AAE?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@ONOCHFEP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@LBKFNEJB@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAO?$AAO?$AAL?$AAE?$AAA?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@JCFBIPAK@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAL?$AAI?$AAD?$AAE?$AAR?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@BEPOGKNO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAQ?$AAS?$AAO?$AAU?$AAN?$AAD?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@HNKLKPNJ@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAA?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@PPIBPMLH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAU?$AAN?$AAS?$AAI?$AAG?$AAN?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PAIJNMCC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@KPFLKHEG@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAE?$AAR?$AAC?$AAE?$AAN?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@FDJLOIGD@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAD?$AAE?$AAC?$AAI?$AAB?$AAE?$AAL@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@CIONLEIK@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAU?$AAN?$AAS?$AAI?$AAG?$AAN?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@KIDDBONI@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AAM@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@EBKFDDEH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAE?$AAA?$AAK?$AAM?$AAE?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@DKIPIFCO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAO?$AAO?$AAL?$AAE?$AAA?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@KGOHBNDE@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAN?$AAG?$AAL?$AAE?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@HHCAMDON@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@ECHLHCDJ@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAL?$AAT?$AAI?$AAP?$AAL@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OPBKEMFB@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAX?$AAE?$AAR?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@BGMJCECN@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@CECHMMMP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAT?$AAR?$AAE?$AAB?$AAL?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@KGELIMMP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAF?$AAA?$AAD?$AAE?$AAR?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@NLNANFDC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAE?$AAQ?$AAU?$AAA?$AAL?$AAI?$AAZ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@FDDIFNFI@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAA?$AAS?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@IAIECAKO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAC?$AAU?$AAS?$AAT?$AAO?$AAM?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ctype_table@@3PAUMMSYSCODE@@A| [ DATA ] ; ctype_table
	EXPORT	|?m_cControls@MixerControlList@@0KB| [ DATA ] ; MixerControlList::m_cControls

  00000			 AREA	 |.bss|, NOINIT
|g_pMixerControlList| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|?m_cControls@MixerControlList@@0KB| DCD 0x6		; MixerControlList::m_cControls

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@| DCB "M"
	DCB	0x0, "i", 0x0, "c", 0x0, "r", 0x0, "o", 0x0, "p", 0x0, "h"
	DCB	0x0, "o", 0x0, "n", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BJPEGCKG@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KOFAABPH@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@OALPFLIM@?$AAP?$AAl?$AAa?$AAy?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "b", 0x0, "a", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|g_dst_lines| DCW 0xff80
	DCW	0xff81
|g_PCM_IN_sources| DCW 0x8281
	%	2
|g_mixerline| DCD 0x4
	DCD	|??_C@_1CC@OALPFLIM@?$AAP?$AAl?$AAa?$AAy?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@|
	DCD	|??_C@_1CC@OALPFLIM@?$AAP?$AAl?$AAa?$AAy?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCW	0xff80
	DCB	0x2
	DCB	0x0
	DCB	0x2
	%	3
	DCD	0x1
	DCB	0x0
	DCB	0xff
	%	2
	DCD	0x7
	DCD	|??_C@_1CA@KOFAABPH@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AA?$AA@|
	DCD	|??_C@_1CE@BJPEGCKG@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	|g_PCM_IN_sources|
	DCW	0xff81
	DCB	0x2
	DCB	0x1
	DCB	0x4
	%	3
	DCD	0x2
	DCB	0x1
	DCB	0xff
	%	2
	DCD	0x1003
	DCD	|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@|
	DCD	|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@|
	DCD	0x80000001
	DCD	0x0
	DCW	0x8281
	DCB	0x1
	DCB	0x0
	DCB	0x2
	%	3
	DCD	0x2
	DCB	0x1
	DCB	0x1
	%	2

  00000			 AREA	 |.data|, DATA
|?ctype_table@@3PAUMMSYSCODE@@A| DCD 0x0		; ctype_table
	DCD	|??_C@_1EA@IAIECAKO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAC?$AAU?$AAS?$AAT?$AAO?$AAM?$AA?$AA@|
	DCD	0x50030002
	DCD	|??_C@_1DM@FDDIFNFI@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAA?$AAS?$AAS?$AA?$AA@|
	DCD	0x50030004
	DCD	|??_C@_1EG@NLNANFDC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAE?$AAQ?$AAU?$AAA?$AAL?$AAI?$AAZ@|
	DCD	0x50030000
	DCD	|??_C@_1DO@KGELIMMP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAF?$AAA?$AAD?$AAE?$AAR?$AA?$AA@|
	DCD	0x50030003
	DCD	|??_C@_1EA@CECHMMMP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAT?$AAR?$AAE?$AAB?$AAL?$AAE?$AA?$AA@|
	DCD	0x50030001
	DCD	|??_C@_1EA@BGMJCECN@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?$AA@|
	DCD	0x71010001
	DCD	|??_C@_1DO@OPBKEMFB@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAX?$AAE?$AAR?$AA?$AA@|
	DCD	0x71010000
	DCD	|??_C@_1FA@ECHLHCDJ@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAL?$AAT?$AAI?$AAP?$AAL@|
	DCD	0x70010001
	DCD	|??_C@_1DK@HHCAMDON@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAX?$AA?$AA@|
	DCD	0x70010000
	DCD	|??_C@_1EM@KGOHBNDE@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAN?$AAG?$AAL?$AAE?$AAS@|
	DCD	0x10010000
	DCD	|??_C@_1EM@DKIPIFCO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAO?$AAO?$AAL?$AAE?$AAA?$AAN@|
	DCD	0x10020001
	DCD	|??_C@_1EG@EBKFDDEH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAE?$AAA?$AAK?$AAM?$AAE?$AAT@|
	DCD	0x10020000
	DCD	|??_C@_1EK@KIDDBONI@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AAM@|
	DCD	0x10030000
	DCD	|??_C@_1EO@CIONLEIK@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAU?$AAN?$AAS?$AAI?$AAG?$AAN?$AAE@|
	DCD	0x30040000
	DCD	|??_C@_1EE@FDJLOIGD@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAD?$AAE?$AAC?$AAI?$AAB?$AAE?$AAL@|
	DCD	0x30050000
	DCD	|??_C@_1EC@KPFLKHEG@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAE?$AAR?$AAC?$AAE?$AAN?$AAT@|
	DCD	0x30020000
	DCD	|??_C@_1EA@PAIJNMCC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA?$AA@|
	DCD	0x30030000
	DCD	|??_C@_1EE@PPIBPMLH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAU?$AAN?$AAS?$AAI?$AAG?$AAN?$AAE@|
	DCD	0x40020001
	DCD	|??_C@_1DK@HNKLKPNJ@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAA?$AAN?$AA?$AA@|
	DCD	0x40020002
	DCD	|??_C@_1EG@BEPOGKNO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAQ?$AAS?$AAO?$AAU?$AAN?$AAD?$AAP@|
	DCD	0x40020000
	DCD	|??_C@_1EA@JCFBIPAK@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAL?$AAI?$AAD?$AAE?$AAR?$AA?$AA@|
	DCD	0x20010000
	DCD	|??_C@_1EC@LBKFNEJB@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAO?$AAO?$AAL?$AAE?$AAA?$AAN@|
	DCD	0x21010000
	DCD	|??_C@_1EA@ONOCHFEP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@|
	DCD	0x20010004
	DCD	|??_C@_1EE@FIBKNKLH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAL?$AAO?$AAU?$AAD?$AAN?$AAE?$AAS@|
	DCD	0x20010003
	DCD	|??_C@_1DM@BCDOONIF@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAO?$AAN?$AAO?$AA?$AA@|
	DCD	0x20010002
	DCD	|??_C@_1DM@DCLFABPP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAT?$AAE?$AA?$AA@|
	DCD	0x20010001
	DCD	|??_C@_1DO@MOGMEDOD@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAO?$AAN?$AAO?$AAF?$AAF?$AA?$AA@|
	DCD	0x20010005
	DCD	|??_C@_1EG@MHHEILGF@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAT?$AAE?$AAR?$AAE?$AAO?$AAE@|
	DCD	0x60030000
	DCD	|??_C@_1EG@KGPLLMHC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAC?$AAR?$AAO?$AAT?$AAI@|
	DCD	0x61030000
	DCD	|??_C@_1EG@GKAFBHEE@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAL?$AAL?$AAI?$AAT?$AAI@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GKAFBHEE@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAL?$AAL?$AAI?$AAT?$AAI@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "M", 0x0, "I", 0x0, "L", 0x0, "L", 0x0, "I", 0x0, "T"
	DCB	0x0, "I", 0x0, "M", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@KGPLLMHC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAC?$AAR?$AAO?$AAT?$AAI@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "M", 0x0, "I", 0x0, "C", 0x0, "R", 0x0, "O", 0x0, "T"
	DCB	0x0, "I", 0x0, "M", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@MHHEILGF@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAT?$AAE?$AAR?$AAE?$AAO?$AAE@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "S", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, "E", 0x0, "O"
	DCB	0x0, "E", 0x0, "N", 0x0, "H", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MOGMEDOD@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAO?$AAN?$AAO?$AAF?$AAF?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "O", 0x0, "N", 0x0, "O", 0x0, "F", 0x0, "F", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@DCLFABPP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAT?$AAE?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "M", 0x0, "U", 0x0, "T", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@BCDOONIF@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAO?$AAN?$AAO?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "M", 0x0, "O", 0x0, "N", 0x0, "O", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@FIBKNKLH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAL?$AAO?$AAU?$AAD?$AAN?$AAE?$AAS@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "L", 0x0, "O", 0x0, "U", 0x0, "D", 0x0, "N", 0x0, "E"
	DCB	0x0, "S", 0x0, "S", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@ONOCHFEP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "B", 0x0, "U", 0x0, "T", 0x0, "T", 0x0, "O", 0x0, "N"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LBKFNEJB@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAO?$AAO?$AAL?$AAE?$AAA?$AAN@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "B", 0x0, "O", 0x0, "O", 0x0, "L", 0x0, "E", 0x0, "A"
	DCB	0x0, "N", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@JCFBIPAK@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAL?$AAI?$AAD?$AAE?$AAR?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "S", 0x0, "L", 0x0, "I", 0x0, "D", 0x0, "E", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@BEPOGKNO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAQ?$AAS?$AAO?$AAU?$AAN?$AAD?$AAP@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "Q", 0x0, "S", 0x0, "O", 0x0, "U", 0x0, "N", 0x0, "D"
	DCB	0x0, "P", 0x0, "A", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@HNKLKPNJ@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAA?$AAN?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "P", 0x0, "A", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@PPIBPMLH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAU?$AAN?$AAS?$AAI?$AAG?$AAN?$AAE@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "U", 0x0, "N", 0x0, "S", 0x0, "I", 0x0, "G", 0x0, "N"
	DCB	0x0, "E", 0x0, "D", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PAIJNMCC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "S", 0x0, "I", 0x0, "G", 0x0, "N", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@KPFLKHEG@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAE?$AAR?$AAC?$AAE?$AAN?$AAT@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "P", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "E", 0x0, "N"
	DCB	0x0, "T", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@FDJLOIGD@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAD?$AAE?$AAC?$AAI?$AAB?$AAE?$AAL@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "C", 0x0, "I", 0x0, "B", 0x0, "E"
	DCB	0x0, "L", 0x0, "S", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@CIONLEIK@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAU?$AAN?$AAS?$AAI?$AAG?$AAN?$AAE@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "U", 0x0, "N", 0x0, "S", 0x0, "I", 0x0, "G", 0x0, "N"
	DCB	0x0, "E", 0x0, "D", 0x0, "M", 0x0, "E", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@KIDDBONI@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AAM@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "S", 0x0, "I", 0x0, "G", 0x0, "N", 0x0, "E", 0x0, "D"
	DCB	0x0, "M", 0x0, "E", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@EBKFDDEH@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAP?$AAE?$AAA?$AAK?$AAM?$AAE?$AAT@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "P", 0x0, "E", 0x0, "A", 0x0, "K", 0x0, "M", 0x0, "E"
	DCB	0x0, "T", 0x0, "E", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@DKIPIFCO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAO?$AAO?$AAL?$AAE?$AAA?$AAN@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "B", 0x0, "O", 0x0, "O", 0x0, "L", 0x0, "E", 0x0, "A"
	DCB	0x0, "N", 0x0, "M", 0x0, "E", 0x0, "T", 0x0, "E", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@KGOHBNDE@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAS?$AAI?$AAN?$AAG?$AAL?$AAE?$AAS@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "S", 0x0, "I", 0x0, "N", 0x0, "G", 0x0, "L", 0x0, "E"
	DCB	0x0, "S", 0x0, "E", 0x0, "L", 0x0, "E", 0x0, "C", 0x0, "T"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@HHCAMDON@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAX?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "M", 0x0, "U", 0x0, "X", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@ECHLHCDJ@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAU?$AAL?$AAT?$AAI?$AAP?$AAL@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "M", 0x0, "U", 0x0, "L", 0x0, "T", 0x0, "I", 0x0, "P"
	DCB	0x0, "L", 0x0, "E", 0x0, "S", 0x0, "E", 0x0, "L", 0x0, "E"
	DCB	0x0, "C", 0x0, "T", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OPBKEMFB@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAM?$AAI?$AAX?$AAE?$AAR?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "M", 0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@BGMJCECN@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "V", 0x0, "O", 0x0, "L", 0x0, "U", 0x0, "M", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@CECHMMMP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAT?$AAR?$AAE?$AAB?$AAL?$AAE?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "T", 0x0, "R", 0x0, "E", 0x0, "B", 0x0, "L", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@KGELIMMP@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAF?$AAA?$AAD?$AAE?$AAR?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "F", 0x0, "A", 0x0, "D", 0x0, "E", 0x0, "R", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@NLNANFDC@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAE?$AAQ?$AAU?$AAA?$AAL?$AAI?$AAZ@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "E", 0x0, "Q", 0x0, "U", 0x0, "A", 0x0, "L", 0x0, "I"
	DCB	0x0, "Z", 0x0, "E", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@FDDIFNFI@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAB?$AAA?$AAS?$AAS?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "B", 0x0, "A", 0x0, "S", 0x0, "S", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@IAIECAKO@?$AAM?$AAI?$AAX?$AAE?$AAR?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAT?$AAY?$AAP?$AAE?$AA_?$AAC?$AAU?$AAS?$AAT?$AAO?$AAM?$AA?$AA@| DCB "M"
	DCB	0x0, "I", 0x0, "X", 0x0, "E", 0x0, "R", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "U", 0x0, "S", 0x0, "T", 0x0, "O", 0x0, "M"
	DCB	0x0, 0x0, 0x0				; `string'
	EXPORT	|??_C@_1BE@ELICABCK@?$AA?$DM?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?COMPTYPE@@YAPAGK@Z|			; COMPTYPE

  00000			 AREA	 |.pdata|, PDATA
|$T36509| DCD	|$LN9@COMPTYPE|
	DCD	0x40002804
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\wavedev2\mixerdrv.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@ELICABCK@?$AA?$DM?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$DO?$AA?$AA@| DCB "<"
	DCB	0x0, "u", 0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w"
	DCB	0x0, "n", 0x0, ">", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?COMPTYPE@@YAPAGK@Z| PROC		; COMPTYPE

; 107  : {

  00000		 |$LN9@COMPTYPE|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36506|

; 108  :     int Index;
; 109  : 
; 110  :     for (Index = 0; Index < NELEMS(ctype_table); Index++)

  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]
  00018	ea000002	 b           |$LN4@COMPTYPE|
  0001c		 |$LN3@COMPTYPE|
  0001c	e59d3000	 ldr         r3, [sp]
  00020	e2833001	 add         r3, r3, #1
  00024	e58d3000	 str         r3, [sp]
  00028		 |$LN4@COMPTYPE|
  00028	e59d3000	 ldr         r3, [sp]
  0002c	e353001e	 cmp         r3, #0x1E
  00030	2a000012	 bcs         |$LN2@COMPTYPE|

; 111  :     {
; 112  :         if (ctype_table[Index].val == dwValue)

  00034	e59d1000	 ldr         r1, [sp]
  00038	e3a03008	 mov         r3, #8
  0003c	e0020391	 mul         r2, r1, r3
  00040	e59f3054	 ldr         r3, [pc, #0x54]
  00044	e0833002	 add         r3, r3, r2
  00048	e5932000	 ldr         r2, [r3]
  0004c	e59d3010	 ldr         r3, [sp, #0x10]
  00050	e1520003	 cmp         r2, r3
  00054	1a000008	 bne         |$LN1@COMPTYPE|

; 113  :         {
; 114  :             return ctype_table[Index].str;

  00058	e59d1000	 ldr         r1, [sp]
  0005c	e3a03008	 mov         r3, #8
  00060	e0020391	 mul         r2, r1, r3
  00064	e59f3030	 ldr         r3, [pc, #0x30]
  00068	e0833002	 add         r3, r3, r2
  0006c	e2833004	 add         r3, r3, #4
  00070	e5933000	 ldr         r3, [r3]
  00074	e58d3004	 str         r3, [sp, #4]
  00078	ea000002	 b           |$LN5@COMPTYPE|
  0007c		 |$LN1@COMPTYPE|

; 115  :         }
; 116  :     }

  0007c	eaffffe6	 b           |$LN3@COMPTYPE|
  00080		 |$LN2@COMPTYPE|

; 117  :     return TEXT("<unknown>");

  00080	e59f3010	 ldr         r3, [pc, #0x10]
  00084	e58d3004	 str         r3, [sp, #4]
  00088		 |$LN5@COMPTYPE|

; 118  : 
; 119  : }

  00088	e59d0004	 ldr         r0, [sp, #4]
  0008c	e28dd008	 add         sp, sp, #8
  00090	e89d6000	 ldmia       sp, {sp, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$LN10@COMPTYPE|
  00098		 |$LN11@COMPTYPE|
  00098	00000000	 DCD         |??_C@_1BE@ELICABCK@?$AA?$DM?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$DO?$AA?$AA@|
  0009c		 |$LN12@COMPTYPE|
  0009c	00000000	 DCD         |?ctype_table@@3PAUMMSYSCODE@@A|
  000a0		 |$M36507|

			 ENDP  ; |?COMPTYPE@@YAPAGK@Z|, COMPTYPE

	EXPORT	|?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z| ; LookupMxLine

  00008			 AREA	 |.pdata|, PDATA
|$T36518| DCD	|$LN9@LookupMxLi|
	DCD	0x40002704
; Function compile flags: /Odtp

  000a0			 AREA	 |.text|, CODE, ARM

  000a0		 |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z| PROC ; LookupMxLine

; 243  : {

  000a0		 |$LN9@LookupMxLi|
  000a0	e1a0c00d	 mov         r12, sp
  000a4	e92d0001	 stmdb       sp!, {r0}
  000a8	e92d5000	 stmdb       sp!, {r12, lr}
  000ac	e24dd008	 sub         sp, sp, #8
  000b0		 |$M36515|

; 244  :     // scan for mixer line
; 245  :     int Index;
; 246  :     for (Index = 0; Index < nlines; Index++)

  000b0	e3a03000	 mov         r3, #0
  000b4	e58d3000	 str         r3, [sp]
  000b8	ea000002	 b           |$LN4@LookupMxLi|
  000bc		 |$LN3@LookupMxLi|
  000bc	e59d3000	 ldr         r3, [sp]
  000c0	e2833001	 add         r3, r3, #1
  000c4	e58d3000	 str         r3, [sp]
  000c8		 |$LN4@LookupMxLi|
  000c8	e59d3000	 ldr         r3, [sp]
  000cc	e3530003	 cmp         r3, #3
  000d0	aa000012	 bge         |$LN2@LookupMxLi|

; 247  :     {
; 248  :         if (g_mixerline[Index].usLineID == usLineID)

  000d4	e59d1000	 ldr         r1, [sp]
  000d8	e3a03024	 mov         r3, #0x24
  000dc	e0020391	 mul         r2, r1, r3
  000e0	e59f3050	 ldr         r3, [pc, #0x50]
  000e4	e0833002	 add         r3, r3, r2
  000e8	e2833014	 add         r3, r3, #0x14
  000ec	e1d330b0	 ldrh        r3, [r3]
  000f0	e1a02003	 mov         r2, r3
  000f4	e1dd31b0	 ldrh        r3, [sp, #0x10]
  000f8	e1520003	 cmp         r2, r3
  000fc	1a000006	 bne         |$LN1@LookupMxLi|

; 249  :         {
; 250  :             return &g_mixerline[Index];

  00100	e59d1000	 ldr         r1, [sp]
  00104	e3a03024	 mov         r3, #0x24
  00108	e0020391	 mul         r2, r1, r3
  0010c	e59f3024	 ldr         r3, [pc, #0x24]
  00110	e0833002	 add         r3, r3, r2
  00114	e58d3004	 str         r3, [sp, #4]
  00118	ea000002	 b           |$LN5@LookupMxLi|
  0011c		 |$LN1@LookupMxLi|

; 251  :         }
; 252  :     }

  0011c	eaffffe6	 b           |$LN3@LookupMxLi|
  00120		 |$LN2@LookupMxLi|

; 253  :     return NULL;

  00120	e3a03000	 mov         r3, #0
  00124	e58d3004	 str         r3, [sp, #4]
  00128		 |$LN5@LookupMxLi|

; 254  : }

  00128	e59d0004	 ldr         r0, [sp, #4]
  0012c	e28dd008	 add         sp, sp, #8
  00130	e89d6000	 ldmia       sp, {sp, lr}
  00134	e12fff1e	 bx          lr
  00138		 |$LN10@LookupMxLi|
  00138		 |$LN11@LookupMxLi|
  00138	00000000	 DCD         |g_mixerline|
  0013c		 |$M36516|

			 ENDP  ; |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|, LookupMxLine

	EXPORT	|??_C@_1CI@HHNFIEHC@?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?PerformMixerCallbacks@@YAXKK@Z|	; PerformMixerCallbacks
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00004			 AREA	 |.bss|, NOINIT
|g_pHead| %	0x4

  00010			 AREA	 |.pdata|, PDATA
|$T36528| DCD	|$LN11@PerformMix|
	DCD	0x40003304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@HHNFIEHC@?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "i", 0x0, "x", 0x0, "e", 0x0, "r", 0x0, "C", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "b", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0013c			 AREA	 |.text|, CODE, ARM

  0013c		 |?PerformMixerCallbacks@@YAXKK@Z| PROC	; PerformMixerCallbacks

; 764  : {

  0013c		 |$LN11@PerformMix|
  0013c	e1a0c00d	 mov         r12, sp
  00140	e92d0003	 stmdb       sp!, {r0, r1}
  00144	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00148	e24dd010	 sub         sp, sp, #0x10
  0014c		 |$M36525|

; 765  :     PMIXER_CALLBACK pCurr;
; 766  :     for (pCurr = g_pHead; pCurr != NULL; pCurr = pCurr->pNext)

  0014c	e59f30b0	 ldr         r3, [pc, #0xB0]
  00150	e5933000	 ldr         r3, [r3]
  00154	e58d3004	 str         r3, [sp, #4]
  00158	ea000003	 b           |$LN4@PerformMix|
  0015c		 |$LN3@PerformMix|
  0015c	e59d3004	 ldr         r3, [sp, #4]
  00160	e2833008	 add         r3, r3, #8
  00164	e5933000	 ldr         r3, [r3]
  00168	e58d3004	 str         r3, [sp, #4]
  0016c		 |$LN4@PerformMix|
  0016c	e59d3004	 ldr         r3, [sp, #4]
  00170	e3530000	 cmp         r3, #0
  00174	0a00001d	 beq         |$LN2@PerformMix|

; 767  :     {
; 768  :         if (pCurr->pfnCallback != NULL)

  00178	e59d3004	 ldr         r3, [sp, #4]
  0017c	e2833004	 add         r3, r3, #4
  00180	e5933000	 ldr         r3, [r3]
  00184	e3530000	 cmp         r3, #0
  00188	0a000017	 beq         |$LN1@PerformMix|

; 769  :         {
; 770  :             DEBUGMSG(ZONE_HWMIXER, (TEXT("MixerCallback(%d)\r\n"), dwId));

  0018c	e59f306c	 ldr         r3, [pc, #0x6C]
  00190	e5933440	 ldr         r3, [r3, #0x440]
  00194	e3130004	 tst         r3, #4
  00198	0a000005	 beq         |$LN7@PerformMix|
  0019c	e59d1020	 ldr         r1, [sp, #0x20]
  001a0	e59f0054	 ldr         r0, [pc, #0x54]
  001a4	eb000000	 bl          NKDbgPrintfW
  001a8	e3a03001	 mov         r3, #1
  001ac	e58d300c	 str         r3, [sp, #0xC]
  001b0	ea000001	 b           |$LN8@PerformMix|
  001b4		 |$LN7@PerformMix|
  001b4	e3a03000	 mov         r3, #0
  001b8	e58d300c	 str         r3, [sp, #0xC]
  001bc		 |$LN8@PerformMix|

; 771  :             pCurr->pfnCallback(pCurr->hmx, dwMessage, 0, dwId, 0);

  001bc	e3a03000	 mov         r3, #0
  001c0	e58d3000	 str         r3, [sp]
  001c4	e59d3020	 ldr         r3, [sp, #0x20]
  001c8	e3a02000	 mov         r2, #0
  001cc	e59d101c	 ldr         r1, [sp, #0x1C]
  001d0	e59d0004	 ldr         r0, [sp, #4]
  001d4	e5900000	 ldr         r0, [r0]
  001d8	e59de004	 ldr         lr, [sp, #4]
  001dc	e28ee004	 add         lr, lr, #4
  001e0	e59e4000	 ldr         r4, [lr]
  001e4	e1a0e00f	 mov         lr, pc
  001e8	e12fff14	 bx          r4
  001ec		 |$LN1@PerformMix|

; 772  :         }

  001ec	eaffffda	 b           |$LN3@PerformMix|
  001f0		 |$LN2@PerformMix|

; 773  :     }
; 774  : }

  001f0	e28dd010	 add         sp, sp, #0x10
  001f4	e89d6010	 ldmia       sp, {r4, sp, lr}
  001f8	e12fff1e	 bx          lr
  001fc		 |$LN12@PerformMix|
  001fc		 |$LN13@PerformMix|
  001fc	00000000	 DCD         |??_C@_1CI@HHNFIEHC@?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00200		 |$LN14@PerformMix|
  00200	00000000	 DCD         |dpCurSettings|
  00204		 |$LN15@PerformMix|
  00204	00000000	 DCD         |g_pHead|
  00208		 |$M36526|

			 ENDP  ; |?PerformMixerCallbacks@@YAXKK@Z|, PerformMixerCallbacks

	EXPORT	|??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?wdev_MXDM_GETDEVCAPS@@YAKPAUtagMIXERCAPS@@K@Z| ; wdev_MXDM_GETDEVCAPS
	IMPORT	|wcscpy|

  00018			 AREA	 |.pdata|, PDATA
|$T36538| DCD	|$LN5@wdev_MXDM_|
	DCD	0x40003e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@| DCB "A"
	DCB	0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o", 0x0, " ", 0x0, "M"
	DCB	0x0, "i", 0x0, "x", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00208			 AREA	 |.text|, CODE, ARM

  00208		 |?wdev_MXDM_GETDEVCAPS@@YAKPAUtagMIXERCAPS@@K@Z| PROC ; wdev_MXDM_GETDEVCAPS

; 778  : {

  00208		 |$LN5@wdev_MXDM_|
  00208	e1a0c00d	 mov         r12, sp
  0020c	e92d0003	 stmdb       sp!, {r0, r1}
  00210	e92d5000	 stmdb       sp!, {r12, lr}
  00214	e24dd004	 sub         sp, sp, #4
  00218		 |$M36535|

; 779  : 	UNREFERENCED_PARAMETER(dwSize);
; 780  : 
; 781  :     pCaps->wMid = MM_MICROSOFT;

  00218	e59d200c	 ldr         r2, [sp, #0xC]
  0021c	e3a03001	 mov         r3, #1
  00220	e5c23000	 strb        r3, [r2]
  00224	e1a03423	 mov         r3, r3, lsr #8
  00228	e5c23001	 strb        r3, [r2, #1]

; 782  :     pCaps->wPid = MM_MSFT_WSS_MIXER;

  0022c	e59d300c	 ldr         r3, [sp, #0xC]
  00230	e2832002	 add         r2, r3, #2
  00234	e3a03011	 mov         r3, #0x11
  00238	e5c23000	 strb        r3, [r2]
  0023c	e1a03423	 mov         r3, r3, lsr #8
  00240	e5c23001	 strb        r3, [r2, #1]

; 783  :     wcscpy(pCaps->szPname, DEVICE_NAME);

  00244	e59f10b0	 ldr         r1, [pc, #0xB0]
  00248	e59d300c	 ldr         r3, [sp, #0xC]
  0024c	e2830008	 add         r0, r3, #8
  00250	eb000000	 bl          wcscpy

; 784  :     pCaps->vDriverVersion = DRIVER_VERSION;

  00254	e59d300c	 ldr         r3, [sp, #0xC]
  00258	e2831004	 add         r1, r3, #4
  0025c	e3a03c01	 mov         r3, #1, 24
  00260	e5c13000	 strb        r3, [r1]
  00264	e1a02423	 mov         r2, r3, lsr #8
  00268	e1a03002	 mov         r3, r2
  0026c	e5c13001	 strb        r3, [r1, #1]
  00270	e1a02422	 mov         r2, r2, lsr #8
  00274	e1a03002	 mov         r3, r2
  00278	e5c13002	 strb        r3, [r1, #2]
  0027c	e1a03422	 mov         r3, r2, lsr #8
  00280	e5c13003	 strb        r3, [r1, #3]

; 785  :     pCaps->cDestinations = NELEMS(g_dst_lines);

  00284	e59d300c	 ldr         r3, [sp, #0xC]
  00288	e283104c	 add         r1, r3, #0x4C
  0028c	e3a03002	 mov         r3, #2
  00290	e5c13000	 strb        r3, [r1]
  00294	e1a02423	 mov         r2, r3, lsr #8
  00298	e1a03002	 mov         r3, r2
  0029c	e5c13001	 strb        r3, [r1, #1]
  002a0	e1a02422	 mov         r2, r2, lsr #8
  002a4	e1a03002	 mov         r3, r2
  002a8	e5c13002	 strb        r3, [r1, #2]
  002ac	e1a03422	 mov         r3, r2, lsr #8
  002b0	e5c13003	 strb        r3, [r1, #3]

; 786  :     pCaps->fdwSupport = 0;

  002b4	e59d300c	 ldr         r3, [sp, #0xC]
  002b8	e2831048	 add         r1, r3, #0x48
  002bc	e3a03000	 mov         r3, #0
  002c0	e5c13000	 strb        r3, [r1]
  002c4	e1a02423	 mov         r2, r3, lsr #8
  002c8	e1a03002	 mov         r3, r2
  002cc	e5c13001	 strb        r3, [r1, #1]
  002d0	e1a02422	 mov         r2, r2, lsr #8
  002d4	e1a03002	 mov         r3, r2
  002d8	e5c13002	 strb        r3, [r1, #2]
  002dc	e1a03422	 mov         r3, r2, lsr #8
  002e0	e5c13003	 strb        r3, [r1, #3]

; 787  : 
; 788  :     return MMSYSERR_NOERROR;

  002e4	e3a03000	 mov         r3, #0
  002e8	e58d3000	 str         r3, [sp]

; 789  : }

  002ec	e59d0000	 ldr         r0, [sp]
  002f0	e28dd004	 add         sp, sp, #4
  002f4	e89d6000	 ldmia       sp, {sp, lr}
  002f8	e12fff1e	 bx          lr
  002fc		 |$LN6@wdev_MXDM_|
  002fc		 |$LN7@wdev_MXDM_|
  002fc	00000000	 DCD         |??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@|
  00300		 |$M36536|

			 ENDP  ; |?wdev_MXDM_GETDEVCAPS@@YAKPAUtagMIXERCAPS@@K@Z|, wdev_MXDM_GETDEVCAPS

	EXPORT	|??_C@_1FE@BDJOHFBK@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAw?$AAd?$AAe?$AAv?$AA_?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?3?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@| [ DATA ] ; `string'
	EXPORT	|?wdev_MXDM_OPEN@@YAKPAKPAUtMIXEROPENDESC@@K@Z| ; wdev_MXDM_OPEN
	IMPORT	|LocalAlloc|

  00020			 AREA	 |.pdata|, PDATA
|$T36548| DCD	|$LN10@wdev_MXDM_@2|
	DCD	0x40005304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@BDJOHFBK@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAw?$AAd?$AAe?$AAv?$AA_?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?3?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@| DCB "["
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "]"
	DCB	0x0, " ", 0x0, """", 0x0, "w", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "_", 0x0, "M", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, ":", 0x0, " "
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, """", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00300			 AREA	 |.text|, CODE, ARM

  00300		 |?wdev_MXDM_OPEN@@YAKPAKPAUtMIXEROPENDESC@@K@Z| PROC ; wdev_MXDM_OPEN

; 793  : {

  00300		 |$LN10@wdev_MXDM_@2|
  00300	e1a0c00d	 mov         r12, sp
  00304	e92d0007	 stmdb       sp!, {r0 - r2}
  00308	e92d5000	 stmdb       sp!, {r12, lr}
  0030c	e24dd010	 sub         sp, sp, #0x10
  00310		 |$M36545|

; 794  :     PMIXER_CALLBACK pNew;
; 795  :     pNew = (PMIXER_CALLBACK) LocalAlloc(LMEM_FIXED, sizeof(MIXER_CALLBACK));

  00310	e3a0100c	 mov         r1, #0xC
  00314	e3a00000	 mov         r0, #0
  00318	eb000000	 bl          LocalAlloc
  0031c	e58d0008	 str         r0, [sp, #8]
  00320	e59d3008	 ldr         r3, [sp, #8]
  00324	e58d3000	 str         r3, [sp]

; 796  :     if (pNew == NULL)

  00328	e59d3000	 ldr         r3, [sp]
  0032c	e3530000	 cmp         r3, #0
  00330	1a00000d	 bne         |$LN3@wdev_MXDM_@2|

; 797  :     {
; 798  :         ERRMSG("wdev_MXDM_OPEN: out of memory");

  00334	e59f310c	 ldr         r3, [pc, #0x10C]
  00338	e5933440	 ldr         r3, [r3, #0x440]
  0033c	e3130902	 tst         r3, #2, 18
  00340	0a000004	 beq         |$LN6@wdev_MXDM_@2|
  00344	e59f00f8	 ldr         r0, [pc, #0xF8]
  00348	eb000000	 bl          NKDbgPrintfW
  0034c	e3a03001	 mov         r3, #1
  00350	e58d300c	 str         r3, [sp, #0xC]
  00354	ea000001	 b           |$LN7@wdev_MXDM_@2|
  00358		 |$LN6@wdev_MXDM_@2|
  00358	e3a03000	 mov         r3, #0
  0035c	e58d300c	 str         r3, [sp, #0xC]
  00360		 |$LN7@wdev_MXDM_@2|

; 799  :         return MMSYSERR_NOMEM;

  00360	e3a03007	 mov         r3, #7
  00364	e58d3004	 str         r3, [sp, #4]
  00368	ea000030	 b           |$LN4@wdev_MXDM_@2|
  0036c		 |$LN3@wdev_MXDM_@2|

; 800  :     }
; 801  : 
; 802  :     pNew->hmx = (DWORD) pMOD->hmx;

  0036c	e59d101c	 ldr         r1, [sp, #0x1C]
  00370	e5d13003	 ldrb        r3, [r1, #3]
  00374	e1a02403	 mov         r2, r3, lsl #8
  00378	e5d13002	 ldrb        r3, [r1, #2]
  0037c	e1833002	 orr         r3, r3, r2
  00380	e1a02403	 mov         r2, r3, lsl #8
  00384	e5d13001	 ldrb        r3, [r1, #1]
  00388	e1833002	 orr         r3, r3, r2
  0038c	e1a02403	 mov         r2, r3, lsl #8
  00390	e5d13000	 ldrb        r3, [r1]
  00394	e1832002	 orr         r2, r3, r2
  00398	e59d3000	 ldr         r3, [sp]
  0039c	e5832000	 str         r2, [r3]

; 803  :     if (dwFlags & CALLBACK_FUNCTION)

  003a0	e59d3020	 ldr         r3, [sp, #0x20]
  003a4	e3130803	 tst         r3, #3, 16
  003a8	0a00000f	 beq         |$LN2@wdev_MXDM_@2|

; 804  :     {
; 805  :         pNew->pfnCallback = (PFNDRIVERCALL) pMOD->dwCallback;

  003ac	e59d301c	 ldr         r3, [sp, #0x1C]
  003b0	e2830008	 add         r0, r3, #8
  003b4	e59d3000	 ldr         r3, [sp]
  003b8	e2831004	 add         r1, r3, #4
  003bc	e1d030d3	 ldrsb       r3, [r0, #3]
  003c0	e1a02403	 mov         r2, r3, lsl #8
  003c4	e5d03002	 ldrb        r3, [r0, #2]
  003c8	e1833002	 orr         r3, r3, r2
  003cc	e1a02403	 mov         r2, r3, lsl #8
  003d0	e5d03001	 ldrb        r3, [r0, #1]
  003d4	e1833002	 orr         r3, r3, r2
  003d8	e1a02403	 mov         r2, r3, lsl #8
  003dc	e5d03000	 ldrb        r3, [r0]
  003e0	e1833002	 orr         r3, r3, r2
  003e4	e5813000	 str         r3, [r1]

; 806  :     }
; 807  :     else

  003e8	ea000003	 b           |$LN1@wdev_MXDM_@2|
  003ec		 |$LN2@wdev_MXDM_@2|

; 808  :     {
; 809  :         pNew->pfnCallback = NULL;

  003ec	e59d3000	 ldr         r3, [sp]
  003f0	e2832004	 add         r2, r3, #4
  003f4	e3a03000	 mov         r3, #0
  003f8	e5823000	 str         r3, [r2]
  003fc		 |$LN1@wdev_MXDM_@2|

; 810  :     }
; 811  :     pNew->pNext = g_pHead;

  003fc	e59d3000	 ldr         r3, [sp]
  00400	e2832008	 add         r2, r3, #8
  00404	e59f3034	 ldr         r3, [pc, #0x34]
  00408	e5933000	 ldr         r3, [r3]
  0040c	e5823000	 str         r3, [r2]

; 812  :     g_pHead = pNew;

  00410	e59d2000	 ldr         r2, [sp]
  00414	e59f3024	 ldr         r3, [pc, #0x24]
  00418	e5832000	 str         r2, [r3]

; 813  :     *phMixer = (DWORD) pNew;

  0041c	e59d2000	 ldr         r2, [sp]
  00420	e59d3018	 ldr         r3, [sp, #0x18]
  00424	e5832000	 str         r2, [r3]

; 814  : 
; 815  :     return MMSYSERR_NOERROR;

  00428	e3a03000	 mov         r3, #0
  0042c	e58d3004	 str         r3, [sp, #4]
  00430		 |$LN4@wdev_MXDM_@2|

; 816  : }

  00430	e59d0004	 ldr         r0, [sp, #4]
  00434	e28dd010	 add         sp, sp, #0x10
  00438	e89d6000	 ldmia       sp, {sp, lr}
  0043c	e12fff1e	 bx          lr
  00440		 |$LN11@wdev_MXDM_@2|
  00440		 |$LN12@wdev_MXDM_@2|
  00440	00000000	 DCD         |g_pHead|
  00444		 |$LN13@wdev_MXDM_@2|
  00444	00000000	 DCD         |??_C@_1FE@BDJOHFBK@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAw?$AAd?$AAe?$AAv?$AA_?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?3?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@|
  00448		 |$LN14@wdev_MXDM_@2|
  00448	00000000	 DCD         |dpCurSettings|
  0044c		 |$M36546|

			 ENDP  ; |?wdev_MXDM_OPEN@@YAKPAKPAUtMIXEROPENDESC@@K@Z|, wdev_MXDM_OPEN

	EXPORT	|?wdev_MXDM_CLOSE@@YAKK@Z|		; wdev_MXDM_CLOSE
	IMPORT	|LocalFree|

  00028			 AREA	 |.pdata|, PDATA
|$T36558| DCD	|$LN11@wdev_MXDM_@3|
	DCD	0x40003104
; Function compile flags: /Odtp

  0044c			 AREA	 |.text|, CODE, ARM

  0044c		 |?wdev_MXDM_CLOSE@@YAKK@Z| PROC	; wdev_MXDM_CLOSE

; 820  : {

  0044c		 |$LN11@wdev_MXDM_@3|
  0044c	e1a0c00d	 mov         r12, sp
  00450	e92d0001	 stmdb       sp!, {r0}
  00454	e92d5000	 stmdb       sp!, {r12, lr}
  00458	e24dd00c	 sub         sp, sp, #0xC
  0045c		 |$M36555|

; 821  :     PMIXER_CALLBACK pCurr, pPrev;
; 822  :     pPrev = NULL;

  0045c	e3a03000	 mov         r3, #0
  00460	e58d3000	 str         r3, [sp]

; 823  :     for (pCurr = g_pHead; pCurr != NULL; pCurr = pCurr->pNext)

  00464	e59f30a0	 ldr         r3, [pc, #0xA0]
  00468	e5933000	 ldr         r3, [r3]
  0046c	e58d3004	 str         r3, [sp, #4]
  00470	ea000003	 b           |$LN6@wdev_MXDM_@3|
  00474		 |$LN5@wdev_MXDM_@3|
  00474	e59d3004	 ldr         r3, [sp, #4]
  00478	e2833008	 add         r3, r3, #8
  0047c	e5933000	 ldr         r3, [r3]
  00480	e58d3004	 str         r3, [sp, #4]
  00484		 |$LN6@wdev_MXDM_@3|
  00484	e59d3004	 ldr         r3, [sp, #4]
  00488	e3530000	 cmp         r3, #0
  0048c	0a000018	 beq         |$LN4@wdev_MXDM_@3|

; 824  :     {
; 825  :         if (pCurr == (PMIXER_CALLBACK) dwHandle)

  00490	e59d2004	 ldr         r2, [sp, #4]
  00494	e59d3014	 ldr         r3, [sp, #0x14]
  00498	e1520003	 cmp         r2, r3
  0049c	1a000011	 bne         |$LN3@wdev_MXDM_@3|

; 826  :         {
; 827  :             if (pPrev == NULL)

  004a0	e59d3000	 ldr         r3, [sp]
  004a4	e3530000	 cmp         r3, #0
  004a8	1a000005	 bne         |$LN2@wdev_MXDM_@3|

; 828  :             {
; 829  :                 // we're deleting the first item
; 830  :                 g_pHead = pCurr->pNext;

  004ac	e59d3004	 ldr         r3, [sp, #4]
  004b0	e2833008	 add         r3, r3, #8
  004b4	e5932000	 ldr         r2, [r3]
  004b8	e59f304c	 ldr         r3, [pc, #0x4C]
  004bc	e5832000	 str         r2, [r3]

; 831  :             }
; 832  :             else

  004c0	ea000005	 b           |$LN1@wdev_MXDM_@3|
  004c4		 |$LN2@wdev_MXDM_@3|

; 833  :             {
; 834  :                 pPrev->pNext = pCurr->pNext;

  004c4	e59d3004	 ldr         r3, [sp, #4]
  004c8	e2831008	 add         r1, r3, #8
  004cc	e59d3000	 ldr         r3, [sp]
  004d0	e2832008	 add         r2, r3, #8
  004d4	e5913000	 ldr         r3, [r1]
  004d8	e5823000	 str         r3, [r2]
  004dc		 |$LN1@wdev_MXDM_@3|

; 835  :             }
; 836  :             LocalFree(pCurr);

  004dc	e59d0004	 ldr         r0, [sp, #4]
  004e0	eb000000	 bl          LocalFree

; 837  :             break;

  004e4	ea000002	 b           |$LN4@wdev_MXDM_@3|
  004e8		 |$LN3@wdev_MXDM_@3|

; 838  :         }
; 839  :         pPrev = pCurr;

  004e8	e59d3004	 ldr         r3, [sp, #4]
  004ec	e58d3000	 str         r3, [sp]

; 840  :     }

  004f0	eaffffdf	 b           |$LN5@wdev_MXDM_@3|
  004f4		 |$LN4@wdev_MXDM_@3|

; 841  : 
; 842  :     return MMSYSERR_NOERROR;

  004f4	e3a03000	 mov         r3, #0
  004f8	e58d3008	 str         r3, [sp, #8]

; 843  : }

  004fc	e59d0008	 ldr         r0, [sp, #8]
  00500	e28dd00c	 add         sp, sp, #0xC
  00504	e89d6000	 ldmia       sp, {sp, lr}
  00508	e12fff1e	 bx          lr
  0050c		 |$LN12@wdev_MXDM_@3|
  0050c		 |$LN13@wdev_MXDM_@3|
  0050c	00000000	 DCD         |g_pHead|
  00510		 |$M36556|

			 ENDP  ; |?wdev_MXDM_CLOSE@@YAKK@Z|, wdev_MXDM_CLOSE

	EXPORT	|??_C@_1DM@CHMELAAB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@LHNBJHH@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@DDKINBEJ@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAo?$AAf?$AA?5?$AAt?$AAa?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@MELCAJPL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAo?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@HDKNAFNG@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAq?$AAu?$AAe?$AAr?$AAy?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@PIKBGEIJ@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAT?$AAA?$AAR?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@COFPEFKO@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAC?$AAO?$AAM?$AAP?$AAO?$AAN?$AAE?$AAN?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@LCCLAGKB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@JHFCMAJM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAt?$AA?5?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@IAOAGGKE@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAS?$AAO?$AAU?$AAR?$AAC?$AAE?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@GMMCEECL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAL?$AAI?$AAN?$AAE?$AAI?$AAD?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@BBJIEEAD@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DGPNNKNM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAD?$AAE?$AAS?$AAT?$AAI?$AAN?$AAA?$AAT?$AAI?$AAO?$AAN?$AA?5?$AA?$CF?$AAx?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|?wdev_MXDM_GETLINEINFO@@YAKPAUtMIXERLINE@@K@Z| ; wdev_MXDM_GETLINEINFO

  00030			 AREA	 |.pdata|, PDATA
|$T36608| DCD	|$LN77@wdev_MXDM_@4|
	DCD	0x4002f904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@CHMELAAB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, """"
	DCB	0x0, "%", 0x0, "s", 0x0, """", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@LHNBJHH@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAI@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, " "
	DCB	0x0, "I", 0x0, "D", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@DDKINBEJ@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAo?$AAf?$AA?5?$AAt?$AAa?$AAr@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "e"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "t"
	DCB	0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@MELCAJPL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAo?$AAm@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "e"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "m", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@HDKNAFNG@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAq?$AAu?$AAe?$AAr?$AAy?$AA?5@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@PIKBGEIJ@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAT?$AAA?$AAR?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, " ", 0x0, "T", 0x0, "A"
	DCB	0x0, "R", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@COFPEFKO@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAC?$AAO?$AAM?$AAP?$AAO?$AAN?$AAE?$AAN?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, " ", 0x0, "C", 0x0, "O"
	DCB	0x0, "M", 0x0, "P", 0x0, "O", 0x0, "N", 0x0, "E", 0x0, "N"
	DCB	0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@LCCLAGKB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "o", 0x0, "u", 0x0, "r", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@JHFCMAJM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAt?$AA?5?$AAi@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "n"
	DCB	0x0, "a", 0x0, "l", 0x0, " ", 0x0, "m", 0x0, "i", 0x0, "x"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@IAOAGGKE@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAS?$AAO?$AAU?$AAR?$AAC?$AAE?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, " ", 0x0, "S", 0x0, "O"
	DCB	0x0, "U", 0x0, "R", 0x0, "C", 0x0, "E", 0x0, " ", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@GMMCEECL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAL?$AAI?$AAN?$AAE?$AAI?$AAD?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, " ", 0x0, "L", 0x0, "I"
	DCB	0x0, "N", 0x0, "E", 0x0, "I", 0x0, "D", 0x0, " ", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@BBJIEEAD@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAi?$AAn@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DGPNNKNM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAD?$AAE?$AAS?$AAT?$AAI?$AAN?$AAA?$AAT?$AAI?$AAO?$AAN?$AA?5?$AA?$CF?$AAx?$AA?$AN@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, " ", 0x0, "D", 0x0, "E"
	DCB	0x0, "S", 0x0, "T", 0x0, "I", 0x0, "N", 0x0, "A", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, " ", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00510			 AREA	 |.text|, CODE, ARM

  00510		 |?wdev_MXDM_GETLINEINFO@@YAKPAUtMIXERLINE@@K@Z| PROC ; wdev_MXDM_GETLINEINFO

; 847  : { int Index;

  00510		 |$LN77@wdev_MXDM_@4|
  00510	e1a0c00d	 mov         r12, sp
  00514	e92d0003	 stmdb       sp!, {r0, r1}
  00518	e92d5000	 stmdb       sp!, {r12, lr}
  0051c	e24dd060	 sub         sp, sp, #0x60
  00520		 |$M36605|

; 848  : 
; 849  :     // pDetail is validated by API - points to accessible, properly sized MIXERLINE structure
; 850  : 
; 851  :     // result - assume failure
; 852  :     PMXLINEDESC pFound = NULL;

  00520	e3a03000	 mov         r3, #0
  00524	e58d300c	 str         r3, [sp, #0xC]

; 853  :     MMRESULT mmRet = MIXERR_INVALLINE;

  00528	e3a03b01	 mov         r3, #1, 22
  0052c	e58d3008	 str         r3, [sp, #8]

; 854  :     USHORT usLineID = NOLINE;

  00530	e3a030ff	 mov         r3, #0xFF
  00534	e1cd30b4	 strh        r3, [sp, #4]

; 855  : 
; 856  :     switch (dwFlags & MIXER_GETLINEINFOF_QUERYMASK)

  00538	e59d306c	 ldr         r3, [sp, #0x6C]
  0053c	e203300f	 and         r3, r3, #0xF
  00540	e58d3018	 str         r3, [sp, #0x18]
  00544	e59d3018	 ldr         r3, [sp, #0x18]
  00548	e3530004	 cmp         r3, #4
  0054c	8a00014b	 bhi         |$LN19@wdev_MXDM_@4|
  00550	e59d2018	 ldr         r2, [sp, #0x18]
  00554	e1a03102	 mov         r3, r2, lsl #2
  00558	e083300f	 add         r3, r3, pc
  0055c	e5933004	 ldr         r3, [r3, #4]
  00560	e08ff003	 add         pc, pc, r3
  00564		 |$LN62@wdev_MXDM_@4|
  00564		 |$LN61@wdev_MXDM_@4|
  00564		 |$LN63@wdev_MXDM_@4|
  00564	00000010	 DCD         0x10
  00568		 |$LN64@wdev_MXDM_@4|
  00568	000001f4	 DCD         0x1f4
  0056c		 |$LN65@wdev_MXDM_@4|
  0056c	00000158	 DCD         0x158
  00570		 |$LN66@wdev_MXDM_@4|
  00570	000004b8	 DCD         0x4b8
  00574		 |$LN67@wdev_MXDM_@4|
  00574	000004e8	 DCD         0x4e8
  00578		 |$LN28@wdev_MXDM_@4|

; 857  :     {
; 858  :     case MIXER_GETLINEINFOF_DESTINATION:
; 859  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo DESTINATION %x\r\n"), pDetail->dwDestination));

  00578	e59f3b34	 ldr         r3, [pc, #0xB34]
  0057c	e5933440	 ldr         r3, [r3, #0x440]
  00580	e3130004	 tst         r3, #4
  00584	0a000010	 beq         |$LN33@wdev_MXDM_@4|
  00588	e59d3068	 ldr         r3, [sp, #0x68]
  0058c	e2831004	 add         r1, r3, #4
  00590	e5d13003	 ldrb        r3, [r1, #3]
  00594	e1a02403	 mov         r2, r3, lsl #8
  00598	e5d13002	 ldrb        r3, [r1, #2]
  0059c	e1833002	 orr         r3, r3, r2
  005a0	e1a02403	 mov         r2, r3, lsl #8
  005a4	e5d13001	 ldrb        r3, [r1, #1]
  005a8	e1833002	 orr         r3, r3, r2
  005ac	e1a02403	 mov         r2, r3, lsl #8
  005b0	e5d13000	 ldrb        r3, [r1]
  005b4	e1831002	 orr         r1, r3, r2
  005b8	e59f0b30	 ldr         r0, [pc, #0xB30]
  005bc	eb000000	 bl          NKDbgPrintfW
  005c0	e3a03001	 mov         r3, #1
  005c4	e58d301c	 str         r3, [sp, #0x1C]
  005c8	ea000001	 b           |$LN34@wdev_MXDM_@4|
  005cc		 |$LN33@wdev_MXDM_@4|
  005cc	e3a03000	 mov         r3, #0
  005d0	e58d301c	 str         r3, [sp, #0x1C]
  005d4		 |$LN34@wdev_MXDM_@4|

; 860  :         {
; 861  :             if (pDetail->dwDestination >= NELEMS(g_dst_lines))

  005d4	e59d3068	 ldr         r3, [sp, #0x68]
  005d8	e2831004	 add         r1, r3, #4
  005dc	e5d13003	 ldrb        r3, [r1, #3]
  005e0	e1a02403	 mov         r2, r3, lsl #8
  005e4	e5d13002	 ldrb        r3, [r1, #2]
  005e8	e1833002	 orr         r3, r3, r2
  005ec	e1a02403	 mov         r2, r3, lsl #8
  005f0	e5d13001	 ldrb        r3, [r1, #1]
  005f4	e1833002	 orr         r3, r3, r2
  005f8	e1a02403	 mov         r2, r3, lsl #8
  005fc	e5d13000	 ldrb        r3, [r1]
  00600	e1833002	 orr         r3, r3, r2
  00604	e3530002	 cmp         r3, #2
  00608	3a000019	 bcc         |$LN27@wdev_MXDM_@4|

; 862  :             {
; 863  :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid destination line %d\r\n"), pDetail->dwDestination));

  0060c	e59f3aa0	 ldr         r3, [pc, #0xAA0]
  00610	e5933440	 ldr         r3, [r3, #0x440]
  00614	e3130902	 tst         r3, #2, 18
  00618	0a000010	 beq         |$LN35@wdev_MXDM_@4|
  0061c	e59d3068	 ldr         r3, [sp, #0x68]
  00620	e2831004	 add         r1, r3, #4
  00624	e5d13003	 ldrb        r3, [r1, #3]
  00628	e1a02403	 mov         r2, r3, lsl #8
  0062c	e5d13002	 ldrb        r3, [r1, #2]
  00630	e1833002	 orr         r3, r3, r2
  00634	e1a02403	 mov         r2, r3, lsl #8
  00638	e5d13001	 ldrb        r3, [r1, #1]
  0063c	e1833002	 orr         r3, r3, r2
  00640	e1a02403	 mov         r2, r3, lsl #8
  00644	e5d13000	 ldrb        r3, [r1]
  00648	e1831002	 orr         r1, r3, r2
  0064c	e59f0a90	 ldr         r0, [pc, #0xA90]
  00650	eb000000	 bl          NKDbgPrintfW
  00654	e3a03001	 mov         r3, #1
  00658	e58d3020	 str         r3, [sp, #0x20]
  0065c	ea000001	 b           |$LN36@wdev_MXDM_@4|
  00660		 |$LN35@wdev_MXDM_@4|
  00660	e3a03000	 mov         r3, #0
  00664	e58d3020	 str         r3, [sp, #0x20]
  00668		 |$LN36@wdev_MXDM_@4|

; 864  :                 return MIXERR_INVALLINE;

  00668	e3a03b01	 mov         r3, #1, 22
  0066c	e58d3014	 str         r3, [sp, #0x14]
  00670	ea00028a	 b           |$LN31@wdev_MXDM_@4|
  00674		 |$LN27@wdev_MXDM_@4|

; 865  :             }
; 866  :             usLineID = g_dst_lines[pDetail->dwDestination];

  00674	e59d3068	 ldr         r3, [sp, #0x68]
  00678	e2831004	 add         r1, r3, #4
  0067c	e5d13003	 ldrb        r3, [r1, #3]
  00680	e1a02403	 mov         r2, r3, lsl #8
  00684	e5d13002	 ldrb        r3, [r1, #2]
  00688	e1833002	 orr         r3, r3, r2
  0068c	e1a02403	 mov         r2, r3, lsl #8
  00690	e5d13001	 ldrb        r3, [r1, #1]
  00694	e1833002	 orr         r3, r3, r2
  00698	e1a02403	 mov         r2, r3, lsl #8
  0069c	e5d13000	 ldrb        r3, [r1]
  006a0	e1831002	 orr         r1, r3, r2
  006a4	e3a03002	 mov         r3, #2
  006a8	e0020391	 mul         r2, r1, r3
  006ac	e59f3a2c	 ldr         r3, [pc, #0xA2C]
  006b0	e0833002	 add         r3, r3, r2
  006b4	e1d330b0	 ldrh        r3, [r3]
  006b8	e1cd30b4	 strh        r3, [sp, #4]

; 867  :         }
; 868  :         break;

  006bc	ea0000ff	 b           |$LN29@wdev_MXDM_@4|
  006c0		 |$LN26@wdev_MXDM_@4|

; 869  :     case MIXER_GETLINEINFOF_LINEID:
; 870  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo LINEID %x\r\n"), pDetail->dwLineID));

  006c0	e59f39ec	 ldr         r3, [pc, #0x9EC]
  006c4	e5933440	 ldr         r3, [r3, #0x440]
  006c8	e3130004	 tst         r3, #4
  006cc	0a000010	 beq         |$LN37@wdev_MXDM_@4|
  006d0	e59d3068	 ldr         r3, [sp, #0x68]
  006d4	e283100c	 add         r1, r3, #0xC
  006d8	e5d13003	 ldrb        r3, [r1, #3]
  006dc	e1a02403	 mov         r2, r3, lsl #8
  006e0	e5d13002	 ldrb        r3, [r1, #2]
  006e4	e1833002	 orr         r3, r3, r2
  006e8	e1a02403	 mov         r2, r3, lsl #8
  006ec	e5d13001	 ldrb        r3, [r1, #1]
  006f0	e1833002	 orr         r3, r3, r2
  006f4	e1a02403	 mov         r2, r3, lsl #8
  006f8	e5d13000	 ldrb        r3, [r1]
  006fc	e1831002	 orr         r1, r3, r2
  00700	e59f09e4	 ldr         r0, [pc, #0x9E4]
  00704	eb000000	 bl          NKDbgPrintfW
  00708	e3a03001	 mov         r3, #1
  0070c	e58d3024	 str         r3, [sp, #0x24]
  00710	ea000001	 b           |$LN38@wdev_MXDM_@4|
  00714		 |$LN37@wdev_MXDM_@4|
  00714	e3a03000	 mov         r3, #0
  00718	e58d3024	 str         r3, [sp, #0x24]
  0071c		 |$LN38@wdev_MXDM_@4|

; 871  :         usLineID = (USHORT) pDetail->dwLineID;

  0071c	e59d3068	 ldr         r3, [sp, #0x68]
  00720	e283100c	 add         r1, r3, #0xC
  00724	e5d13003	 ldrb        r3, [r1, #3]
  00728	e1a02403	 mov         r2, r3, lsl #8
  0072c	e5d13002	 ldrb        r3, [r1, #2]
  00730	e1833002	 orr         r3, r3, r2
  00734	e1a02403	 mov         r2, r3, lsl #8
  00738	e5d13001	 ldrb        r3, [r1, #1]
  0073c	e1833002	 orr         r3, r3, r2
  00740	e1a02403	 mov         r2, r3, lsl #8
  00744	e5d13000	 ldrb        r3, [r1]
  00748	e1833002	 orr         r3, r3, r2
  0074c	e1a03803	 mov         r3, r3, lsl #16
  00750	e1a03823	 mov         r3, r3, lsr #16
  00754	e1cd30b4	 strh        r3, [sp, #4]

; 872  :         break;

  00758	ea0000d8	 b           |$LN29@wdev_MXDM_@4|
  0075c		 |$LN25@wdev_MXDM_@4|

; 873  :     case MIXER_GETLINEINFOF_SOURCE:
; 874  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo SOURCE %x %x\r\n"), pDetail->dwDestination, pDetail->dwSource));

  0075c	e59f3950	 ldr         r3, [pc, #0x950]
  00760	e5933440	 ldr         r3, [r3, #0x440]
  00764	e3130004	 tst         r3, #4
  00768	0a00001c	 beq         |$LN39@wdev_MXDM_@4|
  0076c	e59d3068	 ldr         r3, [sp, #0x68]
  00770	e2831008	 add         r1, r3, #8
  00774	e5d13003	 ldrb        r3, [r1, #3]
  00778	e1a02403	 mov         r2, r3, lsl #8
  0077c	e5d13002	 ldrb        r3, [r1, #2]
  00780	e1833002	 orr         r3, r3, r2
  00784	e1a02403	 mov         r2, r3, lsl #8
  00788	e5d13001	 ldrb        r3, [r1, #1]
  0078c	e1833002	 orr         r3, r3, r2
  00790	e1a02403	 mov         r2, r3, lsl #8
  00794	e5d13000	 ldrb        r3, [r1]
  00798	e1832002	 orr         r2, r3, r2
  0079c	e59d3068	 ldr         r3, [sp, #0x68]
  007a0	e2830004	 add         r0, r3, #4
  007a4	e5d03003	 ldrb        r3, [r0, #3]
  007a8	e1a01403	 mov         r1, r3, lsl #8
  007ac	e5d03002	 ldrb        r3, [r0, #2]
  007b0	e1833001	 orr         r3, r3, r1
  007b4	e1a01403	 mov         r1, r3, lsl #8
  007b8	e5d03001	 ldrb        r3, [r0, #1]
  007bc	e1833001	 orr         r3, r3, r1
  007c0	e1a01403	 mov         r1, r3, lsl #8
  007c4	e5d03000	 ldrb        r3, [r0]
  007c8	e1831001	 orr         r1, r3, r1
  007cc	e59f0914	 ldr         r0, [pc, #0x914]
  007d0	eb000000	 bl          NKDbgPrintfW
  007d4	e3a03001	 mov         r3, #1
  007d8	e58d3028	 str         r3, [sp, #0x28]
  007dc	ea000001	 b           |$LN40@wdev_MXDM_@4|
  007e0		 |$LN39@wdev_MXDM_@4|
  007e0	e3a03000	 mov         r3, #0
  007e4	e58d3028	 str         r3, [sp, #0x28]
  007e8		 |$LN40@wdev_MXDM_@4|

; 875  :         {
; 876  :             PMXLINEDESC pLine;
; 877  :             // look up the destination line, then index into it's source table
; 878  :             // to find the indexed source.
; 879  :             if (pDetail->dwDestination >= NELEMS(g_dst_lines))

  007e8	e59d3068	 ldr         r3, [sp, #0x68]
  007ec	e2831004	 add         r1, r3, #4
  007f0	e5d13003	 ldrb        r3, [r1, #3]
  007f4	e1a02403	 mov         r2, r3, lsl #8
  007f8	e5d13002	 ldrb        r3, [r1, #2]
  007fc	e1833002	 orr         r3, r3, r2
  00800	e1a02403	 mov         r2, r3, lsl #8
  00804	e5d13001	 ldrb        r3, [r1, #1]
  00808	e1833002	 orr         r3, r3, r2
  0080c	e1a02403	 mov         r2, r3, lsl #8
  00810	e5d13000	 ldrb        r3, [r1]
  00814	e1833002	 orr         r3, r3, r2
  00818	e3530002	 cmp         r3, #2
  0081c	3a000019	 bcc         |$LN24@wdev_MXDM_@4|

; 880  :             {
; 881  :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid destination line %d\r\n"), pDetail->dwDestination));

  00820	e59f388c	 ldr         r3, [pc, #0x88C]
  00824	e5933440	 ldr         r3, [r3, #0x440]
  00828	e3130902	 tst         r3, #2, 18
  0082c	0a000010	 beq         |$LN41@wdev_MXDM_@4|
  00830	e59d3068	 ldr         r3, [sp, #0x68]
  00834	e2831004	 add         r1, r3, #4
  00838	e5d13003	 ldrb        r3, [r1, #3]
  0083c	e1a02403	 mov         r2, r3, lsl #8
  00840	e5d13002	 ldrb        r3, [r1, #2]
  00844	e1833002	 orr         r3, r3, r2
  00848	e1a02403	 mov         r2, r3, lsl #8
  0084c	e5d13001	 ldrb        r3, [r1, #1]
  00850	e1833002	 orr         r3, r3, r2
  00854	e1a02403	 mov         r2, r3, lsl #8
  00858	e5d13000	 ldrb        r3, [r1]
  0085c	e1831002	 orr         r1, r3, r2
  00860	e59f087c	 ldr         r0, [pc, #0x87C]
  00864	eb000000	 bl          NKDbgPrintfW
  00868	e3a03001	 mov         r3, #1
  0086c	e58d302c	 str         r3, [sp, #0x2C]
  00870	ea000001	 b           |$LN42@wdev_MXDM_@4|
  00874		 |$LN41@wdev_MXDM_@4|
  00874	e3a03000	 mov         r3, #0
  00878	e58d302c	 str         r3, [sp, #0x2C]
  0087c		 |$LN42@wdev_MXDM_@4|

; 882  :                 return MIXERR_INVALLINE;

  0087c	e3a03b01	 mov         r3, #1, 22
  00880	e58d3014	 str         r3, [sp, #0x14]
  00884	ea000205	 b           |$LN31@wdev_MXDM_@4|
  00888		 |$LN24@wdev_MXDM_@4|

; 883  :             }
; 884  :             pLine = LookupMxLine(g_dst_lines[pDetail->dwDestination]);

  00888	e59d3068	 ldr         r3, [sp, #0x68]
  0088c	e2831004	 add         r1, r3, #4
  00890	e5d13003	 ldrb        r3, [r1, #3]
  00894	e1a02403	 mov         r2, r3, lsl #8
  00898	e5d13002	 ldrb        r3, [r1, #2]
  0089c	e1833002	 orr         r3, r3, r2
  008a0	e1a02403	 mov         r2, r3, lsl #8
  008a4	e5d13001	 ldrb        r3, [r1, #1]
  008a8	e1833002	 orr         r3, r3, r2
  008ac	e1a02403	 mov         r2, r3, lsl #8
  008b0	e5d13000	 ldrb        r3, [r1]
  008b4	e1831002	 orr         r1, r3, r2
  008b8	e3a03002	 mov         r3, #2
  008bc	e0020391	 mul         r2, r1, r3
  008c0	e59f3818	 ldr         r3, [pc, #0x818]
  008c4	e0833002	 add         r3, r3, r2
  008c8	e1d300b0	 ldrh        r0, [r3]
  008cc	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  008d0	e58d0030	 str         r0, [sp, #0x30]
  008d4	e59d3030	 ldr         r3, [sp, #0x30]
  008d8	e58d3010	 str         r3, [sp, #0x10]

; 885  :             if (pLine == NULL)

  008dc	e59d3010	 ldr         r3, [sp, #0x10]
  008e0	e3530000	 cmp         r3, #0
  008e4	1a00000d	 bne         |$LN23@wdev_MXDM_@4|

; 886  :             {
; 887  :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: inconsistent internal mixer line table\r\n")));

  008e8	e59f37c4	 ldr         r3, [pc, #0x7C4]
  008ec	e5933440	 ldr         r3, [r3, #0x440]
  008f0	e3130902	 tst         r3, #2, 18
  008f4	0a000004	 beq         |$LN43@wdev_MXDM_@4|
  008f8	e59f07dc	 ldr         r0, [pc, #0x7DC]
  008fc	eb000000	 bl          NKDbgPrintfW
  00900	e3a03001	 mov         r3, #1
  00904	e58d3034	 str         r3, [sp, #0x34]
  00908	ea000001	 b           |$LN44@wdev_MXDM_@4|
  0090c		 |$LN43@wdev_MXDM_@4|
  0090c	e3a03000	 mov         r3, #0
  00910	e58d3034	 str         r3, [sp, #0x34]
  00914		 |$LN44@wdev_MXDM_@4|

; 888  :                 return MMSYSERR_ERROR;

  00914	e3a03001	 mov         r3, #1
  00918	e58d3014	 str         r3, [sp, #0x14]
  0091c	ea0001df	 b           |$LN31@wdev_MXDM_@4|
  00920		 |$LN23@wdev_MXDM_@4|

; 889  :             }
; 890  :             if (pDetail->dwSource >= pLine->ucConnections)

  00920	e59d3068	 ldr         r3, [sp, #0x68]
  00924	e2830008	 add         r0, r3, #8
  00928	e59d3010	 ldr         r3, [sp, #0x10]
  0092c	e2833017	 add         r3, r3, #0x17
  00930	e5d31000	 ldrb        r1, [r3]
  00934	e5d03003	 ldrb        r3, [r0, #3]
  00938	e1a02403	 mov         r2, r3, lsl #8
  0093c	e5d03002	 ldrb        r3, [r0, #2]
  00940	e1833002	 orr         r3, r3, r2
  00944	e1a02403	 mov         r2, r3, lsl #8
  00948	e5d03001	 ldrb        r3, [r0, #1]
  0094c	e1833002	 orr         r3, r3, r2
  00950	e1a02403	 mov         r2, r3, lsl #8
  00954	e5d03000	 ldrb        r3, [r0]
  00958	e1833002	 orr         r3, r3, r2
  0095c	e1530001	 cmp         r3, r1
  00960	3a000019	 bcc         |$LN22@wdev_MXDM_@4|

; 891  :             {
; 892  :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid source line %d\r\n"), pDetail->dwSource));

  00964	e59f3748	 ldr         r3, [pc, #0x748]
  00968	e5933440	 ldr         r3, [r3, #0x440]
  0096c	e3130902	 tst         r3, #2, 18
  00970	0a000010	 beq         |$LN45@wdev_MXDM_@4|
  00974	e59d3068	 ldr         r3, [sp, #0x68]
  00978	e2831008	 add         r1, r3, #8
  0097c	e5d13003	 ldrb        r3, [r1, #3]
  00980	e1a02403	 mov         r2, r3, lsl #8
  00984	e5d13002	 ldrb        r3, [r1, #2]
  00988	e1833002	 orr         r3, r3, r2
  0098c	e1a02403	 mov         r2, r3, lsl #8
  00990	e5d13001	 ldrb        r3, [r1, #1]
  00994	e1833002	 orr         r3, r3, r2
  00998	e1a02403	 mov         r2, r3, lsl #8
  0099c	e5d13000	 ldrb        r3, [r1]
  009a0	e1831002	 orr         r1, r3, r2
  009a4	e59f072c	 ldr         r0, [pc, #0x72C]
  009a8	eb000000	 bl          NKDbgPrintfW
  009ac	e3a03001	 mov         r3, #1
  009b0	e58d3038	 str         r3, [sp, #0x38]
  009b4	ea000001	 b           |$LN46@wdev_MXDM_@4|
  009b8		 |$LN45@wdev_MXDM_@4|
  009b8	e3a03000	 mov         r3, #0
  009bc	e58d3038	 str         r3, [sp, #0x38]
  009c0		 |$LN46@wdev_MXDM_@4|

; 893  :                 return MIXERR_INVALLINE;

  009c0	e3a03b01	 mov         r3, #1, 22
  009c4	e58d3014	 str         r3, [sp, #0x14]
  009c8	ea0001b4	 b           |$LN31@wdev_MXDM_@4|
  009cc		 |$LN22@wdev_MXDM_@4|

; 894  :             }
; 895  :             usLineID = pLine->pSources[pDetail->dwSource];

  009cc	e59d3010	 ldr         r3, [sp, #0x10]
  009d0	e2830010	 add         r0, r3, #0x10
  009d4	e59d3068	 ldr         r3, [sp, #0x68]
  009d8	e2831008	 add         r1, r3, #8
  009dc	e5d13003	 ldrb        r3, [r1, #3]
  009e0	e1a02403	 mov         r2, r3, lsl #8
  009e4	e5d13002	 ldrb        r3, [r1, #2]
  009e8	e1833002	 orr         r3, r3, r2
  009ec	e1a02403	 mov         r2, r3, lsl #8
  009f0	e5d13001	 ldrb        r3, [r1, #1]
  009f4	e1833002	 orr         r3, r3, r2
  009f8	e1a02403	 mov         r2, r3, lsl #8
  009fc	e5d13000	 ldrb        r3, [r1]
  00a00	e1831002	 orr         r1, r3, r2
  00a04	e3a03002	 mov         r3, #2
  00a08	e0020391	 mul         r2, r1, r3
  00a0c	e5903000	 ldr         r3, [r0]
  00a10	e0833002	 add         r3, r3, r2
  00a14	e1d330b0	 ldrh        r3, [r3]
  00a18	e1cd30b4	 strh        r3, [sp, #4]

; 896  :         }
; 897  :         break;

  00a1c	ea000027	 b           |$LN29@wdev_MXDM_@4|
  00a20		 |$LN21@wdev_MXDM_@4|

; 898  :     case MIXER_GETLINEINFOF_COMPONENTTYPE:
; 899  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo COMPONENT\r\n")));

  00a20	e59f368c	 ldr         r3, [pc, #0x68C]
  00a24	e5933440	 ldr         r3, [r3, #0x440]
  00a28	e3130004	 tst         r3, #4
  00a2c	0a000004	 beq         |$LN47@wdev_MXDM_@4|
  00a30	e59f069c	 ldr         r0, [pc, #0x69C]
  00a34	eb000000	 bl          NKDbgPrintfW
  00a38	e3a03001	 mov         r3, #1
  00a3c	e58d303c	 str         r3, [sp, #0x3C]
  00a40	ea000001	 b           |$LN48@wdev_MXDM_@4|
  00a44		 |$LN47@wdev_MXDM_@4|
  00a44	e3a03000	 mov         r3, #0
  00a48	e58d303c	 str         r3, [sp, #0x3C]
  00a4c		 |$LN48@wdev_MXDM_@4|

; 900  :         break;

  00a4c	ea00001b	 b           |$LN29@wdev_MXDM_@4|
  00a50		 |$LN20@wdev_MXDM_@4|

; 901  : 
; 902  :     case MIXER_GETLINEINFOF_TARGETTYPE:
; 903  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo TARGET\r\n")));

  00a50	e59f365c	 ldr         r3, [pc, #0x65C]
  00a54	e5933440	 ldr         r3, [r3, #0x440]
  00a58	e3130004	 tst         r3, #4
  00a5c	0a000004	 beq         |$LN49@wdev_MXDM_@4|
  00a60	e59f0668	 ldr         r0, [pc, #0x668]
  00a64	eb000000	 bl          NKDbgPrintfW
  00a68	e3a03001	 mov         r3, #1
  00a6c	e58d3040	 str         r3, [sp, #0x40]
  00a70	ea000001	 b           |$LN50@wdev_MXDM_@4|
  00a74		 |$LN49@wdev_MXDM_@4|
  00a74	e3a03000	 mov         r3, #0
  00a78	e58d3040	 str         r3, [sp, #0x40]
  00a7c		 |$LN50@wdev_MXDM_@4|

; 904  :         // valid query, but we're not going to form usLineID
; 905  :         break;

  00a7c	ea00000f	 b           |$LN29@wdev_MXDM_@4|
  00a80		 |$LN19@wdev_MXDM_@4|

; 906  :     default:
; 907  :         DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid query %08x\r\n"), dwFlags & MIXER_GETLINEINFOF_QUERYMASK));

  00a80	e59f362c	 ldr         r3, [pc, #0x62C]
  00a84	e5933440	 ldr         r3, [r3, #0x440]
  00a88	e3130902	 tst         r3, #2, 18
  00a8c	0a000006	 beq         |$LN51@wdev_MXDM_@4|
  00a90	e59d306c	 ldr         r3, [sp, #0x6C]
  00a94	e203100f	 and         r1, r3, #0xF
  00a98	e59f062c	 ldr         r0, [pc, #0x62C]
  00a9c	eb000000	 bl          NKDbgPrintfW
  00aa0	e3a03001	 mov         r3, #1
  00aa4	e58d3044	 str         r3, [sp, #0x44]
  00aa8	ea000001	 b           |$LN52@wdev_MXDM_@4|
  00aac		 |$LN51@wdev_MXDM_@4|
  00aac	e3a03000	 mov         r3, #0
  00ab0	e58d3044	 str         r3, [sp, #0x44]
  00ab4		 |$LN52@wdev_MXDM_@4|

; 908  :         return MMSYSERR_INVALPARAM;

  00ab4	e3a0300b	 mov         r3, #0xB
  00ab8	e58d3014	 str         r3, [sp, #0x14]
  00abc	ea000177	 b           |$LN31@wdev_MXDM_@4|
  00ac0		 |$LN29@wdev_MXDM_@4|

; 909  :     }
; 910  : 
; 911  :     switch (dwFlags & MIXER_GETLINEINFOF_QUERYMASK)

  00ac0	e59d306c	 ldr         r3, [sp, #0x6C]
  00ac4	e203300f	 and         r3, r3, #0xF
  00ac8	e58d3048	 str         r3, [sp, #0x48]
  00acc	e59d3048	 ldr         r3, [sp, #0x48]
  00ad0	e3530004	 cmp         r3, #4
  00ad4	8a0000a2	 bhi         |$LN2@wdev_MXDM_@4|
  00ad8	e59d2048	 ldr         r2, [sp, #0x48]
  00adc	e1a03102	 mov         r3, r2, lsl #2
  00ae0	e083300f	 add         r3, r3, pc
  00ae4	e5933004	 ldr         r3, [r3, #4]
  00ae8	e08ff003	 add         pc, pc, r3
  00aec		 |$LN69@wdev_MXDM_@4|
  00aec		 |$LN68@wdev_MXDM_@4|
  00aec		 |$LN70@wdev_MXDM_@4|
  00aec	00000214	 DCD         0x214
  00af0		 |$LN71@wdev_MXDM_@4|
  00af0	00000214	 DCD         0x214
  00af4		 |$LN72@wdev_MXDM_@4|
  00af4	00000214	 DCD         0x214
  00af8		 |$LN73@wdev_MXDM_@4|
  00af8	00000010	 DCD         0x10
  00afc		 |$LN74@wdev_MXDM_@4|
  00afc	00000110	 DCD         0x110
  00b00		 |$LN16@wdev_MXDM_@4|

; 912  :     {
; 913  :     case MIXER_GETLINEINFOF_COMPONENTTYPE:
; 914  :         // scan for line of proper type
; 915  :         for (Index = 0; Index < nlines; Index++)

  00b00	e3a03000	 mov         r3, #0
  00b04	e58d3000	 str         r3, [sp]
  00b08	ea000002	 b           |$LN15@wdev_MXDM_@4|
  00b0c		 |$LN14@wdev_MXDM_@4|
  00b0c	e59d3000	 ldr         r3, [sp]
  00b10	e2833001	 add         r3, r3, #1
  00b14	e58d3000	 str         r3, [sp]
  00b18		 |$LN15@wdev_MXDM_@4|
  00b18	e59d3000	 ldr         r3, [sp]
  00b1c	e3530003	 cmp         r3, #3
  00b20	aa00001b	 bge         |$LN13@wdev_MXDM_@4|

; 916  :         {
; 917  :             if (g_mixerline[Index].dwComponentType == pDetail->dwComponentType)

  00b24	e59d1000	 ldr         r1, [sp]
  00b28	e3a03024	 mov         r3, #0x24
  00b2c	e0020391	 mul         r2, r1, r3
  00b30	e59f358c	 ldr         r3, [pc, #0x58C]
  00b34	e0832002	 add         r2, r3, r2
  00b38	e59d3068	 ldr         r3, [sp, #0x68]
  00b3c	e2830018	 add         r0, r3, #0x18
  00b40	e5921000	 ldr         r1, [r2]
  00b44	e5d03003	 ldrb        r3, [r0, #3]
  00b48	e1a02403	 mov         r2, r3, lsl #8
  00b4c	e5d03002	 ldrb        r3, [r0, #2]
  00b50	e1833002	 orr         r3, r3, r2
  00b54	e1a02403	 mov         r2, r3, lsl #8
  00b58	e5d03001	 ldrb        r3, [r0, #1]
  00b5c	e1833002	 orr         r3, r3, r2
  00b60	e1a02403	 mov         r2, r3, lsl #8
  00b64	e5d03000	 ldrb        r3, [r0]
  00b68	e1833002	 orr         r3, r3, r2
  00b6c	e1510003	 cmp         r1, r3
  00b70	1a000006	 bne         |$LN12@wdev_MXDM_@4|

; 918  :             {
; 919  :                 pFound = &g_mixerline[Index];

  00b74	e59d1000	 ldr         r1, [sp]
  00b78	e3a03024	 mov         r3, #0x24
  00b7c	e0020391	 mul         r2, r1, r3
  00b80	e59f353c	 ldr         r3, [pc, #0x53C]
  00b84	e0833002	 add         r3, r3, r2
  00b88	e58d300c	 str         r3, [sp, #0xC]

; 920  :                 break;

  00b8c	ea000000	 b           |$LN13@wdev_MXDM_@4|
  00b90		 |$LN12@wdev_MXDM_@4|

; 921  :             }
; 922  :         }

  00b90	eaffffdd	 b           |$LN14@wdev_MXDM_@4|
  00b94		 |$LN13@wdev_MXDM_@4|

; 923  : #ifdef DEBUG
; 924  :         if (pFound == NULL)

  00b94	e59d300c	 ldr         r3, [sp, #0xC]
  00b98	e3530000	 cmp         r3, #0
  00b9c	1a000016	 bne         |$LN11@wdev_MXDM_@4|

; 925  :         {
; 926  :             DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: no line of component type %08x\r\n"), pDetail->dwComponentType));

  00ba0	e59f350c	 ldr         r3, [pc, #0x50C]
  00ba4	e5933440	 ldr         r3, [r3, #0x440]
  00ba8	e3130902	 tst         r3, #2, 18
  00bac	0a000010	 beq         |$LN53@wdev_MXDM_@4|
  00bb0	e59d3068	 ldr         r3, [sp, #0x68]
  00bb4	e2831018	 add         r1, r3, #0x18
  00bb8	e5d13003	 ldrb        r3, [r1, #3]
  00bbc	e1a02403	 mov         r2, r3, lsl #8
  00bc0	e5d13002	 ldrb        r3, [r1, #2]
  00bc4	e1833002	 orr         r3, r3, r2
  00bc8	e1a02403	 mov         r2, r3, lsl #8
  00bcc	e5d13001	 ldrb        r3, [r1, #1]
  00bd0	e1833002	 orr         r3, r3, r2
  00bd4	e1a02403	 mov         r2, r3, lsl #8
  00bd8	e5d13000	 ldrb        r3, [r1]
  00bdc	e1831002	 orr         r1, r3, r2
  00be0	e59f04e0	 ldr         r0, [pc, #0x4E0]
  00be4	eb000000	 bl          NKDbgPrintfW
  00be8	e3a03001	 mov         r3, #1
  00bec	e58d304c	 str         r3, [sp, #0x4C]
  00bf0	ea000001	 b           |$LN54@wdev_MXDM_@4|
  00bf4		 |$LN53@wdev_MXDM_@4|
  00bf4	e3a03000	 mov         r3, #0
  00bf8	e58d304c	 str         r3, [sp, #0x4C]
  00bfc		 |$LN54@wdev_MXDM_@4|
  00bfc		 |$LN11@wdev_MXDM_@4|

; 927  :         }
; 928  : #endif
; 929  :         break;

  00bfc	ea000058	 b           |$LN17@wdev_MXDM_@4|
  00c00		 |$LN10@wdev_MXDM_@4|

; 930  :     case MIXER_GETLINEINFOF_TARGETTYPE:
; 931  :         // scan for target type
; 932  :         for (Index = 0; Index < nlines; Index++)

  00c00	e3a03000	 mov         r3, #0
  00c04	e58d3000	 str         r3, [sp]
  00c08	ea000002	 b           |$LN9@wdev_MXDM_@4|
  00c0c		 |$LN8@wdev_MXDM_@4|
  00c0c	e59d3000	 ldr         r3, [sp]
  00c10	e2833001	 add         r3, r3, #1
  00c14	e58d3000	 str         r3, [sp]
  00c18		 |$LN9@wdev_MXDM_@4|
  00c18	e59d3000	 ldr         r3, [sp]
  00c1c	e3530003	 cmp         r3, #3
  00c20	aa00001c	 bge         |$LN7@wdev_MXDM_@4|

; 933  :         {
; 934  :             if (g_mixerline[Index].dwTargetType == pDetail->Target.dwType)

  00c24	e59d1000	 ldr         r1, [sp]
  00c28	e3a03024	 mov         r3, #0x24
  00c2c	e0020391	 mul         r2, r1, r3
  00c30	e59f348c	 ldr         r3, [pc, #0x48C]
  00c34	e0833002	 add         r3, r3, r2
  00c38	e283201c	 add         r2, r3, #0x1C
  00c3c	e59d3068	 ldr         r3, [sp, #0x68]
  00c40	e28300c8	 add         r0, r3, #0xC8
  00c44	e5921000	 ldr         r1, [r2]
  00c48	e5d03003	 ldrb        r3, [r0, #3]
  00c4c	e1a02403	 mov         r2, r3, lsl #8
  00c50	e5d03002	 ldrb        r3, [r0, #2]
  00c54	e1833002	 orr         r3, r3, r2
  00c58	e1a02403	 mov         r2, r3, lsl #8
  00c5c	e5d03001	 ldrb        r3, [r0, #1]
  00c60	e1833002	 orr         r3, r3, r2
  00c64	e1a02403	 mov         r2, r3, lsl #8
  00c68	e5d03000	 ldrb        r3, [r0]
  00c6c	e1833002	 orr         r3, r3, r2
  00c70	e1510003	 cmp         r1, r3
  00c74	1a000006	 bne         |$LN6@wdev_MXDM_@4|

; 935  :             {
; 936  :                 pFound = &g_mixerline[Index];

  00c78	e59d1000	 ldr         r1, [sp]
  00c7c	e3a03024	 mov         r3, #0x24
  00c80	e0020391	 mul         r2, r1, r3
  00c84	e59f3438	 ldr         r3, [pc, #0x438]
  00c88	e0833002	 add         r3, r3, r2
  00c8c	e58d300c	 str         r3, [sp, #0xC]

; 937  :                 break;

  00c90	ea000000	 b           |$LN7@wdev_MXDM_@4|
  00c94		 |$LN6@wdev_MXDM_@4|

; 938  :             }
; 939  :         }

  00c94	eaffffdc	 b           |$LN8@wdev_MXDM_@4|
  00c98		 |$LN7@wdev_MXDM_@4|

; 940  : #ifdef DEBUG
; 941  :         if (pFound == NULL)

  00c98	e59d300c	 ldr         r3, [sp, #0xC]
  00c9c	e3530000	 cmp         r3, #0
  00ca0	1a000016	 bne         |$LN5@wdev_MXDM_@4|

; 942  :         {
; 943  :             DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: no line of target type %08x\r\n"), pDetail->Target.dwType));

  00ca4	e59f3408	 ldr         r3, [pc, #0x408]
  00ca8	e5933440	 ldr         r3, [r3, #0x440]
  00cac	e3130902	 tst         r3, #2, 18
  00cb0	0a000010	 beq         |$LN55@wdev_MXDM_@4|
  00cb4	e59d3068	 ldr         r3, [sp, #0x68]
  00cb8	e28310c8	 add         r1, r3, #0xC8
  00cbc	e5d13003	 ldrb        r3, [r1, #3]
  00cc0	e1a02403	 mov         r2, r3, lsl #8
  00cc4	e5d13002	 ldrb        r3, [r1, #2]
  00cc8	e1833002	 orr         r3, r3, r2
  00ccc	e1a02403	 mov         r2, r3, lsl #8
  00cd0	e5d13001	 ldrb        r3, [r1, #1]
  00cd4	e1833002	 orr         r3, r3, r2
  00cd8	e1a02403	 mov         r2, r3, lsl #8
  00cdc	e5d13000	 ldrb        r3, [r1]
  00ce0	e1831002	 orr         r1, r3, r2
  00ce4	e59f03d4	 ldr         r0, [pc, #0x3D4]
  00ce8	eb000000	 bl          NKDbgPrintfW
  00cec	e3a03001	 mov         r3, #1
  00cf0	e58d3050	 str         r3, [sp, #0x50]
  00cf4	ea000001	 b           |$LN56@wdev_MXDM_@4|
  00cf8		 |$LN55@wdev_MXDM_@4|
  00cf8	e3a03000	 mov         r3, #0
  00cfc	e58d3050	 str         r3, [sp, #0x50]
  00d00		 |$LN56@wdev_MXDM_@4|
  00d00		 |$LN5@wdev_MXDM_@4|

; 944  :         }
; 945  : #endif
; 946  :         break;

  00d00	ea000017	 b           |$LN17@wdev_MXDM_@4|
  00d04		 |$LN4@wdev_MXDM_@4|

; 947  : 
; 948  :     case MIXER_GETLINEINFOF_DESTINATION:
; 949  :     case MIXER_GETLINEINFOF_LINEID:
; 950  :     case MIXER_GETLINEINFOF_SOURCE:
; 951  :         pFound = LookupMxLine(usLineID);

  00d04	e1dd00b4	 ldrh        r0, [sp, #4]
  00d08	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  00d0c	e58d0054	 str         r0, [sp, #0x54]
  00d10	e59d3054	 ldr         r3, [sp, #0x54]
  00d14	e58d300c	 str         r3, [sp, #0xC]

; 952  :         if (pFound == NULL)

  00d18	e59d300c	 ldr         r3, [sp, #0xC]
  00d1c	e3530000	 cmp         r3, #0
  00d20	1a00000f	 bne         |$LN3@wdev_MXDM_@4|

; 953  :         {
; 954  :             DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid line ID %08x\r\n"), usLineID));

  00d24	e59f3388	 ldr         r3, [pc, #0x388]
  00d28	e5933440	 ldr         r3, [r3, #0x440]
  00d2c	e3130902	 tst         r3, #2, 18
  00d30	0a000006	 beq         |$LN57@wdev_MXDM_@4|
  00d34	e1dd30b4	 ldrh        r3, [sp, #4]
  00d38	e1a01003	 mov         r1, r3
  00d3c	e59f0378	 ldr         r0, [pc, #0x378]
  00d40	eb000000	 bl          NKDbgPrintfW
  00d44	e3a03001	 mov         r3, #1
  00d48	e58d3058	 str         r3, [sp, #0x58]
  00d4c	ea000001	 b           |$LN58@wdev_MXDM_@4|
  00d50		 |$LN57@wdev_MXDM_@4|
  00d50	e3a03000	 mov         r3, #0
  00d54	e58d3058	 str         r3, [sp, #0x58]
  00d58		 |$LN58@wdev_MXDM_@4|

; 955  :             return MMSYSERR_ERROR;

  00d58	e3a03001	 mov         r3, #1
  00d5c	e58d3014	 str         r3, [sp, #0x14]
  00d60	ea0000ce	 b           |$LN31@wdev_MXDM_@4|
  00d64		 |$LN3@wdev_MXDM_@4|
  00d64		 |$LN2@wdev_MXDM_@4|
  00d64		 |$LN17@wdev_MXDM_@4|

; 956  :         }
; 957  :         break;
; 958  :     default:
; 959  :         // should never happen - we filter for this in the first switch()
; 960  :         break;
; 961  : 
; 962  :     }
; 963  : 
; 964  :     if (pFound != NULL)

  00d64	e59d300c	 ldr         r3, [sp, #0xC]
  00d68	e3530000	 cmp         r3, #0
  00d6c	0a0000c9	 beq         |$LN1@wdev_MXDM_@4|

; 965  :     {
; 966  :         pDetail->cChannels = pFound->ucChannels;

  00d70	e59d300c	 ldr         r3, [sp, #0xC]
  00d74	e2833016	 add         r3, r3, #0x16
  00d78	e5d32000	 ldrb        r2, [r3]
  00d7c	e59d3068	 ldr         r3, [sp, #0x68]
  00d80	e283101c	 add         r1, r3, #0x1C
  00d84	e1a03002	 mov         r3, r2
  00d88	e5c13000	 strb        r3, [r1]
  00d8c	e1a02423	 mov         r2, r3, lsr #8
  00d90	e1a03002	 mov         r3, r2
  00d94	e5c13001	 strb        r3, [r1, #1]
  00d98	e1a02422	 mov         r2, r2, lsr #8
  00d9c	e1a03002	 mov         r3, r2
  00da0	e5c13002	 strb        r3, [r1, #2]
  00da4	e1a03422	 mov         r3, r2, lsr #8
  00da8	e5c13003	 strb        r3, [r1, #3]

; 967  :         pDetail->cConnections = pFound->ucConnections;

  00dac	e59d300c	 ldr         r3, [sp, #0xC]
  00db0	e2833017	 add         r3, r3, #0x17
  00db4	e5d32000	 ldrb        r2, [r3]
  00db8	e59d3068	 ldr         r3, [sp, #0x68]
  00dbc	e2831020	 add         r1, r3, #0x20
  00dc0	e1a03002	 mov         r3, r2
  00dc4	e5c13000	 strb        r3, [r1]
  00dc8	e1a02423	 mov         r2, r3, lsr #8
  00dcc	e1a03002	 mov         r3, r2
  00dd0	e5c13001	 strb        r3, [r1, #1]
  00dd4	e1a02422	 mov         r2, r2, lsr #8
  00dd8	e1a03002	 mov         r3, r2
  00ddc	e5c13002	 strb        r3, [r1, #2]
  00de0	e1a03422	 mov         r3, r2, lsr #8
  00de4	e5c13003	 strb        r3, [r1, #3]

; 968  :         pDetail->cControls = pFound->ucControls;

  00de8	e59d300c	 ldr         r3, [sp, #0xC]
  00dec	e2833018	 add         r3, r3, #0x18
  00df0	e5d32000	 ldrb        r2, [r3]
  00df4	e59d3068	 ldr         r3, [sp, #0x68]
  00df8	e2831024	 add         r1, r3, #0x24
  00dfc	e1a03002	 mov         r3, r2
  00e00	e5c13000	 strb        r3, [r1]
  00e04	e1a02423	 mov         r2, r3, lsr #8
  00e08	e1a03002	 mov         r3, r2
  00e0c	e5c13001	 strb        r3, [r1, #1]
  00e10	e1a02422	 mov         r2, r2, lsr #8
  00e14	e1a03002	 mov         r3, r2
  00e18	e5c13002	 strb        r3, [r1, #2]
  00e1c	e1a03422	 mov         r3, r2, lsr #8
  00e20	e5c13003	 strb        r3, [r1, #3]

; 969  :         pDetail->dwComponentType = pFound->dwComponentType;

  00e24	e59d3068	 ldr         r3, [sp, #0x68]
  00e28	e2831018	 add         r1, r3, #0x18
  00e2c	e59d300c	 ldr         r3, [sp, #0xC]
  00e30	e5933000	 ldr         r3, [r3]
  00e34	e5c13000	 strb        r3, [r1]
  00e38	e1a02423	 mov         r2, r3, lsr #8
  00e3c	e1a03002	 mov         r3, r2
  00e40	e5c13001	 strb        r3, [r1, #1]
  00e44	e1a02422	 mov         r2, r2, lsr #8
  00e48	e1a03002	 mov         r3, r2
  00e4c	e5c13002	 strb        r3, [r1, #2]
  00e50	e1a03422	 mov         r3, r2, lsr #8
  00e54	e5c13003	 strb        r3, [r1, #3]

; 970  :         pDetail->dwLineID = pFound->usLineID;

  00e58	e59d300c	 ldr         r3, [sp, #0xC]
  00e5c	e2833014	 add         r3, r3, #0x14
  00e60	e1d320b0	 ldrh        r2, [r3]
  00e64	e59d3068	 ldr         r3, [sp, #0x68]
  00e68	e283100c	 add         r1, r3, #0xC
  00e6c	e1a03002	 mov         r3, r2
  00e70	e5c13000	 strb        r3, [r1]
  00e74	e1a02423	 mov         r2, r3, lsr #8
  00e78	e1a03002	 mov         r3, r2
  00e7c	e5c13001	 strb        r3, [r1, #1]
  00e80	e1a02422	 mov         r2, r2, lsr #8
  00e84	e1a03002	 mov         r3, r2
  00e88	e5c13002	 strb        r3, [r1, #2]
  00e8c	e1a03422	 mov         r3, r2, lsr #8
  00e90	e5c13003	 strb        r3, [r1, #3]

; 971  :         pDetail->dwDestination = pFound->ucDstIndex;

  00e94	e59d300c	 ldr         r3, [sp, #0xC]
  00e98	e2833020	 add         r3, r3, #0x20
  00e9c	e5d32000	 ldrb        r2, [r3]
  00ea0	e59d3068	 ldr         r3, [sp, #0x68]
  00ea4	e2831004	 add         r1, r3, #4
  00ea8	e1a03002	 mov         r3, r2
  00eac	e5c13000	 strb        r3, [r1]
  00eb0	e1a02423	 mov         r2, r3, lsr #8
  00eb4	e1a03002	 mov         r3, r2
  00eb8	e5c13001	 strb        r3, [r1, #1]
  00ebc	e1a02422	 mov         r2, r2, lsr #8
  00ec0	e1a03002	 mov         r3, r2
  00ec4	e5c13002	 strb        r3, [r1, #2]
  00ec8	e1a03422	 mov         r3, r2, lsr #8
  00ecc	e5c13003	 strb        r3, [r1, #3]

; 972  :         pDetail->dwSource = pFound->ucSrcIndex;

  00ed0	e59d300c	 ldr         r3, [sp, #0xC]
  00ed4	e2833021	 add         r3, r3, #0x21
  00ed8	e5d32000	 ldrb        r2, [r3]
  00edc	e59d3068	 ldr         r3, [sp, #0x68]
  00ee0	e2831008	 add         r1, r3, #8
  00ee4	e1a03002	 mov         r3, r2
  00ee8	e5c13000	 strb        r3, [r1]
  00eec	e1a02423	 mov         r2, r3, lsr #8
  00ef0	e1a03002	 mov         r3, r2
  00ef4	e5c13001	 strb        r3, [r1, #1]
  00ef8	e1a02422	 mov         r2, r2, lsr #8
  00efc	e1a03002	 mov         r3, r2
  00f00	e5c13002	 strb        r3, [r1, #2]
  00f04	e1a03422	 mov         r3, r2, lsr #8
  00f08	e5c13003	 strb        r3, [r1, #3]

; 973  :         pDetail->fdwLine = pFound->ucFlags;

  00f0c	e59d300c	 ldr         r3, [sp, #0xC]
  00f10	e283200c	 add         r2, r3, #0xC
  00f14	e59d3068	 ldr         r3, [sp, #0x68]
  00f18	e2831010	 add         r1, r3, #0x10
  00f1c	e5923000	 ldr         r3, [r2]
  00f20	e5c13000	 strb        r3, [r1]
  00f24	e1a02423	 mov         r2, r3, lsr #8
  00f28	e1a03002	 mov         r3, r2
  00f2c	e5c13001	 strb        r3, [r1, #1]
  00f30	e1a02422	 mov         r2, r2, lsr #8
  00f34	e1a03002	 mov         r3, r2
  00f38	e5c13002	 strb        r3, [r1, #2]
  00f3c	e1a03422	 mov         r3, r2, lsr #8
  00f40	e5c13003	 strb        r3, [r1, #3]

; 974  :         pDetail->Target.dwDeviceID = 0;

  00f44	e59d3068	 ldr         r3, [sp, #0x68]
  00f48	e28310cc	 add         r1, r3, #0xCC
  00f4c	e3a03000	 mov         r3, #0
  00f50	e5c13000	 strb        r3, [r1]
  00f54	e1a02423	 mov         r2, r3, lsr #8
  00f58	e1a03002	 mov         r3, r2
  00f5c	e5c13001	 strb        r3, [r1, #1]
  00f60	e1a02422	 mov         r2, r2, lsr #8
  00f64	e1a03002	 mov         r3, r2
  00f68	e5c13002	 strb        r3, [r1, #2]
  00f6c	e1a03422	 mov         r3, r2, lsr #8
  00f70	e5c13003	 strb        r3, [r1, #3]

; 975  :         pDetail->Target.dwType = pFound->dwTargetType;

  00f74	e59d300c	 ldr         r3, [sp, #0xC]
  00f78	e283201c	 add         r2, r3, #0x1C
  00f7c	e59d3068	 ldr         r3, [sp, #0x68]
  00f80	e28310c8	 add         r1, r3, #0xC8
  00f84	e5923000	 ldr         r3, [r2]
  00f88	e5c13000	 strb        r3, [r1]
  00f8c	e1a02423	 mov         r2, r3, lsr #8
  00f90	e1a03002	 mov         r3, r2
  00f94	e5c13001	 strb        r3, [r1, #1]
  00f98	e1a02422	 mov         r2, r2, lsr #8
  00f9c	e1a03002	 mov         r3, r2
  00fa0	e5c13002	 strb        r3, [r1, #2]
  00fa4	e1a03422	 mov         r3, r2, lsr #8
  00fa8	e5c13003	 strb        r3, [r1, #3]

; 976  :         pDetail->Target.vDriverVersion = DRIVER_VERSION;

  00fac	e59d3068	 ldr         r3, [sp, #0x68]
  00fb0	e28310d4	 add         r1, r3, #0xD4
  00fb4	e3a03c01	 mov         r3, #1, 24
  00fb8	e5c13000	 strb        r3, [r1]
  00fbc	e1a02423	 mov         r2, r3, lsr #8
  00fc0	e1a03002	 mov         r3, r2
  00fc4	e5c13001	 strb        r3, [r1, #1]
  00fc8	e1a02422	 mov         r2, r2, lsr #8
  00fcc	e1a03002	 mov         r3, r2
  00fd0	e5c13002	 strb        r3, [r1, #2]
  00fd4	e1a03422	 mov         r3, r2, lsr #8
  00fd8	e5c13003	 strb        r3, [r1, #3]

; 977  :         pDetail->Target.wMid = MM_MICROSOFT;

  00fdc	e59d3068	 ldr         r3, [sp, #0x68]
  00fe0	e28320d0	 add         r2, r3, #0xD0
  00fe4	e3a03001	 mov         r3, #1
  00fe8	e5c23000	 strb        r3, [r2]
  00fec	e1a03423	 mov         r3, r3, lsr #8
  00ff0	e5c23001	 strb        r3, [r2, #1]

; 978  :         pDetail->Target.wPid = MM_MSFT_WSS_MIXER;

  00ff4	e59d3068	 ldr         r3, [sp, #0x68]
  00ff8	e28320d2	 add         r2, r3, #0xD2
  00ffc	e3a03011	 mov         r3, #0x11
  01000	e5c23000	 strb        r3, [r2]
  01004	e1a03423	 mov         r3, r3, lsr #8
  01008	e5c23001	 strb        r3, [r2, #1]

; 979  :         wcscpy(pDetail->szName, pFound->szName);

  0100c	e59d300c	 ldr         r3, [sp, #0xC]
  01010	e2833008	 add         r3, r3, #8
  01014	e5931000	 ldr         r1, [r3]
  01018	e59d3068	 ldr         r3, [sp, #0x68]
  0101c	e2830048	 add         r0, r3, #0x48
  01020	eb000000	 bl          wcscpy

; 980  :         wcscpy(pDetail->szShortName, pFound->szShortName);

  01024	e59d300c	 ldr         r3, [sp, #0xC]
  01028	e2833004	 add         r3, r3, #4
  0102c	e5931000	 ldr         r1, [r3]
  01030	e59d3068	 ldr         r3, [sp, #0x68]
  01034	e2830028	 add         r0, r3, #0x28
  01038	eb000000	 bl          wcscpy

; 981  :         wcscpy(pDetail->Target.szPname, DEVICE_NAME);

  0103c	e59f1074	 ldr         r1, [pc, #0x74]
  01040	e59d3068	 ldr         r3, [sp, #0x68]
  01044	e28300d8	 add         r0, r3, #0xD8
  01048	eb000000	 bl          wcscpy

; 982  :         mmRet = MMSYSERR_NOERROR;

  0104c	e3a03000	 mov         r3, #0
  01050	e58d3008	 str         r3, [sp, #8]

; 983  : 
; 984  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo: \"%s\" %08x\r\n"), pFound->szName, pFound->ucFlags));

  01054	e59f3058	 ldr         r3, [pc, #0x58]
  01058	e5933440	 ldr         r3, [r3, #0x440]
  0105c	e3130004	 tst         r3, #4
  01060	0a00000a	 beq         |$LN59@wdev_MXDM_@4|
  01064	e59d300c	 ldr         r3, [sp, #0xC]
  01068	e283300c	 add         r3, r3, #0xC
  0106c	e5932000	 ldr         r2, [r3]
  01070	e59d300c	 ldr         r3, [sp, #0xC]
  01074	e2833008	 add         r3, r3, #8
  01078	e5931000	 ldr         r1, [r3]
  0107c	e59f002c	 ldr         r0, [pc, #0x2C]
  01080	eb000000	 bl          NKDbgPrintfW
  01084	e3a03001	 mov         r3, #1
  01088	e58d305c	 str         r3, [sp, #0x5C]
  0108c	ea000001	 b           |$LN60@wdev_MXDM_@4|
  01090		 |$LN59@wdev_MXDM_@4|
  01090	e3a03000	 mov         r3, #0
  01094	e58d305c	 str         r3, [sp, #0x5C]
  01098		 |$LN60@wdev_MXDM_@4|
  01098		 |$LN1@wdev_MXDM_@4|

; 985  : 
; 986  :     }
; 987  : 
; 988  :     return mmRet;

  01098	e59d3008	 ldr         r3, [sp, #8]
  0109c	e58d3014	 str         r3, [sp, #0x14]
  010a0		 |$LN31@wdev_MXDM_@4|

; 989  : }

  010a0	e59d0014	 ldr         r0, [sp, #0x14]
  010a4	e28dd060	 add         sp, sp, #0x60
  010a8	e89d6000	 ldmia       sp, {sp, lr}
  010ac	e12fff1e	 bx          lr
  010b0		 |$LN78@wdev_MXDM_@4|
  010b0		 |$LN79@wdev_MXDM_@4|
  010b0	00000000	 DCD         |??_C@_1DM@CHMELAAB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  010b4		 |$LN80@wdev_MXDM_@4|
  010b4	00000000	 DCD         |dpCurSettings|
  010b8		 |$LN81@wdev_MXDM_@4|
  010b8	00000000	 DCD         |??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@|
  010bc		 |$LN82@wdev_MXDM_@4|
  010bc	00000000	 DCD         |??_C@_1FC@LHNBJHH@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAI@|
  010c0		 |$LN83@wdev_MXDM_@4|
  010c0	00000000	 DCD         |??_C@_1GA@DDKINBEJ@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAo?$AAf?$AA?5?$AAt?$AAa?$AAr@|
  010c4		 |$LN84@wdev_MXDM_@4|
  010c4	00000000	 DCD         |g_mixerline|
  010c8		 |$LN85@wdev_MXDM_@4|
  010c8	00000000	 DCD         |??_C@_1GG@MELCAJPL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAo?$AAm@|
  010cc		 |$LN86@wdev_MXDM_@4|
  010cc	00000000	 DCD         |??_C@_1EO@HDKNAFNG@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAq?$AAu?$AAe?$AAr?$AAy?$AA?5@|
  010d0		 |$LN87@wdev_MXDM_@4|
  010d0	00000000	 DCD         |??_C@_1DE@PIKBGEIJ@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAT?$AAA?$AAR?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  010d4		 |$LN88@wdev_MXDM_@4|
  010d4	00000000	 DCD         |??_C@_1DK@COFPEFKO@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAC?$AAO?$AAM?$AAP?$AAO?$AAN?$AAE?$AAN?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  010d8		 |$LN89@wdev_MXDM_@4|
  010d8	00000000	 DCD         |??_C@_1FG@LCCLAGKB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe@|
  010dc		 |$LN90@wdev_MXDM_@4|
  010dc	00000000	 DCD         |??_C@_1HG@JHFCMAJM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAt?$AA?5?$AAi@|
  010e0		 |$LN91@wdev_MXDM_@4|
  010e0	00000000	 DCD         |g_dst_lines|
  010e4		 |$LN92@wdev_MXDM_@4|
  010e4	00000000	 DCD         |??_C@_1GA@BBJIEEAD@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAi?$AAn@|
  010e8		 |$LN93@wdev_MXDM_@4|
  010e8	00000000	 DCD         |??_C@_1EA@IAOAGGKE@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAS?$AAO?$AAU?$AAR?$AAC?$AAE?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  010ec		 |$LN94@wdev_MXDM_@4|
  010ec	00000000	 DCD         |??_C@_1DK@GMMCEECL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAL?$AAI?$AAN?$AAE?$AAI?$AAD?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  010f0		 |$LN95@wdev_MXDM_@4|
  010f0	00000000	 DCD         |??_C@_1EE@DGPNNKNM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?5?$AAD?$AAE?$AAS?$AAT?$AAI?$AAN?$AAA?$AAT?$AAI?$AAO?$AAN?$AA?5?$AA?$CF?$AAx?$AA?$AN@|
  010f4		 |$M36606|

			 ENDP  ; |?wdev_MXDM_GETLINEINFO@@YAKPAUtMIXERLINE@@K@Z|, wdev_MXDM_GETLINEINFO

	EXPORT	|??_C@_1FG@OKMEMBEL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAq?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@OCFKLJPN@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AA0?$AA4?$AAx?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@CMCLLJCP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@NAGBJFBM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAO?$AAN?$AAE?$AAB?$AAY?$AAT?$AAY?$AAP?$AAE?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@MONMFDNB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@IPGPLBHF@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAO?$AAN?$AAE?$AAB?$AAY?$AAI?$AAD?$AA?5?$AA?$CF?$AAx@| [ DATA ] ; `string'
	EXPORT	|?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z| ; MixerControlList::LookupControlByIndex
	EXPORT	|??_C@_1JG@CANNPDPK@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@PFCBAFBC@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@KJNHEOOA@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAA?$AAL?$AAL?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?wdev_MXDM_GETLINECONTROLS@@YAKPAUtMIXERLINECONTROLS@@K@Z| ; wdev_MXDM_GETLINECONTROLS

  00038			 AREA	 |.pdata|, PDATA
|$T36650| DCD	|$LN46@wdev_MXDM_@5|
	DCD	0x4001bf04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@OKMEMBEL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAq?$AAu@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@OCFKLJPN@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AA0?$AA4?$AAx?$AA?5@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@CMCLLJCP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "m"
	DCB	0x0, "u", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "z"
	DCB	0x0, "e", 0x0, "r", 0x0, "o", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@NAGBJFBM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAO?$AAN?$AAE?$AAB?$AAY?$AAT?$AAY?$AAP?$AAE?$AA?5@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "O", 0x0, "N", 0x0, "E"
	DCB	0x0, "B", 0x0, "Y", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E"
	DCB	0x0, " ", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@MONMFDNB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "m"
	DCB	0x0, "u", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "n", 0x0, "z", 0x0, "e"
	DCB	0x0, "r", 0x0, "o", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@IPGPLBHF@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAO?$AAN?$AAE?$AAB?$AAY?$AAI?$AAD?$AA?5?$AA?$CF?$AAx@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "O", 0x0, "N", 0x0, "E"
	DCB	0x0, "B", 0x0, "Y", 0x0, "I", 0x0, "D", 0x0, " ", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@CANNPDPK@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "n", 0x0, "u", 0x0, "m", 0x0, "b", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ".", 0x0, " ", 0x0, "E", 0x0, "x", 0x0, "p"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@PFCBAFBC@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "D"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@KJNHEOOA@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAA?$AAL?$AAL?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "L", 0x0, "L"
	DCB	0x0, " ", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  010f4			 AREA	 |.text|, CODE, ARM

  010f4		 |?wdev_MXDM_GETLINECONTROLS@@YAKPAUtMIXERLINECONTROLS@@K@Z| PROC ; wdev_MXDM_GETLINECONTROLS

; 993  : {

  010f4		 |$LN46@wdev_MXDM_@5|
  010f4	e1a0c00d	 mov         r12, sp
  010f8	e92d0003	 stmdb       sp!, {r0, r1}
  010fc	e92d5000	 stmdb       sp!, {r12, lr}
  01100	e24dd074	 sub         sp, sp, #0x74
  01104		 |$M36647|

; 994  : 
; 995  :     PMIXERCONTROL pamxctrl = pDetail->pamxctrl;

  01104	e59d307c	 ldr         r3, [sp, #0x7C]
  01108	e2831014	 add         r1, r3, #0x14
  0110c	e1d130d3	 ldrsb       r3, [r1, #3]
  01110	e1a02403	 mov         r2, r3, lsl #8
  01114	e5d13002	 ldrb        r3, [r1, #2]
  01118	e1833002	 orr         r3, r3, r2
  0111c	e1a02403	 mov         r2, r3, lsl #8
  01120	e5d13001	 ldrb        r3, [r1, #1]
  01124	e1833002	 orr         r3, r3, r2
  01128	e1a02403	 mov         r2, r3, lsl #8
  0112c	e5d13000	 ldrb        r3, [r1]
  01130	e1833002	 orr         r3, r3, r2
  01134	e58d3008	 str         r3, [sp, #8]

; 996  :     USHORT usLineID = (USHORT) pDetail->dwLineID;

  01138	e59d307c	 ldr         r3, [sp, #0x7C]
  0113c	e2831004	 add         r1, r3, #4
  01140	e5d13003	 ldrb        r3, [r1, #3]
  01144	e1a02403	 mov         r2, r3, lsl #8
  01148	e5d13002	 ldrb        r3, [r1, #2]
  0114c	e1833002	 orr         r3, r3, r2
  01150	e1a02403	 mov         r2, r3, lsl #8
  01154	e5d13001	 ldrb        r3, [r1, #1]
  01158	e1833002	 orr         r3, r3, r2
  0115c	e1a02403	 mov         r2, r3, lsl #8
  01160	e5d13000	 ldrb        r3, [r1]
  01164	e1833002	 orr         r3, r3, r2
  01168	e1a03803	 mov         r3, r3, lsl #16
  0116c	e1a03823	 mov         r3, r3, lsr #16
  01170	e1cd30b0	 strh        r3, [sp]

; 997  :     DWORD dwCount = pDetail->cControls;

  01174	e59d307c	 ldr         r3, [sp, #0x7C]
  01178	e283100c	 add         r1, r3, #0xC
  0117c	e5d13003	 ldrb        r3, [r1, #3]
  01180	e1a02403	 mov         r2, r3, lsl #8
  01184	e5d13002	 ldrb        r3, [r1, #2]
  01188	e1833002	 orr         r3, r3, r2
  0118c	e1a02403	 mov         r2, r3, lsl #8
  01190	e5d13001	 ldrb        r3, [r1, #1]
  01194	e1833002	 orr         r3, r3, r2
  01198	e1a02403	 mov         r2, r3, lsl #8
  0119c	e5d13000	 ldrb        r3, [r1]
  011a0	e1833002	 orr         r3, r3, r2
  011a4	e58d3004	 str         r3, [sp, #4]

; 998  : 
; 999  :     switch (dwFlags & MIXER_GETLINECONTROLSF_QUERYMASK)

  011a8	e59d3080	 ldr         r3, [sp, #0x80]
  011ac	e203300f	 and         r3, r3, #0xF
  011b0	e58d3028	 str         r3, [sp, #0x28]
  011b4	e59d3028	 ldr         r3, [sp, #0x28]
  011b8	e3530000	 cmp         r3, #0
  011bc	0a000006	 beq         |$LN21@wdev_MXDM_@5|
  011c0	e59d3028	 ldr         r3, [sp, #0x28]
  011c4	e3530001	 cmp         r3, #1
  011c8	0a000076	 beq         |$LN13@wdev_MXDM_@5|
  011cc	e59d3028	 ldr         r3, [sp, #0x28]
  011d0	e3530002	 cmp         r3, #2
  011d4	0a0000d4	 beq         |$LN10@wdev_MXDM_@5|
  011d8	ea000166	 b           |$LN1@wdev_MXDM_@5|
  011dc		 |$LN21@wdev_MXDM_@5|

; 1000 :     {
; 1001 :     case MIXER_GETLINECONTROLSF_ALL:
; 1002 :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineControls: ALL %x\r\n"), usLineID));

  011dc	e59f35e4	 ldr         r3, [pc, #0x5E4]
  011e0	e5933440	 ldr         r3, [r3, #0x440]
  011e4	e3130004	 tst         r3, #4
  011e8	0a000006	 beq         |$LN26@wdev_MXDM_@5|
  011ec	e1dd30b0	 ldrh        r3, [sp]
  011f0	e1a01003	 mov         r1, r3
  011f4	e59f05f0	 ldr         r0, [pc, #0x5F0]
  011f8	eb000000	 bl          NKDbgPrintfW
  011fc	e3a03001	 mov         r3, #1
  01200	e58d302c	 str         r3, [sp, #0x2C]
  01204	ea000001	 b           |$LN27@wdev_MXDM_@5|
  01208		 |$LN26@wdev_MXDM_@5|
  01208	e3a03000	 mov         r3, #0
  0120c	e58d302c	 str         r3, [sp, #0x2C]
  01210		 |$LN27@wdev_MXDM_@5|

; 1003 :         // retrieve all controls for the line pDetail->dwLineID
; 1004 :         {
; 1005 :             PMXLINEDESC pFound = LookupMxLine(usLineID);

  01210	e1dd00b0	 ldrh        r0, [sp]
  01214	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  01218	e58d0030	 str         r0, [sp, #0x30]
  0121c	e59d3030	 ldr         r3, [sp, #0x30]
  01220	e58d3010	 str         r3, [sp, #0x10]

; 1006 :             if (pFound == NULL)

  01224	e59d3010	 ldr         r3, [sp, #0x10]
  01228	e3530000	 cmp         r3, #0
  0122c	1a00000f	 bne         |$LN20@wdev_MXDM_@5|

; 1007 :             {
; 1008 :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: invalid line ID %04x\r\n"), usLineID));

  01230	e59f3590	 ldr         r3, [pc, #0x590]
  01234	e5933440	 ldr         r3, [r3, #0x440]
  01238	e3130902	 tst         r3, #2, 18
  0123c	0a000006	 beq         |$LN28@wdev_MXDM_@5|
  01240	e1dd30b0	 ldrh        r3, [sp]
  01244	e1a01003	 mov         r1, r3
  01248	e59f0598	 ldr         r0, [pc, #0x598]
  0124c	eb000000	 bl          NKDbgPrintfW
  01250	e3a03001	 mov         r3, #1
  01254	e58d3034	 str         r3, [sp, #0x34]
  01258	ea000001	 b           |$LN29@wdev_MXDM_@5|
  0125c		 |$LN28@wdev_MXDM_@5|
  0125c	e3a03000	 mov         r3, #0
  01260	e58d3034	 str         r3, [sp, #0x34]
  01264		 |$LN29@wdev_MXDM_@5|

; 1009 :                 return MIXERR_INVALLINE;

  01264	e3a03b01	 mov         r3, #1, 22
  01268	e58d3024	 str         r3, [sp, #0x24]
  0126c	ea000150	 b           |$LN24@wdev_MXDM_@5|
  01270		 |$LN20@wdev_MXDM_@5|

; 1010 :             }
; 1011 :             if (pFound->ucControls != dwCount)

  01270	e59d3010	 ldr         r3, [sp, #0x10]
  01274	e2833018	 add         r3, r3, #0x18
  01278	e5d32000	 ldrb        r2, [r3]
  0127c	e59d3004	 ldr         r3, [sp, #4]
  01280	e1520003	 cmp         r2, r3
  01284	0a000012	 beq         |$LN19@wdev_MXDM_@5|

; 1012 :             {
; 1013 :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: incorrect number of controls. Expect %d, found %d.\r\n"),dwCount,pFound->ucControls));

  01288	e59f3538	 ldr         r3, [pc, #0x538]
  0128c	e5933440	 ldr         r3, [r3, #0x440]
  01290	e3130902	 tst         r3, #2, 18
  01294	0a000009	 beq         |$LN30@wdev_MXDM_@5|
  01298	e59d3010	 ldr         r3, [sp, #0x10]
  0129c	e2833018	 add         r3, r3, #0x18
  012a0	e5d33000	 ldrb        r3, [r3]
  012a4	e1a02003	 mov         r2, r3
  012a8	e59d1004	 ldr         r1, [sp, #4]
  012ac	e59f0530	 ldr         r0, [pc, #0x530]
  012b0	eb000000	 bl          NKDbgPrintfW
  012b4	e3a03001	 mov         r3, #1
  012b8	e58d3038	 str         r3, [sp, #0x38]
  012bc	ea000001	 b           |$LN31@wdev_MXDM_@5|
  012c0		 |$LN30@wdev_MXDM_@5|
  012c0	e3a03000	 mov         r3, #0
  012c4	e58d3038	 str         r3, [sp, #0x38]
  012c8		 |$LN31@wdev_MXDM_@5|

; 1014 :                 return MMSYSERR_INVALPARAM;

  012c8	e3a0300b	 mov         r3, #0xB
  012cc	e58d3024	 str         r3, [sp, #0x24]
  012d0	ea000137	 b           |$LN24@wdev_MXDM_@5|
  012d4		 |$LN19@wdev_MXDM_@5|

; 1015 :             }
; 1016 : 
; 1017 :             int Index;
; 1018 :             for (Index = 0; dwCount > 0; Index++)

  012d4	e3a03000	 mov         r3, #0
  012d8	e58d300c	 str         r3, [sp, #0xC]
  012dc	ea000002	 b           |$LN18@wdev_MXDM_@5|
  012e0		 |$LN17@wdev_MXDM_@5|
  012e0	e59d300c	 ldr         r3, [sp, #0xC]
  012e4	e2833001	 add         r3, r3, #1
  012e8	e58d300c	 str         r3, [sp, #0xC]
  012ec		 |$LN18@wdev_MXDM_@5|
  012ec	e59d3004	 ldr         r3, [sp, #4]
  012f0	e3530000	 cmp         r3, #0
  012f4	9a00002a	 bls         |$LN16@wdev_MXDM_@5|

; 1019 :             {
; 1020 :                 MixerControl *pMixerControl = g_pMixerControlList->LookupControlByIndex(Index);

  012f8	e59d100c	 ldr         r1, [sp, #0xC]
  012fc	e59f34cc	 ldr         r3, [pc, #0x4CC]
  01300	e5930000	 ldr         r0, [r3]
  01304	eb000000	 bl          |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z|
  01308	e58d003c	 str         r0, [sp, #0x3C]
  0130c	e59d303c	 ldr         r3, [sp, #0x3C]
  01310	e58d3014	 str         r3, [sp, #0x14]

; 1021 :                 if (!pMixerControl)

  01314	e59d3014	 ldr         r3, [sp, #0x14]
  01318	e3530000	 cmp         r3, #0
  0131c	1a000002	 bne         |$LN15@wdev_MXDM_@5|

; 1022 :                 {
; 1023 : 					// We never found as many controls as we claimed to have...
; 1024 : 					return MMSYSERR_INVALPARAM;

  01320	e3a0300b	 mov         r3, #0xB
  01324	e58d3024	 str         r3, [sp, #0x24]
  01328	ea000121	 b           |$LN24@wdev_MXDM_@5|
  0132c		 |$LN15@wdev_MXDM_@5|

; 1025 :                 }
; 1026 : 
; 1027 :                 if (pMixerControl->GetLineID() == usLineID)

  0132c	e59d3014	 ldr         r3, [sp, #0x14]
  01330	e5933000	 ldr         r3, [r3]
  01334	e2833018	 add         r3, r3, #0x18
  01338	e59d0014	 ldr         r0, [sp, #0x14]
  0133c	e5933000	 ldr         r3, [r3]
  01340	e1a0e00f	 mov         lr, pc
  01344	e12fff13	 bx          r3
  01348	e1a03800	 mov         r3, r0, lsl #16
  0134c	e1a03823	 mov         r3, r3, lsr #16
  01350	e1cd34b0	 strh        r3, [sp, #0x40]
  01354	e1dd34b0	 ldrh        r3, [sp, #0x40]
  01358	e1a02003	 mov         r2, r3
  0135c	e1dd30b0	 ldrh        r3, [sp]
  01360	e1520003	 cmp         r2, r3
  01364	1a00000d	 bne         |$LN14@wdev_MXDM_@5|

; 1028 :                 {
; 1029 :                     pMixerControl->CopyMixerControl(pamxctrl);

  01368	e59d1008	 ldr         r1, [sp, #8]
  0136c	e59d3014	 ldr         r3, [sp, #0x14]
  01370	e5933000	 ldr         r3, [r3]
  01374	e2833008	 add         r3, r3, #8
  01378	e59d0014	 ldr         r0, [sp, #0x14]
  0137c	e5933000	 ldr         r3, [r3]
  01380	e1a0e00f	 mov         lr, pc
  01384	e12fff13	 bx          r3

; 1030 :                     pamxctrl++;

  01388	e59d3008	 ldr         r3, [sp, #8]
  0138c	e28330e4	 add         r3, r3, #0xE4
  01390	e58d3008	 str         r3, [sp, #8]

; 1031 :                     dwCount--;

  01394	e59d3004	 ldr         r3, [sp, #4]
  01398	e2433001	 sub         r3, r3, #1
  0139c	e58d3004	 str         r3, [sp, #4]
  013a0		 |$LN14@wdev_MXDM_@5|

; 1032 :                 }
; 1033 :             }

  013a0	eaffffce	 b           |$LN17@wdev_MXDM_@5|
  013a4		 |$LN16@wdev_MXDM_@5|

; 1034 :         }
; 1035 :         break;

  013a4	ea000100	 b           |$LN22@wdev_MXDM_@5|
  013a8		 |$LN13@wdev_MXDM_@5|

; 1036 : 
; 1037 :     case MIXER_GETLINECONTROLSF_ONEBYID:
; 1038 :         {
; 1039 :             DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineControls: ONEBYID %x\r\n"), pDetail->dwControlID));

  013a8	e59f3418	 ldr         r3, [pc, #0x418]
  013ac	e5933440	 ldr         r3, [r3, #0x440]
  013b0	e3130004	 tst         r3, #4
  013b4	0a000010	 beq         |$LN32@wdev_MXDM_@5|
  013b8	e59d307c	 ldr         r3, [sp, #0x7C]
  013bc	e2831008	 add         r1, r3, #8
  013c0	e5d13003	 ldrb        r3, [r1, #3]
  013c4	e1a02403	 mov         r2, r3, lsl #8
  013c8	e5d13002	 ldrb        r3, [r1, #2]
  013cc	e1833002	 orr         r3, r3, r2
  013d0	e1a02403	 mov         r2, r3, lsl #8
  013d4	e5d13001	 ldrb        r3, [r1, #1]
  013d8	e1833002	 orr         r3, r3, r2
  013dc	e1a02403	 mov         r2, r3, lsl #8
  013e0	e5d13000	 ldrb        r3, [r1]
  013e4	e1831002	 orr         r1, r3, r2
  013e8	e59f03f0	 ldr         r0, [pc, #0x3F0]
  013ec	eb000000	 bl          NKDbgPrintfW
  013f0	e3a03001	 mov         r3, #1
  013f4	e58d3044	 str         r3, [sp, #0x44]
  013f8	ea000001	 b           |$LN33@wdev_MXDM_@5|
  013fc		 |$LN32@wdev_MXDM_@5|
  013fc	e3a03000	 mov         r3, #0
  01400	e58d3044	 str         r3, [sp, #0x44]
  01404		 |$LN33@wdev_MXDM_@5|

; 1040 : 
; 1041 :             if (dwCount < 1)

  01404	e59d3004	 ldr         r3, [sp, #4]
  01408	e3530001	 cmp         r3, #1
  0140c	2a00000d	 bcs         |$LN12@wdev_MXDM_@5|

; 1042 :             {
; 1043 :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: control count must be nonzero\r\n")));

  01410	e59f33b0	 ldr         r3, [pc, #0x3B0]
  01414	e5933440	 ldr         r3, [r3, #0x440]
  01418	e3130902	 tst         r3, #2, 18
  0141c	0a000004	 beq         |$LN34@wdev_MXDM_@5|
  01420	e59f03b4	 ldr         r0, [pc, #0x3B4]
  01424	eb000000	 bl          NKDbgPrintfW
  01428	e3a03001	 mov         r3, #1
  0142c	e58d3048	 str         r3, [sp, #0x48]
  01430	ea000001	 b           |$LN35@wdev_MXDM_@5|
  01434		 |$LN34@wdev_MXDM_@5|
  01434	e3a03000	 mov         r3, #0
  01438	e58d3048	 str         r3, [sp, #0x48]
  0143c		 |$LN35@wdev_MXDM_@5|

; 1044 :                 return MMSYSERR_INVALPARAM;

  0143c	e3a0300b	 mov         r3, #0xB
  01440	e58d3024	 str         r3, [sp, #0x24]
  01444	ea0000da	 b           |$LN24@wdev_MXDM_@5|
  01448		 |$LN12@wdev_MXDM_@5|

; 1045 :             }
; 1046 : 
; 1047 :             MixerControl *pMixerControl = g_pMixerControlList->LookupControlByIndex(pDetail->dwControlID);

  01448	e59d307c	 ldr         r3, [sp, #0x7C]
  0144c	e2831008	 add         r1, r3, #8
  01450	e5d13003	 ldrb        r3, [r1, #3]
  01454	e1a02403	 mov         r2, r3, lsl #8
  01458	e5d13002	 ldrb        r3, [r1, #2]
  0145c	e1833002	 orr         r3, r3, r2
  01460	e1a02403	 mov         r2, r3, lsl #8
  01464	e5d13001	 ldrb        r3, [r1, #1]
  01468	e1833002	 orr         r3, r3, r2
  0146c	e1a02403	 mov         r2, r3, lsl #8
  01470	e5d13000	 ldrb        r3, [r1]
  01474	e1831002	 orr         r1, r3, r2
  01478	e59f3350	 ldr         r3, [pc, #0x350]
  0147c	e5930000	 ldr         r0, [r3]
  01480	eb000000	 bl          |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z|
  01484	e58d004c	 str         r0, [sp, #0x4C]
  01488	e59d304c	 ldr         r3, [sp, #0x4C]
  0148c	e58d3018	 str         r3, [sp, #0x18]

; 1048 :             if (!pMixerControl)

  01490	e59d3018	 ldr         r3, [sp, #0x18]
  01494	e3530000	 cmp         r3, #0
  01498	1a000003	 bne         |$LN11@wdev_MXDM_@5|

; 1049 :             {
; 1050 :                 return MIXERR_INVALCONTROL;

  0149c	e3a03b01	 mov         r3, #1, 22
  014a0	e3833001	 orr         r3, r3, #1
  014a4	e58d3024	 str         r3, [sp, #0x24]
  014a8	ea0000c1	 b           |$LN24@wdev_MXDM_@5|
  014ac		 |$LN11@wdev_MXDM_@5|

; 1051 :             }
; 1052 : 
; 1053 :             pMixerControl->CopyMixerControl(pamxctrl);

  014ac	e59d1008	 ldr         r1, [sp, #8]
  014b0	e59d3018	 ldr         r3, [sp, #0x18]
  014b4	e5933000	 ldr         r3, [r3]
  014b8	e2833008	 add         r3, r3, #8
  014bc	e59d0018	 ldr         r0, [sp, #0x18]
  014c0	e5933000	 ldr         r3, [r3]
  014c4	e1a0e00f	 mov         lr, pc
  014c8	e12fff13	 bx          r3

; 1054 :             pDetail->dwLineID = pMixerControl->GetLineID();

  014cc	e59d3018	 ldr         r3, [sp, #0x18]
  014d0	e5933000	 ldr         r3, [r3]
  014d4	e2833018	 add         r3, r3, #0x18
  014d8	e59d0018	 ldr         r0, [sp, #0x18]
  014dc	e5933000	 ldr         r3, [r3]
  014e0	e1a0e00f	 mov         lr, pc
  014e4	e12fff13	 bx          r3
  014e8	e1a03800	 mov         r3, r0, lsl #16
  014ec	e1a03823	 mov         r3, r3, lsr #16
  014f0	e1cd35b0	 strh        r3, [sp, #0x50]
  014f4	e1dd25b0	 ldrh        r2, [sp, #0x50]
  014f8	e59d307c	 ldr         r3, [sp, #0x7C]
  014fc	e2831004	 add         r1, r3, #4
  01500	e1a03002	 mov         r3, r2
  01504	e5c13000	 strb        r3, [r1]
  01508	e1a02423	 mov         r2, r3, lsr #8
  0150c	e1a03002	 mov         r3, r2
  01510	e5c13001	 strb        r3, [r1, #1]
  01514	e1a02422	 mov         r2, r2, lsr #8
  01518	e1a03002	 mov         r3, r2
  0151c	e5c13002	 strb        r3, [r1, #2]
  01520	e1a03422	 mov         r3, r2, lsr #8
  01524	e5c13003	 strb        r3, [r1, #3]

; 1055 :             break;

  01528	ea00009f	 b           |$LN22@wdev_MXDM_@5|
  0152c		 |$LN10@wdev_MXDM_@5|

; 1056 :         }
; 1057 : 
; 1058 :     case MIXER_GETLINECONTROLSF_ONEBYTYPE:
; 1059 :         // retrieve the control specified by pDetail->dwLineID and pDetail->dwControlType
; 1060 :         {
; 1061 :             DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineControls: ONEBYTYPE %x \r\n"), usLineID));

  0152c	e59f3294	 ldr         r3, [pc, #0x294]
  01530	e5933440	 ldr         r3, [r3, #0x440]
  01534	e3130004	 tst         r3, #4
  01538	0a000006	 beq         |$LN36@wdev_MXDM_@5|
  0153c	e1dd30b0	 ldrh        r3, [sp]
  01540	e1a01003	 mov         r1, r3
  01544	e59f028c	 ldr         r0, [pc, #0x28C]
  01548	eb000000	 bl          NKDbgPrintfW
  0154c	e3a03001	 mov         r3, #1
  01550	e58d3054	 str         r3, [sp, #0x54]
  01554	ea000001	 b           |$LN37@wdev_MXDM_@5|
  01558		 |$LN36@wdev_MXDM_@5|
  01558	e3a03000	 mov         r3, #0
  0155c	e58d3054	 str         r3, [sp, #0x54]
  01560		 |$LN37@wdev_MXDM_@5|

; 1062 : 
; 1063 :             if (dwCount < 1)

  01560	e59d3004	 ldr         r3, [sp, #4]
  01564	e3530001	 cmp         r3, #1
  01568	2a00000d	 bcs         |$LN9@wdev_MXDM_@5|

; 1064 :             {
; 1065 :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: control count must be non zero\r\n")));

  0156c	e59f3254	 ldr         r3, [pc, #0x254]
  01570	e5933440	 ldr         r3, [r3, #0x440]
  01574	e3130902	 tst         r3, #2, 18
  01578	0a000004	 beq         |$LN38@wdev_MXDM_@5|
  0157c	e59f0250	 ldr         r0, [pc, #0x250]
  01580	eb000000	 bl          NKDbgPrintfW
  01584	e3a03001	 mov         r3, #1
  01588	e58d3058	 str         r3, [sp, #0x58]
  0158c	ea000001	 b           |$LN39@wdev_MXDM_@5|
  01590		 |$LN38@wdev_MXDM_@5|
  01590	e3a03000	 mov         r3, #0
  01594	e58d3058	 str         r3, [sp, #0x58]
  01598		 |$LN39@wdev_MXDM_@5|

; 1066 :                 return MMSYSERR_INVALPARAM;

  01598	e3a0300b	 mov         r3, #0xB
  0159c	e58d3024	 str         r3, [sp, #0x24]
  015a0	ea000083	 b           |$LN24@wdev_MXDM_@5|
  015a4		 |$LN9@wdev_MXDM_@5|

; 1067 :             }
; 1068 : 
; 1069 :             MixerControl *pMixerControl = NULL;

  015a4	e3a03000	 mov         r3, #0
  015a8	e58d3020	 str         r3, [sp, #0x20]

; 1070 : 
; 1071 :             int Index;
; 1072 :             for (Index = 0;;Index++)

  015ac	e3a03000	 mov         r3, #0
  015b0	e58d301c	 str         r3, [sp, #0x1C]
  015b4	ea000002	 b           |$LN8@wdev_MXDM_@5|
  015b8		 |$LN7@wdev_MXDM_@5|
  015b8	e59d301c	 ldr         r3, [sp, #0x1C]
  015bc	e2833001	 add         r3, r3, #1
  015c0	e58d301c	 str         r3, [sp, #0x1C]
  015c4		 |$LN8@wdev_MXDM_@5|

; 1073 :             {
; 1074 :                 pMixerControl = g_pMixerControlList->LookupControlByIndex(Index);

  015c4	e59d101c	 ldr         r1, [sp, #0x1C]
  015c8	e59f3200	 ldr         r3, [pc, #0x200]
  015cc	e5930000	 ldr         r0, [r3]
  015d0	eb000000	 bl          |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z|
  015d4	e58d005c	 str         r0, [sp, #0x5C]
  015d8	e59d305c	 ldr         r3, [sp, #0x5C]
  015dc	e58d3020	 str         r3, [sp, #0x20]

; 1075 :                 if (!pMixerControl)

  015e0	e59d3020	 ldr         r3, [sp, #0x20]
  015e4	e3530000	 cmp         r3, #0
  015e8	1a000000	 bne         |$LN5@wdev_MXDM_@5|

; 1076 :                 {
; 1077 :                     break;

  015ec	ea000027	 b           |$LN6@wdev_MXDM_@5|
  015f0		 |$LN5@wdev_MXDM_@5|

; 1078 :                 }
; 1079 : 
; 1080 :                 if ( (pMixerControl->GetLineID() == usLineID) && (pMixerControl->GetControlType() == pDetail->dwControlType) )

  015f0	e59d3020	 ldr         r3, [sp, #0x20]
  015f4	e5933000	 ldr         r3, [r3]
  015f8	e2833018	 add         r3, r3, #0x18
  015fc	e59d0020	 ldr         r0, [sp, #0x20]
  01600	e5933000	 ldr         r3, [r3]
  01604	e1a0e00f	 mov         lr, pc
  01608	e12fff13	 bx          r3
  0160c	e1a03800	 mov         r3, r0, lsl #16
  01610	e1a03823	 mov         r3, r3, lsr #16
  01614	e1cd36b0	 strh        r3, [sp, #0x60]
  01618	e1dd36b0	 ldrh        r3, [sp, #0x60]
  0161c	e1a02003	 mov         r2, r3
  01620	e1dd30b0	 ldrh        r3, [sp]
  01624	e1520003	 cmp         r2, r3
  01628	1a000017	 bne         |$LN4@wdev_MXDM_@5|
  0162c	e59d3020	 ldr         r3, [sp, #0x20]
  01630	e5933000	 ldr         r3, [r3]
  01634	e2833014	 add         r3, r3, #0x14
  01638	e59d0020	 ldr         r0, [sp, #0x20]
  0163c	e5933000	 ldr         r3, [r3]
  01640	e1a0e00f	 mov         lr, pc
  01644	e12fff13	 bx          r3
  01648	e58d0064	 str         r0, [sp, #0x64]
  0164c	e59d307c	 ldr         r3, [sp, #0x7C]
  01650	e2830008	 add         r0, r3, #8
  01654	e59d1064	 ldr         r1, [sp, #0x64]
  01658	e5d03003	 ldrb        r3, [r0, #3]
  0165c	e1a02403	 mov         r2, r3, lsl #8
  01660	e5d03002	 ldrb        r3, [r0, #2]
  01664	e1833002	 orr         r3, r3, r2
  01668	e1a02403	 mov         r2, r3, lsl #8
  0166c	e5d03001	 ldrb        r3, [r0, #1]
  01670	e1833002	 orr         r3, r3, r2
  01674	e1a02403	 mov         r2, r3, lsl #8
  01678	e5d03000	 ldrb        r3, [r0]
  0167c	e1833002	 orr         r3, r3, r2
  01680	e1510003	 cmp         r1, r3
  01684	1a000000	 bne         |$LN4@wdev_MXDM_@5|

; 1081 :                 {
; 1082 :                     break;

  01688	ea000000	 b           |$LN6@wdev_MXDM_@5|
  0168c		 |$LN4@wdev_MXDM_@5|

; 1083 :                 }
; 1084 :             }

  0168c	eaffffc9	 b           |$LN7@wdev_MXDM_@5|
  01690		 |$LN6@wdev_MXDM_@5|

; 1085 : 
; 1086 :             if (!pMixerControl)

  01690	e59d3020	 ldr         r3, [sp, #0x20]
  01694	e3530000	 cmp         r3, #0
  01698	1a00002a	 bne         |$LN3@wdev_MXDM_@5|

; 1087 :             {
; 1088 :                 // not to be alarmed: SndVol32 queries for LOTS of control types we don't have
; 1089 :                 DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineControls: line %04x has no control of type %s (%08x)\r\n"), usLineID, COMPTYPE(pDetail->dwControlType), pDetail->dwControlType));

  0169c	e59f3124	 ldr         r3, [pc, #0x124]
  016a0	e5933440	 ldr         r3, [r3, #0x440]
  016a4	e3130004	 tst         r3, #4
  016a8	0a000020	 beq         |$LN40@wdev_MXDM_@5|
  016ac	e59d307c	 ldr         r3, [sp, #0x7C]
  016b0	e2831008	 add         r1, r3, #8
  016b4	e5d13003	 ldrb        r3, [r1, #3]
  016b8	e1a02403	 mov         r2, r3, lsl #8
  016bc	e5d13002	 ldrb        r3, [r1, #2]
  016c0	e1833002	 orr         r3, r3, r2
  016c4	e1a02403	 mov         r2, r3, lsl #8
  016c8	e5d13001	 ldrb        r3, [r1, #1]
  016cc	e1833002	 orr         r3, r3, r2
  016d0	e1a02403	 mov         r2, r3, lsl #8
  016d4	e5d13000	 ldrb        r3, [r1]
  016d8	e1830002	 orr         r0, r3, r2
  016dc	eb000000	 bl          |?COMPTYPE@@YAPAGK@Z|
  016e0	e58d0068	 str         r0, [sp, #0x68]
  016e4	e59d307c	 ldr         r3, [sp, #0x7C]
  016e8	e2831008	 add         r1, r3, #8
  016ec	e5d13003	 ldrb        r3, [r1, #3]
  016f0	e1a02403	 mov         r2, r3, lsl #8
  016f4	e5d13002	 ldrb        r3, [r1, #2]
  016f8	e1833002	 orr         r3, r3, r2
  016fc	e1a02403	 mov         r2, r3, lsl #8
  01700	e5d13001	 ldrb        r3, [r1, #1]
  01704	e1833002	 orr         r3, r3, r2
  01708	e1a02403	 mov         r2, r3, lsl #8
  0170c	e5d13000	 ldrb        r3, [r1]
  01710	e1833002	 orr         r3, r3, r2
  01714	e59d2068	 ldr         r2, [sp, #0x68]
  01718	e1dd10b0	 ldrh        r1, [sp]
  0171c	e59f00a8	 ldr         r0, [pc, #0xA8]
  01720	eb000000	 bl          NKDbgPrintfW
  01724	e3a03001	 mov         r3, #1
  01728	e58d306c	 str         r3, [sp, #0x6C]
  0172c	ea000001	 b           |$LN41@wdev_MXDM_@5|
  01730		 |$LN40@wdev_MXDM_@5|
  01730	e3a03000	 mov         r3, #0
  01734	e58d306c	 str         r3, [sp, #0x6C]
  01738		 |$LN41@wdev_MXDM_@5|

; 1090 :                 return MMSYSERR_INVALPARAM;

  01738	e3a0300b	 mov         r3, #0xB
  0173c	e58d3024	 str         r3, [sp, #0x24]
  01740	ea00001b	 b           |$LN24@wdev_MXDM_@5|

; 1091 :             }
; 1092 :             else

  01744	ea00000a	 b           |$LN2@wdev_MXDM_@5|
  01748		 |$LN3@wdev_MXDM_@5|

; 1093 :             {
; 1094 :                 pMixerControl->CopyMixerControl(pamxctrl);

  01748	e59d1008	 ldr         r1, [sp, #8]
  0174c	e59d3020	 ldr         r3, [sp, #0x20]
  01750	e5933000	 ldr         r3, [r3]
  01754	e2833008	 add         r3, r3, #8
  01758	e59d0020	 ldr         r0, [sp, #0x20]
  0175c	e5933000	 ldr         r3, [r3]
  01760	e1a0e00f	 mov         lr, pc
  01764	e12fff13	 bx          r3

; 1095 :                 return MMSYSERR_NOERROR;

  01768	e3a03000	 mov         r3, #0
  0176c	e58d3024	 str         r3, [sp, #0x24]
  01770	ea00000f	 b           |$LN24@wdev_MXDM_@5|
  01774		 |$LN2@wdev_MXDM_@5|

; 1096 :             }
; 1097 :         }
; 1098 :         break;

  01774	ea00000c	 b           |$LN22@wdev_MXDM_@5|
  01778		 |$LN1@wdev_MXDM_@5|

; 1099 :     default:
; 1100 :         DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: invalid query %08x\r\n"), dwFlags & MIXER_GETLINECONTROLSF_QUERYMASK));

  01778	e59f3048	 ldr         r3, [pc, #0x48]
  0177c	e5933440	 ldr         r3, [r3, #0x440]
  01780	e3130902	 tst         r3, #2, 18
  01784	0a000006	 beq         |$LN42@wdev_MXDM_@5|
  01788	e59d3080	 ldr         r3, [sp, #0x80]
  0178c	e203100f	 and         r1, r3, #0xF
  01790	e59f002c	 ldr         r0, [pc, #0x2C]
  01794	eb000000	 bl          NKDbgPrintfW
  01798	e3a03001	 mov         r3, #1
  0179c	e58d3070	 str         r3, [sp, #0x70]
  017a0	ea000001	 b           |$LN43@wdev_MXDM_@5|
  017a4		 |$LN42@wdev_MXDM_@5|
  017a4	e3a03000	 mov         r3, #0
  017a8	e58d3070	 str         r3, [sp, #0x70]
  017ac		 |$LN43@wdev_MXDM_@5|
  017ac		 |$LN22@wdev_MXDM_@5|

; 1101 :         break;
; 1102 : 
; 1103 :     }
; 1104 :     return MMSYSERR_NOERROR;

  017ac	e3a03000	 mov         r3, #0
  017b0	e58d3024	 str         r3, [sp, #0x24]
  017b4		 |$LN24@wdev_MXDM_@5|

; 1105 : }

  017b4	e59d0024	 ldr         r0, [sp, #0x24]
  017b8	e28dd074	 add         sp, sp, #0x74
  017bc	e89d6000	 ldmia       sp, {sp, lr}
  017c0	e12fff1e	 bx          lr
  017c4		 |$LN47@wdev_MXDM_@5|
  017c4		 |$LN48@wdev_MXDM_@5|
  017c4	00000000	 DCD         |??_C@_1FG@OKMEMBEL@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAq?$AAu@|
  017c8		 |$LN49@wdev_MXDM_@5|
  017c8	00000000	 DCD         |dpCurSettings|
  017cc		 |$LN50@wdev_MXDM_@5|
  017cc	00000000	 DCD         |??_C@_1IG@OCFKLJPN@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AA0?$AA4?$AAx?$AA?5@|
  017d0		 |$LN51@wdev_MXDM_@5|
  017d0	00000000	 DCD         |g_pMixerControlList|
  017d4		 |$LN52@wdev_MXDM_@5|
  017d4	00000000	 DCD         |??_C@_1GO@CMCLLJCP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@|
  017d8		 |$LN53@wdev_MXDM_@5|
  017d8	00000000	 DCD         |??_C@_1EM@NAGBJFBM@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAO?$AAN?$AAE?$AAB?$AAY?$AAT?$AAY?$AAP?$AAE?$AA?5@|
  017dc		 |$LN54@wdev_MXDM_@5|
  017dc	00000000	 DCD         |??_C@_1GM@MONMFDNB@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@|
  017e0		 |$LN55@wdev_MXDM_@5|
  017e0	00000000	 DCD         |??_C@_1EG@IPGPLBHF@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAO?$AAN?$AAE?$AAB?$AAY?$AAI?$AAD?$AA?5?$AA?$CF?$AAx@|
  017e4		 |$LN56@wdev_MXDM_@5|
  017e4	00000000	 DCD         |??_C@_1JG@CANNPDPK@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@|
  017e8		 |$LN57@wdev_MXDM_@5|
  017e8	00000000	 DCD         |??_C@_1FK@PFCBAFBC@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi@|
  017ec		 |$LN58@wdev_MXDM_@5|
  017ec	00000000	 DCD         |??_C@_1DO@KJNHEOOA@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAA?$AAL?$AAL?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  017f0		 |$M36648|

			 ENDP  ; |?wdev_MXDM_GETLINECONTROLS@@YAKPAUtMIXERLINECONTROLS@@K@Z|, wdev_MXDM_GETLINECONTROLS


  00000			 AREA	 |.pdata|, PDATA
|$T36668| DCD	|$LN6@LookupCont|
	DCD	0x40001604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z| PROC ; MixerControlList::LookupControlByIndex

; 732  :     {

  00000		 |$LN6@LookupCont|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36665|

; 733  :         if (Index >= m_cControls)

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e3530006	 cmp         r3, #6
  00018	3a000002	 bcc         |$LN1@LookupCont|

; 734  :         {
; 735  :             return NULL;

  0001c	e3a03000	 mov         r3, #0
  00020	e58d3000	 str         r3, [sp]
  00024	ea000007	 b           |$LN2@LookupCont|
  00028		 |$LN1@LookupCont|

; 736  :         }
; 737  :         return m_MixerControlList[Index];

  00028	e59d300c	 ldr         r3, [sp, #0xC]
  0002c	e2831038	 add         r1, r3, #0x38
  00030	e59d2010	 ldr         r2, [sp, #0x10]
  00034	e3a03004	 mov         r3, #4
  00038	e0030392	 mul         r3, r2, r3
  0003c	e0813003	 add         r3, r1, r3
  00040	e5933000	 ldr         r3, [r3]
  00044	e58d3000	 str         r3, [sp]
  00048		 |$LN2@LookupCont|

; 738  :     }

  00048	e59d0000	 ldr         r0, [sp]
  0004c	e28dd004	 add         sp, sp, #4
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M36666|

			 ENDP  ; |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z|, MixerControlList::LookupControlByIndex

	EXPORT	|??_C@_1DK@HNFPDNP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?wdev_MXDM_GETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z| ; wdev_MXDM_GETCONTROLDETAILS

  00040			 AREA	 |.pdata|, PDATA
|$T36678| DCD	|$LN8@wdev_MXDM_@6|
	DCD	0x40004704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@HNFPDNP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "D", 0x0, "e", 0x0, "t", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "s", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  017f0			 AREA	 |.text|, CODE, ARM

  017f0		 |?wdev_MXDM_GETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; wdev_MXDM_GETCONTROLDETAILS

; 1109 : {

  017f0		 |$LN8@wdev_MXDM_@6|
  017f0	e1a0c00d	 mov         r12, sp
  017f4	e92d0003	 stmdb       sp!, {r0, r1}
  017f8	e92d5000	 stmdb       sp!, {r12, lr}
  017fc	e24dd014	 sub         sp, sp, #0x14
  01800		 |$M36675|

; 1110 :     // API guarantees that pDetail points to accessible, aligned, properly sized MIXERCONTROLDETAILS structure
; 1111 :     DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerControlDetails(%d)\r\n"), pDetail->dwControlID));

  01800	e59f3100	 ldr         r3, [pc, #0x100]
  01804	e5933440	 ldr         r3, [r3, #0x440]
  01808	e3130004	 tst         r3, #4
  0180c	0a000010	 beq         |$LN4@wdev_MXDM_@6|
  01810	e59d301c	 ldr         r3, [sp, #0x1C]
  01814	e2831004	 add         r1, r3, #4
  01818	e5d13003	 ldrb        r3, [r1, #3]
  0181c	e1a02403	 mov         r2, r3, lsl #8
  01820	e5d13002	 ldrb        r3, [r1, #2]
  01824	e1833002	 orr         r3, r3, r2
  01828	e1a02403	 mov         r2, r3, lsl #8
  0182c	e5d13001	 ldrb        r3, [r1, #1]
  01830	e1833002	 orr         r3, r3, r2
  01834	e1a02403	 mov         r2, r3, lsl #8
  01838	e5d13000	 ldrb        r3, [r1]
  0183c	e1831002	 orr         r1, r3, r2
  01840	e59f00bc	 ldr         r0, [pc, #0xBC]
  01844	eb000000	 bl          NKDbgPrintfW
  01848	e3a03001	 mov         r3, #1
  0184c	e58d3008	 str         r3, [sp, #8]
  01850	ea000001	 b           |$LN5@wdev_MXDM_@6|
  01854		 |$LN4@wdev_MXDM_@6|
  01854	e3a03000	 mov         r3, #0
  01858	e58d3008	 str         r3, [sp, #8]
  0185c		 |$LN5@wdev_MXDM_@6|

; 1112 : 
; 1113 :     MixerControl *pMixerControl = g_pMixerControlList->LookupControlByIndex(pDetail->dwControlID);

  0185c	e59d301c	 ldr         r3, [sp, #0x1C]
  01860	e2831004	 add         r1, r3, #4
  01864	e5d13003	 ldrb        r3, [r1, #3]
  01868	e1a02403	 mov         r2, r3, lsl #8
  0186c	e5d13002	 ldrb        r3, [r1, #2]
  01870	e1833002	 orr         r3, r3, r2
  01874	e1a02403	 mov         r2, r3, lsl #8
  01878	e5d13001	 ldrb        r3, [r1, #1]
  0187c	e1833002	 orr         r3, r3, r2
  01880	e1a02403	 mov         r2, r3, lsl #8
  01884	e5d13000	 ldrb        r3, [r1]
  01888	e1831002	 orr         r1, r3, r2
  0188c	e59f306c	 ldr         r3, [pc, #0x6C]
  01890	e5930000	 ldr         r0, [r3]
  01894	eb000000	 bl          |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z|
  01898	e58d000c	 str         r0, [sp, #0xC]
  0189c	e59d300c	 ldr         r3, [sp, #0xC]
  018a0	e58d3000	 str         r3, [sp]

; 1114 :     if (!pMixerControl)

  018a4	e59d3000	 ldr         r3, [sp]
  018a8	e3530000	 cmp         r3, #0
  018ac	1a000003	 bne         |$LN1@wdev_MXDM_@6|

; 1115 :     {
; 1116 :         return MIXERR_INVALCONTROL;

  018b0	e3a03b01	 mov         r3, #1, 22
  018b4	e3833001	 orr         r3, r3, #1
  018b8	e58d3004	 str         r3, [sp, #4]
  018bc	ea00000b	 b           |$LN2@wdev_MXDM_@6|
  018c0		 |$LN1@wdev_MXDM_@6|

; 1117 :     }
; 1118 : 
; 1119 :     return pMixerControl->GetControlDetails(pDetail, dwFlags);

  018c0	e59d2020	 ldr         r2, [sp, #0x20]
  018c4	e59d101c	 ldr         r1, [sp, #0x1C]
  018c8	e59d3000	 ldr         r3, [sp]
  018cc	e5933000	 ldr         r3, [r3]
  018d0	e283300c	 add         r3, r3, #0xC
  018d4	e59d0000	 ldr         r0, [sp]
  018d8	e5933000	 ldr         r3, [r3]
  018dc	e1a0e00f	 mov         lr, pc
  018e0	e12fff13	 bx          r3
  018e4	e58d0010	 str         r0, [sp, #0x10]
  018e8	e59d3010	 ldr         r3, [sp, #0x10]
  018ec	e58d3004	 str         r3, [sp, #4]
  018f0		 |$LN2@wdev_MXDM_@6|

; 1120 : }

  018f0	e59d0004	 ldr         r0, [sp, #4]
  018f4	e28dd014	 add         sp, sp, #0x14
  018f8	e89d6000	 ldmia       sp, {sp, lr}
  018fc	e12fff1e	 bx          lr
  01900		 |$LN9@wdev_MXDM_@6|
  01900		 |$LN10@wdev_MXDM_@6|
  01900	00000000	 DCD         |g_pMixerControlList|
  01904		 |$LN11@wdev_MXDM_@6|
  01904	00000000	 DCD         |??_C@_1DK@HNFPDNP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01908		 |$LN12@wdev_MXDM_@6|
  01908	00000000	 DCD         |dpCurSettings|
  0190c		 |$M36676|

			 ENDP  ; |?wdev_MXDM_GETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z|, wdev_MXDM_GETCONTROLDETAILS

	EXPORT	|??_C@_1DK@IAOOCHGE@?$AAS?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?wdev_MXDM_SETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z| ; wdev_MXDM_SETCONTROLDETAILS

  00048			 AREA	 |.pdata|, PDATA
|$T36690| DCD	|$LN8@wdev_MXDM_@7|
	DCD	0x40005504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@IAOOCHGE@?$AAS?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "D", 0x0, "e", 0x0, "t", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "s", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0190c			 AREA	 |.text|, CODE, ARM

  0190c		 |?wdev_MXDM_SETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; wdev_MXDM_SETCONTROLDETAILS

; 1124 : {

  0190c		 |$LN8@wdev_MXDM_@7|
  0190c	e1a0c00d	 mov         r12, sp
  01910	e92d0003	 stmdb       sp!, {r0, r1}
  01914	e92d5000	 stmdb       sp!, {r12, lr}
  01918	e24dd010	 sub         sp, sp, #0x10
  0191c		 |$M36687|

; 1125 :     // API guarantees that pDetail points to accessible, aligned, properly siezd MIXERCONTROLDETAILS structure
; 1126 :     DEBUGMSG(ZONE_HWMIXER, (TEXT("SetMixerControlDetails(%d)\r\n"), pDetail->dwControlID));

  0191c	e59f3138	 ldr         r3, [pc, #0x138]
  01920	e5933440	 ldr         r3, [r3, #0x440]
  01924	e3130004	 tst         r3, #4
  01928	0a000010	 beq         |$LN4@wdev_MXDM_@7|
  0192c	e59d3018	 ldr         r3, [sp, #0x18]
  01930	e2831004	 add         r1, r3, #4
  01934	e5d13003	 ldrb        r3, [r1, #3]
  01938	e1a02403	 mov         r2, r3, lsl #8
  0193c	e5d13002	 ldrb        r3, [r1, #2]
  01940	e1833002	 orr         r3, r3, r2
  01944	e1a02403	 mov         r2, r3, lsl #8
  01948	e5d13001	 ldrb        r3, [r1, #1]
  0194c	e1833002	 orr         r3, r3, r2
  01950	e1a02403	 mov         r2, r3, lsl #8
  01954	e5d13000	 ldrb        r3, [r1]
  01958	e1831002	 orr         r1, r3, r2
  0195c	e59f00f4	 ldr         r0, [pc, #0xF4]
  01960	eb000000	 bl          NKDbgPrintfW
  01964	e3a03001	 mov         r3, #1
  01968	e58d3008	 str         r3, [sp, #8]
  0196c	ea000001	 b           |$LN5@wdev_MXDM_@7|
  01970		 |$LN4@wdev_MXDM_@7|
  01970	e3a03000	 mov         r3, #0
  01974	e58d3008	 str         r3, [sp, #8]
  01978		 |$LN5@wdev_MXDM_@7|

; 1127 : 
; 1128 :     MixerControl *pMixerControl = g_pMixerControlList->LookupControlByIndex(pDetail->dwControlID);

  01978	e59d3018	 ldr         r3, [sp, #0x18]
  0197c	e2831004	 add         r1, r3, #4
  01980	e5d13003	 ldrb        r3, [r1, #3]
  01984	e1a02403	 mov         r2, r3, lsl #8
  01988	e5d13002	 ldrb        r3, [r1, #2]
  0198c	e1833002	 orr         r3, r3, r2
  01990	e1a02403	 mov         r2, r3, lsl #8
  01994	e5d13001	 ldrb        r3, [r1, #1]
  01998	e1833002	 orr         r3, r3, r2
  0199c	e1a02403	 mov         r2, r3, lsl #8
  019a0	e5d13000	 ldrb        r3, [r1]
  019a4	e1831002	 orr         r1, r3, r2
  019a8	e59f30a4	 ldr         r3, [pc, #0xA4]
  019ac	e5930000	 ldr         r0, [r3]
  019b0	eb000000	 bl          |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z|
  019b4	e58d000c	 str         r0, [sp, #0xC]
  019b8	e59d300c	 ldr         r3, [sp, #0xC]
  019bc	e58d3000	 str         r3, [sp]

; 1129 :     if (!pMixerControl)

  019c0	e59d3000	 ldr         r3, [sp]
  019c4	e3530000	 cmp         r3, #0
  019c8	1a000003	 bne         |$LN1@wdev_MXDM_@7|

; 1130 :     {
; 1131 :         return MIXERR_INVALCONTROL;

  019cc	e3a03b01	 mov         r3, #1, 22
  019d0	e3833001	 orr         r3, r3, #1
  019d4	e58d3004	 str         r3, [sp, #4]
  019d8	ea000019	 b           |$LN2@wdev_MXDM_@7|
  019dc		 |$LN1@wdev_MXDM_@7|

; 1132 :     }
; 1133 : 
; 1134 :     pMixerControl->SetControlDetails(pDetail, dwFlags);

  019dc	e59d201c	 ldr         r2, [sp, #0x1C]
  019e0	e59d1018	 ldr         r1, [sp, #0x18]
  019e4	e59d3000	 ldr         r3, [sp]
  019e8	e5933000	 ldr         r3, [r3]
  019ec	e2833010	 add         r3, r3, #0x10
  019f0	e59d0000	 ldr         r0, [sp]
  019f4	e5933000	 ldr         r3, [r3]
  019f8	e1a0e00f	 mov         lr, pc
  019fc	e12fff13	 bx          r3

; 1135 : 
; 1136 :     PerformMixerCallbacks (MM_MIXM_CONTROL_CHANGE, pDetail->dwControlID);

  01a00	e59d3018	 ldr         r3, [sp, #0x18]
  01a04	e2831004	 add         r1, r3, #4
  01a08	e5d13003	 ldrb        r3, [r1, #3]
  01a0c	e1a02403	 mov         r2, r3, lsl #8
  01a10	e5d13002	 ldrb        r3, [r1, #2]
  01a14	e1833002	 orr         r3, r3, r2
  01a18	e1a02403	 mov         r2, r3, lsl #8
  01a1c	e5d13001	 ldrb        r3, [r1, #1]
  01a20	e1833002	 orr         r3, r3, r2
  01a24	e1a02403	 mov         r2, r3, lsl #8
  01a28	e5d13000	 ldrb        r3, [r1]
  01a2c	e1831002	 orr         r1, r3, r2
  01a30	e3a00c03	 mov         r0, #3, 24
  01a34	e38000d1	 orr         r0, r0, #0xD1
  01a38	eb000000	 bl          |?PerformMixerCallbacks@@YAXKK@Z|

; 1137 : 
; 1138 :     return MMSYSERR_NOERROR;

  01a3c	e3a03000	 mov         r3, #0
  01a40	e58d3004	 str         r3, [sp, #4]
  01a44		 |$LN2@wdev_MXDM_@7|

; 1139 : }

  01a44	e59d0004	 ldr         r0, [sp, #4]
  01a48	e28dd010	 add         sp, sp, #0x10
  01a4c	e89d6000	 ldmia       sp, {sp, lr}
  01a50	e12fff1e	 bx          lr
  01a54		 |$LN9@wdev_MXDM_@7|
  01a54		 |$LN10@wdev_MXDM_@7|
  01a54	00000000	 DCD         |g_pMixerControlList|
  01a58		 |$LN11@wdev_MXDM_@7|
  01a58	00000000	 DCD         |??_C@_1DK@IAOOCHGE@?$AAS?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01a5c		 |$LN12@wdev_MXDM_@7|
  01a5c	00000000	 DCD         |dpCurSettings|
  01a60		 |$M36688|

			 ENDP  ; |?wdev_MXDM_SETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z|, wdev_MXDM_SETCONTROLDETAILS

	EXPORT	|??0MixerControlList@@QAA@XZ|		; MixerControlList::MixerControlList
	EXPORT	|?InitMixerControls@@YAHXZ|		; InitMixerControls
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00050			 AREA	 |.pdata|, PDATA
|$T36703| DCD	|$LN7@InitMixerC|
	DCD	0x40001c02
; Function compile flags: /Odtp

  01a60			 AREA	 |.text|, CODE, ARM

  01a60		 |?InitMixerControls@@YAHXZ| PROC	; InitMixerControls

; 1142 : {

  01a60		 |$LN7@InitMixerC|
  01a60	e52de004	 str         lr, [sp, #-4]!
  01a64	e24dd014	 sub         sp, sp, #0x14
  01a68		 |$M36700|

; 1143 :     g_pMixerControlList = new MixerControlList;

  01a68	e3a00050	 mov         r0, #0x50
  01a6c	eb000000	 bl          |??2@YAPAXI@Z|
  01a70	e58d0008	 str         r0, [sp, #8]
  01a74	e59d3008	 ldr         r3, [sp, #8]
  01a78	e58d3000	 str         r3, [sp]
  01a7c	e59d3000	 ldr         r3, [sp]
  01a80	e3530000	 cmp         r3, #0
  01a84	0a000005	 beq         |$LN3@InitMixerC|
  01a88	e59d0000	 ldr         r0, [sp]
  01a8c	eb000000	 bl          |??0MixerControlList@@QAA@XZ|
  01a90	e58d000c	 str         r0, [sp, #0xC]
  01a94	e59d300c	 ldr         r3, [sp, #0xC]
  01a98	e58d3010	 str         r3, [sp, #0x10]
  01a9c	ea000001	 b           |$LN4@InitMixerC|
  01aa0		 |$LN3@InitMixerC|
  01aa0	e3a03000	 mov         r3, #0
  01aa4	e58d3010	 str         r3, [sp, #0x10]
  01aa8		 |$LN4@InitMixerC|
  01aa8	e59d2010	 ldr         r2, [sp, #0x10]
  01aac	e59f3018	 ldr         r3, [pc, #0x18]
  01ab0	e5832000	 str         r2, [r3]

; 1144 :     return TRUE;

  01ab4	e3a03001	 mov         r3, #1
  01ab8	e58d3004	 str         r3, [sp, #4]

; 1145 : }

  01abc	e59d0004	 ldr         r0, [sp, #4]
  01ac0	e28dd014	 add         sp, sp, #0x14
  01ac4	e49de004	 ldr         lr, [sp], #4
  01ac8	e12fff1e	 bx          lr
  01acc		 |$LN8@InitMixerC|
  01acc		 |$LN9@InitMixerC|
  01acc	00000000	 DCD         |g_pMixerControlList|
  01ad0		 |$M36701|

			 ENDP  ; |?InitMixerControls@@YAHXZ|, InitMixerControls

	EXPORT	|??0MixerControlMicBoost@@QAA@XZ|	; MixerControlMicBoost::MixerControlMicBoost
	EXPORT	|??0MixerControlInputMux@@QAA@XZ|	; MixerControlInputMux::MixerControlInputMux
	EXPORT	|??0MixerControlInputMute@@QAA@XZ|	; MixerControlInputMute::MixerControlInputMute
	EXPORT	|??0MixerControlVolumeInput@@QAA@XZ|	; MixerControlVolumeInput::MixerControlVolumeInput
	EXPORT	|??0MixerControlMuteMaster@@QAA@XZ|	; MixerControlMuteMaster::MixerControlMuteMaster
	EXPORT	|??0MixerControlVolumeMaster@@QAA@XZ|	; MixerControlVolumeMaster::MixerControlVolumeMaster
	EXPORT	|??_7MixerControlList@@6B@| [ DATA ]	; MixerControlList::`vftable'
	IMPORT	|??_EMixerControlList@@UAAPAXI@Z|, WEAK |??_GMixerControlList@@UAAPAXI@Z| ; MixerControlList::`vector deleting destructor', MixerControlList::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36711| DCD	|$LN8@MixerContr|
	DCD	0x40006204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlList@@6B@| DCD |??_EMixerControlList@@UAAPAXI@Z| ; MixerControlList::`vftable'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlList@@QAA@XZ| PROC	; MixerControlList::MixerControlList

; 712  :     MixerControlList()

  00000		 |$LN8@MixerContr|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd020	 sub         sp, sp, #0x20
  00010		 |$M36708|
  00010	e59f216c	 ldr         r2, [pc, #0x16C]
  00014	e59d3028	 ldr         r3, [sp, #0x28]
  00018	e5832000	 str         r2, [r3]
  0001c	e59d3028	 ldr         r3, [sp, #0x28]
  00020	e2830004	 add         r0, r3, #4
  00024	eb000000	 bl          |??0MixerControlVolumeMaster@@QAA@XZ|
  00028	e58d0008	 str         r0, [sp, #8]
  0002c	e59d3028	 ldr         r3, [sp, #0x28]
  00030	e283000c	 add         r0, r3, #0xC
  00034	eb000000	 bl          |??0MixerControlMuteMaster@@QAA@XZ|
  00038	e58d000c	 str         r0, [sp, #0xC]
  0003c	e59d3028	 ldr         r3, [sp, #0x28]
  00040	e2830014	 add         r0, r3, #0x14
  00044	eb000000	 bl          |??0MixerControlVolumeInput@@QAA@XZ|
  00048	e58d0010	 str         r0, [sp, #0x10]
  0004c	e59d3028	 ldr         r3, [sp, #0x28]
  00050	e283001c	 add         r0, r3, #0x1C
  00054	eb000000	 bl          |??0MixerControlInputMute@@QAA@XZ|
  00058	e58d0014	 str         r0, [sp, #0x14]
  0005c	e59d3028	 ldr         r3, [sp, #0x28]
  00060	e2830024	 add         r0, r3, #0x24
  00064	eb000000	 bl          |??0MixerControlInputMux@@QAA@XZ|
  00068	e58d0018	 str         r0, [sp, #0x18]
  0006c	e59d3028	 ldr         r3, [sp, #0x28]
  00070	e2830030	 add         r0, r3, #0x30
  00074	eb000000	 bl          |??0MixerControlMicBoost@@QAA@XZ|
  00078	e58d001c	 str         r0, [sp, #0x1C]

; 713  :     {
; 714  :         m_MixerControlList[0] = &m_MixerControlVolumeMaster;

  0007c	e59d3028	 ldr         r3, [sp, #0x28]
  00080	e2832004	 add         r2, r3, #4
  00084	e59d3028	 ldr         r3, [sp, #0x28]
  00088	e2833038	 add         r3, r3, #0x38
  0008c	e5832000	 str         r2, [r3]

; 715  :         m_MixerControlList[1] = &m_MixerControlMuteMaster;

  00090	e59d3028	 ldr         r3, [sp, #0x28]
  00094	e283200c	 add         r2, r3, #0xC
  00098	e59d3028	 ldr         r3, [sp, #0x28]
  0009c	e283303c	 add         r3, r3, #0x3C
  000a0	e5832000	 str         r2, [r3]

; 716  :         m_MixerControlList[2] = &m_MixerControlVolumeInput;

  000a4	e59d3028	 ldr         r3, [sp, #0x28]
  000a8	e2832014	 add         r2, r3, #0x14
  000ac	e59d3028	 ldr         r3, [sp, #0x28]
  000b0	e2833040	 add         r3, r3, #0x40
  000b4	e5832000	 str         r2, [r3]

; 717  :         m_MixerControlList[3] = &m_MixerControlInputMute;

  000b8	e59d3028	 ldr         r3, [sp, #0x28]
  000bc	e283201c	 add         r2, r3, #0x1C
  000c0	e59d3028	 ldr         r3, [sp, #0x28]
  000c4	e2833044	 add         r3, r3, #0x44
  000c8	e5832000	 str         r2, [r3]

; 718  :         m_MixerControlList[4] = &m_MixerControlInputMux;

  000cc	e59d3028	 ldr         r3, [sp, #0x28]
  000d0	e2832024	 add         r2, r3, #0x24
  000d4	e59d3028	 ldr         r3, [sp, #0x28]
  000d8	e2833048	 add         r3, r3, #0x48
  000dc	e5832000	 str         r2, [r3]

; 719  : 		m_MixerControlList[5] = &m_MixerControlMicBoost;

  000e0	e59d3028	 ldr         r3, [sp, #0x28]
  000e4	e2832030	 add         r2, r3, #0x30
  000e8	e59d3028	 ldr         r3, [sp, #0x28]
  000ec	e283304c	 add         r3, r3, #0x4C
  000f0	e5832000	 str         r2, [r3]

; 720  : 
; 721  :         for (DWORD i=0;i<m_cControls;i++)

  000f4	e3a03000	 mov         r3, #0
  000f8	e58d3000	 str         r3, [sp]
  000fc	ea000002	 b           |$LN3@MixerContr|
  00100		 |$LN2@MixerContr|
  00100	e59d3000	 ldr         r3, [sp]
  00104	e2833001	 add         r3, r3, #1
  00108	e58d3000	 str         r3, [sp]
  0010c		 |$LN3@MixerContr|
  0010c	e59d3000	 ldr         r3, [sp]
  00110	e3530006	 cmp         r3, #6
  00114	2a000014	 bcs         |$LN1@MixerContr|

; 722  :         {
; 723  :             m_MixerControlList[i]->SetControlID(i);

  00118	e59d1000	 ldr         r1, [sp]
  0011c	e59d3028	 ldr         r3, [sp, #0x28]
  00120	e2830038	 add         r0, r3, #0x38
  00124	e59d2000	 ldr         r2, [sp]
  00128	e3a03004	 mov         r3, #4
  0012c	e0030392	 mul         r3, r2, r3
  00130	e0803003	 add         r3, r0, r3
  00134	e593e000	 ldr         lr, [r3]
  00138	e59d0000	 ldr         r0, [sp]
  0013c	e3a03004	 mov         r3, #4
  00140	e0020390	 mul         r2, r0, r3
  00144	e59d3028	 ldr         r3, [sp, #0x28]
  00148	e2833038	 add         r3, r3, #0x38
  0014c	e0833002	 add         r3, r3, r2
  00150	e5930000	 ldr         r0, [r3]
  00154	e59e3000	 ldr         r3, [lr]
  00158	e2833004	 add         r3, r3, #4
  0015c	e5933000	 ldr         r3, [r3]
  00160	e1a0e00f	 mov         lr, pc
  00164	e12fff13	 bx          r3

; 724  :         }

  00168	eaffffe4	 b           |$LN2@MixerContr|
  0016c		 |$LN1@MixerContr|

; 725  :     };

  0016c	e59d3028	 ldr         r3, [sp, #0x28]
  00170	e58d3004	 str         r3, [sp, #4]
  00174	e59d0004	 ldr         r0, [sp, #4]
  00178	e28dd020	 add         sp, sp, #0x20
  0017c	e89d6000	 ldmia       sp, {sp, lr}
  00180	e12fff1e	 bx          lr
  00184		 |$LN9@MixerContr|
  00184		 |$LN10@MixerContr|
  00184	00000000	 DCD         |??_7MixerControlList@@6B@|
  00188		 |$M36709|

			 ENDP  ; |??0MixerControlList@@QAA@XZ|, MixerControlList::MixerControlList

	EXPORT	|??_7MixerControlVolumeMaster@@6B@| [ DATA ] ; MixerControlVolumeMaster::`vftable'
	EXPORT	|??0MixerControlVolume@@QAA@XZ|		; MixerControlVolume::MixerControlVolume
	EXPORT	|?SetControlID@MixerControl@@UAAXK@Z|	; MixerControl::SetControlID
	EXPORT	|?CopyMixerControl@MixerControlVolumeMaster@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlVolumeMaster::CopyMixerControl
	EXPORT	|?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlVolume::GetControlDetails
	EXPORT	|?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlVolume::SetControlDetails
	EXPORT	|?GetControlType@MixerControlVolume@@UAAKXZ| ; MixerControlVolume::GetControlType
	EXPORT	|?GetLineID@MixerControlVolumeMaster@@UAAGXZ| ; MixerControlVolumeMaster::GetLineID
	EXPORT	|?SetGain@MixerControlVolumeMaster@@UAAXK@Z| ; MixerControlVolumeMaster::SetGain
	EXPORT	|?GetGain@MixerControlVolumeMaster@@UAAKXZ| ; MixerControlVolumeMaster::GetGain
	IMPORT	|??_EMixerControlVolumeMaster@@UAAPAXI@Z|, WEAK |??_GMixerControlVolumeMaster@@UAAPAXI@Z| ; MixerControlVolumeMaster::`vector deleting destructor', MixerControlVolumeMaster::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36721| DCD	|$LN5@MixerContr@2|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlVolumeMaster@@6B@| DCD |??_EMixerControlVolumeMaster@@UAAPAXI@Z| ; MixerControlVolumeMaster::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlVolumeMaster@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlVolume@@UAAKXZ|
	DCD	|?GetLineID@MixerControlVolumeMaster@@UAAGXZ|
	DCD	|?SetGain@MixerControlVolumeMaster@@UAAXK@Z|
	DCD	|?GetGain@MixerControlVolumeMaster@@UAAKXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlVolumeMaster@@QAA@XZ| PROC ; MixerControlVolumeMaster::MixerControlVolumeMaster

; 396  :     MixerControlVolumeMaster() : MixerControlVolume() {}

  00000		 |$LN5@MixerContr@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36718|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControlVolume@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@MixerContr@2|
  00040		 |$LN7@MixerContr@2|
  00040	00000000	 DCD         |??_7MixerControlVolumeMaster@@6B@|
  00044		 |$M36719|

			 ENDP  ; |??0MixerControlVolumeMaster@@QAA@XZ|, MixerControlVolumeMaster::MixerControlVolumeMaster


  00000			 AREA	 |.pdata|, PDATA
|$T36730| DCD	|$LN5@SetControl|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlID@MixerControl@@UAAXK@Z| PROC ; MixerControl::SetControlID

; 263  :     virtual void SetControlID(DWORD dwControlID) {m_dwControlID = dwControlID;}

  00000		 |$LN5@SetControl|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36727|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832004	 add         r2, r3, #4
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M36728|

			 ENDP  ; |?SetControlID@MixerControl@@UAAXK@Z|, MixerControl::SetControlID

	EXPORT	|??_7MixerControlVolume@@6B@| [ DATA ]	; MixerControlVolume::`vftable'
	EXPORT	|??0MixerControl@@QAA@XZ|		; MixerControl::MixerControl
	EXPORT	|?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlVolume::CopyMixerControl
	IMPORT	|??_EMixerControlVolume@@UAAPAXI@Z|, WEAK |??_GMixerControlVolume@@UAAPAXI@Z| ; MixerControlVolume::`vector deleting destructor', MixerControlVolume::`scalar deleting destructor'
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$T36738| DCD	|$LN5@MixerContr@3|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlVolume@@6B@| DCD |??_EMixerControlVolume@@UAAPAXI@Z| ; MixerControlVolume::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlVolume@@UAAKXZ|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlVolume@@QAA@XZ| PROC	; MixerControlVolume::MixerControlVolume

; 292  :     MixerControlVolume() : MixerControl() {}

  00000		 |$LN5@MixerContr@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36735|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControl@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@MixerContr@3|
  00040		 |$LN7@MixerContr@3|
  00040	00000000	 DCD         |??_7MixerControlVolume@@6B@|
  00044		 |$M36736|

			 ENDP  ; |??0MixerControlVolume@@QAA@XZ|, MixerControlVolume::MixerControlVolume

	EXPORT	|??_7MixerControl@@6B@| [ DATA ]	; MixerControl::`vftable'
	EXPORT	|?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControl::CopyMixerControl
	EXPORT	|?GetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControl::GetControlDetails
	EXPORT	|?SetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControl::SetControlDetails
	IMPORT	|??_EMixerControl@@UAAPAXI@Z|, WEAK |??_GMixerControl@@UAAPAXI@Z| ; MixerControl::`vector deleting destructor', MixerControl::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36748| DCD	|$LN5@MixerContr@4|
	DCD	0x40001204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControl@@6B@| DCD |??_EMixerControl@@UAAPAXI@Z| ; MixerControl::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControl@@QAA@XZ| PROC		; MixerControl::MixerControl

; 260  :     MixerControl() : m_dwControlID((DWORD)-1) {}

  00000		 |$LN5@MixerContr@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36745|
  00010	e59f202c	 ldr         r2, [pc, #0x2C]
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5832000	 str         r2, [r3]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2832004	 add         r2, r3, #4
  00024	e3e03000	 mvn         r3, #0
  00028	e5823000	 str         r3, [r2]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN6@MixerContr@4|
  00044		 |$LN7@MixerContr@4|
  00044	00000000	 DCD         |??_7MixerControl@@6B@|
  00048		 |$M36746|

			 ENDP  ; |??0MixerControl@@QAA@XZ|, MixerControl::MixerControl

	EXPORT	|?GetControlID@MixerControl@@QAAKXZ|	; MixerControl::GetControlID

  00000			 AREA	 |.pdata|, PDATA
|$T36757| DCD	|$LN5@CopyMixerC|
	DCD	0x40003504
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControl::CopyMixerControl

; 267  :     {

  00000		 |$LN5@CopyMixerC|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36754|

; 268  :         pamxctrl->cbStruct = sizeof(MIXERCONTROL);

  00010	e59d1014	 ldr         r1, [sp, #0x14]
  00014	e3a030e4	 mov         r3, #0xE4
  00018	e5c13000	 strb        r3, [r1]
  0001c	e1a02423	 mov         r2, r3, lsr #8
  00020	e1a03002	 mov         r3, r2
  00024	e5c13001	 strb        r3, [r1, #1]
  00028	e1a02422	 mov         r2, r2, lsr #8
  0002c	e1a03002	 mov         r3, r2
  00030	e5c13002	 strb        r3, [r1, #2]
  00034	e1a03422	 mov         r3, r2, lsr #8
  00038	e5c13003	 strb        r3, [r1, #3]

; 269  :         pamxctrl->dwControlID = GetControlID();

  0003c	e59d0010	 ldr         r0, [sp, #0x10]
  00040	eb000000	 bl          |?GetControlID@MixerControl@@QAAKXZ|
  00044	e58d0000	 str         r0, [sp]
  00048	e59d3014	 ldr         r3, [sp, #0x14]
  0004c	e2831004	 add         r1, r3, #4
  00050	e59d3000	 ldr         r3, [sp]
  00054	e5c13000	 strb        r3, [r1]
  00058	e1a02423	 mov         r2, r3, lsr #8
  0005c	e1a03002	 mov         r3, r2
  00060	e5c13001	 strb        r3, [r1, #1]
  00064	e1a02422	 mov         r2, r2, lsr #8
  00068	e1a03002	 mov         r3, r2
  0006c	e5c13002	 strb        r3, [r1, #2]
  00070	e1a03422	 mov         r3, r2, lsr #8
  00074	e5c13003	 strb        r3, [r1, #3]

; 270  :         pamxctrl->dwControlType = GetControlType();

  00078	e59d3010	 ldr         r3, [sp, #0x10]
  0007c	e5933000	 ldr         r3, [r3]
  00080	e2833014	 add         r3, r3, #0x14
  00084	e59d0010	 ldr         r0, [sp, #0x10]
  00088	e5933000	 ldr         r3, [r3]
  0008c	e1a0e00f	 mov         lr, pc
  00090	e12fff13	 bx          r3
  00094	e58d0004	 str         r0, [sp, #4]
  00098	e59d3014	 ldr         r3, [sp, #0x14]
  0009c	e2831008	 add         r1, r3, #8
  000a0	e59d3004	 ldr         r3, [sp, #4]
  000a4	e5c13000	 strb        r3, [r1]
  000a8	e1a02423	 mov         r2, r3, lsr #8
  000ac	e1a03002	 mov         r3, r2
  000b0	e5c13001	 strb        r3, [r1, #1]
  000b4	e1a02422	 mov         r2, r2, lsr #8
  000b8	e1a03002	 mov         r3, r2
  000bc	e5c13002	 strb        r3, [r1, #2]
  000c0	e1a03422	 mov         r3, r2, lsr #8
  000c4	e5c13003	 strb        r3, [r1, #3]

; 271  :     }

  000c8	e28dd008	 add         sp, sp, #8
  000cc	e89d6000	 ldmia       sp, {sp, lr}
  000d0	e12fff1e	 bx          lr
  000d4		 |$M36755|

			 ENDP  ; |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControl::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36765| DCD	|$LN5@GetControl|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlID@MixerControl@@QAAKXZ| PROC ; MixerControl::GetControlID

; 264  :     DWORD GetControlID() {return m_dwControlID;}

  00000		 |$LN5@GetControl|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36762|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833004	 add         r3, r3, #4
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M36763|

			 ENDP  ; |?GetControlID@MixerControl@@QAAKXZ|, MixerControl::GetControlID


  00000			 AREA	 |.pdata|, PDATA
|$T36773| DCD	|$LN5@GetControl@2|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControl::GetControlDetails

; 273  :     virtual DWORD GetControlDetails (PMIXERCONTROLDETAILS pDetail, DWORD dwFlags) {UNREFERENCED_PARAMETER(pDetail); UNREFERENCED_PARAMETER(dwFlags); return MMSYSERR_NOTSUPPORTED;}

  00000		 |$LN5@GetControl@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36770|
  00010	e3a03008	 mov         r3, #8
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36771|

			 ENDP  ; |?GetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControl::GetControlDetails


  00000			 AREA	 |.pdata|, PDATA
|$T36781| DCD	|$LN5@SetControl@2|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControl::SetControlDetails

; 274  :     virtual DWORD SetControlDetails (PMIXERCONTROLDETAILS pDetail, DWORD dwFlags) {UNREFERENCED_PARAMETER(pDetail); UNREFERENCED_PARAMETER(dwFlags); return MMSYSERR_NOTSUPPORTED;}

  00000		 |$LN5@SetControl@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36778|
  00010	e3a03008	 mov         r3, #8
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36779|

			 ENDP  ; |?SetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControl::SetControlDetails

	EXPORT	|??1MixerControl@@UAA@XZ|		; MixerControl::~MixerControl
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T36789| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControl@@UAAPAXI@Z| PROC	; MixerControl::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36786|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControl@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36787|

			 ENDP  ; |??_GMixerControl@@UAAPAXI@Z|, MixerControl::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T36796| DCD	|$LN5@MixerContr@5|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControl@@UAA@XZ| PROC		; MixerControl::~MixerControl

; 261  :     virtual ~MixerControl() {}

  00000		 |$LN5@MixerContr@5|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36793|
  0000c	e59f200c	 ldr         r2, [pc, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e5832000	 str         r2, [r3]
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@MixerContr@5|
  00020		 |$LN7@MixerContr@5|
  00020	00000000	 DCD         |??_7MixerControl@@6B@|
  00024		 |$M36794|

			 ENDP  ; |??1MixerControl@@UAA@XZ|, MixerControl::~MixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36805| DCD	|$LN5@CopyMixerC@2|
	DCD	0x40004503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlVolume::CopyMixerControl

; 295  :     {

  00000		 |$LN5@CopyMixerC@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36802|

; 296  :         MixerControl::CopyMixerControl(pamxctrl);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59d0008	 ldr         r0, [sp, #8]
  00014	eb000000	 bl          |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|

; 297  : 
; 298  :         pamxctrl->fdwControl = 0;

  00018	e59d300c	 ldr         r3, [sp, #0xC]
  0001c	e283100c	 add         r1, r3, #0xC
  00020	e3a03000	 mov         r3, #0
  00024	e5c13000	 strb        r3, [r1]
  00028	e1a02423	 mov         r2, r3, lsr #8
  0002c	e1a03002	 mov         r3, r2
  00030	e5c13001	 strb        r3, [r1, #1]
  00034	e1a02422	 mov         r2, r2, lsr #8
  00038	e1a03002	 mov         r3, r2
  0003c	e5c13002	 strb        r3, [r1, #2]
  00040	e1a03422	 mov         r3, r2, lsr #8
  00044	e5c13003	 strb        r3, [r1, #3]

; 299  :         pamxctrl->cMultipleItems = 0;

  00048	e59d300c	 ldr         r3, [sp, #0xC]
  0004c	e2831010	 add         r1, r3, #0x10
  00050	e3a03000	 mov         r3, #0
  00054	e5c13000	 strb        r3, [r1]
  00058	e1a02423	 mov         r2, r3, lsr #8
  0005c	e1a03002	 mov         r3, r2
  00060	e5c13001	 strb        r3, [r1, #1]
  00064	e1a02422	 mov         r2, r2, lsr #8
  00068	e1a03002	 mov         r3, r2
  0006c	e5c13002	 strb        r3, [r1, #2]
  00070	e1a03422	 mov         r3, r2, lsr #8
  00074	e5c13003	 strb        r3, [r1, #3]

; 300  :         pamxctrl->Bounds.dwMinimum = LOGICAL_VOLUME_MIN;

  00078	e59d300c	 ldr         r3, [sp, #0xC]
  0007c	e28310b4	 add         r1, r3, #0xB4
  00080	e3a03000	 mov         r3, #0
  00084	e5c13000	 strb        r3, [r1]
  00088	e1a02423	 mov         r2, r3, lsr #8
  0008c	e1a03002	 mov         r3, r2
  00090	e5c13001	 strb        r3, [r1, #1]
  00094	e1a02422	 mov         r2, r2, lsr #8
  00098	e1a03002	 mov         r3, r2
  0009c	e5c13002	 strb        r3, [r1, #2]
  000a0	e1a03422	 mov         r3, r2, lsr #8
  000a4	e5c13003	 strb        r3, [r1, #3]

; 301  :         pamxctrl->Bounds.dwMaximum = LOGICAL_VOLUME_MAX;

  000a8	e59d300c	 ldr         r3, [sp, #0xC]
  000ac	e28310b8	 add         r1, r3, #0xB8
  000b0	e3a03cff	 mov         r3, #0xFF, 24
  000b4	e38330ff	 orr         r3, r3, #0xFF
  000b8	e5c13000	 strb        r3, [r1]
  000bc	e1a02423	 mov         r2, r3, lsr #8
  000c0	e1a03002	 mov         r3, r2
  000c4	e5c13001	 strb        r3, [r1, #1]
  000c8	e1a02422	 mov         r2, r2, lsr #8
  000cc	e1a03002	 mov         r3, r2
  000d0	e5c13002	 strb        r3, [r1, #2]
  000d4	e1a03422	 mov         r3, r2, lsr #8
  000d8	e5c13003	 strb        r3, [r1, #3]

; 302  :         pamxctrl->Metrics.cSteps =  LOGICAL_VOLUME_STEPS;

  000dc	e59d300c	 ldr         r3, [sp, #0xC]
  000e0	e28310cc	 add         r1, r3, #0xCC
  000e4	e3a03001	 mov         r3, #1
  000e8	e5c13000	 strb        r3, [r1]
  000ec	e1a02423	 mov         r2, r3, lsr #8
  000f0	e1a03002	 mov         r3, r2
  000f4	e5c13001	 strb        r3, [r1, #1]
  000f8	e1a02422	 mov         r2, r2, lsr #8
  000fc	e1a03002	 mov         r3, r2
  00100	e5c13002	 strb        r3, [r1, #2]
  00104	e1a03422	 mov         r3, r2, lsr #8
  00108	e5c13003	 strb        r3, [r1, #3]

; 303  :     }

  0010c	e89d6000	 ldmia       sp, {sp, lr}
  00110	e12fff1e	 bx          lr
  00114		 |$M36803|

			 ENDP  ; |?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlVolume::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36813| DCD	|$LN5@GetControl@3|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlType@MixerControlVolume@@UAAKXZ| PROC ; MixerControlVolume::GetControlType

; 306  :     {

  00000		 |$LN5@GetControl@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36810|

; 307  :         return MIXERCONTROL_CONTROLTYPE_VOLUME;

  00010	e3a03215	 mov         r3, #0x15, 4
  00014	e3833803	 orr         r3, r3, #3, 16
  00018	e58d3000	 str         r3, [sp]

; 308  :     }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36811|

			 ENDP  ; |?GetControlType@MixerControlVolume@@UAAKXZ|, MixerControlVolume::GetControlType

	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T36822| DCD	|$LN9@GetControl@4|
	DCD	0x40007604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlVolume::GetControlDetails

; 315  :     {

  00000		 |$LN9@GetControl@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd024	 sub         sp, sp, #0x24
  00010		 |$M36819|

; 316  : 		UNREFERENCED_PARAMETER(dwFlags);
; 317  : 
; 318  :         PMXLINEDESC pLine = LookupMxLine(GetLineID());

  00010	e59d302c	 ldr         r3, [sp, #0x2C]
  00014	e5933000	 ldr         r3, [r3]
  00018	e2833018	 add         r3, r3, #0x18
  0001c	e59d002c	 ldr         r0, [sp, #0x2C]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e1a03800	 mov         r3, r0, lsl #16
  00030	e1a03823	 mov         r3, r3, lsr #16
  00034	e1cd31b8	 strh        r3, [sp, #0x18]
  00038	e1dd01b8	 ldrh        r0, [sp, #0x18]
  0003c	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  00040	e58d001c	 str         r0, [sp, #0x1C]
  00044	e59d301c	 ldr         r3, [sp, #0x1C]
  00048	e58d3000	 str         r3, [sp]

; 319  : 
; 320  :         ULONG ulControlValue = GetGain();

  0004c	e59d302c	 ldr         r3, [sp, #0x2C]
  00050	e5933000	 ldr         r3, [r3]
  00054	e2833020	 add         r3, r3, #0x20
  00058	e59d002c	 ldr         r0, [sp, #0x2C]
  0005c	e5933000	 ldr         r3, [r3]
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff13	 bx          r3
  00068	e58d0020	 str         r0, [sp, #0x20]
  0006c	e59d3020	 ldr         r3, [sp, #0x20]
  00070	e58d300c	 str         r3, [sp, #0xC]

; 321  : 
; 322  :         MIXERCONTROLDETAILS_UNSIGNED * pValue = (MIXERCONTROLDETAILS_UNSIGNED * ) pDetail->paDetails;

  00074	e59d3030	 ldr         r3, [sp, #0x30]
  00078	e2831014	 add         r1, r3, #0x14
  0007c	e1d130d3	 ldrsb       r3, [r1, #3]
  00080	e1a02403	 mov         r2, r3, lsl #8
  00084	e5d13002	 ldrb        r3, [r1, #2]
  00088	e1833002	 orr         r3, r3, r2
  0008c	e1a02403	 mov         r2, r3, lsl #8
  00090	e5d13001	 ldrb        r3, [r1, #1]
  00094	e1833002	 orr         r3, r3, r2
  00098	e1a02403	 mov         r2, r3, lsl #8
  0009c	e5d13000	 ldrb        r3, [r1]
  000a0	e1833002	 orr         r3, r3, r2
  000a4	e58d3008	 str         r3, [sp, #8]

; 323  :         ULONG ulVolR, ulVolL;
; 324  : 
; 325  :         // Low order word is left channel setting
; 326  :         ulVolL = ulControlValue & 0xffff;

  000a8	e59d200c	 ldr         r2, [sp, #0xC]
  000ac	e3a03cff	 mov         r3, #0xFF, 24
  000b0	e38330ff	 orr         r3, r3, #0xFF
  000b4	e0023003	 and         r3, r2, r3
  000b8	e58d3010	 str         r3, [sp, #0x10]

; 327  :         if (pLine->ucChannels == 2)

  000bc	e59d3000	 ldr         r3, [sp]
  000c0	e2833016	 add         r3, r3, #0x16
  000c4	e5d33000	 ldrb        r3, [r3]
  000c8	e3530002	 cmp         r3, #2
  000cc	1a000003	 bne         |$LN4@GetControl@4|

; 328  :         {
; 329  :             ulVolR = (ulControlValue >> 16) & 0xffff;

  000d0	e59d300c	 ldr         r3, [sp, #0xC]
  000d4	e1a03823	 mov         r3, r3, lsr #16
  000d8	e58d3004	 str         r3, [sp, #4]

; 330  :         }
; 331  :         else

  000dc	ea000001	 b           |$LN3@GetControl@4|
  000e0		 |$LN4@GetControl@4|

; 332  :         {
; 333  :             ulVolR = ulVolL;

  000e0	e59d3010	 ldr         r3, [sp, #0x10]
  000e4	e58d3004	 str         r3, [sp, #4]
  000e8		 |$LN3@GetControl@4|

; 334  :         }
; 335  : 
; 336  :         if (pDetail->cChannels == 1)

  000e8	e59d3030	 ldr         r3, [sp, #0x30]
  000ec	e2831008	 add         r1, r3, #8
  000f0	e5d13003	 ldrb        r3, [r1, #3]
  000f4	e1a02403	 mov         r2, r3, lsl #8
  000f8	e5d13002	 ldrb        r3, [r1, #2]
  000fc	e1833002	 orr         r3, r3, r2
  00100	e1a02403	 mov         r2, r3, lsl #8
  00104	e5d13001	 ldrb        r3, [r1, #1]
  00108	e1833002	 orr         r3, r3, r2
  0010c	e1a02403	 mov         r2, r3, lsl #8
  00110	e5d13000	 ldrb        r3, [r1]
  00114	e1833002	 orr         r3, r3, r2
  00118	e3530001	 cmp         r3, #1
  0011c	1a000010	 bne         |$LN2@GetControl@4|

; 337  :         {
; 338  :             pValue[0].dwValue = (ulVolR + ulVolL)/2;

  00120	e59d2004	 ldr         r2, [sp, #4]
  00124	e59d3010	 ldr         r3, [sp, #0x10]
  00128	e0821003	 add         r1, r2, r3
  0012c	e3a00002	 mov         r0, #2
  00130	eb000000	 bl          __rt_udiv
  00134	e59d1008	 ldr         r1, [sp, #8]
  00138	e1a03000	 mov         r3, r0
  0013c	e5c13000	 strb        r3, [r1]
  00140	e1a02423	 mov         r2, r3, lsr #8
  00144	e1a03002	 mov         r3, r2
  00148	e5c13001	 strb        r3, [r1, #1]
  0014c	e1a02422	 mov         r2, r2, lsr #8
  00150	e1a03002	 mov         r3, r2
  00154	e5c13002	 strb        r3, [r1, #2]
  00158	e1a03422	 mov         r3, r2, lsr #8
  0015c	e5c13003	 strb        r3, [r1, #3]

; 339  :         }
; 340  :         else

  00160	ea000016	 b           |$LN1@GetControl@4|
  00164		 |$LN2@GetControl@4|

; 341  :         {
; 342  :             pValue[0].dwValue = ulVolL;

  00164	e59d3010	 ldr         r3, [sp, #0x10]
  00168	e59d1008	 ldr         r1, [sp, #8]
  0016c	e5c13000	 strb        r3, [r1]
  00170	e1a02423	 mov         r2, r3, lsr #8
  00174	e1a03002	 mov         r3, r2
  00178	e5c13001	 strb        r3, [r1, #1]
  0017c	e1a02422	 mov         r2, r2, lsr #8
  00180	e1a03002	 mov         r3, r2
  00184	e5c13002	 strb        r3, [r1, #2]
  00188	e1a03422	 mov         r3, r2, lsr #8
  0018c	e5c13003	 strb        r3, [r1, #3]

; 343  :             pValue[1].dwValue = ulVolR;

  00190	e59d3008	 ldr         r3, [sp, #8]
  00194	e2831004	 add         r1, r3, #4
  00198	e59d3004	 ldr         r3, [sp, #4]
  0019c	e5c13000	 strb        r3, [r1]
  001a0	e1a02423	 mov         r2, r3, lsr #8
  001a4	e1a03002	 mov         r3, r2
  001a8	e5c13001	 strb        r3, [r1, #1]
  001ac	e1a02422	 mov         r2, r2, lsr #8
  001b0	e1a03002	 mov         r3, r2
  001b4	e5c13002	 strb        r3, [r1, #2]
  001b8	e1a03422	 mov         r3, r2, lsr #8
  001bc	e5c13003	 strb        r3, [r1, #3]
  001c0		 |$LN1@GetControl@4|

; 344  :         }
; 345  : 
; 346  :         return MMSYSERR_NOERROR;

  001c0	e3a03000	 mov         r3, #0
  001c4	e58d3014	 str         r3, [sp, #0x14]

; 347  :     }

  001c8	e59d0014	 ldr         r0, [sp, #0x14]
  001cc	e28dd024	 add         sp, sp, #0x24
  001d0	e89d6000	 ldmia       sp, {sp, lr}
  001d4	e12fff1e	 bx          lr
  001d8		 |$M36820|

			 ENDP  ; |?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlVolume::GetControlDetails

	EXPORT	|??_C@_1GA@LNIMIIDM@?$AAS?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?3?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?5?$AAe@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36832| DCD	|$LN13@SetControl@3|
	DCD	0x40008304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@LNIMIIDM@?$AAS?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?3?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?5?$AAe@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "D", 0x0, "e", 0x0, "t", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "s", 0x0, " ", 0x0, "b", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlVolume::SetControlDetails

; 350  :     {

  00000		 |$LN13@SetControl@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd024	 sub         sp, sp, #0x24
  00010		 |$M36829|

; 351  : 		UNREFERENCED_PARAMETER(dwFlags);
; 352  : 
; 353  :         PMXLINEDESC pLine = LookupMxLine(GetLineID());

  00010	e59d302c	 ldr         r3, [sp, #0x2C]
  00014	e5933000	 ldr         r3, [r3]
  00018	e2833018	 add         r3, r3, #0x18
  0001c	e59d002c	 ldr         r0, [sp, #0x2C]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e1a03800	 mov         r3, r0, lsl #16
  00030	e1a03823	 mov         r3, r3, lsr #16
  00034	e1cd31b8	 strh        r3, [sp, #0x18]
  00038	e1dd01b8	 ldrh        r0, [sp, #0x18]
  0003c	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  00040	e58d001c	 str         r0, [sp, #0x1C]
  00044	e59d301c	 ldr         r3, [sp, #0x1C]
  00048	e58d3004	 str         r3, [sp, #4]

; 354  : 
; 355  :         MIXERCONTROLDETAILS_UNSIGNED * pValue = (MIXERCONTROLDETAILS_UNSIGNED * ) pDetail->paDetails;

  0004c	e59d3030	 ldr         r3, [sp, #0x30]
  00050	e2831014	 add         r1, r3, #0x14
  00054	e1d130d3	 ldrsb       r3, [r1, #3]
  00058	e1a02403	 mov         r2, r3, lsl #8
  0005c	e5d13002	 ldrb        r3, [r1, #2]
  00060	e1833002	 orr         r3, r3, r2
  00064	e1a02403	 mov         r2, r3, lsl #8
  00068	e5d13001	 ldrb        r3, [r1, #1]
  0006c	e1833002	 orr         r3, r3, r2
  00070	e1a02403	 mov         r2, r3, lsl #8
  00074	e5d13000	 ldrb        r3, [r1]
  00078	e1833002	 orr         r3, r3, r2
  0007c	e58d3008	 str         r3, [sp, #8]

; 356  :         DWORD dwSetting, dwSettingL, dwSettingR;
; 357  :         dwSettingL = pValue[0].dwValue;

  00080	e59d1008	 ldr         r1, [sp, #8]
  00084	e5d13003	 ldrb        r3, [r1, #3]
  00088	e1a02403	 mov         r2, r3, lsl #8
  0008c	e5d13002	 ldrb        r3, [r1, #2]
  00090	e1833002	 orr         r3, r3, r2
  00094	e1a02403	 mov         r2, r3, lsl #8
  00098	e5d13001	 ldrb        r3, [r1, #1]
  0009c	e1833002	 orr         r3, r3, r2
  000a0	e1a02403	 mov         r2, r3, lsl #8
  000a4	e5d13000	 ldrb        r3, [r1]
  000a8	e1833002	 orr         r3, r3, r2
  000ac	e58d3010	 str         r3, [sp, #0x10]

; 358  : 
; 359  :         // setting might be mono or stereo. For mono, apply same volume to both channels
; 360  :         if (pDetail->cChannels == 2)

  000b0	e59d3030	 ldr         r3, [sp, #0x30]
  000b4	e2831008	 add         r1, r3, #8
  000b8	e5d13003	 ldrb        r3, [r1, #3]
  000bc	e1a02403	 mov         r2, r3, lsl #8
  000c0	e5d13002	 ldrb        r3, [r1, #2]
  000c4	e1833002	 orr         r3, r3, r2
  000c8	e1a02403	 mov         r2, r3, lsl #8
  000cc	e5d13001	 ldrb        r3, [r1, #1]
  000d0	e1833002	 orr         r3, r3, r2
  000d4	e1a02403	 mov         r2, r3, lsl #8
  000d8	e5d13000	 ldrb        r3, [r1]
  000dc	e1833002	 orr         r3, r3, r2
  000e0	e3530002	 cmp         r3, #2
  000e4	1a00000d	 bne         |$LN6@SetControl@3|

; 361  :         {
; 362  :             dwSettingR = pValue[1].dwValue;

  000e8	e59d3008	 ldr         r3, [sp, #8]
  000ec	e2831004	 add         r1, r3, #4
  000f0	e5d13003	 ldrb        r3, [r1, #3]
  000f4	e1a02403	 mov         r2, r3, lsl #8
  000f8	e5d13002	 ldrb        r3, [r1, #2]
  000fc	e1833002	 orr         r3, r3, r2
  00100	e1a02403	 mov         r2, r3, lsl #8
  00104	e5d13001	 ldrb        r3, [r1, #1]
  00108	e1833002	 orr         r3, r3, r2
  0010c	e1a02403	 mov         r2, r3, lsl #8
  00110	e5d13000	 ldrb        r3, [r1]
  00114	e1833002	 orr         r3, r3, r2
  00118	e58d300c	 str         r3, [sp, #0xC]

; 363  :         }
; 364  :         else

  0011c	ea000001	 b           |$LN5@SetControl@3|
  00120		 |$LN6@SetControl@3|

; 365  :         {
; 366  :             dwSettingR = dwSettingL;

  00120	e59d3010	 ldr         r3, [sp, #0x10]
  00124	e58d300c	 str         r3, [sp, #0xC]
  00128		 |$LN5@SetControl@3|

; 367  :         }
; 368  : 
; 369  :         if ( (dwSettingL > LOGICAL_VOLUME_MAX) || (dwSettingR > LOGICAL_VOLUME_MAX) )

  00128	e59d2010	 ldr         r2, [sp, #0x10]
  0012c	e3a03cff	 mov         r3, #0xFF, 24
  00130	e38330ff	 orr         r3, r3, #0xFF
  00134	e1520003	 cmp         r2, r3
  00138	8a000004	 bhi         |$LN3@SetControl@3|
  0013c	e59d200c	 ldr         r2, [sp, #0xC]
  00140	e3a03cff	 mov         r3, #0xFF, 24
  00144	e38330ff	 orr         r3, r3, #0xFF
  00148	e1520003	 cmp         r2, r3
  0014c	9a00000d	 bls         |$LN4@SetControl@3|
  00150		 |$LN3@SetControl@3|

; 370  :         {
; 371  :             DEBUGMSG(ZONE_ERROR, (TEXT("SetMixerControlDetails: Volume exceeds bounds\r\n")));

  00150	e59f30b0	 ldr         r3, [pc, #0xB0]
  00154	e5933440	 ldr         r3, [r3, #0x440]
  00158	e3130902	 tst         r3, #2, 18
  0015c	0a000004	 beq         |$LN9@SetControl@3|
  00160	e59f009c	 ldr         r0, [pc, #0x9C]
  00164	eb000000	 bl          NKDbgPrintfW
  00168	e3a03001	 mov         r3, #1
  0016c	e58d3020	 str         r3, [sp, #0x20]
  00170	ea000001	 b           |$LN10@SetControl@3|
  00174		 |$LN9@SetControl@3|
  00174	e3a03000	 mov         r3, #0
  00178	e58d3020	 str         r3, [sp, #0x20]
  0017c		 |$LN10@SetControl@3|

; 372  :             return MMSYSERR_INVALPARAM;

  0017c	e3a0300b	 mov         r3, #0xB
  00180	e58d3014	 str         r3, [sp, #0x14]
  00184	ea00001a	 b           |$LN7@SetControl@3|
  00188		 |$LN4@SetControl@3|

; 373  :         }
; 374  : 
; 375  :         if (pLine->ucChannels == 1)

  00188	e59d3004	 ldr         r3, [sp, #4]
  0018c	e2833016	 add         r3, r3, #0x16
  00190	e5d33000	 ldrb        r3, [r3]
  00194	e3530001	 cmp         r3, #1
  00198	1a000006	 bne         |$LN2@SetControl@3|

; 376  :         {
; 377  :             dwSetting = (dwSettingL + dwSettingR) / 2;

  0019c	e59d2010	 ldr         r2, [sp, #0x10]
  001a0	e59d300c	 ldr         r3, [sp, #0xC]
  001a4	e0821003	 add         r1, r2, r3
  001a8	e3a00002	 mov         r0, #2
  001ac	eb000000	 bl          __rt_udiv
  001b0	e58d0000	 str         r0, [sp]

; 378  :         }
; 379  :         else

  001b4	ea000004	 b           |$LN1@SetControl@3|
  001b8		 |$LN2@SetControl@3|

; 380  :         {
; 381  :             // Low order word is left channel setting
; 382  :             dwSetting = (dwSettingR << 16) | dwSettingL;

  001b8	e59d300c	 ldr         r3, [sp, #0xC]
  001bc	e1a02803	 mov         r2, r3, lsl #16
  001c0	e59d3010	 ldr         r3, [sp, #0x10]
  001c4	e1823003	 orr         r3, r2, r3
  001c8	e58d3000	 str         r3, [sp]
  001cc		 |$LN1@SetControl@3|

; 383  :         }
; 384  : 
; 385  :         SetGain(dwSetting);

  001cc	e59d1000	 ldr         r1, [sp]
  001d0	e59d302c	 ldr         r3, [sp, #0x2C]
  001d4	e5933000	 ldr         r3, [r3]
  001d8	e283301c	 add         r3, r3, #0x1C
  001dc	e59d002c	 ldr         r0, [sp, #0x2C]
  001e0	e5933000	 ldr         r3, [r3]
  001e4	e1a0e00f	 mov         lr, pc
  001e8	e12fff13	 bx          r3

; 386  : 
; 387  :         return MMSYSERR_NOERROR;

  001ec	e3a03000	 mov         r3, #0
  001f0	e58d3014	 str         r3, [sp, #0x14]
  001f4		 |$LN7@SetControl@3|

; 388  :     }

  001f4	e59d0014	 ldr         r0, [sp, #0x14]
  001f8	e28dd024	 add         sp, sp, #0x24
  001fc	e89d6000	 ldmia       sp, {sp, lr}
  00200	e12fff1e	 bx          lr
  00204		 |$LN14@SetControl@3|
  00204		 |$LN15@SetControl@3|
  00204	00000000	 DCD         |??_C@_1GA@LNIMIIDM@?$AAS?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAt?$AAa?$AAi?$AAl?$AAs?$AA?3?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?5?$AAe@|
  00208		 |$LN16@SetControl@3|
  00208	00000000	 DCD         |dpCurSettings|
  0020c		 |$M36830|

			 ENDP  ; |?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlVolume::SetControlDetails

	EXPORT	|??1MixerControlVolume@@UAA@XZ|		; MixerControlVolume::~MixerControlVolume

  00000			 AREA	 |.pdata|, PDATA
|$T36843| DCD	|$LN6@scalar@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlVolume@@UAAPAXI@Z| PROC ; MixerControlVolume::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36840|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlVolume@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@2|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@2|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36841|

			 ENDP  ; |??_GMixerControlVolume@@UAAPAXI@Z|, MixerControlVolume::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T36850| DCD	|$LN5@MixerContr@6|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlVolume@@UAA@XZ| PROC	; MixerControlVolume::~MixerControlVolume
  00000		 |$LN5@MixerContr@6|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36847|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControl@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M36848|

			 ENDP  ; |??1MixerControlVolume@@UAA@XZ|, MixerControlVolume::~MixerControlVolume

	EXPORT	|??_C@_1BM@DBCMFCBE@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36857| DCD	|$LN5@CopyMixerC@3|
	DCD	0x40001103

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@DBCMFCBE@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@| DCB "M"
	DCB	0x0, "a", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "V", 0x0, "o", 0x0, "l", 0x0, "u", 0x0, "m", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlVolumeMaster@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlVolumeMaster::CopyMixerControl

; 399  :     {

  00000		 |$LN5@CopyMixerC@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36854|

; 400  :         MixerControlVolume::CopyMixerControl(pamxctrl);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59d0008	 ldr         r0, [sp, #8]
  00014	eb000000	 bl          |?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z|

; 401  :         wcscpy(pamxctrl->szName, TEXT("Master Volume"));

  00018	e59f1020	 ldr         r1, [pc, #0x20]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2830034	 add         r0, r3, #0x34
  00024	eb000000	 bl          wcscpy

; 402  :         wcscpy(pamxctrl->szShortName, TEXT("Master Volume"));

  00028	e59f1010	 ldr         r1, [pc, #0x10]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2830014	 add         r0, r3, #0x14
  00034	eb000000	 bl          wcscpy

; 403  :     }

  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@CopyMixerC@3|
  00040		 |$LN7@CopyMixerC@3|
  00040	00000000	 DCD         |??_C@_1BM@DBCMFCBE@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@|
  00044		 |$M36855|

			 ENDP  ; |?CopyMixerControl@MixerControlVolumeMaster@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlVolumeMaster::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36867| DCD	|$LN5@GetLineID|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlVolumeMaster@@UAAGXZ| PROC ; MixerControlVolumeMaster::GetLineID

; 404  :     USHORT GetLineID() {return MXLINEID(LINE_OUT,NOLINE);}

  00000		 |$LN5@GetLineID|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36864|
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e3833080	 orr         r3, r3, #0x80
  00018	e1cd30b0	 strh        r3, [sp]
  0001c	e1dd00b0	 ldrh        r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36865|

			 ENDP  ; |?GetLineID@MixerControlVolumeMaster@@UAAGXZ|, MixerControlVolumeMaster::GetLineID

	IMPORT	|?SetOutputGain@HardwareContext@@QAAIK@Z| ; HardwareContext::SetOutputGain
	IMPORT	|?g_pHWContext@@3PAVHardwareContext@@A|	; g_pHWContext

  00000			 AREA	 |.pdata|, PDATA
|$T36874| DCD	|$LN5@SetGain|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@MixerControlVolumeMaster@@UAAXK@Z| PROC ; MixerControlVolumeMaster::SetGain

; 407  :     {

  00000		 |$LN5@SetGain|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36871|

; 408  :         g_pHWContext->SetOutputGain(dwSetting);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59f300c	 ldr         r3, [pc, #0xC]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?SetOutputGain@HardwareContext@@QAAIK@Z|

; 409  :     }

  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@SetGain|
  00024		 |$LN7@SetGain|
  00024	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00028		 |$M36872|

			 ENDP  ; |?SetGain@MixerControlVolumeMaster@@UAAXK@Z|, MixerControlVolumeMaster::SetGain

	IMPORT	|?GetOutputGain@HardwareContext@@QAAKXZ| ; HardwareContext::GetOutputGain

  00000			 AREA	 |.pdata|, PDATA
|$T36884| DCD	|$LN5@GetGain|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@MixerControlVolumeMaster@@UAAKXZ| PROC ; MixerControlVolumeMaster::GetGain

; 412  :     {

  00000		 |$LN5@GetGain|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36881|

; 413  :         return g_pHWContext->GetOutputGain();

  00010	e59f3020	 ldr         r3, [pc, #0x20]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?GetOutputGain@HardwareContext@@QAAKXZ|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 414  :     }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN6@GetGain|
  00038		 |$LN7@GetGain|
  00038	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0003c		 |$M36882|

			 ENDP  ; |?GetGain@MixerControlVolumeMaster@@UAAKXZ|, MixerControlVolumeMaster::GetGain

	EXPORT	|??1MixerControlVolumeMaster@@UAA@XZ|	; MixerControlVolumeMaster::~MixerControlVolumeMaster

  00000			 AREA	 |.pdata|, PDATA
|$T36894| DCD	|$LN6@scalar@3|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlVolumeMaster@@UAAPAXI@Z| PROC ; MixerControlVolumeMaster::`scalar deleting destructor'
  00000		 |$LN6@scalar@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36891|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlVolumeMaster@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@3|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@3|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36892|

			 ENDP  ; |??_GMixerControlVolumeMaster@@UAAPAXI@Z|, MixerControlVolumeMaster::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T36901| DCD	|$LN5@MixerContr@7|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlVolumeMaster@@UAA@XZ| PROC ; MixerControlVolumeMaster::~MixerControlVolumeMaster
  00000		 |$LN5@MixerContr@7|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36898|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControlVolume@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M36899|

			 ENDP  ; |??1MixerControlVolumeMaster@@UAA@XZ|, MixerControlVolumeMaster::~MixerControlVolumeMaster

	EXPORT	|??_7MixerControlVolumeInput@@6B@| [ DATA ] ; MixerControlVolumeInput::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlVolumeInput@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlVolumeInput::CopyMixerControl
	EXPORT	|?GetLineID@MixerControlVolumeInput@@UAAGXZ| ; MixerControlVolumeInput::GetLineID
	EXPORT	|?SetGain@MixerControlVolumeInput@@UAAXK@Z| ; MixerControlVolumeInput::SetGain
	EXPORT	|?GetGain@MixerControlVolumeInput@@UAAKXZ| ; MixerControlVolumeInput::GetGain
	IMPORT	|?SetInputGain@HardwareContext@@QAAIK@Z| ; HardwareContext::SetInputGain
	IMPORT	|??_EMixerControlVolumeInput@@UAAPAXI@Z|, WEAK |??_GMixerControlVolumeInput@@UAAPAXI@Z| ; MixerControlVolumeInput::`vector deleting destructor', MixerControlVolumeInput::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36909| DCD	|$LN5@MixerContr@8|
	DCD	0x40001604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlVolumeInput@@6B@| DCD |??_EMixerControlVolumeInput@@UAAPAXI@Z| ; MixerControlVolumeInput::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlVolumeInput@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlVolume@@UAAKXZ|
	DCD	|?GetLineID@MixerControlVolumeInput@@UAAGXZ|
	DCD	|?SetGain@MixerControlVolumeInput@@UAAXK@Z|
	DCD	|?GetGain@MixerControlVolumeInput@@UAAKXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlVolumeInput@@QAA@XZ| PROC ; MixerControlVolumeInput::MixerControlVolumeInput

; 422  : 	{

  00000		 |$LN5@MixerContr@8|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36906|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControlVolume@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f2030	 ldr         r2, [pc, #0x30]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]

; 423  : 		// Set default value
; 424  : 		g_pHWContext->SetInputGain(0xFFFFFFFF);		

  00028	e3e01000	 mvn         r1, #0
  0002c	e59f301c	 ldr         r3, [pc, #0x1C]
  00030	e5930000	 ldr         r0, [r3]
  00034	eb000000	 bl          |?SetInputGain@HardwareContext@@QAAIK@Z|

; 425  : 	}

  00038	e59d3010	 ldr         r3, [sp, #0x10]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN6@MixerContr@8|
  00050		 |$LN7@MixerContr@8|
  00050	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00054		 |$LN8@MixerContr@8|
  00054	00000000	 DCD         |??_7MixerControlVolumeInput@@6B@|
  00058		 |$M36907|

			 ENDP  ; |??0MixerControlVolumeInput@@QAA@XZ|, MixerControlVolumeInput::MixerControlVolumeInput

	EXPORT	|??_C@_1BK@FEKAJMFI@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36919| DCD	|$LN5@CopyMixerC@4|
	DCD	0x40001103

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@FEKAJMFI@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlVolumeInput@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlVolumeInput::CopyMixerControl

; 428  :     {

  00000		 |$LN5@CopyMixerC@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36916|

; 429  :         MixerControlVolume::CopyMixerControl(pamxctrl);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59d0008	 ldr         r0, [sp, #8]
  00014	eb000000	 bl          |?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z|

; 430  :         wcscpy(pamxctrl->szName, TEXT("Input Volume"));

  00018	e59f1020	 ldr         r1, [pc, #0x20]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2830034	 add         r0, r3, #0x34
  00024	eb000000	 bl          wcscpy

; 431  :         wcscpy(pamxctrl->szShortName, TEXT("Input Volume"));

  00028	e59f1010	 ldr         r1, [pc, #0x10]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2830014	 add         r0, r3, #0x14
  00034	eb000000	 bl          wcscpy

; 432  :     }

  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@CopyMixerC@4|
  00040		 |$LN7@CopyMixerC@4|
  00040	00000000	 DCD         |??_C@_1BK@FEKAJMFI@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@|
  00044		 |$M36917|

			 ENDP  ; |?CopyMixerControl@MixerControlVolumeInput@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlVolumeInput::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36929| DCD	|$LN5@GetLineID@2|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlVolumeInput@@UAAGXZ| PROC ; MixerControlVolumeInput::GetLineID

; 434  :     USHORT GetLineID() {return MXLINEID(PCM_IN,NOLINE);}

  00000		 |$LN5@GetLineID@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36926|
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e3833081	 orr         r3, r3, #0x81
  00018	e1cd30b0	 strh        r3, [sp]
  0001c	e1dd00b0	 ldrh        r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36927|

			 ENDP  ; |?GetLineID@MixerControlVolumeInput@@UAAGXZ|, MixerControlVolumeInput::GetLineID


  00000			 AREA	 |.pdata|, PDATA
|$T36936| DCD	|$LN5@SetGain@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@MixerControlVolumeInput@@UAAXK@Z| PROC ; MixerControlVolumeInput::SetGain

; 437  :     {

  00000		 |$LN5@SetGain@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36933|

; 438  :         g_pHWContext->SetInputGain(dwSetting);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59f300c	 ldr         r3, [pc, #0xC]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?SetInputGain@HardwareContext@@QAAIK@Z|

; 439  :     }

  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@SetGain@2|
  00024		 |$LN7@SetGain@2|
  00024	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00028		 |$M36934|

			 ENDP  ; |?SetGain@MixerControlVolumeInput@@UAAXK@Z|, MixerControlVolumeInput::SetGain

	IMPORT	|?GetInputGain@HardwareContext@@QAAKXZ|	; HardwareContext::GetInputGain

  00000			 AREA	 |.pdata|, PDATA
|$T36946| DCD	|$LN5@GetGain@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@MixerControlVolumeInput@@UAAKXZ| PROC ; MixerControlVolumeInput::GetGain

; 442  :     {

  00000		 |$LN5@GetGain@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36943|

; 443  :         return g_pHWContext->GetInputGain();

  00010	e59f3020	 ldr         r3, [pc, #0x20]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?GetInputGain@HardwareContext@@QAAKXZ|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 444  :     }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN6@GetGain@2|
  00038		 |$LN7@GetGain@2|
  00038	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0003c		 |$M36944|

			 ENDP  ; |?GetGain@MixerControlVolumeInput@@UAAKXZ|, MixerControlVolumeInput::GetGain

	EXPORT	|??1MixerControlVolumeInput@@UAA@XZ|	; MixerControlVolumeInput::~MixerControlVolumeInput

  00000			 AREA	 |.pdata|, PDATA
|$T36956| DCD	|$LN6@scalar@4|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlVolumeInput@@UAAPAXI@Z| PROC ; MixerControlVolumeInput::`scalar deleting destructor'
  00000		 |$LN6@scalar@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36953|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlVolumeInput@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@4|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@4|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36954|

			 ENDP  ; |??_GMixerControlVolumeInput@@UAAPAXI@Z|, MixerControlVolumeInput::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T36963| DCD	|$LN5@MixerContr@9|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlVolumeInput@@UAA@XZ| PROC ; MixerControlVolumeInput::~MixerControlVolumeInput
  00000		 |$LN5@MixerContr@9|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36960|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControlVolume@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M36961|

			 ENDP  ; |??1MixerControlVolumeInput@@UAA@XZ|, MixerControlVolumeInput::~MixerControlVolumeInput

	EXPORT	|??_7MixerControlMuteMaster@@6B@| [ DATA ] ; MixerControlMuteMaster::`vftable'
	EXPORT	|??0MixerControlBoolean@@QAA@XZ|	; MixerControlBoolean::MixerControlBoolean
	EXPORT	|?CopyMixerControl@MixerControlMuteMaster@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlMuteMaster::CopyMixerControl
	EXPORT	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlBoolean::GetControlDetails
	EXPORT	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlBoolean::SetControlDetails
	EXPORT	|?GetControlType@MixerControlMuteMaster@@UAAKXZ| ; MixerControlMuteMaster::GetControlType
	EXPORT	|?GetLineID@MixerControlMuteMaster@@UAAGXZ| ; MixerControlMuteMaster::GetLineID
	EXPORT	|?GetValue@MixerControlMuteMaster@@UAAHXZ| ; MixerControlMuteMaster::GetValue
	EXPORT	|?SetValue@MixerControlMuteMaster@@UAAXH@Z| ; MixerControlMuteMaster::SetValue
	IMPORT	|??_EMixerControlMuteMaster@@UAAPAXI@Z|, WEAK |??_GMixerControlMuteMaster@@UAAPAXI@Z| ; MixerControlMuteMaster::`vector deleting destructor', MixerControlMuteMaster::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36971| DCD	|$LN5@MixerContr@10|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlMuteMaster@@6B@| DCD |??_EMixerControlMuteMaster@@UAAPAXI@Z| ; MixerControlMuteMaster::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlMuteMaster@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlMuteMaster@@UAAKXZ|
	DCD	|?GetLineID@MixerControlMuteMaster@@UAAGXZ|
	DCD	|?GetValue@MixerControlMuteMaster@@UAAHXZ|
	DCD	|?SetValue@MixerControlMuteMaster@@UAAXH@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlMuteMaster@@QAA@XZ| PROC ; MixerControlMuteMaster::MixerControlMuteMaster

; 497  :     MixerControlMuteMaster() : MixerControlBoolean() {}

  00000		 |$LN5@MixerContr@10|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36968|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControlBoolean@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@MixerContr@10|
  00040		 |$LN7@MixerContr@10|
  00040	00000000	 DCD         |??_7MixerControlMuteMaster@@6B@|
  00044		 |$M36969|

			 ENDP  ; |??0MixerControlMuteMaster@@QAA@XZ|, MixerControlMuteMaster::MixerControlMuteMaster

	EXPORT	|??_7MixerControlBoolean@@6B@| [ DATA ]	; MixerControlBoolean::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlBoolean::CopyMixerControl
	EXPORT	|?GetControlType@MixerControlBoolean@@UAAKXZ| ; MixerControlBoolean::GetControlType
	IMPORT	|??_EMixerControlBoolean@@UAAPAXI@Z|, WEAK |??_GMixerControlBoolean@@UAAPAXI@Z| ; MixerControlBoolean::`vector deleting destructor', MixerControlBoolean::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36981| DCD	|$LN5@MixerContr@11|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlBoolean@@6B@| DCD |??_EMixerControlBoolean@@UAAPAXI@Z| ; MixerControlBoolean::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlBoolean@@UAAKXZ|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlBoolean@@QAA@XZ| PROC	; MixerControlBoolean::MixerControlBoolean

; 451  :     MixerControlBoolean() : MixerControl() {}

  00000		 |$LN5@MixerContr@11|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36978|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControl@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@MixerContr@11|
  00040		 |$LN7@MixerContr@11|
  00040	00000000	 DCD         |??_7MixerControlBoolean@@6B@|
  00044		 |$M36979|

			 ENDP  ; |??0MixerControlBoolean@@QAA@XZ|, MixerControlBoolean::MixerControlBoolean


  00000			 AREA	 |.pdata|, PDATA
|$T36990| DCD	|$LN5@CopyMixerC@5|
	DCD	0x40004403
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlBoolean::CopyMixerControl

; 454  :     {

  00000		 |$LN5@CopyMixerC@5|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36987|

; 455  :         MixerControl::CopyMixerControl(pamxctrl);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59d0008	 ldr         r0, [sp, #8]
  00014	eb000000	 bl          |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|

; 456  :         pamxctrl->fdwControl = MIXERCONTROL_CONTROLF_UNIFORM;

  00018	e59d300c	 ldr         r3, [sp, #0xC]
  0001c	e283100c	 add         r1, r3, #0xC
  00020	e3a03001	 mov         r3, #1
  00024	e5c13000	 strb        r3, [r1]
  00028	e1a02423	 mov         r2, r3, lsr #8
  0002c	e1a03002	 mov         r3, r2
  00030	e5c13001	 strb        r3, [r1, #1]
  00034	e1a02422	 mov         r2, r2, lsr #8
  00038	e1a03002	 mov         r3, r2
  0003c	e5c13002	 strb        r3, [r1, #2]
  00040	e1a03422	 mov         r3, r2, lsr #8
  00044	e5c13003	 strb        r3, [r1, #3]

; 457  :         pamxctrl->cMultipleItems = 0;

  00048	e59d300c	 ldr         r3, [sp, #0xC]
  0004c	e2831010	 add         r1, r3, #0x10
  00050	e3a03000	 mov         r3, #0
  00054	e5c13000	 strb        r3, [r1]
  00058	e1a02423	 mov         r2, r3, lsr #8
  0005c	e1a03002	 mov         r3, r2
  00060	e5c13001	 strb        r3, [r1, #1]
  00064	e1a02422	 mov         r2, r2, lsr #8
  00068	e1a03002	 mov         r3, r2
  0006c	e5c13002	 strb        r3, [r1, #2]
  00070	e1a03422	 mov         r3, r2, lsr #8
  00074	e5c13003	 strb        r3, [r1, #3]

; 458  :         pamxctrl->Bounds.dwMinimum = 0;

  00078	e59d300c	 ldr         r3, [sp, #0xC]
  0007c	e28310b4	 add         r1, r3, #0xB4
  00080	e3a03000	 mov         r3, #0
  00084	e5c13000	 strb        r3, [r1]
  00088	e1a02423	 mov         r2, r3, lsr #8
  0008c	e1a03002	 mov         r3, r2
  00090	e5c13001	 strb        r3, [r1, #1]
  00094	e1a02422	 mov         r2, r2, lsr #8
  00098	e1a03002	 mov         r3, r2
  0009c	e5c13002	 strb        r3, [r1, #2]
  000a0	e1a03422	 mov         r3, r2, lsr #8
  000a4	e5c13003	 strb        r3, [r1, #3]

; 459  :         pamxctrl->Bounds.dwMaximum = 1;

  000a8	e59d300c	 ldr         r3, [sp, #0xC]
  000ac	e28310b8	 add         r1, r3, #0xB8
  000b0	e3a03001	 mov         r3, #1
  000b4	e5c13000	 strb        r3, [r1]
  000b8	e1a02423	 mov         r2, r3, lsr #8
  000bc	e1a03002	 mov         r3, r2
  000c0	e5c13001	 strb        r3, [r1, #1]
  000c4	e1a02422	 mov         r2, r2, lsr #8
  000c8	e1a03002	 mov         r3, r2
  000cc	e5c13002	 strb        r3, [r1, #2]
  000d0	e1a03422	 mov         r3, r2, lsr #8
  000d4	e5c13003	 strb        r3, [r1, #3]

; 460  :         pamxctrl->Metrics.cSteps =  0;

  000d8	e59d300c	 ldr         r3, [sp, #0xC]
  000dc	e28310cc	 add         r1, r3, #0xCC
  000e0	e3a03000	 mov         r3, #0
  000e4	e5c13000	 strb        r3, [r1]
  000e8	e1a02423	 mov         r2, r3, lsr #8
  000ec	e1a03002	 mov         r3, r2
  000f0	e5c13001	 strb        r3, [r1, #1]
  000f4	e1a02422	 mov         r2, r2, lsr #8
  000f8	e1a03002	 mov         r3, r2
  000fc	e5c13002	 strb        r3, [r1, #2]
  00100	e1a03422	 mov         r3, r2, lsr #8
  00104	e5c13003	 strb        r3, [r1, #3]

; 461  :     }

  00108	e89d6000	 ldmia       sp, {sp, lr}
  0010c	e12fff1e	 bx          lr
  00110		 |$M36988|

			 ENDP  ; |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlBoolean::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36998| DCD	|$LN5@GetControl@5|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlType@MixerControlBoolean@@UAAKXZ| PROC ; MixerControlBoolean::GetControlType

; 463  :     DWORD GetControlType() {return MIXERCONTROL_CONTROLTYPE_BOOLEAN;}

  00000		 |$LN5@GetControl@5|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36995|
  00010	e3a03202	 mov         r3, #2, 4
  00014	e3833801	 orr         r3, r3, #1, 16
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36996|

			 ENDP  ; |?GetControlType@MixerControlBoolean@@UAAKXZ|, MixerControlBoolean::GetControlType


  00000			 AREA	 |.pdata|, PDATA
|$T37006| DCD	|$LN5@GetControl@6|
	DCD	0x40002c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlBoolean::GetControlDetails

; 470  :     {

  00000		 |$LN5@GetControl@6|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M37003|

; 471  : 		UNREFERENCED_PARAMETER(dwFlags);
; 472  : 
; 473  :         ULONG ulControlValue = GetValue();

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e5933000	 ldr         r3, [r3]
  00018	e283301c	 add         r3, r3, #0x1C
  0001c	e59d0018	 ldr         r0, [sp, #0x18]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e58d000c	 str         r0, [sp, #0xC]
  00030	e59d300c	 ldr         r3, [sp, #0xC]
  00034	e58d3004	 str         r3, [sp, #4]

; 474  : 
; 475  :         MIXERCONTROLDETAILS_BOOLEAN * pValue = (MIXERCONTROLDETAILS_BOOLEAN *) pDetail->paDetails;

  00038	e59d301c	 ldr         r3, [sp, #0x1C]
  0003c	e2831014	 add         r1, r3, #0x14
  00040	e1d130d3	 ldrsb       r3, [r1, #3]
  00044	e1a02403	 mov         r2, r3, lsl #8
  00048	e5d13002	 ldrb        r3, [r1, #2]
  0004c	e1833002	 orr         r3, r3, r2
  00050	e1a02403	 mov         r2, r3, lsl #8
  00054	e5d13001	 ldrb        r3, [r1, #1]
  00058	e1833002	 orr         r3, r3, r2
  0005c	e1a02403	 mov         r2, r3, lsl #8
  00060	e5d13000	 ldrb        r3, [r1]
  00064	e1833002	 orr         r3, r3, r2
  00068	e58d3000	 str         r3, [sp]

; 476  :         pValue[0].fValue = ulControlValue;

  0006c	e59d3004	 ldr         r3, [sp, #4]
  00070	e59d1000	 ldr         r1, [sp]
  00074	e5c13000	 strb        r3, [r1]
  00078	e1a02423	 mov         r2, r3, lsr #8
  0007c	e1a03002	 mov         r3, r2
  00080	e5c13001	 strb        r3, [r1, #1]
  00084	e1a02422	 mov         r2, r2, lsr #8
  00088	e1a03002	 mov         r3, r2
  0008c	e5c13002	 strb        r3, [r1, #2]
  00090	e1a03422	 mov         r3, r2, lsr #8
  00094	e5c13003	 strb        r3, [r1, #3]

; 477  :         return MMSYSERR_NOERROR;

  00098	e3a03000	 mov         r3, #0
  0009c	e58d3008	 str         r3, [sp, #8]

; 478  :     }

  000a0	e59d0008	 ldr         r0, [sp, #8]
  000a4	e28dd010	 add         sp, sp, #0x10
  000a8	e89d6000	 ldmia       sp, {sp, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$M37004|

			 ENDP  ; |?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlBoolean::GetControlDetails


  00000			 AREA	 |.pdata|, PDATA
|$T37014| DCD	|$LN5@SetControl@4|
	DCD	0x40002904
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlBoolean::SetControlDetails

; 481  :     {

  00000		 |$LN5@SetControl@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37011|

; 482  : 		UNREFERENCED_PARAMETER(dwFlags);
; 483  : 
; 484  :         MIXERCONTROLDETAILS_BOOLEAN * pValue = (MIXERCONTROLDETAILS_BOOLEAN *) pDetail->paDetails;

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e2831014	 add         r1, r3, #0x14
  00018	e1d130d3	 ldrsb       r3, [r1, #3]
  0001c	e1a02403	 mov         r2, r3, lsl #8
  00020	e5d13002	 ldrb        r3, [r1, #2]
  00024	e1833002	 orr         r3, r3, r2
  00028	e1a02403	 mov         r2, r3, lsl #8
  0002c	e5d13001	 ldrb        r3, [r1, #1]
  00030	e1833002	 orr         r3, r3, r2
  00034	e1a02403	 mov         r2, r3, lsl #8
  00038	e5d13000	 ldrb        r3, [r1]
  0003c	e1833002	 orr         r3, r3, r2
  00040	e58d3000	 str         r3, [sp]

; 485  : 
; 486  :         // now apply the setting to the hardware
; 487  :         SetValue(pValue[0].fValue);

  00044	e59d1000	 ldr         r1, [sp]
  00048	e1d130d3	 ldrsb       r3, [r1, #3]
  0004c	e1a02403	 mov         r2, r3, lsl #8
  00050	e5d13002	 ldrb        r3, [r1, #2]
  00054	e1833002	 orr         r3, r3, r2
  00058	e1a02403	 mov         r2, r3, lsl #8
  0005c	e5d13001	 ldrb        r3, [r1, #1]
  00060	e1833002	 orr         r3, r3, r2
  00064	e1a02403	 mov         r2, r3, lsl #8
  00068	e5d13000	 ldrb        r3, [r1]
  0006c	e1831002	 orr         r1, r3, r2
  00070	e59d3010	 ldr         r3, [sp, #0x10]
  00074	e5933000	 ldr         r3, [r3]
  00078	e2833020	 add         r3, r3, #0x20
  0007c	e59d0010	 ldr         r0, [sp, #0x10]
  00080	e5933000	 ldr         r3, [r3]
  00084	e1a0e00f	 mov         lr, pc
  00088	e12fff13	 bx          r3

; 488  : 
; 489  :         return MMSYSERR_NOERROR;

  0008c	e3a03000	 mov         r3, #0
  00090	e58d3004	 str         r3, [sp, #4]

; 490  :     }

  00094	e59d0004	 ldr         r0, [sp, #4]
  00098	e28dd008	 add         sp, sp, #8
  0009c	e89d6000	 ldmia       sp, {sp, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$M37012|

			 ENDP  ; |?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlBoolean::SetControlDetails

	EXPORT	|??1MixerControlBoolean@@UAA@XZ|	; MixerControlBoolean::~MixerControlBoolean

  00000			 AREA	 |.pdata|, PDATA
|$T37022| DCD	|$LN6@scalar@5|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlBoolean@@UAAPAXI@Z| PROC ; MixerControlBoolean::`scalar deleting destructor'
  00000		 |$LN6@scalar@5|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37019|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlBoolean@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@5|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@5|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37020|

			 ENDP  ; |??_GMixerControlBoolean@@UAAPAXI@Z|, MixerControlBoolean::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37029| DCD	|$LN5@MixerContr@12|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlBoolean@@UAA@XZ| PROC	; MixerControlBoolean::~MixerControlBoolean
  00000		 |$LN5@MixerContr@12|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37026|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControl@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37027|

			 ENDP  ; |??1MixerControlBoolean@@UAA@XZ|, MixerControlBoolean::~MixerControlBoolean

	EXPORT	|??_C@_1BI@PEAJCPFH@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37036| DCD	|$LN5@CopyMixerC@6|
	DCD	0x40001103

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@PEAJCPFH@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@| DCB "M"
	DCB	0x0, "a", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "M", 0x0, "u", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlMuteMaster@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlMuteMaster::CopyMixerControl

; 500  :     {

  00000		 |$LN5@CopyMixerC@6|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37033|

; 501  :         MixerControlBoolean::CopyMixerControl(pamxctrl);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59d0008	 ldr         r0, [sp, #8]
  00014	eb000000	 bl          |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|

; 502  :         wcscpy(pamxctrl->szName, TEXT("Master Mute"));

  00018	e59f1020	 ldr         r1, [pc, #0x20]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2830034	 add         r0, r3, #0x34
  00024	eb000000	 bl          wcscpy

; 503  :         wcscpy(pamxctrl->szShortName, TEXT("Master Mute"));

  00028	e59f1010	 ldr         r1, [pc, #0x10]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2830014	 add         r0, r3, #0x14
  00034	eb000000	 bl          wcscpy

; 504  :     }

  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@CopyMixerC@6|
  00040		 |$LN7@CopyMixerC@6|
  00040	00000000	 DCD         |??_C@_1BI@PEAJCPFH@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@|
  00044		 |$M37034|

			 ENDP  ; |?CopyMixerControl@MixerControlMuteMaster@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlMuteMaster::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T37046| DCD	|$LN5@GetControl@7|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlType@MixerControlMuteMaster@@UAAKXZ| PROC ; MixerControlMuteMaster::GetControlType

; 505  :     DWORD GetControlType() {return MIXERCONTROL_CONTROLTYPE_MUTE;}

  00000		 |$LN5@GetControl@7|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37043|
  00010	e3a03222	 mov         r3, #0x22, 4
  00014	e3833801	 orr         r3, r3, #1, 16
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37044|

			 ENDP  ; |?GetControlType@MixerControlMuteMaster@@UAAKXZ|, MixerControlMuteMaster::GetControlType


  00000			 AREA	 |.pdata|, PDATA
|$T37054| DCD	|$LN5@GetLineID@3|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlMuteMaster@@UAAGXZ| PROC ; MixerControlMuteMaster::GetLineID

; 506  :     USHORT GetLineID() { return MXLINEID(LINE_OUT,NOLINE); }

  00000		 |$LN5@GetLineID@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37051|
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e3833080	 orr         r3, r3, #0x80
  00018	e1cd30b0	 strh        r3, [sp]
  0001c	e1dd00b0	 ldrh        r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37052|

			 ENDP  ; |?GetLineID@MixerControlMuteMaster@@UAAGXZ|, MixerControlMuteMaster::GetLineID

	IMPORT	|?GetOutputMute@HardwareContext@@QAAHXZ| ; HardwareContext::GetOutputMute

  00000			 AREA	 |.pdata|, PDATA
|$T37062| DCD	|$LN5@GetValue|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetValue@MixerControlMuteMaster@@UAAHXZ| PROC ; MixerControlMuteMaster::GetValue

; 507  :     BOOL GetValue() { return g_pHWContext->GetOutputMute(); }

  00000		 |$LN5@GetValue|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37059|
  00010	e59f3020	 ldr         r3, [pc, #0x20]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?GetOutputMute@HardwareContext@@QAAHXZ|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN6@GetValue|
  00038		 |$LN7@GetValue|
  00038	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0003c		 |$M37060|

			 ENDP  ; |?GetValue@MixerControlMuteMaster@@UAAHXZ|, MixerControlMuteMaster::GetValue

	IMPORT	|?SetOutputMute@HardwareContext@@QAAIH@Z| ; HardwareContext::SetOutputMute

  00000			 AREA	 |.pdata|, PDATA
|$T37071| DCD	|$LN5@SetValue|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetValue@MixerControlMuteMaster@@UAAXH@Z| PROC ; MixerControlMuteMaster::SetValue

; 508  :     void SetValue(BOOL bMute) { g_pHWContext->SetOutputMute(bMute); }

  00000		 |$LN5@SetValue|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37068|
  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59f300c	 ldr         r3, [pc, #0xC]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?SetOutputMute@HardwareContext@@QAAIH@Z|
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@SetValue|
  00024		 |$LN7@SetValue|
  00024	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00028		 |$M37069|

			 ENDP  ; |?SetValue@MixerControlMuteMaster@@UAAXH@Z|, MixerControlMuteMaster::SetValue

	EXPORT	|??1MixerControlMuteMaster@@UAA@XZ|	; MixerControlMuteMaster::~MixerControlMuteMaster

  00000			 AREA	 |.pdata|, PDATA
|$T37081| DCD	|$LN6@scalar@6|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlMuteMaster@@UAAPAXI@Z| PROC ; MixerControlMuteMaster::`scalar deleting destructor'
  00000		 |$LN6@scalar@6|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37078|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlMuteMaster@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@6|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@6|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37079|

			 ENDP  ; |??_GMixerControlMuteMaster@@UAAPAXI@Z|, MixerControlMuteMaster::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37088| DCD	|$LN5@MixerContr@13|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlMuteMaster@@UAA@XZ| PROC ; MixerControlMuteMaster::~MixerControlMuteMaster
  00000		 |$LN5@MixerContr@13|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37085|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControlBoolean@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37086|

			 ENDP  ; |??1MixerControlMuteMaster@@UAA@XZ|, MixerControlMuteMaster::~MixerControlMuteMaster

	EXPORT	|??_7MixerControlInputMute@@6B@| [ DATA ] ; MixerControlInputMute::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlInputMute@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlInputMute::CopyMixerControl
	EXPORT	|?GetLineID@MixerControlInputMute@@UAAGXZ| ; MixerControlInputMute::GetLineID
	EXPORT	|?GetValue@MixerControlInputMute@@UAAHXZ| ; MixerControlInputMute::GetValue
	EXPORT	|?SetValue@MixerControlInputMute@@UAAXH@Z| ; MixerControlInputMute::SetValue
	IMPORT	|??_EMixerControlInputMute@@UAAPAXI@Z|, WEAK |??_GMixerControlInputMute@@UAAPAXI@Z| ; MixerControlInputMute::`vector deleting destructor', MixerControlInputMute::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37096| DCD	|$LN5@MixerContr@14|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlInputMute@@6B@| DCD |??_EMixerControlInputMute@@UAAPAXI@Z| ; MixerControlInputMute::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlInputMute@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlBoolean@@UAAKXZ|
	DCD	|?GetLineID@MixerControlInputMute@@UAAGXZ|
	DCD	|?GetValue@MixerControlInputMute@@UAAHXZ|
	DCD	|?SetValue@MixerControlInputMute@@UAAXH@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlInputMute@@QAA@XZ| PROC ; MixerControlInputMute::MixerControlInputMute

; 515  :     MixerControlInputMute() : MixerControlBoolean() {}

  00000		 |$LN5@MixerContr@14|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37093|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControlBoolean@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@MixerContr@14|
  00040		 |$LN7@MixerContr@14|
  00040	00000000	 DCD         |??_7MixerControlInputMute@@6B@|
  00044		 |$M37094|

			 ENDP  ; |??0MixerControlInputMute@@QAA@XZ|, MixerControlInputMute::MixerControlInputMute

	EXPORT	|??_C@_1BG@JBBFNCIB@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37105| DCD	|$LN5@CopyMixerC@7|
	DCD	0x40001103

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@JBBFNCIB@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "M"
	DCB	0x0, "u", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlInputMute@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlInputMute::CopyMixerControl

; 518  :     {

  00000		 |$LN5@CopyMixerC@7|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37102|

; 519  :         MixerControlBoolean::CopyMixerControl(pamxctrl);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59d0008	 ldr         r0, [sp, #8]
  00014	eb000000	 bl          |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|

; 520  :         wcscpy(pamxctrl->szName, TEXT("Input Mute"));

  00018	e59f1020	 ldr         r1, [pc, #0x20]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2830034	 add         r0, r3, #0x34
  00024	eb000000	 bl          wcscpy

; 521  :         wcscpy(pamxctrl->szShortName, TEXT("Input Mute"));

  00028	e59f1010	 ldr         r1, [pc, #0x10]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2830014	 add         r0, r3, #0x14
  00034	eb000000	 bl          wcscpy

; 522  :     }

  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@CopyMixerC@7|
  00040		 |$LN7@CopyMixerC@7|
  00040	00000000	 DCD         |??_C@_1BG@JBBFNCIB@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@|
  00044		 |$M37103|

			 ENDP  ; |?CopyMixerControl@MixerControlInputMute@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlInputMute::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T37115| DCD	|$LN5@GetLineID@4|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlInputMute@@UAAGXZ| PROC ; MixerControlInputMute::GetLineID

; 524  :     USHORT GetLineID() { return MXLINEID(PCM_IN,NOLINE); }

  00000		 |$LN5@GetLineID@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37112|
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e3833081	 orr         r3, r3, #0x81
  00018	e1cd30b0	 strh        r3, [sp]
  0001c	e1dd00b0	 ldrh        r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37113|

			 ENDP  ; |?GetLineID@MixerControlInputMute@@UAAGXZ|, MixerControlInputMute::GetLineID

	IMPORT	|?GetInputMute@HardwareContext@@QAAHXZ|	; HardwareContext::GetInputMute

  00000			 AREA	 |.pdata|, PDATA
|$T37123| DCD	|$LN5@GetValue@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetValue@MixerControlInputMute@@UAAHXZ| PROC ; MixerControlInputMute::GetValue

; 525  :     BOOL GetValue() { return g_pHWContext->GetInputMute(); }

  00000		 |$LN5@GetValue@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37120|
  00010	e59f3020	 ldr         r3, [pc, #0x20]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?GetInputMute@HardwareContext@@QAAHXZ|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN6@GetValue@2|
  00038		 |$LN7@GetValue@2|
  00038	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0003c		 |$M37121|

			 ENDP  ; |?GetValue@MixerControlInputMute@@UAAHXZ|, MixerControlInputMute::GetValue

	IMPORT	|?SetInputMute@HardwareContext@@QAAIH@Z| ; HardwareContext::SetInputMute

  00000			 AREA	 |.pdata|, PDATA
|$T37132| DCD	|$LN5@SetValue@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetValue@MixerControlInputMute@@UAAXH@Z| PROC ; MixerControlInputMute::SetValue

; 526  :     void SetValue(BOOL bMute) { g_pHWContext->SetInputMute(bMute); }

  00000		 |$LN5@SetValue@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37129|
  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59f300c	 ldr         r3, [pc, #0xC]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?SetInputMute@HardwareContext@@QAAIH@Z|
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@SetValue@2|
  00024		 |$LN7@SetValue@2|
  00024	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00028		 |$M37130|

			 ENDP  ; |?SetValue@MixerControlInputMute@@UAAXH@Z|, MixerControlInputMute::SetValue

	EXPORT	|??1MixerControlInputMute@@UAA@XZ|	; MixerControlInputMute::~MixerControlInputMute

  00000			 AREA	 |.pdata|, PDATA
|$T37142| DCD	|$LN6@scalar@7|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlInputMute@@UAAPAXI@Z| PROC ; MixerControlInputMute::`scalar deleting destructor'
  00000		 |$LN6@scalar@7|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37139|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlInputMute@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@7|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@7|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37140|

			 ENDP  ; |??_GMixerControlInputMute@@UAAPAXI@Z|, MixerControlInputMute::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37149| DCD	|$LN5@MixerContr@15|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlInputMute@@UAA@XZ| PROC ; MixerControlInputMute::~MixerControlInputMute
  00000		 |$LN5@MixerContr@15|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37146|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControlBoolean@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37147|

			 ENDP  ; |??1MixerControlInputMute@@UAA@XZ|, MixerControlInputMute::~MixerControlInputMute

	EXPORT	|??_7MixerControlMicBoost@@6B@| [ DATA ] ; MixerControlMicBoost::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlMicBoost@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlMicBoost::CopyMixerControl
	EXPORT	|?GetLineID@MixerControlMicBoost@@UAAGXZ| ; MixerControlMicBoost::GetLineID
	EXPORT	|?GetValue@MixerControlMicBoost@@UAAHXZ| ; MixerControlMicBoost::GetValue
	EXPORT	|?SetValue@MixerControlMicBoost@@UAAXH@Z| ; MixerControlMicBoost::SetValue
	IMPORT	|?SetMicBoost@HardwareContext@@QAAIH@Z|	; HardwareContext::SetMicBoost
	IMPORT	|??_EMixerControlMicBoost@@UAAPAXI@Z|, WEAK |??_GMixerControlMicBoost@@UAAPAXI@Z| ; MixerControlMicBoost::`vector deleting destructor', MixerControlMicBoost::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37157| DCD	|$LN5@MixerContr@16|
	DCD	0x40001604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlMicBoost@@6B@| DCD |??_EMixerControlMicBoost@@UAAPAXI@Z| ; MixerControlMicBoost::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlMicBoost@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlBoolean@@UAAKXZ|
	DCD	|?GetLineID@MixerControlMicBoost@@UAAGXZ|
	DCD	|?GetValue@MixerControlMicBoost@@UAAHXZ|
	DCD	|?SetValue@MixerControlMicBoost@@UAAXH@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlMicBoost@@QAA@XZ| PROC	; MixerControlMicBoost::MixerControlMicBoost

; 640  : 	{

  00000		 |$LN5@MixerContr@16|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37154|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControlBoolean@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f2030	 ldr         r2, [pc, #0x30]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]

; 641  : 		// Enable Microphone Boost by default
; 642  : 		g_pHWContext->SetMicBoost(TRUE);

  00028	e3a01001	 mov         r1, #1
  0002c	e59f301c	 ldr         r3, [pc, #0x1C]
  00030	e5930000	 ldr         r0, [r3]
  00034	eb000000	 bl          |?SetMicBoost@HardwareContext@@QAAIH@Z|

; 643  : 	}

  00038	e59d3010	 ldr         r3, [sp, #0x10]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN6@MixerContr@16|
  00050		 |$LN7@MixerContr@16|
  00050	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00054		 |$LN8@MixerContr@16|
  00054	00000000	 DCD         |??_7MixerControlMicBoost@@6B@|
  00058		 |$M37155|

			 ENDP  ; |??0MixerControlMicBoost@@QAA@XZ|, MixerControlMicBoost::MixerControlMicBoost

	EXPORT	|??_C@_1BE@CNDCNPPI@?$AAM?$AAi?$AAc?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@LOFKLFED@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?5?$AA?$CI?$AA?$CL?$AA2?$AA0?$AAd?$AAB?$AA?$CJ?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37167| DCD	|$LN5@CopyMixerC@8|
	DCD	0x40001203

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@CNDCNPPI@?$AAM?$AAi?$AAc?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?$AA@| DCB "M"
	DCB	0x0, "i", 0x0, "c", 0x0, " ", 0x0, "B", 0x0, "o", 0x0, "o"
	DCB	0x0, "s", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@LOFKLFED@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?5?$AA?$CI?$AA?$CL?$AA2?$AA0?$AAd?$AAB?$AA?$CJ?$AA?$AA@| DCB "M"
	DCB	0x0, "i", 0x0, "c", 0x0, "r", 0x0, "o", 0x0, "p", 0x0, "h"
	DCB	0x0, "o", 0x0, "n", 0x0, "e", 0x0, " ", 0x0, "B", 0x0, "o"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "+"
	DCB	0x0, "2", 0x0, "0", 0x0, "d", 0x0, "B", 0x0, ")", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlMicBoost@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlMicBoost::CopyMixerControl

; 646  :     {

  00000		 |$LN5@CopyMixerC@8|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37164|

; 647  :         MixerControlBoolean::CopyMixerControl(pamxctrl);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59d0008	 ldr         r0, [sp, #8]
  00014	eb000000	 bl          |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|

; 648  :         wcscpy(pamxctrl->szName, TEXT("Microphone Boost (+20dB)"));

  00018	e59f1024	 ldr         r1, [pc, #0x24]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2830034	 add         r0, r3, #0x34
  00024	eb000000	 bl          wcscpy

; 649  :         wcscpy(pamxctrl->szShortName, TEXT("Mic Boost"));

  00028	e59f1010	 ldr         r1, [pc, #0x10]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2830014	 add         r0, r3, #0x14
  00034	eb000000	 bl          wcscpy

; 650  :     }

  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@CopyMixerC@8|
  00040		 |$LN7@CopyMixerC@8|
  00040	00000000	 DCD         |??_C@_1BE@CNDCNPPI@?$AAM?$AAi?$AAc?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?$AA@|
  00044		 |$LN8@CopyMixerC@8|
  00044	00000000	 DCD         |??_C@_1DC@LOFKLFED@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?5?$AA?$CI?$AA?$CL?$AA2?$AA0?$AAd?$AAB?$AA?$CJ?$AA?$AA@|
  00048		 |$M37165|

			 ENDP  ; |?CopyMixerControl@MixerControlMicBoost@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlMicBoost::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T37178| DCD	|$LN5@GetLineID@5|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlMicBoost@@UAAGXZ| PROC ; MixerControlMicBoost::GetLineID

; 652  :     USHORT GetLineID() { return MXLINEID(PCM_IN,NOLINE); }

  00000		 |$LN5@GetLineID@5|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37175|
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e3833081	 orr         r3, r3, #0x81
  00018	e1cd30b0	 strh        r3, [sp]
  0001c	e1dd00b0	 ldrh        r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37176|

			 ENDP  ; |?GetLineID@MixerControlMicBoost@@UAAGXZ|, MixerControlMicBoost::GetLineID

	IMPORT	|?GetMicBoost@HardwareContext@@QAAHXZ|	; HardwareContext::GetMicBoost

  00000			 AREA	 |.pdata|, PDATA
|$T37186| DCD	|$LN5@GetValue@3|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetValue@MixerControlMicBoost@@UAAHXZ| PROC ; MixerControlMicBoost::GetValue

; 653  : 	BOOL GetValue() { return g_pHWContext->GetMicBoost(); }

  00000		 |$LN5@GetValue@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37183|
  00010	e59f3020	 ldr         r3, [pc, #0x20]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?GetMicBoost@HardwareContext@@QAAHXZ|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN6@GetValue@3|
  00038		 |$LN7@GetValue@3|
  00038	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0003c		 |$M37184|

			 ENDP  ; |?GetValue@MixerControlMicBoost@@UAAHXZ|, MixerControlMicBoost::GetValue


  00000			 AREA	 |.pdata|, PDATA
|$T37195| DCD	|$LN5@SetValue@3|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetValue@MixerControlMicBoost@@UAAXH@Z| PROC ; MixerControlMicBoost::SetValue

; 654  : 	void SetValue(BOOL bMicBoost) { g_pHWContext->SetMicBoost(bMicBoost); }

  00000		 |$LN5@SetValue@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37192|
  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59f300c	 ldr         r3, [pc, #0xC]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?SetMicBoost@HardwareContext@@QAAIH@Z|
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@SetValue@3|
  00024		 |$LN7@SetValue@3|
  00024	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00028		 |$M37193|

			 ENDP  ; |?SetValue@MixerControlMicBoost@@UAAXH@Z|, MixerControlMicBoost::SetValue

	EXPORT	|??1MixerControlMicBoost@@UAA@XZ|	; MixerControlMicBoost::~MixerControlMicBoost

  00000			 AREA	 |.pdata|, PDATA
|$T37205| DCD	|$LN6@scalar@8|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlMicBoost@@UAAPAXI@Z| PROC ; MixerControlMicBoost::`scalar deleting destructor'
  00000		 |$LN6@scalar@8|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37202|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlMicBoost@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@8|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@8|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37203|

			 ENDP  ; |??_GMixerControlMicBoost@@UAAPAXI@Z|, MixerControlMicBoost::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37212| DCD	|$LN5@MixerContr@17|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlMicBoost@@UAA@XZ| PROC	; MixerControlMicBoost::~MixerControlMicBoost
  00000		 |$LN5@MixerContr@17|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37209|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControlBoolean@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37210|

			 ENDP  ; |??1MixerControlMicBoost@@UAA@XZ|, MixerControlMicBoost::~MixerControlMicBoost

	EXPORT	|??_7MixerControlInputMux@@6B@| [ DATA ] ; MixerControlInputMux::`vftable'
	EXPORT	|??0MixerControlSingleMultiSelect@@QAA@XZ| ; MixerControlSingleMultiSelect::MixerControlSingleMultiSelect
	EXPORT	|?CopyMixerControl@MixerControlInputMux@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlInputMux::CopyMixerControl
	EXPORT	|?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlSingleMultiSelect::GetControlDetails
	EXPORT	|?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlSingleMultiSelect::SetControlDetails
	EXPORT	|?GetControlType@MixerControlInputMux@@UAAKXZ| ; MixerControlInputMux::GetControlType
	EXPORT	|?GetLineID@MixerControlInputMux@@UAAGXZ| ; MixerControlInputMux::GetLineID
	EXPORT	|?GetNumSelections@MixerControlInputMux@@UAAKXZ| ; MixerControlInputMux::GetNumSelections
	EXPORT	|?GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z| ; MixerControlInputMux::GetListText
	EXPORT	|?GetCurrSelection@MixerControlInputMux@@UAAKK@Z| ; MixerControlInputMux::GetCurrSelection
	EXPORT	|?SetCurrSelection@MixerControlInputMux@@UAAXKH@Z| ; MixerControlInputMux::SetCurrSelection
	IMPORT	|??_EMixerControlInputMux@@UAAPAXI@Z|, WEAK |??_GMixerControlInputMux@@UAAPAXI@Z| ; MixerControlInputMux::`vector deleting destructor', MixerControlInputMux::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37220| DCD	|$LN5@MixerContr@18|
	DCD	0x40001504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlInputMux@@6B@| DCD |??_EMixerControlInputMux@@UAAPAXI@Z| ; MixerControlInputMux::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlInputMux@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlInputMux@@UAAKXZ|
	DCD	|?GetLineID@MixerControlInputMux@@UAAGXZ|
	DCD	|?GetNumSelections@MixerControlInputMux@@UAAKXZ|
	DCD	|?GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z|
	DCD	|?GetCurrSelection@MixerControlInputMux@@UAAKK@Z|
	DCD	|?SetCurrSelection@MixerControlInputMux@@UAAXKH@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlInputMux@@QAA@XZ| PROC	; MixerControlInputMux::MixerControlInputMux

; 661  :     MixerControlInputMux() : m_CurrSelection(0), MixerControlSingleMultiSelect() {}

  00000		 |$LN5@MixerContr@18|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37217|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControlSingleMultiSelect@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f202c	 ldr         r2, [pc, #0x2C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e2832008	 add         r2, r3, #8
  00030	e3a03000	 mov         r3, #0
  00034	e5823000	 str         r3, [r2]
  00038	e59d3010	 ldr         r3, [sp, #0x10]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN6@MixerContr@18|
  00050		 |$LN7@MixerContr@18|
  00050	00000000	 DCD         |??_7MixerControlInputMux@@6B@|
  00054		 |$M37218|

			 ENDP  ; |??0MixerControlInputMux@@QAA@XZ|, MixerControlInputMux::MixerControlInputMux

	EXPORT	|??_7MixerControlSingleMultiSelect@@6B@| [ DATA ] ; MixerControlSingleMultiSelect::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlSingleMultiSelect::CopyMixerControl
	IMPORT	|??_EMixerControlSingleMultiSelect@@UAAPAXI@Z|, WEAK |??_GMixerControlSingleMultiSelect@@UAAPAXI@Z| ; MixerControlSingleMultiSelect::`vector deleting destructor', MixerControlSingleMultiSelect::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37230| DCD	|$LN5@MixerContr@19|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlSingleMultiSelect@@6B@| DCD |??_EMixerControlSingleMultiSelect@@UAAPAXI@Z| ; MixerControlSingleMultiSelect::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlSingleMultiSelect@@QAA@XZ| PROC ; MixerControlSingleMultiSelect::MixerControlSingleMultiSelect

; 533  :     MixerControlSingleMultiSelect() : MixerControl() {}

  00000		 |$LN5@MixerContr@19|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37227|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0MixerControl@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@MixerContr@19|
  00040		 |$LN7@MixerContr@19|
  00040	00000000	 DCD         |??_7MixerControlSingleMultiSelect@@6B@|
  00044		 |$M37228|

			 ENDP  ; |??0MixerControlSingleMultiSelect@@QAA@XZ|, MixerControlSingleMultiSelect::MixerControlSingleMultiSelect


  00000			 AREA	 |.pdata|, PDATA
|$T37239| DCD	|$LN5@CopyMixerC@9|
	DCD	0x40004204
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlSingleMultiSelect::CopyMixerControl

; 536  :     {

  00000		 |$LN5@CopyMixerC@9|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37236|

; 537  :         MixerControl::CopyMixerControl(pamxctrl);

  00010	e59d1010	 ldr         r1, [sp, #0x10]
  00014	e59d000c	 ldr         r0, [sp, #0xC]
  00018	eb000000	 bl          |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|

; 538  :         pamxctrl->Bounds.dwMinimum = 0;

  0001c	e59d3010	 ldr         r3, [sp, #0x10]
  00020	e28310b4	 add         r1, r3, #0xB4
  00024	e3a03000	 mov         r3, #0
  00028	e5c13000	 strb        r3, [r1]
  0002c	e1a02423	 mov         r2, r3, lsr #8
  00030	e1a03002	 mov         r3, r2
  00034	e5c13001	 strb        r3, [r1, #1]
  00038	e1a02422	 mov         r2, r2, lsr #8
  0003c	e1a03002	 mov         r3, r2
  00040	e5c13002	 strb        r3, [r1, #2]
  00044	e1a03422	 mov         r3, r2, lsr #8
  00048	e5c13003	 strb        r3, [r1, #3]

; 539  :         pamxctrl->Bounds.dwMaximum = 1;

  0004c	e59d3010	 ldr         r3, [sp, #0x10]
  00050	e28310b8	 add         r1, r3, #0xB8
  00054	e3a03001	 mov         r3, #1
  00058	e5c13000	 strb        r3, [r1]
  0005c	e1a02423	 mov         r2, r3, lsr #8
  00060	e1a03002	 mov         r3, r2
  00064	e5c13001	 strb        r3, [r1, #1]
  00068	e1a02422	 mov         r2, r2, lsr #8
  0006c	e1a03002	 mov         r3, r2
  00070	e5c13002	 strb        r3, [r1, #2]
  00074	e1a03422	 mov         r3, r2, lsr #8
  00078	e5c13003	 strb        r3, [r1, #3]

; 540  :         pamxctrl->Metrics.cSteps =  0;

  0007c	e59d3010	 ldr         r3, [sp, #0x10]
  00080	e28310cc	 add         r1, r3, #0xCC
  00084	e3a03000	 mov         r3, #0
  00088	e5c13000	 strb        r3, [r1]
  0008c	e1a02423	 mov         r2, r3, lsr #8
  00090	e1a03002	 mov         r3, r2
  00094	e5c13001	 strb        r3, [r1, #1]
  00098	e1a02422	 mov         r2, r2, lsr #8
  0009c	e1a03002	 mov         r3, r2
  000a0	e5c13002	 strb        r3, [r1, #2]
  000a4	e1a03422	 mov         r3, r2, lsr #8
  000a8	e5c13003	 strb        r3, [r1, #3]

; 541  :         pamxctrl->cMultipleItems = GetNumSelections();

  000ac	e59d300c	 ldr         r3, [sp, #0xC]
  000b0	e5933000	 ldr         r3, [r3]
  000b4	e283301c	 add         r3, r3, #0x1C
  000b8	e59d000c	 ldr         r0, [sp, #0xC]
  000bc	e5933000	 ldr         r3, [r3]
  000c0	e1a0e00f	 mov         lr, pc
  000c4	e12fff13	 bx          r3
  000c8	e58d0000	 str         r0, [sp]
  000cc	e59d3010	 ldr         r3, [sp, #0x10]
  000d0	e2831010	 add         r1, r3, #0x10
  000d4	e59d3000	 ldr         r3, [sp]
  000d8	e5c13000	 strb        r3, [r1]
  000dc	e1a02423	 mov         r2, r3, lsr #8
  000e0	e1a03002	 mov         r3, r2
  000e4	e5c13001	 strb        r3, [r1, #1]
  000e8	e1a02422	 mov         r2, r2, lsr #8
  000ec	e1a03002	 mov         r3, r2
  000f0	e5c13002	 strb        r3, [r1, #2]
  000f4	e1a03422	 mov         r3, r2, lsr #8
  000f8	e5c13003	 strb        r3, [r1, #3]

; 542  :     }

  000fc	e28dd004	 add         sp, sp, #4
  00100	e89d6000	 ldmia       sp, {sp, lr}
  00104	e12fff1e	 bx          lr
  00108		 |$M37237|

			 ENDP  ; |?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlSingleMultiSelect::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T37247| DCD	|$LN18@GetControl@8|
	DCD	0x4000a304
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlSingleMultiSelect::GetControlDetails

; 559  :     {

  00000		 |$LN18@GetControl@8|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd024	 sub         sp, sp, #0x24
  00010		 |$M37244|

; 560  :         DWORD NumSelections = GetNumSelections();

  00010	e59d302c	 ldr         r3, [sp, #0x2C]
  00014	e5933000	 ldr         r3, [r3]
  00018	e283301c	 add         r3, r3, #0x1C
  0001c	e59d002c	 ldr         r0, [sp, #0x2C]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e58d0018	 str         r0, [sp, #0x18]
  00030	e59d3018	 ldr         r3, [sp, #0x18]
  00034	e58d3000	 str         r3, [sp]

; 561  : 
; 562  :         if (pDetail->cMultipleItems != NumSelections)

  00038	e59d3030	 ldr         r3, [sp, #0x30]
  0003c	e283100c	 add         r1, r3, #0xC
  00040	e5d13003	 ldrb        r3, [r1, #3]
  00044	e1a02403	 mov         r2, r3, lsl #8
  00048	e5d13002	 ldrb        r3, [r1, #2]
  0004c	e1833002	 orr         r3, r3, r2
  00050	e1a02403	 mov         r2, r3, lsl #8
  00054	e5d13001	 ldrb        r3, [r1, #1]
  00058	e1833002	 orr         r3, r3, r2
  0005c	e1a02403	 mov         r2, r3, lsl #8
  00060	e5d13000	 ldrb        r3, [r1]
  00064	e1832002	 orr         r2, r3, r2
  00068	e59d3000	 ldr         r3, [sp]
  0006c	e1520003	 cmp         r2, r3
  00070	0a000002	 beq         |$LN13@GetControl@8|

; 563  :         {
; 564  :             return MMSYSERR_INVALPARAM;

  00074	e3a0300b	 mov         r3, #0xB
  00078	e58d3014	 str         r3, [sp, #0x14]
  0007c	ea00007e	 b           |$LN14@GetControl@8|
  00080		 |$LN13@GetControl@8|

; 565  :         }
; 566  : 
; 567  :         switch (dwFlags)

  00080	e59d3034	 ldr         r3, [sp, #0x34]
  00084	e58d301c	 str         r3, [sp, #0x1C]
  00088	e59d301c	 ldr         r3, [sp, #0x1C]
  0008c	e3530000	 cmp         r3, #0
  00090	0a000036	 beq         |$LN5@GetControl@8|
  00094	e59d301c	 ldr         r3, [sp, #0x1C]
  00098	e3530001	 cmp         r3, #1
  0009c	0a000000	 beq         |$LN10@GetControl@8|
  000a0	ea000073	 b           |$LN11@GetControl@8|
  000a4		 |$LN10@GetControl@8|

; 568  :         {
; 569  :             case MIXER_GETCONTROLDETAILSF_LISTTEXT:
; 570  :             {
; 571  :                 if ( pDetail->cbDetails != sizeof(MIXERCONTROLDETAILS_LISTTEXT) )

  000a4	e59d3030	 ldr         r3, [sp, #0x30]
  000a8	e2831010	 add         r1, r3, #0x10
  000ac	e5d13003	 ldrb        r3, [r1, #3]
  000b0	e1a02403	 mov         r2, r3, lsl #8
  000b4	e5d13002	 ldrb        r3, [r1, #2]
  000b8	e1833002	 orr         r3, r3, r2
  000bc	e1a02403	 mov         r2, r3, lsl #8
  000c0	e5d13001	 ldrb        r3, [r1, #1]
  000c4	e1833002	 orr         r3, r3, r2
  000c8	e1a02403	 mov         r2, r3, lsl #8
  000cc	e5d13000	 ldrb        r3, [r1]
  000d0	e1833002	 orr         r3, r3, r2
  000d4	e3530088	 cmp         r3, #0x88
  000d8	0a000002	 beq         |$LN9@GetControl@8|

; 572  :                 {
; 573  :                     return MMSYSERR_INVALPARAM;

  000dc	e3a0300b	 mov         r3, #0xB
  000e0	e58d3014	 str         r3, [sp, #0x14]
  000e4	ea000064	 b           |$LN14@GetControl@8|
  000e8		 |$LN9@GetControl@8|

; 574  :                 }
; 575  : 
; 576  :                 MIXERCONTROLDETAILS_LISTTEXT * pValue = (MIXERCONTROLDETAILS_LISTTEXT * ) pDetail->paDetails;

  000e8	e59d3030	 ldr         r3, [sp, #0x30]
  000ec	e2831014	 add         r1, r3, #0x14
  000f0	e1d130d3	 ldrsb       r3, [r1, #3]
  000f4	e1a02403	 mov         r2, r3, lsl #8
  000f8	e5d13002	 ldrb        r3, [r1, #2]
  000fc	e1833002	 orr         r3, r3, r2
  00100	e1a02403	 mov         r2, r3, lsl #8
  00104	e5d13001	 ldrb        r3, [r1, #1]
  00108	e1833002	 orr         r3, r3, r2
  0010c	e1a02403	 mov         r2, r3, lsl #8
  00110	e5d13000	 ldrb        r3, [r1]
  00114	e1833002	 orr         r3, r3, r2
  00118	e58d3004	 str         r3, [sp, #4]

; 577  : 
; 578  :                 for (DWORD i=0;i<NumSelections;i++)

  0011c	e3a03000	 mov         r3, #0
  00120	e58d3008	 str         r3, [sp, #8]
  00124	ea000002	 b           |$LN8@GetControl@8|
  00128		 |$LN7@GetControl@8|
  00128	e59d3008	 ldr         r3, [sp, #8]
  0012c	e2833001	 add         r3, r3, #1
  00130	e58d3008	 str         r3, [sp, #8]
  00134		 |$LN8@GetControl@8|
  00134	e59d2008	 ldr         r2, [sp, #8]
  00138	e59d3000	 ldr         r3, [sp]
  0013c	e1520003	 cmp         r2, r3
  00140	2a000009	 bcs         |$LN6@GetControl@8|

; 579  :                 {
; 580  :                     GetListText(pValue,i);

  00144	e59d2008	 ldr         r2, [sp, #8]
  00148	e59d1004	 ldr         r1, [sp, #4]
  0014c	e59d302c	 ldr         r3, [sp, #0x2C]
  00150	e5933000	 ldr         r3, [r3]
  00154	e2833020	 add         r3, r3, #0x20
  00158	e59d002c	 ldr         r0, [sp, #0x2C]
  0015c	e5933000	 ldr         r3, [r3]
  00160	e1a0e00f	 mov         lr, pc
  00164	e12fff13	 bx          r3

; 581  :                 }

  00168	eaffffee	 b           |$LN7@GetControl@8|
  0016c		 |$LN6@GetControl@8|

; 582  : 
; 583  :                 break;

  0016c	ea000040	 b           |$LN11@GetControl@8|
  00170		 |$LN5@GetControl@8|

; 584  :             }
; 585  :             case MIXER_GETCONTROLDETAILSF_VALUE:
; 586  :             {
; 587  :                 if ( pDetail->cbDetails != sizeof(MIXERCONTROLDETAILS_BOOLEAN) )

  00170	e59d3030	 ldr         r3, [sp, #0x30]
  00174	e2831010	 add         r1, r3, #0x10
  00178	e5d13003	 ldrb        r3, [r1, #3]
  0017c	e1a02403	 mov         r2, r3, lsl #8
  00180	e5d13002	 ldrb        r3, [r1, #2]
  00184	e1833002	 orr         r3, r3, r2
  00188	e1a02403	 mov         r2, r3, lsl #8
  0018c	e5d13001	 ldrb        r3, [r1, #1]
  00190	e1833002	 orr         r3, r3, r2
  00194	e1a02403	 mov         r2, r3, lsl #8
  00198	e5d13000	 ldrb        r3, [r1]
  0019c	e1833002	 orr         r3, r3, r2
  001a0	e3530004	 cmp         r3, #4
  001a4	0a000002	 beq         |$LN4@GetControl@8|

; 588  :                 {
; 589  :                     return MMSYSERR_INVALPARAM;

  001a8	e3a0300b	 mov         r3, #0xB
  001ac	e58d3014	 str         r3, [sp, #0x14]
  001b0	ea000031	 b           |$LN14@GetControl@8|
  001b4		 |$LN4@GetControl@8|

; 590  :                 }
; 591  : 
; 592  :                 MIXERCONTROLDETAILS_BOOLEAN * pValue = (MIXERCONTROLDETAILS_BOOLEAN *) pDetail->paDetails;

  001b4	e59d3030	 ldr         r3, [sp, #0x30]
  001b8	e2831014	 add         r1, r3, #0x14
  001bc	e1d130d3	 ldrsb       r3, [r1, #3]
  001c0	e1a02403	 mov         r2, r3, lsl #8
  001c4	e5d13002	 ldrb        r3, [r1, #2]
  001c8	e1833002	 orr         r3, r3, r2
  001cc	e1a02403	 mov         r2, r3, lsl #8
  001d0	e5d13001	 ldrb        r3, [r1, #1]
  001d4	e1833002	 orr         r3, r3, r2
  001d8	e1a02403	 mov         r2, r3, lsl #8
  001dc	e5d13000	 ldrb        r3, [r1]
  001e0	e1833002	 orr         r3, r3, r2
  001e4	e58d300c	 str         r3, [sp, #0xC]

; 593  :                 for (DWORD i=0;i<NumSelections;i++)

  001e8	e3a03000	 mov         r3, #0
  001ec	e58d3010	 str         r3, [sp, #0x10]
  001f0	ea000002	 b           |$LN3@GetControl@8|
  001f4		 |$LN2@GetControl@8|
  001f4	e59d3010	 ldr         r3, [sp, #0x10]
  001f8	e2833001	 add         r3, r3, #1
  001fc	e58d3010	 str         r3, [sp, #0x10]
  00200		 |$LN3@GetControl@8|
  00200	e59d2010	 ldr         r2, [sp, #0x10]
  00204	e59d3000	 ldr         r3, [sp]
  00208	e1520003	 cmp         r2, r3
  0020c	2a000018	 bcs         |$LN1@GetControl@8|

; 594  :                 {
; 595  :                     pValue[i].fValue = GetCurrSelection(i);

  00210	e59d1010	 ldr         r1, [sp, #0x10]
  00214	e59d302c	 ldr         r3, [sp, #0x2C]
  00218	e5933000	 ldr         r3, [r3]
  0021c	e2833024	 add         r3, r3, #0x24
  00220	e59d002c	 ldr         r0, [sp, #0x2C]
  00224	e5933000	 ldr         r3, [r3]
  00228	e1a0e00f	 mov         lr, pc
  0022c	e12fff13	 bx          r3
  00230	e58d0020	 str         r0, [sp, #0x20]
  00234	e59d1010	 ldr         r1, [sp, #0x10]
  00238	e3a03004	 mov         r3, #4
  0023c	e0020391	 mul         r2, r1, r3
  00240	e59d300c	 ldr         r3, [sp, #0xC]
  00244	e0831002	 add         r1, r3, r2
  00248	e59d3020	 ldr         r3, [sp, #0x20]
  0024c	e5c13000	 strb        r3, [r1]
  00250	e1a02423	 mov         r2, r3, lsr #8
  00254	e1a03002	 mov         r3, r2
  00258	e5c13001	 strb        r3, [r1, #1]
  0025c	e1a02422	 mov         r2, r2, lsr #8
  00260	e1a03002	 mov         r3, r2
  00264	e5c13002	 strb        r3, [r1, #2]
  00268	e1a03422	 mov         r3, r2, lsr #8
  0026c	e5c13003	 strb        r3, [r1, #3]

; 596  :                 }

  00270	eaffffdf	 b           |$LN2@GetControl@8|
  00274		 |$LN1@GetControl@8|
  00274		 |$LN11@GetControl@8|

; 597  :                 break;
; 598  :             }
; 599  :         }
; 600  : 
; 601  :         return MMSYSERR_NOERROR;

  00274	e3a03000	 mov         r3, #0
  00278	e58d3014	 str         r3, [sp, #0x14]
  0027c		 |$LN14@GetControl@8|

; 602  :     }

  0027c	e59d0014	 ldr         r0, [sp, #0x14]
  00280	e28dd024	 add         sp, sp, #0x24
  00284	e89d6000	 ldmia       sp, {sp, lr}
  00288	e12fff1e	 bx          lr
  0028c		 |$M37245|

			 ENDP  ; |?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlSingleMultiSelect::GetControlDetails


  00000			 AREA	 |.pdata|, PDATA
|$T37255| DCD	|$LN13@SetControl@5|
	DCD	0x40006a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlSingleMultiSelect::SetControlDetails

; 605  :     {

  00000		 |$LN13@SetControl@5|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M37252|

; 606  :         DWORD NumSelections = GetNumSelections();

  00010	e59d301c	 ldr         r3, [sp, #0x1C]
  00014	e5933000	 ldr         r3, [r3]
  00018	e283301c	 add         r3, r3, #0x1C
  0001c	e59d001c	 ldr         r0, [sp, #0x1C]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e58d0010	 str         r0, [sp, #0x10]
  00030	e59d3010	 ldr         r3, [sp, #0x10]
  00034	e58d3000	 str         r3, [sp]

; 607  : 
; 608  :         if (pDetail->cMultipleItems != NumSelections)

  00038	e59d3020	 ldr         r3, [sp, #0x20]
  0003c	e283100c	 add         r1, r3, #0xC
  00040	e5d13003	 ldrb        r3, [r1, #3]
  00044	e1a02403	 mov         r2, r3, lsl #8
  00048	e5d13002	 ldrb        r3, [r1, #2]
  0004c	e1833002	 orr         r3, r3, r2
  00050	e1a02403	 mov         r2, r3, lsl #8
  00054	e5d13001	 ldrb        r3, [r1, #1]
  00058	e1833002	 orr         r3, r3, r2
  0005c	e1a02403	 mov         r2, r3, lsl #8
  00060	e5d13000	 ldrb        r3, [r1]
  00064	e1832002	 orr         r2, r3, r2
  00068	e59d3000	 ldr         r3, [sp]
  0006c	e1520003	 cmp         r2, r3
  00070	0a000002	 beq         |$LN8@SetControl@5|

; 609  :         {
; 610  :             return MMSYSERR_INVALPARAM;

  00074	e3a0300b	 mov         r3, #0xB
  00078	e58d300c	 str         r3, [sp, #0xC]
  0007c	ea000045	 b           |$LN9@SetControl@5|
  00080		 |$LN8@SetControl@5|

; 611  :         }
; 612  : 
; 613  :         switch (dwFlags)

  00080	e59d3024	 ldr         r3, [sp, #0x24]
  00084	e3530000	 cmp         r3, #0
  00088	0a000000	 beq         |$LN5@SetControl@5|
  0008c	ea00003f	 b           |$LN6@SetControl@5|
  00090		 |$LN5@SetControl@5|

; 614  :         {
; 615  :             case MIXER_SETCONTROLDETAILSF_VALUE:
; 616  :             {
; 617  :                 if ( pDetail->cbDetails != sizeof(MIXERCONTROLDETAILS_BOOLEAN) )

  00090	e59d3020	 ldr         r3, [sp, #0x20]
  00094	e2831010	 add         r1, r3, #0x10
  00098	e5d13003	 ldrb        r3, [r1, #3]
  0009c	e1a02403	 mov         r2, r3, lsl #8
  000a0	e5d13002	 ldrb        r3, [r1, #2]
  000a4	e1833002	 orr         r3, r3, r2
  000a8	e1a02403	 mov         r2, r3, lsl #8
  000ac	e5d13001	 ldrb        r3, [r1, #1]
  000b0	e1833002	 orr         r3, r3, r2
  000b4	e1a02403	 mov         r2, r3, lsl #8
  000b8	e5d13000	 ldrb        r3, [r1]
  000bc	e1833002	 orr         r3, r3, r2
  000c0	e3530004	 cmp         r3, #4
  000c4	0a000002	 beq         |$LN4@SetControl@5|

; 618  :                 {
; 619  :                     return MMSYSERR_INVALPARAM;

  000c8	e3a0300b	 mov         r3, #0xB
  000cc	e58d300c	 str         r3, [sp, #0xC]
  000d0	ea000030	 b           |$LN9@SetControl@5|
  000d4		 |$LN4@SetControl@5|

; 620  :                 }
; 621  : 
; 622  :                 MIXERCONTROLDETAILS_BOOLEAN * pValue = (MIXERCONTROLDETAILS_BOOLEAN *) pDetail->paDetails;

  000d4	e59d3020	 ldr         r3, [sp, #0x20]
  000d8	e2831014	 add         r1, r3, #0x14
  000dc	e1d130d3	 ldrsb       r3, [r1, #3]
  000e0	e1a02403	 mov         r2, r3, lsl #8
  000e4	e5d13002	 ldrb        r3, [r1, #2]
  000e8	e1833002	 orr         r3, r3, r2
  000ec	e1a02403	 mov         r2, r3, lsl #8
  000f0	e5d13001	 ldrb        r3, [r1, #1]
  000f4	e1833002	 orr         r3, r3, r2
  000f8	e1a02403	 mov         r2, r3, lsl #8
  000fc	e5d13000	 ldrb        r3, [r1]
  00100	e1833002	 orr         r3, r3, r2
  00104	e58d3004	 str         r3, [sp, #4]

; 623  :                 for (DWORD i=0;i<NumSelections;i++)

  00108	e3a03000	 mov         r3, #0
  0010c	e58d3008	 str         r3, [sp, #8]
  00110	ea000002	 b           |$LN3@SetControl@5|
  00114		 |$LN2@SetControl@5|
  00114	e59d3008	 ldr         r3, [sp, #8]
  00118	e2833001	 add         r3, r3, #1
  0011c	e58d3008	 str         r3, [sp, #8]
  00120		 |$LN3@SetControl@5|
  00120	e59d2008	 ldr         r2, [sp, #8]
  00124	e59d3000	 ldr         r3, [sp]
  00128	e1520003	 cmp         r2, r3
  0012c	2a000017	 bcs         |$LN1@SetControl@5|

; 624  :                 {
; 625  :                     SetCurrSelection(i, pValue[i].fValue);

  00130	e59d1008	 ldr         r1, [sp, #8]
  00134	e3a03004	 mov         r3, #4
  00138	e0020391	 mul         r2, r1, r3
  0013c	e59d3004	 ldr         r3, [sp, #4]
  00140	e0831002	 add         r1, r3, r2
  00144	e1d130d3	 ldrsb       r3, [r1, #3]
  00148	e1a02403	 mov         r2, r3, lsl #8
  0014c	e5d13002	 ldrb        r3, [r1, #2]
  00150	e1833002	 orr         r3, r3, r2
  00154	e1a02403	 mov         r2, r3, lsl #8
  00158	e5d13001	 ldrb        r3, [r1, #1]
  0015c	e1833002	 orr         r3, r3, r2
  00160	e1a02403	 mov         r2, r3, lsl #8
  00164	e5d13000	 ldrb        r3, [r1]
  00168	e1832002	 orr         r2, r3, r2
  0016c	e59d1008	 ldr         r1, [sp, #8]
  00170	e59d301c	 ldr         r3, [sp, #0x1C]
  00174	e5933000	 ldr         r3, [r3]
  00178	e2833028	 add         r3, r3, #0x28
  0017c	e59d001c	 ldr         r0, [sp, #0x1C]
  00180	e5933000	 ldr         r3, [r3]
  00184	e1a0e00f	 mov         lr, pc
  00188	e12fff13	 bx          r3

; 626  :                 }

  0018c	eaffffe0	 b           |$LN2@SetControl@5|
  00190		 |$LN1@SetControl@5|
  00190		 |$LN6@SetControl@5|

; 627  :                 break;
; 628  :             }
; 629  :         }
; 630  :         return MMSYSERR_NOERROR;

  00190	e3a03000	 mov         r3, #0
  00194	e58d300c	 str         r3, [sp, #0xC]
  00198		 |$LN9@SetControl@5|

; 631  :     }

  00198	e59d000c	 ldr         r0, [sp, #0xC]
  0019c	e28dd014	 add         sp, sp, #0x14
  001a0	e89d6000	 ldmia       sp, {sp, lr}
  001a4	e12fff1e	 bx          lr
  001a8		 |$M37253|

			 ENDP  ; |?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlSingleMultiSelect::SetControlDetails

	EXPORT	|??1MixerControlSingleMultiSelect@@UAA@XZ| ; MixerControlSingleMultiSelect::~MixerControlSingleMultiSelect

  00000			 AREA	 |.pdata|, PDATA
|$T37263| DCD	|$LN6@scalar@9|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlSingleMultiSelect@@UAAPAXI@Z| PROC ; MixerControlSingleMultiSelect::`scalar deleting destructor'
  00000		 |$LN6@scalar@9|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37260|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlSingleMultiSelect@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@9|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@9|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37261|

			 ENDP  ; |??_GMixerControlSingleMultiSelect@@UAAPAXI@Z|, MixerControlSingleMultiSelect::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37270| DCD	|$LN5@MixerContr@20|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlSingleMultiSelect@@UAA@XZ| PROC ; MixerControlSingleMultiSelect::~MixerControlSingleMultiSelect
  00000		 |$LN5@MixerContr@20|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37267|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControl@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37268|

			 ENDP  ; |??1MixerControlSingleMultiSelect@@UAA@XZ|, MixerControlSingleMultiSelect::~MixerControlSingleMultiSelect

	EXPORT	|??_C@_1BE@FNMPOHBO@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAx?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37277| DCD	|$LN5@CopyMixerC@10|
	DCD	0x40001d03

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@FNMPOHBO@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAx?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "M"
	DCB	0x0, "u", 0x0, "x", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlInputMux@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlInputMux::CopyMixerControl

; 664  :     {

  00000		 |$LN5@CopyMixerC@10|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37274|

; 665  :         MixerControlSingleMultiSelect::CopyMixerControl(pamxctrl);

  0000c	e59d100c	 ldr         r1, [sp, #0xC]
  00010	e59d0008	 ldr         r0, [sp, #8]
  00014	eb000000	 bl          |?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z|

; 666  :         wcscpy(pamxctrl->szName, TEXT("Input Mux"));

  00018	e59f1050	 ldr         r1, [pc, #0x50]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2830034	 add         r0, r3, #0x34
  00024	eb000000	 bl          wcscpy

; 667  :         wcscpy(pamxctrl->szShortName, TEXT("Input Mux"));

  00028	e59f1040	 ldr         r1, [pc, #0x40]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2830014	 add         r0, r3, #0x14
  00034	eb000000	 bl          wcscpy

; 668  :         pamxctrl->fdwControl = MIXERCONTROL_CONTROLF_UNIFORM|MIXERCONTROL_CONTROLF_MULTIPLE;

  00038	e59d300c	 ldr         r3, [sp, #0xC]
  0003c	e283100c	 add         r1, r3, #0xC
  00040	e3a03003	 mov         r3, #3
  00044	e5c13000	 strb        r3, [r1]
  00048	e1a02423	 mov         r2, r3, lsr #8
  0004c	e1a03002	 mov         r3, r2
  00050	e5c13001	 strb        r3, [r1, #1]
  00054	e1a02422	 mov         r2, r2, lsr #8
  00058	e1a03002	 mov         r3, r2
  0005c	e5c13002	 strb        r3, [r1, #2]
  00060	e1a03422	 mov         r3, r2, lsr #8
  00064	e5c13003	 strb        r3, [r1, #3]

; 669  :     }

  00068	e89d6000	 ldmia       sp, {sp, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN6@CopyMixerC@10|
  00070		 |$LN7@CopyMixerC@10|
  00070	00000000	 DCD         |??_C@_1BE@FNMPOHBO@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAx?$AA?$AA@|
  00074		 |$M37275|

			 ENDP  ; |?CopyMixerControl@MixerControlInputMux@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlInputMux::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T37287| DCD	|$LN5@GetLineID@6|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlInputMux@@UAAGXZ| PROC ; MixerControlInputMux::GetLineID

; 671  :     USHORT GetLineID() { return MXLINEID(PCM_IN,NOLINE); }

  00000		 |$LN5@GetLineID@6|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37284|
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e3833081	 orr         r3, r3, #0x81
  00018	e1cd30b0	 strh        r3, [sp]
  0001c	e1dd00b0	 ldrh        r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37285|

			 ENDP  ; |?GetLineID@MixerControlInputMux@@UAAGXZ|, MixerControlInputMux::GetLineID


  00000			 AREA	 |.pdata|, PDATA
|$T37295| DCD	|$LN5@GetControl@9|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlType@MixerControlInputMux@@UAAKXZ| PROC ; MixerControlInputMux::GetControlType

; 672  :     DWORD GetControlType() {return MIXERCONTROL_CONTROLTYPE_MUX;}

  00000		 |$LN5@GetControl@9|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37292|
  00010	e3a03217	 mov         r3, #0x17, 4
  00014	e3833801	 orr         r3, r3, #1, 16
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37293|

			 ENDP  ; |?GetControlType@MixerControlInputMux@@UAAKXZ|, MixerControlInputMux::GetControlType


  00000			 AREA	 |.pdata|, PDATA
|$T37303| DCD	|$LN5@GetNumSele|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumSelections@MixerControlInputMux@@UAAKXZ| PROC ; MixerControlInputMux::GetNumSelections

; 674  :     DWORD GetNumSelections() { return 2; }

  00000		 |$LN5@GetNumSele|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37300|
  00010	e3a03002	 mov         r3, #2
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M37301|

			 ENDP  ; |?GetNumSelections@MixerControlInputMux@@UAAKXZ|, MixerControlInputMux::GetNumSelections

	EXPORT	|?szNames@?1??GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z@4PAPBGA| [ DATA ] ; `MixerControlInputMux::GetListText'::`2'::szNames
	EXPORT	|?GetComponentType@MixerControl@@QAAKXZ| ; MixerControl::GetComponentType
	EXPORT	|??_C@_1BG@KOFOLECK@?$AAL?$AAi?$AAn?$AAe?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37310| DCD	|$LN5@GetListTex|
	DCD	0x40004204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@KOFOLECK@?$AAL?$AAi?$AAn?$AAe?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| DCB "L"
	DCB	0x0, "i", 0x0, "n", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|?szNames@?1??GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z@4PAPBGA| DCD |??_C@_1BG@KOFOLECK@?$AAL?$AAi?$AAn?$AAe?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| ; `MixerControlInputMux::GetListText'::`2'::szNames
	DCD	|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z| PROC ; MixerControlInputMux::GetListText

; 677  :     {

  00000		 |$LN5@GetListTex|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37307|

; 678  :         static const TCHAR *szNames[] =
; 679  :         {
; 680  :                 TEXT("Line Input"),
; 681  :                 TEXT("Microphone"),
; 682  :         };
; 683  : 
; 684  :         pValue[Index].dwParam1 = GetLineID();

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e5933000	 ldr         r3, [r3]
  00018	e2833018	 add         r3, r3, #0x18
  0001c	e59d0010	 ldr         r0, [sp, #0x10]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e1a03800	 mov         r3, r0, lsl #16
  00030	e1a03823	 mov         r3, r3, lsr #16
  00034	e1cd30b0	 strh        r3, [sp]
  00038	e1dd00b0	 ldrh        r0, [sp]
  0003c	e59d1018	 ldr         r1, [sp, #0x18]
  00040	e3a03088	 mov         r3, #0x88
  00044	e0020391	 mul         r2, r1, r3
  00048	e59d3014	 ldr         r3, [sp, #0x14]
  0004c	e0831002	 add         r1, r3, r2
  00050	e1a03000	 mov         r3, r0
  00054	e5c13000	 strb        r3, [r1]
  00058	e1a02423	 mov         r2, r3, lsr #8
  0005c	e1a03002	 mov         r3, r2
  00060	e5c13001	 strb        r3, [r1, #1]
  00064	e1a02422	 mov         r2, r2, lsr #8
  00068	e1a03002	 mov         r3, r2
  0006c	e5c13002	 strb        r3, [r1, #2]
  00070	e1a03422	 mov         r3, r2, lsr #8
  00074	e5c13003	 strb        r3, [r1, #3]

; 685  :         pValue[Index].dwParam2 = GetComponentType();

  00078	e59d0010	 ldr         r0, [sp, #0x10]
  0007c	eb000000	 bl          |?GetComponentType@MixerControl@@QAAKXZ|
  00080	e58d0004	 str         r0, [sp, #4]
  00084	e59d1018	 ldr         r1, [sp, #0x18]
  00088	e3a03088	 mov         r3, #0x88
  0008c	e0020391	 mul         r2, r1, r3
  00090	e59d3014	 ldr         r3, [sp, #0x14]
  00094	e0833002	 add         r3, r3, r2
  00098	e2831004	 add         r1, r3, #4
  0009c	e59d3004	 ldr         r3, [sp, #4]
  000a0	e5c13000	 strb        r3, [r1]
  000a4	e1a02423	 mov         r2, r3, lsr #8
  000a8	e1a03002	 mov         r3, r2
  000ac	e5c13001	 strb        r3, [r1, #1]
  000b0	e1a02422	 mov         r2, r2, lsr #8
  000b4	e1a03002	 mov         r3, r2
  000b8	e5c13002	 strb        r3, [r1, #2]
  000bc	e1a03422	 mov         r3, r2, lsr #8
  000c0	e5c13003	 strb        r3, [r1, #3]

; 686  :         wcscpy(pValue[Index].szName,szNames[Index]);

  000c4	e59d1018	 ldr         r1, [sp, #0x18]
  000c8	e3a03004	 mov         r3, #4
  000cc	e0020391	 mul         r2, r1, r3
  000d0	e59f302c	 ldr         r3, [pc, #0x2C]
  000d4	e0833002	 add         r3, r3, r2
  000d8	e5931000	 ldr         r1, [r3]
  000dc	e59d0018	 ldr         r0, [sp, #0x18]
  000e0	e3a03088	 mov         r3, #0x88
  000e4	e0020390	 mul         r2, r0, r3
  000e8	e59d3014	 ldr         r3, [sp, #0x14]
  000ec	e0833002	 add         r3, r3, r2
  000f0	e2830008	 add         r0, r3, #8
  000f4	eb000000	 bl          wcscpy

; 687  :     }

  000f8	e28dd008	 add         sp, sp, #8
  000fc	e89d6000	 ldmia       sp, {sp, lr}
  00100	e12fff1e	 bx          lr
  00104		 |$LN6@GetListTex|
  00104		 |$LN7@GetListTex|
  00104	00000000	 DCD         |?szNames@?1??GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z@4PAPBGA|
  00108		 |$M37308|

			 ENDP  ; |?GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z|, MixerControlInputMux::GetListText


  00000			 AREA	 |.pdata|, PDATA
|$T37320| DCD	|$LN5@GetCompone|
	DCD	0x40001a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetComponentType@MixerControl@@QAAKXZ| PROC ; MixerControl::GetComponentType

; 279  :     {

  00000		 |$LN5@GetCompone|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M37317|

; 280  :         PMXLINEDESC pLine = LookupMxLine(GetLineID());

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e5933000	 ldr         r3, [r3]
  00018	e2833018	 add         r3, r3, #0x18
  0001c	e59d0018	 ldr         r0, [sp, #0x18]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e1a03800	 mov         r3, r0, lsl #16
  00030	e1a03823	 mov         r3, r3, lsr #16
  00034	e1cd30b8	 strh        r3, [sp, #8]
  00038	e1dd00b8	 ldrh        r0, [sp, #8]
  0003c	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  00040	e58d000c	 str         r0, [sp, #0xC]
  00044	e59d300c	 ldr         r3, [sp, #0xC]
  00048	e58d3000	 str         r3, [sp]

; 281  :         return pLine->dwComponentType;

  0004c	e59d3000	 ldr         r3, [sp]
  00050	e5933000	 ldr         r3, [r3]
  00054	e58d3004	 str         r3, [sp, #4]

; 282  :     }

  00058	e59d0004	 ldr         r0, [sp, #4]
  0005c	e28dd010	 add         sp, sp, #0x10
  00060	e89d6000	 ldmia       sp, {sp, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M37318|

			 ENDP  ; |?GetComponentType@MixerControl@@QAAKXZ|, MixerControl::GetComponentType


  00000			 AREA	 |.pdata|, PDATA
|$T37330| DCD	|$LN7@GetCurrSel|
	DCD	0x40001504
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCurrSelection@MixerControlInputMux@@UAAKK@Z| PROC ; MixerControlInputMux::GetCurrSelection

; 691  :     {

  00000		 |$LN7@GetCurrSel|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37327|

; 692  :         return (Index == m_CurrSelection);

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833008	 add         r3, r3, #8
  00018	e59d2014	 ldr         r2, [sp, #0x14]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e1520003	 cmp         r2, r3
  00024	1a000002	 bne         |$LN3@GetCurrSel|
  00028	e3a03001	 mov         r3, #1
  0002c	e58d3004	 str         r3, [sp, #4]
  00030	ea000001	 b           |$LN4@GetCurrSel|
  00034		 |$LN3@GetCurrSel|
  00034	e3a03000	 mov         r3, #0
  00038	e58d3004	 str         r3, [sp, #4]
  0003c		 |$LN4@GetCurrSel|
  0003c	e59d3004	 ldr         r3, [sp, #4]
  00040	e58d3000	 str         r3, [sp]

; 693  :     }

  00044	e59d0000	 ldr         r0, [sp]
  00048	e28dd008	 add         sp, sp, #8
  0004c	e89d6000	 ldmia       sp, {sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37328|

			 ENDP  ; |?GetCurrSelection@MixerControlInputMux@@UAAKK@Z|, MixerControlInputMux::GetCurrSelection

	IMPORT	|?SetInputMux@HardwareContext@@QAAIH@Z|	; HardwareContext::SetInputMux

  00000			 AREA	 |.pdata|, PDATA
|$T37337| DCD	|$LN6@SetCurrSel|
	DCD	0x40001303
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetCurrSelection@MixerControlInputMux@@UAAXKH@Z| PROC ; MixerControlInputMux::SetCurrSelection

; 697  :     {

  00000		 |$LN6@SetCurrSel|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37334|

; 698  :         if (bSet)

  0000c	e59d3010	 ldr         r3, [sp, #0x10]
  00010	e3530000	 cmp         r3, #0
  00014	0a000009	 beq         |$LN1@SetCurrSel|

; 699  :         {
; 700  :             m_CurrSelection = Index;

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2832008	 add         r2, r3, #8
  00020	e59d300c	 ldr         r3, [sp, #0xC]
  00024	e5823000	 str         r3, [r2]

; 701  : 			g_pHWContext->SetInputMux(m_CurrSelection);

  00028	e59d3008	 ldr         r3, [sp, #8]
  0002c	e2833008	 add         r3, r3, #8
  00030	e5931000	 ldr         r1, [r3]
  00034	e59f300c	 ldr         r3, [pc, #0xC]
  00038	e5930000	 ldr         r0, [r3]
  0003c	eb000000	 bl          |?SetInputMux@HardwareContext@@QAAIH@Z|
  00040		 |$LN1@SetCurrSel|

; 702  :         }
; 703  :     }

  00040	e89d6000	 ldmia       sp, {sp, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN7@SetCurrSel|
  00048		 |$LN8@SetCurrSel|
  00048	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0004c		 |$M37335|

			 ENDP  ; |?SetCurrSelection@MixerControlInputMux@@UAAXKH@Z|, MixerControlInputMux::SetCurrSelection

	EXPORT	|??1MixerControlInputMux@@UAA@XZ|	; MixerControlInputMux::~MixerControlInputMux

  00000			 AREA	 |.pdata|, PDATA
|$T37347| DCD	|$LN6@scalar@10|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlInputMux@@UAAPAXI@Z| PROC ; MixerControlInputMux::`scalar deleting destructor'
  00000		 |$LN6@scalar@10|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37344|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlInputMux@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@10|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@10|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37345|

			 ENDP  ; |??_GMixerControlInputMux@@UAAPAXI@Z|, MixerControlInputMux::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37354| DCD	|$LN5@MixerContr@21|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlInputMux@@UAA@XZ| PROC	; MixerControlInputMux::~MixerControlInputMux
  00000		 |$LN5@MixerContr@21|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37351|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1MixerControlSingleMultiSelect@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37352|

			 ENDP  ; |??1MixerControlInputMux@@UAA@XZ|, MixerControlInputMux::~MixerControlInputMux

	EXPORT	|??1MixerControlList@@UAA@XZ|		; MixerControlList::~MixerControlList

  00000			 AREA	 |.pdata|, PDATA
|$T37362| DCD	|$LN6@scalar@11|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlList@@UAAPAXI@Z| PROC	; MixerControlList::`scalar deleting destructor'
  00000		 |$LN6@scalar@11|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37359|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1MixerControlList@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@11|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@11|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37360|

			 ENDP  ; |??_GMixerControlList@@UAAPAXI@Z|, MixerControlList::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37369| DCD	|$LN5@MixerContr@22|
	DCD	0x40001b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlList@@UAA@XZ| PROC	; MixerControlList::~MixerControlList

; 728  :     {

  00000		 |$LN5@MixerContr@22|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37366|
  0000c	e59f2054	 ldr         r2, [pc, #0x54]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e5832000	 str         r2, [r3]

; 729  :     }

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2830030	 add         r0, r3, #0x30
  00020	eb000000	 bl          |??1MixerControlMicBoost@@UAA@XZ|
  00024	e59d3008	 ldr         r3, [sp, #8]
  00028	e2830024	 add         r0, r3, #0x24
  0002c	eb000000	 bl          |??1MixerControlInputMux@@UAA@XZ|
  00030	e59d3008	 ldr         r3, [sp, #8]
  00034	e283001c	 add         r0, r3, #0x1C
  00038	eb000000	 bl          |??1MixerControlInputMute@@UAA@XZ|
  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e2830014	 add         r0, r3, #0x14
  00044	eb000000	 bl          |??1MixerControlVolumeInput@@UAA@XZ|
  00048	e59d3008	 ldr         r3, [sp, #8]
  0004c	e283000c	 add         r0, r3, #0xC
  00050	eb000000	 bl          |??1MixerControlMuteMaster@@UAA@XZ|
  00054	e59d3008	 ldr         r3, [sp, #8]
  00058	e2830004	 add         r0, r3, #4
  0005c	eb000000	 bl          |??1MixerControlVolumeMaster@@UAA@XZ|
  00060	e89d6000	 ldmia       sp, {sp, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN6@MixerContr@22|
  00068		 |$LN7@MixerContr@22|
  00068	00000000	 DCD         |??_7MixerControlList@@6B@|
  0006c		 |$M37367|

			 ENDP  ; |??1MixerControlList@@UAA@XZ|, MixerControlList::~MixerControlList

	EXPORT	|??_C@_1EM@DBPFHEAH@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAi?$AAx?$AAe?$AAr?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@MEFIDC@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAD?$AAE?$AAT?$AAA?$AAI?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@CEKCBIBD@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAD?$AAE?$AAT?$AAA?$AAI?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@OJFEDBFL@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAL?$AAI?$AAN?$AAE?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@CLPEJCBP@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAL?$AAI?$AAN?$AAE?$AAI?$AAN?$AAF?$AAO?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@DOLEBCGM@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@FCEHOKDK@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@NFMKBKIL@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAD?$AAE?$AAV?$AAC?$AAA?$AAP?$AAS?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@HLFFBCHG@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAN?$AAU?$AAM?$AAD?$AAE?$AAV?$AAS?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HandleMixerMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; HandleMixerMessage
	IMPORT	|__C_specific_handler|

  00058			 AREA	 |.pdata|, PDATA
|$T37408| DCD	|$LN44@HandleMixe|
	DCD	0xc000de05
|$T37410| DCD	|$LN34@HandleMixe|
	DCD	0x40000d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@DBPFHEAH@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAi?$AAx?$AAe?$AAr?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa@| DCB "["
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "]"
	DCB	0x0, " ", 0x0, """", 0x0, "U", 0x0, "n", 0x0, "s", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "m", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, """", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@MEFIDC@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAD?$AAE?$AAT?$AAA?$AAI?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R"
	DCB	0x0, "O", 0x0, "L", 0x0, "D", 0x0, "E", 0x0, "T", 0x0, "A"
	DCB	0x0, "I", 0x0, "L", 0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@CEKCBIBD@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAD?$AAE?$AAT?$AAA?$AAI?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R"
	DCB	0x0, "O", 0x0, "L", 0x0, "D", 0x0, "E", 0x0, "T", 0x0, "A"
	DCB	0x0, "I", 0x0, "L", 0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OJFEDBFL@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAL?$AAI?$AAN?$AAE?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "E", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L"
	DCB	0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@CLPEJCBP@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAL?$AAI?$AAN?$AAE?$AAI?$AAN?$AAF?$AAO?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "E", 0x0, "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@DOLEBCGM@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "C", 0x0, "L"
	DCB	0x0, "O", 0x0, "S", 0x0, "E", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@FCEHOKDK@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "O", 0x0, "P"
	DCB	0x0, "E", 0x0, "N", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NFMKBKIL@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAD?$AAE?$AAV?$AAC?$AAA?$AAP?$AAS?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "C", 0x0, "A"
	DCB	0x0, "P", 0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@HLFFBCHG@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAN?$AAU?$AAM?$AAD?$AAE?$AAV?$AAS?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "N", 0x0, "U", 0x0, "M", 0x0, "D", 0x0, "E"
	DCB	0x0, "V", 0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T37406| DCD	0x1
	DCD	|$LN38@HandleMixe|
	DCD	|$LN39@HandleMixe|
	DCD	|$LN34@HandleMixe|
	DCD	|$LN35@HandleMixe|
; Function compile flags: /Odtp

  01ad0			 AREA	 |.text|, CODE, ARM

  01ad0	00000000	 DCD         |__C_specific_handler|
  01ad4	00000000	 DCD         |$T37406|

  01ad8		 |?HandleMixerMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| PROC ; HandleMixerMessage

; 1148 : {

  01ad8		 |$LN44@HandleMixe|
  01ad8	e1a0c00d	 mov         r12, sp
  01adc	e92d0003	 stmdb       sp!, {r0, r1}
  01ae0	e92d5800	 stmdb       sp!, {r11, r12, lr}
  01ae4	e28db00c	 add         r11, sp, #0xC
  01ae8	e24dd04c	 sub         sp, sp, #0x4C
  01aec		 |$LN42@HandleMixe|
  01aec		 |$LN38@HandleMixe|

; 1149 :     MMRESULT dwRet;
; 1150 : 
; 1151 :     _try
; 1152 :     {
; 1153 :         switch (pParams->uMsg)

  01aec	e59b3000	 ldr         r3, [r11]
  01af0	e2833004	 add         r3, r3, #4
  01af4	e5933000	 ldr         r3, [r3]
  01af8	e50b3050	 str         r3, [r11, #-0x50]
  01afc	e51b3050	 ldr         r3, [r11, #-0x50]
  01b00	e2433001	 sub         r3, r3, #1
  01b04	e50b3050	 str         r3, [r11, #-0x50]
  01b08	e51b3050	 ldr         r3, [r11, #-0x50]
  01b0c	e3530007	 cmp         r3, #7
  01b10	8a0000b4	 bhi         |$LN1@HandleMixe|
  01b14	e51b2050	 ldr         r2, [r11, #-0x50]
  01b18	e1a03102	 mov         r3, r2, lsl #2
  01b1c	e083300f	 add         r3, r3, pc
  01b20	e5933004	 ldr         r3, [r3, #4]
  01b24	e08ff003	 add         pc, pc, r3
  01b28		 |$LN47@HandleMixe|
  01b28		 |$LN46@HandleMixe|
  01b28		 |$LN48@HandleMixe|
  01b28	0000001c	 DCD         0x1c
  01b2c		 |$LN49@HandleMixe|
  01b2c	00000054	 DCD         0x54
  01b30		 |$LN50@HandleMixe|
  01b30	000000ac	 DCD         0xac
  01b34		 |$LN51@HandleMixe|
  01b34	00000110	 DCD         0x110
  01b38		 |$LN52@HandleMixe|
  01b38	0000015c	 DCD         0x15c
  01b3c		 |$LN53@HandleMixe|
  01b3c	000001b4	 DCD         0x1b4
  01b40		 |$LN54@HandleMixe|
  01b40	0000020c	 DCD         0x20c
  01b44		 |$LN55@HandleMixe|
  01b44	00000264	 DCD         0x264
  01b48		 |$LN9@HandleMixe|

; 1154 :         {
; 1155 :         case MXDM_GETNUMDEVS:
; 1156 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETNUMDEVS\r\n")));

  01b48	e59f3310	 ldr         r3, [pc, #0x310]
  01b4c	e5933440	 ldr         r3, [r3, #0x440]
  01b50	e3130010	 tst         r3, #0x10
  01b54	0a000004	 beq         |$LN15@HandleMixe|
  01b58	e59f0320	 ldr         r0, [pc, #0x320]
  01b5c	eb000000	 bl          NKDbgPrintfW
  01b60	e3a03001	 mov         r3, #1
  01b64	e50b304c	 str         r3, [r11, #-0x4C]
  01b68	ea000001	 b           |$LN16@HandleMixe|
  01b6c		 |$LN15@HandleMixe|
  01b6c	e3a03000	 mov         r3, #0
  01b70	e50b304c	 str         r3, [r11, #-0x4C]
  01b74		 |$LN16@HandleMixe|

; 1157 :             dwRet = 1;

  01b74	e3a03001	 mov         r3, #1
  01b78	e50b3058	 str         r3, [r11, #-0x58]

; 1158 :             break;

  01b7c	ea0000a6	 b           |$LN10@HandleMixe|
  01b80		 |$LN8@HandleMixe|

; 1159 : 
; 1160 :         case MXDM_GETDEVCAPS:
; 1161 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETDEVCAPS\r\n")));

  01b80	e59f32d8	 ldr         r3, [pc, #0x2D8]
  01b84	e5933440	 ldr         r3, [r3, #0x440]
  01b88	e3130010	 tst         r3, #0x10
  01b8c	0a000004	 beq         |$LN17@HandleMixe|
  01b90	e59f02e4	 ldr         r0, [pc, #0x2E4]
  01b94	eb000000	 bl          NKDbgPrintfW
  01b98	e3a03001	 mov         r3, #1
  01b9c	e50b3048	 str         r3, [r11, #-0x48]
  01ba0	ea000001	 b           |$LN18@HandleMixe|
  01ba4		 |$LN17@HandleMixe|
  01ba4	e3a03000	 mov         r3, #0
  01ba8	e50b3048	 str         r3, [r11, #-0x48]
  01bac		 |$LN18@HandleMixe|

; 1162 :             dwRet = wdev_MXDM_GETDEVCAPS((PMIXERCAPS) pParams->dwParam1, pParams->dwParam2);

  01bac	e59b3000	 ldr         r3, [r11]
  01bb0	e2833010	 add         r3, r3, #0x10
  01bb4	e5931000	 ldr         r1, [r3]
  01bb8	e59b3000	 ldr         r3, [r11]
  01bbc	e283300c	 add         r3, r3, #0xC
  01bc0	e5930000	 ldr         r0, [r3]
  01bc4	eb000000	 bl          |?wdev_MXDM_GETDEVCAPS@@YAKPAUtagMIXERCAPS@@K@Z|
  01bc8	e50b0044	 str         r0, [r11, #-0x44]
  01bcc	e51b3044	 ldr         r3, [r11, #-0x44]
  01bd0	e50b3058	 str         r3, [r11, #-0x58]

; 1163 :             break;

  01bd4	ea000090	 b           |$LN10@HandleMixe|
  01bd8		 |$LN7@HandleMixe|

; 1164 : 
; 1165 :         case MXDM_OPEN:
; 1166 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_OPEN\r\n")));

  01bd8	e59f3280	 ldr         r3, [pc, #0x280]
  01bdc	e5933440	 ldr         r3, [r3, #0x440]
  01be0	e3130010	 tst         r3, #0x10
  01be4	0a000004	 beq         |$LN19@HandleMixe|
  01be8	e59f0288	 ldr         r0, [pc, #0x288]
  01bec	eb000000	 bl          NKDbgPrintfW
  01bf0	e3a03001	 mov         r3, #1
  01bf4	e50b3040	 str         r3, [r11, #-0x40]
  01bf8	ea000001	 b           |$LN20@HandleMixe|
  01bfc		 |$LN19@HandleMixe|
  01bfc	e3a03000	 mov         r3, #0
  01c00	e50b3040	 str         r3, [r11, #-0x40]
  01c04		 |$LN20@HandleMixe|

; 1167 :             dwRet = wdev_MXDM_OPEN((PDWORD) pParams->dwUser, (PMIXEROPENDESC) pParams->dwParam1, pParams->dwParam2);

  01c04	e59b3000	 ldr         r3, [r11]
  01c08	e2833010	 add         r3, r3, #0x10
  01c0c	e5932000	 ldr         r2, [r3]
  01c10	e59b3000	 ldr         r3, [r11]
  01c14	e283300c	 add         r3, r3, #0xC
  01c18	e5931000	 ldr         r1, [r3]
  01c1c	e59b3000	 ldr         r3, [r11]
  01c20	e2833008	 add         r3, r3, #8
  01c24	e5930000	 ldr         r0, [r3]
  01c28	eb000000	 bl          |?wdev_MXDM_OPEN@@YAKPAKPAUtMIXEROPENDESC@@K@Z|
  01c2c	e50b003c	 str         r0, [r11, #-0x3C]
  01c30	e51b303c	 ldr         r3, [r11, #-0x3C]
  01c34	e50b3058	 str         r3, [r11, #-0x58]

; 1168 :             break;

  01c38	ea000077	 b           |$LN10@HandleMixe|
  01c3c		 |$LN6@HandleMixe|

; 1169 : 
; 1170 :         case MXDM_CLOSE:
; 1171 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_CLOSE\r\n")));

  01c3c	e59f321c	 ldr         r3, [pc, #0x21C]
  01c40	e5933440	 ldr         r3, [r3, #0x440]
  01c44	e3130010	 tst         r3, #0x10
  01c48	0a000004	 beq         |$LN21@HandleMixe|
  01c4c	e59f0220	 ldr         r0, [pc, #0x220]
  01c50	eb000000	 bl          NKDbgPrintfW
  01c54	e3a03001	 mov         r3, #1
  01c58	e50b3038	 str         r3, [r11, #-0x38]
  01c5c	ea000001	 b           |$LN22@HandleMixe|
  01c60		 |$LN21@HandleMixe|
  01c60	e3a03000	 mov         r3, #0
  01c64	e50b3038	 str         r3, [r11, #-0x38]
  01c68		 |$LN22@HandleMixe|

; 1172 :             dwRet = wdev_MXDM_CLOSE(pParams->dwUser);

  01c68	e59b3000	 ldr         r3, [r11]
  01c6c	e2833008	 add         r3, r3, #8
  01c70	e5930000	 ldr         r0, [r3]
  01c74	eb000000	 bl          |?wdev_MXDM_CLOSE@@YAKK@Z|
  01c78	e50b0034	 str         r0, [r11, #-0x34]
  01c7c	e51b3034	 ldr         r3, [r11, #-0x34]
  01c80	e50b3058	 str         r3, [r11, #-0x58]

; 1173 :             break;

  01c84	ea000064	 b           |$LN10@HandleMixe|
  01c88		 |$LN5@HandleMixe|

; 1174 : 
; 1175 :         case MXDM_GETLINEINFO:
; 1176 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETLINEINFO\r\n")));

  01c88	e59f31d0	 ldr         r3, [pc, #0x1D0]
  01c8c	e5933440	 ldr         r3, [r3, #0x440]
  01c90	e3130010	 tst         r3, #0x10
  01c94	0a000004	 beq         |$LN23@HandleMixe|
  01c98	e59f01d0	 ldr         r0, [pc, #0x1D0]
  01c9c	eb000000	 bl          NKDbgPrintfW
  01ca0	e3a03001	 mov         r3, #1
  01ca4	e50b3030	 str         r3, [r11, #-0x30]
  01ca8	ea000001	 b           |$LN24@HandleMixe|
  01cac		 |$LN23@HandleMixe|
  01cac	e3a03000	 mov         r3, #0
  01cb0	e50b3030	 str         r3, [r11, #-0x30]
  01cb4		 |$LN24@HandleMixe|

; 1177 :             dwRet = wdev_MXDM_GETLINEINFO((PMIXERLINE) pParams->dwParam1, pParams->dwParam2);

  01cb4	e59b3000	 ldr         r3, [r11]
  01cb8	e2833010	 add         r3, r3, #0x10
  01cbc	e5931000	 ldr         r1, [r3]
  01cc0	e59b3000	 ldr         r3, [r11]
  01cc4	e283300c	 add         r3, r3, #0xC
  01cc8	e5930000	 ldr         r0, [r3]
  01ccc	eb000000	 bl          |?wdev_MXDM_GETLINEINFO@@YAKPAUtMIXERLINE@@K@Z|
  01cd0	e50b002c	 str         r0, [r11, #-0x2C]
  01cd4	e51b302c	 ldr         r3, [r11, #-0x2C]
  01cd8	e50b3058	 str         r3, [r11, #-0x58]

; 1178 :             break;

  01cdc	ea00004e	 b           |$LN10@HandleMixe|
  01ce0		 |$LN4@HandleMixe|

; 1179 : 
; 1180 :         case MXDM_GETLINECONTROLS:
; 1181 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETLINECONTROLS\r\n")));

  01ce0	e59f3178	 ldr         r3, [pc, #0x178]
  01ce4	e5933440	 ldr         r3, [r3, #0x440]
  01ce8	e3130010	 tst         r3, #0x10
  01cec	0a000004	 beq         |$LN25@HandleMixe|
  01cf0	e59f0174	 ldr         r0, [pc, #0x174]
  01cf4	eb000000	 bl          NKDbgPrintfW
  01cf8	e3a03001	 mov         r3, #1
  01cfc	e50b3028	 str         r3, [r11, #-0x28]
  01d00	ea000001	 b           |$LN26@HandleMixe|
  01d04		 |$LN25@HandleMixe|
  01d04	e3a03000	 mov         r3, #0
  01d08	e50b3028	 str         r3, [r11, #-0x28]
  01d0c		 |$LN26@HandleMixe|

; 1182 :             dwRet = wdev_MXDM_GETLINECONTROLS((PMIXERLINECONTROLS) pParams->dwParam1, pParams->dwParam2);

  01d0c	e59b3000	 ldr         r3, [r11]
  01d10	e2833010	 add         r3, r3, #0x10
  01d14	e5931000	 ldr         r1, [r3]
  01d18	e59b3000	 ldr         r3, [r11]
  01d1c	e283300c	 add         r3, r3, #0xC
  01d20	e5930000	 ldr         r0, [r3]
  01d24	eb000000	 bl          |?wdev_MXDM_GETLINECONTROLS@@YAKPAUtMIXERLINECONTROLS@@K@Z|
  01d28	e50b0024	 str         r0, [r11, #-0x24]
  01d2c	e51b3024	 ldr         r3, [r11, #-0x24]
  01d30	e50b3058	 str         r3, [r11, #-0x58]

; 1183 :             break;

  01d34	ea000038	 b           |$LN10@HandleMixe|
  01d38		 |$LN3@HandleMixe|

; 1184 : 
; 1185 :         case MXDM_GETCONTROLDETAILS:
; 1186 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETCONTROLDETAILS\r\n")));

  01d38	e59f3120	 ldr         r3, [pc, #0x120]
  01d3c	e5933440	 ldr         r3, [r3, #0x440]
  01d40	e3130010	 tst         r3, #0x10
  01d44	0a000004	 beq         |$LN27@HandleMixe|
  01d48	e59f0118	 ldr         r0, [pc, #0x118]
  01d4c	eb000000	 bl          NKDbgPrintfW
  01d50	e3a03001	 mov         r3, #1
  01d54	e50b3020	 str         r3, [r11, #-0x20]
  01d58	ea000001	 b           |$LN28@HandleMixe|
  01d5c		 |$LN27@HandleMixe|
  01d5c	e3a03000	 mov         r3, #0
  01d60	e50b3020	 str         r3, [r11, #-0x20]
  01d64		 |$LN28@HandleMixe|

; 1187 :             dwRet = wdev_MXDM_GETCONTROLDETAILS((PMIXERCONTROLDETAILS) pParams->dwParam1, pParams->dwParam2);

  01d64	e59b3000	 ldr         r3, [r11]
  01d68	e2833010	 add         r3, r3, #0x10
  01d6c	e5931000	 ldr         r1, [r3]
  01d70	e59b3000	 ldr         r3, [r11]
  01d74	e283300c	 add         r3, r3, #0xC
  01d78	e5930000	 ldr         r0, [r3]
  01d7c	eb000000	 bl          |?wdev_MXDM_GETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z|
  01d80	e50b001c	 str         r0, [r11, #-0x1C]
  01d84	e51b301c	 ldr         r3, [r11, #-0x1C]
  01d88	e50b3058	 str         r3, [r11, #-0x58]

; 1188 :             break;

  01d8c	ea000022	 b           |$LN10@HandleMixe|
  01d90		 |$LN2@HandleMixe|

; 1189 : 
; 1190 :         case MXDM_SETCONTROLDETAILS:
; 1191 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_SETCONTROLDETAILS\r\n")));

  01d90	e59f30c8	 ldr         r3, [pc, #0xC8]
  01d94	e5933440	 ldr         r3, [r3, #0x440]
  01d98	e3130010	 tst         r3, #0x10
  01d9c	0a000004	 beq         |$LN29@HandleMixe|
  01da0	e59f00bc	 ldr         r0, [pc, #0xBC]
  01da4	eb000000	 bl          NKDbgPrintfW
  01da8	e3a03001	 mov         r3, #1
  01dac	e50b3018	 str         r3, [r11, #-0x18]
  01db0	ea000001	 b           |$LN30@HandleMixe|
  01db4		 |$LN29@HandleMixe|
  01db4	e3a03000	 mov         r3, #0
  01db8	e50b3018	 str         r3, [r11, #-0x18]
  01dbc		 |$LN30@HandleMixe|

; 1192 :             dwRet = wdev_MXDM_SETCONTROLDETAILS((PMIXERCONTROLDETAILS) pParams->dwParam1, pParams->dwParam2);

  01dbc	e59b3000	 ldr         r3, [r11]
  01dc0	e2833010	 add         r3, r3, #0x10
  01dc4	e5931000	 ldr         r1, [r3]
  01dc8	e59b3000	 ldr         r3, [r11]
  01dcc	e283300c	 add         r3, r3, #0xC
  01dd0	e5930000	 ldr         r0, [r3]
  01dd4	eb000000	 bl          |?wdev_MXDM_SETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z|
  01dd8	e50b0014	 str         r0, [r11, #-0x14]
  01ddc	e51b3014	 ldr         r3, [r11, #-0x14]
  01de0	e50b3058	 str         r3, [r11, #-0x58]

; 1193 :             break;

  01de4	ea00000c	 b           |$LN10@HandleMixe|
  01de8		 |$LN1@HandleMixe|

; 1194 : 
; 1195 :         default:
; 1196 :             ERRMSG("Unsupported mixer message");

  01de8	e59f3070	 ldr         r3, [pc, #0x70]
  01dec	e5933440	 ldr         r3, [r3, #0x440]
  01df0	e3130902	 tst         r3, #2, 18
  01df4	0a000004	 beq         |$LN31@HandleMixe|
  01df8	e59f005c	 ldr         r0, [pc, #0x5C]
  01dfc	eb000000	 bl          NKDbgPrintfW
  01e00	e3a03001	 mov         r3, #1
  01e04	e50b3010	 str         r3, [r11, #-0x10]
  01e08	ea000001	 b           |$LN32@HandleMixe|
  01e0c		 |$LN31@HandleMixe|
  01e0c	e3a03000	 mov         r3, #0
  01e10	e50b3010	 str         r3, [r11, #-0x10]
  01e14		 |$LN32@HandleMixe|

; 1197 :             dwRet = MMSYSERR_NOTSUPPORTED;

  01e14	e3a03008	 mov         r3, #8
  01e18	e50b3058	 str         r3, [r11, #-0x58]
  01e1c		 |$LN10@HandleMixe|
  01e1c		 |$LN39@HandleMixe|

; 1198 :             break;
; 1199 :         }      // switch (pParams->uMsg)
; 1200 :     }

  01e1c	ea000002	 b           |$LN40@HandleMixe|
  01e20		 |$LN35@HandleMixe|

; 1202 :     {
; 1203 :         dwRet  = MMSYSERR_INVALPARAM;

  01e20	e3a0300b	 mov         r3, #0xB
  01e24	e50b3058	 str         r3, [r11, #-0x58]
  01e28	eaffffff	 b           |$LN40@HandleMixe|
  01e2c		 |$LN40@HandleMixe|

; 1204 :     }
; 1205 : 
; 1206 :     *pdwResult = dwRet;

  01e2c	e51b2058	 ldr         r2, [r11, #-0x58]
  01e30	e59b3004	 ldr         r3, [r11, #4]
  01e34	e5832000	 str         r2, [r3]

; 1207 :     return TRUE;

  01e38	e3a03001	 mov         r3, #1
  01e3c	e50b3054	 str         r3, [r11, #-0x54]
  01e40		 |$LN33@HandleMixe|

; 1208 : }

  01e40	e51b0054	 ldr         r0, [r11, #-0x54]
  01e44	e24bd00c	 sub         sp, r11, #0xC
  01e48	e89d6800	 ldmia       sp, {r11, sp, lr}
  01e4c	e12fff1e	 bx          lr

			 ENDP  ; |?HandleMixerMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|, HandleMixerMessage

  01e50		 |$LN34@HandleMixe|
  01e50		 |$LN43@HandleMixe|

; 1201 :     _except (EXCEPTION_EXECUTE_HANDLER)

  01e50	e52de004	 str         lr, [sp, #-4]!
  01e54		 |$LN37@HandleMixe|
  01e54		 |$LN56@HandleMixe|
  01e54	e3a00001	 mov         r0, #1
  01e58		 |$LN36@HandleMixe|
  01e58	e49df004	 ldr         pc, [sp], #4
  01e5c		 |$LN58@HandleMixe|
  01e5c		 |$LN59@HandleMixe|
  01e5c	00000000	 DCD         |??_C@_1EM@DBPFHEAH@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAi?$AAx?$AAe?$AAr?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa@|
  01e60		 |$LN60@HandleMixe|
  01e60	00000000	 DCD         |dpCurSettings|
  01e64		 |$LN61@HandleMixe|
  01e64	00000000	 DCD         |??_C@_1DC@MEFIDC@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAD?$AAE?$AAT?$AAA?$AAI?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@|
  01e68		 |$LN62@HandleMixe|
  01e68	00000000	 DCD         |??_C@_1DC@CEKCBIBD@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAD?$AAE?$AAT?$AAA?$AAI?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@|
  01e6c		 |$LN63@HandleMixe|
  01e6c	00000000	 DCD         |??_C@_1CO@OJFEDBFL@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAL?$AAI?$AAN?$AAE?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AAS?$AA?$AN?$AA?6?$AA?$AA@|
  01e70		 |$LN64@HandleMixe|
  01e70	00000000	 DCD         |??_C@_1CG@CLPEJCBP@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAL?$AAI?$AAN?$AAE?$AAI?$AAN?$AAF?$AAO?$AA?$AN?$AA?6?$AA?$AA@|
  01e74		 |$LN65@HandleMixe|
  01e74	00000000	 DCD         |??_C@_1BK@DOLEBCGM@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?$AN?$AA?6?$AA?$AA@|
  01e78		 |$LN66@HandleMixe|
  01e78	00000000	 DCD         |??_C@_1BI@FCEHOKDK@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@|
  01e7c		 |$LN67@HandleMixe|
  01e7c	00000000	 DCD         |??_C@_1CE@NFMKBKIL@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAD?$AAE?$AAV?$AAC?$AAA?$AAP?$AAS?$AA?$AN?$AA?6?$AA?$AA@|
  01e80		 |$LN68@HandleMixe|
  01e80	00000000	 DCD         |??_C@_1CE@HLFFBCHG@?$AAM?$AAX?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAN?$AAU?$AAM?$AAD?$AAE?$AAV?$AAS?$AA?$AN?$AA?6?$AA?$AA@|
  01e84		 |$LN57@HandleMixe|
  01e84		 |$LN45@HandleMixe|
	EXPORT	|?SetMasterVolume@@YAIK@Z|		; SetMasterVolume

  00068			 AREA	 |.pdata|, PDATA
|$T37439| DCD	|$LN5@SetMasterV|
	DCD	0x40002004
; Function compile flags: /Odtp

  01e84			 AREA	 |.text|, CODE, ARM

  01e84		 |?SetMasterVolume@@YAIK@Z| PROC	; SetMasterVolume

; 1212 : {

  01e84		 |$LN5@SetMasterV|
  01e84	e1a0c00d	 mov         r12, sp
  01e88	e92d0001	 stmdb       sp!, {r0}
  01e8c	e92d5000	 stmdb       sp!, {r12, lr}
  01e90	e24dd008	 sub         sp, sp, #8
  01e94		 |$M37436|

; 1213 :     g_pMixerControlList->m_MixerControlVolumeMaster.SetGain(dwVolume);

  01e94	e59d1010	 ldr         r1, [sp, #0x10]
  01e98	e59f3060	 ldr         r3, [pc, #0x60]
  01e9c	e5933000	 ldr         r3, [r3]
  01ea0	e2832004	 add         r2, r3, #4
  01ea4	e59f3054	 ldr         r3, [pc, #0x54]
  01ea8	e5933000	 ldr         r3, [r3]
  01eac	e2830004	 add         r0, r3, #4
  01eb0	e5923000	 ldr         r3, [r2]
  01eb4	e283301c	 add         r3, r3, #0x1C
  01eb8	e5933000	 ldr         r3, [r3]
  01ebc	e1a0e00f	 mov         lr, pc
  01ec0	e12fff13	 bx          r3

; 1214 :     PerformMixerCallbacks (MM_MIXM_CONTROL_CHANGE, g_pMixerControlList->m_MixerControlVolumeMaster.GetControlID());

  01ec4	e59f3034	 ldr         r3, [pc, #0x34]
  01ec8	e5933000	 ldr         r3, [r3]
  01ecc	e2830004	 add         r0, r3, #4
  01ed0	eb000000	 bl          |?GetControlID@MixerControl@@QAAKXZ|
  01ed4	e58d0004	 str         r0, [sp, #4]
  01ed8	e59d1004	 ldr         r1, [sp, #4]
  01edc	e3a00c03	 mov         r0, #3, 24
  01ee0	e38000d1	 orr         r0, r0, #0xD1
  01ee4	eb000000	 bl          |?PerformMixerCallbacks@@YAXKK@Z|

; 1215 :     return MMSYSERR_NOERROR;

  01ee8	e3a03000	 mov         r3, #0
  01eec	e58d3000	 str         r3, [sp]

; 1216 : }

  01ef0	e59d0000	 ldr         r0, [sp]
  01ef4	e28dd008	 add         sp, sp, #8
  01ef8	e89d6000	 ldmia       sp, {sp, lr}
  01efc	e12fff1e	 bx          lr
  01f00		 |$LN6@SetMasterV|
  01f00		 |$LN7@SetMasterV|
  01f00	00000000	 DCD         |g_pMixerControlList|
  01f04		 |$M37437|

			 ENDP  ; |?SetMasterVolume@@YAIK@Z|, SetMasterVolume

	EXPORT	|?GetMasterVolume@@YAKXZ|		; GetMasterVolume

  00070			 AREA	 |.pdata|, PDATA
|$T37447| DCD	|$LN5@GetMasterV|
	DCD	0x40001502
; Function compile flags: /Odtp

  01f04			 AREA	 |.text|, CODE, ARM

  01f04		 |?GetMasterVolume@@YAKXZ| PROC		; GetMasterVolume

; 1219 : {

  01f04		 |$LN5@GetMasterV|
  01f04	e52de004	 str         lr, [sp, #-4]!
  01f08	e24dd008	 sub         sp, sp, #8
  01f0c		 |$M37444|

; 1220 :     return g_pMixerControlList->m_MixerControlVolumeMaster.GetGain();

  01f0c	e59f3040	 ldr         r3, [pc, #0x40]
  01f10	e5933000	 ldr         r3, [r3]
  01f14	e2832004	 add         r2, r3, #4
  01f18	e59f3034	 ldr         r3, [pc, #0x34]
  01f1c	e5933000	 ldr         r3, [r3]
  01f20	e2830004	 add         r0, r3, #4
  01f24	e5923000	 ldr         r3, [r2]
  01f28	e2833020	 add         r3, r3, #0x20
  01f2c	e5933000	 ldr         r3, [r3]
  01f30	e1a0e00f	 mov         lr, pc
  01f34	e12fff13	 bx          r3
  01f38	e58d0004	 str         r0, [sp, #4]
  01f3c	e59d3004	 ldr         r3, [sp, #4]
  01f40	e58d3000	 str         r3, [sp]

; 1221 : }

  01f44	e59d0000	 ldr         r0, [sp]
  01f48	e28dd008	 add         sp, sp, #8
  01f4c	e49de004	 ldr         lr, [sp], #4
  01f50	e12fff1e	 bx          lr
  01f54		 |$LN6@GetMasterV|
  01f54		 |$LN7@GetMasterV|
  01f54	00000000	 DCD         |g_pMixerControlList|
  01f58		 |$M37445|

			 ENDP  ; |?GetMasterVolume@@YAKXZ|, GetMasterVolume

	END
