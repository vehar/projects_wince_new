; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\VRFB\omap_vrfb.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1CG@HPFELENL@?$AAN?$AAu?$AAm?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|DEVICE_IFC_VRFB_GUID| [ DATA ]
	EXPORT	|dpCurSettings| [ DATA ]
	EXPORT	|g_VrfbContextList| [ DATA ]

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@HPFELENL@?$AAN?$AAu?$AAm?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAs?$AA?$AA@| DCB "N"
	DCB	0x0, "u", 0x0, "m", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, "s", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, 0x0, 0x0
	%	54
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCD	0xf
	%	4
|g_VrfbContextList| DCD 0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x70000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x74000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x78000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x7c000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xe0000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xe4000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xe8000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xec000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xf0000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xf4000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xf8000000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0xfc000000
	DCD	0x0
	DCD	0x0
	DCD	0x0

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|DEVICE_IFC_VRFB_GUID| DCD 0xede6bb10
	DCW	0xd844
	DCW	0x4639
	DCB	0xa7
	DCB	0xb6
	DCB	0xca
	DCB	0x19
	DCB	0x9c
	DCB	0xd9
	DCB	0xeb
	DCB	0x34
|s_deviceRegParams| DCD |??_C@_1CG@HPFELENL@?$AAN?$AAu?$AAm?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAs?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x4
	DCD	0x4
	DCD	0xc
	EXPORT	|??_C@_1CK@OAIFICAF@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|VRF_Deinit|
	EXPORT	|??_C@_1GO@NJIADAEN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AAv?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@LGCBLAKK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAC?$AAe?$AAS?$AAe?$AAt?$AAM?$AAe?$AAm@| [ DATA ] ; `string'
	EXPORT	|CeSetMemoryAttributes|
	EXPORT	|??_C@_1IM@JBFPCDPK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAd?$AAi?$AAs?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@CDMGGAKM@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@CKGMCPAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@KPMENOCN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAV?$AAR?$AAF?$AAB@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@PLACKFIN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAV@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@PDKAJFLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAV?$AAR?$AAF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@FKHLDHJD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@NJPKPLHM@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|VRF_Init|
	IMPORT	|VirtualCopy|
	IMPORT	|VirtualAlloc|
	IMPORT	|MmMapIoSpace|
	IMPORT	|GetAddressByDevice|
	IMPORT	|EnableDeviceClocks|
	IMPORT	|SOCGetVRFBDevice|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|memset|
	IMPORT	|LocalAlloc|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T45800| DCD	|$LN40@VRF_Init|
	DCD	0x40017904
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\vrfb\omap_vrfb.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@OAIFICAF@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@NJIADAEN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AAv?$AAa@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "V"
	DCB	0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "#"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "v"
	DCB	0x0, "a", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@LGCBLAKK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAC?$AAe?$AAS?$AAe?$AAt?$AAM?$AAe?$AAm@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "C"
	DCB	0x0, "e", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, "A", 0x0, "t"
	DCB	0x0, "t", 0x0, "r", 0x0, "i", 0x0, "b", 0x0, "u", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, " ", 0x0, "#", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@JBFPCDPK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAd?$AAi?$AAs?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s"
	DCB	0x0, "p", 0x0, "l", 0x0, "a", 0x0, "y", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x"
	DCB	0x0, "t", 0x0, " ", 0x0, "#", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@CDMGGAKM@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "V"
	DCB	0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "e", 0x0, "r", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "d", 0x0, "i", 0x0, "s", 0x0, "p", 0x0, "l", 0x0, "a"
	DCB	0x0, "y", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "n"
	DCB	0x0, "u", 0x0, "m", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, "s", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@CKGMCPAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "v", 0x0, "e"
	DCB	0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "p", 0x0, "l"
	DCB	0x0, "a", 0x0, "y", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@KPMENOCN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAV?$AAR?$AAF?$AAB@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "V", 0x0, "R", 0x0, "F"
	DCB	0x0, "B", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@PLACKFIN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAV@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@PDKAJFLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAV?$AAR?$AAF@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "V", 0x0, "R"
	DCB	0x0, "F", 0x0, "B", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@FKHLDHJD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "r", 0x0, "u", 0x0, "c", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@NJPKPLHM@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |VRF_Init| PROC

; 209  : {

  00000		 |$LN40@VRF_Init|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd06c	 sub         sp, sp, #0x6C
  00010		 |$M45797|

; 210  :     DWORD rc = (DWORD)NULL;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 211  :     PHYSICAL_ADDRESS pa;    
; 212  :     Device_t *pDevice;
; 213  :     DWORD i;
; 214  : 
; 215  :     UNREFERENCED_PARAMETER(pBusContext);
; 216  : 
; 217  :     DEBUGMSG(ZONE_FUNCTION, (
; 218  :         L"+VRF_Init(%s, 0x%08x)\r\n", szContext, pBusContext
; 219  :         ));

  00018	e59f358c	 ldr         r3, [pc, #0x58C]
  0001c	e5933440	 ldr         r3, [r3, #0x440]
  00020	e3130004	 tst         r3, #4
  00024	0a000006	 beq         |$LN16@VRF_Init|
  00028	e59d2080	 ldr         r2, [sp, #0x80]
  0002c	e59d107c	 ldr         r1, [sp, #0x7C]
  00030	e59f05a8	 ldr         r0, [pc, #0x5A8]
  00034	eb000000	 bl          NKDbgPrintfW
  00038	e3a03001	 mov         r3, #1
  0003c	e58d3020	 str         r3, [sp, #0x20]
  00040	ea000001	 b           |$LN17@VRF_Init|
  00044		 |$LN16@VRF_Init|
  00044	e3a03000	 mov         r3, #0
  00048	e58d3020	 str         r3, [sp, #0x20]
  0004c		 |$LN17@VRF_Init|

; 220  : 
; 221  :     // Create device structure
; 222  :     pDevice = (Device_t *)LocalAlloc(LPTR, sizeof(Device_t));

  0004c	e3a0102c	 mov         r1, #0x2C
  00050	e3a00040	 mov         r0, #0x40
  00054	eb000000	 bl          LocalAlloc
  00058	e58d0024	 str         r0, [sp, #0x24]
  0005c	e59d3024	 ldr         r3, [sp, #0x24]
  00060	e58d3000	 str         r3, [sp]

; 223  :     if (pDevice == NULL)

  00064	e59d3000	 ldr         r3, [sp]
  00068	e3530000	 cmp         r3, #0
  0006c	1a00000b	 bne         |$LN13@VRF_Init|

; 224  :         {
; 225  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_Init: "
; 226  :             L"Failed allocate VRFB controller structure\r\n"
; 227  :             ));

  00070	e59f3534	 ldr         r3, [pc, #0x534]
  00074	e5933440	 ldr         r3, [r3, #0x440]
  00078	e3130001	 tst         r3, #1
  0007c	0a000004	 beq         |$LN18@VRF_Init|
  00080	e59f0554	 ldr         r0, [pc, #0x554]
  00084	eb000000	 bl          NKDbgPrintfW
  00088	e3a03001	 mov         r3, #1
  0008c	e58d3028	 str         r3, [sp, #0x28]
  00090	ea000001	 b           |$LN19@VRF_Init|
  00094		 |$LN18@VRF_Init|
  00094	e3a03000	 mov         r3, #0
  00098	e58d3028	 str         r3, [sp, #0x28]
  0009c		 |$LN19@VRF_Init|

; 228  :         goto cleanUp;

  0009c	ea00012a	 b           |$cleanUp$45010|
  000a0		 |$LN13@VRF_Init|

; 229  :         }
; 230  : 
; 231  :     // initialize memory
; 232  :     memset(pDevice, 0, sizeof(Device_t));

  000a0	e3a0202c	 mov         r2, #0x2C
  000a4	e3a01000	 mov         r1, #0
  000a8	e59d0000	 ldr         r0, [sp]
  000ac	eb000000	 bl          memset

; 233  : 
; 234  :     // Set cookie
; 235  :     pDevice->cookie = VRFB_DEVICE_COOKIE;

  000b0	e59d2000	 ldr         r2, [sp]
  000b4	e59f351c	 ldr         r3, [pc, #0x51C]
  000b8	e5823000	 str         r3, [r2]

; 236  : 
; 237  :     // Initalize critical section
; 238  :     InitializeCriticalSection(&pDevice->cs);

  000bc	e59d3000	 ldr         r3, [sp]
  000c0	e2830008	 add         r0, r3, #8
  000c4	eb000000	 bl          InitializeCriticalSection

; 239  : 
; 240  :     // Read device parameters
; 241  :     if (GetDeviceRegistryParams(
; 242  :             szContext, pDevice, dimof(s_deviceRegParams), s_deviceRegParams
; 243  :             ) != ERROR_SUCCESS)

  000c8	e59f3504	 ldr         r3, [pc, #0x504]
  000cc	e3a02001	 mov         r2, #1
  000d0	e59d1000	 ldr         r1, [sp]
  000d4	e59d007c	 ldr         r0, [sp, #0x7C]
  000d8	eb000000	 bl          GetDeviceRegistryParams
  000dc	e58d002c	 str         r0, [sp, #0x2C]
  000e0	e59d302c	 ldr         r3, [sp, #0x2C]
  000e4	e3530000	 cmp         r3, #0
  000e8	0a00000b	 beq         |$LN12@VRF_Init|

; 244  :         {
; 245  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_Init: "
; 246  :             L"Failed read VRFB driver registry parameters\r\n"
; 247  :             ));

  000ec	e59f34b8	 ldr         r3, [pc, #0x4B8]
  000f0	e5933440	 ldr         r3, [r3, #0x440]
  000f4	e3130001	 tst         r3, #1
  000f8	0a000004	 beq         |$LN20@VRF_Init|
  000fc	e59f04cc	 ldr         r0, [pc, #0x4CC]
  00100	eb000000	 bl          NKDbgPrintfW
  00104	e3a03001	 mov         r3, #1
  00108	e58d3030	 str         r3, [sp, #0x30]
  0010c	ea000001	 b           |$LN21@VRF_Init|
  00110		 |$LN20@VRF_Init|
  00110	e3a03000	 mov         r3, #0
  00114	e58d3030	 str         r3, [sp, #0x30]
  00118		 |$LN21@VRF_Init|

; 248  :         goto cleanUp;

  00118	ea00010b	 b           |$cleanUp$45010|
  0011c		 |$LN12@VRF_Init|

; 249  :         }
; 250  :     
; 251  :     pDevice->device = SOCGetVRFBDevice();

  0011c	eb000000	 bl          SOCGetVRFBDevice
  00120	e58d0034	 str         r0, [sp, #0x34]
  00124	e59d3000	 ldr         r3, [sp]
  00128	e2832020	 add         r2, r3, #0x20
  0012c	e59d3034	 ldr         r3, [sp, #0x34]
  00130	e5823000	 str         r3, [r2]

; 252  :     if (pDevice->device == OMAP_DEVICE_NONE)

  00134	e59d3000	 ldr         r3, [sp]
  00138	e2833020	 add         r3, r3, #0x20
  0013c	e5933000	 ldr         r3, [r3]
  00140	e3730001	 cmn         r3, #1
  00144	1a00000b	 bne         |$LN11@VRF_Init|

; 253  :     {
; 254  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_Init: "
; 255  :             L"Failed to get VRFB device\r\n"
; 256  :             ));

  00148	e59f345c	 ldr         r3, [pc, #0x45C]
  0014c	e5933440	 ldr         r3, [r3, #0x440]
  00150	e3130001	 tst         r3, #1
  00154	0a000004	 beq         |$LN22@VRF_Init|
  00158	e59f046c	 ldr         r0, [pc, #0x46C]
  0015c	eb000000	 bl          NKDbgPrintfW
  00160	e3a03001	 mov         r3, #1
  00164	e58d3038	 str         r3, [sp, #0x38]
  00168	ea000001	 b           |$LN23@VRF_Init|
  0016c		 |$LN22@VRF_Init|
  0016c	e3a03000	 mov         r3, #0
  00170	e58d3038	 str         r3, [sp, #0x38]
  00174		 |$LN23@VRF_Init|

; 257  :         goto cleanUp;

  00174	ea0000f4	 b           |$cleanUp$45010|
  00178		 |$LN11@VRF_Init|

; 258  :     }
; 259  :     
; 260  :     // Set hardware to full power (VRFB has no power states)
; 261  :     EnableDeviceClocks(pDevice->device,TRUE);

  00178	e3a01001	 mov         r1, #1
  0017c	e59d3000	 ldr         r3, [sp]
  00180	e2833020	 add         r3, r3, #0x20
  00184	e5930000	 ldr         r0, [r3]
  00188	eb000000	 bl          EnableDeviceClocks

; 262  : 
; 263  :     
; 264  :     //  Map VRFB control registers
; 265  :     pa.QuadPart = GetAddressByDevice(pDevice->device);    

  0018c	e59d3000	 ldr         r3, [sp]
  00190	e2833020	 add         r3, r3, #0x20
  00194	e5930000	 ldr         r0, [r3]
  00198	eb000000	 bl          GetAddressByDevice
  0019c	e58d003c	 str         r0, [sp, #0x3C]
  001a0	e59d303c	 ldr         r3, [sp, #0x3C]
  001a4	e58d300c	 str         r3, [sp, #0xC]
  001a8	e3a03000	 mov         r3, #0
  001ac	e58d3010	 str         r3, [sp, #0x10]

; 266  :     pDevice->pVRFBRegs = (OMAP_VRFB_REGS*)MmMapIoSpace(pa, sizeof(OMAP_VRFB_REGS), FALSE);

  001b0	e3a03000	 mov         r3, #0
  001b4	e3a020dc	 mov         r2, #0xDC
  001b8	e59d000c	 ldr         r0, [sp, #0xC]
  001bc	e59d1010	 ldr         r1, [sp, #0x10]
  001c0	eb000000	 bl          MmMapIoSpace
  001c4	e58d0040	 str         r0, [sp, #0x40]
  001c8	e59d3000	 ldr         r3, [sp]
  001cc	e2832024	 add         r2, r3, #0x24
  001d0	e59d3040	 ldr         r3, [sp, #0x40]
  001d4	e5823000	 str         r3, [r2]

; 267  :     if (pDevice->pVRFBRegs == NULL)

  001d8	e59d3000	 ldr         r3, [sp]
  001dc	e2833024	 add         r3, r3, #0x24
  001e0	e5933000	 ldr         r3, [r3]
  001e4	e3530000	 cmp         r3, #0
  001e8	1a00000b	 bne         |$LN10@VRF_Init|

; 268  :         {
; 269  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_Init: "
; 270  :              L"Failed map VRFB control registers\r\n"
; 271  :             ));

  001ec	e59f33b8	 ldr         r3, [pc, #0x3B8]
  001f0	e5933440	 ldr         r3, [r3, #0x440]
  001f4	e3130001	 tst         r3, #1
  001f8	0a000004	 beq         |$LN24@VRF_Init|
  001fc	e59f03c4	 ldr         r0, [pc, #0x3C4]
  00200	eb000000	 bl          NKDbgPrintfW
  00204	e3a03001	 mov         r3, #1
  00208	e58d3044	 str         r3, [sp, #0x44]
  0020c	ea000001	 b           |$LN25@VRF_Init|
  00210		 |$LN24@VRF_Init|
  00210	e3a03000	 mov         r3, #0
  00214	e58d3044	 str         r3, [sp, #0x44]
  00218		 |$LN25@VRF_Init|

; 272  :         goto cleanUp;

  00218	ea0000cb	 b           |$cleanUp$45010|
  0021c		 |$LN10@VRF_Init|

; 273  :         }
; 274  : 
; 275  :     //  Validate the number of contexts reserved for display
; 276  :     if( pDevice->dwNumDisplayContexts > VRFB_ROTATION_CONTEXTS )

  0021c	e59d3000	 ldr         r3, [sp]
  00220	e2833004	 add         r3, r3, #4
  00224	e5933000	 ldr         r3, [r3]
  00228	e353000c	 cmp         r3, #0xC
  0022c	9a000003	 bls         |$LN9@VRF_Init|

; 277  :         pDevice->dwNumDisplayContexts = VRFB_ROTATION_CONTEXTS;

  00230	e59d3000	 ldr         r3, [sp]
  00234	e2832004	 add         r2, r3, #4
  00238	e3a0300c	 mov         r3, #0xC
  0023c	e5823000	 str         r3, [r2]
  00240		 |$LN9@VRF_Init|

; 278  :         
; 279  :     //  Reserve the contiguous vitual memory region for the display contexts
; 280  :     if( pDevice->dwNumDisplayContexts > 0 )

  00240	e59d3000	 ldr         r3, [sp]
  00244	e2833004	 add         r3, r3, #4
  00248	e5933000	 ldr         r3, [r3]
  0024c	e3530000	 cmp         r3, #0
  00250	9a0000bb	 bls         |$LN8@VRF_Init|

; 281  :     {
; 282  :         //  Reserve virtual memory for the display driver views
; 283  :         //  Note that this memory is not allocated, but is required by DDraw to be contiguous
; 284  :         pDevice->pDisplayContextMem = VirtualAlloc( NULL, 
; 285  :                                                     pDevice->dwNumDisplayContexts * VRFB_VIEW_SIZE, 
; 286  :                                                     MEM_RESERVE, 
; 287  :                                                     PAGE_NOACCESS );

  00254	e3a03001	 mov         r3, #1
  00258	e3a02a02	 mov         r2, #2, 20
  0025c	e59d1000	 ldr         r1, [sp]
  00260	e2811004	 add         r1, r1, #4
  00264	e5910000	 ldr         r0, [r1]
  00268	e3a01401	 mov         r1, #1, 8
  0026c	e0010190	 mul         r1, r0, r1
  00270	e3a00000	 mov         r0, #0
  00274	eb000000	 bl          VirtualAlloc
  00278	e58d0048	 str         r0, [sp, #0x48]
  0027c	e59d3000	 ldr         r3, [sp]
  00280	e2832028	 add         r2, r3, #0x28
  00284	e59d3048	 ldr         r3, [sp, #0x48]
  00288	e5823000	 str         r3, [r2]

; 288  :                                                     
; 289  :         if( pDevice->pDisplayContextMem == NULL )

  0028c	e59d3000	 ldr         r3, [sp]
  00290	e2833028	 add         r3, r3, #0x28
  00294	e5933000	 ldr         r3, [r3]
  00298	e3530000	 cmp         r3, #0
  0029c	1a00000b	 bne         |$LN7@VRF_Init|

; 290  :             {
; 291  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_Init: "
; 292  :                  L"Failed reserve display context memory\r\n"
; 293  :                 ));

  002a0	e59f3304	 ldr         r3, [pc, #0x304]
  002a4	e5933440	 ldr         r3, [r3, #0x440]
  002a8	e3130001	 tst         r3, #1
  002ac	0a000004	 beq         |$LN26@VRF_Init|
  002b0	e59f030c	 ldr         r0, [pc, #0x30C]
  002b4	eb000000	 bl          NKDbgPrintfW
  002b8	e3a03001	 mov         r3, #1
  002bc	e58d304c	 str         r3, [sp, #0x4C]
  002c0	ea000001	 b           |$LN27@VRF_Init|
  002c4		 |$LN26@VRF_Init|
  002c4	e3a03000	 mov         r3, #0
  002c8	e58d304c	 str         r3, [sp, #0x4C]
  002cc		 |$LN27@VRF_Init|

; 294  :             goto cleanUp;

  002cc	ea00009e	 b           |$cleanUp$45010|
  002d0		 |$LN7@VRF_Init|

; 295  :             }
; 296  : 
; 297  :         DEBUGMSG(ZONE_INFO, (L"INFO: VRF_Init: "
; 298  :              L"Reserved display memory - num contexts = %d, size = 0x%08X, va = 0x%08X\r\n", 
; 299  :              pDevice->dwNumDisplayContexts, pDevice->dwNumDisplayContexts * VRFB_VIEW_SIZE, pDevice->pDisplayContextMem
; 300  :             ));

  002d0	e59f32d4	 ldr         r3, [pc, #0x2D4]
  002d4	e5933440	 ldr         r3, [r3, #0x440]
  002d8	e3130008	 tst         r3, #8
  002dc	0a00000f	 beq         |$LN28@VRF_Init|
  002e0	e59d3000	 ldr         r3, [sp]
  002e4	e2833028	 add         r3, r3, #0x28
  002e8	e5933000	 ldr         r3, [r3]
  002ec	e59d2000	 ldr         r2, [sp]
  002f0	e2822004	 add         r2, r2, #4
  002f4	e5921000	 ldr         r1, [r2]
  002f8	e3a02401	 mov         r2, #1, 8
  002fc	e0020291	 mul         r2, r1, r2
  00300	e59d1000	 ldr         r1, [sp]
  00304	e2811004	 add         r1, r1, #4
  00308	e5911000	 ldr         r1, [r1]
  0030c	e59f02ac	 ldr         r0, [pc, #0x2AC]
  00310	eb000000	 bl          NKDbgPrintfW
  00314	e3a03001	 mov         r3, #1
  00318	e58d3050	 str         r3, [sp, #0x50]
  0031c	ea000001	 b           |$LN29@VRF_Init|
  00320		 |$LN28@VRF_Init|
  00320	e3a03000	 mov         r3, #0
  00324	e58d3050	 str         r3, [sp, #0x50]
  00328		 |$LN29@VRF_Init|

; 301  :         
; 302  :         
; 303  :         //  Associate the VRFB context addresses with the context virtual memory
; 304  :         for( i = 0; i < pDevice->dwNumDisplayContexts; i++ )

  00328	e3a03000	 mov         r3, #0
  0032c	e58d3008	 str         r3, [sp, #8]
  00330	ea000002	 b           |$LN6@VRF_Init|
  00334		 |$LN5@VRF_Init|
  00334	e59d3008	 ldr         r3, [sp, #8]
  00338	e2833001	 add         r3, r3, #1
  0033c	e58d3008	 str         r3, [sp, #8]
  00340		 |$LN6@VRF_Init|
  00340	e59d3000	 ldr         r3, [sp]
  00344	e2833004	 add         r3, r3, #4
  00348	e59d2008	 ldr         r2, [sp, #8]
  0034c	e5933000	 ldr         r3, [r3]
  00350	e1520003	 cmp         r2, r3
  00354	2a00007a	 bcs         |$LN4@VRF_Init|

; 305  :         {
; 306  :             BOOL    bResult;
; 307  :             VOID*   pMem = (VOID*)((DWORD)pDevice->pDisplayContextMem + i*VRFB_VIEW_SIZE);

  00358	e59d3000	 ldr         r3, [sp]
  0035c	e2830028	 add         r0, r3, #0x28
  00360	e59d1008	 ldr         r1, [sp, #8]
  00364	e3a03401	 mov         r3, #1, 8
  00368	e0020391	 mul         r2, r1, r3
  0036c	e5903000	 ldr         r3, [r0]
  00370	e0833002	 add         r3, r3, r2
  00374	e58d3014	 str         r3, [sp, #0x14]

; 308  :             
; 309  :             //  Associate to the rotation angle 0 context by default
; 310  :             bResult = VirtualCopy( pMem, 
; 311  :                                    (VOID*)(g_VrfbContextList[i].dwPhysicalAddr/256), 
; 312  :                                    VRFB_VIEW_SIZE, 
; 313  :                                    PAGE_READWRITE | PAGE_PHYSICAL | PAGE_NOCACHE );

  00378	e3a05c06	 mov         r5, #6, 24
  0037c	e3855004	 orr         r5, r5, #4
  00380	e3a04401	 mov         r4, #1, 8
  00384	e59d1008	 ldr         r1, [sp, #8]
  00388	e3a03020	 mov         r3, #0x20
  0038c	e0020391	 mul         r2, r1, r3
  00390	e59f3218	 ldr         r3, [pc, #0x218]
  00394	e0833002	 add         r3, r3, r2
  00398	e2833010	 add         r3, r3, #0x10
  0039c	e5931000	 ldr         r1, [r3]
  003a0	e3a00c01	 mov         r0, #1, 24
  003a4	eb000000	 bl          __rt_udiv
  003a8	e1a01000	 mov         r1, r0
  003ac	e59d0014	 ldr         r0, [sp, #0x14]
  003b0	e1a02004	 mov         r2, r4
  003b4	e1a03005	 mov         r3, r5
  003b8	eb000000	 bl          VirtualCopy
  003bc	e58d0054	 str         r0, [sp, #0x54]
  003c0	e59d3054	 ldr         r3, [sp, #0x54]
  003c4	e58d3018	 str         r3, [sp, #0x18]

; 314  : 
; 315  :             if( bResult == FALSE )

  003c8	e59d3018	 ldr         r3, [sp, #0x18]
  003cc	e3530000	 cmp         r3, #0
  003d0	1a00000c	 bne         |$LN3@VRF_Init|

; 316  :             {
; 317  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_Init: "
; 318  :                      L"Failed map display context memory for context # %d\r\n", i
; 319  :                     ));

  003d4	e59f31d0	 ldr         r3, [pc, #0x1D0]
  003d8	e5933440	 ldr         r3, [r3, #0x440]
  003dc	e3130001	 tst         r3, #1
  003e0	0a000005	 beq         |$LN30@VRF_Init|
  003e4	e59d1008	 ldr         r1, [sp, #8]
  003e8	e59f01cc	 ldr         r0, [pc, #0x1CC]
  003ec	eb000000	 bl          NKDbgPrintfW
  003f0	e3a03001	 mov         r3, #1
  003f4	e58d3058	 str         r3, [sp, #0x58]
  003f8	ea000001	 b           |$LN31@VRF_Init|
  003fc		 |$LN30@VRF_Init|
  003fc	e3a03000	 mov         r3, #0
  00400	e58d3058	 str         r3, [sp, #0x58]
  00404		 |$LN31@VRF_Init|

; 320  :                 goto cleanUp;

  00404	ea000050	 b           |$cleanUp$45010|
  00408		 |$LN3@VRF_Init|

; 321  :             }
; 322  : 
; 323  :             //  Change the attributes of the buffer for cache write thru
; 324  :             bResult = CeSetMemoryAttributes( pMem, (VOID*)(g_VrfbContextList[i].dwPhysicalAddr/256), VRFB_VIEW_SIZE, PAGE_WRITECOMBINE );

  00408	e3a05b01	 mov         r5, #1, 22
  0040c	e3a04401	 mov         r4, #1, 8
  00410	e59d1008	 ldr         r1, [sp, #8]
  00414	e3a03020	 mov         r3, #0x20
  00418	e0020391	 mul         r2, r1, r3
  0041c	e59f318c	 ldr         r3, [pc, #0x18C]
  00420	e0833002	 add         r3, r3, r2
  00424	e2833010	 add         r3, r3, #0x10
  00428	e5931000	 ldr         r1, [r3]
  0042c	e3a00c01	 mov         r0, #1, 24
  00430	eb000000	 bl          __rt_udiv
  00434	e1a01000	 mov         r1, r0
  00438	e59d0014	 ldr         r0, [sp, #0x14]
  0043c	e1a02004	 mov         r2, r4
  00440	e1a03005	 mov         r3, r5
  00444	eb000000	 bl          CeSetMemoryAttributes
  00448	e58d005c	 str         r0, [sp, #0x5C]
  0044c	e59d305c	 ldr         r3, [sp, #0x5C]
  00450	e58d3018	 str         r3, [sp, #0x18]

; 325  :             if( bResult == FALSE )

  00454	e59d3018	 ldr         r3, [sp, #0x18]
  00458	e3530000	 cmp         r3, #0
  0045c	1a00000c	 bne         |$LN2@VRF_Init|

; 326  :             {
; 327  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_Init: "
; 328  :                      L"Failed CeSetMemoryAttributes for context # %d\r\n", i
; 329  :                     ));

  00460	e59f3144	 ldr         r3, [pc, #0x144]
  00464	e5933440	 ldr         r3, [r3, #0x440]
  00468	e3130001	 tst         r3, #1
  0046c	0a000005	 beq         |$LN32@VRF_Init|
  00470	e59d1008	 ldr         r1, [sp, #8]
  00474	e59f013c	 ldr         r0, [pc, #0x13C]
  00478	eb000000	 bl          NKDbgPrintfW
  0047c	e3a03001	 mov         r3, #1
  00480	e58d3060	 str         r3, [sp, #0x60]
  00484	ea000001	 b           |$LN33@VRF_Init|
  00488		 |$LN32@VRF_Init|
  00488	e3a03000	 mov         r3, #0
  0048c	e58d3060	 str         r3, [sp, #0x60]
  00490		 |$LN33@VRF_Init|

; 330  :                 goto cleanUp;

  00490	ea00002d	 b           |$cleanUp$45010|
  00494		 |$LN2@VRF_Init|

; 331  :             }
; 332  : 
; 333  :             DEBUGMSG(ZONE_INFO, (L"INFO: VRF_Init: "
; 334  :                  L"Context # %d: va = 0x%08X, pa = 0x%08X", 
; 335  :                  i, pMem, g_VrfbContextList[i].dwPhysicalAddr
; 336  :                 ));

  00494	e59f3110	 ldr         r3, [pc, #0x110]
  00498	e5933440	 ldr         r3, [r3, #0x440]
  0049c	e3130008	 tst         r3, #8
  004a0	0a00000d	 beq         |$LN34@VRF_Init|
  004a4	e59d1008	 ldr         r1, [sp, #8]
  004a8	e3a03020	 mov         r3, #0x20
  004ac	e0020391	 mul         r2, r1, r3
  004b0	e59f30f8	 ldr         r3, [pc, #0xF8]
  004b4	e0833002	 add         r3, r3, r2
  004b8	e2833010	 add         r3, r3, #0x10
  004bc	e5933000	 ldr         r3, [r3]
  004c0	e59d2014	 ldr         r2, [sp, #0x14]
  004c4	e59d1008	 ldr         r1, [sp, #8]
  004c8	e59f00e4	 ldr         r0, [pc, #0xE4]
  004cc	eb000000	 bl          NKDbgPrintfW
  004d0	e3a03001	 mov         r3, #1
  004d4	e58d3064	 str         r3, [sp, #0x64]
  004d8	ea000001	 b           |$LN35@VRF_Init|
  004dc		 |$LN34@VRF_Init|
  004dc	e3a03000	 mov         r3, #0
  004e0	e58d3064	 str         r3, [sp, #0x64]
  004e4		 |$LN35@VRF_Init|

; 337  :             
; 338  :             //  Update the context table
; 339  :             g_VrfbContextList[i].bInUse = TRUE;                                               

  004e4	e59d1008	 ldr         r1, [sp, #8]
  004e8	e3a03020	 mov         r3, #0x20
  004ec	e0020391	 mul         r2, r1, r3
  004f0	e59f30b8	 ldr         r3, [pc, #0xB8]
  004f4	e0832002	 add         r2, r3, r2
  004f8	e3a03001	 mov         r3, #1
  004fc	e5823000	 str         r3, [r2]

; 340  :             g_VrfbContextList[i].dwRotationAngle = VRFB_ROTATE_ANGLE_0;                                               

  00500	e59d1008	 ldr         r1, [sp, #8]
  00504	e3a03020	 mov         r3, #0x20
  00508	e0020391	 mul         r2, r1, r3
  0050c	e59f309c	 ldr         r3, [pc, #0x9C]
  00510	e0833002	 add         r3, r3, r2
  00514	e283200c	 add         r2, r3, #0xC
  00518	e3a03000	 mov         r3, #0
  0051c	e5823000	 str         r3, [r2]

; 341  :             g_VrfbContextList[i].dwVirtualAddr = (DWORD) pMem;

  00520	e59d1008	 ldr         r1, [sp, #8]
  00524	e3a03020	 mov         r3, #0x20
  00528	e0020391	 mul         r2, r1, r3
  0052c	e59f307c	 ldr         r3, [pc, #0x7C]
  00530	e0833002	 add         r3, r3, r2
  00534	e2832014	 add         r2, r3, #0x14
  00538	e59d3014	 ldr         r3, [sp, #0x14]
  0053c	e5823000	 str         r3, [r2]

; 342  :         }   

  00540	eaffff7b	 b           |$LN5@VRF_Init|
  00544		 |$LN4@VRF_Init|
  00544		 |$LN8@VRF_Init|

; 343  :         
; 344  :     }
; 345  : 
; 346  :     rc = (DWORD)pDevice;

  00544	e59d3000	 ldr         r3, [sp]
  00548	e58d3004	 str         r3, [sp, #4]
  0054c		 |$cleanUp$45010|

; 347  :     
; 348  : cleanUp:
; 349  :     if (rc == 0) VRF_Deinit((DWORD)pDevice);

  0054c	e59d3004	 ldr         r3, [sp, #4]
  00550	e3530000	 cmp         r3, #0
  00554	1a000001	 bne         |$LN1@VRF_Init|
  00558	e59d0000	 ldr         r0, [sp]
  0055c	eb000000	 bl          VRF_Deinit
  00560		 |$LN1@VRF_Init|

; 350  :     DEBUGMSG(ZONE_FUNCTION, (L"-VRF_Init(rc = %d)\r\n", rc));

  00560	e59f3044	 ldr         r3, [pc, #0x44]
  00564	e5933440	 ldr         r3, [r3, #0x440]
  00568	e3130004	 tst         r3, #4
  0056c	0a000005	 beq         |$LN36@VRF_Init|
  00570	e59d1004	 ldr         r1, [sp, #4]
  00574	e59f002c	 ldr         r0, [pc, #0x2C]
  00578	eb000000	 bl          NKDbgPrintfW
  0057c	e3a03001	 mov         r3, #1
  00580	e58d3068	 str         r3, [sp, #0x68]
  00584	ea000001	 b           |$LN37@VRF_Init|
  00588		 |$LN36@VRF_Init|
  00588	e3a03000	 mov         r3, #0
  0058c	e58d3068	 str         r3, [sp, #0x68]
  00590		 |$LN37@VRF_Init|

; 351  :     return rc;

  00590	e59d3004	 ldr         r3, [sp, #4]
  00594	e58d301c	 str         r3, [sp, #0x1C]

; 352  : }

  00598	e59d001c	 ldr         r0, [sp, #0x1C]
  0059c	e28dd06c	 add         sp, sp, #0x6C
  005a0	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  005a4	e12fff1e	 bx          lr
  005a8		 |$LN41@VRF_Init|
  005a8		 |$LN42@VRF_Init|
  005a8	00000000	 DCD         |??_C@_1CK@OAIFICAF@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  005ac		 |$LN43@VRF_Init|
  005ac	00000000	 DCD         |dpCurSettings|
  005b0		 |$LN44@VRF_Init|
  005b0	00000000	 DCD         |g_VrfbContextList|
  005b4		 |$LN45@VRF_Init|
  005b4	00000000	 DCD         |??_C@_1GO@NJIADAEN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AAv?$AAa@|
  005b8		 |$LN46@VRF_Init|
  005b8	00000000	 DCD         |??_C@_1IC@LGCBLAKK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAC?$AAe?$AAS?$AAe?$AAt?$AAM?$AAe?$AAm@|
  005bc		 |$LN47@VRF_Init|
  005bc	00000000	 DCD         |??_C@_1IM@JBFPCDPK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAd?$AAi?$AAs?$AAp@|
  005c0		 |$LN48@VRF_Init|
  005c0	00000000	 DCD         |??_C@_1LE@CDMGGAKM@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy@|
  005c4		 |$LN49@VRF_Init|
  005c4	00000000	 DCD         |??_C@_1HC@CKGMCPAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AA?5@|
  005c8		 |$LN50@VRF_Init|
  005c8	00000000	 DCD         |??_C@_1GK@KPMENOCN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAV?$AAR?$AAF?$AAB@|
  005cc		 |$LN51@VRF_Init|
  005cc	00000000	 DCD         |??_C@_1FK@PLACKFIN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAV@|
  005d0		 |$LN52@VRF_Init|
  005d0	00000000	 DCD         |??_C@_1HO@PDKAJFLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAV?$AAR?$AAF@|
  005d4		 |$LN53@VRF_Init|
  005d4	00000000	 DCD         |s_deviceRegParams|
  005d8		 |$LN54@VRF_Init|
  005d8	76726644	 DCD         0x76726644
  005dc		 |$LN55@VRF_Init|
  005dc	00000000	 DCD         |??_C@_1HK@FKHLDHJD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@|
  005e0		 |$LN56@VRF_Init|
  005e0	00000000	 DCD         |??_C@_1DA@NJPKPLHM@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  005e4		 |$M45798|

			 ENDP  ; |VRF_Init|

	IMPORT	|KernelLibIoControl|
; File c:\wince600\public\common\oak\inc\pkfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T45825| DCD	|$LN5@CeSetMemor|
	DCD	0x40001604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CeSetMemoryAttributes| PROC

; 1422 : {

  00000		 |$LN5@CeSetMemor|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd020	 sub         sp, sp, #0x20
  00010		 |$M45822|

; 1423 :     return KernelLibIoControl ((HANDLE) KMOD_CORE, IOCTL_KLIB_SETMEMORYATTR,
; 1424 :         pVirtualAddr, cbSize, pShiftedPhysAddr, dwAttributes, NULL);

  00010	e3a03000	 mov         r3, #0
  00014	e58d3008	 str         r3, [sp, #8]
  00018	e59d3034	 ldr         r3, [sp, #0x34]
  0001c	e58d3004	 str         r3, [sp, #4]
  00020	e59d302c	 ldr         r3, [sp, #0x2C]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d3030	 ldr         r3, [sp, #0x30]
  0002c	e59d2028	 ldr         r2, [sp, #0x28]
  00030	e3a0100c	 mov         r1, #0xC
  00034	e3a00001	 mov         r0, #1
  00038	eb000000	 bl          KernelLibIoControl
  0003c	e58d001c	 str         r0, [sp, #0x1C]
  00040	e59d301c	 ldr         r3, [sp, #0x1C]
  00044	e58d3018	 str         r3, [sp, #0x18]

; 1425 : }

  00048	e59d0018	 ldr         r0, [sp, #0x18]
  0004c	e28dd020	 add         sp, sp, #0x20
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M45823|

			 ENDP  ; |CeSetMemoryAttributes|

	EXPORT	|??_C@_1CO@HDFINBKM@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@LCCLFOPI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@CFLNHPPA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@GLBMEKCL@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LocalFree|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|VirtualFree|

  00008			 AREA	 |.pdata|, PDATA
|$T45841| DCD	|$LN18@VRF_Deinit|
	DCD	0x40007f04
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\vrfb\omap_vrfb.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@HDFINBKM@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@LCCLFOPI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAa@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "a", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "n", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@CFLNHPPA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@GLBMEKCL@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  005e4			 AREA	 |.text|, CODE, ARM

  005e4		 |VRF_Deinit| PROC

; 364  : {

  005e4		 |$LN18@VRF_Deinit|
  005e4	e1a0c00d	 mov         r12, sp
  005e8	e92d0001	 stmdb       sp!, {r0}
  005ec	e92d5000	 stmdb       sp!, {r12, lr}
  005f0	e24dd01c	 sub         sp, sp, #0x1C
  005f4		 |$M45838|

; 365  :     BOOL rc = FALSE;

  005f4	e3a03000	 mov         r3, #0
  005f8	e58d3004	 str         r3, [sp, #4]

; 366  :     Device_t *pDevice = (Device_t*)context;

  005fc	e59d3024	 ldr         r3, [sp, #0x24]
  00600	e58d3000	 str         r3, [sp]

; 367  : 
; 368  :     DEBUGMSG(ZONE_FUNCTION, (L"+VRF_Deinit(0x%08x)\r\n", context));

  00604	e59f31c0	 ldr         r3, [pc, #0x1C0]
  00608	e5933440	 ldr         r3, [r3, #0x440]
  0060c	e3130004	 tst         r3, #4
  00610	0a000005	 beq         |$LN8@VRF_Deinit|
  00614	e59d1024	 ldr         r1, [sp, #0x24]
  00618	e59f01bc	 ldr         r0, [pc, #0x1BC]
  0061c	eb000000	 bl          NKDbgPrintfW
  00620	e3a03001	 mov         r3, #1
  00624	e58d300c	 str         r3, [sp, #0xC]
  00628	ea000001	 b           |$LN9@VRF_Deinit|
  0062c		 |$LN8@VRF_Deinit|
  0062c	e3a03000	 mov         r3, #0
  00630	e58d300c	 str         r3, [sp, #0xC]
  00634		 |$LN9@VRF_Deinit|

; 369  : 
; 370  :     // Check if we get correct context
; 371  :     if ((pDevice == NULL) || (pDevice->cookie != VRFB_DEVICE_COOKIE))

  00634	e59d3000	 ldr         r3, [sp]
  00638	e3530000	 cmp         r3, #0
  0063c	0a000004	 beq         |$LN4@VRF_Deinit|
  00640	e59d3000	 ldr         r3, [sp]
  00644	e5932000	 ldr         r2, [r3]
  00648	e59f3188	 ldr         r3, [pc, #0x188]
  0064c	e1520003	 cmp         r2, r3
  00650	0a00000b	 beq         |$LN5@VRF_Deinit|
  00654		 |$LN4@VRF_Deinit|

; 372  :         {
; 373  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: VRF_Deinit: "
; 374  :             L"Incorrect context param\r\n"
; 375  :             ));

  00654	e59f3170	 ldr         r3, [pc, #0x170]
  00658	e5933440	 ldr         r3, [r3, #0x440]
  0065c	e3130001	 tst         r3, #1
  00660	0a000004	 beq         |$LN10@VRF_Deinit|
  00664	e59f0168	 ldr         r0, [pc, #0x168]
  00668	eb000000	 bl          NKDbgPrintfW
  0066c	e3a03001	 mov         r3, #1
  00670	e58d3010	 str         r3, [sp, #0x10]
  00674	ea000001	 b           |$LN11@VRF_Deinit|
  00678		 |$LN10@VRF_Deinit|
  00678	e3a03000	 mov         r3, #0
  0067c	e58d3010	 str         r3, [sp, #0x10]
  00680		 |$LN11@VRF_Deinit|

; 376  :         goto cleanUp;

  00680	ea00003e	 b           |$cleanUp$45075|
  00684		 |$LN5@VRF_Deinit|

; 377  :         }
; 378  : 
; 379  :     // Check for open instances
; 380  :     if (pDevice->instances > 0)

  00684	e59d3000	 ldr         r3, [sp]
  00688	e283301c	 add         r3, r3, #0x1C
  0068c	e5933000	 ldr         r3, [r3]
  00690	e3530000	 cmp         r3, #0
  00694	da00000e	 ble         |$LN3@VRF_Deinit|

; 381  :         {
; 382  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: VRF_Deinit: "
; 383  :             L"Deinit with active instance (%d instances active)\r\n",
; 384  :             pDevice->instances
; 385  :             ));

  00698	e59f312c	 ldr         r3, [pc, #0x12C]
  0069c	e5933440	 ldr         r3, [r3, #0x440]
  006a0	e3130001	 tst         r3, #1
  006a4	0a000007	 beq         |$LN12@VRF_Deinit|
  006a8	e59d3000	 ldr         r3, [sp]
  006ac	e283301c	 add         r3, r3, #0x1C
  006b0	e5931000	 ldr         r1, [r3]
  006b4	e59f0114	 ldr         r0, [pc, #0x114]
  006b8	eb000000	 bl          NKDbgPrintfW
  006bc	e3a03001	 mov         r3, #1
  006c0	e58d3014	 str         r3, [sp, #0x14]
  006c4	ea000001	 b           |$LN13@VRF_Deinit|
  006c8		 |$LN12@VRF_Deinit|
  006c8	e3a03000	 mov         r3, #0
  006cc	e58d3014	 str         r3, [sp, #0x14]
  006d0		 |$LN13@VRF_Deinit|

; 386  :         goto cleanUp;

  006d0	ea00002a	 b           |$cleanUp$45075|
  006d4		 |$LN3@VRF_Deinit|

; 387  :         }
; 388  :     
; 389  :     // Turn hardware off
; 390  :     EnableDeviceClocks(pDevice->device,FALSE);

  006d4	e3a01000	 mov         r1, #0
  006d8	e59d3000	 ldr         r3, [sp]
  006dc	e2833020	 add         r3, r3, #0x20
  006e0	e5930000	 ldr         r0, [r3]
  006e4	eb000000	 bl          EnableDeviceClocks

; 391  :     
; 392  :     //  Release the display context memory
; 393  :     if (pDevice->pDisplayContextMem != NULL) 

  006e8	e59d3000	 ldr         r3, [sp]
  006ec	e2833028	 add         r3, r3, #0x28
  006f0	e5933000	 ldr         r3, [r3]
  006f4	e3530000	 cmp         r3, #0
  006f8	0a00000f	 beq         |$LN2@VRF_Deinit|

; 394  :     {
; 395  :         VirtualFree( pDevice->pDisplayContextMem, VRFB_VIEW_SIZE*pDevice->dwNumDisplayContexts, MEM_DECOMMIT );

  006fc	e3a02901	 mov         r2, #1, 18
  00700	e59d3000	 ldr         r3, [sp]
  00704	e2833004	 add         r3, r3, #4
  00708	e5930000	 ldr         r0, [r3]
  0070c	e3a03401	 mov         r3, #1, 8
  00710	e0010390	 mul         r1, r0, r3
  00714	e59d3000	 ldr         r3, [sp]
  00718	e2833028	 add         r3, r3, #0x28
  0071c	e5930000	 ldr         r0, [r3]
  00720	eb000000	 bl          VirtualFree

; 396  :         VirtualFree( pDevice->pDisplayContextMem, 0, MEM_RELEASE );

  00724	e3a02902	 mov         r2, #2, 18
  00728	e3a01000	 mov         r1, #0
  0072c	e59d3000	 ldr         r3, [sp]
  00730	e2833028	 add         r3, r3, #0x28
  00734	e5930000	 ldr         r0, [r3]
  00738	eb000000	 bl          VirtualFree
  0073c		 |$LN2@VRF_Deinit|

; 397  :     }                    
; 398  : 
; 399  :     //  Unmap VRFB registers
; 400  :     if (pDevice->pVRFBRegs != NULL) 

  0073c	e59d3000	 ldr         r3, [sp]
  00740	e2833024	 add         r3, r3, #0x24
  00744	e5933000	 ldr         r3, [r3]
  00748	e3530000	 cmp         r3, #0
  0074c	0a000004	 beq         |$LN1@VRF_Deinit|

; 401  :     {
; 402  :         MmUnmapIoSpace((VOID*)pDevice->pVRFBRegs, sizeof(OMAP_VRFB_REGS));

  00750	e3a010dc	 mov         r1, #0xDC
  00754	e59d3000	 ldr         r3, [sp]
  00758	e2833024	 add         r3, r3, #0x24
  0075c	e5930000	 ldr         r0, [r3]
  00760	eb000000	 bl          MmUnmapIoSpace
  00764		 |$LN1@VRF_Deinit|

; 403  :     }                    
; 404  : 
; 405  : 
; 406  :     // Delete critical section
; 407  :     DeleteCriticalSection(&pDevice->cs);

  00764	e59d3000	 ldr         r3, [sp]
  00768	e2830008	 add         r0, r3, #8
  0076c	eb000000	 bl          DeleteCriticalSection

; 408  :  
; 409  :     // Free device structure
; 410  :     LocalFree(pDevice);

  00770	e59d0000	 ldr         r0, [sp]
  00774	eb000000	 bl          LocalFree

; 411  : 
; 412  :     // Done
; 413  :     rc = TRUE;

  00778	e3a03001	 mov         r3, #1
  0077c	e58d3004	 str         r3, [sp, #4]
  00780		 |$cleanUp$45075|

; 414  : 
; 415  : cleanUp:
; 416  :     DEBUGMSG(ZONE_FUNCTION, (L"-VRF_Deinit(rc = %d)\r\n", rc));

  00780	e59f3044	 ldr         r3, [pc, #0x44]
  00784	e5933440	 ldr         r3, [r3, #0x440]
  00788	e3130004	 tst         r3, #4
  0078c	0a000005	 beq         |$LN14@VRF_Deinit|
  00790	e59d1004	 ldr         r1, [sp, #4]
  00794	e59f002c	 ldr         r0, [pc, #0x2C]
  00798	eb000000	 bl          NKDbgPrintfW
  0079c	e3a03001	 mov         r3, #1
  007a0	e58d3018	 str         r3, [sp, #0x18]
  007a4	ea000001	 b           |$LN15@VRF_Deinit|
  007a8		 |$LN14@VRF_Deinit|
  007a8	e3a03000	 mov         r3, #0
  007ac	e58d3018	 str         r3, [sp, #0x18]
  007b0		 |$LN15@VRF_Deinit|

; 417  :     return rc;

  007b0	e59d3004	 ldr         r3, [sp, #4]
  007b4	e58d3008	 str         r3, [sp, #8]

; 418  : }

  007b8	e59d0008	 ldr         r0, [sp, #8]
  007bc	e28dd01c	 add         sp, sp, #0x1C
  007c0	e89d6000	 ldmia       sp, {sp, lr}
  007c4	e12fff1e	 bx          lr
  007c8		 |$LN19@VRF_Deinit|
  007c8		 |$LN20@VRF_Deinit|
  007c8	00000000	 DCD         |??_C@_1CO@HDFINBKM@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  007cc		 |$LN21@VRF_Deinit|
  007cc	00000000	 DCD         |dpCurSettings|
  007d0		 |$LN22@VRF_Deinit|
  007d0	00000000	 DCD         |??_C@_1IO@LCCLFOPI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAa@|
  007d4		 |$LN23@VRF_Deinit|
  007d4	00000000	 DCD         |??_C@_1FK@CFLNHPPA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@|
  007d8		 |$LN24@VRF_Deinit|
  007d8	76726644	 DCD         0x76726644
  007dc		 |$LN25@VRF_Deinit|
  007dc	00000000	 DCD         |??_C@_1CM@GLBMEKCL@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  007e0		 |$M45839|

			 ENDP  ; |VRF_Deinit|

	EXPORT	|??_C@_1DC@EMBFFMJG@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@DGLHHEL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@KBLIHDKC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@LPALFEEO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@CMLJIHEI@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| [ DATA ] ; `string'
	EXPORT	|VRF_Open|
	IMPORT	|InterlockedIncrement|

  00010			 AREA	 |.pdata|, PDATA
|$T45864| DCD	|$LN18@VRF_Open|
	DCD	0x40007e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@EMBFFMJG@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@DGLHHEL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "V", 0x0, "R"
	DCB	0x0, "F", 0x0, "B", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "o"
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, "_", 0x0, "v", 0x0, "r"
	DCB	0x0, "f", 0x0, "b", 0x0, ".", 0x0, "c", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@KBLIHDKC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "n"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "u", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@LPALFEEO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@CMLJIHEI@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  007e0			 AREA	 |.text|, CODE, ARM

  007e0		 |VRF_Open| PROC

; 432  : {

  007e0		 |$LN18@VRF_Open|
  007e0	e1a0c00d	 mov         r12, sp
  007e4	e92d0007	 stmdb       sp!, {r0 - r2}
  007e8	e92d5000	 stmdb       sp!, {r12, lr}
  007ec	e24dd028	 sub         sp, sp, #0x28
  007f0		 |$M45861|

; 433  :     DWORD rc = (DWORD)NULL;

  007f0	e3a03000	 mov         r3, #0
  007f4	e58d3004	 str         r3, [sp, #4]

; 434  :     Device_t *pDevice = (Device_t*)context;

  007f8	e59d3030	 ldr         r3, [sp, #0x30]
  007fc	e58d3000	 str         r3, [sp]

; 435  :     Instance_t *pInstance = NULL;

  00800	e3a03000	 mov         r3, #0
  00804	e58d3008	 str         r3, [sp, #8]

; 436  : 
; 437  :     UNREFERENCED_PARAMETER(accessCode);
; 438  :     UNREFERENCED_PARAMETER(shareMode);
; 439  : 
; 440  :     DEBUGMSG(ZONE_FUNCTION, (
; 441  :         L"+VRF_Open(0x%08x, 0x%08x, 0x%08x\r\n", context, accessCode, shareMode
; 442  :         ));

  00808	e59f31a4	 ldr         r3, [pc, #0x1A4]
  0080c	e5933440	 ldr         r3, [r3, #0x440]
  00810	e3130004	 tst         r3, #4
  00814	0a000007	 beq         |$LN6@VRF_Open|
  00818	e59d3038	 ldr         r3, [sp, #0x38]
  0081c	e59d2034	 ldr         r2, [sp, #0x34]
  00820	e59d1030	 ldr         r1, [sp, #0x30]
  00824	e59f01a8	 ldr         r0, [pc, #0x1A8]
  00828	eb000000	 bl          NKDbgPrintfW
  0082c	e3a03001	 mov         r3, #1
  00830	e58d3010	 str         r3, [sp, #0x10]
  00834	ea000001	 b           |$LN7@VRF_Open|
  00838		 |$LN6@VRF_Open|
  00838	e3a03000	 mov         r3, #0
  0083c	e58d3010	 str         r3, [sp, #0x10]
  00840		 |$LN7@VRF_Open|

; 443  : 
; 444  :     // Check if we get correct context
; 445  :     if ((pDevice == NULL) || (pDevice->cookie != VRFB_DEVICE_COOKIE))

  00840	e59d3000	 ldr         r3, [sp]
  00844	e3530000	 cmp         r3, #0
  00848	0a000004	 beq         |$LN2@VRF_Open|
  0084c	e59d3000	 ldr         r3, [sp]
  00850	e5932000	 ldr         r2, [r3]
  00854	e59f3174	 ldr         r3, [pc, #0x174]
  00858	e1520003	 cmp         r2, r3
  0085c	0a00000b	 beq         |$LN3@VRF_Open|
  00860		 |$LN2@VRF_Open|

; 446  :         {
; 447  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: VRF_Open: "
; 448  :             L"Incorrect context parameter\r\n"
; 449  :             ));

  00860	e59f314c	 ldr         r3, [pc, #0x14C]
  00864	e5933440	 ldr         r3, [r3, #0x440]
  00868	e3130001	 tst         r3, #1
  0086c	0a000004	 beq         |$LN8@VRF_Open|
  00870	e59f0154	 ldr         r0, [pc, #0x154]
  00874	eb000000	 bl          NKDbgPrintfW
  00878	e3a03001	 mov         r3, #1
  0087c	e58d3014	 str         r3, [sp, #0x14]
  00880	ea000001	 b           |$LN9@VRF_Open|
  00884		 |$LN8@VRF_Open|
  00884	e3a03000	 mov         r3, #0
  00888	e58d3014	 str         r3, [sp, #0x14]
  0088c		 |$LN9@VRF_Open|

; 450  :         goto cleanUp;

  0088c	ea000035	 b           |$cleanUp$45110|
  00890		 |$LN3@VRF_Open|

; 451  :         }
; 452  : 
; 453  :     // Create device structure
; 454  :     pInstance = (Instance_t*)LocalAlloc(LPTR, sizeof(Instance_t));

  00890	e3a01008	 mov         r1, #8
  00894	e3a00040	 mov         r0, #0x40
  00898	eb000000	 bl          LocalAlloc
  0089c	e58d0018	 str         r0, [sp, #0x18]
  008a0	e59d3018	 ldr         r3, [sp, #0x18]
  008a4	e58d3008	 str         r3, [sp, #8]

; 455  :     if (pInstance == NULL)

  008a8	e59d3008	 ldr         r3, [sp, #8]
  008ac	e3530000	 cmp         r3, #0
  008b0	1a00000b	 bne         |$LN1@VRF_Open|

; 456  :         {
; 457  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_Open: "
; 458  :             L"Failed allocate DMA instance structure\r\n"
; 459  :             ));

  008b4	e59f30f8	 ldr         r3, [pc, #0xF8]
  008b8	e5933440	 ldr         r3, [r3, #0x440]
  008bc	e3130001	 tst         r3, #1
  008c0	0a000004	 beq         |$LN10@VRF_Open|
  008c4	e59f00fc	 ldr         r0, [pc, #0xFC]
  008c8	eb000000	 bl          NKDbgPrintfW
  008cc	e3a03001	 mov         r3, #1
  008d0	e58d301c	 str         r3, [sp, #0x1C]
  008d4	ea000001	 b           |$LN11@VRF_Open|
  008d8		 |$LN10@VRF_Open|
  008d8	e3a03000	 mov         r3, #0
  008dc	e58d301c	 str         r3, [sp, #0x1C]
  008e0		 |$LN11@VRF_Open|

; 460  :         goto cleanUp;

  008e0	ea000020	 b           |$cleanUp$45110|
  008e4		 |$LN1@VRF_Open|

; 461  :         }
; 462  : 
; 463  :     // Set cookie
; 464  :     memset(pInstance, 0, sizeof(Instance_t));

  008e4	e3a02008	 mov         r2, #8
  008e8	e3a01000	 mov         r1, #0
  008ec	e59d0008	 ldr         r0, [sp, #8]
  008f0	eb000000	 bl          memset

; 465  :     pInstance->cookie = VRFB_INSTANCE_COOKIE;

  008f4	e59d2008	 ldr         r2, [sp, #8]
  008f8	e59f30c4	 ldr         r3, [pc, #0xC4]
  008fc	e5823000	 str         r3, [r2]

; 466  : 
; 467  :     // Save device reference
; 468  :     pInstance->pDevice = pDevice;

  00900	e59d3008	 ldr         r3, [sp, #8]
  00904	e2832004	 add         r2, r3, #4
  00908	e59d3000	 ldr         r3, [sp]
  0090c	e5823000	 str         r3, [r2]

; 469  : 
; 470  :     // Increment number of open instances
; 471  :     InterlockedIncrement(&pDevice->instances);

  00910	e59d3000	 ldr         r3, [sp]
  00914	e283001c	 add         r0, r3, #0x1C
  00918	eb000000	 bl          InterlockedIncrement

; 472  : 
; 473  :     // Sanity check number of instances
; 474  :     ASSERT(pDevice->instances > 0);

  0091c	e59d3000	 ldr         r3, [sp]
  00920	e283301c	 add         r3, r3, #0x1C
  00924	e5933000	 ldr         r3, [r3]
  00928	e3530000	 cmp         r3, #0
  0092c	da000002	 ble         |$LN12@VRF_Open|
  00930	e3a03001	 mov         r3, #1
  00934	e58d3020	 str         r3, [sp, #0x20]
  00938	ea000008	 b           |$LN13@VRF_Open|
  0093c		 |$LN12@VRF_Open|
  0093c	e3a03c01	 mov         r3, #1, 24
  00940	e38330da	 orr         r3, r3, #0xDA
  00944	e59f2074	 ldr         r2, [pc, #0x74]
  00948	e59f106c	 ldr         r1, [pc, #0x6C]
  0094c	e59f0064	 ldr         r0, [pc, #0x64]
  00950	eb000000	 bl          NKDbgPrintfW
  00954	e6000010	 __debugbreak_ce
  00958	e3a03000	 mov         r3, #0
  0095c	e58d3020	 str         r3, [sp, #0x20]
  00960		 |$LN13@VRF_Open|

; 475  : 
; 476  :     // Done...
; 477  :     rc = (DWORD)pInstance;

  00960	e59d3008	 ldr         r3, [sp, #8]
  00964	e58d3004	 str         r3, [sp, #4]
  00968		 |$cleanUp$45110|

; 478  : 
; 479  : cleanUp:
; 480  :     DEBUGMSG(ZONE_FUNCTION, (L"-VRF_Open(rc = 0x%08x)\r\n", rc));

  00968	e59f3044	 ldr         r3, [pc, #0x44]
  0096c	e5933440	 ldr         r3, [r3, #0x440]
  00970	e3130004	 tst         r3, #4
  00974	0a000005	 beq         |$LN14@VRF_Open|
  00978	e59d1004	 ldr         r1, [sp, #4]
  0097c	e59f002c	 ldr         r0, [pc, #0x2C]
  00980	eb000000	 bl          NKDbgPrintfW
  00984	e3a03001	 mov         r3, #1
  00988	e58d3024	 str         r3, [sp, #0x24]
  0098c	ea000001	 b           |$LN15@VRF_Open|
  00990		 |$LN14@VRF_Open|
  00990	e3a03000	 mov         r3, #0
  00994	e58d3024	 str         r3, [sp, #0x24]
  00998		 |$LN15@VRF_Open|

; 481  :     return rc;

  00998	e59d3004	 ldr         r3, [sp, #4]
  0099c	e58d300c	 str         r3, [sp, #0xC]

; 482  : }

  009a0	e59d000c	 ldr         r0, [sp, #0xC]
  009a4	e28dd028	 add         sp, sp, #0x28
  009a8	e89d6000	 ldmia       sp, {sp, lr}
  009ac	e12fff1e	 bx          lr
  009b0		 |$LN19@VRF_Open|
  009b0		 |$LN20@VRF_Open|
  009b0	00000000	 DCD         |??_C@_1DC@EMBFFMJG@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  009b4		 |$LN21@VRF_Open|
  009b4	00000000	 DCD         |dpCurSettings|
  009b8		 |$LN22@VRF_Open|
  009b8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  009bc		 |$LN23@VRF_Open|
  009bc	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  009c0		 |$LN24@VRF_Open|
  009c0	00000000	 DCD         |??_C@_1JM@DGLHHEL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  009c4		 |$LN25@VRF_Open|
  009c4	76726649	 DCD         0x76726649
  009c8		 |$LN26@VRF_Open|
  009c8	00000000	 DCD         |??_C@_1HE@KBLIHDKC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@|
  009cc		 |$LN27@VRF_Open|
  009cc	00000000	 DCD         |??_C@_1FO@LPALFEEO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@|
  009d0		 |$LN28@VRF_Open|
  009d0	76726644	 DCD         0x76726644
  009d4		 |$LN29@VRF_Open|
  009d4	00000000	 DCD         |??_C@_1EG@CMLJIHEI@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  009d8		 |$M45862|

			 ENDP  ; |VRF_Open|

	EXPORT	|??_C@_1CM@COJNOJDD@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@MFHMDDJF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@KDIOHBOL@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|VRF_Close|
	IMPORT	|InterlockedDecrement|

  00018			 AREA	 |.pdata|, PDATA
|$T45889| DCD	|$LN15@VRF_Close|
	DCD	0x40005e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@COJNOJDD@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "C", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, "(", 0x0, "r", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@MFHMDDJF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@KDIOHBOL@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "C", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  009d8			 AREA	 |.text|, CODE, ARM

  009d8		 |VRF_Close| PROC

; 494  : {

  009d8		 |$LN15@VRF_Close|
  009d8	e1a0c00d	 mov         r12, sp
  009dc	e92d0001	 stmdb       sp!, {r0}
  009e0	e92d5000	 stmdb       sp!, {r12, lr}
  009e4	e24dd020	 sub         sp, sp, #0x20
  009e8		 |$M45886|

; 495  :     BOOL rc = FALSE;

  009e8	e3a03000	 mov         r3, #0
  009ec	e58d3004	 str         r3, [sp, #4]

; 496  :     Device_t *pDevice;
; 497  :     Instance_t *pInstance = (Instance_t*)context;

  009f0	e59d3028	 ldr         r3, [sp, #0x28]
  009f4	e58d3008	 str         r3, [sp, #8]

; 498  : 
; 499  :     DEBUGMSG(ZONE_FUNCTION, (L"+VRF_Close(0x%08x)\r\n", context));

  009f8	e59f3134	 ldr         r3, [pc, #0x134]
  009fc	e5933440	 ldr         r3, [r3, #0x440]
  00a00	e3130004	 tst         r3, #4
  00a04	0a000005	 beq         |$LN5@VRF_Close|
  00a08	e59d1028	 ldr         r1, [sp, #0x28]
  00a0c	e59f0138	 ldr         r0, [pc, #0x138]
  00a10	eb000000	 bl          NKDbgPrintfW
  00a14	e3a03001	 mov         r3, #1
  00a18	e58d3010	 str         r3, [sp, #0x10]
  00a1c	ea000001	 b           |$LN6@VRF_Close|
  00a20		 |$LN5@VRF_Close|
  00a20	e3a03000	 mov         r3, #0
  00a24	e58d3010	 str         r3, [sp, #0x10]
  00a28		 |$LN6@VRF_Close|

; 500  : 
; 501  :     // Check if we get correct context
; 502  :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  00a28	e59d3008	 ldr         r3, [sp, #8]
  00a2c	e3530000	 cmp         r3, #0
  00a30	0a000004	 beq         |$LN1@VRF_Close|
  00a34	e59d3008	 ldr         r3, [sp, #8]
  00a38	e5932000	 ldr         r2, [r3]
  00a3c	e59f3104	 ldr         r3, [pc, #0x104]
  00a40	e1520003	 cmp         r2, r3
  00a44	0a00000b	 beq         |$LN2@VRF_Close|
  00a48		 |$LN1@VRF_Close|

; 503  :         {
; 504  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: VRF_Read: "
; 505  :             L"Incorrect context param\r\n"
; 506  :             ));

  00a48	e59f30e4	 ldr         r3, [pc, #0xE4]
  00a4c	e5933440	 ldr         r3, [r3, #0x440]
  00a50	e3130001	 tst         r3, #1
  00a54	0a000004	 beq         |$LN7@VRF_Close|
  00a58	e59f00e4	 ldr         r0, [pc, #0xE4]
  00a5c	eb000000	 bl          NKDbgPrintfW
  00a60	e3a03001	 mov         r3, #1
  00a64	e58d3014	 str         r3, [sp, #0x14]
  00a68	ea000001	 b           |$LN8@VRF_Close|
  00a6c		 |$LN7@VRF_Close|
  00a6c	e3a03000	 mov         r3, #0
  00a70	e58d3014	 str         r3, [sp, #0x14]
  00a74		 |$LN8@VRF_Close|

; 507  :         goto cleanUp;

  00a74	ea00001b	 b           |$cleanUp$45141|
  00a78		 |$LN2@VRF_Close|

; 508  :         }
; 509  : 
; 510  :     // Get device context
; 511  :     pDevice = pInstance->pDevice;

  00a78	e59d3008	 ldr         r3, [sp, #8]
  00a7c	e2833004	 add         r3, r3, #4
  00a80	e5933000	 ldr         r3, [r3]
  00a84	e58d3000	 str         r3, [sp]

; 512  : 
; 513  :     // Sanity check number of instances
; 514  :     ASSERT(pDevice->instances > 0);

  00a88	e59d3000	 ldr         r3, [sp]
  00a8c	e283301c	 add         r3, r3, #0x1C
  00a90	e5933000	 ldr         r3, [r3]
  00a94	e3530000	 cmp         r3, #0
  00a98	da000002	 ble         |$LN9@VRF_Close|
  00a9c	e3a03001	 mov         r3, #1
  00aa0	e58d3018	 str         r3, [sp, #0x18]
  00aa4	ea000008	 b           |$LN10@VRF_Close|
  00aa8		 |$LN9@VRF_Close|
  00aa8	e3a03c02	 mov         r3, #2, 24
  00aac	e3833002	 orr         r3, r3, #2
  00ab0	e59f2088	 ldr         r2, [pc, #0x88]
  00ab4	e59f1080	 ldr         r1, [pc, #0x80]
  00ab8	e59f0078	 ldr         r0, [pc, #0x78]
  00abc	eb000000	 bl          NKDbgPrintfW
  00ac0	e6000010	 __debugbreak_ce
  00ac4	e3a03000	 mov         r3, #0
  00ac8	e58d3018	 str         r3, [sp, #0x18]
  00acc		 |$LN10@VRF_Close|

; 515  : 
; 516  :     // Decrement number of open instances
; 517  :     InterlockedDecrement(&pDevice->instances);

  00acc	e59d3000	 ldr         r3, [sp]
  00ad0	e283001c	 add         r0, r3, #0x1C
  00ad4	eb000000	 bl          InterlockedDecrement

; 518  : 
; 519  :     // Free instance structure
; 520  :     LocalFree(pInstance);

  00ad8	e59d0008	 ldr         r0, [sp, #8]
  00adc	eb000000	 bl          LocalFree

; 521  : 
; 522  :     // Done...
; 523  :     rc = TRUE;

  00ae0	e3a03001	 mov         r3, #1
  00ae4	e58d3004	 str         r3, [sp, #4]
  00ae8		 |$cleanUp$45141|

; 524  : 
; 525  : cleanUp:
; 526  :     DEBUGMSG(ZONE_FUNCTION, (L"-VRF_Close(rc = %d)\r\n", rc));

  00ae8	e59f3044	 ldr         r3, [pc, #0x44]
  00aec	e5933440	 ldr         r3, [r3, #0x440]
  00af0	e3130004	 tst         r3, #4
  00af4	0a000005	 beq         |$LN11@VRF_Close|
  00af8	e59d1004	 ldr         r1, [sp, #4]
  00afc	e59f002c	 ldr         r0, [pc, #0x2C]
  00b00	eb000000	 bl          NKDbgPrintfW
  00b04	e3a03001	 mov         r3, #1
  00b08	e58d301c	 str         r3, [sp, #0x1C]
  00b0c	ea000001	 b           |$LN12@VRF_Close|
  00b10		 |$LN11@VRF_Close|
  00b10	e3a03000	 mov         r3, #0
  00b14	e58d301c	 str         r3, [sp, #0x1C]
  00b18		 |$LN12@VRF_Close|

; 527  :     return rc;

  00b18	e59d3004	 ldr         r3, [sp, #4]
  00b1c	e58d300c	 str         r3, [sp, #0xC]

; 528  : }

  00b20	e59d000c	 ldr         r0, [sp, #0xC]
  00b24	e28dd020	 add         sp, sp, #0x20
  00b28	e89d6000	 ldmia       sp, {sp, lr}
  00b2c	e12fff1e	 bx          lr
  00b30		 |$LN16@VRF_Close|
  00b30		 |$LN17@VRF_Close|
  00b30	00000000	 DCD         |??_C@_1CM@COJNOJDD@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00b34		 |$LN18@VRF_Close|
  00b34	00000000	 DCD         |dpCurSettings|
  00b38		 |$LN19@VRF_Close|
  00b38	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00b3c		 |$LN20@VRF_Close|
  00b3c	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00b40		 |$LN21@VRF_Close|
  00b40	00000000	 DCD         |??_C@_1JM@DGLHHEL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00b44		 |$LN22@VRF_Close|
  00b44	00000000	 DCD         |??_C@_1FG@MFHMDDJF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@|
  00b48		 |$LN23@VRF_Close|
  00b48	76726649	 DCD         0x76726649
  00b4c		 |$LN24@VRF_Close|
  00b4c	00000000	 DCD         |??_C@_1CK@KDIOHBOL@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00b50		 |$M45887|

			 ENDP  ; |VRF_Close|

	EXPORT	|??_C@_1DE@PCKBCMGD@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@OCNGLCIO@?$AAV?$AAR?$AAF?$AAB?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| [ DATA ] ; `string'
	EXPORT	|VRFB_GetDisplayViewInfo|
	EXPORT	|VRFB_GetDisplayView|
	EXPORT	|VRFB_NumDisplayViews|
	EXPORT	|VRFB_UpdateView|
	EXPORT	|VRFB_RotateView|
	EXPORT	|VRFB_GetViewInfo|
	EXPORT	|VRFB_ReleaseView|
	EXPORT	|VRFB_AllocateView|
	EXPORT	|??_C@_1OG@KIDJKGDD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| [ DATA ] ; `string'
	EXPORT	|GetCurrentProcessId|
	EXPORT	|??_C@_1GA@KEDPOCFH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@HFFPKDBH@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|VRF_IOControl|
	IMPORT	|CeSafeCopyMemory|
	IMPORT	|memcmp|
	IMPORT	|SetLastError|
	IMPORT	|GetCallerProcess|

  00020			 AREA	 |.pdata|, PDATA
|$T45937| DCD	|$LN76@VRF_IOCont|
	DCD	0x4001ea04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@PCKBCMGD@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@OCNGLCIO@?$AAV?$AAR?$AAF?$AAB?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| DCB "V"
	DCB	0x0, "R", 0x0, "F", 0x0, "B", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OG@KIDJKGDD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "D", 0x0, "K"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "R", 0x0, "I", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "_"
	DCB	0x0, "I", 0x0, "F", 0x0, "C", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, "l", 0x0, "y", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "p"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "(", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@KEDPOCFH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@HFFPKDBH@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00b50			 AREA	 |.text|, CODE, ARM

  00b50		 |VRF_IOControl| PROC

; 547  : {

  00b50		 |$LN76@VRF_IOCont|
  00b50	e1a0c00d	 mov         r12, sp
  00b54	e92d000f	 stmdb       sp!, {r0 - r3}
  00b58	e92d5000	 stmdb       sp!, {r12, lr}
  00b5c	e24dd0fc	 sub         sp, sp, #0xFC
  00b60		 |$M45934|

; 548  :     BOOL rc = FALSE;

  00b60	e3a03000	 mov         r3, #0
  00b64	e58d3014	 str         r3, [sp, #0x14]

; 549  :     Instance_t *pInstance = (Instance_t*)context;

  00b68	e59d3104	 ldr         r3, [sp, #0x104]
  00b6c	e58d3018	 str         r3, [sp, #0x18]

; 550  :     Device_t *pDevice;
; 551  :     DEVICE_IFC_VRFB ifc;
; 552  : 
; 553  :     DEBUGMSG(ZONE_FUNCTION, (
; 554  :         L"+VRF_IOControl(0x%08x, 0x%08x, 0x%08x, %d, 0x%08x, %d, 0x%08x)\r\n",
; 555  :         context, code, pInBuffer, inSize, pOutBuffer, outSize, pOutSize
; 556  :         ));

  00b70	e59f3734	 ldr         r3, [pc, #0x734]
  00b74	e5933440	 ldr         r3, [r3, #0x440]
  00b78	e3130004	 tst         r3, #4
  00b7c	0a00000f	 beq         |$LN49@VRF_IOCont|
  00b80	e59d311c	 ldr         r3, [sp, #0x11C]
  00b84	e58d300c	 str         r3, [sp, #0xC]
  00b88	e59d3118	 ldr         r3, [sp, #0x118]
  00b8c	e58d3008	 str         r3, [sp, #8]
  00b90	e59d3114	 ldr         r3, [sp, #0x114]
  00b94	e58d3004	 str         r3, [sp, #4]
  00b98	e59d3110	 ldr         r3, [sp, #0x110]
  00b9c	e58d3000	 str         r3, [sp]
  00ba0	e59d310c	 ldr         r3, [sp, #0x10C]
  00ba4	e59d2108	 ldr         r2, [sp, #0x108]
  00ba8	e59d1104	 ldr         r1, [sp, #0x104]
  00bac	e59f0740	 ldr         r0, [pc, #0x740]
  00bb0	eb000000	 bl          NKDbgPrintfW
  00bb4	e3a03001	 mov         r3, #1
  00bb8	e58d30b4	 str         r3, [sp, #0xB4]
  00bbc	ea000001	 b           |$LN50@VRF_IOCont|
  00bc0		 |$LN49@VRF_IOCont|
  00bc0	e3a03000	 mov         r3, #0
  00bc4	e58d30b4	 str         r3, [sp, #0xB4]
  00bc8		 |$LN50@VRF_IOCont|

; 557  : 
; 558  :     // Check if we get correct context
; 559  :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  00bc8	e59d3018	 ldr         r3, [sp, #0x18]
  00bcc	e3530000	 cmp         r3, #0
  00bd0	0a000004	 beq         |$LN45@VRF_IOCont|
  00bd4	e59d3018	 ldr         r3, [sp, #0x18]
  00bd8	e5932000	 ldr         r2, [r3]
  00bdc	e59f370c	 ldr         r3, [pc, #0x70C]
  00be0	e1520003	 cmp         r2, r3
  00be4	0a00000b	 beq         |$LN46@VRF_IOCont|
  00be8		 |$LN45@VRF_IOCont|

; 560  :         {
; 561  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_IOControl: "
; 562  :             L"Incorrect context param\r\n"
; 563  :             ));

  00be8	e59f36bc	 ldr         r3, [pc, #0x6BC]
  00bec	e5933440	 ldr         r3, [r3, #0x440]
  00bf0	e3130001	 tst         r3, #1
  00bf4	0a000004	 beq         |$LN51@VRF_IOCont|
  00bf8	e59f06ec	 ldr         r0, [pc, #0x6EC]
  00bfc	eb000000	 bl          NKDbgPrintfW
  00c00	e3a03001	 mov         r3, #1
  00c04	e58d30b8	 str         r3, [sp, #0xB8]
  00c08	ea000001	 b           |$LN52@VRF_IOCont|
  00c0c		 |$LN51@VRF_IOCont|
  00c0c	e3a03000	 mov         r3, #0
  00c10	e58d30b8	 str         r3, [sp, #0xB8]
  00c14		 |$LN52@VRF_IOCont|

; 564  :         goto cleanUp;

  00c14	ea000191	 b           |$cleanUp$45174|
  00c18		 |$LN46@VRF_IOCont|

; 565  :         }
; 566  : 
; 567  :     //  Get Device
; 568  :     pDevice = pInstance->pDevice;

  00c18	e59d3018	 ldr         r3, [sp, #0x18]
  00c1c	e2833004	 add         r3, r3, #4
  00c20	e5933000	 ldr         r3, [r3]
  00c24	e58d3010	 str         r3, [sp, #0x10]

; 569  : 
; 570  : 
; 571  :     switch (code)

  00c28	e59d3108	 ldr         r3, [sp, #0x108]
  00c2c	e58d30bc	 str         r3, [sp, #0xBC]
  00c30	e59d20bc	 ldr         r2, [sp, #0xBC]
  00c34	e59f36ac	 ldr         r3, [pc, #0x6AC]
  00c38	e1520003	 cmp         r2, r3
  00c3c	8a00001b	 bhi         |$LN55@VRF_IOCont|
  00c40	e59d20bc	 ldr         r2, [sp, #0xBC]
  00c44	e59f369c	 ldr         r3, [pc, #0x69C]
  00c48	e1520003	 cmp         r2, r3
  00c4c	0a0000ea	 beq         |$LN21@VRF_IOCont|
  00c50	e59d20bc	 ldr         r2, [sp, #0xBC]
  00c54	e59f3688	 ldr         r3, [pc, #0x688]
  00c58	e1520003	 cmp         r2, r3
  00c5c	8a00000e	 bhi         |$LN56@VRF_IOCont|
  00c60	e59d20bc	 ldr         r2, [sp, #0xBC]
  00c64	e59f3678	 ldr         r3, [pc, #0x678]
  00c68	e1520003	 cmp         r2, r3
  00c6c	0a0000af	 beq         |$LN29@VRF_IOCont|
  00c70	e59d20bc	 ldr         r2, [sp, #0xBC]
  00c74	e3a03822	 mov         r3, #0x22, 16
  00c78	e3833b01	 orr         r3, r3, #1, 22
  00c7c	e1520003	 cmp         r2, r3
  00c80	0a000023	 beq         |$LN42@VRF_IOCont|
  00c84	e59d20bc	 ldr         r2, [sp, #0xBC]
  00c88	e3a03822	 mov         r3, #0x22, 16
  00c8c	e3833b07	 orr         r3, r3, #7, 22
  00c90	e1520003	 cmp         r2, r3
  00c94	0a00007a	 beq         |$LN33@VRF_IOCont|
  00c98	ea00016d	 b           |$LN1@VRF_IOCont|
  00c9c		 |$LN56@VRF_IOCont|
  00c9c	e59d20bc	 ldr         r2, [sp, #0xBC]
  00ca0	e59f3638	 ldr         r3, [pc, #0x638]
  00ca4	e1520003	 cmp         r2, r3
  00ca8	0a0000b5	 beq         |$LN25@VRF_IOCont|
  00cac	ea000168	 b           |$LN1@VRF_IOCont|
  00cb0		 |$LN55@VRF_IOCont|
  00cb0	e59d20bc	 ldr         r2, [sp, #0xBC]
  00cb4	e59f3620	 ldr         r3, [pc, #0x620]
  00cb8	e0423003	 sub         r3, r2, r3
  00cbc	e58d30bc	 str         r3, [sp, #0xBC]
  00cc0	e59d30bc	 ldr         r3, [sp, #0xBC]
  00cc4	e353000c	 cmp         r3, #0xC
  00cc8	8a000161	 bhi         |$LN1@VRF_IOCont|
  00ccc	e59d20bc	 ldr         r2, [sp, #0xBC]
  00cd0	e1a03102	 mov         r3, r2, lsl #2
  00cd4	e083300f	 add         r3, r3, pc
  00cd8	e5933004	 ldr         r3, [r3, #4]
  00cdc	e08ff003	 add         pc, pc, r3
  00ce0		 |$LN60@VRF_IOCont|
  00ce0		 |$LN59@VRF_IOCont|
  00ce0		 |$LN61@VRF_IOCont|
  00ce0	00000378	 DCD         0x378
  00ce4		 |$LN62@VRF_IOCont|
  00ce4	00000570	 DCD         0x570
  00ce8		 |$LN63@VRF_IOCont|
  00ce8	00000570	 DCD         0x570
  00cec		 |$LN64@VRF_IOCont|
  00cec	00000570	 DCD         0x570
  00cf0		 |$LN65@VRF_IOCont|
  00cf0	00000404	 DCD         0x404
  00cf4		 |$LN66@VRF_IOCont|
  00cf4	00000570	 DCD         0x570
  00cf8		 |$LN67@VRF_IOCont|
  00cf8	00000570	 DCD         0x570
  00cfc		 |$LN68@VRF_IOCont|
  00cfc	00000570	 DCD         0x570
  00d00		 |$LN69@VRF_IOCont|
  00d00	0000045c	 DCD         0x45c
  00d04		 |$LN70@VRF_IOCont|
  00d04	00000570	 DCD         0x570
  00d08		 |$LN71@VRF_IOCont|
  00d08	00000570	 DCD         0x570
  00d0c		 |$LN72@VRF_IOCont|
  00d0c	00000570	 DCD         0x570
  00d10		 |$LN73@VRF_IOCont|
  00d10	000004dc	 DCD         0x4dc
  00d14		 |$LN42@VRF_IOCont|

; 572  :         { 
; 573  :         case IOCTL_DDK_GET_DRIVER_IFC:
; 574  :             // We can give interface only to our peer in device process
; 575  :             if (GetCurrentProcessId() != (DWORD)GetCallerProcess()) {

  00d14	eb000000	 bl          GetCurrentProcessId
  00d18	e58d00c0	 str         r0, [sp, #0xC0]
  00d1c	eb000000	 bl          GetCallerProcess
  00d20	e58d00c4	 str         r0, [sp, #0xC4]
  00d24	e59d20c0	 ldr         r2, [sp, #0xC0]
  00d28	e59d30c4	 ldr         r3, [sp, #0xC4]
  00d2c	e1520003	 cmp         r2, r3
  00d30	0a000010	 beq         |$LN41@VRF_IOCont|

; 576  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: VRF_IOControl: "
; 577  :                     L"IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 578  :                     L"device process (caller process id 0x%08x)\r\n",
; 579  :                     GetCallerProcess()
; 580  :                 ));

  00d34	e59f3570	 ldr         r3, [pc, #0x570]
  00d38	e5933440	 ldr         r3, [r3, #0x440]
  00d3c	e3130001	 tst         r3, #1
  00d40	0a000007	 beq         |$LN53@VRF_IOCont|
  00d44	eb000000	 bl          GetCallerProcess
  00d48	e58d00c8	 str         r0, [sp, #0xC8]
  00d4c	e59d10c8	 ldr         r1, [sp, #0xC8]
  00d50	e59f0580	 ldr         r0, [pc, #0x580]
  00d54	eb000000	 bl          NKDbgPrintfW
  00d58	e3a03001	 mov         r3, #1
  00d5c	e58d30cc	 str         r3, [sp, #0xCC]
  00d60	ea000001	 b           |$LN54@VRF_IOCont|
  00d64		 |$LN53@VRF_IOCont|
  00d64	e3a03000	 mov         r3, #0
  00d68	e58d30cc	 str         r3, [sp, #0xCC]
  00d6c		 |$LN54@VRF_IOCont|

; 581  :                 SetLastError(ERROR_ACCESS_DENIED);

  00d6c	e3a00005	 mov         r0, #5
  00d70	eb000000	 bl          SetLastError

; 582  :                 goto cleanUp;

  00d74	ea000139	 b           |$cleanUp$45174|
  00d78		 |$LN41@VRF_IOCont|

; 583  :             }
; 584  :             // Check input parameters
; 585  :             if (pInBuffer == NULL || inSize < sizeof(GUID)) {

  00d78	e59d310c	 ldr         r3, [sp, #0x10C]
  00d7c	e3530000	 cmp         r3, #0
  00d80	0a000002	 beq         |$LN39@VRF_IOCont|
  00d84	e59d3110	 ldr         r3, [sp, #0x110]
  00d88	e3530010	 cmp         r3, #0x10
  00d8c	2a000002	 bcs         |$LN40@VRF_IOCont|
  00d90		 |$LN39@VRF_IOCont|

; 586  :                 SetLastError(ERROR_INVALID_PARAMETER);

  00d90	e3a00057	 mov         r0, #0x57
  00d94	eb000000	 bl          SetLastError

; 587  :                 break;

  00d98	ea000130	 b           |$LN43@VRF_IOCont|
  00d9c		 |$LN40@VRF_IOCont|

; 588  :             }
; 589  :             if (IsEqualGUID((GUID*)pInBuffer, &DEVICE_IFC_VRFB_GUID)) {

  00d9c	e3a02010	 mov         r2, #0x10
  00da0	e59f152c	 ldr         r1, [pc, #0x52C]
  00da4	e59d010c	 ldr         r0, [sp, #0x10C]
  00da8	eb000000	 bl          memcmp
  00dac	e58d00d0	 str         r0, [sp, #0xD0]
  00db0	e59d30d0	 ldr         r3, [sp, #0xD0]
  00db4	e3530000	 cmp         r3, #0
  00db8	1a00002e	 bne         |$LN38@VRF_IOCont|

; 590  :                 if (pOutSize != NULL) *pOutSize = sizeof(DEVICE_IFC_VRFB);

  00dbc	e59d311c	 ldr         r3, [sp, #0x11C]
  00dc0	e3530000	 cmp         r3, #0
  00dc4	0a000002	 beq         |$LN37@VRF_IOCont|
  00dc8	e59d211c	 ldr         r2, [sp, #0x11C]
  00dcc	e3a03024	 mov         r3, #0x24
  00dd0	e5823000	 str         r3, [r2]
  00dd4		 |$LN37@VRF_IOCont|

; 591  :                 if (pOutBuffer == NULL || outSize < sizeof(DEVICE_IFC_VRFB)) {

  00dd4	e59d3114	 ldr         r3, [sp, #0x114]
  00dd8	e3530000	 cmp         r3, #0
  00ddc	0a000002	 beq         |$LN35@VRF_IOCont|
  00de0	e59d3118	 ldr         r3, [sp, #0x118]
  00de4	e3530024	 cmp         r3, #0x24
  00de8	2a000002	 bcs         |$LN36@VRF_IOCont|
  00dec		 |$LN35@VRF_IOCont|

; 592  :                     SetLastError(ERROR_INVALID_PARAMETER);

  00dec	e3a00057	 mov         r0, #0x57
  00df0	eb000000	 bl          SetLastError

; 593  :                     break;

  00df4	ea000119	 b           |$LN43@VRF_IOCont|
  00df8		 |$LN36@VRF_IOCont|

; 594  :                 }
; 595  :                 ifc.context = (HANDLE) context;

  00df8	e59d3104	 ldr         r3, [sp, #0x104]
  00dfc	e58d301c	 str         r3, [sp, #0x1C]

; 596  :                 ifc.pfnAllocateView = VRFB_AllocateView;

  00e00	e59f34c8	 ldr         r3, [pc, #0x4C8]
  00e04	e58d3020	 str         r3, [sp, #0x20]

; 597  :                 ifc.pfnReleaseView = VRFB_ReleaseView;

  00e08	e59f34bc	 ldr         r3, [pc, #0x4BC]
  00e0c	e58d3024	 str         r3, [sp, #0x24]

; 598  :                 ifc.pfnGetViewInfo = VRFB_GetViewInfo;

  00e10	e59f34b0	 ldr         r3, [pc, #0x4B0]
  00e14	e58d3028	 str         r3, [sp, #0x28]

; 599  :                 ifc.pfnRotateView = VRFB_RotateView;

  00e18	e59f34a4	 ldr         r3, [pc, #0x4A4]
  00e1c	e58d302c	 str         r3, [sp, #0x2C]

; 600  :                 ifc.pfnUpdateView = VRFB_UpdateView;

  00e20	e59f3498	 ldr         r3, [pc, #0x498]
  00e24	e58d3030	 str         r3, [sp, #0x30]

; 601  :                 ifc.pfnNumDisplayViews = VRFB_NumDisplayViews;

  00e28	e59f348c	 ldr         r3, [pc, #0x48C]
  00e2c	e58d3034	 str         r3, [sp, #0x34]

; 602  :                 ifc.pfnGetDisplayView = VRFB_GetDisplayView;

  00e30	e59f3480	 ldr         r3, [pc, #0x480]
  00e34	e58d3038	 str         r3, [sp, #0x38]

; 603  :                 ifc.pfnGetDisplayViewInfo = VRFB_GetDisplayViewInfo;

  00e38	e59f3474	 ldr         r3, [pc, #0x474]
  00e3c	e58d303c	 str         r3, [sp, #0x3C]

; 604  :                 if (!CeSafeCopyMemory(pOutBuffer, &ifc, sizeof(DEVICE_IFC_VRFB))) {

  00e40	e3a02024	 mov         r2, #0x24
  00e44	e28d101c	 add         r1, sp, #0x1C
  00e48	e59d0114	 ldr         r0, [sp, #0x114]
  00e4c	eb000000	 bl          CeSafeCopyMemory
  00e50	e58d00d4	 str         r0, [sp, #0xD4]
  00e54	e59d30d4	 ldr         r3, [sp, #0xD4]
  00e58	e3530000	 cmp         r3, #0
  00e5c	1a000002	 bne         |$LN34@VRF_IOCont|

; 605  :                     SetLastError(ERROR_INVALID_PARAMETER);

  00e60	e3a00057	 mov         r0, #0x57
  00e64	eb000000	 bl          SetLastError

; 606  :                     break;

  00e68	ea0000fc	 b           |$LN43@VRF_IOCont|
  00e6c		 |$LN34@VRF_IOCont|

; 607  :                 }
; 608  :                 rc = TRUE;

  00e6c	e3a03001	 mov         r3, #1
  00e70	e58d3014	 str         r3, [sp, #0x14]

; 609  :                 break;

  00e74	ea0000f9	 b           |$LN43@VRF_IOCont|
  00e78		 |$LN38@VRF_IOCont|

; 610  :             }
; 611  :             SetLastError(ERROR_INVALID_PARAMETER);

  00e78	e3a00057	 mov         r0, #0x57
  00e7c	eb000000	 bl          SetLastError

; 612  :             break;

  00e80	ea0000f6	 b           |$LN43@VRF_IOCont|
  00e84		 |$LN33@VRF_IOCont|

; 613  : 
; 614  :         case IOCTL_VRFB_ALLOCATEVIEW:
; 615  :             {
; 616  :                 if ((pInBuffer == NULL) || (pOutBuffer == NULL) ||
; 617  :                     (inSize < sizeof(VRFB_VIEW_INFO)) ||
; 618  :                     (outSize < sizeof(HANDLE)))

  00e84	e59d310c	 ldr         r3, [sp, #0x10C]
  00e88	e3530000	 cmp         r3, #0
  00e8c	0a000008	 beq         |$LN31@VRF_IOCont|
  00e90	e59d3114	 ldr         r3, [sp, #0x114]
  00e94	e3530000	 cmp         r3, #0
  00e98	0a000005	 beq         |$LN31@VRF_IOCont|
  00e9c	e59d3110	 ldr         r3, [sp, #0x110]
  00ea0	e3530040	 cmp         r3, #0x40
  00ea4	3a000002	 bcc         |$LN31@VRF_IOCont|
  00ea8	e59d3118	 ldr         r3, [sp, #0x118]
  00eac	e3530004	 cmp         r3, #4
  00eb0	2a000002	 bcs         |$LN32@VRF_IOCont|
  00eb4		 |$LN31@VRF_IOCont|

; 619  :                     {
; 620  :                     SetLastError(ERROR_INVALID_PARAMETER);

  00eb4	e3a00057	 mov         r0, #0x57
  00eb8	eb000000	 bl          SetLastError

; 621  :                     }
; 622  :                 else

  00ebc	ea00001a	 b           |$LN30@VRF_IOCont|
  00ec0		 |$LN32@VRF_IOCont|

; 623  :                     {
; 624  :                     HANDLE          hContext = (HANDLE) context;

  00ec0	e59d3104	 ldr         r3, [sp, #0x104]
  00ec4	e58d3048	 str         r3, [sp, #0x48]

; 625  :                     VRFB_VIEW_INFO *pViewInfo = (VRFB_VIEW_INFO*)pInBuffer;

  00ec8	e59d310c	 ldr         r3, [sp, #0x10C]
  00ecc	e58d3040	 str         r3, [sp, #0x40]

; 626  :                     HANDLE         *hView = (HANDLE*)pOutBuffer;

  00ed0	e59d3114	 ldr         r3, [sp, #0x114]
  00ed4	e58d3044	 str         r3, [sp, #0x44]

; 627  :                     
; 628  :                     *hView = VRFB_AllocateView( hContext, 
; 629  :                                                pViewInfo->dwPixelSize, 
; 630  :                                                pViewInfo->dwWidth,
; 631  :                                                pViewInfo->dwHeight, 
; 632  :                                                pViewInfo->dwPhysicalBufferAddr );

  00ed8	e59d3040	 ldr         r3, [sp, #0x40]
  00edc	e283303c	 add         r3, r3, #0x3C
  00ee0	e5933000	 ldr         r3, [r3]
  00ee4	e58d3000	 str         r3, [sp]
  00ee8	e59d3040	 ldr         r3, [sp, #0x40]
  00eec	e2833010	 add         r3, r3, #0x10
  00ef0	e5933000	 ldr         r3, [r3]
  00ef4	e59d2040	 ldr         r2, [sp, #0x40]
  00ef8	e282200c	 add         r2, r2, #0xC
  00efc	e5922000	 ldr         r2, [r2]
  00f00	e59d1040	 ldr         r1, [sp, #0x40]
  00f04	e2811004	 add         r1, r1, #4
  00f08	e5911000	 ldr         r1, [r1]
  00f0c	e59d0048	 ldr         r0, [sp, #0x48]
  00f10	eb000000	 bl          VRFB_AllocateView
  00f14	e58d00d8	 str         r0, [sp, #0xD8]
  00f18	e59d20d8	 ldr         r2, [sp, #0xD8]
  00f1c	e59d3044	 ldr         r3, [sp, #0x44]
  00f20	e5832000	 str         r2, [r3]

; 633  : 
; 634  :                     rc = TRUE;

  00f24	e3a03001	 mov         r3, #1
  00f28	e58d3014	 str         r3, [sp, #0x14]
  00f2c		 |$LN30@VRF_IOCont|

; 635  :                     }
; 636  :             }
; 637  :             break;

  00f2c	ea0000cb	 b           |$LN43@VRF_IOCont|
  00f30		 |$LN29@VRF_IOCont|

; 638  :  
; 639  :         case IOCTL_VRFB_RELEASEVIEW:
; 640  :             {
; 641  :                 if ((pInBuffer == NULL) ||
; 642  :                     (inSize < sizeof(HANDLE*)))

  00f30	e59d310c	 ldr         r3, [sp, #0x10C]
  00f34	e3530000	 cmp         r3, #0
  00f38	0a000002	 beq         |$LN27@VRF_IOCont|
  00f3c	e59d3110	 ldr         r3, [sp, #0x110]
  00f40	e3530004	 cmp         r3, #4
  00f44	2a000002	 bcs         |$LN28@VRF_IOCont|
  00f48		 |$LN27@VRF_IOCont|

; 643  :                     {
; 644  :                     SetLastError(ERROR_INVALID_PARAMETER);

  00f48	e3a00057	 mov         r0, #0x57
  00f4c	eb000000	 bl          SetLastError

; 645  :                     }
; 646  :                 else

  00f50	ea00000a	 b           |$LN26@VRF_IOCont|
  00f54		 |$LN28@VRF_IOCont|

; 647  :                     {
; 648  :                     HANDLE  hContext = (HANDLE) context;

  00f54	e59d3104	 ldr         r3, [sp, #0x104]
  00f58	e58d3050	 str         r3, [sp, #0x50]

; 649  :                     HANDLE  hView = *(HANDLE*)pInBuffer;

  00f5c	e59d310c	 ldr         r3, [sp, #0x10C]
  00f60	e5933000	 ldr         r3, [r3]
  00f64	e58d304c	 str         r3, [sp, #0x4C]

; 650  :                     
; 651  :                     rc = VRFB_ReleaseView( hContext, hView );

  00f68	e59d104c	 ldr         r1, [sp, #0x4C]
  00f6c	e59d0050	 ldr         r0, [sp, #0x50]
  00f70	eb000000	 bl          VRFB_ReleaseView
  00f74	e58d00dc	 str         r0, [sp, #0xDC]
  00f78	e59d30dc	 ldr         r3, [sp, #0xDC]
  00f7c	e58d3014	 str         r3, [sp, #0x14]
  00f80		 |$LN26@VRF_IOCont|

; 652  :                     }
; 653  :             }
; 654  :             break;

  00f80	ea0000b6	 b           |$LN43@VRF_IOCont|
  00f84		 |$LN25@VRF_IOCont|

; 655  :  
; 656  :         case IOCTL_VRFB_GETVIEWINFO:
; 657  :             {
; 658  :                 if ((pInBuffer == NULL) || (pOutBuffer == NULL) ||
; 659  :                     (inSize < sizeof(HANDLE*)) ||
; 660  :                     (outSize < sizeof(VRFB_VIEW_INFO)))

  00f84	e59d310c	 ldr         r3, [sp, #0x10C]
  00f88	e3530000	 cmp         r3, #0
  00f8c	0a000008	 beq         |$LN23@VRF_IOCont|
  00f90	e59d3114	 ldr         r3, [sp, #0x114]
  00f94	e3530000	 cmp         r3, #0
  00f98	0a000005	 beq         |$LN23@VRF_IOCont|
  00f9c	e59d3110	 ldr         r3, [sp, #0x110]
  00fa0	e3530004	 cmp         r3, #4
  00fa4	3a000002	 bcc         |$LN23@VRF_IOCont|
  00fa8	e59d3118	 ldr         r3, [sp, #0x118]
  00fac	e3530040	 cmp         r3, #0x40
  00fb0	2a000002	 bcs         |$LN24@VRF_IOCont|
  00fb4		 |$LN23@VRF_IOCont|

; 661  :                     {
; 662  :                     SetLastError(ERROR_INVALID_PARAMETER);

  00fb4	e3a00057	 mov         r0, #0x57
  00fb8	eb000000	 bl          SetLastError

; 663  :                     }
; 664  :                 else

  00fbc	ea00000d	 b           |$LN22@VRF_IOCont|
  00fc0		 |$LN24@VRF_IOCont|

; 665  :                     {
; 666  :                     HANDLE  hContext = (HANDLE) context;

  00fc0	e59d3104	 ldr         r3, [sp, #0x104]
  00fc4	e58d305c	 str         r3, [sp, #0x5C]

; 667  :                     HANDLE  hView = *(HANDLE*)pInBuffer;

  00fc8	e59d310c	 ldr         r3, [sp, #0x10C]
  00fcc	e5933000	 ldr         r3, [r3]
  00fd0	e58d3058	 str         r3, [sp, #0x58]

; 668  :                     VRFB_VIEW_INFO *pViewInfo = (VRFB_VIEW_INFO*)pOutBuffer;

  00fd4	e59d3114	 ldr         r3, [sp, #0x114]
  00fd8	e58d3054	 str         r3, [sp, #0x54]

; 669  :                     
; 670  :                     rc = VRFB_GetViewInfo( hContext, hView, pViewInfo ); 

  00fdc	e59d2054	 ldr         r2, [sp, #0x54]
  00fe0	e59d1058	 ldr         r1, [sp, #0x58]
  00fe4	e59d005c	 ldr         r0, [sp, #0x5C]
  00fe8	eb000000	 bl          VRFB_GetViewInfo
  00fec	e58d00e0	 str         r0, [sp, #0xE0]
  00ff0	e59d30e0	 ldr         r3, [sp, #0xE0]
  00ff4	e58d3014	 str         r3, [sp, #0x14]
  00ff8		 |$LN22@VRF_IOCont|

; 671  :                     }
; 672  :             }
; 673  :             break;

  00ff8	ea000098	 b           |$LN43@VRF_IOCont|
  00ffc		 |$LN21@VRF_IOCont|

; 674  :  
; 675  :         case IOCTL_VRFB_ROTATEVIEW:
; 676  :             {
; 677  :                 if ((pInBuffer == NULL)||
; 678  :                     (inSize < sizeof(VRFB_VIEW_INFO)))

  00ffc	e59d310c	 ldr         r3, [sp, #0x10C]
  01000	e3530000	 cmp         r3, #0
  01004	0a000002	 beq         |$LN19@VRF_IOCont|
  01008	e59d3110	 ldr         r3, [sp, #0x110]
  0100c	e3530040	 cmp         r3, #0x40
  01010	2a000002	 bcs         |$LN20@VRF_IOCont|
  01014		 |$LN19@VRF_IOCont|

; 679  :                     {
; 680  :                     SetLastError(ERROR_INVALID_PARAMETER);

  01014	e3a00057	 mov         r0, #0x57
  01018	eb000000	 bl          SetLastError

; 681  :                     }
; 682  :                 else

  0101c	ea00000d	 b           |$LN18@VRF_IOCont|
  01020		 |$LN20@VRF_IOCont|

; 683  :                     {
; 684  :                     HANDLE          hContext = (HANDLE) context;

  01020	e59d3104	 ldr         r3, [sp, #0x104]
  01024	e58d3064	 str         r3, [sp, #0x64]

; 685  :                     VRFB_VIEW_INFO *pViewInfo = (VRFB_VIEW_INFO*)pInBuffer;

  01028	e59d310c	 ldr         r3, [sp, #0x10C]
  0102c	e58d3060	 str         r3, [sp, #0x60]

; 686  :                     
; 687  :                     rc = VRFB_RotateView( hContext, pViewInfo->hView, pViewInfo->dwRotationAngle ); 

  01030	e59d3060	 ldr         r3, [sp, #0x60]
  01034	e283302c	 add         r3, r3, #0x2C
  01038	e5932000	 ldr         r2, [r3]
  0103c	e59d3060	 ldr         r3, [sp, #0x60]
  01040	e5931000	 ldr         r1, [r3]
  01044	e59d0064	 ldr         r0, [sp, #0x64]
  01048	eb000000	 bl          VRFB_RotateView
  0104c	e58d00e4	 str         r0, [sp, #0xE4]
  01050	e59d30e4	 ldr         r3, [sp, #0xE4]
  01054	e58d3014	 str         r3, [sp, #0x14]
  01058		 |$LN18@VRF_IOCont|

; 688  :                     }
; 689  :             }
; 690  :             break;

  01058	ea000080	 b           |$LN43@VRF_IOCont|
  0105c		 |$LN17@VRF_IOCont|

; 691  :  
; 692  :         case IOCTL_VRFB_UPDATEVIEW:
; 693  :             {
; 694  :                 if ((pInBuffer == NULL)||
; 695  :                     (inSize < sizeof(VRFB_VIEW_INFO)))

  0105c	e59d310c	 ldr         r3, [sp, #0x10C]
  01060	e3530000	 cmp         r3, #0
  01064	0a000002	 beq         |$LN15@VRF_IOCont|
  01068	e59d3110	 ldr         r3, [sp, #0x110]
  0106c	e3530040	 cmp         r3, #0x40
  01070	2a000002	 bcs         |$LN16@VRF_IOCont|
  01074		 |$LN15@VRF_IOCont|

; 696  :                     {
; 697  :                     SetLastError(ERROR_INVALID_PARAMETER);

  01074	e3a00057	 mov         r0, #0x57
  01078	eb000000	 bl          SetLastError

; 698  :                     }
; 699  :                 else

  0107c	ea000018	 b           |$LN14@VRF_IOCont|
  01080		 |$LN16@VRF_IOCont|

; 700  :                     {
; 701  :                     HANDLE          hContext = (HANDLE) context;

  01080	e59d3104	 ldr         r3, [sp, #0x104]
  01084	e58d306c	 str         r3, [sp, #0x6C]

; 702  :                     VRFB_VIEW_INFO *pViewInfo = (VRFB_VIEW_INFO*)pInBuffer;

  01088	e59d310c	 ldr         r3, [sp, #0x10C]
  0108c	e58d3068	 str         r3, [sp, #0x68]

; 703  :                     
; 704  :                     rc = VRFB_UpdateView( hContext,
; 705  :                                           pViewInfo->hView,
; 706  :                                           pViewInfo->dwPixelSize, 
; 707  :                                           pViewInfo->dwWidth,
; 708  :                                           pViewInfo->dwHeight, 
; 709  :                                           pViewInfo->dwPhysicalBufferAddr );

  01090	e59d3068	 ldr         r3, [sp, #0x68]
  01094	e283303c	 add         r3, r3, #0x3C
  01098	e5933000	 ldr         r3, [r3]
  0109c	e58d3004	 str         r3, [sp, #4]
  010a0	e59d3068	 ldr         r3, [sp, #0x68]
  010a4	e2833010	 add         r3, r3, #0x10
  010a8	e5933000	 ldr         r3, [r3]
  010ac	e58d3000	 str         r3, [sp]
  010b0	e59d3068	 ldr         r3, [sp, #0x68]
  010b4	e283300c	 add         r3, r3, #0xC
  010b8	e5933000	 ldr         r3, [r3]
  010bc	e59d2068	 ldr         r2, [sp, #0x68]
  010c0	e2822004	 add         r2, r2, #4
  010c4	e5922000	 ldr         r2, [r2]
  010c8	e59d1068	 ldr         r1, [sp, #0x68]
  010cc	e5911000	 ldr         r1, [r1]
  010d0	e59d006c	 ldr         r0, [sp, #0x6C]
  010d4	eb000000	 bl          VRFB_UpdateView
  010d8	e58d00e8	 str         r0, [sp, #0xE8]
  010dc	e59d30e8	 ldr         r3, [sp, #0xE8]
  010e0	e58d3014	 str         r3, [sp, #0x14]
  010e4		 |$LN14@VRF_IOCont|

; 710  :                     }
; 711  :             }
; 712  :             break;

  010e4	ea00005d	 b           |$LN43@VRF_IOCont|
  010e8		 |$LN13@VRF_IOCont|

; 713  :  
; 714  :         case IOCTL_VRFB_NUMDISPLAYVIEWS:
; 715  :             {
; 716  :                 if ((pOutBuffer == NULL) ||
; 717  :                     (outSize < sizeof(DWORD)))

  010e8	e59d3114	 ldr         r3, [sp, #0x114]
  010ec	e3530000	 cmp         r3, #0
  010f0	0a000002	 beq         |$LN11@VRF_IOCont|
  010f4	e59d3118	 ldr         r3, [sp, #0x118]
  010f8	e3530004	 cmp         r3, #4
  010fc	2a000002	 bcs         |$LN12@VRF_IOCont|
  01100		 |$LN11@VRF_IOCont|

; 718  :                     {
; 719  :                     SetLastError(ERROR_INVALID_PARAMETER);

  01100	e3a00057	 mov         r0, #0x57
  01104	eb000000	 bl          SetLastError

; 720  :                     }
; 721  :                 else

  01108	ea00000b	 b           |$LN10@VRF_IOCont|
  0110c		 |$LN12@VRF_IOCont|

; 722  :                     {
; 723  :                     HANDLE  hContext = (HANDLE) context;

  0110c	e59d3104	 ldr         r3, [sp, #0x104]
  01110	e58d3074	 str         r3, [sp, #0x74]

; 724  :                     DWORD*  pNumViews = (DWORD*)pOutBuffer;

  01114	e59d3114	 ldr         r3, [sp, #0x114]
  01118	e58d3070	 str         r3, [sp, #0x70]

; 725  :                     
; 726  :                     *pNumViews = VRFB_NumDisplayViews( hContext ); 

  0111c	e59d0074	 ldr         r0, [sp, #0x74]
  01120	eb000000	 bl          VRFB_NumDisplayViews
  01124	e58d00ec	 str         r0, [sp, #0xEC]
  01128	e59d20ec	 ldr         r2, [sp, #0xEC]
  0112c	e59d3070	 ldr         r3, [sp, #0x70]
  01130	e5832000	 str         r2, [r3]

; 727  :                     rc = TRUE;

  01134	e3a03001	 mov         r3, #1
  01138	e58d3014	 str         r3, [sp, #0x14]
  0113c		 |$LN10@VRF_IOCont|

; 728  :                     }
; 729  :             }
; 730  :             break;

  0113c	ea000047	 b           |$LN43@VRF_IOCont|
  01140		 |$LN9@VRF_IOCont|

; 731  : 
; 732  :         case IOCTL_VRFB_GETDISPLAYVIEW:
; 733  :             {
; 734  :                 if ((pInBuffer == NULL) || (pOutBuffer == NULL) ||
; 735  :                     (inSize < sizeof(DWORD)) ||
; 736  :                     (outSize < sizeof(HANDLE)))

  01140	e59d310c	 ldr         r3, [sp, #0x10C]
  01144	e3530000	 cmp         r3, #0
  01148	0a000008	 beq         |$LN7@VRF_IOCont|
  0114c	e59d3114	 ldr         r3, [sp, #0x114]
  01150	e3530000	 cmp         r3, #0
  01154	0a000005	 beq         |$LN7@VRF_IOCont|
  01158	e59d3110	 ldr         r3, [sp, #0x110]
  0115c	e3530004	 cmp         r3, #4
  01160	3a000002	 bcc         |$LN7@VRF_IOCont|
  01164	e59d3118	 ldr         r3, [sp, #0x118]
  01168	e3530004	 cmp         r3, #4
  0116c	2a000002	 bcs         |$LN8@VRF_IOCont|
  01170		 |$LN7@VRF_IOCont|

; 737  :                     {
; 738  :                     SetLastError(ERROR_INVALID_PARAMETER);

  01170	e3a00057	 mov         r0, #0x57
  01174	eb000000	 bl          SetLastError

; 739  :                     }
; 740  :                 else

  01178	ea00000f	 b           |$LN6@VRF_IOCont|
  0117c		 |$LN8@VRF_IOCont|

; 741  :                     {
; 742  :                     HANDLE  hContext = (HANDLE) context;

  0117c	e59d3104	 ldr         r3, [sp, #0x104]
  01180	e58d307c	 str         r3, [sp, #0x7C]

; 743  :                     DWORD  *dwIndex = (DWORD*)pInBuffer;

  01184	e59d310c	 ldr         r3, [sp, #0x10C]
  01188	e58d3080	 str         r3, [sp, #0x80]

; 744  :                     HANDLE *hView = (HANDLE*)pOutBuffer;

  0118c	e59d3114	 ldr         r3, [sp, #0x114]
  01190	e58d3078	 str         r3, [sp, #0x78]

; 745  :                     
; 746  :                     *hView = VRFB_GetDisplayView( hContext, *dwIndex );

  01194	e59d3080	 ldr         r3, [sp, #0x80]
  01198	e5931000	 ldr         r1, [r3]
  0119c	e59d007c	 ldr         r0, [sp, #0x7C]
  011a0	eb000000	 bl          VRFB_GetDisplayView
  011a4	e58d00f0	 str         r0, [sp, #0xF0]
  011a8	e59d20f0	 ldr         r2, [sp, #0xF0]
  011ac	e59d3078	 ldr         r3, [sp, #0x78]
  011b0	e5832000	 str         r2, [r3]

; 747  :                     rc = TRUE;

  011b4	e3a03001	 mov         r3, #1
  011b8	e58d3014	 str         r3, [sp, #0x14]
  011bc		 |$LN6@VRF_IOCont|

; 748  :                     }
; 749  :             }
; 750  :             break;

  011bc	ea000027	 b           |$LN43@VRF_IOCont|
  011c0		 |$LN5@VRF_IOCont|

; 751  :  
; 752  :         case IOCTL_VRFB_GETDISPLAYVIEWINFO:
; 753  :             {
; 754  :                 if ((pInBuffer == NULL) || (pOutBuffer == NULL) ||
; 755  :                     (inSize < sizeof(IOCTL_VRFB_GETDISPLAYVIEWINFO_IN)) ||
; 756  :                     (outSize < sizeof(VRFB_VIEW_INFO)))

  011c0	e59d310c	 ldr         r3, [sp, #0x10C]
  011c4	e3530000	 cmp         r3, #0
  011c8	0a000008	 beq         |$LN3@VRF_IOCont|
  011cc	e59d3114	 ldr         r3, [sp, #0x114]
  011d0	e3530000	 cmp         r3, #0
  011d4	0a000005	 beq         |$LN3@VRF_IOCont|
  011d8	e59d3110	 ldr         r3, [sp, #0x110]
  011dc	e353000c	 cmp         r3, #0xC
  011e0	3a000002	 bcc         |$LN3@VRF_IOCont|
  011e4	e59d3118	 ldr         r3, [sp, #0x118]
  011e8	e3530040	 cmp         r3, #0x40
  011ec	2a000002	 bcs         |$LN4@VRF_IOCont|
  011f0		 |$LN3@VRF_IOCont|

; 757  :                     {
; 758  :                     SetLastError(ERROR_INVALID_PARAMETER);

  011f0	e3a00057	 mov         r0, #0x57
  011f4	eb000000	 bl          SetLastError

; 759  :                     }
; 760  :                 else

  011f8	ea000014	 b           |$LN2@VRF_IOCont|
  011fc		 |$LN4@VRF_IOCont|

; 761  :                     {
; 762  :                     HANDLE                            hContext = (HANDLE) context;

  011fc	e59d3104	 ldr         r3, [sp, #0x104]
  01200	e58d308c	 str         r3, [sp, #0x8C]

; 763  :                     IOCTL_VRFB_GETDISPLAYVIEWINFO_IN *pInfo = (IOCTL_VRFB_GETDISPLAYVIEWINFO_IN*)pInBuffer;

  01204	e59d310c	 ldr         r3, [sp, #0x10C]
  01208	e58d3088	 str         r3, [sp, #0x88]

; 764  :                     VRFB_VIEW_INFO                   *pViewInfo = (VRFB_VIEW_INFO*)pOutBuffer;

  0120c	e59d3114	 ldr         r3, [sp, #0x114]
  01210	e58d3084	 str         r3, [sp, #0x84]

; 765  :                     
; 766  :                     rc = VRFB_GetDisplayViewInfo( hContext, 
; 767  :                                                   pInfo->dwIndex,
; 768  :                                                   pInfo->dwRotateAngle,
; 769  :                                                   pInfo->bMirror,
; 770  :                                                   pViewInfo );

  01214	e59d3084	 ldr         r3, [sp, #0x84]
  01218	e58d3000	 str         r3, [sp]
  0121c	e59d3088	 ldr         r3, [sp, #0x88]
  01220	e2833008	 add         r3, r3, #8
  01224	e5933000	 ldr         r3, [r3]
  01228	e59d2088	 ldr         r2, [sp, #0x88]
  0122c	e2822004	 add         r2, r2, #4
  01230	e5922000	 ldr         r2, [r2]
  01234	e59d1088	 ldr         r1, [sp, #0x88]
  01238	e5911000	 ldr         r1, [r1]
  0123c	e59d008c	 ldr         r0, [sp, #0x8C]
  01240	eb000000	 bl          VRFB_GetDisplayViewInfo
  01244	e58d00f4	 str         r0, [sp, #0xF4]
  01248	e59d30f4	 ldr         r3, [sp, #0xF4]
  0124c	e58d3014	 str         r3, [sp, #0x14]
  01250		 |$LN2@VRF_IOCont|

; 771  :                     }
; 772  :             }
; 773  :             break;

  01250	ea000002	 b           |$LN43@VRF_IOCont|
  01254		 |$LN1@VRF_IOCont|

; 774  :  
; 775  :         default:
; 776  :             DEBUGMSG(ZONE_WARNING, (
; 777  :                 L"VRFB: Unknown IOControl = 0x%08x\r\n",
; 778  :                 code
; 779  :                 ));

  01254	e59d1108	 ldr         r1, [sp, #0x108]
  01258	e59f0050	 ldr         r0, [pc, #0x50]
  0125c	eb000000	 bl          NKDbgPrintfW
  01260		 |$LN43@VRF_IOCont|
  01260		 |$cleanUp$45174|

; 780  :    
; 781  :         }
; 782  : 
; 783  : cleanUp:
; 784  :     DEBUGMSG(ZONE_FUNCTION, (L"-VRF_IOControl(rc = %d)\r\n", rc));

  01260	e59f3044	 ldr         r3, [pc, #0x44]
  01264	e5933440	 ldr         r3, [r3, #0x440]
  01268	e3130004	 tst         r3, #4
  0126c	0a000005	 beq         |$LN57@VRF_IOCont|
  01270	e59d1014	 ldr         r1, [sp, #0x14]
  01274	e59f002c	 ldr         r0, [pc, #0x2C]
  01278	eb000000	 bl          NKDbgPrintfW
  0127c	e3a03001	 mov         r3, #1
  01280	e58d30f8	 str         r3, [sp, #0xF8]
  01284	ea000001	 b           |$LN58@VRF_IOCont|
  01288		 |$LN57@VRF_IOCont|
  01288	e3a03000	 mov         r3, #0
  0128c	e58d30f8	 str         r3, [sp, #0xF8]
  01290		 |$LN58@VRF_IOCont|

; 785  :     return rc;

  01290	e59d3014	 ldr         r3, [sp, #0x14]
  01294	e58d30b0	 str         r3, [sp, #0xB0]

; 786  : }

  01298	e59d00b0	 ldr         r0, [sp, #0xB0]
  0129c	e28dd0fc	 add         sp, sp, #0xFC
  012a0	e89d6000	 ldmia       sp, {sp, lr}
  012a4	e12fff1e	 bx          lr
  012a8		 |$LN77@VRF_IOCont|
  012a8		 |$LN78@VRF_IOCont|
  012a8	00000000	 DCD         |??_C@_1DE@PCKBCMGD@?$AA?9?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  012ac		 |$LN79@VRF_IOCont|
  012ac	00000000	 DCD         |dpCurSettings|
  012b0		 |$LN80@VRF_IOCont|
  012b0	00000000	 DCD         |??_C@_1EG@OCNGLCIO@?$AAV?$AAR?$AAF?$AAB?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  012b4		 |$LN81@VRF_IOCont|
  012b4	00000000	 DCD         |VRFB_GetDisplayViewInfo|
  012b8		 |$LN82@VRF_IOCont|
  012b8	00000000	 DCD         |VRFB_GetDisplayView|
  012bc		 |$LN83@VRF_IOCont|
  012bc	00000000	 DCD         |VRFB_NumDisplayViews|
  012c0		 |$LN84@VRF_IOCont|
  012c0	00000000	 DCD         |VRFB_UpdateView|
  012c4		 |$LN85@VRF_IOCont|
  012c4	00000000	 DCD         |VRFB_RotateView|
  012c8		 |$LN86@VRF_IOCont|
  012c8	00000000	 DCD         |VRFB_GetViewInfo|
  012cc		 |$LN87@VRF_IOCont|
  012cc	00000000	 DCD         |VRFB_ReleaseView|
  012d0		 |$LN88@VRF_IOCont|
  012d0	00000000	 DCD         |VRFB_AllocateView|
  012d4		 |$LN89@VRF_IOCont|
  012d4	00000000	 DCD         |DEVICE_IFC_VRFB_GUID|
  012d8		 |$LN90@VRF_IOCont|
  012d8	00000000	 DCD         |??_C@_1OG@KIDJKGDD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@|
  012dc		 |$LN91@VRF_IOCont|
  012dc	00221c10	 DCD         0x221c10
  012e0		 |$LN92@VRF_IOCont|
  012e0	00221c08	 DCD         0x221c08
  012e4		 |$LN93@VRF_IOCont|
  012e4	00221c04	 DCD         0x221c04
  012e8		 |$LN94@VRF_IOCont|
  012e8	00221c0c	 DCD         0x221c0c
  012ec		 |$LN95@VRF_IOCont|
  012ec	00000000	 DCD         |??_C@_1GA@KEDPOCFH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@|
  012f0		 |$LN96@VRF_IOCont|
  012f0	76726649	 DCD         0x76726649
  012f4		 |$LN97@VRF_IOCont|
  012f4	00000000	 DCD         |??_C@_1IC@HFFPKDBH@?$AA?$CL?$AAV?$AAR?$AAF?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0@|
  012f8		 |$M45935|

			 ENDP  ; |VRF_IOControl|

	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T45964| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M45961|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00008	e3a0000c	 mov         r0, #0xC
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 375  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M45962|

			 ENDP  ; |GetCurrentProcessId|

	EXPORT	|??_C@_1EK@BBMLBEGI@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAh?$AAV?$AAi?$AAe?$AAw?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@LCFEJHCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAa?$AAv?$AAa@| [ DATA ] ; `string'
	EXPORT	|DebugPrintRegs|
	EXPORT	|??_C@_1NA@DAGAPLIE@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@CIAAPEHE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@PKFLADDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@EGMOFIMC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@BAENEAMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@GOOHHJMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@ELCAIIJP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@KNKIGIDH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@NDADAHJO@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	IMPORT	|FreePhysMem|
	IMPORT	|HalContextUpdateDirtyRegister|
	IMPORT	|AllocPhysMem|

  00028			 AREA	 |.pdata|, PDATA
|$T46001| DCD	|$LN47@VRFB_Alloc|
	DCD	0x4001d304
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\vrfb\omap_vrfb.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@BBMLBEGI@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAh?$AAV?$AAi?$AAe?$AAw?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, "("
	DCB	0x0, "h", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@LCFEJHCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAa?$AAv?$AAa@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "N", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "v"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "v", 0x0, "i", 0x0, "e", 0x0, "w"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NA@DAGAPLIE@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "V"
	DCB	0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x"
	DCB	0x0, "t", 0x0, " ", 0x0, "#", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ":", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "v"
	DCB	0x0, "a", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@CIAAPEHE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "C", 0x0, "e", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "M", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, "A", 0x0, "t", 0x0, "t", 0x0, "r", 0x0, "i"
	DCB	0x0, "b", 0x0, "u", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "#", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@PKFLADDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x"
	DCB	0x0, "t", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@EGMOFIMC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "v", 0x0, "i"
	DCB	0x0, "e", 0x0, "w", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@BAENEAMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s"
	DCB	0x0, "i", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "v", 0x0, "i"
	DCB	0x0, "e", 0x0, "w", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@GOOHHJMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "h", 0x0, "e", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "w", 0x0, "i", 0x0, "d", 0x0, "t", 0x0, "h"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@ELCAIIJP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "i", 0x0, "x"
	DCB	0x0, "e", 0x0, "l", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@KNKIGIDH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@NDADAHJO@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  012f8			 AREA	 |.text|, CODE, ARM

  012f8		 |VRFB_AllocateView| PROC

; 797  : {

  012f8		 |$LN47@VRFB_Alloc|
  012f8	e1a0c00d	 mov         r12, sp
  012fc	e92d000f	 stmdb       sp!, {r0 - r3}
  01300	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  01304	e24dd084	 sub         sp, sp, #0x84
  01308		 |$M45998|

; 798  :     HANDLE     hView = NULL;

  01308	e3a03000	 mov         r3, #0
  0130c	e58d3020	 str         r3, [sp, #0x20]

; 799  :     Instance_t *pInstance = (Instance_t*)hContext;

  01310	e59d3094	 ldr         r3, [sp, #0x94]
  01314	e58d301c	 str         r3, [sp, #0x1C]

; 800  :     Device_t   *pDevice;
; 801  :     DWORD       index;
; 802  :     DWORD       dwImageWidth,
; 803  :                 dwImageHeight;
; 804  :     VOID       *pMem = NULL;

  01318	e3a03000	 mov         r3, #0
  0131c	e58d3010	 str         r3, [sp, #0x10]

; 805  :     DWORD       dwBufferVirtAddr = 0;

  01320	e3a03000	 mov         r3, #0
  01324	e58d3024	 str         r3, [sp, #0x24]

; 806  : 
; 807  :     DEBUGMSG(ZONE_FUNCTION, (
; 808  :         L"+VRFB_AllocateView(0x%08x, %d, %d, %d, 0x%08x)\r\n", hContext, dwPixelSize, dwWidth, dwHeight, dwBufferPhysAddr
; 809  :         ));

  01328	e59f36e0	 ldr         r3, [pc, #0x6E0]
  0132c	e5933440	 ldr         r3, [r3, #0x440]
  01330	e3130004	 tst         r3, #4
  01334	0a00000b	 beq         |$LN21@VRFB_Alloc|
  01338	e59d30a4	 ldr         r3, [sp, #0xA4]
  0133c	e58d3004	 str         r3, [sp, #4]
  01340	e59d30a0	 ldr         r3, [sp, #0xA0]
  01344	e58d3000	 str         r3, [sp]
  01348	e59d309c	 ldr         r3, [sp, #0x9C]
  0134c	e59d2098	 ldr         r2, [sp, #0x98]
  01350	e59d1094	 ldr         r1, [sp, #0x94]
  01354	e59f06e4	 ldr         r0, [pc, #0x6E4]
  01358	eb000000	 bl          NKDbgPrintfW
  0135c	e3a03001	 mov         r3, #1
  01360	e58d3044	 str         r3, [sp, #0x44]
  01364	ea000001	 b           |$LN22@VRFB_Alloc|
  01368		 |$LN21@VRFB_Alloc|
  01368	e3a03000	 mov         r3, #0
  0136c	e58d3044	 str         r3, [sp, #0x44]
  01370		 |$LN22@VRFB_Alloc|

; 810  : 
; 811  :     // Check if we get correct context
; 812  :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  01370	e59d301c	 ldr         r3, [sp, #0x1C]
  01374	e3530000	 cmp         r3, #0
  01378	0a000004	 beq         |$LN17@VRFB_Alloc|
  0137c	e59d301c	 ldr         r3, [sp, #0x1C]
  01380	e5932000	 ldr         r2, [r3]
  01384	e59f36b0	 ldr         r3, [pc, #0x6B0]
  01388	e1520003	 cmp         r2, r3
  0138c	0a00000b	 beq         |$LN18@VRFB_Alloc|
  01390		 |$LN17@VRFB_Alloc|

; 813  :         {
; 814  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_AllocateView: "
; 815  :             L"Incorrect context param\r\n"
; 816  :             ));

  01390	e59f3678	 ldr         r3, [pc, #0x678]
  01394	e5933440	 ldr         r3, [r3, #0x440]
  01398	e3130001	 tst         r3, #1
  0139c	0a000004	 beq         |$LN23@VRFB_Alloc|
  013a0	e59f0690	 ldr         r0, [pc, #0x690]
  013a4	eb000000	 bl          NKDbgPrintfW
  013a8	e3a03001	 mov         r3, #1
  013ac	e58d3048	 str         r3, [sp, #0x48]
  013b0	ea000001	 b           |$LN24@VRFB_Alloc|
  013b4		 |$LN23@VRFB_Alloc|
  013b4	e3a03000	 mov         r3, #0
  013b8	e58d3048	 str         r3, [sp, #0x48]
  013bc		 |$LN24@VRFB_Alloc|

; 817  :         goto cleanUp;

  013bc	ea00016e	 b           |$cleanUp$45331|
  013c0		 |$LN18@VRFB_Alloc|

; 818  :         }
; 819  : 
; 820  :     //  Get Device
; 821  :     pDevice = pInstance->pDevice;

  013c0	e59d301c	 ldr         r3, [sp, #0x1C]
  013c4	e2833004	 add         r3, r3, #4
  013c8	e5933000	 ldr         r3, [r3]
  013cc	e58d300c	 str         r3, [sp, #0xC]

; 822  : 
; 823  :     //  Validate parameters
; 824  :     if( (dwPixelSize != VRFB_PIXELSIZE_1B) && (dwPixelSize != VRFB_PIXELSIZE_2B) && (dwPixelSize != VRFB_PIXELSIZE_4B) )

  013d0	e59d3098	 ldr         r3, [sp, #0x98]
  013d4	e3530000	 cmp         r3, #0
  013d8	0a000011	 beq         |$LN16@VRFB_Alloc|
  013dc	e59d3098	 ldr         r3, [sp, #0x98]
  013e0	e3530001	 cmp         r3, #1
  013e4	0a00000e	 beq         |$LN16@VRFB_Alloc|
  013e8	e59d3098	 ldr         r3, [sp, #0x98]
  013ec	e3530002	 cmp         r3, #2
  013f0	0a00000b	 beq         |$LN16@VRFB_Alloc|

; 825  :         {
; 826  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_AllocateView: "
; 827  :             L"Invalid pixel size\r\n"
; 828  :             ));

  013f4	e59f3614	 ldr         r3, [pc, #0x614]
  013f8	e5933440	 ldr         r3, [r3, #0x440]
  013fc	e3130001	 tst         r3, #1
  01400	0a000004	 beq         |$LN25@VRFB_Alloc|
  01404	e59f0628	 ldr         r0, [pc, #0x628]
  01408	eb000000	 bl          NKDbgPrintfW
  0140c	e3a03001	 mov         r3, #1
  01410	e58d304c	 str         r3, [sp, #0x4C]
  01414	ea000001	 b           |$LN26@VRFB_Alloc|
  01418		 |$LN25@VRFB_Alloc|
  01418	e3a03000	 mov         r3, #0
  0141c	e58d304c	 str         r3, [sp, #0x4C]
  01420		 |$LN26@VRFB_Alloc|

; 829  :         goto cleanUp;

  01420	ea000155	 b           |$cleanUp$45331|
  01424		 |$LN16@VRFB_Alloc|

; 830  :         }
; 831  : 
; 832  :     //  Ensure image width and height are multiple of page size
; 833  :     dwImageWidth  = IMAGE_SIZE_ROUNDING(dwWidth, DEFAULT_PAGE_WIDTH);

  01424	e59d109c	 ldr         r1, [sp, #0x9C]
  01428	e3a00010	 mov         r0, #0x10
  0142c	eb000000	 bl          __rt_udiv
  01430	e3510000	 cmp         r1, #0
  01434	1a000002	 bne         |$LN27@VRFB_Alloc|
  01438	e59d309c	 ldr         r3, [sp, #0x9C]
  0143c	e58d3050	 str         r3, [sp, #0x50]
  01440	ea000006	 b           |$LN28@VRFB_Alloc|
  01444		 |$LN27@VRFB_Alloc|
  01444	e59d109c	 ldr         r1, [sp, #0x9C]
  01448	e3a00010	 mov         r0, #0x10
  0144c	eb000000	 bl          __rt_udiv
  01450	e3a03010	 mov         r3, #0x10
  01454	e0030390	 mul         r3, r0, r3
  01458	e2833010	 add         r3, r3, #0x10
  0145c	e58d3050	 str         r3, [sp, #0x50]
  01460		 |$LN28@VRFB_Alloc|
  01460	e59d3050	 ldr         r3, [sp, #0x50]
  01464	e58d3014	 str         r3, [sp, #0x14]

; 834  :     dwImageHeight = IMAGE_SIZE_ROUNDING(dwHeight, DEFAULT_PAGE_HEIGHT);

  01468	e59d10a0	 ldr         r1, [sp, #0xA0]
  0146c	e3a00010	 mov         r0, #0x10
  01470	eb000000	 bl          __rt_udiv
  01474	e3510000	 cmp         r1, #0
  01478	1a000002	 bne         |$LN29@VRFB_Alloc|
  0147c	e59d30a0	 ldr         r3, [sp, #0xA0]
  01480	e58d3054	 str         r3, [sp, #0x54]
  01484	ea000006	 b           |$LN30@VRFB_Alloc|
  01488		 |$LN29@VRFB_Alloc|
  01488	e59d10a0	 ldr         r1, [sp, #0xA0]
  0148c	e3a00010	 mov         r0, #0x10
  01490	eb000000	 bl          __rt_udiv
  01494	e3a03010	 mov         r3, #0x10
  01498	e0030390	 mul         r3, r0, r3
  0149c	e2833010	 add         r3, r3, #0x10
  014a0	e58d3054	 str         r3, [sp, #0x54]
  014a4		 |$LN30@VRFB_Alloc|
  014a4	e59d3054	 ldr         r3, [sp, #0x54]
  014a8	e58d3008	 str         r3, [sp, #8]

; 835  : 
; 836  :     if( (dwImageWidth < VRFB_IMAGE_WIDTH_MIN) || (dwImageWidth > VRFB_IMAGE_WIDTH_MAX) || 
; 837  :         (dwImageHeight < VRFB_IMAGE_HEIGHT_MIN) || (dwImageHeight > VRFB_IMAGE_HEIGHT_MAX) )

  014ac	e59d3014	 ldr         r3, [sp, #0x14]
  014b0	e3530040	 cmp         r3, #0x40
  014b4	3a000008	 bcc         |$LN14@VRFB_Alloc|
  014b8	e59d3014	 ldr         r3, [sp, #0x14]
  014bc	e3530b02	 cmp         r3, #2, 22
  014c0	8a000005	 bhi         |$LN14@VRFB_Alloc|
  014c4	e59d3008	 ldr         r3, [sp, #8]
  014c8	e3530040	 cmp         r3, #0x40
  014cc	3a000002	 bcc         |$LN14@VRFB_Alloc|
  014d0	e59d3008	 ldr         r3, [sp, #8]
  014d4	e3530b02	 cmp         r3, #2, 22
  014d8	9a00000b	 bls         |$LN15@VRFB_Alloc|
  014dc		 |$LN14@VRFB_Alloc|

; 838  :         {
; 839  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_AllocateView: "
; 840  :             L"Invalid image height or width\r\n"
; 841  :             ));

  014dc	e59f352c	 ldr         r3, [pc, #0x52C]
  014e0	e5933440	 ldr         r3, [r3, #0x440]
  014e4	e3130001	 tst         r3, #1
  014e8	0a000004	 beq         |$LN31@VRFB_Alloc|
  014ec	e59f053c	 ldr         r0, [pc, #0x53C]
  014f0	eb000000	 bl          NKDbgPrintfW
  014f4	e3a03001	 mov         r3, #1
  014f8	e58d3058	 str         r3, [sp, #0x58]
  014fc	ea000001	 b           |$LN32@VRFB_Alloc|
  01500		 |$LN31@VRFB_Alloc|
  01500	e3a03000	 mov         r3, #0
  01504	e58d3058	 str         r3, [sp, #0x58]
  01508		 |$LN32@VRFB_Alloc|

; 842  :         goto cleanUp;

  01508	ea00011b	 b           |$cleanUp$45331|
  0150c		 |$LN15@VRFB_Alloc|

; 843  :         }
; 844  : 
; 845  : 
; 846  :     //  Check for available context
; 847  :     for( index = 0; index < VRFB_ROTATION_CONTEXTS; index++ )

  0150c	e3a03000	 mov         r3, #0
  01510	e58d3018	 str         r3, [sp, #0x18]
  01514	ea000002	 b           |$LN13@VRFB_Alloc|
  01518		 |$LN12@VRFB_Alloc|
  01518	e59d3018	 ldr         r3, [sp, #0x18]
  0151c	e2833001	 add         r3, r3, #1
  01520	e58d3018	 str         r3, [sp, #0x18]
  01524		 |$LN13@VRFB_Alloc|
  01524	e59d3018	 ldr         r3, [sp, #0x18]
  01528	e353000c	 cmp         r3, #0xC
  0152c	2a000009	 bcs         |$LN11@VRFB_Alloc|

; 848  :     {
; 849  :         //  See if slot is open
; 850  :         if( g_VrfbContextList[index].bInUse == FALSE )

  01530	e59d1018	 ldr         r1, [sp, #0x18]
  01534	e3a03020	 mov         r3, #0x20
  01538	e0020391	 mul         r2, r1, r3
  0153c	e59f34d4	 ldr         r3, [pc, #0x4D4]
  01540	e0833002	 add         r3, r3, r2
  01544	e5933000	 ldr         r3, [r3]
  01548	e3530000	 cmp         r3, #0
  0154c	1a000000	 bne         |$LN10@VRFB_Alloc|

; 851  :             break;

  01550	ea000000	 b           |$LN11@VRFB_Alloc|
  01554		 |$LN10@VRFB_Alloc|

; 852  :     }

  01554	eaffffef	 b           |$LN12@VRFB_Alloc|
  01558		 |$LN11@VRFB_Alloc|

; 853  :     
; 854  :     //  Allocate a context view
; 855  :     if( index < VRFB_ROTATION_CONTEXTS )

  01558	e59d3018	 ldr         r3, [sp, #0x18]
  0155c	e353000c	 cmp         r3, #0xC
  01560	2a000103	 bcs         |$LN9@VRFB_Alloc|

; 856  :     {
; 857  :         BOOL    bResult;
; 858  : 
; 859  :         //  Check given buffer address; NULL indicates to alloc physical memory
; 860  :         if( dwBufferPhysAddr == 0 )

  01564	e59d30a4	 ldr         r3, [sp, #0xA4]
  01568	e3530000	 cmp         r3, #0
  0156c	1a00001e	 bne         |$LN8@VRFB_Alloc|

; 861  :         {
; 862  :             //  Allocate physical memory for view
; 863  :             dwBufferVirtAddr = (DWORD) AllocPhysMem( dwImageWidth*dwImageHeight*PIXEL_SIZE_TO_BYTES(dwPixelSize),
; 864  :                                                      PAGE_READWRITE | PAGE_NOCACHE,
; 865  :                                                      0,
; 866  :                                                      0,
; 867  :                                                      &dwBufferPhysAddr );

  01570	e28d30a4	 add         r3, sp, #0xA4
  01574	e58d3000	 str         r3, [sp]
  01578	e3a03000	 mov         r3, #0
  0157c	e3a02000	 mov         r2, #0
  01580	e3a01f81	 mov         r1, #0x81, 30
  01584	e59de014	 ldr         lr, [sp, #0x14]
  01588	e59d0008	 ldr         r0, [sp, #8]
  0158c	e004009e	 mul         r4, lr, r0
  01590	e59de098	 ldr         lr, [sp, #0x98]
  01594	e3a00001	 mov         r0, #1
  01598	e1a00e10	 mov         r0, r0, lsl lr
  0159c	e0000094	 mul         r0, r4, r0
  015a0	eb000000	 bl          AllocPhysMem
  015a4	e58d005c	 str         r0, [sp, #0x5C]
  015a8	e59d305c	 ldr         r3, [sp, #0x5C]
  015ac	e58d3024	 str         r3, [sp, #0x24]

; 868  : 
; 869  :             if( dwBufferVirtAddr == 0 )

  015b0	e59d3024	 ldr         r3, [sp, #0x24]
  015b4	e3530000	 cmp         r3, #0
  015b8	1a00000b	 bne         |$LN7@VRFB_Alloc|

; 870  :             {
; 871  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_AllocateView: "
; 872  :                      L"Failed to allocate physical memory for view buffer\n"
; 873  :                     ));

  015bc	e59f344c	 ldr         r3, [pc, #0x44C]
  015c0	e5933440	 ldr         r3, [r3, #0x440]
  015c4	e3130001	 tst         r3, #1
  015c8	0a000004	 beq         |$LN33@VRFB_Alloc|
  015cc	e59f0458	 ldr         r0, [pc, #0x458]
  015d0	eb000000	 bl          NKDbgPrintfW
  015d4	e3a03001	 mov         r3, #1
  015d8	e58d3060	 str         r3, [sp, #0x60]
  015dc	ea000001	 b           |$LN34@VRFB_Alloc|
  015e0		 |$LN33@VRFB_Alloc|
  015e0	e3a03000	 mov         r3, #0
  015e4	e58d3060	 str         r3, [sp, #0x60]
  015e8		 |$LN34@VRFB_Alloc|

; 874  :                 goto cleanUp;

  015e8	ea0000e3	 b           |$cleanUp$45331|
  015ec		 |$LN7@VRFB_Alloc|
  015ec		 |$LN8@VRFB_Alloc|

; 875  :             }
; 876  :         } 
; 877  : 
; 878  :         //  Reserve virtual memory for the VRFB view
; 879  :         pMem = VirtualAlloc( NULL, 
; 880  :                              VRFB_VIEW_SIZE, 
; 881  :                              MEM_RESERVE, 
; 882  :                              PAGE_NOACCESS );

  015ec	e3a03001	 mov         r3, #1
  015f0	e3a02a02	 mov         r2, #2, 20
  015f4	e3a01401	 mov         r1, #1, 8
  015f8	e3a00000	 mov         r0, #0
  015fc	eb000000	 bl          VirtualAlloc
  01600	e58d0064	 str         r0, [sp, #0x64]
  01604	e59d3064	 ldr         r3, [sp, #0x64]
  01608	e58d3010	 str         r3, [sp, #0x10]

; 883  :                                                     
; 884  :         if( pMem == NULL )

  0160c	e59d3010	 ldr         r3, [sp, #0x10]
  01610	e3530000	 cmp         r3, #0
  01614	1a00000b	 bne         |$LN6@VRFB_Alloc|

; 885  :         {
; 886  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_AllocateView: "
; 887  :                  L"Failed reserve view memory\r\n"
; 888  :                 ));

  01618	e59f33f0	 ldr         r3, [pc, #0x3F0]
  0161c	e5933440	 ldr         r3, [r3, #0x440]
  01620	e3130001	 tst         r3, #1
  01624	0a000004	 beq         |$LN35@VRFB_Alloc|
  01628	e59f03f8	 ldr         r0, [pc, #0x3F8]
  0162c	eb000000	 bl          NKDbgPrintfW
  01630	e3a03001	 mov         r3, #1
  01634	e58d3068	 str         r3, [sp, #0x68]
  01638	ea000001	 b           |$LN36@VRFB_Alloc|
  0163c		 |$LN35@VRFB_Alloc|
  0163c	e3a03000	 mov         r3, #0
  01640	e58d3068	 str         r3, [sp, #0x68]
  01644		 |$LN36@VRFB_Alloc|

; 889  :             goto cleanUp;

  01644	ea0000cc	 b           |$cleanUp$45331|
  01648		 |$LN6@VRFB_Alloc|

; 890  :         }
; 891  : 
; 892  :         //  Associate to the rotation angle 0 context by default
; 893  :         bResult = VirtualCopy( pMem, 
; 894  :                                (VOID*)(g_VrfbContextList[index].dwPhysicalAddr/256), 
; 895  :                                VRFB_VIEW_SIZE, 
; 896  :                                PAGE_READWRITE | PAGE_PHYSICAL | PAGE_NOCACHE );

  01648	e3a05c06	 mov         r5, #6, 24
  0164c	e3855004	 orr         r5, r5, #4
  01650	e3a04401	 mov         r4, #1, 8
  01654	e59d1018	 ldr         r1, [sp, #0x18]
  01658	e3a03020	 mov         r3, #0x20
  0165c	e0020391	 mul         r2, r1, r3
  01660	e59f33b0	 ldr         r3, [pc, #0x3B0]
  01664	e0833002	 add         r3, r3, r2
  01668	e2833010	 add         r3, r3, #0x10
  0166c	e5931000	 ldr         r1, [r3]
  01670	e3a00c01	 mov         r0, #1, 24
  01674	eb000000	 bl          __rt_udiv
  01678	e1a01000	 mov         r1, r0
  0167c	e59d0010	 ldr         r0, [sp, #0x10]
  01680	e1a02004	 mov         r2, r4
  01684	e1a03005	 mov         r3, r5
  01688	eb000000	 bl          VirtualCopy
  0168c	e58d006c	 str         r0, [sp, #0x6C]
  01690	e59d306c	 ldr         r3, [sp, #0x6C]
  01694	e58d3028	 str         r3, [sp, #0x28]

; 897  : 
; 898  :         if( bResult == FALSE )

  01698	e59d3028	 ldr         r3, [sp, #0x28]
  0169c	e3530000	 cmp         r3, #0
  016a0	1a00000b	 bne         |$LN5@VRFB_Alloc|

; 899  :         {
; 900  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_AllocateView: "
; 901  :                  L"Failed map context memory\r\n"
; 902  :                 ));

  016a4	e59f3364	 ldr         r3, [pc, #0x364]
  016a8	e5933440	 ldr         r3, [r3, #0x440]
  016ac	e3130001	 tst         r3, #1
  016b0	0a000004	 beq         |$LN37@VRFB_Alloc|
  016b4	e59f0368	 ldr         r0, [pc, #0x368]
  016b8	eb000000	 bl          NKDbgPrintfW
  016bc	e3a03001	 mov         r3, #1
  016c0	e58d3070	 str         r3, [sp, #0x70]
  016c4	ea000001	 b           |$LN38@VRFB_Alloc|
  016c8		 |$LN37@VRFB_Alloc|
  016c8	e3a03000	 mov         r3, #0
  016cc	e58d3070	 str         r3, [sp, #0x70]
  016d0		 |$LN38@VRFB_Alloc|

; 903  :             goto cleanUp;

  016d0	ea0000a9	 b           |$cleanUp$45331|
  016d4		 |$LN5@VRFB_Alloc|

; 904  :         }
; 905  : 
; 906  :         //  Change the attributes of the buffer for cache write thru
; 907  :         bResult = CeSetMemoryAttributes( pMem, (VOID*)(g_VrfbContextList[index].dwPhysicalAddr/256), VRFB_VIEW_SIZE, PAGE_WRITECOMBINE );

  016d4	e3a05b01	 mov         r5, #1, 22
  016d8	e3a04401	 mov         r4, #1, 8
  016dc	e59d1018	 ldr         r1, [sp, #0x18]
  016e0	e3a03020	 mov         r3, #0x20
  016e4	e0020391	 mul         r2, r1, r3
  016e8	e59f3328	 ldr         r3, [pc, #0x328]
  016ec	e0833002	 add         r3, r3, r2
  016f0	e2833010	 add         r3, r3, #0x10
  016f4	e5931000	 ldr         r1, [r3]
  016f8	e3a00c01	 mov         r0, #1, 24
  016fc	eb000000	 bl          __rt_udiv
  01700	e1a01000	 mov         r1, r0
  01704	e59d0010	 ldr         r0, [sp, #0x10]
  01708	e1a02004	 mov         r2, r4
  0170c	e1a03005	 mov         r3, r5
  01710	eb000000	 bl          CeSetMemoryAttributes
  01714	e58d0074	 str         r0, [sp, #0x74]
  01718	e59d3074	 ldr         r3, [sp, #0x74]
  0171c	e58d3028	 str         r3, [sp, #0x28]

; 908  :         if( bResult == FALSE )

  01720	e59d3028	 ldr         r3, [sp, #0x28]
  01724	e3530000	 cmp         r3, #0
  01728	1a00000c	 bne         |$LN4@VRFB_Alloc|

; 909  :         {
; 910  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_AllocateView: "
; 911  :                  L"Failed CeSetMemoryAttributes for context # %d\r\n", index
; 912  :                 ));

  0172c	e59f32dc	 ldr         r3, [pc, #0x2DC]
  01730	e5933440	 ldr         r3, [r3, #0x440]
  01734	e3130001	 tst         r3, #1
  01738	0a000005	 beq         |$LN39@VRFB_Alloc|
  0173c	e59d1018	 ldr         r1, [sp, #0x18]
  01740	e59f02d8	 ldr         r0, [pc, #0x2D8]
  01744	eb000000	 bl          NKDbgPrintfW
  01748	e3a03001	 mov         r3, #1
  0174c	e58d3078	 str         r3, [sp, #0x78]
  01750	ea000001	 b           |$LN40@VRFB_Alloc|
  01754		 |$LN39@VRFB_Alloc|
  01754	e3a03000	 mov         r3, #0
  01758	e58d3078	 str         r3, [sp, #0x78]
  0175c		 |$LN40@VRFB_Alloc|

; 913  :             goto cleanUp;

  0175c	ea000086	 b           |$cleanUp$45331|
  01760		 |$LN4@VRFB_Alloc|

; 914  :         }
; 915  : 
; 916  :         DEBUGMSG(ZONE_INFO, (L"INFO: VRFB_AllocateView: "
; 917  :              L"Context # %d: va = 0x%08X, pa = 0x%08X, buffer va = 0x%08X, buffer pa = 0x%08X", 
; 918  :              index, pMem, g_VrfbContextList[index].dwPhysicalAddr, dwBufferVirtAddr, dwBufferPhysAddr
; 919  :             ));

  01760	e59f32a8	 ldr         r3, [pc, #0x2A8]
  01764	e5933440	 ldr         r3, [r3, #0x440]
  01768	e3130008	 tst         r3, #8
  0176c	0a000011	 beq         |$LN41@VRFB_Alloc|
  01770	e59d30a4	 ldr         r3, [sp, #0xA4]
  01774	e58d3004	 str         r3, [sp, #4]
  01778	e59d3024	 ldr         r3, [sp, #0x24]
  0177c	e58d3000	 str         r3, [sp]
  01780	e59d1018	 ldr         r1, [sp, #0x18]
  01784	e3a03020	 mov         r3, #0x20
  01788	e0020391	 mul         r2, r1, r3
  0178c	e59f3284	 ldr         r3, [pc, #0x284]
  01790	e0833002	 add         r3, r3, r2
  01794	e2833010	 add         r3, r3, #0x10
  01798	e5933000	 ldr         r3, [r3]
  0179c	e59d2010	 ldr         r2, [sp, #0x10]
  017a0	e59d1018	 ldr         r1, [sp, #0x18]
  017a4	e59f0270	 ldr         r0, [pc, #0x270]
  017a8	eb000000	 bl          NKDbgPrintfW
  017ac	e3a03001	 mov         r3, #1
  017b0	e58d307c	 str         r3, [sp, #0x7C]
  017b4	ea000001	 b           |$LN42@VRFB_Alloc|
  017b8		 |$LN41@VRFB_Alloc|
  017b8	e3a03000	 mov         r3, #0
  017bc	e58d307c	 str         r3, [sp, #0x7C]
  017c0		 |$LN42@VRFB_Alloc|

; 920  :         
; 921  :         //  Update the context table
; 922  :         g_VrfbContextList[index].bInUse = TRUE;                                               

  017c0	e59d1018	 ldr         r1, [sp, #0x18]
  017c4	e3a03020	 mov         r3, #0x20
  017c8	e0020391	 mul         r2, r1, r3
  017cc	e59f3244	 ldr         r3, [pc, #0x244]
  017d0	e0832002	 add         r2, r3, r2
  017d4	e3a03001	 mov         r3, #1
  017d8	e5823000	 str         r3, [r2]

; 923  :         g_VrfbContextList[index].dwWidth = dwWidth;                                               

  017dc	e59d1018	 ldr         r1, [sp, #0x18]
  017e0	e3a03020	 mov         r3, #0x20
  017e4	e0020391	 mul         r2, r1, r3
  017e8	e59f3228	 ldr         r3, [pc, #0x228]
  017ec	e0833002	 add         r3, r3, r2
  017f0	e2832004	 add         r2, r3, #4
  017f4	e59d309c	 ldr         r3, [sp, #0x9C]
  017f8	e5823000	 str         r3, [r2]

; 924  :         g_VrfbContextList[index].dwHeight = dwHeight;                                               

  017fc	e59d1018	 ldr         r1, [sp, #0x18]
  01800	e3a03020	 mov         r3, #0x20
  01804	e0020391	 mul         r2, r1, r3
  01808	e59f3208	 ldr         r3, [pc, #0x208]
  0180c	e0833002	 add         r3, r3, r2
  01810	e2832008	 add         r2, r3, #8
  01814	e59d30a0	 ldr         r3, [sp, #0xA0]
  01818	e5823000	 str         r3, [r2]

; 925  :         g_VrfbContextList[index].dwRotationAngle = VRFB_ROTATE_ANGLE_0;                                               

  0181c	e59d1018	 ldr         r1, [sp, #0x18]
  01820	e3a03020	 mov         r3, #0x20
  01824	e0020391	 mul         r2, r1, r3
  01828	e59f31e8	 ldr         r3, [pc, #0x1E8]
  0182c	e0833002	 add         r3, r3, r2
  01830	e283200c	 add         r2, r3, #0xC
  01834	e3a03000	 mov         r3, #0
  01838	e5823000	 str         r3, [r2]

; 926  :         g_VrfbContextList[index].dwVirtualAddr = (DWORD) pMem;

  0183c	e59d1018	 ldr         r1, [sp, #0x18]
  01840	e3a03020	 mov         r3, #0x20
  01844	e0020391	 mul         r2, r1, r3
  01848	e59f31c8	 ldr         r3, [pc, #0x1C8]
  0184c	e0833002	 add         r3, r3, r2
  01850	e2832014	 add         r2, r3, #0x14
  01854	e59d3010	 ldr         r3, [sp, #0x10]
  01858	e5823000	 str         r3, [r2]

; 927  :         g_VrfbContextList[index].dwBufferPhysAddr = (DWORD) dwBufferPhysAddr;

  0185c	e59d1018	 ldr         r1, [sp, #0x18]
  01860	e3a03020	 mov         r3, #0x20
  01864	e0020391	 mul         r2, r1, r3
  01868	e59f31a8	 ldr         r3, [pc, #0x1A8]
  0186c	e0833002	 add         r3, r3, r2
  01870	e2832018	 add         r2, r3, #0x18
  01874	e59d30a4	 ldr         r3, [sp, #0xA4]
  01878	e5823000	 str         r3, [r2]

; 928  :         g_VrfbContextList[index].dwBufferVirtAddr = (DWORD) dwBufferVirtAddr;

  0187c	e59d1018	 ldr         r1, [sp, #0x18]
  01880	e3a03020	 mov         r3, #0x20
  01884	e0020391	 mul         r2, r1, r3
  01888	e59f3188	 ldr         r3, [pc, #0x188]
  0188c	e0833002	 add         r3, r3, r2
  01890	e283201c	 add         r2, r3, #0x1C
  01894	e59d3024	 ldr         r3, [sp, #0x24]
  01898	e5823000	 str         r3, [r2]

; 929  :         
; 930  :         //  Program the VRFB registers
; 931  :         OUTREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_CONTROL, dwPixelSize|SMS_ROT_CONTROL_PAGEWIDTH(DEFAULT_PAGE_WIDTH)|SMS_ROT_CONTROL_PAGEHEIGHT(DEFAULT_PAGE_HEIGHT));

  0189c	e59d3098	 ldr         r3, [sp, #0x98]
  018a0	e3833040	 orr         r3, r3, #0x40
  018a4	e3830b01	 orr         r0, r3, #1, 22
  018a8	e59d300c	 ldr         r3, [sp, #0xC]
  018ac	e2833024	 add         r3, r3, #0x24
  018b0	e5933000	 ldr         r3, [r3]
  018b4	e283101c	 add         r1, r3, #0x1C
  018b8	e59d2018	 ldr         r2, [sp, #0x18]
  018bc	e3a03010	 mov         r3, #0x10
  018c0	e0030392	 mul         r3, r2, r3
  018c4	e0813003	 add         r3, r1, r3
  018c8	e5830000	 str         r0, [r3]

; 932  :         OUTREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_SIZE, SMS_ROT_SIZE_WIDTH(dwImageWidth)|SMS_ROT_SIZE_HEIGHT(dwImageHeight));

  018cc	e59d2014	 ldr         r2, [sp, #0x14]
  018d0	e3a03c07	 mov         r3, #7, 24
  018d4	e38330ff	 orr         r3, r3, #0xFF
  018d8	e0021003	 and         r1, r2, r3
  018dc	e59d2008	 ldr         r2, [sp, #8]
  018e0	e3a03c07	 mov         r3, #7, 24
  018e4	e38330ff	 orr         r3, r3, #0xFF
  018e8	e0023003	 and         r3, r2, r3
  018ec	e1a03803	 mov         r3, r3, lsl #16
  018f0	e1810003	 orr         r0, r1, r3
  018f4	e59d300c	 ldr         r3, [sp, #0xC]
  018f8	e2833024	 add         r3, r3, #0x24
  018fc	e5933000	 ldr         r3, [r3]
  01900	e283101c	 add         r1, r3, #0x1C
  01904	e59d2018	 ldr         r2, [sp, #0x18]
  01908	e3a03010	 mov         r3, #0x10
  0190c	e0030392	 mul         r3, r2, r3
  01910	e0813003	 add         r3, r1, r3
  01914	e2833004	 add         r3, r3, #4
  01918	e5830000	 str         r0, [r3]

; 933  :         OUTREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_PHYSICAL_BA, dwBufferPhysAddr);

  0191c	e59d300c	 ldr         r3, [sp, #0xC]
  01920	e2833024	 add         r3, r3, #0x24
  01924	e5933000	 ldr         r3, [r3]
  01928	e283101c	 add         r1, r3, #0x1C
  0192c	e59d2018	 ldr         r2, [sp, #0x18]
  01930	e3a03010	 mov         r3, #0x10
  01934	e0030392	 mul         r3, r2, r3
  01938	e0813003	 add         r3, r1, r3
  0193c	e2832008	 add         r2, r3, #8
  01940	e59d30a4	 ldr         r3, [sp, #0xA4]
  01944	e5823000	 str         r3, [r2]

; 934  :         
; 935  :         DebugPrintRegs(pDevice->pVRFBRegs, index);

  01948	e59d1018	 ldr         r1, [sp, #0x18]
  0194c	e59d300c	 ldr         r3, [sp, #0xC]
  01950	e2833024	 add         r3, r3, #0x24
  01954	e5930000	 ldr         r0, [r3]
  01958	eb000000	 bl          DebugPrintRegs

; 936  : 
; 937  :         // mark VRFB registers dirty, to update backup copy in OAL
; 938  :         HalContextUpdateDirtyRegister(HAL_CONTEXTSAVE_VRFB);

  0195c	e3a00080	 mov         r0, #0x80
  01960	eb000000	 bl          HalContextUpdateDirtyRegister

; 939  : 
; 940  :         //  A view handle is just the index of the VRFB context
; 941  :         hView = (HANDLE)(VRFB_VIEW_HANDLE_BASE + index);  

  01964	e59d3018	 ldr         r3, [sp, #0x18]
  01968	e2833206	 add         r3, r3, #6, 4
  0196c	e58d3020	 str         r3, [sp, #0x20]

; 942  :     }
; 943  :     else

  01970	ea000001	 b           |$LN3@VRFB_Alloc|
  01974		 |$LN9@VRFB_Alloc|

; 944  :     {
; 945  :         DEBUGMSG(ZONE_WARNING, (L"ERROR: VRFB_AllocateView: "
; 946  :             L"No available views\r\n"
; 947  :             ));

  01974	e59f0098	 ldr         r0, [pc, #0x98]
  01978	eb000000	 bl          NKDbgPrintfW
  0197c		 |$LN3@VRFB_Alloc|
  0197c		 |$cleanUp$45331|

; 948  :         goto cleanUp;
; 949  :     }
; 950  :     
; 951  : cleanUp:    
; 952  :     //  Clean up failure conditions
; 953  :     if( hView == NULL && dwBufferVirtAddr != 0 )

  0197c	e59d3020	 ldr         r3, [sp, #0x20]
  01980	e3530000	 cmp         r3, #0
  01984	1a000004	 bne         |$LN2@VRFB_Alloc|
  01988	e59d3024	 ldr         r3, [sp, #0x24]
  0198c	e3530000	 cmp         r3, #0
  01990	0a000001	 beq         |$LN2@VRFB_Alloc|

; 954  :         FreePhysMem( (VOID*)dwBufferVirtAddr );

  01994	e59d0024	 ldr         r0, [sp, #0x24]
  01998	eb000000	 bl          FreePhysMem
  0199c		 |$LN2@VRFB_Alloc|

; 955  : 
; 956  :     if( hView == NULL && pMem != NULL )

  0199c	e59d3020	 ldr         r3, [sp, #0x20]
  019a0	e3530000	 cmp         r3, #0
  019a4	1a000006	 bne         |$LN1@VRFB_Alloc|
  019a8	e59d3010	 ldr         r3, [sp, #0x10]
  019ac	e3530000	 cmp         r3, #0
  019b0	0a000003	 beq         |$LN1@VRFB_Alloc|

; 957  :         VirtualFree( pMem, 0, MEM_RELEASE );

  019b4	e3a02902	 mov         r2, #2, 18
  019b8	e3a01000	 mov         r1, #0
  019bc	e59d0010	 ldr         r0, [sp, #0x10]
  019c0	eb000000	 bl          VirtualFree
  019c4		 |$LN1@VRFB_Alloc|

; 958  :         
; 959  :     //  Return result
; 960  :     DEBUGMSG(ZONE_FUNCTION, (L"-VRFB_AllocateView(hView = 0x%08X)\r\n", hView));

  019c4	e59f3044	 ldr         r3, [pc, #0x44]
  019c8	e5933440	 ldr         r3, [r3, #0x440]
  019cc	e3130004	 tst         r3, #4
  019d0	0a000005	 beq         |$LN43@VRFB_Alloc|
  019d4	e59d1020	 ldr         r1, [sp, #0x20]
  019d8	e59f002c	 ldr         r0, [pc, #0x2C]
  019dc	eb000000	 bl          NKDbgPrintfW
  019e0	e3a03001	 mov         r3, #1
  019e4	e58d3080	 str         r3, [sp, #0x80]
  019e8	ea000001	 b           |$LN44@VRFB_Alloc|
  019ec		 |$LN43@VRFB_Alloc|
  019ec	e3a03000	 mov         r3, #0
  019f0	e58d3080	 str         r3, [sp, #0x80]
  019f4		 |$LN44@VRFB_Alloc|

; 961  :     return hView;

  019f4	e59d3020	 ldr         r3, [sp, #0x20]
  019f8	e58d3040	 str         r3, [sp, #0x40]

; 962  : }

  019fc	e59d0040	 ldr         r0, [sp, #0x40]
  01a00	e28dd084	 add         sp, sp, #0x84
  01a04	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  01a08	e12fff1e	 bx          lr
  01a0c		 |$LN48@VRFB_Alloc|
  01a0c		 |$LN49@VRFB_Alloc|
  01a0c	00000000	 DCD         |??_C@_1EK@BBMLBEGI@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAh?$AAV?$AAi?$AAe?$AAw?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@|
  01a10		 |$LN50@VRFB_Alloc|
  01a10	00000000	 DCD         |dpCurSettings|
  01a14		 |$LN51@VRFB_Alloc|
  01a14	00000000	 DCD         |??_C@_1FO@LCFEJHCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAa?$AAv?$AAa@|
  01a18		 |$LN52@VRFB_Alloc|
  01a18	00000000	 DCD         |g_VrfbContextList|
  01a1c		 |$LN53@VRFB_Alloc|
  01a1c	00000000	 DCD         |??_C@_1NA@DAGAPLIE@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt@|
  01a20		 |$LN54@VRFB_Alloc|
  01a20	00000000	 DCD         |??_C@_1JE@CIAAPEHE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@|
  01a24		 |$LN55@VRFB_Alloc|
  01a24	00000000	 DCD         |??_C@_1GM@PKFLADDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@|
  01a28		 |$LN56@VRFB_Alloc|
  01a28	00000000	 DCD         |??_C@_1GO@EGMOFIMC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@|
  01a2c		 |$LN57@VRFB_Alloc|
  01a2c	00000000	 DCD         |??_C@_1JM@BAENEAMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd@|
  01a30		 |$LN58@VRFB_Alloc|
  01a30	00000000	 DCD         |??_C@_1HE@GOOHHJMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi@|
  01a34		 |$LN59@VRFB_Alloc|
  01a34	00000000	 DCD         |??_C@_1FO@ELCAIIJP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi@|
  01a38		 |$LN60@VRFB_Alloc|
  01a38	00000000	 DCD         |??_C@_1GI@KNKIGIDH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr@|
  01a3c		 |$LN61@VRFB_Alloc|
  01a3c	76726649	 DCD         0x76726649
  01a40		 |$LN62@VRFB_Alloc|
  01a40	00000000	 DCD         |??_C@_1GC@NDADAHJO@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF@|
  01a44		 |$M45999|

			 ENDP  ; |VRFB_AllocateView|

	EXPORT	|??_C@_1EE@DNPFGJHC@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@GLMGJJIA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@FFNIIJDJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@LENPIEDA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@FGDCHBAO@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| [ DATA ] ; `string'

  00030			 AREA	 |.pdata|, PDATA
|$T46032| DCD	|$LN21@VRFB_Relea|
	DCD	0x4000d304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DNPFGJHC@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, "(", 0x0, "b"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "l", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@GLMGJJIA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "v", 0x0, "i", 0x0, "e", 0x0, "w"
	DCB	0x0, " ", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@FFNIIJDJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "a", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, " ", 0x0, "v", 0x0, "i"
	DCB	0x0, "e", 0x0, "w", 0x0, " ", 0x0, "#", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@LENPIEDA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@FGDCHBAO@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01a44			 AREA	 |.text|, CODE, ARM

  01a44		 |VRFB_ReleaseView| PROC

; 971  : {

  01a44		 |$LN21@VRFB_Relea|
  01a44	e1a0c00d	 mov         r12, sp
  01a48	e92d0003	 stmdb       sp!, {r0, r1}
  01a4c	e92d5000	 stmdb       sp!, {r12, lr}
  01a50	e24dd028	 sub         sp, sp, #0x28
  01a54		 |$M46029|

; 972  :     BOOL        bResult = FALSE;

  01a54	e3a03000	 mov         r3, #0
  01a58	e58d300c	 str         r3, [sp, #0xC]

; 973  :     Instance_t *pInstance = (Instance_t*)hContext;

  01a5c	e59d3030	 ldr         r3, [sp, #0x30]
  01a60	e58d3008	 str         r3, [sp, #8]

; 974  :     Device_t   *pDevice;
; 975  :     DWORD       index;
; 976  : 
; 977  : 
; 978  :     DEBUGMSG(ZONE_FUNCTION, (
; 979  :         L"+VRFB_ReleaseView(0x%08x, 0x%08x)\r\n", hContext, hView
; 980  :         ));

  01a64	e59f3308	 ldr         r3, [pc, #0x308]
  01a68	e5933440	 ldr         r3, [r3, #0x440]
  01a6c	e3130004	 tst         r3, #4
  01a70	0a000006	 beq         |$LN9@VRFB_Relea|
  01a74	e59d2034	 ldr         r2, [sp, #0x34]
  01a78	e59d1030	 ldr         r1, [sp, #0x30]
  01a7c	e59f0308	 ldr         r0, [pc, #0x308]
  01a80	eb000000	 bl          NKDbgPrintfW
  01a84	e3a03001	 mov         r3, #1
  01a88	e58d3014	 str         r3, [sp, #0x14]
  01a8c	ea000001	 b           |$LN10@VRFB_Relea|
  01a90		 |$LN9@VRFB_Relea|
  01a90	e3a03000	 mov         r3, #0
  01a94	e58d3014	 str         r3, [sp, #0x14]
  01a98		 |$LN10@VRFB_Relea|

; 981  : 
; 982  :     // Check if we get correct context
; 983  :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  01a98	e59d3008	 ldr         r3, [sp, #8]
  01a9c	e3530000	 cmp         r3, #0
  01aa0	0a000004	 beq         |$LN5@VRFB_Relea|
  01aa4	e59d3008	 ldr         r3, [sp, #8]
  01aa8	e5932000	 ldr         r2, [r3]
  01aac	e59f32d4	 ldr         r3, [pc, #0x2D4]
  01ab0	e1520003	 cmp         r2, r3
  01ab4	0a00000b	 beq         |$LN6@VRFB_Relea|
  01ab8		 |$LN5@VRFB_Relea|

; 984  :         {
; 985  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_ReleaseView: "
; 986  :             L"Incorrect context param\r\n"
; 987  :             ));

  01ab8	e59f32b4	 ldr         r3, [pc, #0x2B4]
  01abc	e5933440	 ldr         r3, [r3, #0x440]
  01ac0	e3130001	 tst         r3, #1
  01ac4	0a000004	 beq         |$LN11@VRFB_Relea|
  01ac8	e59f02b4	 ldr         r0, [pc, #0x2B4]
  01acc	eb000000	 bl          NKDbgPrintfW
  01ad0	e3a03001	 mov         r3, #1
  01ad4	e58d3018	 str         r3, [sp, #0x18]
  01ad8	ea000001	 b           |$LN12@VRFB_Relea|
  01adc		 |$LN11@VRFB_Relea|
  01adc	e3a03000	 mov         r3, #0
  01ae0	e58d3018	 str         r3, [sp, #0x18]
  01ae4		 |$LN12@VRFB_Relea|

; 988  :         goto cleanUp;

  01ae4	ea00008f	 b           |$cleanUp$45406|
  01ae8		 |$LN6@VRFB_Relea|

; 989  :         }
; 990  : 
; 991  :     //  Get Device
; 992  :     pDevice = pInstance->pDevice;

  01ae8	e59d3008	 ldr         r3, [sp, #8]
  01aec	e2833004	 add         r3, r3, #4
  01af0	e5933000	 ldr         r3, [r3]
  01af4	e58d3000	 str         r3, [sp]

; 993  : 
; 994  :     //  Validate view handle
; 995  :     index = (DWORD)hView - VRFB_VIEW_HANDLE_BASE;

  01af8	e59d3034	 ldr         r3, [sp, #0x34]
  01afc	e2433206	 sub         r3, r3, #6, 4
  01b00	e58d3004	 str         r3, [sp, #4]

; 996  :     
; 997  :     if( index < pDevice->dwNumDisplayContexts )

  01b04	e59d3000	 ldr         r3, [sp]
  01b08	e2833004	 add         r3, r3, #4
  01b0c	e59d2004	 ldr         r2, [sp, #4]
  01b10	e5933000	 ldr         r3, [r3]
  01b14	e1520003	 cmp         r2, r3
  01b18	2a00000c	 bcs         |$LN4@VRFB_Relea|

; 998  :     {
; 999  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_ReleaseView: "
; 1000 :             L"Can't release display view # %d\r\n", index
; 1001 :             ));

  01b1c	e59f3250	 ldr         r3, [pc, #0x250]
  01b20	e5933440	 ldr         r3, [r3, #0x440]
  01b24	e3130001	 tst         r3, #1
  01b28	0a000005	 beq         |$LN13@VRFB_Relea|
  01b2c	e59d1004	 ldr         r1, [sp, #4]
  01b30	e59f0248	 ldr         r0, [pc, #0x248]
  01b34	eb000000	 bl          NKDbgPrintfW
  01b38	e3a03001	 mov         r3, #1
  01b3c	e58d301c	 str         r3, [sp, #0x1C]
  01b40	ea000001	 b           |$LN14@VRFB_Relea|
  01b44		 |$LN13@VRFB_Relea|
  01b44	e3a03000	 mov         r3, #0
  01b48	e58d301c	 str         r3, [sp, #0x1C]
  01b4c		 |$LN14@VRFB_Relea|

; 1002 :         goto cleanUp;

  01b4c	ea000075	 b           |$cleanUp$45406|
  01b50		 |$LN4@VRFB_Relea|

; 1003 :     }
; 1004 : 
; 1005 :     
; 1006 :     //  Release the virtual memory associated with this view and free the context
; 1007 :     if( index < VRFB_ROTATION_CONTEXTS && g_VrfbContextList[index].bInUse )

  01b50	e59d3004	 ldr         r3, [sp, #4]
  01b54	e353000c	 cmp         r3, #0xC
  01b58	2a000066	 bcs         |$LN3@VRFB_Relea|
  01b5c	e59d1004	 ldr         r1, [sp, #4]
  01b60	e3a03020	 mov         r3, #0x20
  01b64	e0020391	 mul         r2, r1, r3
  01b68	e59f320c	 ldr         r3, [pc, #0x20C]
  01b6c	e0833002	 add         r3, r3, r2
  01b70	e5933000	 ldr         r3, [r3]
  01b74	e3530000	 cmp         r3, #0
  01b78	0a00005e	 beq         |$LN3@VRFB_Relea|

; 1008 :     {
; 1009 :         //  Release the mapping to the VRFB context
; 1010 :         VirtualFree( (VOID*)g_VrfbContextList[index].dwVirtualAddr, VRFB_VIEW_SIZE, MEM_DECOMMIT );

  01b7c	e3a02901	 mov         r2, #1, 18
  01b80	e3a01401	 mov         r1, #1, 8
  01b84	e59de004	 ldr         lr, [sp, #4]
  01b88	e3a03020	 mov         r3, #0x20
  01b8c	e000039e	 mul         r0, lr, r3
  01b90	e59f31e4	 ldr         r3, [pc, #0x1E4]
  01b94	e0833000	 add         r3, r3, r0
  01b98	e2833014	 add         r3, r3, #0x14
  01b9c	e5930000	 ldr         r0, [r3]
  01ba0	eb000000	 bl          VirtualFree

; 1011 :         VirtualFree( (VOID*)g_VrfbContextList[index].dwVirtualAddr, 0, MEM_RELEASE );

  01ba4	e3a02902	 mov         r2, #2, 18
  01ba8	e3a01000	 mov         r1, #0
  01bac	e59de004	 ldr         lr, [sp, #4]
  01bb0	e3a03020	 mov         r3, #0x20
  01bb4	e000039e	 mul         r0, lr, r3
  01bb8	e59f31bc	 ldr         r3, [pc, #0x1BC]
  01bbc	e0833000	 add         r3, r3, r0
  01bc0	e2833014	 add         r3, r3, #0x14
  01bc4	e5930000	 ldr         r0, [r3]
  01bc8	eb000000	 bl          VirtualFree

; 1012 : 
; 1013 :         //  Release any allocated physical memory for the VRFB view buffer
; 1014 :         if( g_VrfbContextList[index].dwBufferVirtAddr != 0 )

  01bcc	e59d1004	 ldr         r1, [sp, #4]
  01bd0	e3a03020	 mov         r3, #0x20
  01bd4	e0020391	 mul         r2, r1, r3
  01bd8	e59f319c	 ldr         r3, [pc, #0x19C]
  01bdc	e0833002	 add         r3, r3, r2
  01be0	e283301c	 add         r3, r3, #0x1C
  01be4	e5933000	 ldr         r3, [r3]
  01be8	e3530000	 cmp         r3, #0
  01bec	0a000007	 beq         |$LN2@VRFB_Relea|

; 1015 :         {
; 1016 :             FreePhysMem( (VOID*)g_VrfbContextList[index].dwBufferVirtAddr );

  01bf0	e59d1004	 ldr         r1, [sp, #4]
  01bf4	e3a03020	 mov         r3, #0x20
  01bf8	e0020391	 mul         r2, r1, r3
  01bfc	e59f3178	 ldr         r3, [pc, #0x178]
  01c00	e0833002	 add         r3, r3, r2
  01c04	e283301c	 add         r3, r3, #0x1C
  01c08	e5930000	 ldr         r0, [r3]
  01c0c	eb000000	 bl          FreePhysMem
  01c10		 |$LN2@VRFB_Relea|

; 1017 :         }
; 1018 :         
; 1019 :         //  Clean up the context information
; 1020 :         g_VrfbContextList[index].bInUse = FALSE;

  01c10	e59d1004	 ldr         r1, [sp, #4]
  01c14	e3a03020	 mov         r3, #0x20
  01c18	e0020391	 mul         r2, r1, r3
  01c1c	e59f3158	 ldr         r3, [pc, #0x158]
  01c20	e0832002	 add         r2, r3, r2
  01c24	e3a03000	 mov         r3, #0
  01c28	e5823000	 str         r3, [r2]

; 1021 :         g_VrfbContextList[index].dwWidth = 0;

  01c2c	e59d1004	 ldr         r1, [sp, #4]
  01c30	e3a03020	 mov         r3, #0x20
  01c34	e0020391	 mul         r2, r1, r3
  01c38	e59f313c	 ldr         r3, [pc, #0x13C]
  01c3c	e0833002	 add         r3, r3, r2
  01c40	e2832004	 add         r2, r3, #4
  01c44	e3a03000	 mov         r3, #0
  01c48	e5823000	 str         r3, [r2]

; 1022 :         g_VrfbContextList[index].dwHeight = 0;

  01c4c	e59d1004	 ldr         r1, [sp, #4]
  01c50	e3a03020	 mov         r3, #0x20
  01c54	e0020391	 mul         r2, r1, r3
  01c58	e59f311c	 ldr         r3, [pc, #0x11C]
  01c5c	e0833002	 add         r3, r3, r2
  01c60	e2832008	 add         r2, r3, #8
  01c64	e3a03000	 mov         r3, #0
  01c68	e5823000	 str         r3, [r2]

; 1023 :         g_VrfbContextList[index].dwRotationAngle = 0;

  01c6c	e59d1004	 ldr         r1, [sp, #4]
  01c70	e3a03020	 mov         r3, #0x20
  01c74	e0020391	 mul         r2, r1, r3
  01c78	e59f30fc	 ldr         r3, [pc, #0xFC]
  01c7c	e0833002	 add         r3, r3, r2
  01c80	e283200c	 add         r2, r3, #0xC
  01c84	e3a03000	 mov         r3, #0
  01c88	e5823000	 str         r3, [r2]

; 1024 :         g_VrfbContextList[index].dwVirtualAddr = 0;

  01c8c	e59d1004	 ldr         r1, [sp, #4]
  01c90	e3a03020	 mov         r3, #0x20
  01c94	e0020391	 mul         r2, r1, r3
  01c98	e59f30dc	 ldr         r3, [pc, #0xDC]
  01c9c	e0833002	 add         r3, r3, r2
  01ca0	e2832014	 add         r2, r3, #0x14
  01ca4	e3a03000	 mov         r3, #0
  01ca8	e5823000	 str         r3, [r2]

; 1025 :         g_VrfbContextList[index].dwBufferPhysAddr = 0;

  01cac	e59d1004	 ldr         r1, [sp, #4]
  01cb0	e3a03020	 mov         r3, #0x20
  01cb4	e0020391	 mul         r2, r1, r3
  01cb8	e59f30bc	 ldr         r3, [pc, #0xBC]
  01cbc	e0833002	 add         r3, r3, r2
  01cc0	e2832018	 add         r2, r3, #0x18
  01cc4	e3a03000	 mov         r3, #0
  01cc8	e5823000	 str         r3, [r2]

; 1026 :         g_VrfbContextList[index].dwBufferVirtAddr = 0;

  01ccc	e59d1004	 ldr         r1, [sp, #4]
  01cd0	e3a03020	 mov         r3, #0x20
  01cd4	e0020391	 mul         r2, r1, r3
  01cd8	e59f309c	 ldr         r3, [pc, #0x9C]
  01cdc	e0833002	 add         r3, r3, r2
  01ce0	e283201c	 add         r2, r3, #0x1C
  01ce4	e3a03000	 mov         r3, #0
  01ce8	e5823000	 str         r3, [r2]

; 1027 :         
; 1028 :         bResult = TRUE;

  01cec	e3a03001	 mov         r3, #1
  01cf0	e58d300c	 str         r3, [sp, #0xC]

; 1029 :     }
; 1030 :     else

  01cf4	ea00000b	 b           |$LN1@VRFB_Relea|
  01cf8		 |$LN3@VRFB_Relea|

; 1031 :     {
; 1032 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_ReleaseView: "
; 1033 :             L"Invalid view handle 0x%08X\r\n", hView
; 1034 :             ));

  01cf8	e59f3074	 ldr         r3, [pc, #0x74]
  01cfc	e5933440	 ldr         r3, [r3, #0x440]
  01d00	e3130001	 tst         r3, #1
  01d04	0a000005	 beq         |$LN15@VRFB_Relea|
  01d08	e59d1034	 ldr         r1, [sp, #0x34]
  01d0c	e59f0064	 ldr         r0, [pc, #0x64]
  01d10	eb000000	 bl          NKDbgPrintfW
  01d14	e3a03001	 mov         r3, #1
  01d18	e58d3020	 str         r3, [sp, #0x20]
  01d1c	ea000001	 b           |$LN16@VRFB_Relea|
  01d20		 |$LN15@VRFB_Relea|
  01d20	e3a03000	 mov         r3, #0
  01d24	e58d3020	 str         r3, [sp, #0x20]
  01d28		 |$LN16@VRFB_Relea|
  01d28		 |$LN1@VRFB_Relea|
  01d28		 |$cleanUp$45406|

; 1035 :         goto cleanUp;
; 1036 :     }
; 1037 :     
; 1038 : cleanUp:    
; 1039 :     //  Return result
; 1040 :     DEBUGMSG(ZONE_FUNCTION, (L"-VRFB_ReleaseView(bResult = %d)\r\n", bResult));

  01d28	e59f3044	 ldr         r3, [pc, #0x44]
  01d2c	e5933440	 ldr         r3, [r3, #0x440]
  01d30	e3130004	 tst         r3, #4
  01d34	0a000005	 beq         |$LN17@VRFB_Relea|
  01d38	e59d100c	 ldr         r1, [sp, #0xC]
  01d3c	e59f002c	 ldr         r0, [pc, #0x2C]
  01d40	eb000000	 bl          NKDbgPrintfW
  01d44	e3a03001	 mov         r3, #1
  01d48	e58d3024	 str         r3, [sp, #0x24]
  01d4c	ea000001	 b           |$LN18@VRFB_Relea|
  01d50		 |$LN17@VRFB_Relea|
  01d50	e3a03000	 mov         r3, #0
  01d54	e58d3024	 str         r3, [sp, #0x24]
  01d58		 |$LN18@VRFB_Relea|

; 1041 :     return bResult;

  01d58	e59d300c	 ldr         r3, [sp, #0xC]
  01d5c	e58d3010	 str         r3, [sp, #0x10]

; 1042 : }

  01d60	e59d0010	 ldr         r0, [sp, #0x10]
  01d64	e28dd028	 add         sp, sp, #0x28
  01d68	e89d6000	 ldmia       sp, {sp, lr}
  01d6c	e12fff1e	 bx          lr
  01d70		 |$LN22@VRFB_Relea|
  01d70		 |$LN23@VRFB_Relea|
  01d70	00000000	 DCD         |??_C@_1EE@DNPFGJHC@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  01d74		 |$LN24@VRFB_Relea|
  01d74	00000000	 DCD         |dpCurSettings|
  01d78		 |$LN25@VRFB_Relea|
  01d78	00000000	 DCD         |??_C@_1GM@GLMGJJIA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@|
  01d7c		 |$LN26@VRFB_Relea|
  01d7c	00000000	 DCD         |g_VrfbContextList|
  01d80		 |$LN27@VRFB_Relea|
  01d80	00000000	 DCD         |??_C@_1HG@FFNIIJDJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr@|
  01d84		 |$LN28@VRFB_Relea|
  01d84	00000000	 DCD         |??_C@_1GG@LENPIEDA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@|
  01d88		 |$LN29@VRFB_Relea|
  01d88	76726649	 DCD         0x76726649
  01d8c		 |$LN30@VRFB_Relea|
  01d8c	00000000	 DCD         |??_C@_1EI@FGDCHBAO@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  01d90		 |$M46030|

			 ENDP  ; |VRFB_ReleaseView|

	EXPORT	|??_C@_1GM@IPJKCKIJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@LCKKAMBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@| [ DATA ] ; `string'

  00038			 AREA	 |.pdata|, PDATA
|$T46055| DCD	|$LN23@VRFB_GetVi|
	DCD	0x40012004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@IPJKCKIJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w"
	DCB	0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "v", 0x0, "i", 0x0, "e", 0x0, "w"
	DCB	0x0, " ", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@LCKKAMBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "V", 0x0, "i", 0x0, "e", 0x0, "w"
	DCB	0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  01d90			 AREA	 |.text|, CODE, ARM

  01d90		 |VRFB_GetViewInfo| PROC

; 1051 : {

  01d90		 |$LN23@VRFB_GetVi|
  01d90	e1a0c00d	 mov         r12, sp
  01d94	e92d0007	 stmdb       sp!, {r0 - r2}
  01d98	e92d5000	 stmdb       sp!, {r12, lr}
  01d9c	e24dd02c	 sub         sp, sp, #0x2C
  01da0		 |$M46052|

; 1052 :     BOOL        bResult = FALSE;

  01da0	e3a03000	 mov         r3, #0
  01da4	e58d300c	 str         r3, [sp, #0xC]

; 1053 :     Instance_t *pInstance = (Instance_t*)hContext;

  01da8	e59d3034	 ldr         r3, [sp, #0x34]
  01dac	e58d3008	 str         r3, [sp, #8]

; 1054 :     Device_t   *pDevice;
; 1055 :     DWORD       index;
; 1056 : 
; 1057 :     // Check if we get correct context
; 1058 :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  01db0	e59d3008	 ldr         r3, [sp, #8]
  01db4	e3530000	 cmp         r3, #0
  01db8	0a000004	 beq         |$LN9@VRFB_GetVi|
  01dbc	e59d3008	 ldr         r3, [sp, #8]
  01dc0	e5932000	 ldr         r2, [r3]
  01dc4	e59f3440	 ldr         r3, [pc, #0x440]
  01dc8	e1520003	 cmp         r2, r3
  01dcc	0a00000b	 beq         |$LN10@VRFB_GetVi|
  01dd0		 |$LN9@VRFB_GetVi|

; 1059 :         {
; 1060 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_GetViewInfo: "
; 1061 :             L"Incorrect context param\r\n"
; 1062 :             ));

  01dd0	e59f3428	 ldr         r3, [pc, #0x428]
  01dd4	e5933440	 ldr         r3, [r3, #0x440]
  01dd8	e3130001	 tst         r3, #1
  01ddc	0a000004	 beq         |$LN13@VRFB_GetVi|
  01de0	e59f0420	 ldr         r0, [pc, #0x420]
  01de4	eb000000	 bl          NKDbgPrintfW
  01de8	e3a03001	 mov         r3, #1
  01dec	e58d3018	 str         r3, [sp, #0x18]
  01df0	ea000001	 b           |$LN14@VRFB_GetVi|
  01df4		 |$LN13@VRFB_GetVi|
  01df4	e3a03000	 mov         r3, #0
  01df8	e58d3018	 str         r3, [sp, #0x18]
  01dfc		 |$LN14@VRFB_GetVi|

; 1063 :         goto cleanUp;

  01dfc	ea0000f8	 b           |$cleanUp$45439|
  01e00		 |$LN10@VRFB_GetVi|

; 1064 :         }
; 1065 : 
; 1066 :     //  Get Device
; 1067 :     pDevice = pInstance->pDevice;

  01e00	e59d3008	 ldr         r3, [sp, #8]
  01e04	e2833004	 add         r3, r3, #4
  01e08	e5933000	 ldr         r3, [r3]
  01e0c	e58d3000	 str         r3, [sp]

; 1068 : 
; 1069 :     //  Validate view handle
; 1070 :     index = (DWORD)hView - VRFB_VIEW_HANDLE_BASE;

  01e10	e59d3038	 ldr         r3, [sp, #0x38]
  01e14	e2433206	 sub         r3, r3, #6, 4
  01e18	e58d3004	 str         r3, [sp, #4]

; 1071 :     
; 1072 :     if( index < VRFB_ROTATION_CONTEXTS && g_VrfbContextList[index].bInUse )

  01e1c	e59d3004	 ldr         r3, [sp, #4]
  01e20	e353000c	 cmp         r3, #0xC
  01e24	2a0000e2	 bcs         |$LN8@VRFB_GetVi|
  01e28	e59d1004	 ldr         r1, [sp, #4]
  01e2c	e3a03020	 mov         r3, #0x20
  01e30	e0020391	 mul         r2, r1, r3
  01e34	e59f33c8	 ldr         r3, [pc, #0x3C8]
  01e38	e0833002	 add         r3, r3, r2
  01e3c	e5933000	 ldr         r3, [r3]
  01e40	e3530000	 cmp         r3, #0
  01e44	0a0000da	 beq         |$LN8@VRFB_GetVi|

; 1073 :     {
; 1074 :         DWORD   offset = 0;

  01e48	e3a03000	 mov         r3, #0
  01e4c	e58d3010	 str         r3, [sp, #0x10]

; 1075 :         
; 1076 :         //  Get VRFB view rotation offset
; 1077 :         switch( g_VrfbContextList[index].dwRotationAngle )

  01e50	e59d1004	 ldr         r1, [sp, #4]
  01e54	e3a03020	 mov         r3, #0x20
  01e58	e0020391	 mul         r2, r1, r3
  01e5c	e59f33a0	 ldr         r3, [pc, #0x3A0]
  01e60	e0833002	 add         r3, r3, r2
  01e64	e283300c	 add         r3, r3, #0xC
  01e68	e5933000	 ldr         r3, [r3]
  01e6c	e58d301c	 str         r3, [sp, #0x1C]
  01e70	e59d301c	 ldr         r3, [sp, #0x1C]
  01e74	e353005a	 cmp         r3, #0x5A
  01e78	0a00000e	 beq         |$LN3@VRFB_GetVi|
  01e7c	e59d301c	 ldr         r3, [sp, #0x1C]
  01e80	e35300b4	 cmp         r3, #0xB4
  01e84	0a000008	 beq         |$LN4@VRFB_GetVi|
  01e88	e59d201c	 ldr         r2, [sp, #0x1C]
  01e8c	e3a03c01	 mov         r3, #1, 24
  01e90	e383300e	 orr         r3, r3, #0xE
  01e94	e1520003	 cmp         r2, r3
  01e98	0a000000	 beq         |$LN5@VRFB_GetVi|
  01e9c	ea000008	 b           |$LN2@VRFB_GetVi|
  01ea0		 |$LN5@VRFB_GetVi|

; 1078 :         {
; 1079 :             //  Deliberate fall through on the case statements below
; 1080 :             case VRFB_ROTATE_ANGLE_270:
; 1081 :                 offset += VRFB_VIEW_SIZE;

  01ea0	e59d3010	 ldr         r3, [sp, #0x10]
  01ea4	e2833401	 add         r3, r3, #1, 8
  01ea8	e58d3010	 str         r3, [sp, #0x10]
  01eac		 |$LN4@VRFB_GetVi|

; 1082 :                 
; 1083 :             case VRFB_ROTATE_ANGLE_180:
; 1084 :                 offset += VRFB_VIEW_SIZE;

  01eac	e59d3010	 ldr         r3, [sp, #0x10]
  01eb0	e2833401	 add         r3, r3, #1, 8
  01eb4	e58d3010	 str         r3, [sp, #0x10]
  01eb8		 |$LN3@VRFB_GetVi|

; 1085 : 
; 1086 :             case VRFB_ROTATE_ANGLE_90:
; 1087 :                 offset += VRFB_VIEW_SIZE;

  01eb8	e59d3010	 ldr         r3, [sp, #0x10]
  01ebc	e2833401	 add         r3, r3, #1, 8
  01ec0	e58d3010	 str         r3, [sp, #0x10]
  01ec4		 |$LN2@VRFB_GetVi|

; 1088 : 
; 1089 :             case VRFB_ROTATE_ANGLE_0:
; 1090 :             default:
; 1091 :                 break;
; 1092 :         }
; 1093 : 
; 1094 :         //  Fill in the view info structure
; 1095 :         memset( pInfo, 0, sizeof(VRFB_VIEW_INFO));

  01ec4	e3a02040	 mov         r2, #0x40
  01ec8	e3a01000	 mov         r1, #0
  01ecc	e59d003c	 ldr         r0, [sp, #0x3C]
  01ed0	eb000000	 bl          memset

; 1096 :         
; 1097 :         pInfo->hView = hView;

  01ed4	e59d2038	 ldr         r2, [sp, #0x38]
  01ed8	e59d303c	 ldr         r3, [sp, #0x3C]
  01edc	e5832000	 str         r2, [r3]

; 1098 :         pInfo->dwPixelSize = INREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_CONTROL) & 0x00000003;

  01ee0	e59d3000	 ldr         r3, [sp]
  01ee4	e2833024	 add         r3, r3, #0x24
  01ee8	e5933000	 ldr         r3, [r3]
  01eec	e283101c	 add         r1, r3, #0x1C
  01ef0	e59d2004	 ldr         r2, [sp, #4]
  01ef4	e3a03010	 mov         r3, #0x10
  01ef8	e0030392	 mul         r3, r2, r3
  01efc	e0813003	 add         r3, r1, r3
  01f00	e5933000	 ldr         r3, [r3]
  01f04	e2032003	 and         r2, r3, #3
  01f08	e59d303c	 ldr         r3, [sp, #0x3C]
  01f0c	e2833004	 add         r3, r3, #4
  01f10	e5832000	 str         r2, [r3]

; 1099 :         pInfo->dwPixelSizeBytes = PIXEL_SIZE_TO_BYTES(pInfo->dwPixelSize);

  01f14	e59d303c	 ldr         r3, [sp, #0x3C]
  01f18	e2833004	 add         r3, r3, #4
  01f1c	e5932000	 ldr         r2, [r3]
  01f20	e3a03001	 mov         r3, #1
  01f24	e1a02213	 mov         r2, r3, lsl r2
  01f28	e59d303c	 ldr         r3, [sp, #0x3C]
  01f2c	e2833008	 add         r3, r3, #8
  01f30	e5832000	 str         r2, [r3]

; 1100 :         pInfo->dwWidth = g_VrfbContextList[index].dwWidth;

  01f34	e59d1004	 ldr         r1, [sp, #4]
  01f38	e3a03020	 mov         r3, #0x20
  01f3c	e0020391	 mul         r2, r1, r3
  01f40	e59f32bc	 ldr         r3, [pc, #0x2BC]
  01f44	e0833002	 add         r3, r3, r2
  01f48	e2831004	 add         r1, r3, #4
  01f4c	e59d303c	 ldr         r3, [sp, #0x3C]
  01f50	e283200c	 add         r2, r3, #0xC
  01f54	e5913000	 ldr         r3, [r1]
  01f58	e5823000	 str         r3, [r2]

; 1101 :         pInfo->dwHeight = g_VrfbContextList[index].dwHeight;

  01f5c	e59d1004	 ldr         r1, [sp, #4]
  01f60	e3a03020	 mov         r3, #0x20
  01f64	e0020391	 mul         r2, r1, r3
  01f68	e59f3294	 ldr         r3, [pc, #0x294]
  01f6c	e0833002	 add         r3, r3, r2
  01f70	e2831008	 add         r1, r3, #8
  01f74	e59d303c	 ldr         r3, [sp, #0x3C]
  01f78	e2832010	 add         r2, r3, #0x10
  01f7c	e5913000	 ldr         r3, [r1]
  01f80	e5823000	 str         r3, [r2]

; 1102 :         pInfo->dwPageWidth = DEFAULT_PAGE_WIDTH;

  01f84	e59d303c	 ldr         r3, [sp, #0x3C]
  01f88	e2832014	 add         r2, r3, #0x14
  01f8c	e3a03004	 mov         r3, #4
  01f90	e5823000	 str         r3, [r2]

; 1103 :         pInfo->dwPageHeight = DEFAULT_PAGE_HEIGHT;

  01f94	e59d303c	 ldr         r3, [sp, #0x3C]
  01f98	e2832018	 add         r2, r3, #0x18
  01f9c	e3a03004	 mov         r3, #4
  01fa0	e5823000	 str         r3, [r2]

; 1104 :         pInfo->dwImageWidth = INREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_SIZE) & 0x000007FF;

  01fa4	e59d3000	 ldr         r3, [sp]
  01fa8	e2833024	 add         r3, r3, #0x24
  01fac	e5933000	 ldr         r3, [r3]
  01fb0	e283101c	 add         r1, r3, #0x1C
  01fb4	e59d2004	 ldr         r2, [sp, #4]
  01fb8	e3a03010	 mov         r3, #0x10
  01fbc	e0030392	 mul         r3, r2, r3
  01fc0	e0813003	 add         r3, r1, r3
  01fc4	e2833004	 add         r3, r3, #4
  01fc8	e5932000	 ldr         r2, [r3]
  01fcc	e3a03c07	 mov         r3, #7, 24
  01fd0	e38330ff	 orr         r3, r3, #0xFF
  01fd4	e0022003	 and         r2, r2, r3
  01fd8	e59d303c	 ldr         r3, [sp, #0x3C]
  01fdc	e283301c	 add         r3, r3, #0x1C
  01fe0	e5832000	 str         r2, [r3]

; 1105 :         pInfo->dwImageHeight = (INREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_SIZE)>>16) & 0x000007FF;

  01fe4	e59d3000	 ldr         r3, [sp]
  01fe8	e2833024	 add         r3, r3, #0x24
  01fec	e5933000	 ldr         r3, [r3]
  01ff0	e283101c	 add         r1, r3, #0x1C
  01ff4	e59d2004	 ldr         r2, [sp, #4]
  01ff8	e3a03010	 mov         r3, #0x10
  01ffc	e0030392	 mul         r3, r2, r3
  02000	e0813003	 add         r3, r1, r3
  02004	e2833004	 add         r3, r3, #4
  02008	e5933000	 ldr         r3, [r3]
  0200c	e1a03283	 mov         r3, r3, lsl #5
  02010	e1a02aa3	 mov         r2, r3, lsr #21
  02014	e59d303c	 ldr         r3, [sp, #0x3C]
  02018	e2833020	 add         r3, r3, #0x20
  0201c	e5832000	 str         r2, [r3]

; 1106 :         pInfo->dwImageStride = PIXEL_SIZE_TO_BYTES(pInfo->dwPixelSize) * VRFB_IMAGE_WIDTH_MAX;

  02020	e59d303c	 ldr         r3, [sp, #0x3C]
  02024	e2833004	 add         r3, r3, #4
  02028	e5932000	 ldr         r2, [r3]
  0202c	e3a03001	 mov         r3, #1
  02030	e1a01213	 mov         r1, r3, lsl r2
  02034	e3a03b02	 mov         r3, #2, 22
  02038	e0020391	 mul         r2, r1, r3
  0203c	e59d303c	 ldr         r3, [sp, #0x3C]
  02040	e2833024	 add         r3, r3, #0x24
  02044	e5832000	 str         r2, [r3]

; 1107 :         pInfo->dwOriginOffset = 0;

  02048	e59d303c	 ldr         r3, [sp, #0x3C]
  0204c	e2832028	 add         r2, r3, #0x28
  02050	e3a03000	 mov         r3, #0
  02054	e5823000	 str         r3, [r2]

; 1108 :         pInfo->dwRotationAngle = g_VrfbContextList[index].dwRotationAngle;

  02058	e59d1004	 ldr         r1, [sp, #4]
  0205c	e3a03020	 mov         r3, #0x20
  02060	e0020391	 mul         r2, r1, r3
  02064	e59f3198	 ldr         r3, [pc, #0x198]
  02068	e0833002	 add         r3, r3, r2
  0206c	e283100c	 add         r1, r3, #0xC
  02070	e59d303c	 ldr         r3, [sp, #0x3C]
  02074	e283202c	 add         r2, r3, #0x2C
  02078	e5913000	 ldr         r3, [r1]
  0207c	e5823000	 str         r3, [r2]

; 1109 :         pInfo->dwVirtualAddr = g_VrfbContextList[index].dwVirtualAddr;

  02080	e59d1004	 ldr         r1, [sp, #4]
  02084	e3a03020	 mov         r3, #0x20
  02088	e0020391	 mul         r2, r1, r3
  0208c	e59f3170	 ldr         r3, [pc, #0x170]
  02090	e0833002	 add         r3, r3, r2
  02094	e2831014	 add         r1, r3, #0x14
  02098	e59d303c	 ldr         r3, [sp, #0x3C]
  0209c	e2832030	 add         r2, r3, #0x30
  020a0	e5913000	 ldr         r3, [r1]
  020a4	e5823000	 str         r3, [r2]

; 1110 :         pInfo->dwPhysicalAddrInput = g_VrfbContextList[index].dwPhysicalAddr + offset;

  020a8	e59d1004	 ldr         r1, [sp, #4]
  020ac	e3a03020	 mov         r3, #0x20
  020b0	e0020391	 mul         r2, r1, r3
  020b4	e59f3148	 ldr         r3, [pc, #0x148]
  020b8	e0833002	 add         r3, r3, r2
  020bc	e2833010	 add         r3, r3, #0x10
  020c0	e5932000	 ldr         r2, [r3]
  020c4	e59d3010	 ldr         r3, [sp, #0x10]
  020c8	e0822003	 add         r2, r2, r3
  020cc	e59d303c	 ldr         r3, [sp, #0x3C]
  020d0	e2833034	 add         r3, r3, #0x34
  020d4	e5832000	 str         r2, [r3]

; 1111 :         pInfo->dwPhysicalAddrOutput = g_VrfbContextList[index].dwPhysicalAddr;

  020d8	e59d1004	 ldr         r1, [sp, #4]
  020dc	e3a03020	 mov         r3, #0x20
  020e0	e0020391	 mul         r2, r1, r3
  020e4	e59f3118	 ldr         r3, [pc, #0x118]
  020e8	e0833002	 add         r3, r3, r2
  020ec	e2831010	 add         r1, r3, #0x10
  020f0	e59d303c	 ldr         r3, [sp, #0x3C]
  020f4	e2832038	 add         r2, r3, #0x38
  020f8	e5913000	 ldr         r3, [r1]
  020fc	e5823000	 str         r3, [r2]

; 1112 :         pInfo->dwPhysicalBufferAddr = g_VrfbContextList[index].dwBufferPhysAddr;

  02100	e59d1004	 ldr         r1, [sp, #4]
  02104	e3a03020	 mov         r3, #0x20
  02108	e0020391	 mul         r2, r1, r3
  0210c	e59f30f0	 ldr         r3, [pc, #0xF0]
  02110	e0833002	 add         r3, r3, r2
  02114	e2831018	 add         r1, r3, #0x18
  02118	e59d303c	 ldr         r3, [sp, #0x3C]
  0211c	e283203c	 add         r2, r3, #0x3C
  02120	e5913000	 ldr         r3, [r1]
  02124	e5823000	 str         r3, [r2]

; 1113 :         
; 1114 :         //  Adjust for VRFB limit on image width and height (0 indicates max of 2K pixels)
; 1115 :         pInfo->dwImageWidth = (pInfo->dwImageWidth == 0) ? VRFB_IMAGE_WIDTH_MAX : pInfo->dwImageWidth;

  02128	e59d303c	 ldr         r3, [sp, #0x3C]
  0212c	e283301c	 add         r3, r3, #0x1C
  02130	e5933000	 ldr         r3, [r3]
  02134	e3530000	 cmp         r3, #0
  02138	1a000002	 bne         |$LN15@VRFB_GetVi|
  0213c	e3a03b02	 mov         r3, #2, 22
  02140	e58d3020	 str         r3, [sp, #0x20]
  02144	ea000003	 b           |$LN16@VRFB_GetVi|
  02148		 |$LN15@VRFB_GetVi|
  02148	e59d303c	 ldr         r3, [sp, #0x3C]
  0214c	e283301c	 add         r3, r3, #0x1C
  02150	e5933000	 ldr         r3, [r3]
  02154	e58d3020	 str         r3, [sp, #0x20]
  02158		 |$LN16@VRFB_GetVi|
  02158	e59d303c	 ldr         r3, [sp, #0x3C]
  0215c	e283201c	 add         r2, r3, #0x1C
  02160	e59d3020	 ldr         r3, [sp, #0x20]
  02164	e5823000	 str         r3, [r2]

; 1116 :         pInfo->dwImageHeight = (pInfo->dwImageHeight == 0) ? VRFB_IMAGE_HEIGHT_MAX : pInfo->dwImageHeight;

  02168	e59d303c	 ldr         r3, [sp, #0x3C]
  0216c	e2833020	 add         r3, r3, #0x20
  02170	e5933000	 ldr         r3, [r3]
  02174	e3530000	 cmp         r3, #0
  02178	1a000002	 bne         |$LN17@VRFB_GetVi|
  0217c	e3a03b02	 mov         r3, #2, 22
  02180	e58d3024	 str         r3, [sp, #0x24]
  02184	ea000003	 b           |$LN18@VRFB_GetVi|
  02188		 |$LN17@VRFB_GetVi|
  02188	e59d303c	 ldr         r3, [sp, #0x3C]
  0218c	e2833020	 add         r3, r3, #0x20
  02190	e5933000	 ldr         r3, [r3]
  02194	e58d3024	 str         r3, [sp, #0x24]
  02198		 |$LN18@VRFB_GetVi|
  02198	e59d303c	 ldr         r3, [sp, #0x3C]
  0219c	e2832020	 add         r2, r3, #0x20
  021a0	e59d3024	 ldr         r3, [sp, #0x24]
  021a4	e5823000	 str         r3, [r2]

; 1117 :         
; 1118 :         bResult = TRUE;

  021a8	e3a03001	 mov         r3, #1
  021ac	e58d300c	 str         r3, [sp, #0xC]

; 1119 :     }    
; 1120 :     else

  021b0	ea00000b	 b           |$LN1@VRFB_GetVi|
  021b4		 |$LN8@VRFB_GetVi|

; 1121 :     {
; 1122 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_GetViewInfo: "
; 1123 :             L"Invalid view handle 0x%08X\r\n", hView
; 1124 :             ));

  021b4	e59f3044	 ldr         r3, [pc, #0x44]
  021b8	e5933440	 ldr         r3, [r3, #0x440]
  021bc	e3130001	 tst         r3, #1
  021c0	0a000005	 beq         |$LN19@VRFB_GetVi|
  021c4	e59d1038	 ldr         r1, [sp, #0x38]
  021c8	e59f002c	 ldr         r0, [pc, #0x2C]
  021cc	eb000000	 bl          NKDbgPrintfW
  021d0	e3a03001	 mov         r3, #1
  021d4	e58d3028	 str         r3, [sp, #0x28]
  021d8	ea000001	 b           |$LN20@VRFB_GetVi|
  021dc		 |$LN19@VRFB_GetVi|
  021dc	e3a03000	 mov         r3, #0
  021e0	e58d3028	 str         r3, [sp, #0x28]
  021e4		 |$LN20@VRFB_GetVi|
  021e4		 |$LN1@VRFB_GetVi|
  021e4		 |$cleanUp$45439|

; 1125 :         goto cleanUp;
; 1126 :     }
; 1127 : 
; 1128 : cleanUp:    
; 1129 :     //  Return result
; 1130 :     return bResult;

  021e4	e59d300c	 ldr         r3, [sp, #0xC]
  021e8	e58d3014	 str         r3, [sp, #0x14]

; 1131 : }

  021ec	e59d0014	 ldr         r0, [sp, #0x14]
  021f0	e28dd02c	 add         sp, sp, #0x2C
  021f4	e89d6000	 ldmia       sp, {sp, lr}
  021f8	e12fff1e	 bx          lr
  021fc		 |$LN24@VRFB_GetVi|
  021fc		 |$LN25@VRFB_GetVi|
  021fc	00000000	 DCD         |??_C@_1GM@IPJKCKIJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@|
  02200		 |$LN26@VRFB_GetVi|
  02200	00000000	 DCD         |dpCurSettings|
  02204		 |$LN27@VRFB_GetVi|
  02204	00000000	 DCD         |g_VrfbContextList|
  02208		 |$LN28@VRFB_GetVi|
  02208	00000000	 DCD         |??_C@_1GG@LCKKAMBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@|
  0220c		 |$LN29@VRFB_GetVi|
  0220c	76726649	 DCD         0x76726649
  02210		 |$M46053|

			 ENDP  ; |VRFB_GetViewInfo|

	EXPORT	|??_C@_1EC@ECHJNCNF@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@LNABPJPI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@KCJLBIHD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@HFCCNGDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@KAABFKBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@KNGPIFAJ@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@| [ DATA ] ; `string'

  00040			 AREA	 |.pdata|, PDATA
|$T46079| DCD	|$LN30@VRFB_Rotat|
	DCD	0x4000f304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@ECHJNCNF@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, "(", 0x0, "b", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@LNABPJPI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "v", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, " "
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@KCJLBIHD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAC@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "C", 0x0, "e", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "M"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "b", 0x0, "u"
	DCB	0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "#", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@HFCCNGDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "#", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@KAABFKBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@KNGPIFAJ@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "R"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  02210			 AREA	 |.text|, CODE, ARM

  02210		 |VRFB_RotateView| PROC

; 1140 : {

  02210		 |$LN30@VRFB_Rotat|
  02210	e1a0c00d	 mov         r12, sp
  02214	e92d0007	 stmdb       sp!, {r0 - r2}
  02218	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0221c	e24dd03c	 sub         sp, sp, #0x3C
  02220		 |$M46076|

; 1141 :     BOOL        bResult = FALSE;

  02220	e3a03000	 mov         r3, #0
  02224	e58d3010	 str         r3, [sp, #0x10]

; 1142 :     Instance_t *pInstance = (Instance_t*)hContext;

  02228	e59d304c	 ldr         r3, [sp, #0x4C]
  0222c	e58d3008	 str         r3, [sp, #8]

; 1143 :     Device_t   *pDevice;
; 1144 :     DWORD       index;
; 1145 :     DWORD       offset = 0;

  02230	e3a03000	 mov         r3, #0
  02234	e58d300c	 str         r3, [sp, #0xC]

; 1146 : 
; 1147 :  
; 1148 :     DEBUGMSG(ZONE_FUNCTION, (
; 1149 :         L"+VRFB_RotateView(0x%08x, 0x%08x, %d)\r\n", hContext, hView, dwRotateAngle
; 1150 :         ));

  02238	e59f337c	 ldr         r3, [pc, #0x37C]
  0223c	e5933440	 ldr         r3, [r3, #0x440]
  02240	e3130004	 tst         r3, #4
  02244	0a000007	 beq         |$LN16@VRFB_Rotat|
  02248	e59d3054	 ldr         r3, [sp, #0x54]
  0224c	e59d2050	 ldr         r2, [sp, #0x50]
  02250	e59d104c	 ldr         r1, [sp, #0x4C]
  02254	e59f037c	 ldr         r0, [pc, #0x37C]
  02258	eb000000	 bl          NKDbgPrintfW
  0225c	e3a03001	 mov         r3, #1
  02260	e58d3018	 str         r3, [sp, #0x18]
  02264	ea000001	 b           |$LN17@VRFB_Rotat|
  02268		 |$LN16@VRFB_Rotat|
  02268	e3a03000	 mov         r3, #0
  0226c	e58d3018	 str         r3, [sp, #0x18]
  02270		 |$LN17@VRFB_Rotat|

; 1151 : 
; 1152 :     // Check if we get correct context
; 1153 :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  02270	e59d3008	 ldr         r3, [sp, #8]
  02274	e3530000	 cmp         r3, #0
  02278	0a000004	 beq         |$LN12@VRFB_Rotat|
  0227c	e59d3008	 ldr         r3, [sp, #8]
  02280	e5932000	 ldr         r2, [r3]
  02284	e59f3348	 ldr         r3, [pc, #0x348]
  02288	e1520003	 cmp         r2, r3
  0228c	0a00000b	 beq         |$LN13@VRFB_Rotat|
  02290		 |$LN12@VRFB_Rotat|

; 1154 :         {
; 1155 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_RotateView: "
; 1156 :             L"Incorrect context param\r\n"
; 1157 :             ));

  02290	e59f3324	 ldr         r3, [pc, #0x324]
  02294	e5933440	 ldr         r3, [r3, #0x440]
  02298	e3130001	 tst         r3, #1
  0229c	0a000004	 beq         |$LN18@VRFB_Rotat|
  022a0	e59f0328	 ldr         r0, [pc, #0x328]
  022a4	eb000000	 bl          NKDbgPrintfW
  022a8	e3a03001	 mov         r3, #1
  022ac	e58d301c	 str         r3, [sp, #0x1C]
  022b0	ea000001	 b           |$LN19@VRFB_Rotat|
  022b4		 |$LN18@VRFB_Rotat|
  022b4	e3a03000	 mov         r3, #0
  022b8	e58d301c	 str         r3, [sp, #0x1C]
  022bc		 |$LN19@VRFB_Rotat|

; 1158 :         goto cleanUp;

  022bc	ea0000ab	 b           |$cleanUp$45481|
  022c0		 |$LN13@VRFB_Rotat|

; 1159 :         }
; 1160 : 
; 1161 :     //  Get Device
; 1162 :     pDevice = pInstance->pDevice;

  022c0	e59d3008	 ldr         r3, [sp, #8]
  022c4	e2833004	 add         r3, r3, #4
  022c8	e5933000	 ldr         r3, [r3]
  022cc	e58d3000	 str         r3, [sp]

; 1163 : 
; 1164 : 
; 1165 :     //  Validate view handle
; 1166 :     index = (DWORD)hView - VRFB_VIEW_HANDLE_BASE;

  022d0	e59d3050	 ldr         r3, [sp, #0x50]
  022d4	e2433206	 sub         r3, r3, #6, 4
  022d8	e58d3004	 str         r3, [sp, #4]

; 1167 :     
; 1168 :     if( index < VRFB_ROTATION_CONTEXTS && g_VrfbContextList[index].bInUse )

  022dc	e59d3004	 ldr         r3, [sp, #4]
  022e0	e353000c	 cmp         r3, #0xC
  022e4	2a000095	 bcs         |$LN11@VRFB_Rotat|
  022e8	e59d1004	 ldr         r1, [sp, #4]
  022ec	e3a03020	 mov         r3, #0x20
  022f0	e0020391	 mul         r2, r1, r3
  022f4	e59f32c8	 ldr         r3, [pc, #0x2C8]
  022f8	e0833002	 add         r3, r3, r2
  022fc	e5933000	 ldr         r3, [r3]
  02300	e3530000	 cmp         r3, #0
  02304	0a00008d	 beq         |$LN11@VRFB_Rotat|

; 1169 :     {
; 1170 :         //  If the rotation angle is the same as currently set, do nothing
; 1171 :         if( dwRotateAngle == g_VrfbContextList[index].dwRotationAngle )

  02308	e59d1004	 ldr         r1, [sp, #4]
  0230c	e3a03020	 mov         r3, #0x20
  02310	e0020391	 mul         r2, r1, r3
  02314	e59f32a8	 ldr         r3, [pc, #0x2A8]
  02318	e0833002	 add         r3, r3, r2
  0231c	e283300c	 add         r3, r3, #0xC
  02320	e59d2054	 ldr         r2, [sp, #0x54]
  02324	e5933000	 ldr         r3, [r3]
  02328	e1520003	 cmp         r2, r3
  0232c	1a000002	 bne         |$LN10@VRFB_Rotat|

; 1172 :         {
; 1173 :             bResult = TRUE;

  02330	e3a03001	 mov         r3, #1
  02334	e58d3010	 str         r3, [sp, #0x10]

; 1174 :             goto cleanUp;

  02338	ea00008c	 b           |$cleanUp$45481|
  0233c		 |$LN10@VRFB_Rotat|

; 1175 :         }
; 1176 :         
; 1177 :         //  Rotate the view by remapping underlying VRFB physical address into the virtual address for the view
; 1178 :         switch( dwRotateAngle )

  0233c	e59d3054	 ldr         r3, [sp, #0x54]
  02340	e58d3020	 str         r3, [sp, #0x20]
  02344	e59d3020	 ldr         r3, [sp, #0x20]
  02348	e353005a	 cmp         r3, #0x5A
  0234c	0a00000e	 beq         |$LN5@VRFB_Rotat|
  02350	e59d3020	 ldr         r3, [sp, #0x20]
  02354	e35300b4	 cmp         r3, #0xB4
  02358	0a000008	 beq         |$LN6@VRFB_Rotat|
  0235c	e59d2020	 ldr         r2, [sp, #0x20]
  02360	e3a03c01	 mov         r3, #1, 24
  02364	e383300e	 orr         r3, r3, #0xE
  02368	e1520003	 cmp         r2, r3
  0236c	0a000000	 beq         |$LN7@VRFB_Rotat|
  02370	ea000008	 b           |$LN4@VRFB_Rotat|
  02374		 |$LN7@VRFB_Rotat|

; 1179 :         {
; 1180 :             //  Deliberate fall through on the case statements below
; 1181 :             case VRFB_ROTATE_ANGLE_270:
; 1182 :                 offset += VRFB_VIEW_SIZE;

  02374	e59d300c	 ldr         r3, [sp, #0xC]
  02378	e2833401	 add         r3, r3, #1, 8
  0237c	e58d300c	 str         r3, [sp, #0xC]
  02380		 |$LN6@VRFB_Rotat|

; 1183 :                 
; 1184 :             case VRFB_ROTATE_ANGLE_180:
; 1185 :                 offset += VRFB_VIEW_SIZE;

  02380	e59d300c	 ldr         r3, [sp, #0xC]
  02384	e2833401	 add         r3, r3, #1, 8
  02388	e58d300c	 str         r3, [sp, #0xC]
  0238c		 |$LN5@VRFB_Rotat|

; 1186 : 
; 1187 :             case VRFB_ROTATE_ANGLE_90:
; 1188 :                 offset += VRFB_VIEW_SIZE;

  0238c	e59d300c	 ldr         r3, [sp, #0xC]
  02390	e2833401	 add         r3, r3, #1, 8
  02394	e58d300c	 str         r3, [sp, #0xC]
  02398		 |$LN4@VRFB_Rotat|

; 1189 : 
; 1190 :             case VRFB_ROTATE_ANGLE_0:
; 1191 :             default:
; 1192 :                 break;
; 1193 :         }
; 1194 :         
; 1195 :         //  Decommit the existing mapping to VRFB 
; 1196 :         VirtualFree( (VOID*)g_VrfbContextList[index].dwVirtualAddr, VRFB_VIEW_SIZE, MEM_DECOMMIT );

  02398	e3a02901	 mov         r2, #1, 18
  0239c	e3a01401	 mov         r1, #1, 8
  023a0	e59de004	 ldr         lr, [sp, #4]
  023a4	e3a03020	 mov         r3, #0x20
  023a8	e000039e	 mul         r0, lr, r3
  023ac	e59f3210	 ldr         r3, [pc, #0x210]
  023b0	e0833000	 add         r3, r3, r0
  023b4	e2833014	 add         r3, r3, #0x14
  023b8	e5930000	 ldr         r0, [r3]
  023bc	eb000000	 bl          VirtualFree

; 1197 : 
; 1198 :         //  Associate to the selected rotation angle offset
; 1199 :         bResult = VirtualCopy( (VOID*)g_VrfbContextList[index].dwVirtualAddr, 
; 1200 :                                (VOID*)((g_VrfbContextList[index].dwPhysicalAddr + offset)/256), 
; 1201 :                                VRFB_VIEW_SIZE, 
; 1202 :                                PAGE_READWRITE | PAGE_PHYSICAL | PAGE_NOCACHE );

  023c0	e3a05c06	 mov         r5, #6, 24
  023c4	e3855004	 orr         r5, r5, #4
  023c8	e3a04401	 mov         r4, #1, 8
  023cc	e59d1004	 ldr         r1, [sp, #4]
  023d0	e3a03020	 mov         r3, #0x20
  023d4	e0020391	 mul         r2, r1, r3
  023d8	e59f31e4	 ldr         r3, [pc, #0x1E4]
  023dc	e0833002	 add         r3, r3, r2
  023e0	e2833010	 add         r3, r3, #0x10
  023e4	e5932000	 ldr         r2, [r3]
  023e8	e59d300c	 ldr         r3, [sp, #0xC]
  023ec	e0821003	 add         r1, r2, r3
  023f0	e3a00c01	 mov         r0, #1, 24
  023f4	eb000000	 bl          __rt_udiv
  023f8	e1a01000	 mov         r1, r0
  023fc	e59d0004	 ldr         r0, [sp, #4]
  02400	e3a03020	 mov         r3, #0x20
  02404	e0020390	 mul         r2, r0, r3
  02408	e59f31b4	 ldr         r3, [pc, #0x1B4]
  0240c	e0833002	 add         r3, r3, r2
  02410	e2833014	 add         r3, r3, #0x14
  02414	e5930000	 ldr         r0, [r3]
  02418	e1a02004	 mov         r2, r4
  0241c	e1a03005	 mov         r3, r5
  02420	eb000000	 bl          VirtualCopy
  02424	e58d0024	 str         r0, [sp, #0x24]
  02428	e59d3024	 ldr         r3, [sp, #0x24]
  0242c	e58d3010	 str         r3, [sp, #0x10]

; 1203 : 
; 1204 :         if( bResult == FALSE )

  02430	e59d3010	 ldr         r3, [sp, #0x10]
  02434	e3530000	 cmp         r3, #0
  02438	1a00000c	 bne         |$LN3@VRFB_Rotat|

; 1205 :         {
; 1206 :             DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_RotateView: "
; 1207 :                  L"Failed map context memory for context # %d\r\n", index
; 1208 :                 ));

  0243c	e59f3178	 ldr         r3, [pc, #0x178]
  02440	e5933440	 ldr         r3, [r3, #0x440]
  02444	e3130001	 tst         r3, #1
  02448	0a000005	 beq         |$LN20@VRFB_Rotat|
  0244c	e59d1004	 ldr         r1, [sp, #4]
  02450	e59f0174	 ldr         r0, [pc, #0x174]
  02454	eb000000	 bl          NKDbgPrintfW
  02458	e3a03001	 mov         r3, #1
  0245c	e58d3028	 str         r3, [sp, #0x28]
  02460	ea000001	 b           |$LN21@VRFB_Rotat|
  02464		 |$LN20@VRFB_Rotat|
  02464	e3a03000	 mov         r3, #0
  02468	e58d3028	 str         r3, [sp, #0x28]
  0246c		 |$LN21@VRFB_Rotat|

; 1209 :             goto cleanUp;

  0246c	ea00003f	 b           |$cleanUp$45481|
  02470		 |$LN3@VRFB_Rotat|

; 1210 :         }
; 1211 : 
; 1212 :         //  Change the attributes of the buffer for cache write thru
; 1213 :         bResult = CeSetMemoryAttributes( (VOID*)g_VrfbContextList[index].dwVirtualAddr, (VOID*)((g_VrfbContextList[index].dwPhysicalAddr + offset)/256), VRFB_VIEW_SIZE, PAGE_WRITECOMBINE );

  02470	e3a05b01	 mov         r5, #1, 22
  02474	e3a04401	 mov         r4, #1, 8
  02478	e59d1004	 ldr         r1, [sp, #4]
  0247c	e3a03020	 mov         r3, #0x20
  02480	e0020391	 mul         r2, r1, r3
  02484	e59f3138	 ldr         r3, [pc, #0x138]
  02488	e0833002	 add         r3, r3, r2
  0248c	e2833010	 add         r3, r3, #0x10
  02490	e5932000	 ldr         r2, [r3]
  02494	e59d300c	 ldr         r3, [sp, #0xC]
  02498	e0821003	 add         r1, r2, r3
  0249c	e3a00c01	 mov         r0, #1, 24
  024a0	eb000000	 bl          __rt_udiv
  024a4	e1a01000	 mov         r1, r0
  024a8	e59d0004	 ldr         r0, [sp, #4]
  024ac	e3a03020	 mov         r3, #0x20
  024b0	e0020390	 mul         r2, r0, r3
  024b4	e59f3108	 ldr         r3, [pc, #0x108]
  024b8	e0833002	 add         r3, r3, r2
  024bc	e2833014	 add         r3, r3, #0x14
  024c0	e5930000	 ldr         r0, [r3]
  024c4	e1a02004	 mov         r2, r4
  024c8	e1a03005	 mov         r3, r5
  024cc	eb000000	 bl          CeSetMemoryAttributes
  024d0	e58d002c	 str         r0, [sp, #0x2C]
  024d4	e59d302c	 ldr         r3, [sp, #0x2C]
  024d8	e58d3010	 str         r3, [sp, #0x10]

; 1214 :         if( bResult == FALSE )

  024dc	e59d3010	 ldr         r3, [sp, #0x10]
  024e0	e3530000	 cmp         r3, #0
  024e4	1a00000c	 bne         |$LN2@VRFB_Rotat|

; 1215 :         {
; 1216 :             DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_RotateView: "
; 1217 :                  L"Failed CeSetMemoryAttributes for context # %d\r\n", index
; 1218 :                 ));

  024e8	e59f30cc	 ldr         r3, [pc, #0xCC]
  024ec	e5933440	 ldr         r3, [r3, #0x440]
  024f0	e3130001	 tst         r3, #1
  024f4	0a000005	 beq         |$LN22@VRFB_Rotat|
  024f8	e59d1004	 ldr         r1, [sp, #4]
  024fc	e59f00c4	 ldr         r0, [pc, #0xC4]
  02500	eb000000	 bl          NKDbgPrintfW
  02504	e3a03001	 mov         r3, #1
  02508	e58d3030	 str         r3, [sp, #0x30]
  0250c	ea000001	 b           |$LN23@VRFB_Rotat|
  02510		 |$LN22@VRFB_Rotat|
  02510	e3a03000	 mov         r3, #0
  02514	e58d3030	 str         r3, [sp, #0x30]
  02518		 |$LN23@VRFB_Rotat|

; 1219 :             goto cleanUp;

  02518	ea000014	 b           |$cleanUp$45481|
  0251c		 |$LN2@VRFB_Rotat|

; 1220 :         }
; 1221 :         
; 1222 :         //  Set new rotation angle
; 1223 :         g_VrfbContextList[index].dwRotationAngle = dwRotateAngle;

  0251c	e59d1004	 ldr         r1, [sp, #4]
  02520	e3a03020	 mov         r3, #0x20
  02524	e0020391	 mul         r2, r1, r3
  02528	e59f3094	 ldr         r3, [pc, #0x94]
  0252c	e0833002	 add         r3, r3, r2
  02530	e283200c	 add         r2, r3, #0xC
  02534	e59d3054	 ldr         r3, [sp, #0x54]
  02538	e5823000	 str         r3, [r2]

; 1224 :     }
; 1225 :     else

  0253c	ea00000b	 b           |$LN1@VRFB_Rotat|
  02540		 |$LN11@VRFB_Rotat|

; 1226 :     {
; 1227 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_RotateView: "
; 1228 :             L"Invalid view handle 0x%08X\r\n", hView
; 1229 :             ));

  02540	e59f3074	 ldr         r3, [pc, #0x74]
  02544	e5933440	 ldr         r3, [r3, #0x440]
  02548	e3130001	 tst         r3, #1
  0254c	0a000005	 beq         |$LN24@VRFB_Rotat|
  02550	e59d1050	 ldr         r1, [sp, #0x50]
  02554	e59f0064	 ldr         r0, [pc, #0x64]
  02558	eb000000	 bl          NKDbgPrintfW
  0255c	e3a03001	 mov         r3, #1
  02560	e58d3034	 str         r3, [sp, #0x34]
  02564	ea000001	 b           |$LN25@VRFB_Rotat|
  02568		 |$LN24@VRFB_Rotat|
  02568	e3a03000	 mov         r3, #0
  0256c	e58d3034	 str         r3, [sp, #0x34]
  02570		 |$LN25@VRFB_Rotat|
  02570		 |$LN1@VRFB_Rotat|
  02570		 |$cleanUp$45481|

; 1230 :         goto cleanUp;
; 1231 :     }
; 1232 :     
; 1233 : cleanUp:    
; 1234 :     //  Return result
; 1235 :     DEBUGMSG(ZONE_FUNCTION, (L"-VRFB_RotateView(bResult = %d)\r\n", bResult));

  02570	e59f3044	 ldr         r3, [pc, #0x44]
  02574	e5933440	 ldr         r3, [r3, #0x440]
  02578	e3130004	 tst         r3, #4
  0257c	0a000005	 beq         |$LN26@VRFB_Rotat|
  02580	e59d1010	 ldr         r1, [sp, #0x10]
  02584	e59f002c	 ldr         r0, [pc, #0x2C]
  02588	eb000000	 bl          NKDbgPrintfW
  0258c	e3a03001	 mov         r3, #1
  02590	e58d3038	 str         r3, [sp, #0x38]
  02594	ea000001	 b           |$LN27@VRFB_Rotat|
  02598		 |$LN26@VRFB_Rotat|
  02598	e3a03000	 mov         r3, #0
  0259c	e58d3038	 str         r3, [sp, #0x38]
  025a0		 |$LN27@VRFB_Rotat|

; 1236 :     return bResult;

  025a0	e59d3010	 ldr         r3, [sp, #0x10]
  025a4	e58d3014	 str         r3, [sp, #0x14]

; 1237 : }

  025a8	e59d0014	 ldr         r0, [sp, #0x14]
  025ac	e28dd03c	 add         sp, sp, #0x3C
  025b0	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  025b4	e12fff1e	 bx          lr
  025b8		 |$LN31@VRFB_Rotat|
  025b8		 |$LN32@VRFB_Rotat|
  025b8	00000000	 DCD         |??_C@_1EC@ECHJNCNF@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@|
  025bc		 |$LN33@VRFB_Rotat|
  025bc	00000000	 DCD         |dpCurSettings|
  025c0		 |$LN34@VRFB_Rotat|
  025c0	00000000	 DCD         |??_C@_1GK@LNABPJPI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@|
  025c4		 |$LN35@VRFB_Rotat|
  025c4	00000000	 DCD         |g_VrfbContextList|
  025c8		 |$LN36@VRFB_Rotat|
  025c8	00000000	 DCD         |??_C@_1JA@KCJLBIHD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAC@|
  025cc		 |$LN37@VRFB_Rotat|
  025cc	00000000	 DCD         |??_C@_1IK@HFCCNGDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm@|
  025d0		 |$LN38@VRFB_Rotat|
  025d0	00000000	 DCD         |??_C@_1GE@KAABFKBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@|
  025d4		 |$LN39@VRFB_Rotat|
  025d4	76726649	 DCD         0x76726649
  025d8		 |$LN40@VRFB_Rotat|
  025d8	00000000	 DCD         |??_C@_1EO@KNGPIFAJ@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAR?$AAo?$AAt?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@|
  025dc		 |$M46077|

			 ENDP  ; |VRFB_RotateView|

	EXPORT	|??_C@_1EC@HMMFPNJH@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@NILNIMCL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@PJMHAOEJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAu?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@BGKAOAIP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@HMIEMHMO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@NOGPJEEM@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@| [ DATA ] ; `string'

  00048			 AREA	 |.pdata|, PDATA
|$T46114| DCD	|$LN29@VRFB_Updat|
	DCD	0x40010e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@HMMFPNJH@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| DCB "-"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, "(", 0x0, "b", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@NILNIMCL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "v", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, " "
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@PJMHAOEJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAu?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "u"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "v", 0x0, "i", 0x0, "e", 0x0, "w", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@BGKAOAIP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "i", 0x0, "x", 0x0, "e", 0x0, "l"
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HMIEMHMO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@NOGPJEEM@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@| DCB "+"
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "V"
	DCB	0x0, "i", 0x0, "e", 0x0, "w", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  025dc			 AREA	 |.text|, CODE, ARM

  025dc		 |VRFB_UpdateView| PROC

; 1246 : {

  025dc		 |$LN29@VRFB_Updat|
  025dc	e1a0c00d	 mov         r12, sp
  025e0	e92d000f	 stmdb       sp!, {r0 - r3}
  025e4	e92d5000	 stmdb       sp!, {r12, lr}
  025e8	e24dd054	 sub         sp, sp, #0x54
  025ec		 |$M46111|

; 1247 :     BOOL        bResult = FALSE;

  025ec	e3a03000	 mov         r3, #0
  025f0	e58d3020	 str         r3, [sp, #0x20]

; 1248 :     Instance_t *pInstance = (Instance_t*)hContext;

  025f4	e59d305c	 ldr         r3, [sp, #0x5C]
  025f8	e58d301c	 str         r3, [sp, #0x1C]

; 1249 :     Device_t   *pDevice;
; 1250 :     DWORD       index;
; 1251 :     DWORD       dwImageWidth;
; 1252 :     DWORD       dwImageHeight;
; 1253 : 
; 1254 :  
; 1255 :     DEBUGMSG(ZONE_FUNCTION, (
; 1256 :         L"+VRFB_UpdateView(0x%08x, 0x%08x, %d, %d, %d, 0x%08x )\r\n", hContext, hView, dwPixelSize, dwWidth, dwHeight, dwBufferPhysAddr
; 1257 :         ));

  025fc	e59f33f0	 ldr         r3, [pc, #0x3F0]
  02600	e5933440	 ldr         r3, [r3, #0x440]
  02604	e3130004	 tst         r3, #4
  02608	0a00000d	 beq         |$LN11@VRFB_Updat|
  0260c	e59d3070	 ldr         r3, [sp, #0x70]
  02610	e58d3008	 str         r3, [sp, #8]
  02614	e59d306c	 ldr         r3, [sp, #0x6C]
  02618	e58d3004	 str         r3, [sp, #4]
  0261c	e59d3068	 ldr         r3, [sp, #0x68]
  02620	e58d3000	 str         r3, [sp]
  02624	e59d3064	 ldr         r3, [sp, #0x64]
  02628	e59d2060	 ldr         r2, [sp, #0x60]
  0262c	e59d105c	 ldr         r1, [sp, #0x5C]
  02630	e59f03d8	 ldr         r0, [pc, #0x3D8]
  02634	eb000000	 bl          NKDbgPrintfW
  02638	e3a03001	 mov         r3, #1
  0263c	e58d3034	 str         r3, [sp, #0x34]
  02640	ea000001	 b           |$LN12@VRFB_Updat|
  02644		 |$LN11@VRFB_Updat|
  02644	e3a03000	 mov         r3, #0
  02648	e58d3034	 str         r3, [sp, #0x34]
  0264c		 |$LN12@VRFB_Updat|

; 1258 : 
; 1259 :     // Check if we get correct context
; 1260 :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  0264c	e59d301c	 ldr         r3, [sp, #0x1C]
  02650	e3530000	 cmp         r3, #0
  02654	0a000004	 beq         |$LN7@VRFB_Updat|
  02658	e59d301c	 ldr         r3, [sp, #0x1C]
  0265c	e5932000	 ldr         r2, [r3]
  02660	e59f33a4	 ldr         r3, [pc, #0x3A4]
  02664	e1520003	 cmp         r2, r3
  02668	0a00000b	 beq         |$LN8@VRFB_Updat|
  0266c		 |$LN7@VRFB_Updat|

; 1261 :         {
; 1262 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_UpdateView: "
; 1263 :             L"Incorrect context param\r\n"
; 1264 :             ));

  0266c	e59f3380	 ldr         r3, [pc, #0x380]
  02670	e5933440	 ldr         r3, [r3, #0x440]
  02674	e3130001	 tst         r3, #1
  02678	0a000004	 beq         |$LN13@VRFB_Updat|
  0267c	e59f0384	 ldr         r0, [pc, #0x384]
  02680	eb000000	 bl          NKDbgPrintfW
  02684	e3a03001	 mov         r3, #1
  02688	e58d3038	 str         r3, [sp, #0x38]
  0268c	ea000001	 b           |$LN14@VRFB_Updat|
  02690		 |$LN13@VRFB_Updat|
  02690	e3a03000	 mov         r3, #0
  02694	e58d3038	 str         r3, [sp, #0x38]
  02698		 |$LN14@VRFB_Updat|

; 1265 :         goto cleanUp;

  02698	ea0000c2	 b           |$cleanUp$45542|
  0269c		 |$LN8@VRFB_Updat|

; 1266 :         }
; 1267 : 
; 1268 :     //  Get Device
; 1269 :     pDevice = pInstance->pDevice;

  0269c	e59d301c	 ldr         r3, [sp, #0x1C]
  026a0	e2833004	 add         r3, r3, #4
  026a4	e5933000	 ldr         r3, [r3]
  026a8	e58d3010	 str         r3, [sp, #0x10]

; 1270 : 
; 1271 :     //  Validate parameters
; 1272 :     if( (dwPixelSize != VRFB_PIXELSIZE_1B) && (dwPixelSize != VRFB_PIXELSIZE_2B) && (dwPixelSize != VRFB_PIXELSIZE_4B) )

  026ac	e59d3064	 ldr         r3, [sp, #0x64]
  026b0	e3530000	 cmp         r3, #0
  026b4	0a000011	 beq         |$LN6@VRFB_Updat|
  026b8	e59d3064	 ldr         r3, [sp, #0x64]
  026bc	e3530001	 cmp         r3, #1
  026c0	0a00000e	 beq         |$LN6@VRFB_Updat|
  026c4	e59d3064	 ldr         r3, [sp, #0x64]
  026c8	e3530002	 cmp         r3, #2
  026cc	0a00000b	 beq         |$LN6@VRFB_Updat|

; 1273 :         {
; 1274 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_UpdateView: "
; 1275 :             L"Invalid pixel size\r\n"
; 1276 :             ));

  026d0	e59f331c	 ldr         r3, [pc, #0x31C]
  026d4	e5933440	 ldr         r3, [r3, #0x440]
  026d8	e3130001	 tst         r3, #1
  026dc	0a000004	 beq         |$LN15@VRFB_Updat|
  026e0	e59f031c	 ldr         r0, [pc, #0x31C]
  026e4	eb000000	 bl          NKDbgPrintfW
  026e8	e3a03001	 mov         r3, #1
  026ec	e58d303c	 str         r3, [sp, #0x3C]
  026f0	ea000001	 b           |$LN16@VRFB_Updat|
  026f4		 |$LN15@VRFB_Updat|
  026f4	e3a03000	 mov         r3, #0
  026f8	e58d303c	 str         r3, [sp, #0x3C]
  026fc		 |$LN16@VRFB_Updat|

; 1277 :         goto cleanUp;

  026fc	ea0000a9	 b           |$cleanUp$45542|
  02700		 |$LN6@VRFB_Updat|

; 1278 :         }
; 1279 : 
; 1280 :     //  Ensure image width and height are multiple of page size
; 1281 :     dwImageWidth  = IMAGE_SIZE_ROUNDING(dwWidth, DEFAULT_PAGE_WIDTH);

  02700	e59d1068	 ldr         r1, [sp, #0x68]
  02704	e3a00010	 mov         r0, #0x10
  02708	eb000000	 bl          __rt_udiv
  0270c	e3510000	 cmp         r1, #0
  02710	1a000002	 bne         |$LN17@VRFB_Updat|
  02714	e59d3068	 ldr         r3, [sp, #0x68]
  02718	e58d3040	 str         r3, [sp, #0x40]
  0271c	ea000006	 b           |$LN18@VRFB_Updat|
  02720		 |$LN17@VRFB_Updat|
  02720	e59d1068	 ldr         r1, [sp, #0x68]
  02724	e3a00010	 mov         r0, #0x10
  02728	eb000000	 bl          __rt_udiv
  0272c	e3a03010	 mov         r3, #0x10
  02730	e0030390	 mul         r3, r0, r3
  02734	e2833010	 add         r3, r3, #0x10
  02738	e58d3040	 str         r3, [sp, #0x40]
  0273c		 |$LN18@VRFB_Updat|
  0273c	e59d3040	 ldr         r3, [sp, #0x40]
  02740	e58d3014	 str         r3, [sp, #0x14]

; 1282 :     dwImageHeight = IMAGE_SIZE_ROUNDING(dwHeight, DEFAULT_PAGE_HEIGHT);

  02744	e59d106c	 ldr         r1, [sp, #0x6C]
  02748	e3a00010	 mov         r0, #0x10
  0274c	eb000000	 bl          __rt_udiv
  02750	e3510000	 cmp         r1, #0
  02754	1a000002	 bne         |$LN19@VRFB_Updat|
  02758	e59d306c	 ldr         r3, [sp, #0x6C]
  0275c	e58d3044	 str         r3, [sp, #0x44]
  02760	ea000006	 b           |$LN20@VRFB_Updat|
  02764		 |$LN19@VRFB_Updat|
  02764	e59d106c	 ldr         r1, [sp, #0x6C]
  02768	e3a00010	 mov         r0, #0x10
  0276c	eb000000	 bl          __rt_udiv
  02770	e3a03010	 mov         r3, #0x10
  02774	e0030390	 mul         r3, r0, r3
  02778	e2833010	 add         r3, r3, #0x10
  0277c	e58d3044	 str         r3, [sp, #0x44]
  02780		 |$LN20@VRFB_Updat|
  02780	e59d3044	 ldr         r3, [sp, #0x44]
  02784	e58d300c	 str         r3, [sp, #0xC]

; 1283 : 
; 1284 : 
; 1285 :     //  Validate view handle
; 1286 :     index = (DWORD)hView - VRFB_VIEW_HANDLE_BASE;

  02788	e59d3060	 ldr         r3, [sp, #0x60]
  0278c	e2433206	 sub         r3, r3, #6, 4
  02790	e58d3018	 str         r3, [sp, #0x18]

; 1287 :     
; 1288 :     if( index < VRFB_ROTATION_CONTEXTS && g_VrfbContextList[index].bInUse )

  02794	e59d3018	 ldr         r3, [sp, #0x18]
  02798	e353000c	 cmp         r3, #0xC
  0279c	2a000075	 bcs         |$LN5@VRFB_Updat|
  027a0	e59d1018	 ldr         r1, [sp, #0x18]
  027a4	e3a03020	 mov         r3, #0x20
  027a8	e0020391	 mul         r2, r1, r3
  027ac	e59f3248	 ldr         r3, [pc, #0x248]
  027b0	e0833002	 add         r3, r3, r2
  027b4	e5933000	 ldr         r3, [r3]
  027b8	e3530000	 cmp         r3, #0
  027bc	0a00006d	 beq         |$LN5@VRFB_Updat|

; 1289 :     {
; 1290 :         //  Can't update parameters for views with internally allocated buffer memory
; 1291 :         if( g_VrfbContextList[index].dwBufferVirtAddr != 0 )

  027c0	e59d1018	 ldr         r1, [sp, #0x18]
  027c4	e3a03020	 mov         r3, #0x20
  027c8	e0020391	 mul         r2, r1, r3
  027cc	e59f3228	 ldr         r3, [pc, #0x228]
  027d0	e0833002	 add         r3, r3, r2
  027d4	e283301c	 add         r3, r3, #0x1C
  027d8	e5933000	 ldr         r3, [r3]
  027dc	e3530000	 cmp         r3, #0
  027e0	0a00000b	 beq         |$LN4@VRFB_Updat|

; 1292 :         {
; 1293 :             DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_UpdateView: "
; 1294 :                  L"Can't update view\r\n"
; 1295 :                 ));

  027e4	e59f3208	 ldr         r3, [pc, #0x208]
  027e8	e5933440	 ldr         r3, [r3, #0x440]
  027ec	e3130001	 tst         r3, #1
  027f0	0a000004	 beq         |$LN21@VRFB_Updat|
  027f4	e59f0204	 ldr         r0, [pc, #0x204]
  027f8	eb000000	 bl          NKDbgPrintfW
  027fc	e3a03001	 mov         r3, #1
  02800	e58d3048	 str         r3, [sp, #0x48]
  02804	ea000001	 b           |$LN22@VRFB_Updat|
  02808		 |$LN21@VRFB_Updat|
  02808	e3a03000	 mov         r3, #0
  0280c	e58d3048	 str         r3, [sp, #0x48]
  02810		 |$LN22@VRFB_Updat|

; 1296 :             goto cleanUp;

  02810	ea000064	 b           |$cleanUp$45542|
  02814		 |$LN4@VRFB_Updat|

; 1297 :         }
; 1298 :         
; 1299 :         //  Re-use existing buffer address if given one is 0, otherwise cache the value
; 1300 :         if( dwBufferPhysAddr == 0 )

  02814	e59d3070	 ldr         r3, [sp, #0x70]
  02818	e3530000	 cmp         r3, #0
  0281c	1a000008	 bne         |$LN3@VRFB_Updat|

; 1301 :         {
; 1302 :             dwBufferPhysAddr = g_VrfbContextList[index].dwBufferPhysAddr;

  02820	e59d1018	 ldr         r1, [sp, #0x18]
  02824	e3a03020	 mov         r3, #0x20
  02828	e0020391	 mul         r2, r1, r3
  0282c	e59f31c8	 ldr         r3, [pc, #0x1C8]
  02830	e0833002	 add         r3, r3, r2
  02834	e2833018	 add         r3, r3, #0x18
  02838	e5933000	 ldr         r3, [r3]
  0283c	e58d3070	 str         r3, [sp, #0x70]

; 1303 :         }
; 1304 :         else

  02840	ea000007	 b           |$LN2@VRFB_Updat|
  02844		 |$LN3@VRFB_Updat|

; 1305 :         {
; 1306 :             g_VrfbContextList[index].dwBufferPhysAddr = dwBufferPhysAddr;

  02844	e59d1018	 ldr         r1, [sp, #0x18]
  02848	e3a03020	 mov         r3, #0x20
  0284c	e0020391	 mul         r2, r1, r3
  02850	e59f31a4	 ldr         r3, [pc, #0x1A4]
  02854	e0833002	 add         r3, r3, r2
  02858	e2832018	 add         r2, r3, #0x18
  0285c	e59d3070	 ldr         r3, [sp, #0x70]
  02860	e5823000	 str         r3, [r2]
  02864		 |$LN2@VRFB_Updat|

; 1307 :         }
; 1308 : 
; 1309 :         //  Update real width and heigth
; 1310 :         g_VrfbContextList[index].dwWidth = dwWidth;

  02864	e59d1018	 ldr         r1, [sp, #0x18]
  02868	e3a03020	 mov         r3, #0x20
  0286c	e0020391	 mul         r2, r1, r3
  02870	e59f3184	 ldr         r3, [pc, #0x184]
  02874	e0833002	 add         r3, r3, r2
  02878	e2832004	 add         r2, r3, #4
  0287c	e59d3068	 ldr         r3, [sp, #0x68]
  02880	e5823000	 str         r3, [r2]

; 1311 :         g_VrfbContextList[index].dwHeight = dwHeight;

  02884	e59d1018	 ldr         r1, [sp, #0x18]
  02888	e3a03020	 mov         r3, #0x20
  0288c	e0020391	 mul         r2, r1, r3
  02890	e59f3164	 ldr         r3, [pc, #0x164]
  02894	e0833002	 add         r3, r3, r2
  02898	e2832008	 add         r2, r3, #8
  0289c	e59d306c	 ldr         r3, [sp, #0x6C]
  028a0	e5823000	 str         r3, [r2]

; 1312 : 
; 1313 : 
; 1314 :         //  Program the VRFB registers
; 1315 :         OUTREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_CONTROL, dwPixelSize|SMS_ROT_CONTROL_PAGEWIDTH(DEFAULT_PAGE_WIDTH)|SMS_ROT_CONTROL_PAGEHEIGHT(DEFAULT_PAGE_HEIGHT));

  028a4	e59d3064	 ldr         r3, [sp, #0x64]
  028a8	e3833040	 orr         r3, r3, #0x40
  028ac	e3830b01	 orr         r0, r3, #1, 22
  028b0	e59d3010	 ldr         r3, [sp, #0x10]
  028b4	e2833024	 add         r3, r3, #0x24
  028b8	e5933000	 ldr         r3, [r3]
  028bc	e283101c	 add         r1, r3, #0x1C
  028c0	e59d2018	 ldr         r2, [sp, #0x18]
  028c4	e3a03010	 mov         r3, #0x10
  028c8	e0030392	 mul         r3, r2, r3
  028cc	e0813003	 add         r3, r1, r3
  028d0	e5830000	 str         r0, [r3]

; 1316 :         OUTREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_SIZE, SMS_ROT_SIZE_WIDTH(dwImageWidth)|SMS_ROT_SIZE_HEIGHT(dwImageHeight));

  028d4	e59d2014	 ldr         r2, [sp, #0x14]
  028d8	e3a03c07	 mov         r3, #7, 24
  028dc	e38330ff	 orr         r3, r3, #0xFF
  028e0	e0021003	 and         r1, r2, r3
  028e4	e59d200c	 ldr         r2, [sp, #0xC]
  028e8	e3a03c07	 mov         r3, #7, 24
  028ec	e38330ff	 orr         r3, r3, #0xFF
  028f0	e0023003	 and         r3, r2, r3
  028f4	e1a03803	 mov         r3, r3, lsl #16
  028f8	e1810003	 orr         r0, r1, r3
  028fc	e59d3010	 ldr         r3, [sp, #0x10]
  02900	e2833024	 add         r3, r3, #0x24
  02904	e5933000	 ldr         r3, [r3]
  02908	e283101c	 add         r1, r3, #0x1C
  0290c	e59d2018	 ldr         r2, [sp, #0x18]
  02910	e3a03010	 mov         r3, #0x10
  02914	e0030392	 mul         r3, r2, r3
  02918	e0813003	 add         r3, r1, r3
  0291c	e2833004	 add         r3, r3, #4
  02920	e5830000	 str         r0, [r3]

; 1317 :         OUTREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[index].VRFB_SMS_ROT_PHYSICAL_BA, dwBufferPhysAddr);

  02924	e59d3010	 ldr         r3, [sp, #0x10]
  02928	e2833024	 add         r3, r3, #0x24
  0292c	e5933000	 ldr         r3, [r3]
  02930	e283101c	 add         r1, r3, #0x1C
  02934	e59d2018	 ldr         r2, [sp, #0x18]
  02938	e3a03010	 mov         r3, #0x10
  0293c	e0030392	 mul         r3, r2, r3
  02940	e0813003	 add         r3, r1, r3
  02944	e2832008	 add         r2, r3, #8
  02948	e59d3070	 ldr         r3, [sp, #0x70]
  0294c	e5823000	 str         r3, [r2]

; 1318 :         
; 1319 :         DebugPrintRegs(pDevice->pVRFBRegs, index);

  02950	e59d1018	 ldr         r1, [sp, #0x18]
  02954	e59d3010	 ldr         r3, [sp, #0x10]
  02958	e2833024	 add         r3, r3, #0x24
  0295c	e5930000	 ldr         r0, [r3]
  02960	eb000000	 bl          DebugPrintRegs

; 1320 : 
; 1321 :         // mark VRFB registers dirty, to update backup copy in OAL
; 1322 :         HalContextUpdateDirtyRegister(HAL_CONTEXTSAVE_VRFB);

  02964	e3a00080	 mov         r0, #0x80
  02968	eb000000	 bl          HalContextUpdateDirtyRegister

; 1323 :         
; 1324 :         bResult = TRUE;

  0296c	e3a03001	 mov         r3, #1
  02970	e58d3020	 str         r3, [sp, #0x20]

; 1325 :     }
; 1326 :     else

  02974	ea00000b	 b           |$LN1@VRFB_Updat|
  02978		 |$LN5@VRFB_Updat|

; 1327 :     {
; 1328 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_UpdateView: "
; 1329 :             L"Invalid view handle 0x%08X\r\n", hView
; 1330 :             ));

  02978	e59f3074	 ldr         r3, [pc, #0x74]
  0297c	e5933440	 ldr         r3, [r3, #0x440]
  02980	e3130001	 tst         r3, #1
  02984	0a000005	 beq         |$LN23@VRFB_Updat|
  02988	e59d1060	 ldr         r1, [sp, #0x60]
  0298c	e59f0064	 ldr         r0, [pc, #0x64]
  02990	eb000000	 bl          NKDbgPrintfW
  02994	e3a03001	 mov         r3, #1
  02998	e58d304c	 str         r3, [sp, #0x4C]
  0299c	ea000001	 b           |$LN24@VRFB_Updat|
  029a0		 |$LN23@VRFB_Updat|
  029a0	e3a03000	 mov         r3, #0
  029a4	e58d304c	 str         r3, [sp, #0x4C]
  029a8		 |$LN24@VRFB_Updat|
  029a8		 |$LN1@VRFB_Updat|
  029a8		 |$cleanUp$45542|

; 1331 :         goto cleanUp;
; 1332 :     }
; 1333 :     
; 1334 : cleanUp:    
; 1335 :     //  Return result
; 1336 :     DEBUGMSG(ZONE_FUNCTION, (L"-VRFB_UpdateView(bResult = %d)\r\n", bResult));

  029a8	e59f3044	 ldr         r3, [pc, #0x44]
  029ac	e5933440	 ldr         r3, [r3, #0x440]
  029b0	e3130004	 tst         r3, #4
  029b4	0a000005	 beq         |$LN25@VRFB_Updat|
  029b8	e59d1020	 ldr         r1, [sp, #0x20]
  029bc	e59f002c	 ldr         r0, [pc, #0x2C]
  029c0	eb000000	 bl          NKDbgPrintfW
  029c4	e3a03001	 mov         r3, #1
  029c8	e58d3050	 str         r3, [sp, #0x50]
  029cc	ea000001	 b           |$LN26@VRFB_Updat|
  029d0		 |$LN25@VRFB_Updat|
  029d0	e3a03000	 mov         r3, #0
  029d4	e58d3050	 str         r3, [sp, #0x50]
  029d8		 |$LN26@VRFB_Updat|

; 1337 :     return bResult;

  029d8	e59d3020	 ldr         r3, [sp, #0x20]
  029dc	e58d3030	 str         r3, [sp, #0x30]

; 1338 : }

  029e0	e59d0030	 ldr         r0, [sp, #0x30]
  029e4	e28dd054	 add         sp, sp, #0x54
  029e8	e89d6000	 ldmia       sp, {sp, lr}
  029ec	e12fff1e	 bx          lr
  029f0		 |$LN30@VRFB_Updat|
  029f0		 |$LN31@VRFB_Updat|
  029f0	00000000	 DCD         |??_C@_1EC@HMMFPNJH@?$AA?9?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AAb?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@|
  029f4		 |$LN32@VRFB_Updat|
  029f4	00000000	 DCD         |dpCurSettings|
  029f8		 |$LN33@VRFB_Updat|
  029f8	00000000	 DCD         |??_C@_1GK@NILNIMCL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@|
  029fc		 |$LN34@VRFB_Updat|
  029fc	00000000	 DCD         |g_VrfbContextList|
  02a00		 |$LN35@VRFB_Updat|
  02a00	00000000	 DCD         |??_C@_1FI@PJMHAOEJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAu?$AAp@|
  02a04		 |$LN36@VRFB_Updat|
  02a04	00000000	 DCD         |??_C@_1FK@BGKAOAIP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@|
  02a08		 |$LN37@VRFB_Updat|
  02a08	00000000	 DCD         |??_C@_1GE@HMIEMHMO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@|
  02a0c		 |$LN38@VRFB_Updat|
  02a0c	76726649	 DCD         0x76726649
  02a10		 |$LN39@VRFB_Updat|
  02a10	00000000	 DCD         |??_C@_1HA@NOGPJEEM@?$AA?$CL?$AAV?$AAR?$AAF?$AAB?$AA_?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@|
  02a14		 |$M46112|

			 ENDP  ; |VRFB_UpdateView|

	EXPORT	|??_C@_1GO@MBHNDOLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAN?$AAu?$AAm?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAc@| [ DATA ] ; `string'

  00050			 AREA	 |.pdata|, PDATA
|$T46132| DCD	|$LN9@VRFB_NumDi|
	DCD	0x40002d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@MBHNDOLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAN?$AAu?$AAm?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "N"
	DCB	0x0, "u", 0x0, "m", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "V", 0x0, "i", 0x0, "e"
	DCB	0x0, "w", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  02a14			 AREA	 |.text|, CODE, ARM

  02a14		 |VRFB_NumDisplayViews| PROC

; 1347 : {

  02a14		 |$LN9@VRFB_NumDi|
  02a14	e1a0c00d	 mov         r12, sp
  02a18	e92d0001	 stmdb       sp!, {r0}
  02a1c	e92d5000	 stmdb       sp!, {r12, lr}
  02a20	e24dd014	 sub         sp, sp, #0x14
  02a24		 |$M46129|

; 1348 :     DWORD       dwResult = 0;

  02a24	e3a03000	 mov         r3, #0
  02a28	e58d3008	 str         r3, [sp, #8]

; 1349 :     Instance_t *pInstance = (Instance_t*)hContext;

  02a2c	e59d301c	 ldr         r3, [sp, #0x1C]
  02a30	e58d3004	 str         r3, [sp, #4]

; 1350 :     Device_t   *pDevice;
; 1351 : 
; 1352 :     // Check if we get correct context
; 1353 :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  02a34	e59d3004	 ldr         r3, [sp, #4]
  02a38	e3530000	 cmp         r3, #0
  02a3c	0a000004	 beq         |$LN1@VRFB_NumDi|
  02a40	e59d3004	 ldr         r3, [sp, #4]
  02a44	e5932000	 ldr         r2, [r3]
  02a48	e59f3074	 ldr         r3, [pc, #0x74]
  02a4c	e1520003	 cmp         r2, r3
  02a50	0a00000b	 beq         |$LN2@VRFB_NumDi|
  02a54		 |$LN1@VRFB_NumDi|

; 1354 :         {
; 1355 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_NumDisplayViews: "
; 1356 :             L"Incorrect context param\r\n"
; 1357 :             ));

  02a54	e59f3064	 ldr         r3, [pc, #0x64]
  02a58	e5933440	 ldr         r3, [r3, #0x440]
  02a5c	e3130001	 tst         r3, #1
  02a60	0a000004	 beq         |$LN5@VRFB_NumDi|
  02a64	e59f0050	 ldr         r0, [pc, #0x50]
  02a68	eb000000	 bl          NKDbgPrintfW
  02a6c	e3a03001	 mov         r3, #1
  02a70	e58d3010	 str         r3, [sp, #0x10]
  02a74	ea000001	 b           |$LN6@VRFB_NumDi|
  02a78		 |$LN5@VRFB_NumDi|
  02a78	e3a03000	 mov         r3, #0
  02a7c	e58d3010	 str         r3, [sp, #0x10]
  02a80		 |$LN6@VRFB_NumDi|

; 1358 :         goto cleanUp;

  02a80	ea000007	 b           |$cleanUp$45576|
  02a84		 |$LN2@VRFB_NumDi|

; 1359 :         }
; 1360 : 
; 1361 :     //  Get Device
; 1362 :     pDevice = pInstance->pDevice;

  02a84	e59d3004	 ldr         r3, [sp, #4]
  02a88	e2833004	 add         r3, r3, #4
  02a8c	e5933000	 ldr         r3, [r3]
  02a90	e58d3000	 str         r3, [sp]

; 1363 : 
; 1364 :     //  Get value
; 1365 :     dwResult = pDevice->dwNumDisplayContexts;

  02a94	e59d3000	 ldr         r3, [sp]
  02a98	e2833004	 add         r3, r3, #4
  02a9c	e5933000	 ldr         r3, [r3]
  02aa0	e58d3008	 str         r3, [sp, #8]
  02aa4		 |$cleanUp$45576|

; 1366 :     
; 1367 : cleanUp:    
; 1368 :     //  Return result
; 1369 :     return dwResult;

  02aa4	e59d3008	 ldr         r3, [sp, #8]
  02aa8	e58d300c	 str         r3, [sp, #0xC]

; 1370 : }

  02aac	e59d000c	 ldr         r0, [sp, #0xC]
  02ab0	e28dd014	 add         sp, sp, #0x14
  02ab4	e89d6000	 ldmia       sp, {sp, lr}
  02ab8	e12fff1e	 bx          lr
  02abc		 |$LN10@VRFB_NumDi|
  02abc		 |$LN11@VRFB_NumDi|
  02abc	00000000	 DCD         |??_C@_1GO@MBHNDOLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAN?$AAu?$AAm?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAc@|
  02ac0		 |$LN12@VRFB_NumDi|
  02ac0	00000000	 DCD         |dpCurSettings|
  02ac4		 |$LN13@VRFB_NumDi|
  02ac4	76726649	 DCD         0x76726649
  02ac8		 |$M46130|

			 ENDP  ; |VRFB_NumDisplayViews|

	EXPORT	|??_C@_1GM@PAIPCKJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo@| [ DATA ] ; `string'

  00058			 AREA	 |.pdata|, PDATA
|$T46144| DCD	|$LN10@VRFB_GetDi|
	DCD	0x40003204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@PAIPCKJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "V", 0x0, "i", 0x0, "e"
	DCB	0x0, "w", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02ac8			 AREA	 |.text|, CODE, ARM

  02ac8		 |VRFB_GetDisplayView| PROC

; 1379 : {

  02ac8		 |$LN10@VRFB_GetDi|
  02ac8	e1a0c00d	 mov         r12, sp
  02acc	e92d0003	 stmdb       sp!, {r0, r1}
  02ad0	e92d5000	 stmdb       sp!, {r12, lr}
  02ad4	e24dd014	 sub         sp, sp, #0x14
  02ad8		 |$M46141|

; 1380 :     HANDLE      hView = NULL;

  02ad8	e3a03000	 mov         r3, #0
  02adc	e58d3008	 str         r3, [sp, #8]

; 1381 :     Instance_t *pInstance = (Instance_t*)hContext;

  02ae0	e59d301c	 ldr         r3, [sp, #0x1C]
  02ae4	e58d3004	 str         r3, [sp, #4]

; 1382 :     Device_t   *pDevice;
; 1383 : 
; 1384 :     // Check if we get correct context
; 1385 :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  02ae8	e59d3004	 ldr         r3, [sp, #4]
  02aec	e3530000	 cmp         r3, #0
  02af0	0a000004	 beq         |$LN2@VRFB_GetDi|
  02af4	e59d3004	 ldr         r3, [sp, #4]
  02af8	e5932000	 ldr         r2, [r3]
  02afc	e59f3088	 ldr         r3, [pc, #0x88]
  02b00	e1520003	 cmp         r2, r3
  02b04	0a00000b	 beq         |$LN3@VRFB_GetDi|
  02b08		 |$LN2@VRFB_GetDi|

; 1386 :         {
; 1387 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_GetDisplayView: "
; 1388 :             L"Incorrect context param\r\n"
; 1389 :             ));

  02b08	e59f3078	 ldr         r3, [pc, #0x78]
  02b0c	e5933440	 ldr         r3, [r3, #0x440]
  02b10	e3130001	 tst         r3, #1
  02b14	0a000004	 beq         |$LN6@VRFB_GetDi|
  02b18	e59f0064	 ldr         r0, [pc, #0x64]
  02b1c	eb000000	 bl          NKDbgPrintfW
  02b20	e3a03001	 mov         r3, #1
  02b24	e58d3010	 str         r3, [sp, #0x10]
  02b28	ea000001	 b           |$LN7@VRFB_GetDi|
  02b2c		 |$LN6@VRFB_GetDi|
  02b2c	e3a03000	 mov         r3, #0
  02b30	e58d3010	 str         r3, [sp, #0x10]
  02b34		 |$LN7@VRFB_GetDi|

; 1390 :         goto cleanUp;

  02b34	ea00000c	 b           |$cleanUp$45592|
  02b38		 |$LN3@VRFB_GetDi|

; 1391 :         }
; 1392 : 
; 1393 :     //  Get Device
; 1394 :     pDevice = pInstance->pDevice;

  02b38	e59d3004	 ldr         r3, [sp, #4]
  02b3c	e2833004	 add         r3, r3, #4
  02b40	e5933000	 ldr         r3, [r3]
  02b44	e58d3000	 str         r3, [sp]

; 1395 : 
; 1396 :     //  Check the index value
; 1397 :     if( dwIndex < pDevice->dwNumDisplayContexts )

  02b48	e59d3000	 ldr         r3, [sp]
  02b4c	e2833004	 add         r3, r3, #4
  02b50	e59d2020	 ldr         r2, [sp, #0x20]
  02b54	e5933000	 ldr         r3, [r3]
  02b58	e1520003	 cmp         r2, r3
  02b5c	2a000002	 bcs         |$LN1@VRFB_GetDi|

; 1398 :     {
; 1399 :         //  A view handle is just the index of the VRFB context
; 1400 :         hView = (HANDLE)(VRFB_VIEW_HANDLE_BASE + dwIndex);  

  02b60	e59d3020	 ldr         r3, [sp, #0x20]
  02b64	e2833206	 add         r3, r3, #6, 4
  02b68	e58d3008	 str         r3, [sp, #8]
  02b6c		 |$LN1@VRFB_GetDi|
  02b6c		 |$cleanUp$45592|

; 1401 :     }
; 1402 :     
; 1403 : cleanUp:    
; 1404 :     //  Return result
; 1405 :     return hView;

  02b6c	e59d3008	 ldr         r3, [sp, #8]
  02b70	e58d300c	 str         r3, [sp, #0xC]

; 1406 : }

  02b74	e59d000c	 ldr         r0, [sp, #0xC]
  02b78	e28dd014	 add         sp, sp, #0x14
  02b7c	e89d6000	 ldmia       sp, {sp, lr}
  02b80	e12fff1e	 bx          lr
  02b84		 |$LN11@VRFB_GetDi|
  02b84		 |$LN12@VRFB_GetDi|
  02b84	00000000	 DCD         |??_C@_1GM@PAIPCKJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo@|
  02b88		 |$LN13@VRFB_GetDi|
  02b88	00000000	 DCD         |dpCurSettings|
  02b8c		 |$LN14@VRFB_GetDi|
  02b8c	76726649	 DCD         0x76726649
  02b90		 |$M46142|

			 ENDP  ; |VRFB_GetDisplayView|

	EXPORT	|??_C@_1HA@NOCIAOKL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@MABFFDGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5@| [ DATA ] ; `string'

  00060			 AREA	 |.pdata|, PDATA
|$T46166| DCD	|$LN41@VRFB_GetDi@2|
	DCD	0x4001d704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@NOCIAOKL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "V", 0x0, "i", 0x0, "e"
	DCB	0x0, "w", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "d", 0x0, " ", 0x0, "v", 0x0, "i", 0x0, "e"
	DCB	0x0, "w", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "e"
	DCB	0x0, "x", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@MABFFDGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "V", 0x0, "R", 0x0, "F", 0x0, "B", 0x0, "_", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "V", 0x0, "i", 0x0, "e"
	DCB	0x0, "w", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  02b90			 AREA	 |.text|, CODE, ARM

  02b90		 |VRFB_GetDisplayViewInfo| PROC

; 1415 : {

  02b90		 |$LN41@VRFB_GetDi@2|
  02b90	e1a0c00d	 mov         r12, sp
  02b94	e92d000f	 stmdb       sp!, {r0 - r3}
  02b98	e92d5000	 stmdb       sp!, {r12, lr}
  02b9c	e24dd038	 sub         sp, sp, #0x38
  02ba0		 |$M46163|

; 1416 :     BOOL        bResult = FALSE;

  02ba0	e3a03000	 mov         r3, #0
  02ba4	e58d3008	 str         r3, [sp, #8]

; 1417 :     Instance_t *pInstance = (Instance_t*)hContext;

  02ba8	e59d3040	 ldr         r3, [sp, #0x40]
  02bac	e58d3004	 str         r3, [sp, #4]

; 1418 :     Device_t   *pDevice;
; 1419 :  
; 1420 : 
; 1421 :     // Check if we get correct context
; 1422 :     if ((pInstance == NULL) || (pInstance->cookie != VRFB_INSTANCE_COOKIE))

  02bb0	e59d3004	 ldr         r3, [sp, #4]
  02bb4	e3530000	 cmp         r3, #0
  02bb8	0a000004	 beq         |$LN23@VRFB_GetDi@2|
  02bbc	e59d3004	 ldr         r3, [sp, #4]
  02bc0	e5932000	 ldr         r2, [r3]
  02bc4	e59f371c	 ldr         r3, [pc, #0x71C]
  02bc8	e1520003	 cmp         r2, r3
  02bcc	0a00000b	 beq         |$LN24@VRFB_GetDi@2|
  02bd0		 |$LN23@VRFB_GetDi@2|

; 1423 :         {
; 1424 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_GetDisplayViewInfo: "
; 1425 :             L"Incorrect context param\r\n"
; 1426 :             ));

  02bd0	e59f3704	 ldr         r3, [pc, #0x704]
  02bd4	e5933440	 ldr         r3, [r3, #0x440]
  02bd8	e3130001	 tst         r3, #1
  02bdc	0a000004	 beq         |$LN27@VRFB_GetDi@2|
  02be0	e59f06fc	 ldr         r0, [pc, #0x6FC]
  02be4	eb000000	 bl          NKDbgPrintfW
  02be8	e3a03001	 mov         r3, #1
  02bec	e58d3014	 str         r3, [sp, #0x14]
  02bf0	ea000001	 b           |$LN28@VRFB_GetDi@2|
  02bf4		 |$LN27@VRFB_GetDi@2|
  02bf4	e3a03000	 mov         r3, #0
  02bf8	e58d3014	 str         r3, [sp, #0x14]
  02bfc		 |$LN28@VRFB_GetDi@2|

; 1427 :         goto cleanUp;

  02bfc	ea0001af	 b           |$cleanUp$45615|
  02c00		 |$LN24@VRFB_GetDi@2|

; 1428 :         }
; 1429 : 
; 1430 :     //  Get Device
; 1431 :     pDevice = pInstance->pDevice;

  02c00	e59d3004	 ldr         r3, [sp, #4]
  02c04	e2833004	 add         r3, r3, #4
  02c08	e5933000	 ldr         r3, [r3]
  02c0c	e58d3000	 str         r3, [sp]

; 1432 : 
; 1433 :     //  Check the index value
; 1434 :     if( dwIndex < pDevice->dwNumDisplayContexts )

  02c10	e59d3000	 ldr         r3, [sp]
  02c14	e2833004	 add         r3, r3, #4
  02c18	e59d2044	 ldr         r2, [sp, #0x44]
  02c1c	e5933000	 ldr         r3, [r3]
  02c20	e1520003	 cmp         r2, r3
  02c24	2a000199	 bcs         |$LN22@VRFB_GetDi@2|

; 1435 :     {
; 1436 :         DWORD   dwRotationOffset;
; 1437 :         
; 1438 :         //  Get VRFB view rotation offset for requested output angle
; 1439 :         switch( dwRotateAngle )

  02c28	e59d3048	 ldr         r3, [sp, #0x48]
  02c2c	e58d3018	 str         r3, [sp, #0x18]
  02c30	e59d3018	 ldr         r3, [sp, #0x18]
  02c34	e353005a	 cmp         r3, #0x5A
  02c38	0a000016	 beq         |$LN17@VRFB_GetDi@2|
  02c3c	e59d3018	 ldr         r3, [sp, #0x18]
  02c40	e35300b4	 cmp         r3, #0xB4
  02c44	0a000008	 beq         |$LN18@VRFB_GetDi@2|
  02c48	e59d2018	 ldr         r2, [sp, #0x18]
  02c4c	e3a03c01	 mov         r3, #1, 24
  02c50	e383300e	 orr         r3, r3, #0xE
  02c54	e1520003	 cmp         r2, r3
  02c58	0a000000	 beq         |$LN19@VRFB_GetDi@2|
  02c5c	ea000010	 b           |$LN16@VRFB_GetDi@2|
  02c60		 |$LN19@VRFB_GetDi@2|

; 1440 :         {
; 1441 :             case VRFB_ROTATE_ANGLE_270:
; 1442 :                 dwRotationOffset = VRFB_VIEW_SIZE;

  02c60	e3a03401	 mov         r3, #1, 8
  02c64	e58d300c	 str         r3, [sp, #0xC]

; 1443 :                 break;

  02c68	ea000017	 b           |$LN20@VRFB_GetDi@2|
  02c6c		 |$LN18@VRFB_GetDi@2|

; 1444 :                 
; 1445 :             case VRFB_ROTATE_ANGLE_180:
; 1446 :                 dwRotationOffset = (bMirror) ? 0 : 2*VRFB_VIEW_SIZE;

  02c6c	e59d304c	 ldr         r3, [sp, #0x4C]
  02c70	e3530000	 cmp         r3, #0
  02c74	0a000002	 beq         |$LN29@VRFB_GetDi@2|
  02c78	e3a03000	 mov         r3, #0
  02c7c	e58d301c	 str         r3, [sp, #0x1C]
  02c80	ea000001	 b           |$LN30@VRFB_GetDi@2|
  02c84		 |$LN29@VRFB_GetDi@2|
  02c84	e3a03402	 mov         r3, #2, 8
  02c88	e58d301c	 str         r3, [sp, #0x1C]
  02c8c		 |$LN30@VRFB_GetDi@2|
  02c8c	e59d301c	 ldr         r3, [sp, #0x1C]
  02c90	e58d300c	 str         r3, [sp, #0xC]

; 1447 :                 break;

  02c94	ea00000c	 b           |$LN20@VRFB_GetDi@2|
  02c98		 |$LN17@VRFB_GetDi@2|

; 1448 : 
; 1449 :             case VRFB_ROTATE_ANGLE_90:
; 1450 :                 dwRotationOffset = 3*VRFB_VIEW_SIZE;

  02c98	e3a03403	 mov         r3, #3, 8
  02c9c	e58d300c	 str         r3, [sp, #0xC]

; 1451 :                 break;

  02ca0	ea000009	 b           |$LN20@VRFB_GetDi@2|
  02ca4		 |$LN16@VRFB_GetDi@2|

; 1452 : 
; 1453 :             case VRFB_ROTATE_ANGLE_0:
; 1454 :             default:
; 1455 :                 dwRotationOffset = (bMirror) ? 2*VRFB_VIEW_SIZE : 0;

  02ca4	e59d304c	 ldr         r3, [sp, #0x4C]
  02ca8	e3530000	 cmp         r3, #0
  02cac	0a000002	 beq         |$LN31@VRFB_GetDi@2|
  02cb0	e3a03402	 mov         r3, #2, 8
  02cb4	e58d3020	 str         r3, [sp, #0x20]
  02cb8	ea000001	 b           |$LN32@VRFB_GetDi@2|
  02cbc		 |$LN31@VRFB_GetDi@2|
  02cbc	e3a03000	 mov         r3, #0
  02cc0	e58d3020	 str         r3, [sp, #0x20]
  02cc4		 |$LN32@VRFB_GetDi@2|
  02cc4	e59d3020	 ldr         r3, [sp, #0x20]
  02cc8	e58d300c	 str         r3, [sp, #0xC]
  02ccc		 |$LN20@VRFB_GetDi@2|

; 1456 :                 break;
; 1457 :         }
; 1458 : 
; 1459 : 
; 1460 :         //  Fill in the view info structure
; 1461 :         memset( pInfo, 0, sizeof(VRFB_VIEW_INFO));

  02ccc	e3a02040	 mov         r2, #0x40
  02cd0	e3a01000	 mov         r1, #0
  02cd4	e59d0050	 ldr         r0, [sp, #0x50]
  02cd8	eb000000	 bl          memset

; 1462 :         
; 1463 :         pInfo->dwPixelSize = INREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[dwIndex].VRFB_SMS_ROT_CONTROL) & 0x00000003;

  02cdc	e59d3000	 ldr         r3, [sp]
  02ce0	e2833024	 add         r3, r3, #0x24
  02ce4	e5933000	 ldr         r3, [r3]
  02ce8	e283101c	 add         r1, r3, #0x1C
  02cec	e59d2044	 ldr         r2, [sp, #0x44]
  02cf0	e3a03010	 mov         r3, #0x10
  02cf4	e0030392	 mul         r3, r2, r3
  02cf8	e0813003	 add         r3, r1, r3
  02cfc	e5933000	 ldr         r3, [r3]
  02d00	e2032003	 and         r2, r3, #3
  02d04	e59d3050	 ldr         r3, [sp, #0x50]
  02d08	e2833004	 add         r3, r3, #4
  02d0c	e5832000	 str         r2, [r3]

; 1464 :         pInfo->dwPixelSizeBytes = PIXEL_SIZE_TO_BYTES(pInfo->dwPixelSize);

  02d10	e59d3050	 ldr         r3, [sp, #0x50]
  02d14	e2833004	 add         r3, r3, #4
  02d18	e5932000	 ldr         r2, [r3]
  02d1c	e3a03001	 mov         r3, #1
  02d20	e1a02213	 mov         r2, r3, lsl r2
  02d24	e59d3050	 ldr         r3, [sp, #0x50]
  02d28	e2833008	 add         r3, r3, #8
  02d2c	e5832000	 str         r2, [r3]

; 1465 :         pInfo->dwWidth = g_VrfbContextList[dwIndex].dwWidth;

  02d30	e59d1044	 ldr         r1, [sp, #0x44]
  02d34	e3a03020	 mov         r3, #0x20
  02d38	e0020391	 mul         r2, r1, r3
  02d3c	e59f359c	 ldr         r3, [pc, #0x59C]
  02d40	e0833002	 add         r3, r3, r2
  02d44	e2831004	 add         r1, r3, #4
  02d48	e59d3050	 ldr         r3, [sp, #0x50]
  02d4c	e283200c	 add         r2, r3, #0xC
  02d50	e5913000	 ldr         r3, [r1]
  02d54	e5823000	 str         r3, [r2]

; 1466 :         pInfo->dwHeight = g_VrfbContextList[dwIndex].dwHeight;

  02d58	e59d1044	 ldr         r1, [sp, #0x44]
  02d5c	e3a03020	 mov         r3, #0x20
  02d60	e0020391	 mul         r2, r1, r3
  02d64	e59f3574	 ldr         r3, [pc, #0x574]
  02d68	e0833002	 add         r3, r3, r2
  02d6c	e2831008	 add         r1, r3, #8
  02d70	e59d3050	 ldr         r3, [sp, #0x50]
  02d74	e2832010	 add         r2, r3, #0x10
  02d78	e5913000	 ldr         r3, [r1]
  02d7c	e5823000	 str         r3, [r2]

; 1467 :         pInfo->dwPageWidth = DEFAULT_PAGE_WIDTH;

  02d80	e59d3050	 ldr         r3, [sp, #0x50]
  02d84	e2832014	 add         r2, r3, #0x14
  02d88	e3a03004	 mov         r3, #4
  02d8c	e5823000	 str         r3, [r2]

; 1468 :         pInfo->dwPageHeight = DEFAULT_PAGE_HEIGHT;

  02d90	e59d3050	 ldr         r3, [sp, #0x50]
  02d94	e2832018	 add         r2, r3, #0x18
  02d98	e3a03004	 mov         r3, #4
  02d9c	e5823000	 str         r3, [r2]

; 1469 :         pInfo->dwImageWidth = INREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[dwIndex].VRFB_SMS_ROT_SIZE) & 0x000007FF;

  02da0	e59d3000	 ldr         r3, [sp]
  02da4	e2833024	 add         r3, r3, #0x24
  02da8	e5933000	 ldr         r3, [r3]
  02dac	e283101c	 add         r1, r3, #0x1C
  02db0	e59d2044	 ldr         r2, [sp, #0x44]
  02db4	e3a03010	 mov         r3, #0x10
  02db8	e0030392	 mul         r3, r2, r3
  02dbc	e0813003	 add         r3, r1, r3
  02dc0	e2833004	 add         r3, r3, #4
  02dc4	e5932000	 ldr         r2, [r3]
  02dc8	e3a03c07	 mov         r3, #7, 24
  02dcc	e38330ff	 orr         r3, r3, #0xFF
  02dd0	e0022003	 and         r2, r2, r3
  02dd4	e59d3050	 ldr         r3, [sp, #0x50]
  02dd8	e283301c	 add         r3, r3, #0x1C
  02ddc	e5832000	 str         r2, [r3]

; 1470 :         pInfo->dwImageHeight = (INREG32(&pDevice->pVRFBRegs->aVRFB_SMS_ROT_CTRL[dwIndex].VRFB_SMS_ROT_SIZE)>>16) & 0x000007FF;

  02de0	e59d3000	 ldr         r3, [sp]
  02de4	e2833024	 add         r3, r3, #0x24
  02de8	e5933000	 ldr         r3, [r3]
  02dec	e283101c	 add         r1, r3, #0x1C
  02df0	e59d2044	 ldr         r2, [sp, #0x44]
  02df4	e3a03010	 mov         r3, #0x10
  02df8	e0030392	 mul         r3, r2, r3
  02dfc	e0813003	 add         r3, r1, r3
  02e00	e2833004	 add         r3, r3, #4
  02e04	e5933000	 ldr         r3, [r3]
  02e08	e1a03283	 mov         r3, r3, lsl #5
  02e0c	e1a02aa3	 mov         r2, r3, lsr #21
  02e10	e59d3050	 ldr         r3, [sp, #0x50]
  02e14	e2833020	 add         r3, r3, #0x20
  02e18	e5832000	 str         r2, [r3]

; 1471 :         pInfo->dwImageStride = PIXEL_SIZE_TO_BYTES(pInfo->dwPixelSize) * VRFB_IMAGE_WIDTH_MAX;

  02e1c	e59d3050	 ldr         r3, [sp, #0x50]
  02e20	e2833004	 add         r3, r3, #4
  02e24	e5932000	 ldr         r2, [r3]
  02e28	e3a03001	 mov         r3, #1
  02e2c	e1a01213	 mov         r1, r3, lsl r2
  02e30	e3a03b02	 mov         r3, #2, 22
  02e34	e0020391	 mul         r2, r1, r3
  02e38	e59d3050	 ldr         r3, [sp, #0x50]
  02e3c	e2833024	 add         r3, r3, #0x24
  02e40	e5832000	 str         r2, [r3]

; 1472 :         pInfo->dwRotationAngle = dwRotateAngle;

  02e44	e59d3050	 ldr         r3, [sp, #0x50]
  02e48	e283202c	 add         r2, r3, #0x2C
  02e4c	e59d3048	 ldr         r3, [sp, #0x48]
  02e50	e5823000	 str         r3, [r2]

; 1473 :         pInfo->dwVirtualAddr = g_VrfbContextList[dwIndex].dwVirtualAddr;

  02e54	e59d1044	 ldr         r1, [sp, #0x44]
  02e58	e3a03020	 mov         r3, #0x20
  02e5c	e0020391	 mul         r2, r1, r3
  02e60	e59f3478	 ldr         r3, [pc, #0x478]
  02e64	e0833002	 add         r3, r3, r2
  02e68	e2831014	 add         r1, r3, #0x14
  02e6c	e59d3050	 ldr         r3, [sp, #0x50]
  02e70	e2832030	 add         r2, r3, #0x30
  02e74	e5913000	 ldr         r3, [r1]
  02e78	e5823000	 str         r3, [r2]

; 1474 :         pInfo->dwPhysicalAddrInput = g_VrfbContextList[dwIndex].dwPhysicalAddr;

  02e7c	e59d1044	 ldr         r1, [sp, #0x44]
  02e80	e3a03020	 mov         r3, #0x20
  02e84	e0020391	 mul         r2, r1, r3
  02e88	e59f3450	 ldr         r3, [pc, #0x450]
  02e8c	e0833002	 add         r3, r3, r2
  02e90	e2831010	 add         r1, r3, #0x10
  02e94	e59d3050	 ldr         r3, [sp, #0x50]
  02e98	e2832034	 add         r2, r3, #0x34
  02e9c	e5913000	 ldr         r3, [r1]
  02ea0	e5823000	 str         r3, [r2]

; 1475 :         pInfo->dwPhysicalAddrOutput = g_VrfbContextList[dwIndex].dwPhysicalAddr + dwRotationOffset;

  02ea4	e59d1044	 ldr         r1, [sp, #0x44]
  02ea8	e3a03020	 mov         r3, #0x20
  02eac	e0020391	 mul         r2, r1, r3
  02eb0	e59f3428	 ldr         r3, [pc, #0x428]
  02eb4	e0833002	 add         r3, r3, r2
  02eb8	e2833010	 add         r3, r3, #0x10
  02ebc	e5932000	 ldr         r2, [r3]
  02ec0	e59d300c	 ldr         r3, [sp, #0xC]
  02ec4	e0822003	 add         r2, r2, r3
  02ec8	e59d3050	 ldr         r3, [sp, #0x50]
  02ecc	e2833038	 add         r3, r3, #0x38
  02ed0	e5832000	 str         r2, [r3]

; 1476 :         pInfo->dwPhysicalBufferAddr = g_VrfbContextList[dwIndex].dwBufferPhysAddr;

  02ed4	e59d1044	 ldr         r1, [sp, #0x44]
  02ed8	e3a03020	 mov         r3, #0x20
  02edc	e0020391	 mul         r2, r1, r3
  02ee0	e59f33f8	 ldr         r3, [pc, #0x3F8]
  02ee4	e0833002	 add         r3, r3, r2
  02ee8	e2831018	 add         r1, r3, #0x18
  02eec	e59d3050	 ldr         r3, [sp, #0x50]
  02ef0	e283203c	 add         r2, r3, #0x3C
  02ef4	e5913000	 ldr         r3, [r1]
  02ef8	e5823000	 str         r3, [r2]

; 1477 :         
; 1478 :         //  Adjust for VRFB limit on image width and height (0 indicates max of 2K pixels)
; 1479 :         pInfo->dwImageWidth = (pInfo->dwImageWidth == 0) ? VRFB_IMAGE_WIDTH_MAX : pInfo->dwImageWidth;

  02efc	e59d3050	 ldr         r3, [sp, #0x50]
  02f00	e283301c	 add         r3, r3, #0x1C
  02f04	e5933000	 ldr         r3, [r3]
  02f08	e3530000	 cmp         r3, #0
  02f0c	1a000002	 bne         |$LN33@VRFB_GetDi@2|
  02f10	e3a03b02	 mov         r3, #2, 22
  02f14	e58d3024	 str         r3, [sp, #0x24]
  02f18	ea000003	 b           |$LN34@VRFB_GetDi@2|
  02f1c		 |$LN33@VRFB_GetDi@2|
  02f1c	e59d3050	 ldr         r3, [sp, #0x50]
  02f20	e283301c	 add         r3, r3, #0x1C
  02f24	e5933000	 ldr         r3, [r3]
  02f28	e58d3024	 str         r3, [sp, #0x24]
  02f2c		 |$LN34@VRFB_GetDi@2|
  02f2c	e59d3050	 ldr         r3, [sp, #0x50]
  02f30	e283201c	 add         r2, r3, #0x1C
  02f34	e59d3024	 ldr         r3, [sp, #0x24]
  02f38	e5823000	 str         r3, [r2]

; 1480 :         pInfo->dwImageHeight = (pInfo->dwImageHeight == 0) ? VRFB_IMAGE_HEIGHT_MAX : pInfo->dwImageHeight;

  02f3c	e59d3050	 ldr         r3, [sp, #0x50]
  02f40	e2833020	 add         r3, r3, #0x20
  02f44	e5933000	 ldr         r3, [r3]
  02f48	e3530000	 cmp         r3, #0
  02f4c	1a000002	 bne         |$LN35@VRFB_GetDi@2|
  02f50	e3a03b02	 mov         r3, #2, 22
  02f54	e58d3028	 str         r3, [sp, #0x28]
  02f58	ea000003	 b           |$LN36@VRFB_GetDi@2|
  02f5c		 |$LN35@VRFB_GetDi@2|
  02f5c	e59d3050	 ldr         r3, [sp, #0x50]
  02f60	e2833020	 add         r3, r3, #0x20
  02f64	e5933000	 ldr         r3, [r3]
  02f68	e58d3028	 str         r3, [sp, #0x28]
  02f6c		 |$LN36@VRFB_GetDi@2|
  02f6c	e59d3050	 ldr         r3, [sp, #0x50]
  02f70	e2832020	 add         r2, r3, #0x20
  02f74	e59d3028	 ldr         r3, [sp, #0x28]
  02f78	e5823000	 str         r3, [r2]

; 1481 : 
; 1482 :         //  Compute pixel origin offset
; 1483 :         if( bMirror )

  02f7c	e59d304c	 ldr         r3, [sp, #0x4C]
  02f80	e3530000	 cmp         r3, #0
  02f84	0a000069	 beq         |$LN15@VRFB_GetDi@2|

; 1484 :         {
; 1485 :             //  Compute pixel origin offset (mirrored)
; 1486 :             switch( dwRotateAngle )

  02f88	e59d3048	 ldr         r3, [sp, #0x48]
  02f8c	e58d302c	 str         r3, [sp, #0x2C]
  02f90	e59d302c	 ldr         r3, [sp, #0x2C]
  02f94	e353005a	 cmp         r3, #0x5A
  02f98	0a000036	 beq         |$LN10@VRFB_GetDi@2|
  02f9c	e59d302c	 ldr         r3, [sp, #0x2C]
  02fa0	e35300b4	 cmp         r3, #0xB4
  02fa4	0a000025	 beq         |$LN11@VRFB_GetDi@2|
  02fa8	e59d202c	 ldr         r2, [sp, #0x2C]
  02fac	e3a03c01	 mov         r3, #1, 24
  02fb0	e383300e	 orr         r3, r3, #0xE
  02fb4	e1520003	 cmp         r2, r3
  02fb8	0a000000	 beq         |$LN12@VRFB_GetDi@2|
  02fbc	ea00003b	 b           |$LN9@VRFB_GetDi@2|
  02fc0		 |$LN12@VRFB_GetDi@2|

; 1487 :             {
; 1488 :                 case VRFB_ROTATE_ANGLE_270:
; 1489 :                     pInfo->dwOriginOffset  = VRFB_IMAGE_WIDTH_MAX * (pInfo->dwWidth - 1) * pInfo->dwPixelSizeBytes;

  02fc0	e59d3050	 ldr         r3, [sp, #0x50]
  02fc4	e283300c	 add         r3, r3, #0xC
  02fc8	e5933000	 ldr         r3, [r3]
  02fcc	e2432001	 sub         r2, r3, #1
  02fd0	e3a03b02	 mov         r3, #2, 22
  02fd4	e0010392	 mul         r1, r2, r3
  02fd8	e59d3050	 ldr         r3, [sp, #0x50]
  02fdc	e2833008	 add         r3, r3, #8
  02fe0	e5933000	 ldr         r3, [r3]
  02fe4	e0020391	 mul         r2, r1, r3
  02fe8	e59d3050	 ldr         r3, [sp, #0x50]
  02fec	e2833028	 add         r3, r3, #0x28
  02ff0	e5832000	 str         r2, [r3]

; 1490 :                     pInfo->dwOriginOffset += (pInfo->dwImageHeight - pInfo->dwHeight) * pInfo->dwPixelSizeBytes;

  02ff4	e59d3050	 ldr         r3, [sp, #0x50]
  02ff8	e2830028	 add         r0, r3, #0x28
  02ffc	e59d3050	 ldr         r3, [sp, #0x50]
  03000	e2832020	 add         r2, r3, #0x20
  03004	e59d3050	 ldr         r3, [sp, #0x50]
  03008	e2833010	 add         r3, r3, #0x10
  0300c	e5922000	 ldr         r2, [r2]
  03010	e5933000	 ldr         r3, [r3]
  03014	e0421003	 sub         r1, r2, r3
  03018	e59d3050	 ldr         r3, [sp, #0x50]
  0301c	e2833008	 add         r3, r3, #8
  03020	e5933000	 ldr         r3, [r3]
  03024	e0020391	 mul         r2, r1, r3
  03028	e5903000	 ldr         r3, [r0]
  0302c	e0832002	 add         r2, r3, r2
  03030	e59d3050	 ldr         r3, [sp, #0x50]
  03034	e2833028	 add         r3, r3, #0x28
  03038	e5832000	 str         r2, [r3]

; 1491 :                     break;

  0303c	ea00003a	 b           |$LN13@VRFB_GetDi@2|
  03040		 |$LN11@VRFB_GetDi@2|

; 1492 :                     
; 1493 :                 case VRFB_ROTATE_ANGLE_180:
; 1494 :                     pInfo->dwOriginOffset  = VRFB_IMAGE_WIDTH_MAX * (pInfo->dwHeight - 1) * pInfo->dwPixelSizeBytes;

  03040	e59d3050	 ldr         r3, [sp, #0x50]
  03044	e2833010	 add         r3, r3, #0x10
  03048	e5933000	 ldr         r3, [r3]
  0304c	e2432001	 sub         r2, r3, #1
  03050	e3a03b02	 mov         r3, #2, 22
  03054	e0010392	 mul         r1, r2, r3
  03058	e59d3050	 ldr         r3, [sp, #0x50]
  0305c	e2833008	 add         r3, r3, #8
  03060	e5933000	 ldr         r3, [r3]
  03064	e0020391	 mul         r2, r1, r3
  03068	e59d3050	 ldr         r3, [sp, #0x50]
  0306c	e2833028	 add         r3, r3, #0x28
  03070	e5832000	 str         r2, [r3]

; 1495 :                     break;

  03074	ea00002c	 b           |$LN13@VRFB_GetDi@2|
  03078		 |$LN10@VRFB_GetDi@2|

; 1496 : 
; 1497 :                 case VRFB_ROTATE_ANGLE_90:
; 1498 :                     pInfo->dwOriginOffset = VRFB_IMAGE_HEIGHT_MAX * (pInfo->dwImageWidth - 1) * pInfo->dwPixelSizeBytes;

  03078	e59d3050	 ldr         r3, [sp, #0x50]
  0307c	e283301c	 add         r3, r3, #0x1C
  03080	e5933000	 ldr         r3, [r3]
  03084	e2432001	 sub         r2, r3, #1
  03088	e3a03b02	 mov         r3, #2, 22
  0308c	e0010392	 mul         r1, r2, r3
  03090	e59d3050	 ldr         r3, [sp, #0x50]
  03094	e2833008	 add         r3, r3, #8
  03098	e5933000	 ldr         r3, [r3]
  0309c	e0020391	 mul         r2, r1, r3
  030a0	e59d3050	 ldr         r3, [sp, #0x50]
  030a4	e2833028	 add         r3, r3, #0x28
  030a8	e5832000	 str         r2, [r3]

; 1499 :                     break;

  030ac	ea00001e	 b           |$LN13@VRFB_GetDi@2|
  030b0		 |$LN9@VRFB_GetDi@2|

; 1500 : 
; 1501 :                 case VRFB_ROTATE_ANGLE_0:
; 1502 :                 default:
; 1503 :                     pInfo->dwOriginOffset  = VRFB_IMAGE_WIDTH_MAX * (pInfo->dwImageHeight - 1) * pInfo->dwPixelSizeBytes;

  030b0	e59d3050	 ldr         r3, [sp, #0x50]
  030b4	e2833020	 add         r3, r3, #0x20
  030b8	e5933000	 ldr         r3, [r3]
  030bc	e2432001	 sub         r2, r3, #1
  030c0	e3a03b02	 mov         r3, #2, 22
  030c4	e0010392	 mul         r1, r2, r3
  030c8	e59d3050	 ldr         r3, [sp, #0x50]
  030cc	e2833008	 add         r3, r3, #8
  030d0	e5933000	 ldr         r3, [r3]
  030d4	e0020391	 mul         r2, r1, r3
  030d8	e59d3050	 ldr         r3, [sp, #0x50]
  030dc	e2833028	 add         r3, r3, #0x28
  030e0	e5832000	 str         r2, [r3]

; 1504 :                     pInfo->dwOriginOffset += (pInfo->dwImageWidth - pInfo->dwWidth) * pInfo->dwPixelSizeBytes;

  030e4	e59d3050	 ldr         r3, [sp, #0x50]
  030e8	e2830028	 add         r0, r3, #0x28
  030ec	e59d3050	 ldr         r3, [sp, #0x50]
  030f0	e283201c	 add         r2, r3, #0x1C
  030f4	e59d3050	 ldr         r3, [sp, #0x50]
  030f8	e283300c	 add         r3, r3, #0xC
  030fc	e5922000	 ldr         r2, [r2]
  03100	e5933000	 ldr         r3, [r3]
  03104	e0421003	 sub         r1, r2, r3
  03108	e59d3050	 ldr         r3, [sp, #0x50]
  0310c	e2833008	 add         r3, r3, #8
  03110	e5933000	 ldr         r3, [r3]
  03114	e0020391	 mul         r2, r1, r3
  03118	e5903000	 ldr         r3, [r0]
  0311c	e0832002	 add         r2, r3, r2
  03120	e59d3050	 ldr         r3, [sp, #0x50]
  03124	e2833028	 add         r3, r3, #0x28
  03128	e5832000	 str         r2, [r3]
  0312c		 |$LN13@VRFB_GetDi@2|

; 1505 :                     break;
; 1506 :             }
; 1507 :         }
; 1508 :         else

  0312c	ea000054	 b           |$LN8@VRFB_GetDi@2|
  03130		 |$LN15@VRFB_GetDi@2|

; 1509 :         {
; 1510 :             //  Compute pixel origin offset (non-mirrored)
; 1511 :             switch( dwRotateAngle )

  03130	e59d3048	 ldr         r3, [sp, #0x48]
  03134	e58d3030	 str         r3, [sp, #0x30]
  03138	e59d3030	 ldr         r3, [sp, #0x30]
  0313c	e353005a	 cmp         r3, #0x5A
  03140	0a00003a	 beq         |$LN3@VRFB_GetDi@2|
  03144	e59d3030	 ldr         r3, [sp, #0x30]
  03148	e35300b4	 cmp         r3, #0xB4
  0314c	0a000014	 beq         |$LN4@VRFB_GetDi@2|
  03150	e59d2030	 ldr         r2, [sp, #0x30]
  03154	e3a03c01	 mov         r3, #1, 24
  03158	e383300e	 orr         r3, r3, #0xE
  0315c	e1520003	 cmp         r2, r3
  03160	0a000000	 beq         |$LN5@VRFB_GetDi@2|
  03164	ea000042	 b           |$LN2@VRFB_GetDi@2|
  03168		 |$LN5@VRFB_GetDi@2|

; 1512 :             {
; 1513 :                 case VRFB_ROTATE_ANGLE_270:
; 1514 :                     pInfo->dwOriginOffset = (pInfo->dwImageHeight - pInfo->dwHeight) * pInfo->dwPixelSizeBytes;

  03168	e59d3050	 ldr         r3, [sp, #0x50]
  0316c	e2832020	 add         r2, r3, #0x20
  03170	e59d3050	 ldr         r3, [sp, #0x50]
  03174	e2833010	 add         r3, r3, #0x10
  03178	e5922000	 ldr         r2, [r2]
  0317c	e5933000	 ldr         r3, [r3]
  03180	e0421003	 sub         r1, r2, r3
  03184	e59d3050	 ldr         r3, [sp, #0x50]
  03188	e2833008	 add         r3, r3, #8
  0318c	e5933000	 ldr         r3, [r3]
  03190	e0020391	 mul         r2, r1, r3
  03194	e59d3050	 ldr         r3, [sp, #0x50]
  03198	e2833028	 add         r3, r3, #0x28
  0319c	e5832000	 str         r2, [r3]

; 1515 :                     break;

  031a0	ea000037	 b           |$LN6@VRFB_GetDi@2|
  031a4		 |$LN4@VRFB_GetDi@2|

; 1516 :                     
; 1517 :                 case VRFB_ROTATE_ANGLE_180:
; 1518 :                     pInfo->dwOriginOffset  = VRFB_IMAGE_WIDTH_MAX * (pInfo->dwImageHeight - pInfo->dwHeight) * pInfo->dwPixelSizeBytes;

  031a4	e59d3050	 ldr         r3, [sp, #0x50]
  031a8	e2832020	 add         r2, r3, #0x20
  031ac	e59d3050	 ldr         r3, [sp, #0x50]
  031b0	e2833010	 add         r3, r3, #0x10
  031b4	e5922000	 ldr         r2, [r2]
  031b8	e5933000	 ldr         r3, [r3]
  031bc	e0422003	 sub         r2, r2, r3
  031c0	e3a03b02	 mov         r3, #2, 22
  031c4	e0010392	 mul         r1, r2, r3
  031c8	e59d3050	 ldr         r3, [sp, #0x50]
  031cc	e2833008	 add         r3, r3, #8
  031d0	e5933000	 ldr         r3, [r3]
  031d4	e0020391	 mul         r2, r1, r3
  031d8	e59d3050	 ldr         r3, [sp, #0x50]
  031dc	e2833028	 add         r3, r3, #0x28
  031e0	e5832000	 str         r2, [r3]

; 1519 :                     pInfo->dwOriginOffset += (pInfo->dwImageWidth - pInfo->dwWidth) * pInfo->dwPixelSizeBytes;

  031e4	e59d3050	 ldr         r3, [sp, #0x50]
  031e8	e2830028	 add         r0, r3, #0x28
  031ec	e59d3050	 ldr         r3, [sp, #0x50]
  031f0	e283201c	 add         r2, r3, #0x1C
  031f4	e59d3050	 ldr         r3, [sp, #0x50]
  031f8	e283300c	 add         r3, r3, #0xC
  031fc	e5922000	 ldr         r2, [r2]
  03200	e5933000	 ldr         r3, [r3]
  03204	e0421003	 sub         r1, r2, r3
  03208	e59d3050	 ldr         r3, [sp, #0x50]
  0320c	e2833008	 add         r3, r3, #8
  03210	e5933000	 ldr         r3, [r3]
  03214	e0020391	 mul         r2, r1, r3
  03218	e5903000	 ldr         r3, [r0]
  0321c	e0832002	 add         r2, r3, r2
  03220	e59d3050	 ldr         r3, [sp, #0x50]
  03224	e2833028	 add         r3, r3, #0x28
  03228	e5832000	 str         r2, [r3]

; 1520 :                     break;

  0322c	ea000014	 b           |$LN6@VRFB_GetDi@2|
  03230		 |$LN3@VRFB_GetDi@2|

; 1521 : 
; 1522 :                 case VRFB_ROTATE_ANGLE_90:
; 1523 :                     pInfo->dwOriginOffset = VRFB_IMAGE_HEIGHT_MAX * (pInfo->dwImageWidth - pInfo->dwWidth) * pInfo->dwPixelSizeBytes;

  03230	e59d3050	 ldr         r3, [sp, #0x50]
  03234	e283201c	 add         r2, r3, #0x1C
  03238	e59d3050	 ldr         r3, [sp, #0x50]
  0323c	e283300c	 add         r3, r3, #0xC
  03240	e5922000	 ldr         r2, [r2]
  03244	e5933000	 ldr         r3, [r3]
  03248	e0422003	 sub         r2, r2, r3
  0324c	e3a03b02	 mov         r3, #2, 22
  03250	e0010392	 mul         r1, r2, r3
  03254	e59d3050	 ldr         r3, [sp, #0x50]
  03258	e2833008	 add         r3, r3, #8
  0325c	e5933000	 ldr         r3, [r3]
  03260	e0020391	 mul         r2, r1, r3
  03264	e59d3050	 ldr         r3, [sp, #0x50]
  03268	e2833028	 add         r3, r3, #0x28
  0326c	e5832000	 str         r2, [r3]

; 1524 :                     break;

  03270	ea000003	 b           |$LN6@VRFB_GetDi@2|
  03274		 |$LN2@VRFB_GetDi@2|

; 1525 : 
; 1526 :                 case VRFB_ROTATE_ANGLE_0:
; 1527 :                 default:
; 1528 :                     pInfo->dwOriginOffset = 0;

  03274	e59d3050	 ldr         r3, [sp, #0x50]
  03278	e2832028	 add         r2, r3, #0x28
  0327c	e3a03000	 mov         r3, #0
  03280	e5823000	 str         r3, [r2]
  03284		 |$LN6@VRFB_GetDi@2|
  03284		 |$LN8@VRFB_GetDi@2|

; 1529 :                     break;
; 1530 :             }
; 1531 :         }
; 1532 :         
; 1533 :         bResult = TRUE;

  03284	e3a03001	 mov         r3, #1
  03288	e58d3008	 str         r3, [sp, #8]

; 1534 :     }    
; 1535 :     else

  0328c	ea00000b	 b           |$LN1@VRFB_GetDi@2|
  03290		 |$LN22@VRFB_GetDi@2|

; 1536 :     {
; 1537 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: VRFB_GetDisplayViewInfo: "
; 1538 :             L"Invalid view index %d\r\n", dwIndex
; 1539 :             ));

  03290	e59f3044	 ldr         r3, [pc, #0x44]
  03294	e5933440	 ldr         r3, [r3, #0x440]
  03298	e3130001	 tst         r3, #1
  0329c	0a000005	 beq         |$LN37@VRFB_GetDi@2|
  032a0	e59d1044	 ldr         r1, [sp, #0x44]
  032a4	e59f002c	 ldr         r0, [pc, #0x2C]
  032a8	eb000000	 bl          NKDbgPrintfW
  032ac	e3a03001	 mov         r3, #1
  032b0	e58d3034	 str         r3, [sp, #0x34]
  032b4	ea000001	 b           |$LN38@VRFB_GetDi@2|
  032b8		 |$LN37@VRFB_GetDi@2|
  032b8	e3a03000	 mov         r3, #0
  032bc	e58d3034	 str         r3, [sp, #0x34]
  032c0		 |$LN38@VRFB_GetDi@2|
  032c0		 |$LN1@VRFB_GetDi@2|
  032c0		 |$cleanUp$45615|

; 1540 :         goto cleanUp;
; 1541 :     }
; 1542 : 
; 1543 : cleanUp:    
; 1544 :     //  Return result
; 1545 :     return bResult;

  032c0	e59d3008	 ldr         r3, [sp, #8]
  032c4	e58d3010	 str         r3, [sp, #0x10]

; 1546 : }

  032c8	e59d0010	 ldr         r0, [sp, #0x10]
  032cc	e28dd038	 add         sp, sp, #0x38
  032d0	e89d6000	 ldmia       sp, {sp, lr}
  032d4	e12fff1e	 bx          lr
  032d8		 |$LN42@VRFB_GetDi@2|
  032d8		 |$LN43@VRFB_GetDi@2|
  032d8	00000000	 DCD         |??_C@_1HA@NOCIAOKL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5@|
  032dc		 |$LN44@VRFB_GetDi@2|
  032dc	00000000	 DCD         |dpCurSettings|
  032e0		 |$LN45@VRFB_GetDi@2|
  032e0	00000000	 DCD         |g_VrfbContextList|
  032e4		 |$LN46@VRFB_GetDi@2|
  032e4	00000000	 DCD         |??_C@_1HE@MABFFDGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAG?$AAe?$AAt?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAV?$AAi?$AAe?$AAw?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5@|
  032e8		 |$LN47@VRFB_GetDi@2|
  032e8	76726649	 DCD         0x76726649
  032ec		 |$M46164|

			 ENDP  ; |VRFB_GetDisplayViewInfo|

	EXPORT	|??_C@_1GI@MHPBHJBA@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAP?$AAH?$AAY@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@FPBADOGK@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAS?$AAI?$AAZ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@FLBJIMBF@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAC?$AAO?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@OLINJAEE@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CD?$AA?5?$AA?5@| [ DATA ] ; `string'

  00068			 AREA	 |.pdata|, PDATA
|$T46185| DCD	|$LN13@DebugPrint|
	DCD	0x40005604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@MHPBHJBA@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAP?$AAH?$AAY@| DCB "D"
	DCB	0x0, "e", 0x0, "b", 0x0, "u", 0x0, "g", 0x0, "P", 0x0, "r"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "V", 0x0, "R", 0x0, "F"
	DCB	0x0, "B", 0x0, "_", 0x0, "S", 0x0, "M", 0x0, "S", 0x0, "_"
	DCB	0x0, "R", 0x0, "O", 0x0, "T", 0x0, "_", 0x0, "P", 0x0, "H"
	DCB	0x0, "Y", 0x0, "S", 0x0, "I", 0x0, "C", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "B", 0x0, "A", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@FPBADOGK@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAS?$AAI?$AAZ@| DCB "D"
	DCB	0x0, "e", 0x0, "b", 0x0, "u", 0x0, "g", 0x0, "P", 0x0, "r"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "V", 0x0, "R", 0x0, "F"
	DCB	0x0, "B", 0x0, "_", 0x0, "S", 0x0, "M", 0x0, "S", 0x0, "_"
	DCB	0x0, "R", 0x0, "O", 0x0, "T", 0x0, "_", 0x0, "S", 0x0, "I"
	DCB	0x0, "Z", 0x0, "E", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@FLBJIMBF@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAC?$AAO?$AAN@| DCB "D"
	DCB	0x0, "e", 0x0, "b", 0x0, "u", 0x0, "g", 0x0, "P", 0x0, "r"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "V", 0x0, "R", 0x0, "F"
	DCB	0x0, "B", 0x0, "_", 0x0, "S", 0x0, "M", 0x0, "S", 0x0, "_"
	DCB	0x0, "R", 0x0, "O", 0x0, "T", 0x0, "_", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@OLINJAEE@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CD?$AA?5?$AA?5@| DCB "D"
	DCB	0x0, "e", 0x0, "b", 0x0, "u", 0x0, "g", 0x0, "P", 0x0, "r"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "V", 0x0, "R", 0x0, "F"
	DCB	0x0, "B", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "#", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  032ec			 AREA	 |.text|, CODE, ARM

  032ec		 |DebugPrintRegs| PROC

; 1555 : {

  032ec		 |$LN13@DebugPrint|
  032ec	e1a0c00d	 mov         r12, sp
  032f0	e92d0003	 stmdb       sp!, {r0, r1}
  032f4	e92d5000	 stmdb       sp!, {r12, lr}
  032f8	e24dd01c	 sub         sp, sp, #0x1C
  032fc		 |$M46182|

; 1556 :     DWORD   dwControl,
; 1557 :             dwSize,
; 1558 :             dwBuffer;
; 1559 :             
; 1560 :     dwControl = INREG32(&pVrfbRegs->aVRFB_SMS_ROT_CTRL[dwIndex].VRFB_SMS_ROT_CONTROL);

  032fc	e59d3024	 ldr         r3, [sp, #0x24]
  03300	e283101c	 add         r1, r3, #0x1C
  03304	e59d2028	 ldr         r2, [sp, #0x28]
  03308	e3a03010	 mov         r3, #0x10
  0330c	e0030392	 mul         r3, r2, r3
  03310	e0813003	 add         r3, r1, r3
  03314	e5933000	 ldr         r3, [r3]
  03318	e58d3004	 str         r3, [sp, #4]

; 1561 :     dwSize =    INREG32(&pVrfbRegs->aVRFB_SMS_ROT_CTRL[dwIndex].VRFB_SMS_ROT_SIZE);

  0331c	e59d3024	 ldr         r3, [sp, #0x24]
  03320	e283101c	 add         r1, r3, #0x1C
  03324	e59d2028	 ldr         r2, [sp, #0x28]
  03328	e3a03010	 mov         r3, #0x10
  0332c	e0030392	 mul         r3, r2, r3
  03330	e0813003	 add         r3, r1, r3
  03334	e2833004	 add         r3, r3, #4
  03338	e5933000	 ldr         r3, [r3]
  0333c	e58d3000	 str         r3, [sp]

; 1562 :     dwBuffer =  INREG32(&pVrfbRegs->aVRFB_SMS_ROT_CTRL[dwIndex].VRFB_SMS_ROT_PHYSICAL_BA);

  03340	e59d3024	 ldr         r3, [sp, #0x24]
  03344	e283101c	 add         r1, r3, #0x1C
  03348	e59d2028	 ldr         r2, [sp, #0x28]
  0334c	e3a03010	 mov         r3, #0x10
  03350	e0030392	 mul         r3, r2, r3
  03354	e0813003	 add         r3, r1, r3
  03358	e2833008	 add         r3, r3, #8
  0335c	e5933000	 ldr         r3, [r3]
  03360	e58d3008	 str         r3, [sp, #8]

; 1563 : 
; 1564 :     DEBUGMSG(ZONE_INFO, (L"DebugPrintRegs: VRFB Context #           = %d\r\n", dwIndex));

  03364	e59f30c8	 ldr         r3, [pc, #0xC8]
  03368	e5933440	 ldr         r3, [r3, #0x440]
  0336c	e3130008	 tst         r3, #8
  03370	0a000005	 beq         |$LN3@DebugPrint|
  03374	e59d1028	 ldr         r1, [sp, #0x28]
  03378	e59f00c0	 ldr         r0, [pc, #0xC0]
  0337c	eb000000	 bl          NKDbgPrintfW
  03380	e3a03001	 mov         r3, #1
  03384	e58d300c	 str         r3, [sp, #0xC]
  03388	ea000001	 b           |$LN4@DebugPrint|
  0338c		 |$LN3@DebugPrint|
  0338c	e3a03000	 mov         r3, #0
  03390	e58d300c	 str         r3, [sp, #0xC]
  03394		 |$LN4@DebugPrint|

; 1565 :     DEBUGMSG(ZONE_INFO, (L"DebugPrintRegs: VRFB_SMS_ROT_CONTROL     = 0x%08x\r\n", dwControl));

  03394	e59f3098	 ldr         r3, [pc, #0x98]
  03398	e5933440	 ldr         r3, [r3, #0x440]
  0339c	e3130008	 tst         r3, #8
  033a0	0a000005	 beq         |$LN5@DebugPrint|
  033a4	e59d1004	 ldr         r1, [sp, #4]
  033a8	e59f008c	 ldr         r0, [pc, #0x8C]
  033ac	eb000000	 bl          NKDbgPrintfW
  033b0	e3a03001	 mov         r3, #1
  033b4	e58d3010	 str         r3, [sp, #0x10]
  033b8	ea000001	 b           |$LN6@DebugPrint|
  033bc		 |$LN5@DebugPrint|
  033bc	e3a03000	 mov         r3, #0
  033c0	e58d3010	 str         r3, [sp, #0x10]
  033c4		 |$LN6@DebugPrint|

; 1566 :     DEBUGMSG(ZONE_INFO, (L"DebugPrintRegs: VRFB_SMS_ROT_SIZE        = 0x%08x\r\n", dwSize));

  033c4	e59f3068	 ldr         r3, [pc, #0x68]
  033c8	e5933440	 ldr         r3, [r3, #0x440]
  033cc	e3130008	 tst         r3, #8
  033d0	0a000005	 beq         |$LN7@DebugPrint|
  033d4	e59d1000	 ldr         r1, [sp]
  033d8	e59f0058	 ldr         r0, [pc, #0x58]
  033dc	eb000000	 bl          NKDbgPrintfW
  033e0	e3a03001	 mov         r3, #1
  033e4	e58d3014	 str         r3, [sp, #0x14]
  033e8	ea000001	 b           |$LN8@DebugPrint|
  033ec		 |$LN7@DebugPrint|
  033ec	e3a03000	 mov         r3, #0
  033f0	e58d3014	 str         r3, [sp, #0x14]
  033f4		 |$LN8@DebugPrint|

; 1567 :     DEBUGMSG(ZONE_INFO, (L"DebugPrintRegs: VRFB_SMS_ROT_PHYSICAL_BA = 0x%08x\r\n", dwBuffer));

  033f4	e59f3038	 ldr         r3, [pc, #0x38]
  033f8	e5933440	 ldr         r3, [r3, #0x440]
  033fc	e3130008	 tst         r3, #8
  03400	0a000005	 beq         |$LN9@DebugPrint|
  03404	e59d1008	 ldr         r1, [sp, #8]
  03408	e59f0020	 ldr         r0, [pc, #0x20]
  0340c	eb000000	 bl          NKDbgPrintfW
  03410	e3a03001	 mov         r3, #1
  03414	e58d3018	 str         r3, [sp, #0x18]
  03418	ea000001	 b           |$LN10@DebugPrint|
  0341c		 |$LN9@DebugPrint|
  0341c	e3a03000	 mov         r3, #0
  03420	e58d3018	 str         r3, [sp, #0x18]
  03424		 |$LN10@DebugPrint|

; 1568 : }

  03424	e28dd01c	 add         sp, sp, #0x1C
  03428	e89d6000	 ldmia       sp, {sp, lr}
  0342c	e12fff1e	 bx          lr
  03430		 |$LN14@DebugPrint|
  03430		 |$LN15@DebugPrint|
  03430	00000000	 DCD         |??_C@_1GI@MHPBHJBA@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAP?$AAH?$AAY@|
  03434		 |$LN16@DebugPrint|
  03434	00000000	 DCD         |dpCurSettings|
  03438		 |$LN17@DebugPrint|
  03438	00000000	 DCD         |??_C@_1GI@FPBADOGK@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAS?$AAI?$AAZ@|
  0343c		 |$LN18@DebugPrint|
  0343c	00000000	 DCD         |??_C@_1GI@FLBJIMBF@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA_?$AAS?$AAM?$AAS?$AA_?$AAR?$AAO?$AAT?$AA_?$AAC?$AAO?$AAN@|
  03440		 |$LN19@DebugPrint|
  03440	00000000	 DCD         |??_C@_1GA@OLINJAEE@?$AAD?$AAe?$AAb?$AAu?$AAg?$AAP?$AAr?$AAi?$AAn?$AAt?$AAR?$AAe?$AAg?$AAs?$AA?3?$AA?5?$AAV?$AAR?$AAF?$AAB?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CD?$AA?5?$AA?5@|
  03444		 |$M46183|

			 ENDP  ; |DebugPrintRegs|

	EXPORT	|DllMain|
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|

  00070			 AREA	 |.pdata|, PDATA
|$T46197| DCD	|$LN8@DllMain|
	DCD	0x40001404
; Function compile flags: /Odtp

  03444			 AREA	 |.text|, CODE, ARM

  03444		 |DllMain| PROC

; 1584 : {

  03444		 |$LN8@DllMain|
  03444	e1a0c00d	 mov         r12, sp
  03448	e92d0007	 stmdb       sp!, {r0 - r2}
  0344c	e92d5000	 stmdb       sp!, {r12, lr}
  03450	e24dd004	 sub         sp, sp, #4
  03454		 |$M46194|

; 1585 :     UNREFERENCED_PARAMETER(pReserved);
; 1586 :     switch (reason)

  03454	e59d3010	 ldr         r3, [sp, #0x10]
  03458	e3530001	 cmp         r3, #1
  0345c	0a000000	 beq         |$LN1@DllMain|
  03460	ea000004	 b           |$LN2@DllMain|
  03464		 |$LN1@DllMain|

; 1587 :         {
; 1588 :         case DLL_PROCESS_ATTACH:
; 1589 :             RETAILREGISTERZONES((HMODULE)hDLL);

  03464	e59f1024	 ldr         r1, [pc, #0x24]
  03468	e59d000c	 ldr         r0, [sp, #0xC]
  0346c	eb000000	 bl          RegisterDbgZones

; 1590 :             DisableThreadLibraryCalls((HMODULE)hDLL);

  03470	e59d000c	 ldr         r0, [sp, #0xC]
  03474	eb000000	 bl          DisableThreadLibraryCalls
  03478		 |$LN2@DllMain|

; 1591 :             break;
; 1592 :         }
; 1593 :     return TRUE;

  03478	e3a03001	 mov         r3, #1
  0347c	e58d3000	 str         r3, [sp]

; 1594 : }

  03480	e59d0000	 ldr         r0, [sp]
  03484	e28dd004	 add         sp, sp, #4
  03488	e89d6000	 ldmia       sp, {sp, lr}
  0348c	e12fff1e	 bx          lr
  03490		 |$LN9@DllMain|
  03490		 |$LN10@DllMain|
  03490	00000000	 DCD         |dpCurSettings|
  03494		 |$M46195|

			 ENDP  ; |DllMain|

	END
