; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\GPIO\DISPATCH\OAL\gpio_dispatch.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|GPIOPostInit|
	IMPORT	|BSPGetGpioDevicesTable|

  00000			 AREA	 |.pdata|, PDATA
|$T43541| DCD	|$LN10@GPIOPostIn|
	DCD	0x40004002
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\dispatch\oal\gpio_dispatch.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOPostInit| PROC

; 25   : {

  00000		 |$LN10@GPIOPostIn|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M43538|

; 26   :     int i;
; 27   :     GpioDevice_t* pDevice;
; 28   :     pDevice= BSPGetGpioDevicesTable();

  00008	eb000000	 bl          BSPGetGpioDevicesTable
  0000c	e58d000c	 str         r0, [sp, #0xC]
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e58d3000	 str         r3, [sp]

; 29   :     for (i = 0; i < pDevice->nbGpioGrp; ++i)

  00018	e3a03000	 mov         r3, #0
  0001c	e58d3004	 str         r3, [sp, #4]
  00020	ea000002	 b           |$LN5@GPIOPostIn|
  00024		 |$LN4@GPIOPostIn|
  00024	e59d3004	 ldr         r3, [sp, #4]
  00028	e2833001	 add         r3, r3, #1
  0002c	e58d3004	 str         r3, [sp, #4]
  00030		 |$LN5@GPIOPostIn|
  00030	e59d3000	 ldr         r3, [sp]
  00034	e2833004	 add         r3, r3, #4
  00038	e59d2004	 ldr         r2, [sp, #4]
  0003c	e5933000	 ldr         r3, [r3]
  00040	e1520003	 cmp         r2, r3
  00044	aa000027	 bge         |$LN3@GPIOPostIn|

; 30   :     {   
; 31   :         if (pDevice->rgGpioTbls[i]->pfnPostInit)

  00048	e59d3000	 ldr         r3, [sp]
  0004c	e2830010	 add         r0, r3, #0x10
  00050	e59d1004	 ldr         r1, [sp, #4]
  00054	e3a03004	 mov         r3, #4
  00058	e0020391	 mul         r2, r1, r3
  0005c	e5903000	 ldr         r3, [r0]
  00060	e0833002	 add         r3, r3, r2
  00064	e5933000	 ldr         r3, [r3]
  00068	e2833008	 add         r3, r3, #8
  0006c	e5933000	 ldr         r3, [r3]
  00070	e3530000	 cmp         r3, #0
  00074	0a00001a	 beq         |$LN2@GPIOPostIn|

; 32   :         {
; 33   :             if (pDevice->rgGpioTbls[i]->pfnPostInit(pDevice->rgHandles[i]) == FALSE)

  00078	e59d3000	 ldr         r3, [sp]
  0007c	e283000c	 add         r0, r3, #0xC
  00080	e59d1004	 ldr         r1, [sp, #4]
  00084	e3a03004	 mov         r3, #4
  00088	e0020391	 mul         r2, r1, r3
  0008c	e5903000	 ldr         r3, [r0]
  00090	e0833002	 add         r3, r3, r2
  00094	e5930000	 ldr         r0, [r3]
  00098	e59d3000	 ldr         r3, [sp]
  0009c	e283e010	 add         lr, r3, #0x10
  000a0	e59d1004	 ldr         r1, [sp, #4]
  000a4	e3a03004	 mov         r3, #4
  000a8	e0020391	 mul         r2, r1, r3
  000ac	e59e3000	 ldr         r3, [lr]
  000b0	e0833002	 add         r3, r3, r2
  000b4	e5933000	 ldr         r3, [r3]
  000b8	e2833008	 add         r3, r3, #8
  000bc	e5933000	 ldr         r3, [r3]
  000c0	e1a0e00f	 mov         lr, pc
  000c4	e12fff13	 bx          r3
  000c8	e58d0010	 str         r0, [sp, #0x10]
  000cc	e59d3010	 ldr         r3, [sp, #0x10]
  000d0	e3530000	 cmp         r3, #0
  000d4	1a000002	 bne         |$LN1@GPIOPostIn|

; 34   :             {
; 35   :                 return FALSE;

  000d8	e3a03000	 mov         r3, #0
  000dc	e58d3008	 str         r3, [sp, #8]
  000e0	ea000002	 b           |$LN6@GPIOPostIn|
  000e4		 |$LN1@GPIOPostIn|
  000e4		 |$LN2@GPIOPostIn|

; 36   :             }
; 37   :         }
; 38   :     }

  000e4	eaffffce	 b           |$LN4@GPIOPostIn|
  000e8		 |$LN3@GPIOPostIn|

; 39   :     return TRUE;

  000e8	e3a03001	 mov         r3, #1
  000ec	e58d3008	 str         r3, [sp, #8]
  000f0		 |$LN6@GPIOPostIn|

; 40   : }

  000f0	e59d0008	 ldr         r0, [sp, #8]
  000f4	e28dd014	 add         sp, sp, #0x14
  000f8	e49de004	 ldr         lr, [sp], #4
  000fc	e12fff1e	 bx          lr
  00100		 |$M43539|

			 ENDP  ; |GPIOPostInit|

	EXPORT	|??_C@_1HK@FIHOCGBD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_19NNFDHLJH@?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|GPIOInit|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|BSPGpioInit|

  00008			 AREA	 |.pdata|, PDATA
|$T43547| DCD	|$LN9@GPIOInit|
	DCD	0x40003f02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@FIHOCGBD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "G", 0x0, "I", 0x0, "O", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, " "
	DCB	0x0, "t", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "x", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19NNFDHLJH@?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| DCB "b", 0x0, "o", 0x0, "o"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00100			 AREA	 |.text|, CODE, ARM

  00100		 |GPIOInit| PROC

; 43   : {

  00100		 |$LN9@GPIOInit|
  00100	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00104	e24dd01c	 sub         sp, sp, #0x1C
  00108		 |$M43544|

; 44   :     int i;
; 45   :     UINT size;
; 46   :     GpioDevice_t* pDevice;
; 47   :     HANDLE hGpio;
; 48   : 
; 49   :     BSPGpioInit();

  00108	eb000000	 bl          BSPGpioInit

; 50   :     pDevice= BSPGetGpioDevicesTable();

  0010c	eb000000	 bl          BSPGetGpioDevicesTable
  00110	e58d0014	 str         r0, [sp, #0x14]
  00114	e59d3014	 ldr         r3, [sp, #0x14]
  00118	e58d3000	 str         r3, [sp]

; 51   :     // setup range and get handles
; 52   :     for (i = 0; i < pDevice->nbGpioGrp; ++i)

  0011c	e3a03000	 mov         r3, #0
  00120	e58d3004	 str         r3, [sp, #4]
  00124	ea000002	 b           |$LN4@GPIOInit|
  00128		 |$LN3@GPIOInit|
  00128	e59d3004	 ldr         r3, [sp, #4]
  0012c	e2833001	 add         r3, r3, #1
  00130	e58d3004	 str         r3, [sp, #4]
  00134		 |$LN4@GPIOInit|
  00134	e59d3000	 ldr         r3, [sp]
  00138	e2833004	 add         r3, r3, #4
  0013c	e59d2004	 ldr         r2, [sp, #4]
  00140	e5933000	 ldr         r3, [r3]
  00144	e1520003	 cmp         r2, r3
  00148	aa000020	 bge         |$LN2@GPIOInit|

; 53   :     {
; 54   :         if (pDevice->rgGpioTbls[i]->pfnInit(L"boot", &hGpio, &size) == FALSE)

  0014c	e28d2008	 add         r2, sp, #8
  00150	e28d100c	 add         r1, sp, #0xC
  00154	e59f009c	 ldr         r0, [pc, #0x9C]
  00158	e59d3000	 ldr         r3, [sp]
  0015c	e2835010	 add         r5, r3, #0x10
  00160	e59d4004	 ldr         r4, [sp, #4]
  00164	e3a03004	 mov         r3, #4
  00168	e00e0394	 mul         lr, r4, r3
  0016c	e5953000	 ldr         r3, [r5]
  00170	e083300e	 add         r3, r3, lr
  00174	e5933000	 ldr         r3, [r3]
  00178	e2833004	 add         r3, r3, #4
  0017c	e5933000	 ldr         r3, [r3]
  00180	e1a0e00f	 mov         lr, pc
  00184	e12fff13	 bx          r3
  00188	e58d0018	 str         r0, [sp, #0x18]
  0018c	e59d3018	 ldr         r3, [sp, #0x18]
  00190	e3530000	 cmp         r3, #0
  00194	1a000003	 bne         |$LN1@GPIOInit|

; 55   :         {
; 56   :             RETAILMSG(ZONE_ERROR, (L"ERROR: GIO_Init: "
; 57   :                 L"Failed to initialize Gpio table index(%d)\r\n", i
; 58   :                 ));

  00198	e59d1004	 ldr         r1, [sp, #4]
  0019c	e59f0050	 ldr         r0, [pc, #0x50]
  001a0	eb000000	 bl          NKDbgPrintfW

; 59   :             goto cleanUp;

  001a4	ea00000c	 b           |$cleanUp$43420|
  001a8		 |$LN1@GPIOInit|

; 60   :         }
; 61   :         pDevice->rgHandles[i] = hGpio;

  001a8	e59d3000	 ldr         r3, [sp]
  001ac	e283000c	 add         r0, r3, #0xC
  001b0	e59d1004	 ldr         r1, [sp, #4]
  001b4	e3a03004	 mov         r3, #4
  001b8	e0020391	 mul         r2, r1, r3
  001bc	e5903000	 ldr         r3, [r0]
  001c0	e0832002	 add         r2, r3, r2
  001c4	e59d300c	 ldr         r3, [sp, #0xC]
  001c8	e5823000	 str         r3, [r2]

; 62   :     }

  001cc	eaffffd5	 b           |$LN3@GPIOInit|
  001d0		 |$LN2@GPIOInit|

; 63   :     return TRUE;

  001d0	e3a03001	 mov         r3, #1
  001d4	e58d3010	 str         r3, [sp, #0x10]
  001d8	ea000001	 b           |$LN5@GPIOInit|
  001dc		 |$cleanUp$43420|

; 64   :     
; 65   : cleanUp:
; 66   : 
; 67   :     return FALSE;

  001dc	e3a03000	 mov         r3, #0
  001e0	e58d3010	 str         r3, [sp, #0x10]
  001e4		 |$LN5@GPIOInit|

; 68   : }

  001e4	e59d0010	 ldr         r0, [sp, #0x10]
  001e8	e28dd01c	 add         sp, sp, #0x1C
  001ec	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  001f0	e12fff1e	 bx          lr
  001f4		 |$LN10@GPIOInit|
  001f4		 |$LN11@GPIOInit|
  001f4	00000000	 DCD         |??_C@_1HK@FIHOCGBD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@|
  001f8		 |$LN12@GPIOInit|
  001f8	00000000	 DCD         |??_C@_19NNFDHLJH@?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  001fc		 |$M43545|

			 ENDP  ; |GPIOInit|

	EXPORT	|GPIOOpen|

  00010			 AREA	 |.pdata|, PDATA
|$T43556| DCD	|$LN5@GPIOOpen|
	DCD	0x40000a02
; Function compile flags: /Odtp

  001fc			 AREA	 |.text|, CODE, ARM

  001fc		 |GPIOOpen| PROC

; 71   : {

  001fc		 |$LN5@GPIOOpen|
  001fc	e52de004	 str         lr, [sp, #-4]!
  00200	e24dd008	 sub         sp, sp, #8
  00204		 |$M43553|

; 72   :    return BSPGetGpioDevicesTable();

  00204	eb000000	 bl          BSPGetGpioDevicesTable
  00208	e58d0004	 str         r0, [sp, #4]
  0020c	e59d3004	 ldr         r3, [sp, #4]
  00210	e58d3000	 str         r3, [sp]

; 73   : }

  00214	e59d0000	 ldr         r0, [sp]
  00218	e28dd008	 add         sp, sp, #8
  0021c	e49de004	 ldr         lr, [sp], #4
  00220	e12fff1e	 bx          lr
  00224		 |$M43554|

			 ENDP  ; |GPIOOpen|

	EXPORT	|GPIOClose|

  00018			 AREA	 |.pdata|, PDATA
|$T43561| DCD	|$LN5@GPIOClose|
	DCD	0x40000503
; Function compile flags: /Odtp

  00224			 AREA	 |.text|, CODE, ARM

  00224		 |GPIOClose| PROC

; 76   : {

  00224		 |$LN5@GPIOClose|
  00224	e1a0c00d	 mov         r12, sp
  00228	e92d0001	 stmdb       sp!, {r0}
  0022c	e92d5000	 stmdb       sp!, {r12, lr}
  00230		 |$M43558|

; 77   :     UNREFERENCED_PARAMETER(hContext);
; 78   : }

  00230	e89d6000	 ldmia       sp, {sp, lr}
  00234	e12fff1e	 bx          lr
  00238		 |$M43559|

			 ENDP  ; |GPIOClose|

	EXPORT	|GPIOSetBit|

  00020			 AREA	 |.pdata|, PDATA
|$T43566| DCD	|$LN6@GPIOSetBit|
	DCD	0x40002f04
; Function compile flags: /Odtp

  00238			 AREA	 |.text|, CODE, ARM

  00238		 |GPIOSetBit| PROC

; 81   : {

  00238		 |$LN6@GPIOSetBit|
  00238	e1a0c00d	 mov         r12, sp
  0023c	e92d0003	 stmdb       sp!, {r0, r1}
  00240	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00244	e24dd00c	 sub         sp, sp, #0xC
  00248		 |$M43563|

; 82   :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00248	e59d3018	 ldr         r3, [sp, #0x18]
  0024c	e58d3000	 str         r3, [sp]

; 83   :     int grp;
; 84   :     if (GetGroupByID(pDevice,id,&grp))

  00250	e28d2004	 add         r2, sp, #4
  00254	e59d101c	 ldr         r1, [sp, #0x1C]
  00258	e59d0000	 ldr         r0, [sp]
  0025c	eb000000	 bl          GetGroupByID
  00260	e58d0008	 str         r0, [sp, #8]
  00264	e59d3008	 ldr         r3, [sp, #8]
  00268	e3530000	 cmp         r3, #0
  0026c	0a00001d	 beq         |$LN1@GPIOSetBit|

; 85   :     {
; 86   :         pDevice->rgGpioTbls[grp]->pfnSetBit(pDevice->rgHandles[grp], id - pDevice->rgRanges[grp]);

  00270	e59d3000	 ldr         r3, [sp]
  00274	e2830008	 add         r0, r3, #8
  00278	e59d1004	 ldr         r1, [sp, #4]
  0027c	e3a03004	 mov         r3, #4
  00280	e0020391	 mul         r2, r1, r3
  00284	e5903000	 ldr         r3, [r0]
  00288	e0833002	 add         r3, r3, r2
  0028c	e59d201c	 ldr         r2, [sp, #0x1C]
  00290	e5933000	 ldr         r3, [r3]
  00294	e0421003	 sub         r1, r2, r3
  00298	e59d3000	 ldr         r3, [sp]
  0029c	e283e00c	 add         lr, r3, #0xC
  002a0	e59d0004	 ldr         r0, [sp, #4]
  002a4	e3a03004	 mov         r3, #4
  002a8	e0020390	 mul         r2, r0, r3
  002ac	e59e3000	 ldr         r3, [lr]
  002b0	e0833002	 add         r3, r3, r2
  002b4	e5930000	 ldr         r0, [r3]
  002b8	e59d3000	 ldr         r3, [sp]
  002bc	e2834010	 add         r4, r3, #0x10
  002c0	e59de004	 ldr         lr, [sp, #4]
  002c4	e3a03004	 mov         r3, #4
  002c8	e002039e	 mul         r2, lr, r3
  002cc	e5943000	 ldr         r3, [r4]
  002d0	e0833002	 add         r3, r3, r2
  002d4	e5933000	 ldr         r3, [r3]
  002d8	e2833010	 add         r3, r3, #0x10
  002dc	e5933000	 ldr         r3, [r3]
  002e0	e1a0e00f	 mov         lr, pc
  002e4	e12fff13	 bx          r3
  002e8		 |$LN1@GPIOSetBit|

; 87   :     }
; 88   : }

  002e8	e28dd00c	 add         sp, sp, #0xC
  002ec	e89d6010	 ldmia       sp, {r4, sp, lr}
  002f0	e12fff1e	 bx          lr
  002f4		 |$M43564|

			 ENDP  ; |GPIOSetBit|


  00028			 AREA	 |.pdata|, PDATA
|$T43572| DCD	|$LN8@GetGroupBy|
	DCD	0x40002604
; Function compile flags: /Odtp

  002f4			 AREA	 |.text|, CODE, ARM

  002f4		 |GetGroupByID| PROC

; 11   : {    

  002f4		 |$LN8@GetGroupBy|
  002f4	e1a0c00d	 mov         r12, sp
  002f8	e92d0007	 stmdb       sp!, {r0 - r2}
  002fc	e92d5000	 stmdb       sp!, {r12, lr}
  00300	e24dd008	 sub         sp, sp, #8
  00304		 |$M43569|

; 12   :     int i=0;

  00304	e3a03000	 mov         r3, #0
  00308	e58d3000	 str         r3, [sp]
  0030c		 |$LN3@GetGroupBy|

; 13   :     while (pDevice->rgRanges[i] <= id)

  0030c	e59d3010	 ldr         r3, [sp, #0x10]
  00310	e2830008	 add         r0, r3, #8
  00314	e59d1000	 ldr         r1, [sp]
  00318	e3a03004	 mov         r3, #4
  0031c	e0020391	 mul         r2, r1, r3
  00320	e5903000	 ldr         r3, [r0]
  00324	e0833002	 add         r3, r3, r2
  00328	e5932000	 ldr         r2, [r3]
  0032c	e59d3014	 ldr         r3, [sp, #0x14]
  00330	e1520003	 cmp         r2, r3
  00334	8a00000a	 bhi         |$LN2@GetGroupBy|

; 14   :     {
; 15   :         i++;

  00338	e59d3000	 ldr         r3, [sp]
  0033c	e2833001	 add         r3, r3, #1
  00340	e58d3000	 str         r3, [sp]

; 16   :         if (i >= pDevice->nbGpioGrp)

  00344	e59d3010	 ldr         r3, [sp, #0x10]
  00348	e2833004	 add         r3, r3, #4
  0034c	e59d2000	 ldr         r2, [sp]
  00350	e5933000	 ldr         r3, [r3]
  00354	e1520003	 cmp         r2, r3
  00358	ba000000	 blt         |$LN1@GetGroupBy|

; 17   :         {
; 18   :             break;

  0035c	ea000000	 b           |$LN2@GetGroupBy|
  00360		 |$LN1@GetGroupBy|

; 19   :         }
; 20   :     }    

  00360	eaffffe9	 b           |$LN3@GetGroupBy|
  00364		 |$LN2@GetGroupBy|

; 21   :     *pGrp = i-1;

  00364	e59d3000	 ldr         r3, [sp]
  00368	e2432001	 sub         r2, r3, #1
  0036c	e59d3018	 ldr         r3, [sp, #0x18]
  00370	e5832000	 str         r2, [r3]

; 22   :     return TRUE;

  00374	e3a03001	 mov         r3, #1
  00378	e58d3004	 str         r3, [sp, #4]

; 23   : } 

  0037c	e59d0004	 ldr         r0, [sp, #4]
  00380	e28dd008	 add         sp, sp, #8
  00384	e89d6000	 ldmia       sp, {sp, lr}
  00388	e12fff1e	 bx          lr
  0038c		 |$M43570|

			 ENDP  ; |GetGroupByID|

	EXPORT	|GPIOClrBit|

  00030			 AREA	 |.pdata|, PDATA
|$T43577| DCD	|$LN6@GPIOClrBit|
	DCD	0x40002f04
; Function compile flags: /Odtp

  0038c			 AREA	 |.text|, CODE, ARM

  0038c		 |GPIOClrBit| PROC

; 91   : {

  0038c		 |$LN6@GPIOClrBit|
  0038c	e1a0c00d	 mov         r12, sp
  00390	e92d0003	 stmdb       sp!, {r0, r1}
  00394	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00398	e24dd00c	 sub         sp, sp, #0xC
  0039c		 |$M43574|

; 92   :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  0039c	e59d3018	 ldr         r3, [sp, #0x18]
  003a0	e58d3000	 str         r3, [sp]

; 93   :     int grp;
; 94   :     if (GetGroupByID(pDevice,id,&grp))

  003a4	e28d2004	 add         r2, sp, #4
  003a8	e59d101c	 ldr         r1, [sp, #0x1C]
  003ac	e59d0000	 ldr         r0, [sp]
  003b0	eb000000	 bl          GetGroupByID
  003b4	e58d0008	 str         r0, [sp, #8]
  003b8	e59d3008	 ldr         r3, [sp, #8]
  003bc	e3530000	 cmp         r3, #0
  003c0	0a00001d	 beq         |$LN1@GPIOClrBit|

; 95   :     {
; 96   :         pDevice->rgGpioTbls[grp]->pfnClrBit(pDevice->rgHandles[grp], id - pDevice->rgRanges[grp]);

  003c4	e59d3000	 ldr         r3, [sp]
  003c8	e2830008	 add         r0, r3, #8
  003cc	e59d1004	 ldr         r1, [sp, #4]
  003d0	e3a03004	 mov         r3, #4
  003d4	e0020391	 mul         r2, r1, r3
  003d8	e5903000	 ldr         r3, [r0]
  003dc	e0833002	 add         r3, r3, r2
  003e0	e59d201c	 ldr         r2, [sp, #0x1C]
  003e4	e5933000	 ldr         r3, [r3]
  003e8	e0421003	 sub         r1, r2, r3
  003ec	e59d3000	 ldr         r3, [sp]
  003f0	e283e00c	 add         lr, r3, #0xC
  003f4	e59d0004	 ldr         r0, [sp, #4]
  003f8	e3a03004	 mov         r3, #4
  003fc	e0020390	 mul         r2, r0, r3
  00400	e59e3000	 ldr         r3, [lr]
  00404	e0833002	 add         r3, r3, r2
  00408	e5930000	 ldr         r0, [r3]
  0040c	e59d3000	 ldr         r3, [sp]
  00410	e2834010	 add         r4, r3, #0x10
  00414	e59de004	 ldr         lr, [sp, #4]
  00418	e3a03004	 mov         r3, #4
  0041c	e002039e	 mul         r2, lr, r3
  00420	e5943000	 ldr         r3, [r4]
  00424	e0833002	 add         r3, r3, r2
  00428	e5933000	 ldr         r3, [r3]
  0042c	e2833014	 add         r3, r3, #0x14
  00430	e5933000	 ldr         r3, [r3]
  00434	e1a0e00f	 mov         lr, pc
  00438	e12fff13	 bx          r3
  0043c		 |$LN1@GPIOClrBit|

; 97   :     }
; 98   : }

  0043c	e28dd00c	 add         sp, sp, #0xC
  00440	e89d6010	 ldmia       sp, {r4, sp, lr}
  00444	e12fff1e	 bx          lr
  00448		 |$M43575|

			 ENDP  ; |GPIOClrBit|

	EXPORT	|GPIOGetBit|

  00038			 AREA	 |.pdata|, PDATA
|$T43583| DCD	|$LN6@GPIOGetBit|
	DCD	0x40003604
; Function compile flags: /Odtp

  00448			 AREA	 |.text|, CODE, ARM

  00448		 |GPIOGetBit| PROC

; 101  : {

  00448		 |$LN6@GPIOGetBit|
  00448	e1a0c00d	 mov         r12, sp
  0044c	e92d0003	 stmdb       sp!, {r0, r1}
  00450	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00454	e24dd014	 sub         sp, sp, #0x14
  00458		 |$M43580|

; 102  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00458	e59d3020	 ldr         r3, [sp, #0x20]
  0045c	e58d3000	 str         r3, [sp]

; 103  :     int grp;
; 104  :     if (GetGroupByID(pDevice,id,&grp))

  00460	e28d2004	 add         r2, sp, #4
  00464	e59d1024	 ldr         r1, [sp, #0x24]
  00468	e59d0000	 ldr         r0, [sp]
  0046c	eb000000	 bl          GetGroupByID
  00470	e58d000c	 str         r0, [sp, #0xC]
  00474	e59d300c	 ldr         r3, [sp, #0xC]
  00478	e3530000	 cmp         r3, #0
  0047c	0a000021	 beq         |$LN1@GPIOGetBit|

; 105  :     {
; 106  :         return pDevice->rgGpioTbls[grp]->pfnGetBit(pDevice->rgHandles[grp], id - pDevice->rgRanges[grp]);

  00480	e59d3000	 ldr         r3, [sp]
  00484	e2830008	 add         r0, r3, #8
  00488	e59d1004	 ldr         r1, [sp, #4]
  0048c	e3a03004	 mov         r3, #4
  00490	e0020391	 mul         r2, r1, r3
  00494	e5903000	 ldr         r3, [r0]
  00498	e0833002	 add         r3, r3, r2
  0049c	e59d2024	 ldr         r2, [sp, #0x24]
  004a0	e5933000	 ldr         r3, [r3]
  004a4	e0421003	 sub         r1, r2, r3
  004a8	e59d3000	 ldr         r3, [sp]
  004ac	e283e00c	 add         lr, r3, #0xC
  004b0	e59d0004	 ldr         r0, [sp, #4]
  004b4	e3a03004	 mov         r3, #4
  004b8	e0020390	 mul         r2, r0, r3
  004bc	e59e3000	 ldr         r3, [lr]
  004c0	e0833002	 add         r3, r3, r2
  004c4	e5930000	 ldr         r0, [r3]
  004c8	e59d3000	 ldr         r3, [sp]
  004cc	e2834010	 add         r4, r3, #0x10
  004d0	e59de004	 ldr         lr, [sp, #4]
  004d4	e3a03004	 mov         r3, #4
  004d8	e002039e	 mul         r2, lr, r3
  004dc	e5943000	 ldr         r3, [r4]
  004e0	e0833002	 add         r3, r3, r2
  004e4	e5933000	 ldr         r3, [r3]
  004e8	e2833018	 add         r3, r3, #0x18
  004ec	e5933000	 ldr         r3, [r3]
  004f0	e1a0e00f	 mov         lr, pc
  004f4	e12fff13	 bx          r3
  004f8	e58d0010	 str         r0, [sp, #0x10]
  004fc	e59d3010	 ldr         r3, [sp, #0x10]
  00500	e58d3008	 str         r3, [sp, #8]
  00504	ea000001	 b           |$LN2@GPIOGetBit|
  00508		 |$LN1@GPIOGetBit|

; 107  :     }
; 108  :     return (DWORD) -1;

  00508	e3e03000	 mvn         r3, #0
  0050c	e58d3008	 str         r3, [sp, #8]
  00510		 |$LN2@GPIOGetBit|

; 109  : }

  00510	e59d0008	 ldr         r0, [sp, #8]
  00514	e28dd014	 add         sp, sp, #0x14
  00518	e89d6010	 ldmia       sp, {r4, sp, lr}
  0051c	e12fff1e	 bx          lr
  00520		 |$M43581|

			 ENDP  ; |GPIOGetBit|

	EXPORT	|GPIOSetMode|

  00040			 AREA	 |.pdata|, PDATA
|$T43588| DCD	|$LN6@GPIOSetMod|
	DCD	0x40003004
; Function compile flags: /Odtp

  00520			 AREA	 |.text|, CODE, ARM

  00520		 |GPIOSetMode| PROC

; 112  : {

  00520		 |$LN6@GPIOSetMod|
  00520	e1a0c00d	 mov         r12, sp
  00524	e92d0007	 stmdb       sp!, {r0 - r2}
  00528	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0052c	e24dd00c	 sub         sp, sp, #0xC
  00530		 |$M43585|

; 113  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00530	e59d301c	 ldr         r3, [sp, #0x1C]
  00534	e58d3000	 str         r3, [sp]

; 114  :     int grp;
; 115  :     if (GetGroupByID(pDevice,id,&grp))

  00538	e28d2004	 add         r2, sp, #4
  0053c	e59d1020	 ldr         r1, [sp, #0x20]
  00540	e59d0000	 ldr         r0, [sp]
  00544	eb000000	 bl          GetGroupByID
  00548	e58d0008	 str         r0, [sp, #8]
  0054c	e59d3008	 ldr         r3, [sp, #8]
  00550	e3530000	 cmp         r3, #0
  00554	0a00001e	 beq         |$LN1@GPIOSetMod|

; 116  :     {
; 117  :         pDevice->rgGpioTbls[grp]->pfnSetMode((HANDLE) pDevice->rgHandles[grp], id - pDevice->rgRanges[grp], mode);

  00558	e59d2024	 ldr         r2, [sp, #0x24]
  0055c	e59d3000	 ldr         r3, [sp]
  00560	e283e008	 add         lr, r3, #8
  00564	e59d0004	 ldr         r0, [sp, #4]
  00568	e3a03004	 mov         r3, #4
  0056c	e0010390	 mul         r1, r0, r3
  00570	e59e3000	 ldr         r3, [lr]
  00574	e0833001	 add         r3, r3, r1
  00578	e59d1020	 ldr         r1, [sp, #0x20]
  0057c	e5933000	 ldr         r3, [r3]
  00580	e0411003	 sub         r1, r1, r3
  00584	e59d3000	 ldr         r3, [sp]
  00588	e283400c	 add         r4, r3, #0xC
  0058c	e59de004	 ldr         lr, [sp, #4]
  00590	e3a03004	 mov         r3, #4
  00594	e000039e	 mul         r0, lr, r3
  00598	e5943000	 ldr         r3, [r4]
  0059c	e0833000	 add         r3, r3, r0
  005a0	e5930000	 ldr         r0, [r3]
  005a4	e59d3000	 ldr         r3, [sp]
  005a8	e2835010	 add         r5, r3, #0x10
  005ac	e59d4004	 ldr         r4, [sp, #4]
  005b0	e3a03004	 mov         r3, #4
  005b4	e00e0394	 mul         lr, r4, r3
  005b8	e5953000	 ldr         r3, [r5]
  005bc	e083300e	 add         r3, r3, lr
  005c0	e5933000	 ldr         r3, [r3]
  005c4	e283301c	 add         r3, r3, #0x1C
  005c8	e5933000	 ldr         r3, [r3]
  005cc	e1a0e00f	 mov         lr, pc
  005d0	e12fff13	 bx          r3
  005d4		 |$LN1@GPIOSetMod|

; 118  :     }
; 119  : }

  005d4	e28dd00c	 add         sp, sp, #0xC
  005d8	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  005dc	e12fff1e	 bx          lr
  005e0		 |$M43586|

			 ENDP  ; |GPIOSetMode|

	EXPORT	|GPIOGetMode|

  00048			 AREA	 |.pdata|, PDATA
|$T43594| DCD	|$LN6@GPIOGetMod|
	DCD	0x40003604
; Function compile flags: /Odtp

  005e0			 AREA	 |.text|, CODE, ARM

  005e0		 |GPIOGetMode| PROC

; 122  : {

  005e0		 |$LN6@GPIOGetMod|
  005e0	e1a0c00d	 mov         r12, sp
  005e4	e92d0003	 stmdb       sp!, {r0, r1}
  005e8	e92d5010	 stmdb       sp!, {r4, r12, lr}
  005ec	e24dd014	 sub         sp, sp, #0x14
  005f0		 |$M43591|

; 123  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  005f0	e59d3020	 ldr         r3, [sp, #0x20]
  005f4	e58d3000	 str         r3, [sp]

; 124  :     int grp;
; 125  :     if (GetGroupByID(pDevice,id,&grp))

  005f8	e28d2004	 add         r2, sp, #4
  005fc	e59d1024	 ldr         r1, [sp, #0x24]
  00600	e59d0000	 ldr         r0, [sp]
  00604	eb000000	 bl          GetGroupByID
  00608	e58d000c	 str         r0, [sp, #0xC]
  0060c	e59d300c	 ldr         r3, [sp, #0xC]
  00610	e3530000	 cmp         r3, #0
  00614	0a000021	 beq         |$LN1@GPIOGetMod|

; 126  :     {
; 127  :         return pDevice->rgGpioTbls[grp]->pfnGetMode((HANDLE) pDevice->rgHandles[grp], id - pDevice->rgRanges[grp]);        

  00618	e59d3000	 ldr         r3, [sp]
  0061c	e2830008	 add         r0, r3, #8
  00620	e59d1004	 ldr         r1, [sp, #4]
  00624	e3a03004	 mov         r3, #4
  00628	e0020391	 mul         r2, r1, r3
  0062c	e5903000	 ldr         r3, [r0]
  00630	e0833002	 add         r3, r3, r2
  00634	e59d2024	 ldr         r2, [sp, #0x24]
  00638	e5933000	 ldr         r3, [r3]
  0063c	e0421003	 sub         r1, r2, r3
  00640	e59d3000	 ldr         r3, [sp]
  00644	e283e00c	 add         lr, r3, #0xC
  00648	e59d0004	 ldr         r0, [sp, #4]
  0064c	e3a03004	 mov         r3, #4
  00650	e0020390	 mul         r2, r0, r3
  00654	e59e3000	 ldr         r3, [lr]
  00658	e0833002	 add         r3, r3, r2
  0065c	e5930000	 ldr         r0, [r3]
  00660	e59d3000	 ldr         r3, [sp]
  00664	e2834010	 add         r4, r3, #0x10
  00668	e59de004	 ldr         lr, [sp, #4]
  0066c	e3a03004	 mov         r3, #4
  00670	e002039e	 mul         r2, lr, r3
  00674	e5943000	 ldr         r3, [r4]
  00678	e0833002	 add         r3, r3, r2
  0067c	e5933000	 ldr         r3, [r3]
  00680	e2833020	 add         r3, r3, #0x20
  00684	e5933000	 ldr         r3, [r3]
  00688	e1a0e00f	 mov         lr, pc
  0068c	e12fff13	 bx          r3
  00690	e58d0010	 str         r0, [sp, #0x10]
  00694	e59d3010	 ldr         r3, [sp, #0x10]
  00698	e58d3008	 str         r3, [sp, #8]
  0069c	ea000001	 b           |$LN2@GPIOGetMod|
  006a0		 |$LN1@GPIOGetMod|

; 128  :     }
; 129  :     return (DWORD) -1;

  006a0	e3e03000	 mvn         r3, #0
  006a4	e58d3008	 str         r3, [sp, #8]
  006a8		 |$LN2@GPIOGetMod|

; 130  : }

  006a8	e59d0008	 ldr         r0, [sp, #8]
  006ac	e28dd014	 add         sp, sp, #0x14
  006b0	e89d6010	 ldmia       sp, {r4, sp, lr}
  006b4	e12fff1e	 bx          lr
  006b8		 |$M43592|

			 ENDP  ; |GPIOGetMode|

	EXPORT	|GPIOPullup|

  00050			 AREA	 |.pdata|, PDATA
|$T43600| DCD	|$LN6@GPIOPullup|
	DCD	0x40003304
; Function compile flags: /Odtp

  006b8			 AREA	 |.text|, CODE, ARM

  006b8		 |GPIOPullup| PROC

; 133  : {

  006b8		 |$LN6@GPIOPullup|
  006b8	e1a0c00d	 mov         r12, sp
  006bc	e92d0007	 stmdb       sp!, {r0 - r2}
  006c0	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  006c4	e24dd010	 sub         sp, sp, #0x10
  006c8		 |$M43597|

; 134  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  006c8	e59d3020	 ldr         r3, [sp, #0x20]
  006cc	e58d3000	 str         r3, [sp]

; 135  :     int grp;
; 136  :     if (GetGroupByID(pDevice,id,&grp))

  006d0	e28d2004	 add         r2, sp, #4
  006d4	e59d1024	 ldr         r1, [sp, #0x24]
  006d8	e59d0000	 ldr         r0, [sp]
  006dc	eb000000	 bl          GetGroupByID
  006e0	e58d000c	 str         r0, [sp, #0xC]
  006e4	e59d300c	 ldr         r3, [sp, #0xC]
  006e8	e3530000	 cmp         r3, #0
  006ec	0a00001e	 beq         |$LN1@GPIOPullup|

; 137  :     {
; 138  :         pDevice->rgGpioTbls[grp]->pfnPullup((HANDLE) pDevice->rgHandles[grp], id - pDevice->rgRanges[grp], enable);

  006f0	e59d2028	 ldr         r2, [sp, #0x28]
  006f4	e59d3000	 ldr         r3, [sp]
  006f8	e283e008	 add         lr, r3, #8
  006fc	e59d0004	 ldr         r0, [sp, #4]
  00700	e3a03004	 mov         r3, #4
  00704	e0010390	 mul         r1, r0, r3
  00708	e59e3000	 ldr         r3, [lr]
  0070c	e0833001	 add         r3, r3, r1
  00710	e59d1024	 ldr         r1, [sp, #0x24]
  00714	e5933000	 ldr         r3, [r3]
  00718	e0411003	 sub         r1, r1, r3
  0071c	e59d3000	 ldr         r3, [sp]
  00720	e283400c	 add         r4, r3, #0xC
  00724	e59de004	 ldr         lr, [sp, #4]
  00728	e3a03004	 mov         r3, #4
  0072c	e000039e	 mul         r0, lr, r3
  00730	e5943000	 ldr         r3, [r4]
  00734	e0833000	 add         r3, r3, r0
  00738	e5930000	 ldr         r0, [r3]
  0073c	e59d3000	 ldr         r3, [sp]
  00740	e2835010	 add         r5, r3, #0x10
  00744	e59d4004	 ldr         r4, [sp, #4]
  00748	e3a03004	 mov         r3, #4
  0074c	e00e0394	 mul         lr, r4, r3
  00750	e5953000	 ldr         r3, [r5]
  00754	e083300e	 add         r3, r3, lr
  00758	e5933000	 ldr         r3, [r3]
  0075c	e2833024	 add         r3, r3, #0x24
  00760	e5933000	 ldr         r3, [r3]
  00764	e1a0e00f	 mov         lr, pc
  00768	e12fff13	 bx          r3
  0076c		 |$LN1@GPIOPullup|

; 139  :     }
; 140  :     return (DWORD) TRUE;

  0076c	e3a03001	 mov         r3, #1
  00770	e58d3008	 str         r3, [sp, #8]

; 141  : }

  00774	e59d0008	 ldr         r0, [sp, #8]
  00778	e28dd010	 add         sp, sp, #0x10
  0077c	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00780	e12fff1e	 bx          lr
  00784		 |$M43598|

			 ENDP  ; |GPIOPullup|

	EXPORT	|GPIOPulldown|

  00058			 AREA	 |.pdata|, PDATA
|$T43606| DCD	|$LN6@GPIOPulldo|
	DCD	0x40003304
; Function compile flags: /Odtp

  00784			 AREA	 |.text|, CODE, ARM

  00784		 |GPIOPulldown| PROC

; 144  : {

  00784		 |$LN6@GPIOPulldo|
  00784	e1a0c00d	 mov         r12, sp
  00788	e92d0007	 stmdb       sp!, {r0 - r2}
  0078c	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  00790	e24dd010	 sub         sp, sp, #0x10
  00794		 |$M43603|

; 145  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00794	e59d3020	 ldr         r3, [sp, #0x20]
  00798	e58d3000	 str         r3, [sp]

; 146  :     int grp;
; 147  :     if (GetGroupByID(pDevice,id,&grp))

  0079c	e28d2004	 add         r2, sp, #4
  007a0	e59d1024	 ldr         r1, [sp, #0x24]
  007a4	e59d0000	 ldr         r0, [sp]
  007a8	eb000000	 bl          GetGroupByID
  007ac	e58d000c	 str         r0, [sp, #0xC]
  007b0	e59d300c	 ldr         r3, [sp, #0xC]
  007b4	e3530000	 cmp         r3, #0
  007b8	0a00001e	 beq         |$LN1@GPIOPulldo|

; 148  :     {
; 149  :         pDevice->rgGpioTbls[grp]->pfnPulldown((HANDLE) pDevice->rgHandles[grp], id - pDevice->rgRanges[grp], enable);

  007bc	e59d2028	 ldr         r2, [sp, #0x28]
  007c0	e59d3000	 ldr         r3, [sp]
  007c4	e283e008	 add         lr, r3, #8
  007c8	e59d0004	 ldr         r0, [sp, #4]
  007cc	e3a03004	 mov         r3, #4
  007d0	e0010390	 mul         r1, r0, r3
  007d4	e59e3000	 ldr         r3, [lr]
  007d8	e0833001	 add         r3, r3, r1
  007dc	e59d1024	 ldr         r1, [sp, #0x24]
  007e0	e5933000	 ldr         r3, [r3]
  007e4	e0411003	 sub         r1, r1, r3
  007e8	e59d3000	 ldr         r3, [sp]
  007ec	e283400c	 add         r4, r3, #0xC
  007f0	e59de004	 ldr         lr, [sp, #4]
  007f4	e3a03004	 mov         r3, #4
  007f8	e000039e	 mul         r0, lr, r3
  007fc	e5943000	 ldr         r3, [r4]
  00800	e0833000	 add         r3, r3, r0
  00804	e5930000	 ldr         r0, [r3]
  00808	e59d3000	 ldr         r3, [sp]
  0080c	e2835010	 add         r5, r3, #0x10
  00810	e59d4004	 ldr         r4, [sp, #4]
  00814	e3a03004	 mov         r3, #4
  00818	e00e0394	 mul         lr, r4, r3
  0081c	e5953000	 ldr         r3, [r5]
  00820	e083300e	 add         r3, r3, lr
  00824	e5933000	 ldr         r3, [r3]
  00828	e2833028	 add         r3, r3, #0x28
  0082c	e5933000	 ldr         r3, [r3]
  00830	e1a0e00f	 mov         lr, pc
  00834	e12fff13	 bx          r3
  00838		 |$LN1@GPIOPulldo|

; 150  :     }
; 151  :     return (DWORD) TRUE;

  00838	e3a03001	 mov         r3, #1
  0083c	e58d3008	 str         r3, [sp, #8]

; 152  : }

  00840	e59d0008	 ldr         r0, [sp, #8]
  00844	e28dd010	 add         sp, sp, #0x10
  00848	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  0084c	e12fff1e	 bx          lr
  00850		 |$M43604|

			 ENDP  ; |GPIOPulldown|

	EXPORT	|GPIOIoControl|

  00060			 AREA	 |.pdata|, PDATA
|$T43615| DCD	|$LN6@GPIOIoCont|
	DCD	0x40003604
; Function compile flags: /Odtp

  00850			 AREA	 |.text|, CODE, ARM

  00850		 |GPIOIoControl| PROC

; 164  : {

  00850		 |$LN6@GPIOIoCont|
  00850	e1a0c00d	 mov         r12, sp
  00854	e92d000f	 stmdb       sp!, {r0 - r3}
  00858	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  0085c	e24dd030	 sub         sp, sp, #0x30
  00860		 |$M43612|

; 165  :     //UNREFERENCED_PARAMETER(pOverlap);
; 166  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00860	e59d3044	 ldr         r3, [sp, #0x44]
  00864	e58d300c	 str         r3, [sp, #0xC]

; 167  :     int grp;
; 168  :     BOOL rc = FALSE;

  00868	e3a03000	 mov         r3, #0
  0086c	e58d3010	 str         r3, [sp, #0x10]

; 169  :     
; 170  :     if (GetGroupByID(pDevice,id,&grp))

  00870	e28d2014	 add         r2, sp, #0x14
  00874	e59d1048	 ldr         r1, [sp, #0x48]
  00878	e59d000c	 ldr         r0, [sp, #0xC]
  0087c	eb000000	 bl          GetGroupByID
  00880	e58d0028	 str         r0, [sp, #0x28]
  00884	e59d3028	 ldr         r3, [sp, #0x28]
  00888	e3530000	 cmp         r3, #0
  0088c	0a00001f	 beq         |$LN1@GPIOIoCont|

; 171  :     {
; 172  :         rc = pDevice->rgGpioTbls[grp]->pfnIoControl((HANDLE) pDevice->rgHandles[grp], code, pInBuffer,
; 173  :                 inSize, pOutBuffer, outSize, pOutSize);

  00890	e59d3060	 ldr         r3, [sp, #0x60]
  00894	e58d3008	 str         r3, [sp, #8]
  00898	e59d305c	 ldr         r3, [sp, #0x5C]
  0089c	e58d3004	 str         r3, [sp, #4]
  008a0	e59d3058	 ldr         r3, [sp, #0x58]
  008a4	e58d3000	 str         r3, [sp]
  008a8	e59d3054	 ldr         r3, [sp, #0x54]
  008ac	e59d2050	 ldr         r2, [sp, #0x50]
  008b0	e59d104c	 ldr         r1, [sp, #0x4C]
  008b4	e59d000c	 ldr         r0, [sp, #0xC]
  008b8	e280500c	 add         r5, r0, #0xC
  008bc	e59d4014	 ldr         r4, [sp, #0x14]
  008c0	e3a00004	 mov         r0, #4
  008c4	e00e0094	 mul         lr, r4, r0
  008c8	e5950000	 ldr         r0, [r5]
  008cc	e080000e	 add         r0, r0, lr
  008d0	e5900000	 ldr         r0, [r0]
  008d4	e59de00c	 ldr         lr, [sp, #0xC]
  008d8	e28e6010	 add         r6, lr, #0x10
  008dc	e59d5014	 ldr         r5, [sp, #0x14]
  008e0	e3a0e004	 mov         lr, #4
  008e4	e0040e95	 mul         r4, r5, lr
  008e8	e596e000	 ldr         lr, [r6]
  008ec	e08ee004	 add         lr, lr, r4
  008f0	e59ee000	 ldr         lr, [lr]
  008f4	e28ee02c	 add         lr, lr, #0x2C
  008f8	e59e4000	 ldr         r4, [lr]
  008fc	e1a0e00f	 mov         lr, pc
  00900	e12fff14	 bx          r4
  00904	e58d002c	 str         r0, [sp, #0x2C]
  00908	e59d302c	 ldr         r3, [sp, #0x2C]
  0090c	e58d3010	 str         r3, [sp, #0x10]
  00910		 |$LN1@GPIOIoCont|

; 174  :     }    
; 175  :     return (DWORD) rc;    

  00910	e59d3010	 ldr         r3, [sp, #0x10]
  00914	e58d3024	 str         r3, [sp, #0x24]

; 176  : }

  00918	e59d0024	 ldr         r0, [sp, #0x24]
  0091c	e28dd030	 add         sp, sp, #0x30
  00920	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  00924	e12fff1e	 bx          lr
  00928		 |$M43613|

			 ENDP  ; |GPIOIoControl|

	END
