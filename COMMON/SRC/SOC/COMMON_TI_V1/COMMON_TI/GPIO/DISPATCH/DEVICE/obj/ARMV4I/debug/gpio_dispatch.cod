; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\GPIO\DISPATCH\DEVICE\gpio_dispatch.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|DEVICE_IFC_GPIO_GUID| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|s_DispatcherInitialized| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|DEVICE_IFC_GPIO_GUID| DCD 0xa0272611
	DCW	0xdea0
	DCW	0x4678
	DCB	0xae
	DCB	0x62
	DCB	0x65
	DCB	0x61
	DCB	0x5b
	DCB	0x7d
	DCB	0x53
	DCB	0xaa
	EXPORT	|GPIOInit|
	IMPORT	|memcpy|
	IMPORT	|LocalAlloc|
	IMPORT	|DeviceIoControl|
	IMPORT	|CreateFileW|
	IMPORT	|BSPGetGpioDevicesTable|
	IMPORT	|BSPGpioInit|

  00000			 AREA	 |.pdata|, PDATA
|$T44044| DCD	|$LN13@GPIOInit|
	DCD	0x40009402
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\dispatch\device\gpio_dispatch.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOInit| PROC

; 32   : {

  00000		 |$LN13@GPIOInit|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd094	 sub         sp, sp, #0x94
  00008		 |$M44041|

; 33   :     int i;
; 34   :     GpioDevice_t* pDevice;
; 35   : 
; 36   :     BSPGpioInit();

  00008	eb000000	 bl          BSPGpioInit

; 37   :     pDevice = BSPGetGpioDevicesTable();

  0000c	eb000000	 bl          BSPGetGpioDevicesTable
  00010	e58d0084	 str         r0, [sp, #0x84]
  00014	e59d3084	 ldr         r3, [sp, #0x84]
  00018	e58d3010	 str         r3, [sp, #0x10]

; 38   : 
; 39   :     // setup range and get handles
; 40   :     for (i = 0; i < pDevice->nbGpioGrp; ++i)

  0001c	e3a03000	 mov         r3, #0
  00020	e58d3014	 str         r3, [sp, #0x14]
  00024	ea000002	 b           |$LN8@GPIOInit|
  00028		 |$LN7@GPIOInit|
  00028	e59d3014	 ldr         r3, [sp, #0x14]
  0002c	e2833001	 add         r3, r3, #1
  00030	e58d3014	 str         r3, [sp, #0x14]
  00034		 |$LN8@GPIOInit|
  00034	e59d3010	 ldr         r3, [sp, #0x10]
  00038	e2833004	 add         r3, r3, #4
  0003c	e59d2014	 ldr         r2, [sp, #0x14]
  00040	e5933000	 ldr         r3, [r3]
  00044	e1520003	 cmp         r2, r3
  00048	aa000076	 bge         |$LN6@GPIOInit|

; 41   :     {
; 42   :         DWORD size;
; 43   :         DEVICE_IFC_GPIO ifc;
; 44   :         pDevice->rgHandles[i] = CreateFile(pDevice->name[i],0,0,NULL,OPEN_EXISTING,0,NULL);

  0004c	e3a03000	 mov         r3, #0
  00050	e58d3008	 str         r3, [sp, #8]
  00054	e3a03000	 mov         r3, #0
  00058	e58d3004	 str         r3, [sp, #4]
  0005c	e3a03003	 mov         r3, #3
  00060	e58d3000	 str         r3, [sp]
  00064	e3a03000	 mov         r3, #0
  00068	e3a02000	 mov         r2, #0
  0006c	e3a01000	 mov         r1, #0
  00070	e59d0010	 ldr         r0, [sp, #0x10]
  00074	e2805014	 add         r5, r0, #0x14
  00078	e59d4014	 ldr         r4, [sp, #0x14]
  0007c	e3a00004	 mov         r0, #4
  00080	e00e0094	 mul         lr, r4, r0
  00084	e5950000	 ldr         r0, [r5]
  00088	e080000e	 add         r0, r0, lr
  0008c	e5900000	 ldr         r0, [r0]
  00090	eb000000	 bl          CreateFileW
  00094	e58d0088	 str         r0, [sp, #0x88]
  00098	e59d3010	 ldr         r3, [sp, #0x10]
  0009c	e283000c	 add         r0, r3, #0xC
  000a0	e59d1014	 ldr         r1, [sp, #0x14]
  000a4	e3a03004	 mov         r3, #4
  000a8	e0020391	 mul         r2, r1, r3
  000ac	e5903000	 ldr         r3, [r0]
  000b0	e0832002	 add         r2, r3, r2
  000b4	e59d3088	 ldr         r3, [sp, #0x88]
  000b8	e5823000	 str         r3, [r2]

; 45   :         if (pDevice->rgHandles[i] != INVALID_HANDLE_VALUE)

  000bc	e59d3010	 ldr         r3, [sp, #0x10]
  000c0	e283000c	 add         r0, r3, #0xC
  000c4	e59d1014	 ldr         r1, [sp, #0x14]
  000c8	e3a03004	 mov         r3, #4
  000cc	e0020391	 mul         r2, r1, r3
  000d0	e5903000	 ldr         r3, [r0]
  000d4	e0833002	 add         r3, r3, r2
  000d8	e5933000	 ldr         r3, [r3]
  000dc	e3730001	 cmn         r3, #1
  000e0	0a000046	 beq         |$LN5@GPIOInit|

; 46   :         {            
; 47   :             if (DeviceIoControl(pDevice->rgHandles[i],IOCTL_DDK_GET_DRIVER_IFC,
; 48   :                 (BYTE*) &DEVICE_IFC_GPIO_GUID,sizeof(DEVICE_IFC_GPIO_GUID),
; 49   :                 &ifc,sizeof(DEVICE_IFC_GPIO),&size,NULL) == FALSE)

  000e4	e3a03000	 mov         r3, #0
  000e8	e58d300c	 str         r3, [sp, #0xC]
  000ec	e28d3018	 add         r3, sp, #0x18
  000f0	e58d3008	 str         r3, [sp, #8]
  000f4	e3a03048	 mov         r3, #0x48
  000f8	e58d3004	 str         r3, [sp, #4]
  000fc	e28d301c	 add         r3, sp, #0x1C
  00100	e58d3000	 str         r3, [sp]
  00104	e3a03010	 mov         r3, #0x10
  00108	e59f213c	 ldr         r2, [pc, #0x13C]
  0010c	e3a01822	 mov         r1, #0x22, 16
  00110	e3811b01	 orr         r1, r1, #1, 22
  00114	e59d0010	 ldr         r0, [sp, #0x10]
  00118	e280500c	 add         r5, r0, #0xC
  0011c	e59d4014	 ldr         r4, [sp, #0x14]
  00120	e3a00004	 mov         r0, #4
  00124	e00e0094	 mul         lr, r4, r0
  00128	e5950000	 ldr         r0, [r5]
  0012c	e080000e	 add         r0, r0, lr
  00130	e5900000	 ldr         r0, [r0]
  00134	eb000000	 bl          DeviceIoControl
  00138	e58d008c	 str         r0, [sp, #0x8C]
  0013c	e59d308c	 ldr         r3, [sp, #0x8C]
  00140	e3530000	 cmp         r3, #0
  00144	1a000009	 bne         |$LN4@GPIOInit|

; 50   :             {
; 51   :                 pDevice->rgGpioTbls[i] = NULL;

  00148	e59d3010	 ldr         r3, [sp, #0x10]
  0014c	e2830010	 add         r0, r3, #0x10
  00150	e59d1014	 ldr         r1, [sp, #0x14]
  00154	e3a03004	 mov         r3, #4
  00158	e0020391	 mul         r2, r1, r3
  0015c	e5903000	 ldr         r3, [r0]
  00160	e0832002	 add         r2, r3, r2
  00164	e3a03000	 mov         r3, #0
  00168	e5823000	 str         r3, [r2]

; 52   :             }
; 53   :             else

  0016c	ea000022	 b           |$LN3@GPIOInit|
  00170		 |$LN4@GPIOInit|

; 54   :             {            
; 55   :                 pDevice->rgGpioTbls[i] = LocalAlloc(0,sizeof(DEVICE_IFC_GPIO));

  00170	e3a01048	 mov         r1, #0x48
  00174	e3a00000	 mov         r0, #0
  00178	eb000000	 bl          LocalAlloc
  0017c	e58d0090	 str         r0, [sp, #0x90]
  00180	e59d3010	 ldr         r3, [sp, #0x10]
  00184	e2830010	 add         r0, r3, #0x10
  00188	e59d1014	 ldr         r1, [sp, #0x14]
  0018c	e3a03004	 mov         r3, #4
  00190	e0020391	 mul         r2, r1, r3
  00194	e5903000	 ldr         r3, [r0]
  00198	e0832002	 add         r2, r3, r2
  0019c	e59d3090	 ldr         r3, [sp, #0x90]
  001a0	e5823000	 str         r3, [r2]

; 56   :                 if (pDevice->rgGpioTbls[i] == NULL)

  001a4	e59d3010	 ldr         r3, [sp, #0x10]
  001a8	e2830010	 add         r0, r3, #0x10
  001ac	e59d1014	 ldr         r1, [sp, #0x14]
  001b0	e3a03004	 mov         r3, #4
  001b4	e0020391	 mul         r2, r1, r3
  001b8	e5903000	 ldr         r3, [r0]
  001bc	e0833002	 add         r3, r3, r2
  001c0	e5933000	 ldr         r3, [r3]
  001c4	e3530000	 cmp         r3, #0
  001c8	1a000000	 bne         |$LN2@GPIOInit|

; 57   :                 {
; 58   :                     goto cleanUp;

  001cc	ea000018	 b           |$cleanUp$43797|
  001d0		 |$LN2@GPIOInit|

; 59   :                 }
; 60   :                 memcpy(pDevice->rgGpioTbls[i],&ifc,sizeof(DEVICE_IFC_GPIO));

  001d0	e3a02048	 mov         r2, #0x48
  001d4	e28d101c	 add         r1, sp, #0x1C
  001d8	e59d3010	 ldr         r3, [sp, #0x10]
  001dc	e2834010	 add         r4, r3, #0x10
  001e0	e59de014	 ldr         lr, [sp, #0x14]
  001e4	e3a03004	 mov         r3, #4
  001e8	e000039e	 mul         r0, lr, r3
  001ec	e5943000	 ldr         r3, [r4]
  001f0	e0833000	 add         r3, r3, r0
  001f4	e5930000	 ldr         r0, [r3]
  001f8	eb000000	 bl          memcpy
  001fc		 |$LN3@GPIOInit|

; 61   :             }
; 62   :         }
; 63   :         else

  001fc	ea000008	 b           |$LN1@GPIOInit|
  00200		 |$LN5@GPIOInit|

; 64   :         {
; 65   :             pDevice->rgGpioTbls[i] = NULL;

  00200	e59d3010	 ldr         r3, [sp, #0x10]
  00204	e2830010	 add         r0, r3, #0x10
  00208	e59d1014	 ldr         r1, [sp, #0x14]
  0020c	e3a03004	 mov         r3, #4
  00210	e0020391	 mul         r2, r1, r3
  00214	e5903000	 ldr         r3, [r0]
  00218	e0832002	 add         r2, r3, r2
  0021c	e3a03000	 mov         r3, #0
  00220	e5823000	 str         r3, [r2]
  00224		 |$LN1@GPIOInit|

; 66   :         }
; 67   :         
; 68   : 
; 69   :     }

  00224	eaffff7f	 b           |$LN7@GPIOInit|
  00228		 |$LN6@GPIOInit|

; 70   : 
; 71   :     return TRUE;

  00228	e3a03001	 mov         r3, #1
  0022c	e58d3080	 str         r3, [sp, #0x80]
  00230	ea000001	 b           |$LN9@GPIOInit|
  00234		 |$cleanUp$43797|

; 72   : 
; 73   : cleanUp:
; 74   :     return FALSE;

  00234	e3a03000	 mov         r3, #0
  00238	e58d3080	 str         r3, [sp, #0x80]
  0023c		 |$LN9@GPIOInit|

; 75   : }

  0023c	e59d0080	 ldr         r0, [sp, #0x80]
  00240	e28dd094	 add         sp, sp, #0x94
  00244	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00248	e12fff1e	 bx          lr
  0024c		 |$LN14@GPIOInit|
  0024c		 |$LN15@GPIOInit|
  0024c	00000000	 DCD         |DEVICE_IFC_GPIO_GUID|
  00250		 |$M44042|

			 ENDP  ; |GPIOInit|

	EXPORT	|GPIOOpen|

  00008			 AREA	 |.pdata|, PDATA
|$T44052| DCD	|$LN7@GPIOOpen|
	DCD	0x40001b02
; Function compile flags: /Odtp

  00250			 AREA	 |.text|, CODE, ARM

  00250		 |GPIOOpen| PROC

; 78   : {

  00250		 |$LN7@GPIOOpen|
  00250	e52de004	 str         lr, [sp, #-4]!
  00254	e24dd00c	 sub         sp, sp, #0xC
  00258		 |$M44049|

; 79   :     if (s_DispatcherInitialized == FALSE)

  00258	e59f3058	 ldr         r3, [pc, #0x58]
  0025c	e5933000	 ldr         r3, [r3]
  00260	e3530000	 cmp         r3, #0
  00264	1a000004	 bne         |$LN2@GPIOOpen|

; 80   :     {
; 81   :         s_DispatcherInitialized = GPIOInit();

  00268	eb000000	 bl          GPIOInit
  0026c	e58d0004	 str         r0, [sp, #4]
  00270	e59d2004	 ldr         r2, [sp, #4]
  00274	e59f303c	 ldr         r3, [pc, #0x3C]
  00278	e5832000	 str         r2, [r3]
  0027c		 |$LN2@GPIOOpen|

; 82   :     }
; 83   :     if (s_DispatcherInitialized == FALSE)

  0027c	e59f3034	 ldr         r3, [pc, #0x34]
  00280	e5933000	 ldr         r3, [r3]
  00284	e3530000	 cmp         r3, #0
  00288	1a000002	 bne         |$LN1@GPIOOpen|

; 84   :     {
; 85   :         return NULL;

  0028c	e3a03000	 mov         r3, #0
  00290	e58d3000	 str         r3, [sp]
  00294	ea000003	 b           |$LN3@GPIOOpen|
  00298		 |$LN1@GPIOOpen|

; 86   :     }
; 87   :     return BSPGetGpioDevicesTable();

  00298	eb000000	 bl          BSPGetGpioDevicesTable
  0029c	e58d0008	 str         r0, [sp, #8]
  002a0	e59d3008	 ldr         r3, [sp, #8]
  002a4	e58d3000	 str         r3, [sp]
  002a8		 |$LN3@GPIOOpen|

; 88   : }

  002a8	e59d0000	 ldr         r0, [sp]
  002ac	e28dd00c	 add         sp, sp, #0xC
  002b0	e49de004	 ldr         lr, [sp], #4
  002b4	e12fff1e	 bx          lr
  002b8		 |$LN8@GPIOOpen|
  002b8		 |$LN9@GPIOOpen|
  002b8	00000000	 DCD         |s_DispatcherInitialized|
  002bc		 |$M44050|

			 ENDP  ; |GPIOOpen|

	EXPORT	|GPIOClose|

  00010			 AREA	 |.pdata|, PDATA
|$T44059| DCD	|$LN5@GPIOClose|
	DCD	0x40000503
; Function compile flags: /Odtp

  002bc			 AREA	 |.text|, CODE, ARM

  002bc		 |GPIOClose| PROC

; 91   : {

  002bc		 |$LN5@GPIOClose|
  002bc	e1a0c00d	 mov         r12, sp
  002c0	e92d0001	 stmdb       sp!, {r0}
  002c4	e92d5000	 stmdb       sp!, {r12, lr}
  002c8		 |$M44056|

; 92   :     UNREFERENCED_PARAMETER(hContext);
; 93   : }

  002c8	e89d6000	 ldmia       sp, {sp, lr}
  002cc	e12fff1e	 bx          lr
  002d0		 |$M44057|

			 ENDP  ; |GPIOClose|

	EXPORT	|GPIOSetBit|

  00018			 AREA	 |.pdata|, PDATA
|$T44068| DCD	|$LN8@GPIOSetBit|
	DCD	0x40005204
; Function compile flags: /Odtp

  002d0			 AREA	 |.text|, CODE, ARM

  002d0		 |GPIOSetBit| PROC

; 96   : {

  002d0		 |$LN8@GPIOSetBit|
  002d0	e1a0c00d	 mov         r12, sp
  002d4	e92d000f	 stmdb       sp!, {r0 - r3}
  002d8	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  002dc	e24dd02c	 sub         sp, sp, #0x2C
  002e0		 |$M44065|

; 97   :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  002e0	e59d303c	 ldr         r3, [sp, #0x3C]
  002e4	e58d3010	 str         r3, [sp, #0x10]

; 98   :     int grp;
; 99   :     if (GetGroupByID(pDevice,id,&grp))

  002e8	e28d2014	 add         r2, sp, #0x14
  002ec	e59d1040	 ldr         r1, [sp, #0x40]
  002f0	e59d0010	 ldr         r0, [sp, #0x10]
  002f4	eb000000	 bl          GetGroupByID
  002f8	e58d0028	 str         r0, [sp, #0x28]
  002fc	e59d3028	 ldr         r3, [sp, #0x28]
  00300	e3530000	 cmp         r3, #0
  00304	0a000040	 beq         |$LN3@GPIOSetBit|

; 100  :     {
; 101  :         id -= pDevice->rgRanges[grp];

  00308	e59d3010	 ldr         r3, [sp, #0x10]
  0030c	e2830008	 add         r0, r3, #8
  00310	e59d1014	 ldr         r1, [sp, #0x14]
  00314	e3a03004	 mov         r3, #4
  00318	e0020391	 mul         r2, r1, r3
  0031c	e5903000	 ldr         r3, [r0]
  00320	e0833002	 add         r3, r3, r2
  00324	e59d2040	 ldr         r2, [sp, #0x40]
  00328	e5933000	 ldr         r3, [r3]
  0032c	e0423003	 sub         r3, r2, r3
  00330	e58d3040	 str         r3, [sp, #0x40]

; 102  : 
; 103  :         if (pDevice->rgGpioTbls[grp])

  00334	e59d3010	 ldr         r3, [sp, #0x10]
  00338	e2830010	 add         r0, r3, #0x10
  0033c	e59d1014	 ldr         r1, [sp, #0x14]
  00340	e3a03004	 mov         r3, #4
  00344	e0020391	 mul         r2, r1, r3
  00348	e5903000	 ldr         r3, [r0]
  0034c	e0833002	 add         r3, r3, r2
  00350	e5933000	 ldr         r3, [r3]
  00354	e3530000	 cmp         r3, #0
  00358	0a000016	 beq         |$LN2@GPIOSetBit|

; 104  :             pDevice->rgGpioTbls[grp]->pfnSetBit(pDevice->rgGpioTbls[grp]->context, id);

  0035c	e59d1040	 ldr         r1, [sp, #0x40]
  00360	e59d3010	 ldr         r3, [sp, #0x10]
  00364	e283e010	 add         lr, r3, #0x10
  00368	e59d0014	 ldr         r0, [sp, #0x14]
  0036c	e3a03004	 mov         r3, #4
  00370	e0020390	 mul         r2, r0, r3
  00374	e59e3000	 ldr         r3, [lr]
  00378	e0833002	 add         r3, r3, r2
  0037c	e5933000	 ldr         r3, [r3]
  00380	e5930000	 ldr         r0, [r3]
  00384	e59d3010	 ldr         r3, [sp, #0x10]
  00388	e2834010	 add         r4, r3, #0x10
  0038c	e59de014	 ldr         lr, [sp, #0x14]
  00390	e3a03004	 mov         r3, #4
  00394	e002039e	 mul         r2, lr, r3
  00398	e5943000	 ldr         r3, [r4]
  0039c	e0833002	 add         r3, r3, r2
  003a0	e5933000	 ldr         r3, [r3]
  003a4	e2833010	 add         r3, r3, #0x10
  003a8	e5933000	 ldr         r3, [r3]
  003ac	e1a0e00f	 mov         lr, pc
  003b0	e12fff13	 bx          r3

; 105  :         else

  003b4	ea000014	 b           |$LN1@GPIOSetBit|
  003b8		 |$LN2@GPIOSetBit|

; 106  :         {
; 107  :             DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_SETBIT,&id,sizeof(id),NULL,0,NULL,NULL);

  003b8	e3a03000	 mov         r3, #0
  003bc	e58d300c	 str         r3, [sp, #0xC]
  003c0	e3a03000	 mov         r3, #0
  003c4	e58d3008	 str         r3, [sp, #8]
  003c8	e3a03000	 mov         r3, #0
  003cc	e58d3004	 str         r3, [sp, #4]
  003d0	e3a03000	 mov         r3, #0
  003d4	e58d3000	 str         r3, [sp]
  003d8	e3a03004	 mov         r3, #4
  003dc	e28d2040	 add         r2, sp, #0x40
  003e0	e3a01822	 mov         r1, #0x22, 16
  003e4	e3811b03	 orr         r1, r1, #3, 22
  003e8	e59d0010	 ldr         r0, [sp, #0x10]
  003ec	e280500c	 add         r5, r0, #0xC
  003f0	e59d4014	 ldr         r4, [sp, #0x14]
  003f4	e3a00004	 mov         r0, #4
  003f8	e00e0094	 mul         lr, r4, r0
  003fc	e5950000	 ldr         r0, [r5]
  00400	e080000e	 add         r0, r0, lr
  00404	e5900000	 ldr         r0, [r0]
  00408	eb000000	 bl          DeviceIoControl
  0040c		 |$LN1@GPIOSetBit|
  0040c		 |$LN3@GPIOSetBit|

; 108  :         }
; 109  :     }
; 110  : }

  0040c	e28dd02c	 add         sp, sp, #0x2C
  00410	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00414	e12fff1e	 bx          lr
  00418		 |$M44066|

			 ENDP  ; |GPIOSetBit|


  00020			 AREA	 |.pdata|, PDATA
|$T44074| DCD	|$LN8@GetGroupBy|
	DCD	0x40002604
; Function compile flags: /Odtp

  00418			 AREA	 |.text|, CODE, ARM

  00418		 |GetGroupByID| PROC

; 17   : {    

  00418		 |$LN8@GetGroupBy|
  00418	e1a0c00d	 mov         r12, sp
  0041c	e92d0007	 stmdb       sp!, {r0 - r2}
  00420	e92d5000	 stmdb       sp!, {r12, lr}
  00424	e24dd008	 sub         sp, sp, #8
  00428		 |$M44071|

; 18   :     int i=0;

  00428	e3a03000	 mov         r3, #0
  0042c	e58d3000	 str         r3, [sp]
  00430		 |$LN3@GetGroupBy|

; 19   :     while (pDevice->rgRanges[i] <= id)

  00430	e59d3010	 ldr         r3, [sp, #0x10]
  00434	e2830008	 add         r0, r3, #8
  00438	e59d1000	 ldr         r1, [sp]
  0043c	e3a03004	 mov         r3, #4
  00440	e0020391	 mul         r2, r1, r3
  00444	e5903000	 ldr         r3, [r0]
  00448	e0833002	 add         r3, r3, r2
  0044c	e5932000	 ldr         r2, [r3]
  00450	e59d3014	 ldr         r3, [sp, #0x14]
  00454	e1520003	 cmp         r2, r3
  00458	8a00000a	 bhi         |$LN2@GetGroupBy|

; 20   :     {
; 21   :         i++;

  0045c	e59d3000	 ldr         r3, [sp]
  00460	e2833001	 add         r3, r3, #1
  00464	e58d3000	 str         r3, [sp]

; 22   :         if (i >= pDevice->nbGpioGrp)

  00468	e59d3010	 ldr         r3, [sp, #0x10]
  0046c	e2833004	 add         r3, r3, #4
  00470	e59d2000	 ldr         r2, [sp]
  00474	e5933000	 ldr         r3, [r3]
  00478	e1520003	 cmp         r2, r3
  0047c	ba000000	 blt         |$LN1@GetGroupBy|

; 23   :         {
; 24   :             break;

  00480	ea000000	 b           |$LN2@GetGroupBy|
  00484		 |$LN1@GetGroupBy|

; 25   :         }
; 26   :     }    

  00484	eaffffe9	 b           |$LN3@GetGroupBy|
  00488		 |$LN2@GetGroupBy|

; 27   :     *pGrp = i-1;

  00488	e59d3000	 ldr         r3, [sp]
  0048c	e2432001	 sub         r2, r3, #1
  00490	e59d3018	 ldr         r3, [sp, #0x18]
  00494	e5832000	 str         r2, [r3]

; 28   :     return TRUE;

  00498	e3a03001	 mov         r3, #1
  0049c	e58d3004	 str         r3, [sp, #4]

; 29   : } 

  004a0	e59d0004	 ldr         r0, [sp, #4]
  004a4	e28dd008	 add         sp, sp, #8
  004a8	e89d6000	 ldmia       sp, {sp, lr}
  004ac	e12fff1e	 bx          lr
  004b0		 |$M44072|

			 ENDP  ; |GetGroupByID|

	EXPORT	|GPIOClrBit|

  00028			 AREA	 |.pdata|, PDATA
|$T44083| DCD	|$LN8@GPIOClrBit|
	DCD	0x40005204
; Function compile flags: /Odtp

  004b0			 AREA	 |.text|, CODE, ARM

  004b0		 |GPIOClrBit| PROC

; 113  : {

  004b0		 |$LN8@GPIOClrBit|
  004b0	e1a0c00d	 mov         r12, sp
  004b4	e92d000f	 stmdb       sp!, {r0 - r3}
  004b8	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  004bc	e24dd02c	 sub         sp, sp, #0x2C
  004c0		 |$M44080|

; 114  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  004c0	e59d303c	 ldr         r3, [sp, #0x3C]
  004c4	e58d3010	 str         r3, [sp, #0x10]

; 115  :     int grp;
; 116  :     if (GetGroupByID(pDevice,id,&grp))

  004c8	e28d2014	 add         r2, sp, #0x14
  004cc	e59d1040	 ldr         r1, [sp, #0x40]
  004d0	e59d0010	 ldr         r0, [sp, #0x10]
  004d4	eb000000	 bl          GetGroupByID
  004d8	e58d0028	 str         r0, [sp, #0x28]
  004dc	e59d3028	 ldr         r3, [sp, #0x28]
  004e0	e3530000	 cmp         r3, #0
  004e4	0a00003f	 beq         |$LN3@GPIOClrBit|

; 117  :     {
; 118  :         id -= pDevice->rgRanges[grp];

  004e8	e59d3010	 ldr         r3, [sp, #0x10]
  004ec	e2830008	 add         r0, r3, #8
  004f0	e59d1014	 ldr         r1, [sp, #0x14]
  004f4	e3a03004	 mov         r3, #4
  004f8	e0020391	 mul         r2, r1, r3
  004fc	e5903000	 ldr         r3, [r0]
  00500	e0833002	 add         r3, r3, r2
  00504	e59d2040	 ldr         r2, [sp, #0x40]
  00508	e5933000	 ldr         r3, [r3]
  0050c	e0423003	 sub         r3, r2, r3
  00510	e58d3040	 str         r3, [sp, #0x40]

; 119  : 
; 120  :         if (pDevice->rgGpioTbls[grp])

  00514	e59d3010	 ldr         r3, [sp, #0x10]
  00518	e2830010	 add         r0, r3, #0x10
  0051c	e59d1014	 ldr         r1, [sp, #0x14]
  00520	e3a03004	 mov         r3, #4
  00524	e0020391	 mul         r2, r1, r3
  00528	e5903000	 ldr         r3, [r0]
  0052c	e0833002	 add         r3, r3, r2
  00530	e5933000	 ldr         r3, [r3]
  00534	e3530000	 cmp         r3, #0
  00538	0a000016	 beq         |$LN2@GPIOClrBit|

; 121  :         {
; 122  :             pDevice->rgGpioTbls[grp]->pfnClrBit(pDevice->rgGpioTbls[grp]->context, id);

  0053c	e59d1040	 ldr         r1, [sp, #0x40]
  00540	e59d3010	 ldr         r3, [sp, #0x10]
  00544	e283e010	 add         lr, r3, #0x10
  00548	e59d0014	 ldr         r0, [sp, #0x14]
  0054c	e3a03004	 mov         r3, #4
  00550	e0020390	 mul         r2, r0, r3
  00554	e59e3000	 ldr         r3, [lr]
  00558	e0833002	 add         r3, r3, r2
  0055c	e5933000	 ldr         r3, [r3]
  00560	e5930000	 ldr         r0, [r3]
  00564	e59d3010	 ldr         r3, [sp, #0x10]
  00568	e2834010	 add         r4, r3, #0x10
  0056c	e59de014	 ldr         lr, [sp, #0x14]
  00570	e3a03004	 mov         r3, #4
  00574	e002039e	 mul         r2, lr, r3
  00578	e5943000	 ldr         r3, [r4]
  0057c	e0833002	 add         r3, r3, r2
  00580	e5933000	 ldr         r3, [r3]
  00584	e2833014	 add         r3, r3, #0x14
  00588	e5933000	 ldr         r3, [r3]
  0058c	e1a0e00f	 mov         lr, pc
  00590	e12fff13	 bx          r3

; 123  :         }
; 124  :         else

  00594	ea000013	 b           |$LN1@GPIOClrBit|
  00598		 |$LN2@GPIOClrBit|

; 125  :         {
; 126  :             DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_CLRBIT,&id,sizeof(id),NULL,0,NULL,NULL);

  00598	e3a03000	 mov         r3, #0
  0059c	e58d300c	 str         r3, [sp, #0xC]
  005a0	e3a03000	 mov         r3, #0
  005a4	e58d3008	 str         r3, [sp, #8]
  005a8	e3a03000	 mov         r3, #0
  005ac	e58d3004	 str         r3, [sp, #4]
  005b0	e3a03000	 mov         r3, #0
  005b4	e58d3000	 str         r3, [sp]
  005b8	e3a03004	 mov         r3, #4
  005bc	e28d2040	 add         r2, sp, #0x40
  005c0	e59f102c	 ldr         r1, [pc, #0x2C]
  005c4	e59d0010	 ldr         r0, [sp, #0x10]
  005c8	e280500c	 add         r5, r0, #0xC
  005cc	e59d4014	 ldr         r4, [sp, #0x14]
  005d0	e3a00004	 mov         r0, #4
  005d4	e00e0094	 mul         lr, r4, r0
  005d8	e5950000	 ldr         r0, [r5]
  005dc	e080000e	 add         r0, r0, lr
  005e0	e5900000	 ldr         r0, [r0]
  005e4	eb000000	 bl          DeviceIoControl
  005e8		 |$LN1@GPIOClrBit|
  005e8		 |$LN3@GPIOClrBit|

; 127  :         }
; 128  :     }
; 129  : }

  005e8	e28dd02c	 add         sp, sp, #0x2C
  005ec	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  005f0	e12fff1e	 bx          lr
  005f4		 |$LN9@GPIOClrBit|
  005f4		 |$LN10@GPIOClrBit|
  005f4	00220c04	 DCD         0x220c04
  005f8		 |$M44081|

			 ENDP  ; |GPIOClrBit|

	EXPORT	|GPIOGetBit|

  00030			 AREA	 |.pdata|, PDATA
|$T44095| DCD	|$LN9@GPIOGetBit|
	DCD	0x40006004
; Function compile flags: /Odtp

  005f8			 AREA	 |.text|, CODE, ARM

  005f8		 |GPIOGetBit| PROC

; 132  : {

  005f8		 |$LN9@GPIOGetBit|
  005f8	e1a0c00d	 mov         r12, sp
  005fc	e92d000f	 stmdb       sp!, {r0 - r3}
  00600	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  00604	e24dd03c	 sub         sp, sp, #0x3C
  00608		 |$M44092|

; 133  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00608	e59d304c	 ldr         r3, [sp, #0x4C]
  0060c	e58d3010	 str         r3, [sp, #0x10]

; 134  :     int grp;
; 135  :     if (GetGroupByID(pDevice,id,&grp))

  00610	e28d2014	 add         r2, sp, #0x14
  00614	e59d1050	 ldr         r1, [sp, #0x50]
  00618	e59d0010	 ldr         r0, [sp, #0x10]
  0061c	eb000000	 bl          GetGroupByID
  00620	e58d0030	 str         r0, [sp, #0x30]
  00624	e59d3030	 ldr         r3, [sp, #0x30]
  00628	e3530000	 cmp         r3, #0
  0062c	0a00004a	 beq         |$LN4@GPIOGetBit|

; 136  :     {
; 137  :         id -= pDevice->rgRanges[grp];

  00630	e59d3010	 ldr         r3, [sp, #0x10]
  00634	e2830008	 add         r0, r3, #8
  00638	e59d1014	 ldr         r1, [sp, #0x14]
  0063c	e3a03004	 mov         r3, #4
  00640	e0020391	 mul         r2, r1, r3
  00644	e5903000	 ldr         r3, [r0]
  00648	e0833002	 add         r3, r3, r2
  0064c	e59d2050	 ldr         r2, [sp, #0x50]
  00650	e5933000	 ldr         r3, [r3]
  00654	e0423003	 sub         r3, r2, r3
  00658	e58d3050	 str         r3, [sp, #0x50]

; 138  : 
; 139  :         if (pDevice->rgGpioTbls[grp])

  0065c	e59d3010	 ldr         r3, [sp, #0x10]
  00660	e2830010	 add         r0, r3, #0x10
  00664	e59d1014	 ldr         r1, [sp, #0x14]
  00668	e3a03004	 mov         r3, #4
  0066c	e0020391	 mul         r2, r1, r3
  00670	e5903000	 ldr         r3, [r0]
  00674	e0833002	 add         r3, r3, r2
  00678	e5933000	 ldr         r3, [r3]
  0067c	e3530000	 cmp         r3, #0
  00680	0a00001a	 beq         |$LN3@GPIOGetBit|

; 140  :         {
; 141  :             return pDevice->rgGpioTbls[grp]->pfnGetBit(pDevice->rgGpioTbls[grp]->context, id);

  00684	e59d1050	 ldr         r1, [sp, #0x50]
  00688	e59d3010	 ldr         r3, [sp, #0x10]
  0068c	e283e010	 add         lr, r3, #0x10
  00690	e59d0014	 ldr         r0, [sp, #0x14]
  00694	e3a03004	 mov         r3, #4
  00698	e0020390	 mul         r2, r0, r3
  0069c	e59e3000	 ldr         r3, [lr]
  006a0	e0833002	 add         r3, r3, r2
  006a4	e5933000	 ldr         r3, [r3]
  006a8	e5930000	 ldr         r0, [r3]
  006ac	e59d3010	 ldr         r3, [sp, #0x10]
  006b0	e2834010	 add         r4, r3, #0x10
  006b4	e59de014	 ldr         lr, [sp, #0x14]
  006b8	e3a03004	 mov         r3, #4
  006bc	e002039e	 mul         r2, lr, r3
  006c0	e5943000	 ldr         r3, [r4]
  006c4	e0833002	 add         r3, r3, r2
  006c8	e5933000	 ldr         r3, [r3]
  006cc	e2833018	 add         r3, r3, #0x18
  006d0	e5933000	 ldr         r3, [r3]
  006d4	e1a0e00f	 mov         lr, pc
  006d8	e12fff13	 bx          r3
  006dc	e58d0034	 str         r0, [sp, #0x34]
  006e0	e59d3034	 ldr         r3, [sp, #0x34]
  006e4	e58d301c	 str         r3, [sp, #0x1C]
  006e8	ea00001d	 b           |$LN5@GPIOGetBit|

; 142  :         }
; 143  :         else

  006ec	ea00001a	 b           |$LN2@GPIOGetBit|
  006f0		 |$LN3@GPIOGetBit|

; 144  :         {
; 145  :             DWORD value;
; 146  :             if (DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_GETBIT,&id,sizeof(id),&value,sizeof(value),NULL,NULL))

  006f0	e3a03000	 mov         r3, #0
  006f4	e58d300c	 str         r3, [sp, #0xC]
  006f8	e3a03000	 mov         r3, #0
  006fc	e58d3008	 str         r3, [sp, #8]
  00700	e3a03004	 mov         r3, #4
  00704	e58d3004	 str         r3, [sp, #4]
  00708	e28d3018	 add         r3, sp, #0x18
  0070c	e58d3000	 str         r3, [sp]
  00710	e3a03004	 mov         r3, #4
  00714	e28d2050	 add         r2, sp, #0x50
  00718	e59f1054	 ldr         r1, [pc, #0x54]
  0071c	e59d0010	 ldr         r0, [sp, #0x10]
  00720	e280500c	 add         r5, r0, #0xC
  00724	e59d4014	 ldr         r4, [sp, #0x14]
  00728	e3a00004	 mov         r0, #4
  0072c	e00e0094	 mul         lr, r4, r0
  00730	e5950000	 ldr         r0, [r5]
  00734	e080000e	 add         r0, r0, lr
  00738	e5900000	 ldr         r0, [r0]
  0073c	eb000000	 bl          DeviceIoControl
  00740	e58d0038	 str         r0, [sp, #0x38]
  00744	e59d3038	 ldr         r3, [sp, #0x38]
  00748	e3530000	 cmp         r3, #0
  0074c	0a000002	 beq         |$LN1@GPIOGetBit|

; 147  :             {
; 148  :                 return value;

  00750	e59d3018	 ldr         r3, [sp, #0x18]
  00754	e58d301c	 str         r3, [sp, #0x1C]
  00758	ea000001	 b           |$LN5@GPIOGetBit|
  0075c		 |$LN1@GPIOGetBit|
  0075c		 |$LN2@GPIOGetBit|
  0075c		 |$LN4@GPIOGetBit|

; 149  :             }
; 150  :         }
; 151  :     }
; 152  :     return (DWORD) -1;

  0075c	e3e03000	 mvn         r3, #0
  00760	e58d301c	 str         r3, [sp, #0x1C]
  00764		 |$LN5@GPIOGetBit|

; 153  : }

  00764	e59d001c	 ldr         r0, [sp, #0x1C]
  00768	e28dd03c	 add         sp, sp, #0x3C
  0076c	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00770	e12fff1e	 bx          lr
  00774		 |$LN10@GPIOGetBit|
  00774		 |$LN11@GPIOGetBit|
  00774	00220c0c	 DCD         0x220c0c
  00778		 |$M44093|

			 ENDP  ; |GPIOGetBit|

	EXPORT	|GPIOSetMode|

  00038			 AREA	 |.pdata|, PDATA
|$T44106| DCD	|$LN8@GPIOSetMod|
	DCD	0x40005704
; Function compile flags: /Odtp

  00778			 AREA	 |.text|, CODE, ARM

  00778		 |GPIOSetMode| PROC

; 156  : {

  00778		 |$LN8@GPIOSetMod|
  00778	e1a0c00d	 mov         r12, sp
  0077c	e92d0007	 stmdb       sp!, {r0 - r2}
  00780	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  00784	e24dd034	 sub         sp, sp, #0x34
  00788		 |$M44103|

; 157  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00788	e59d3044	 ldr         r3, [sp, #0x44]
  0078c	e58d3010	 str         r3, [sp, #0x10]

; 158  :     int grp;
; 159  :     if (GetGroupByID(pDevice,id,&grp))

  00790	e28d2014	 add         r2, sp, #0x14
  00794	e59d1048	 ldr         r1, [sp, #0x48]
  00798	e59d0010	 ldr         r0, [sp, #0x10]
  0079c	eb000000	 bl          GetGroupByID
  007a0	e58d0030	 str         r0, [sp, #0x30]
  007a4	e59d3030	 ldr         r3, [sp, #0x30]
  007a8	e3530000	 cmp         r3, #0
  007ac	0a000045	 beq         |$LN3@GPIOSetMod|

; 160  :     {
; 161  :         id -= pDevice->rgRanges[grp];

  007b0	e59d3010	 ldr         r3, [sp, #0x10]
  007b4	e2830008	 add         r0, r3, #8
  007b8	e59d1014	 ldr         r1, [sp, #0x14]
  007bc	e3a03004	 mov         r3, #4
  007c0	e0020391	 mul         r2, r1, r3
  007c4	e5903000	 ldr         r3, [r0]
  007c8	e0833002	 add         r3, r3, r2
  007cc	e59d2048	 ldr         r2, [sp, #0x48]
  007d0	e5933000	 ldr         r3, [r3]
  007d4	e0423003	 sub         r3, r2, r3
  007d8	e58d3048	 str         r3, [sp, #0x48]

; 162  : 
; 163  :         if (pDevice->rgGpioTbls[grp])

  007dc	e59d3010	 ldr         r3, [sp, #0x10]
  007e0	e2830010	 add         r0, r3, #0x10
  007e4	e59d1014	 ldr         r1, [sp, #0x14]
  007e8	e3a03004	 mov         r3, #4
  007ec	e0020391	 mul         r2, r1, r3
  007f0	e5903000	 ldr         r3, [r0]
  007f4	e0833002	 add         r3, r3, r2
  007f8	e5933000	 ldr         r3, [r3]
  007fc	e3530000	 cmp         r3, #0
  00800	0a000017	 beq         |$LN2@GPIOSetMod|

; 164  :         {
; 165  :             pDevice->rgGpioTbls[grp]->pfnSetMode((HANDLE) pDevice->rgGpioTbls[grp]->context, id, mode);

  00804	e59d204c	 ldr         r2, [sp, #0x4C]
  00808	e59d1048	 ldr         r1, [sp, #0x48]
  0080c	e59d3010	 ldr         r3, [sp, #0x10]
  00810	e2834010	 add         r4, r3, #0x10
  00814	e59de014	 ldr         lr, [sp, #0x14]
  00818	e3a03004	 mov         r3, #4
  0081c	e000039e	 mul         r0, lr, r3
  00820	e5943000	 ldr         r3, [r4]
  00824	e0833000	 add         r3, r3, r0
  00828	e5933000	 ldr         r3, [r3]
  0082c	e5930000	 ldr         r0, [r3]
  00830	e59d3010	 ldr         r3, [sp, #0x10]
  00834	e2835010	 add         r5, r3, #0x10
  00838	e59d4014	 ldr         r4, [sp, #0x14]
  0083c	e3a03004	 mov         r3, #4
  00840	e00e0394	 mul         lr, r4, r3
  00844	e5953000	 ldr         r3, [r5]
  00848	e083300e	 add         r3, r3, lr
  0084c	e5933000	 ldr         r3, [r3]
  00850	e283301c	 add         r3, r3, #0x1C
  00854	e5933000	 ldr         r3, [r3]
  00858	e1a0e00f	 mov         lr, pc
  0085c	e12fff13	 bx          r3

; 166  :         }else{

  00860	ea000018	 b           |$LN1@GPIOSetMod|
  00864		 |$LN2@GPIOSetMod|

; 167  :             DWORD config[2];
; 168  :             config[0] = id;

  00864	e59d3048	 ldr         r3, [sp, #0x48]
  00868	e58d3018	 str         r3, [sp, #0x18]

; 169  :             config[1] = mode;

  0086c	e59d304c	 ldr         r3, [sp, #0x4C]
  00870	e58d301c	 str         r3, [sp, #0x1C]

; 170  : 
; 171  :             DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_SETMODE,config,sizeof(config),NULL,0,NULL,NULL);

  00874	e3a03000	 mov         r3, #0
  00878	e58d300c	 str         r3, [sp, #0xC]
  0087c	e3a03000	 mov         r3, #0
  00880	e58d3008	 str         r3, [sp, #8]
  00884	e3a03000	 mov         r3, #0
  00888	e58d3004	 str         r3, [sp, #4]
  0088c	e3a03000	 mov         r3, #0
  00890	e58d3000	 str         r3, [sp]
  00894	e3a03008	 mov         r3, #8
  00898	e28d2018	 add         r2, sp, #0x18
  0089c	e3a01822	 mov         r1, #0x22, 16
  008a0	e3811ec1	 orr         r1, r1, #0xC1, 28
  008a4	e59d0010	 ldr         r0, [sp, #0x10]
  008a8	e280500c	 add         r5, r0, #0xC
  008ac	e59d4014	 ldr         r4, [sp, #0x14]
  008b0	e3a00004	 mov         r0, #4
  008b4	e00e0094	 mul         lr, r4, r0
  008b8	e5950000	 ldr         r0, [r5]
  008bc	e080000e	 add         r0, r0, lr
  008c0	e5900000	 ldr         r0, [r0]
  008c4	eb000000	 bl          DeviceIoControl
  008c8		 |$LN1@GPIOSetMod|
  008c8		 |$LN3@GPIOSetMod|

; 172  :         }
; 173  :     }
; 174  : }

  008c8	e28dd034	 add         sp, sp, #0x34
  008cc	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  008d0	e12fff1e	 bx          lr
  008d4		 |$M44104|

			 ENDP  ; |GPIOSetMode|

	EXPORT	|GPIOGetMode|

  00040			 AREA	 |.pdata|, PDATA
|$T44116| DCD	|$LN9@GPIOGetMod|
	DCD	0x40006004
; Function compile flags: /Odtp

  008d4			 AREA	 |.text|, CODE, ARM

  008d4		 |GPIOGetMode| PROC

; 177  : {

  008d4		 |$LN9@GPIOGetMod|
  008d4	e1a0c00d	 mov         r12, sp
  008d8	e92d000f	 stmdb       sp!, {r0 - r3}
  008dc	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  008e0	e24dd03c	 sub         sp, sp, #0x3C
  008e4		 |$M44113|

; 178  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  008e4	e59d304c	 ldr         r3, [sp, #0x4C]
  008e8	e58d3010	 str         r3, [sp, #0x10]

; 179  :     int grp;
; 180  :     if (GetGroupByID(pDevice,id,&grp))

  008ec	e28d2014	 add         r2, sp, #0x14
  008f0	e59d1050	 ldr         r1, [sp, #0x50]
  008f4	e59d0010	 ldr         r0, [sp, #0x10]
  008f8	eb000000	 bl          GetGroupByID
  008fc	e58d0030	 str         r0, [sp, #0x30]
  00900	e59d3030	 ldr         r3, [sp, #0x30]
  00904	e3530000	 cmp         r3, #0
  00908	0a00004a	 beq         |$LN4@GPIOGetMod|

; 181  :     {
; 182  :         id -= pDevice->rgRanges[grp];

  0090c	e59d3010	 ldr         r3, [sp, #0x10]
  00910	e2830008	 add         r0, r3, #8
  00914	e59d1014	 ldr         r1, [sp, #0x14]
  00918	e3a03004	 mov         r3, #4
  0091c	e0020391	 mul         r2, r1, r3
  00920	e5903000	 ldr         r3, [r0]
  00924	e0833002	 add         r3, r3, r2
  00928	e59d2050	 ldr         r2, [sp, #0x50]
  0092c	e5933000	 ldr         r3, [r3]
  00930	e0423003	 sub         r3, r2, r3
  00934	e58d3050	 str         r3, [sp, #0x50]

; 183  : 
; 184  :         if (pDevice->rgGpioTbls[grp])

  00938	e59d3010	 ldr         r3, [sp, #0x10]
  0093c	e2830010	 add         r0, r3, #0x10
  00940	e59d1014	 ldr         r1, [sp, #0x14]
  00944	e3a03004	 mov         r3, #4
  00948	e0020391	 mul         r2, r1, r3
  0094c	e5903000	 ldr         r3, [r0]
  00950	e0833002	 add         r3, r3, r2
  00954	e5933000	 ldr         r3, [r3]
  00958	e3530000	 cmp         r3, #0
  0095c	0a00001a	 beq         |$LN3@GPIOGetMod|

; 185  :         {
; 186  :             return pDevice->rgGpioTbls[grp]->pfnGetMode(pDevice->rgGpioTbls[grp]->context, id);

  00960	e59d1050	 ldr         r1, [sp, #0x50]
  00964	e59d3010	 ldr         r3, [sp, #0x10]
  00968	e283e010	 add         lr, r3, #0x10
  0096c	e59d0014	 ldr         r0, [sp, #0x14]
  00970	e3a03004	 mov         r3, #4
  00974	e0020390	 mul         r2, r0, r3
  00978	e59e3000	 ldr         r3, [lr]
  0097c	e0833002	 add         r3, r3, r2
  00980	e5933000	 ldr         r3, [r3]
  00984	e5930000	 ldr         r0, [r3]
  00988	e59d3010	 ldr         r3, [sp, #0x10]
  0098c	e2834010	 add         r4, r3, #0x10
  00990	e59de014	 ldr         lr, [sp, #0x14]
  00994	e3a03004	 mov         r3, #4
  00998	e002039e	 mul         r2, lr, r3
  0099c	e5943000	 ldr         r3, [r4]
  009a0	e0833002	 add         r3, r3, r2
  009a4	e5933000	 ldr         r3, [r3]
  009a8	e2833020	 add         r3, r3, #0x20
  009ac	e5933000	 ldr         r3, [r3]
  009b0	e1a0e00f	 mov         lr, pc
  009b4	e12fff13	 bx          r3
  009b8	e58d0034	 str         r0, [sp, #0x34]
  009bc	e59d3034	 ldr         r3, [sp, #0x34]
  009c0	e58d301c	 str         r3, [sp, #0x1C]
  009c4	ea00001d	 b           |$LN5@GPIOGetMod|

; 187  :         }
; 188  :         else

  009c8	ea00001a	 b           |$LN2@GPIOGetMod|
  009cc		 |$LN3@GPIOGetMod|

; 189  :         {
; 190  :             DWORD mode;
; 191  :             if (DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_GETMODE,&id,sizeof(id),&mode,sizeof(mode),NULL,NULL))

  009cc	e3a03000	 mov         r3, #0
  009d0	e58d300c	 str         r3, [sp, #0xC]
  009d4	e3a03000	 mov         r3, #0
  009d8	e58d3008	 str         r3, [sp, #8]
  009dc	e3a03004	 mov         r3, #4
  009e0	e58d3004	 str         r3, [sp, #4]
  009e4	e28d3018	 add         r3, sp, #0x18
  009e8	e58d3000	 str         r3, [sp]
  009ec	e3a03004	 mov         r3, #4
  009f0	e28d2050	 add         r2, sp, #0x50
  009f4	e59f1054	 ldr         r1, [pc, #0x54]
  009f8	e59d0010	 ldr         r0, [sp, #0x10]
  009fc	e280500c	 add         r5, r0, #0xC
  00a00	e59d4014	 ldr         r4, [sp, #0x14]
  00a04	e3a00004	 mov         r0, #4
  00a08	e00e0094	 mul         lr, r4, r0
  00a0c	e5950000	 ldr         r0, [r5]
  00a10	e080000e	 add         r0, r0, lr
  00a14	e5900000	 ldr         r0, [r0]
  00a18	eb000000	 bl          DeviceIoControl
  00a1c	e58d0038	 str         r0, [sp, #0x38]
  00a20	e59d3038	 ldr         r3, [sp, #0x38]
  00a24	e3530000	 cmp         r3, #0
  00a28	0a000002	 beq         |$LN1@GPIOGetMod|

; 192  :             {
; 193  :                 return mode;

  00a2c	e59d3018	 ldr         r3, [sp, #0x18]
  00a30	e58d301c	 str         r3, [sp, #0x1C]
  00a34	ea000001	 b           |$LN5@GPIOGetMod|
  00a38		 |$LN1@GPIOGetMod|
  00a38		 |$LN2@GPIOGetMod|
  00a38		 |$LN4@GPIOGetMod|

; 194  :             }
; 195  :         }
; 196  :     }
; 197  :     return (DWORD) -1;

  00a38	e3e03000	 mvn         r3, #0
  00a3c	e58d301c	 str         r3, [sp, #0x1C]
  00a40		 |$LN5@GPIOGetMod|

; 198  : }

  00a40	e59d001c	 ldr         r0, [sp, #0x1C]
  00a44	e28dd03c	 add         sp, sp, #0x3C
  00a48	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00a4c	e12fff1e	 bx          lr
  00a50		 |$LN10@GPIOGetMod|
  00a50		 |$LN11@GPIOGetMod|
  00a50	00220c14	 DCD         0x220c14
  00a54		 |$M44114|

			 ENDP  ; |GPIOGetMode|

	EXPORT	|GPIOPullup|

  00048			 AREA	 |.pdata|, PDATA
|$T44124| DCD	|$LN7@GPIOPullup|
	DCD	0x40004404
; Function compile flags: /Odtp

  00a54			 AREA	 |.text|, CODE, ARM

  00a54		 |GPIOPullup| PROC

; 201  : {

  00a54		 |$LN7@GPIOPullup|
  00a54	e1a0c00d	 mov         r12, sp
  00a58	e92d0007	 stmdb       sp!, {r0 - r2}
  00a5c	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  00a60	e24dd014	 sub         sp, sp, #0x14
  00a64		 |$M44121|

; 202  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00a64	e59d3024	 ldr         r3, [sp, #0x24]
  00a68	e58d3000	 str         r3, [sp]

; 203  :     int grp;
; 204  :     if (GetGroupByID(pDevice,id,&grp))

  00a6c	e28d2004	 add         r2, sp, #4
  00a70	e59d1028	 ldr         r1, [sp, #0x28]
  00a74	e59d0000	 ldr         r0, [sp]
  00a78	eb000000	 bl          GetGroupByID
  00a7c	e58d000c	 str         r0, [sp, #0xC]
  00a80	e59d300c	 ldr         r3, [sp, #0xC]
  00a84	e3530000	 cmp         r3, #0
  00a88	0a00002f	 beq         |$LN2@GPIOPullup|

; 205  :     {
; 206  :         id -= pDevice->rgRanges[grp];

  00a8c	e59d3000	 ldr         r3, [sp]
  00a90	e2830008	 add         r0, r3, #8
  00a94	e59d1004	 ldr         r1, [sp, #4]
  00a98	e3a03004	 mov         r3, #4
  00a9c	e0020391	 mul         r2, r1, r3
  00aa0	e5903000	 ldr         r3, [r0]
  00aa4	e0833002	 add         r3, r3, r2
  00aa8	e59d2028	 ldr         r2, [sp, #0x28]
  00aac	e5933000	 ldr         r3, [r3]
  00ab0	e0423003	 sub         r3, r2, r3
  00ab4	e58d3028	 str         r3, [sp, #0x28]

; 207  : 
; 208  :         if (pDevice->rgGpioTbls[grp])

  00ab8	e59d3000	 ldr         r3, [sp]
  00abc	e2830010	 add         r0, r3, #0x10
  00ac0	e59d1004	 ldr         r1, [sp, #4]
  00ac4	e3a03004	 mov         r3, #4
  00ac8	e0020391	 mul         r2, r1, r3
  00acc	e5903000	 ldr         r3, [r0]
  00ad0	e0833002	 add         r3, r3, r2
  00ad4	e5933000	 ldr         r3, [r3]
  00ad8	e3530000	 cmp         r3, #0
  00adc	0a00001a	 beq         |$LN1@GPIOPullup|

; 209  :         {
; 210  :             return pDevice->rgGpioTbls[grp]->pfnPullup((HANDLE) pDevice->rgGpioTbls[grp]->context, id, enable);

  00ae0	e59d202c	 ldr         r2, [sp, #0x2C]
  00ae4	e59d1028	 ldr         r1, [sp, #0x28]
  00ae8	e59d3000	 ldr         r3, [sp]
  00aec	e2834010	 add         r4, r3, #0x10
  00af0	e59de004	 ldr         lr, [sp, #4]
  00af4	e3a03004	 mov         r3, #4
  00af8	e000039e	 mul         r0, lr, r3
  00afc	e5943000	 ldr         r3, [r4]
  00b00	e0833000	 add         r3, r3, r0
  00b04	e5933000	 ldr         r3, [r3]
  00b08	e5930000	 ldr         r0, [r3]
  00b0c	e59d3000	 ldr         r3, [sp]
  00b10	e2835010	 add         r5, r3, #0x10
  00b14	e59d4004	 ldr         r4, [sp, #4]
  00b18	e3a03004	 mov         r3, #4
  00b1c	e00e0394	 mul         lr, r4, r3
  00b20	e5953000	 ldr         r3, [r5]
  00b24	e083300e	 add         r3, r3, lr
  00b28	e5933000	 ldr         r3, [r3]
  00b2c	e2833024	 add         r3, r3, #0x24
  00b30	e5933000	 ldr         r3, [r3]
  00b34	e1a0e00f	 mov         lr, pc
  00b38	e12fff13	 bx          r3
  00b3c	e58d0010	 str         r0, [sp, #0x10]
  00b40	e59d3010	 ldr         r3, [sp, #0x10]
  00b44	e58d3008	 str         r3, [sp, #8]
  00b48	ea000001	 b           |$LN3@GPIOPullup|
  00b4c		 |$LN1@GPIOPullup|
  00b4c		 |$LN2@GPIOPullup|

; 211  :         }
; 212  :     }
; 213  :     return (DWORD) FALSE;

  00b4c	e3a03000	 mov         r3, #0
  00b50	e58d3008	 str         r3, [sp, #8]
  00b54		 |$LN3@GPIOPullup|

; 214  : }

  00b54	e59d0008	 ldr         r0, [sp, #8]
  00b58	e28dd014	 add         sp, sp, #0x14
  00b5c	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00b60	e12fff1e	 bx          lr
  00b64		 |$M44122|

			 ENDP  ; |GPIOPullup|

	EXPORT	|GPIOPulldown|

  00050			 AREA	 |.pdata|, PDATA
|$T44130| DCD	|$LN7@GPIOPulldo|
	DCD	0x40004404
; Function compile flags: /Odtp

  00b64			 AREA	 |.text|, CODE, ARM

  00b64		 |GPIOPulldown| PROC

; 217  : {

  00b64		 |$LN7@GPIOPulldo|
  00b64	e1a0c00d	 mov         r12, sp
  00b68	e92d0007	 stmdb       sp!, {r0 - r2}
  00b6c	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  00b70	e24dd014	 sub         sp, sp, #0x14
  00b74		 |$M44127|

; 218  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00b74	e59d3024	 ldr         r3, [sp, #0x24]
  00b78	e58d3000	 str         r3, [sp]

; 219  :     int grp;
; 220  :     if (GetGroupByID(pDevice,id,&grp))

  00b7c	e28d2004	 add         r2, sp, #4
  00b80	e59d1028	 ldr         r1, [sp, #0x28]
  00b84	e59d0000	 ldr         r0, [sp]
  00b88	eb000000	 bl          GetGroupByID
  00b8c	e58d000c	 str         r0, [sp, #0xC]
  00b90	e59d300c	 ldr         r3, [sp, #0xC]
  00b94	e3530000	 cmp         r3, #0
  00b98	0a00002f	 beq         |$LN2@GPIOPulldo|

; 221  :     {
; 222  :         id -= pDevice->rgRanges[grp];

  00b9c	e59d3000	 ldr         r3, [sp]
  00ba0	e2830008	 add         r0, r3, #8
  00ba4	e59d1004	 ldr         r1, [sp, #4]
  00ba8	e3a03004	 mov         r3, #4
  00bac	e0020391	 mul         r2, r1, r3
  00bb0	e5903000	 ldr         r3, [r0]
  00bb4	e0833002	 add         r3, r3, r2
  00bb8	e59d2028	 ldr         r2, [sp, #0x28]
  00bbc	e5933000	 ldr         r3, [r3]
  00bc0	e0423003	 sub         r3, r2, r3
  00bc4	e58d3028	 str         r3, [sp, #0x28]

; 223  : 
; 224  :         if (pDevice->rgGpioTbls[grp])

  00bc8	e59d3000	 ldr         r3, [sp]
  00bcc	e2830010	 add         r0, r3, #0x10
  00bd0	e59d1004	 ldr         r1, [sp, #4]
  00bd4	e3a03004	 mov         r3, #4
  00bd8	e0020391	 mul         r2, r1, r3
  00bdc	e5903000	 ldr         r3, [r0]
  00be0	e0833002	 add         r3, r3, r2
  00be4	e5933000	 ldr         r3, [r3]
  00be8	e3530000	 cmp         r3, #0
  00bec	0a00001a	 beq         |$LN1@GPIOPulldo|

; 225  :         {
; 226  :             return pDevice->rgGpioTbls[grp]->pfnPulldown((HANDLE) pDevice->rgGpioTbls[grp]->context, id, enable);            

  00bf0	e59d202c	 ldr         r2, [sp, #0x2C]
  00bf4	e59d1028	 ldr         r1, [sp, #0x28]
  00bf8	e59d3000	 ldr         r3, [sp]
  00bfc	e2834010	 add         r4, r3, #0x10
  00c00	e59de004	 ldr         lr, [sp, #4]
  00c04	e3a03004	 mov         r3, #4
  00c08	e000039e	 mul         r0, lr, r3
  00c0c	e5943000	 ldr         r3, [r4]
  00c10	e0833000	 add         r3, r3, r0
  00c14	e5933000	 ldr         r3, [r3]
  00c18	e5930000	 ldr         r0, [r3]
  00c1c	e59d3000	 ldr         r3, [sp]
  00c20	e2835010	 add         r5, r3, #0x10
  00c24	e59d4004	 ldr         r4, [sp, #4]
  00c28	e3a03004	 mov         r3, #4
  00c2c	e00e0394	 mul         lr, r4, r3
  00c30	e5953000	 ldr         r3, [r5]
  00c34	e083300e	 add         r3, r3, lr
  00c38	e5933000	 ldr         r3, [r3]
  00c3c	e2833028	 add         r3, r3, #0x28
  00c40	e5933000	 ldr         r3, [r3]
  00c44	e1a0e00f	 mov         lr, pc
  00c48	e12fff13	 bx          r3
  00c4c	e58d0010	 str         r0, [sp, #0x10]
  00c50	e59d3010	 ldr         r3, [sp, #0x10]
  00c54	e58d3008	 str         r3, [sp, #8]
  00c58	ea000001	 b           |$LN3@GPIOPulldo|
  00c5c		 |$LN1@GPIOPulldo|
  00c5c		 |$LN2@GPIOPulldo|

; 227  :         }
; 228  :     }
; 229  :     return (DWORD) FALSE;

  00c5c	e3a03000	 mov         r3, #0
  00c60	e58d3008	 str         r3, [sp, #8]
  00c64		 |$LN3@GPIOPulldo|

; 230  : }

  00c64	e59d0008	 ldr         r0, [sp, #8]
  00c68	e28dd014	 add         sp, sp, #0x14
  00c6c	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00c70	e12fff1e	 bx          lr
  00c74		 |$M44128|

			 ENDP  ; |GPIOPulldown|

	EXPORT	|GPIOInterruptInitialize|

  00058			 AREA	 |.pdata|, PDATA
|$T44136| DCD	|$LN7@GPIOInterr|
	DCD	0x40004504
; Function compile flags: /Odtp

  00c74			 AREA	 |.text|, CODE, ARM

  00c74		 |GPIOInterruptInitialize| PROC

; 233  : {

  00c74		 |$LN7@GPIOInterr|
  00c74	e1a0c00d	 mov         r12, sp
  00c78	e92d000f	 stmdb       sp!, {r0 - r3}
  00c7c	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  00c80	e24dd014	 sub         sp, sp, #0x14
  00c84		 |$M44133|

; 234  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00c84	e59d3028	 ldr         r3, [sp, #0x28]
  00c88	e58d3000	 str         r3, [sp]

; 235  :     int grp;
; 236  :     if (GetGroupByID(pDevice,id,&grp))

  00c8c	e28d2004	 add         r2, sp, #4
  00c90	e59d102c	 ldr         r1, [sp, #0x2C]
  00c94	e59d0000	 ldr         r0, [sp]
  00c98	eb000000	 bl          GetGroupByID
  00c9c	e58d000c	 str         r0, [sp, #0xC]
  00ca0	e59d300c	 ldr         r3, [sp, #0xC]
  00ca4	e3530000	 cmp         r3, #0
  00ca8	0a000030	 beq         |$LN2@GPIOInterr|

; 237  :     {        
; 238  :         id -= pDevice->rgRanges[grp];

  00cac	e59d3000	 ldr         r3, [sp]
  00cb0	e2830008	 add         r0, r3, #8
  00cb4	e59d1004	 ldr         r1, [sp, #4]
  00cb8	e3a03004	 mov         r3, #4
  00cbc	e0020391	 mul         r2, r1, r3
  00cc0	e5903000	 ldr         r3, [r0]
  00cc4	e0833002	 add         r3, r3, r2
  00cc8	e59d202c	 ldr         r2, [sp, #0x2C]
  00ccc	e5933000	 ldr         r3, [r3]
  00cd0	e0423003	 sub         r3, r2, r3
  00cd4	e58d302c	 str         r3, [sp, #0x2C]

; 239  : 
; 240  :         if (pDevice->rgGpioTbls[grp])

  00cd8	e59d3000	 ldr         r3, [sp]
  00cdc	e2830010	 add         r0, r3, #0x10
  00ce0	e59d1004	 ldr         r1, [sp, #4]
  00ce4	e3a03004	 mov         r3, #4
  00ce8	e0020391	 mul         r2, r1, r3
  00cec	e5903000	 ldr         r3, [r0]
  00cf0	e0833002	 add         r3, r3, r2
  00cf4	e5933000	 ldr         r3, [r3]
  00cf8	e3530000	 cmp         r3, #0
  00cfc	0a00001b	 beq         |$LN1@GPIOInterr|

; 241  :         {
; 242  :             return pDevice->rgGpioTbls[grp]->pfnInterruptInitialize((HANDLE) pDevice->rgGpioTbls[grp]->context, id, sysintr, hEvent);            

  00d00	e59d3034	 ldr         r3, [sp, #0x34]
  00d04	e59d2030	 ldr         r2, [sp, #0x30]
  00d08	e59d102c	 ldr         r1, [sp, #0x2C]
  00d0c	e59d0000	 ldr         r0, [sp]
  00d10	e2805010	 add         r5, r0, #0x10
  00d14	e59d4004	 ldr         r4, [sp, #4]
  00d18	e3a00004	 mov         r0, #4
  00d1c	e00e0094	 mul         lr, r4, r0
  00d20	e5950000	 ldr         r0, [r5]
  00d24	e080000e	 add         r0, r0, lr
  00d28	e5900000	 ldr         r0, [r0]
  00d2c	e5900000	 ldr         r0, [r0]
  00d30	e59de000	 ldr         lr, [sp]
  00d34	e28e6010	 add         r6, lr, #0x10
  00d38	e59d5004	 ldr         r5, [sp, #4]
  00d3c	e3a0e004	 mov         lr, #4
  00d40	e0040e95	 mul         r4, r5, lr
  00d44	e596e000	 ldr         lr, [r6]
  00d48	e08ee004	 add         lr, lr, r4
  00d4c	e59ee000	 ldr         lr, [lr]
  00d50	e28ee030	 add         lr, lr, #0x30
  00d54	e59e4000	 ldr         r4, [lr]
  00d58	e1a0e00f	 mov         lr, pc
  00d5c	e12fff14	 bx          r4
  00d60	e58d0010	 str         r0, [sp, #0x10]
  00d64	e59d3010	 ldr         r3, [sp, #0x10]
  00d68	e58d3008	 str         r3, [sp, #8]
  00d6c	ea000001	 b           |$LN3@GPIOInterr|
  00d70		 |$LN1@GPIOInterr|
  00d70		 |$LN2@GPIOInterr|

; 243  :         }
; 244  :     }
; 245  :     return FALSE;

  00d70	e3a03000	 mov         r3, #0
  00d74	e58d3008	 str         r3, [sp, #8]
  00d78		 |$LN3@GPIOInterr|

; 246  : }

  00d78	e59d0008	 ldr         r0, [sp, #8]
  00d7c	e28dd014	 add         sp, sp, #0x14
  00d80	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  00d84	e12fff1e	 bx          lr
  00d88		 |$M44134|

			 ENDP  ; |GPIOInterruptInitialize|

	EXPORT	|GPIOInterruptMask|

  00060			 AREA	 |.pdata|, PDATA
|$T44141| DCD	|$LN7@GPIOInterr@2|
	DCD	0x40003e04
; Function compile flags: /Odtp

  00d88			 AREA	 |.text|, CODE, ARM

  00d88		 |GPIOInterruptMask| PROC

; 249  : {

  00d88		 |$LN7@GPIOInterr@2|
  00d88	e1a0c00d	 mov         r12, sp
  00d8c	e92d000f	 stmdb       sp!, {r0 - r3}
  00d90	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  00d94	e24dd00c	 sub         sp, sp, #0xC
  00d98		 |$M44138|

; 250  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00d98	e59d3020	 ldr         r3, [sp, #0x20]
  00d9c	e58d3000	 str         r3, [sp]

; 251  :     int grp;
; 252  :     if (GetGroupByID(pDevice,id,&grp))

  00da0	e28d2004	 add         r2, sp, #4
  00da4	e59d1024	 ldr         r1, [sp, #0x24]
  00da8	e59d0000	 ldr         r0, [sp]
  00dac	eb000000	 bl          GetGroupByID
  00db0	e58d0008	 str         r0, [sp, #8]
  00db4	e59d3008	 ldr         r3, [sp, #8]
  00db8	e3530000	 cmp         r3, #0
  00dbc	0a00002c	 beq         |$LN2@GPIOInterr@2|

; 253  :     {
; 254  :         id -= pDevice->rgRanges[grp];

  00dc0	e59d3000	 ldr         r3, [sp]
  00dc4	e2830008	 add         r0, r3, #8
  00dc8	e59d1004	 ldr         r1, [sp, #4]
  00dcc	e3a03004	 mov         r3, #4
  00dd0	e0020391	 mul         r2, r1, r3
  00dd4	e5903000	 ldr         r3, [r0]
  00dd8	e0833002	 add         r3, r3, r2
  00ddc	e59d2024	 ldr         r2, [sp, #0x24]
  00de0	e5933000	 ldr         r3, [r3]
  00de4	e0423003	 sub         r3, r2, r3
  00de8	e58d3024	 str         r3, [sp, #0x24]

; 255  : 
; 256  :         if (pDevice->rgGpioTbls[grp])

  00dec	e59d3000	 ldr         r3, [sp]
  00df0	e2830010	 add         r0, r3, #0x10
  00df4	e59d1004	 ldr         r1, [sp, #4]
  00df8	e3a03004	 mov         r3, #4
  00dfc	e0020391	 mul         r2, r1, r3
  00e00	e5903000	 ldr         r3, [r0]
  00e04	e0833002	 add         r3, r3, r2
  00e08	e5933000	 ldr         r3, [r3]
  00e0c	e3530000	 cmp         r3, #0
  00e10	0a000017	 beq         |$LN1@GPIOInterr@2|

; 257  :         {
; 258  :             pDevice->rgGpioTbls[grp]->pfnInterruptMask((HANDLE) pDevice->rgGpioTbls[grp]->context, id, dwSysintr, fDisable);

  00e14	e59d302c	 ldr         r3, [sp, #0x2C]
  00e18	e59d2028	 ldr         r2, [sp, #0x28]
  00e1c	e59d1024	 ldr         r1, [sp, #0x24]
  00e20	e59d0000	 ldr         r0, [sp]
  00e24	e2805010	 add         r5, r0, #0x10
  00e28	e59d4004	 ldr         r4, [sp, #4]
  00e2c	e3a00004	 mov         r0, #4
  00e30	e00e0094	 mul         lr, r4, r0
  00e34	e5950000	 ldr         r0, [r5]
  00e38	e080000e	 add         r0, r0, lr
  00e3c	e5900000	 ldr         r0, [r0]
  00e40	e5900000	 ldr         r0, [r0]
  00e44	e59de000	 ldr         lr, [sp]
  00e48	e28e6010	 add         r6, lr, #0x10
  00e4c	e59d5004	 ldr         r5, [sp, #4]
  00e50	e3a0e004	 mov         lr, #4
  00e54	e0040e95	 mul         r4, r5, lr
  00e58	e596e000	 ldr         lr, [r6]
  00e5c	e08ee004	 add         lr, lr, r4
  00e60	e59ee000	 ldr         lr, [lr]
  00e64	e28ee034	 add         lr, lr, #0x34
  00e68	e59e4000	 ldr         r4, [lr]
  00e6c	e1a0e00f	 mov         lr, pc
  00e70	e12fff14	 bx          r4
  00e74		 |$LN1@GPIOInterr@2|
  00e74		 |$LN2@GPIOInterr@2|

; 259  :         }
; 260  :     }
; 261  : }

  00e74	e28dd00c	 add         sp, sp, #0xC
  00e78	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  00e7c	e12fff1e	 bx          lr
  00e80		 |$M44139|

			 ENDP  ; |GPIOInterruptMask|

	EXPORT	|GPIOInterruptDisable|

  00068			 AREA	 |.pdata|, PDATA
|$T44146| DCD	|$LN7@GPIOInterr@3|
	DCD	0x40003d04
; Function compile flags: /Odtp

  00e80			 AREA	 |.text|, CODE, ARM

  00e80		 |GPIOInterruptDisable| PROC

; 264  : {

  00e80		 |$LN7@GPIOInterr@3|
  00e80	e1a0c00d	 mov         r12, sp
  00e84	e92d0007	 stmdb       sp!, {r0 - r2}
  00e88	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  00e8c	e24dd00c	 sub         sp, sp, #0xC
  00e90		 |$M44143|

; 265  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00e90	e59d301c	 ldr         r3, [sp, #0x1C]
  00e94	e58d3000	 str         r3, [sp]

; 266  :     int grp;
; 267  :     if (GetGroupByID(pDevice,id,&grp))

  00e98	e28d2004	 add         r2, sp, #4
  00e9c	e59d1020	 ldr         r1, [sp, #0x20]
  00ea0	e59d0000	 ldr         r0, [sp]
  00ea4	eb000000	 bl          GetGroupByID
  00ea8	e58d0008	 str         r0, [sp, #8]
  00eac	e59d3008	 ldr         r3, [sp, #8]
  00eb0	e3530000	 cmp         r3, #0
  00eb4	0a00002b	 beq         |$LN2@GPIOInterr@3|

; 268  :     {
; 269  :         id -= pDevice->rgRanges[grp];

  00eb8	e59d3000	 ldr         r3, [sp]
  00ebc	e2830008	 add         r0, r3, #8
  00ec0	e59d1004	 ldr         r1, [sp, #4]
  00ec4	e3a03004	 mov         r3, #4
  00ec8	e0020391	 mul         r2, r1, r3
  00ecc	e5903000	 ldr         r3, [r0]
  00ed0	e0833002	 add         r3, r3, r2
  00ed4	e59d2020	 ldr         r2, [sp, #0x20]
  00ed8	e5933000	 ldr         r3, [r3]
  00edc	e0423003	 sub         r3, r2, r3
  00ee0	e58d3020	 str         r3, [sp, #0x20]

; 270  : 
; 271  :         if (pDevice->rgGpioTbls[grp])

  00ee4	e59d3000	 ldr         r3, [sp]
  00ee8	e2830010	 add         r0, r3, #0x10
  00eec	e59d1004	 ldr         r1, [sp, #4]
  00ef0	e3a03004	 mov         r3, #4
  00ef4	e0020391	 mul         r2, r1, r3
  00ef8	e5903000	 ldr         r3, [r0]
  00efc	e0833002	 add         r3, r3, r2
  00f00	e5933000	 ldr         r3, [r3]
  00f04	e3530000	 cmp         r3, #0
  00f08	0a000016	 beq         |$LN1@GPIOInterr@3|

; 272  :         {
; 273  :             pDevice->rgGpioTbls[grp]->pfnInterruptDisable((HANDLE) pDevice->rgGpioTbls[grp]->context, id, dwSysintr);            

  00f0c	e59d2024	 ldr         r2, [sp, #0x24]
  00f10	e59d1020	 ldr         r1, [sp, #0x20]
  00f14	e59d3000	 ldr         r3, [sp]
  00f18	e2834010	 add         r4, r3, #0x10
  00f1c	e59de004	 ldr         lr, [sp, #4]
  00f20	e3a03004	 mov         r3, #4
  00f24	e000039e	 mul         r0, lr, r3
  00f28	e5943000	 ldr         r3, [r4]
  00f2c	e0833000	 add         r3, r3, r0
  00f30	e5933000	 ldr         r3, [r3]
  00f34	e5930000	 ldr         r0, [r3]
  00f38	e59d3000	 ldr         r3, [sp]
  00f3c	e2835010	 add         r5, r3, #0x10
  00f40	e59d4004	 ldr         r4, [sp, #4]
  00f44	e3a03004	 mov         r3, #4
  00f48	e00e0394	 mul         lr, r4, r3
  00f4c	e5953000	 ldr         r3, [r5]
  00f50	e083300e	 add         r3, r3, lr
  00f54	e5933000	 ldr         r3, [r3]
  00f58	e2833038	 add         r3, r3, #0x38
  00f5c	e5933000	 ldr         r3, [r3]
  00f60	e1a0e00f	 mov         lr, pc
  00f64	e12fff13	 bx          r3
  00f68		 |$LN1@GPIOInterr@3|
  00f68		 |$LN2@GPIOInterr@3|

; 274  :         }
; 275  :     }
; 276  : }

  00f68	e28dd00c	 add         sp, sp, #0xC
  00f6c	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00f70	e12fff1e	 bx          lr
  00f74		 |$M44144|

			 ENDP  ; |GPIOInterruptDisable|

	EXPORT	|GPIOInterruptDone|

  00070			 AREA	 |.pdata|, PDATA
|$T44151| DCD	|$LN7@GPIOInterr@4|
	DCD	0x40003d04
; Function compile flags: /Odtp

  00f74			 AREA	 |.text|, CODE, ARM

  00f74		 |GPIOInterruptDone| PROC

; 279  : {

  00f74		 |$LN7@GPIOInterr@4|
  00f74	e1a0c00d	 mov         r12, sp
  00f78	e92d0007	 stmdb       sp!, {r0 - r2}
  00f7c	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  00f80	e24dd00c	 sub         sp, sp, #0xC
  00f84		 |$M44148|

; 280  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  00f84	e59d301c	 ldr         r3, [sp, #0x1C]
  00f88	e58d3000	 str         r3, [sp]

; 281  :     int grp;
; 282  :     if (GetGroupByID(pDevice,id,&grp))

  00f8c	e28d2004	 add         r2, sp, #4
  00f90	e59d1020	 ldr         r1, [sp, #0x20]
  00f94	e59d0000	 ldr         r0, [sp]
  00f98	eb000000	 bl          GetGroupByID
  00f9c	e58d0008	 str         r0, [sp, #8]
  00fa0	e59d3008	 ldr         r3, [sp, #8]
  00fa4	e3530000	 cmp         r3, #0
  00fa8	0a00002b	 beq         |$LN2@GPIOInterr@4|

; 283  :     {
; 284  :         id -= pDevice->rgRanges[grp];

  00fac	e59d3000	 ldr         r3, [sp]
  00fb0	e2830008	 add         r0, r3, #8
  00fb4	e59d1004	 ldr         r1, [sp, #4]
  00fb8	e3a03004	 mov         r3, #4
  00fbc	e0020391	 mul         r2, r1, r3
  00fc0	e5903000	 ldr         r3, [r0]
  00fc4	e0833002	 add         r3, r3, r2
  00fc8	e59d2020	 ldr         r2, [sp, #0x20]
  00fcc	e5933000	 ldr         r3, [r3]
  00fd0	e0423003	 sub         r3, r2, r3
  00fd4	e58d3020	 str         r3, [sp, #0x20]

; 285  : 
; 286  :         if (pDevice->rgGpioTbls[grp])

  00fd8	e59d3000	 ldr         r3, [sp]
  00fdc	e2830010	 add         r0, r3, #0x10
  00fe0	e59d1004	 ldr         r1, [sp, #4]
  00fe4	e3a03004	 mov         r3, #4
  00fe8	e0020391	 mul         r2, r1, r3
  00fec	e5903000	 ldr         r3, [r0]
  00ff0	e0833002	 add         r3, r3, r2
  00ff4	e5933000	 ldr         r3, [r3]
  00ff8	e3530000	 cmp         r3, #0
  00ffc	0a000016	 beq         |$LN1@GPIOInterr@4|

; 287  :         {
; 288  :             pDevice->rgGpioTbls[grp]->pfnInterruptDone((HANDLE) pDevice->rgGpioTbls[grp]->context, id, dwSysintr);            

  01000	e59d2024	 ldr         r2, [sp, #0x24]
  01004	e59d1020	 ldr         r1, [sp, #0x20]
  01008	e59d3000	 ldr         r3, [sp]
  0100c	e2834010	 add         r4, r3, #0x10
  01010	e59de004	 ldr         lr, [sp, #4]
  01014	e3a03004	 mov         r3, #4
  01018	e000039e	 mul         r0, lr, r3
  0101c	e5943000	 ldr         r3, [r4]
  01020	e0833000	 add         r3, r3, r0
  01024	e5933000	 ldr         r3, [r3]
  01028	e5930000	 ldr         r0, [r3]
  0102c	e59d3000	 ldr         r3, [sp]
  01030	e2835010	 add         r5, r3, #0x10
  01034	e59d4004	 ldr         r4, [sp, #4]
  01038	e3a03004	 mov         r3, #4
  0103c	e00e0394	 mul         lr, r4, r3
  01040	e5953000	 ldr         r3, [r5]
  01044	e083300e	 add         r3, r3, lr
  01048	e5933000	 ldr         r3, [r3]
  0104c	e283303c	 add         r3, r3, #0x3C
  01050	e5933000	 ldr         r3, [r3]
  01054	e1a0e00f	 mov         lr, pc
  01058	e12fff13	 bx          r3
  0105c		 |$LN1@GPIOInterr@4|
  0105c		 |$LN2@GPIOInterr@4|

; 289  :         }
; 290  :     }
; 291  : }

  0105c	e28dd00c	 add         sp, sp, #0xC
  01060	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  01064	e12fff1e	 bx          lr
  01068		 |$M44149|

			 ENDP  ; |GPIOInterruptDone|

	EXPORT	|GPIOGetSystemIrq|

  00078			 AREA	 |.pdata|, PDATA
|$T44157| DCD	|$LN7@GPIOGetSys|
	DCD	0x40004304
; Function compile flags: /Odtp

  01068			 AREA	 |.text|, CODE, ARM

  01068		 |GPIOGetSystemIrq| PROC

; 294  : {

  01068		 |$LN7@GPIOGetSys|
  01068	e1a0c00d	 mov         r12, sp
  0106c	e92d0003	 stmdb       sp!, {r0, r1}
  01070	e92d5010	 stmdb       sp!, {r4, r12, lr}
  01074	e24dd014	 sub         sp, sp, #0x14
  01078		 |$M44154|

; 295  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  01078	e59d3020	 ldr         r3, [sp, #0x20]
  0107c	e58d3000	 str         r3, [sp]

; 296  :     int grp;
; 297  :     if (GetGroupByID(pDevice,id,&grp))

  01080	e28d2004	 add         r2, sp, #4
  01084	e59d1024	 ldr         r1, [sp, #0x24]
  01088	e59d0000	 ldr         r0, [sp]
  0108c	eb000000	 bl          GetGroupByID
  01090	e58d000c	 str         r0, [sp, #0xC]
  01094	e59d300c	 ldr         r3, [sp, #0xC]
  01098	e3530000	 cmp         r3, #0
  0109c	0a00002e	 beq         |$LN2@GPIOGetSys|

; 298  :     {
; 299  :         id -= pDevice->rgRanges[grp];

  010a0	e59d3000	 ldr         r3, [sp]
  010a4	e2830008	 add         r0, r3, #8
  010a8	e59d1004	 ldr         r1, [sp, #4]
  010ac	e3a03004	 mov         r3, #4
  010b0	e0020391	 mul         r2, r1, r3
  010b4	e5903000	 ldr         r3, [r0]
  010b8	e0833002	 add         r3, r3, r2
  010bc	e59d2024	 ldr         r2, [sp, #0x24]
  010c0	e5933000	 ldr         r3, [r3]
  010c4	e0423003	 sub         r3, r2, r3
  010c8	e58d3024	 str         r3, [sp, #0x24]

; 300  : 
; 301  :         if (pDevice->rgGpioTbls[grp])

  010cc	e59d3000	 ldr         r3, [sp]
  010d0	e2830010	 add         r0, r3, #0x10
  010d4	e59d1004	 ldr         r1, [sp, #4]
  010d8	e3a03004	 mov         r3, #4
  010dc	e0020391	 mul         r2, r1, r3
  010e0	e5903000	 ldr         r3, [r0]
  010e4	e0833002	 add         r3, r3, r2
  010e8	e5933000	 ldr         r3, [r3]
  010ec	e3530000	 cmp         r3, #0
  010f0	0a000019	 beq         |$LN1@GPIOGetSys|

; 302  :         {
; 303  :             return pDevice->rgGpioTbls[grp]->pfnGetSystemIrq((HANDLE) pDevice->rgGpioTbls[grp]->context, id);            

  010f4	e59d1024	 ldr         r1, [sp, #0x24]
  010f8	e59d3000	 ldr         r3, [sp]
  010fc	e283e010	 add         lr, r3, #0x10
  01100	e59d0004	 ldr         r0, [sp, #4]
  01104	e3a03004	 mov         r3, #4
  01108	e0020390	 mul         r2, r0, r3
  0110c	e59e3000	 ldr         r3, [lr]
  01110	e0833002	 add         r3, r3, r2
  01114	e5933000	 ldr         r3, [r3]
  01118	e5930000	 ldr         r0, [r3]
  0111c	e59d3000	 ldr         r3, [sp]
  01120	e2834010	 add         r4, r3, #0x10
  01124	e59de004	 ldr         lr, [sp, #4]
  01128	e3a03004	 mov         r3, #4
  0112c	e002039e	 mul         r2, lr, r3
  01130	e5943000	 ldr         r3, [r4]
  01134	e0833002	 add         r3, r3, r2
  01138	e5933000	 ldr         r3, [r3]
  0113c	e2833040	 add         r3, r3, #0x40
  01140	e5933000	 ldr         r3, [r3]
  01144	e1a0e00f	 mov         lr, pc
  01148	e12fff13	 bx          r3
  0114c	e58d0010	 str         r0, [sp, #0x10]
  01150	e59d3010	 ldr         r3, [sp, #0x10]
  01154	e58d3008	 str         r3, [sp, #8]
  01158	ea000001	 b           |$LN3@GPIOGetSys|
  0115c		 |$LN1@GPIOGetSys|
  0115c		 |$LN2@GPIOGetSys|

; 304  :         }
; 305  :     }
; 306  : 	return (DWORD)SYSINTR_UNDEFINED;

  0115c	e3e03000	 mvn         r3, #0
  01160	e58d3008	 str         r3, [sp, #8]
  01164		 |$LN3@GPIOGetSys|

; 307  : }

  01164	e59d0008	 ldr         r0, [sp, #8]
  01168	e28dd014	 add         sp, sp, #0x14
  0116c	e89d6010	 ldmia       sp, {r4, sp, lr}
  01170	e12fff1e	 bx          lr
  01174		 |$M44155|

			 ENDP  ; |GPIOGetSystemIrq|

	EXPORT	|GPIOInterruptWakeUp|

  00080			 AREA	 |.pdata|, PDATA
|$T44163| DCD	|$LN7@GPIOInterr@5|
	DCD	0x40004704
; Function compile flags: /Odtp

  01174			 AREA	 |.text|, CODE, ARM

  01174		 |GPIOInterruptWakeUp| PROC

; 310  : {

  01174		 |$LN7@GPIOInterr@5|
  01174	e1a0c00d	 mov         r12, sp
  01178	e92d000f	 stmdb       sp!, {r0 - r3}
  0117c	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  01180	e24dd018	 sub         sp, sp, #0x18
  01184		 |$M44160|

; 311  :     BOOL rc = FALSE;

  01184	e3a03000	 mov         r3, #0
  01188	e58d3008	 str         r3, [sp, #8]

; 312  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  0118c	e59d302c	 ldr         r3, [sp, #0x2C]
  01190	e58d3000	 str         r3, [sp]

; 313  :     int grp;
; 314  :     if (GetGroupByID(pDevice,id,&grp))

  01194	e28d2004	 add         r2, sp, #4
  01198	e59d1030	 ldr         r1, [sp, #0x30]
  0119c	e59d0000	 ldr         r0, [sp]
  011a0	eb000000	 bl          GetGroupByID
  011a4	e58d0010	 str         r0, [sp, #0x10]
  011a8	e59d3010	 ldr         r3, [sp, #0x10]
  011ac	e3530000	 cmp         r3, #0
  011b0	0a000030	 beq         |$LN2@GPIOInterr@5|

; 315  :     {
; 316  :         id -= pDevice->rgRanges[grp];

  011b4	e59d3000	 ldr         r3, [sp]
  011b8	e2830008	 add         r0, r3, #8
  011bc	e59d1004	 ldr         r1, [sp, #4]
  011c0	e3a03004	 mov         r3, #4
  011c4	e0020391	 mul         r2, r1, r3
  011c8	e5903000	 ldr         r3, [r0]
  011cc	e0833002	 add         r3, r3, r2
  011d0	e59d2030	 ldr         r2, [sp, #0x30]
  011d4	e5933000	 ldr         r3, [r3]
  011d8	e0423003	 sub         r3, r2, r3
  011dc	e58d3030	 str         r3, [sp, #0x30]

; 317  : 
; 318  :         if (pDevice->rgGpioTbls[grp])

  011e0	e59d3000	 ldr         r3, [sp]
  011e4	e2830010	 add         r0, r3, #0x10
  011e8	e59d1004	 ldr         r1, [sp, #4]
  011ec	e3a03004	 mov         r3, #4
  011f0	e0020391	 mul         r2, r1, r3
  011f4	e5903000	 ldr         r3, [r0]
  011f8	e0833002	 add         r3, r3, r2
  011fc	e5933000	 ldr         r3, [r3]
  01200	e3530000	 cmp         r3, #0
  01204	0a00001b	 beq         |$LN1@GPIOInterr@5|

; 319  :         {
; 320  :             return pDevice->rgGpioTbls[grp]->pfnInterruptWakeUp((HANDLE) pDevice->rgGpioTbls[grp]->context, id, sysintr, fEnabled);

  01208	e59d3038	 ldr         r3, [sp, #0x38]
  0120c	e59d2034	 ldr         r2, [sp, #0x34]
  01210	e59d1030	 ldr         r1, [sp, #0x30]
  01214	e59d0000	 ldr         r0, [sp]
  01218	e2805010	 add         r5, r0, #0x10
  0121c	e59d4004	 ldr         r4, [sp, #4]
  01220	e3a00004	 mov         r0, #4
  01224	e00e0094	 mul         lr, r4, r0
  01228	e5950000	 ldr         r0, [r5]
  0122c	e080000e	 add         r0, r0, lr
  01230	e5900000	 ldr         r0, [r0]
  01234	e5900000	 ldr         r0, [r0]
  01238	e59de000	 ldr         lr, [sp]
  0123c	e28e6010	 add         r6, lr, #0x10
  01240	e59d5004	 ldr         r5, [sp, #4]
  01244	e3a0e004	 mov         lr, #4
  01248	e0040e95	 mul         r4, r5, lr
  0124c	e596e000	 ldr         lr, [r6]
  01250	e08ee004	 add         lr, lr, r4
  01254	e59ee000	 ldr         lr, [lr]
  01258	e28ee044	 add         lr, lr, #0x44
  0125c	e59e4000	 ldr         r4, [lr]
  01260	e1a0e00f	 mov         lr, pc
  01264	e12fff14	 bx          r4
  01268	e58d0014	 str         r0, [sp, #0x14]
  0126c	e59d3014	 ldr         r3, [sp, #0x14]
  01270	e58d300c	 str         r3, [sp, #0xC]
  01274	ea000001	 b           |$LN3@GPIOInterr@5|
  01278		 |$LN1@GPIOInterr@5|
  01278		 |$LN2@GPIOInterr@5|

; 321  :         }
; 322  :     }
; 323  : 	return rc;

  01278	e59d3008	 ldr         r3, [sp, #8]
  0127c	e58d300c	 str         r3, [sp, #0xC]
  01280		 |$LN3@GPIOInterr@5|

; 324  : }

  01280	e59d000c	 ldr         r0, [sp, #0xC]
  01284	e28dd018	 add         sp, sp, #0x18
  01288	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  0128c	e12fff1e	 bx          lr
  01290		 |$M44161|

			 ENDP  ; |GPIOInterruptWakeUp|

	EXPORT	|GPIOIoControl|

  00088			 AREA	 |.pdata|, PDATA
|$T44176| DCD	|$LN8@GPIOIoCont|
	DCD	0x40006404
; Function compile flags: /Odtp

  01290			 AREA	 |.text|, CODE, ARM

  01290		 |GPIOIoControl| PROC

; 337  : {    

  01290		 |$LN8@GPIOIoCont|
  01290	e1a0c00d	 mov         r12, sp
  01294	e92d000f	 stmdb       sp!, {r0 - r3}
  01298	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  0129c	e24dd048	 sub         sp, sp, #0x48
  012a0		 |$M44173|

; 338  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;

  012a0	e59d305c	 ldr         r3, [sp, #0x5C]
  012a4	e58d3010	 str         r3, [sp, #0x10]

; 339  :     int grp;
; 340  :     BOOL rc = FALSE;

  012a8	e3a03000	 mov         r3, #0
  012ac	e58d3014	 str         r3, [sp, #0x14]

; 341  : 
; 342  :     if (GetGroupByID(pDevice,id,&grp))

  012b0	e28d2018	 add         r2, sp, #0x18
  012b4	e59d1060	 ldr         r1, [sp, #0x60]
  012b8	e59d0010	 ldr         r0, [sp, #0x10]
  012bc	eb000000	 bl          GetGroupByID
  012c0	e58d003c	 str         r0, [sp, #0x3C]
  012c4	e59d303c	 ldr         r3, [sp, #0x3C]
  012c8	e3530000	 cmp         r3, #0
  012cc	0a00004d	 beq         |$LN3@GPIOIoCont|

; 343  :     {
; 344  :         id -= pDevice->rgRanges[grp];

  012d0	e59d3010	 ldr         r3, [sp, #0x10]
  012d4	e2830008	 add         r0, r3, #8
  012d8	e59d1018	 ldr         r1, [sp, #0x18]
  012dc	e3a03004	 mov         r3, #4
  012e0	e0020391	 mul         r2, r1, r3
  012e4	e5903000	 ldr         r3, [r0]
  012e8	e0833002	 add         r3, r3, r2
  012ec	e59d2060	 ldr         r2, [sp, #0x60]
  012f0	e5933000	 ldr         r3, [r3]
  012f4	e0423003	 sub         r3, r2, r3
  012f8	e58d3060	 str         r3, [sp, #0x60]

; 345  :         
; 346  :         if (pDevice->rgGpioTbls[grp])

  012fc	e59d3010	 ldr         r3, [sp, #0x10]
  01300	e2830010	 add         r0, r3, #0x10
  01304	e59d1018	 ldr         r1, [sp, #0x18]
  01308	e3a03004	 mov         r3, #4
  0130c	e0020391	 mul         r2, r1, r3
  01310	e5903000	 ldr         r3, [r0]
  01314	e0833002	 add         r3, r3, r2
  01318	e5933000	 ldr         r3, [r3]
  0131c	e3530000	 cmp         r3, #0
  01320	0a000021	 beq         |$LN2@GPIOIoCont|

; 347  :             rc = pDevice->rgGpioTbls[grp]->pfnIoControl(pDevice->rgGpioTbls[grp]->context, code, pInBuffer,
; 348  :                 inSize, pOutBuffer, outSize, pOutSize);            

  01324	e59d3078	 ldr         r3, [sp, #0x78]
  01328	e58d3008	 str         r3, [sp, #8]
  0132c	e59d3074	 ldr         r3, [sp, #0x74]
  01330	e58d3004	 str         r3, [sp, #4]
  01334	e59d3070	 ldr         r3, [sp, #0x70]
  01338	e58d3000	 str         r3, [sp]
  0133c	e59d306c	 ldr         r3, [sp, #0x6C]
  01340	e59d2068	 ldr         r2, [sp, #0x68]
  01344	e59d1064	 ldr         r1, [sp, #0x64]
  01348	e59d0010	 ldr         r0, [sp, #0x10]
  0134c	e2805010	 add         r5, r0, #0x10
  01350	e59d4018	 ldr         r4, [sp, #0x18]
  01354	e3a00004	 mov         r0, #4
  01358	e00e0094	 mul         lr, r4, r0
  0135c	e5950000	 ldr         r0, [r5]
  01360	e080000e	 add         r0, r0, lr
  01364	e5900000	 ldr         r0, [r0]
  01368	e5900000	 ldr         r0, [r0]
  0136c	e59de010	 ldr         lr, [sp, #0x10]
  01370	e28e6010	 add         r6, lr, #0x10
  01374	e59d5018	 ldr         r5, [sp, #0x18]
  01378	e3a0e004	 mov         lr, #4
  0137c	e0040e95	 mul         r4, r5, lr
  01380	e596e000	 ldr         lr, [r6]
  01384	e08ee004	 add         lr, lr, r4
  01388	e59ee000	 ldr         lr, [lr]
  0138c	e28ee02c	 add         lr, lr, #0x2C
  01390	e59e4000	 ldr         r4, [lr]
  01394	e1a0e00f	 mov         lr, pc
  01398	e12fff14	 bx          r4
  0139c	e58d0040	 str         r0, [sp, #0x40]
  013a0	e59d3040	 ldr         r3, [sp, #0x40]
  013a4	e58d3014	 str         r3, [sp, #0x14]

; 349  :         else

  013a8	ea000016	 b           |$LN1@GPIOIoCont|
  013ac		 |$LN2@GPIOIoCont|

; 350  :         {
; 351  :             rc=DeviceIoControl(pDevice->rgHandles[grp], code, pInBuffer,
; 352  :                 inSize, pOutBuffer, outSize, pOutSize, NULL);

  013ac	e3a03000	 mov         r3, #0
  013b0	e58d300c	 str         r3, [sp, #0xC]
  013b4	e59d3078	 ldr         r3, [sp, #0x78]
  013b8	e58d3008	 str         r3, [sp, #8]
  013bc	e59d3074	 ldr         r3, [sp, #0x74]
  013c0	e58d3004	 str         r3, [sp, #4]
  013c4	e59d3070	 ldr         r3, [sp, #0x70]
  013c8	e58d3000	 str         r3, [sp]
  013cc	e59d306c	 ldr         r3, [sp, #0x6C]
  013d0	e59d2068	 ldr         r2, [sp, #0x68]
  013d4	e59d1064	 ldr         r1, [sp, #0x64]
  013d8	e59d0010	 ldr         r0, [sp, #0x10]
  013dc	e280500c	 add         r5, r0, #0xC
  013e0	e59d4018	 ldr         r4, [sp, #0x18]
  013e4	e3a00004	 mov         r0, #4
  013e8	e00e0094	 mul         lr, r4, r0
  013ec	e5950000	 ldr         r0, [r5]
  013f0	e080000e	 add         r0, r0, lr
  013f4	e5900000	 ldr         r0, [r0]
  013f8	eb000000	 bl          DeviceIoControl
  013fc	e58d0044	 str         r0, [sp, #0x44]
  01400	e59d3044	 ldr         r3, [sp, #0x44]
  01404	e58d3014	 str         r3, [sp, #0x14]
  01408		 |$LN1@GPIOIoCont|
  01408		 |$LN3@GPIOIoCont|

; 353  :         }
; 354  :         
; 355  :     }
; 356  :     return (DWORD) rc;

  01408	e59d3014	 ldr         r3, [sp, #0x14]
  0140c	e58d3038	 str         r3, [sp, #0x38]

; 357  :     
; 358  : }

  01410	e59d0038	 ldr         r0, [sp, #0x38]
  01414	e28dd048	 add         sp, sp, #0x48
  01418	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  0141c	e12fff1e	 bx          lr
  01420		 |$M44174|

			 ENDP  ; |GPIOIoControl|

	END
