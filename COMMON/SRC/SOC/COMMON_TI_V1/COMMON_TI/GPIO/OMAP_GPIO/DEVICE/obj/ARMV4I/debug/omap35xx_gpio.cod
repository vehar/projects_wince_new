; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\GPIO\OMAP_GPIO\omap35xx_gpio.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|DEVICE_IFC_GPIO_GUID| [ DATA ]
	EXPORT	|dpCurSettings| [ DATA ]
	EXPORT	|Omap_Gpio| [ DATA ]

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, " ", 0x0, "G", 0x0
	DCB	"P", 0x0, "I", 0x0, "O", 0x0, 0x0, 0x0
	%	44
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"I", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0
	%	56
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCD	0x3
	%	4
|Omap_Gpio| DCD	0x0
	DCD	|?OmapGpioInit@@YAHPBGPAPAXPAI@Z|
	DCD	|?OmapGpioPostInit@@YAHPAX@Z|
	DCD	|?OmapGpioDeinit@@YAHPAX@Z|
	DCD	|?OmapGpioSetBit@@YAHPAXI@Z|
	DCD	|?OmapGpioClrBit@@YAHPAXI@Z|
	DCD	|?OmapGpioGetBit@@YAKPAXI@Z|
	DCD	|?OmapGpioSetMode@@YAHPAXII@Z|
	DCD	|?OmapGpioGetMode@@YAKPAXI@Z|
	DCD	|?OmapGpioPullup@@YAHPAXII@Z|
	DCD	|?OmapGpioPulldown@@YAHPAXII@Z|
	DCD	|?OmapGpioIoControl@@YAHPAXIPAEI1IPAK@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	%	8

  00000			 AREA	 |.rdata|, DATA, READONLY
|DEVICE_IFC_GPIO_GUID| DCD 0xa0272611
	DCW	0xdea0
	DCW	0x4678
	DCB	0xae
	DCB	0x62
	DCB	0x65
	DCB	0x61
	DCB	0x5b
	DCB	0x7d
	DCB	0x53
	DCB	0xaa
	EXPORT	|?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z| ; InternalSetGpioBankPowerState
	IMPORT	|EnableDeviceClocks|

  00000			 AREA	 |.pdata|, PDATA
|$T37621| DCD	|$LN8@InternalSe|
	DCD	0x40002f04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\omap_gpio\omap35xx_gpio.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z| PROC ; InternalSetGpioBankPowerState

; 197  : {

  00000		 |$LN8@InternalSe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37618|

; 198  :     // determine GPIO bank
; 199  :     UINT bank = GPIO_BANK(id);

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e1a032a3	 mov         r3, r3, lsr #5
  00018	e58d3000	 str         r3, [sp]

; 200  : 
; 201  :     // check if power is enabled by client
; 202  :     if (pDevice->bank[bank].powerEnabled != 0) return;

  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e283000c	 add         r0, r3, #0xC
  00024	e59d1000	 ldr         r1, [sp]
  00028	e3a03020	 mov         r3, #0x20
  0002c	e0020391	 mul         r2, r1, r3
  00030	e5903000	 ldr         r3, [r0]
  00034	e0833002	 add         r3, r3, r2
  00038	e5933000	 ldr         r3, [r3]
  0003c	e3530000	 cmp         r3, #0
  00040	0a000000	 beq         |$LN3@InternalSe|
  00044	ea000019	 b           |$LN4@InternalSe|
  00048		 |$LN3@InternalSe|

; 203  : 
; 204  :     if (state < D3)

  00048	e59d3014	 ldr         r3, [sp, #0x14]
  0004c	e3530003	 cmp         r3, #3
  00050	aa00000b	 bge         |$LN2@InternalSe|

; 205  :     {
; 206  :         EnableDeviceClocks( pDevice->bank[bank].DeviceID, TRUE );

  00054	e3a01001	 mov         r1, #1
  00058	e59d300c	 ldr         r3, [sp, #0xC]
  0005c	e283e00c	 add         lr, r3, #0xC
  00060	e59d0000	 ldr         r0, [sp]
  00064	e3a03020	 mov         r3, #0x20
  00068	e0020390	 mul         r2, r0, r3
  0006c	e59e3000	 ldr         r3, [lr]
  00070	e0833002	 add         r3, r3, r2
  00074	e283301c	 add         r3, r3, #0x1C
  00078	e5930000	 ldr         r0, [r3]
  0007c	eb000000	 bl          EnableDeviceClocks

; 207  :     }
; 208  :     else

  00080	ea00000a	 b           |$LN1@InternalSe|
  00084		 |$LN2@InternalSe|

; 209  :     {
; 210  : 		EnableDeviceClocks( pDevice->bank[bank].DeviceID, FALSE );

  00084	e3a01000	 mov         r1, #0
  00088	e59d300c	 ldr         r3, [sp, #0xC]
  0008c	e283e00c	 add         lr, r3, #0xC
  00090	e59d0000	 ldr         r0, [sp]
  00094	e3a03020	 mov         r3, #0x20
  00098	e0020390	 mul         r2, r0, r3
  0009c	e59e3000	 ldr         r3, [lr]
  000a0	e0833002	 add         r3, r3, r2
  000a4	e283301c	 add         r3, r3, #0x1C
  000a8	e5930000	 ldr         r0, [r3]
  000ac	eb000000	 bl          EnableDeviceClocks
  000b0		 |$LN1@InternalSe|
  000b0		 |$LN4@InternalSe|

; 211  :     }
; 212  : }

  000b0	e28dd004	 add         sp, sp, #4
  000b4	e89d6000	 ldmia       sp, {sp, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$M37619|

			 ENDP  ; |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|, InternalSetGpioBankPowerState

	EXPORT	|??_C@_1CE@FNDIPNHI@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@BGHMENPJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@ILLLDEBG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@EBHBEPLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@NPLPGPH@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|HalContextUpdateDirtyRegister|
	IMPORT	|MmMapIoSpace|
	IMPORT	|GetAddressByDevice|
	IMPORT	|SOCGetGPIODeviceByBank|
	IMPORT	|memset|
	IMPORT	|LocalAlloc|
	IMPORT	|NKDbgPrintfW|

  00008			 AREA	 |.pdata|, PDATA
|$T37637| DCD	|$LN27@OmapGpioIn|
	DCD	0x4000f304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FNDIPNHI@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@BGHMENPJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "G", 0x0, "I", 0x0, "O", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@ILLLDEBG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, " ", 0x0, "d"
	DCB	0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "b", 0x0, "a", 0x0, "n", 0x0, "k", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "u", 0x0, "c", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@EBHBEPLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, " ", 0x0, "d"
	DCB	0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "r", 0x0, "u", 0x0, "c", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@NPLPGPH@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "(", 0x0, "%", 0x0, "s", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  000bc			 AREA	 |.text|, CODE, ARM

  000bc		 |?OmapGpioInit@@YAHPBGPAPAXPAI@Z| PROC	; OmapGpioInit

; 227  : {

  000bc		 |$LN27@OmapGpioIn|
  000bc	e1a0c00d	 mov         r12, sp
  000c0	e92d0007	 stmdb       sp!, {r0 - r2}
  000c4	e92d5000	 stmdb       sp!, {r12, lr}
  000c8	e24dd04c	 sub         sp, sp, #0x4C
  000cc		 |$M37634|

; 228  :     BOOL rc = FALSE;

  000cc	e3a03000	 mov         r3, #0
  000d0	e58d3004	 str         r3, [sp, #4]

; 229  :     OmapGpioDevice_t *pDevice = NULL;

  000d4	e3a03000	 mov         r3, #0
  000d8	e58d3000	 str         r3, [sp]

; 230  :     PHYSICAL_ADDRESS pa;
; 231  :     DWORD size;
; 232  :     UINT8 i;
; 233  : 
; 234  : 	UNREFERENCED_PARAMETER(szContext);
; 235  : 
; 236  :     DEBUGMSG(ZONE_FUNCTION, (
; 237  :         L"+OmapGpioInit(%s)\r\n", szContext
; 238  :         ));

  000dc	e59f338c	 ldr         r3, [pc, #0x38C]
  000e0	e5933440	 ldr         r3, [r3, #0x440]
  000e4	e3130004	 tst         r3, #4
  000e8	0a000005	 beq         |$LN15@OmapGpioIn|
  000ec	e59d1054	 ldr         r1, [sp, #0x54]
  000f0	e59f038c	 ldr         r0, [pc, #0x38C]
  000f4	eb000000	 bl          NKDbgPrintfW
  000f8	e3a03001	 mov         r3, #1
  000fc	e58d301c	 str         r3, [sp, #0x1C]
  00100	ea000001	 b           |$LN16@OmapGpioIn|
  00104		 |$LN15@OmapGpioIn|
  00104	e3a03000	 mov         r3, #0
  00108	e58d301c	 str         r3, [sp, #0x1C]
  0010c		 |$LN16@OmapGpioIn|

; 239  : 
; 240  :     // Create device structure
; 241  :     pDevice = (OmapGpioDevice_t *)LocalAlloc(LPTR, sizeof(OmapGpioDevice_t));

  0010c	e3a01010	 mov         r1, #0x10
  00110	e3a00040	 mov         r0, #0x40
  00114	eb000000	 bl          LocalAlloc
  00118	e58d0020	 str         r0, [sp, #0x20]
  0011c	e59d3020	 ldr         r3, [sp, #0x20]
  00120	e58d3000	 str         r3, [sp]

; 242  :     if (pDevice == NULL)

  00124	e59d3000	 ldr         r3, [sp]
  00128	e3530000	 cmp         r3, #0
  0012c	1a00000c	 bne         |$LN12@OmapGpioIn|

; 243  :     {
; 244  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioInit: "
; 245  :             L"Failed allocate GPIO driver structure\r\n"
; 246  :             ));

  00130	e59f3338	 ldr         r3, [pc, #0x338]
  00134	e5933440	 ldr         r3, [r3, #0x440]
  00138	e3130001	 tst         r3, #1
  0013c	0a000004	 beq         |$LN17@OmapGpioIn|
  00140	e59f0338	 ldr         r0, [pc, #0x338]
  00144	eb000000	 bl          NKDbgPrintfW
  00148	e3a03001	 mov         r3, #1
  0014c	e58d3024	 str         r3, [sp, #0x24]
  00150	ea000001	 b           |$LN18@OmapGpioIn|
  00154		 |$LN17@OmapGpioIn|
  00154	e3a03000	 mov         r3, #0
  00158	e58d3024	 str         r3, [sp, #0x24]
  0015c		 |$LN18@OmapGpioIn|

; 247  :         goto cleanUp;

  0015c	ea0000ac	 b           |$LN11@OmapGpioIn|
  00160	ea0000ab	 b           |$cleanUp$37104|
  00164		 |$LN12@OmapGpioIn|

; 248  :     }
; 249  :     memset(pDevice, 0, sizeof(OmapGpioDevice_t));

  00164	e3a02010	 mov         r2, #0x10
  00168	e3a01000	 mov         r1, #0
  0016c	e59d0000	 ldr         r0, [sp]
  00170	eb000000	 bl          memset

; 250  :     // Set cookie
; 251  :     pDevice->cookie = GPIO_DEVICE_COOKIE;

  00174	e59d2000	 ldr         r2, [sp]
  00178	e59f32fc	 ldr         r3, [pc, #0x2FC]
  0017c	e5823000	 str         r3, [r2]

; 252  :     // Get the number of for this SOC
; 253  :     i=1;

  00180	e3a03001	 mov         r3, #1
  00184	e5cd3008	 strb        r3, [sp, #8]
  00188		 |$LN10@OmapGpioIn|

; 254  :     while (SOCGetGPIODeviceByBank(i++) != OMAP_DEVICE_NONE)

  00188	e5dd3008	 ldrb        r3, [sp, #8]
  0018c	e58d3028	 str         r3, [sp, #0x28]
  00190	e59d0028	 ldr         r0, [sp, #0x28]
  00194	eb000000	 bl          SOCGetGPIODeviceByBank
  00198	e58d002c	 str         r0, [sp, #0x2C]
  0019c	e59d302c	 ldr         r3, [sp, #0x2C]
  001a0	e3730001	 cmn         r3, #1
  001a4	e5dd3008	 ldrb        r3, [sp, #8]
  001a8	e2833001	 add         r3, r3, #1
  001ac	e20330ff	 and         r3, r3, #0xFF
  001b0	e5cd3008	 strb        r3, [sp, #8]
  001b4	0a000007	 beq         |$LN9@OmapGpioIn|

; 255  :     {
; 256  :         pDevice->nbBanks++;

  001b8	e59d3000	 ldr         r3, [sp]
  001bc	e2833004	 add         r3, r3, #4
  001c0	e5933000	 ldr         r3, [r3]
  001c4	e2832001	 add         r2, r3, #1
  001c8	e59d3000	 ldr         r3, [sp]
  001cc	e2833004	 add         r3, r3, #4
  001d0	e5832000	 str         r2, [r3]

; 257  :     }

  001d4	eaffffeb	 b           |$LN10@OmapGpioIn|
  001d8		 |$LN9@OmapGpioIn|

; 258  :     // Allocate the bank structure
; 259  :     pDevice->bank = (OmapGpioBank_t*) LocalAlloc(LPTR,sizeof(OmapGpioBank_t)*pDevice->nbBanks);

  001d8	e59d3000	 ldr         r3, [sp]
  001dc	e2833004	 add         r3, r3, #4
  001e0	e5932000	 ldr         r2, [r3]
  001e4	e3a03020	 mov         r3, #0x20
  001e8	e0010392	 mul         r1, r2, r3
  001ec	e3a00040	 mov         r0, #0x40
  001f0	eb000000	 bl          LocalAlloc
  001f4	e58d0030	 str         r0, [sp, #0x30]
  001f8	e59d3000	 ldr         r3, [sp]
  001fc	e283200c	 add         r2, r3, #0xC
  00200	e59d3030	 ldr         r3, [sp, #0x30]
  00204	e5823000	 str         r3, [r2]

; 260  :     if (pDevice->bank == NULL)

  00208	e59d3000	 ldr         r3, [sp]
  0020c	e283300c	 add         r3, r3, #0xC
  00210	e5933000	 ldr         r3, [r3]
  00214	e3530000	 cmp         r3, #0
  00218	1a00000c	 bne         |$LN8@OmapGpioIn|

; 261  :     {
; 262  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioInit: "
; 263  :             L"Failed allocate GPIO driver bank structures\r\n"
; 264  :             ));

  0021c	e59f324c	 ldr         r3, [pc, #0x24C]
  00220	e5933440	 ldr         r3, [r3, #0x440]
  00224	e3130001	 tst         r3, #1
  00228	0a000004	 beq         |$LN19@OmapGpioIn|
  0022c	e59f0244	 ldr         r0, [pc, #0x244]
  00230	eb000000	 bl          NKDbgPrintfW
  00234	e3a03001	 mov         r3, #1
  00238	e58d3034	 str         r3, [sp, #0x34]
  0023c	ea000001	 b           |$LN20@OmapGpioIn|
  00240		 |$LN19@OmapGpioIn|
  00240	e3a03000	 mov         r3, #0
  00244	e58d3034	 str         r3, [sp, #0x34]
  00248		 |$LN20@OmapGpioIn|

; 265  :         goto cleanUp;

  00248	ea000071	 b           |$LN7@OmapGpioIn|
  0024c	ea000070	 b           |$cleanUp$37104|
  00250		 |$LN8@OmapGpioIn|

; 266  :     }
; 267  :     memset(pDevice->bank, 0, sizeof(OmapGpioBank_t)*pDevice->nbBanks);

  00250	e59d3000	 ldr         r3, [sp]
  00254	e2833004	 add         r3, r3, #4
  00258	e5931000	 ldr         r1, [r3]
  0025c	e3a03020	 mov         r3, #0x20
  00260	e0020391	 mul         r2, r1, r3
  00264	e3a01000	 mov         r1, #0
  00268	e59d3000	 ldr         r3, [sp]
  0026c	e283300c	 add         r3, r3, #0xC
  00270	e5930000	 ldr         r0, [r3]
  00274	eb000000	 bl          memset

; 268  : 
; 269  :     for (i = 0; i < pDevice->nbBanks; i++)

  00278	e3a03000	 mov         r3, #0
  0027c	e5cd3008	 strb        r3, [sp, #8]
  00280	ea000003	 b           |$LN6@OmapGpioIn|
  00284		 |$LN5@OmapGpioIn|
  00284	e5dd3008	 ldrb        r3, [sp, #8]
  00288	e2833001	 add         r3, r3, #1
  0028c	e20330ff	 and         r3, r3, #0xFF
  00290	e5cd3008	 strb        r3, [sp, #8]
  00294		 |$LN6@OmapGpioIn|
  00294	e5dd2008	 ldrb        r2, [sp, #8]
  00298	e59d3000	 ldr         r3, [sp]
  0029c	e2833004	 add         r3, r3, #4
  002a0	e5933000	 ldr         r3, [r3]
  002a4	e1520003	 cmp         r2, r3
  002a8	2a00004d	 bcs         |$LN4@OmapGpioIn|

; 270  :     {
; 271  :         // Get device clock
; 272  :         pDevice->bank[i].DeviceID = SOCGetGPIODeviceByBank(i+1);

  002ac	e5dd3008	 ldrb        r3, [sp, #8]
  002b0	e2830001	 add         r0, r3, #1
  002b4	eb000000	 bl          SOCGetGPIODeviceByBank
  002b8	e58d0038	 str         r0, [sp, #0x38]
  002bc	e59d3000	 ldr         r3, [sp]
  002c0	e283000c	 add         r0, r3, #0xC
  002c4	e5dd3008	 ldrb        r3, [sp, #8]
  002c8	e1a01003	 mov         r1, r3
  002cc	e3a03020	 mov         r3, #0x20
  002d0	e0020391	 mul         r2, r1, r3
  002d4	e5903000	 ldr         r3, [r0]
  002d8	e0833002	 add         r3, r3, r2
  002dc	e283201c	 add         r2, r3, #0x1C
  002e0	e59d3038	 ldr         r3, [sp, #0x38]
  002e4	e5823000	 str         r3, [r2]

; 273  :         // Map GPIO registers  
; 274  :         pa.QuadPart = GetAddressByDevice(pDevice->bank[i].DeviceID);

  002e8	e59d3000	 ldr         r3, [sp]
  002ec	e283000c	 add         r0, r3, #0xC
  002f0	e5dd3008	 ldrb        r3, [sp, #8]
  002f4	e1a01003	 mov         r1, r3
  002f8	e3a03020	 mov         r3, #0x20
  002fc	e0020391	 mul         r2, r1, r3
  00300	e5903000	 ldr         r3, [r0]
  00304	e0833002	 add         r3, r3, r2
  00308	e283301c	 add         r3, r3, #0x1C
  0030c	e5930000	 ldr         r0, [r3]
  00310	eb000000	 bl          GetAddressByDevice
  00314	e58d003c	 str         r0, [sp, #0x3C]
  00318	e59d303c	 ldr         r3, [sp, #0x3C]
  0031c	e58d3010	 str         r3, [sp, #0x10]
  00320	e3a03000	 mov         r3, #0
  00324	e58d3014	 str         r3, [sp, #0x14]

; 275  :         size = sizeof(OMAP_GPIO_REGS);

  00328	e3a030a0	 mov         r3, #0xA0
  0032c	e58d300c	 str         r3, [sp, #0xC]

; 276  :         pDevice->bank[i].ppGpioRegs = (OMAP_GPIO_REGS*)MmMapIoSpace(pa, size, FALSE);

  00330	e3a03000	 mov         r3, #0
  00334	e59d200c	 ldr         r2, [sp, #0xC]
  00338	e59d0010	 ldr         r0, [sp, #0x10]
  0033c	e59d1014	 ldr         r1, [sp, #0x14]
  00340	eb000000	 bl          MmMapIoSpace
  00344	e58d0040	 str         r0, [sp, #0x40]
  00348	e59d3000	 ldr         r3, [sp]
  0034c	e283000c	 add         r0, r3, #0xC
  00350	e5dd3008	 ldrb        r3, [sp, #8]
  00354	e1a01003	 mov         r1, r3
  00358	e3a03020	 mov         r3, #0x20
  0035c	e0020391	 mul         r2, r1, r3
  00360	e5903000	 ldr         r3, [r0]
  00364	e0833002	 add         r3, r3, r2
  00368	e2832018	 add         r2, r3, #0x18
  0036c	e59d3040	 ldr         r3, [sp, #0x40]
  00370	e5823000	 str         r3, [r2]

; 277  :         if (pDevice->bank[i].ppGpioRegs == NULL)

  00374	e59d3000	 ldr         r3, [sp]
  00378	e283000c	 add         r0, r3, #0xC
  0037c	e5dd3008	 ldrb        r3, [sp, #8]
  00380	e1a01003	 mov         r1, r3
  00384	e3a03020	 mov         r3, #0x20
  00388	e0020391	 mul         r2, r1, r3
  0038c	e5903000	 ldr         r3, [r0]
  00390	e0833002	 add         r3, r3, r2
  00394	e2833018	 add         r3, r3, #0x18
  00398	e5933000	 ldr         r3, [r3]
  0039c	e3530000	 cmp         r3, #0
  003a0	1a00000e	 bne         |$LN3@OmapGpioIn|

; 278  :         {
; 279  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioInit: "
; 280  :                 L"Failed map GIO%d controller registers\r\n",i
; 281  :                 ));

  003a4	e59f30c4	 ldr         r3, [pc, #0xC4]
  003a8	e5933440	 ldr         r3, [r3, #0x440]
  003ac	e3130001	 tst         r3, #1
  003b0	0a000006	 beq         |$LN21@OmapGpioIn|
  003b4	e5dd3008	 ldrb        r3, [sp, #8]
  003b8	e1a01003	 mov         r1, r3
  003bc	e59f00b0	 ldr         r0, [pc, #0xB0]
  003c0	eb000000	 bl          NKDbgPrintfW
  003c4	e3a03001	 mov         r3, #1
  003c8	e58d3044	 str         r3, [sp, #0x44]
  003cc	ea000001	 b           |$LN22@OmapGpioIn|
  003d0		 |$LN21@OmapGpioIn|
  003d0	e3a03000	 mov         r3, #0
  003d4	e58d3044	 str         r3, [sp, #0x44]
  003d8		 |$LN22@OmapGpioIn|

; 282  :             goto cleanUp;

  003d8	ea00000d	 b           |$LN2@OmapGpioIn|
  003dc	ea00000c	 b           |$cleanUp$37104|
  003e0		 |$LN3@OmapGpioIn|

; 283  :         }
; 284  :     }

  003e0	eaffffa7	 b           |$LN5@OmapGpioIn|
  003e4		 |$LN4@OmapGpioIn|

; 285  : 
; 286  :     // indicate gpio registers need to be saved for OFF mode
; 287  :     HalContextUpdateDirtyRegister(HAL_CONTEXTSAVE_GPIO);

  003e4	e3a00001	 mov         r0, #1
  003e8	eb000000	 bl          HalContextUpdateDirtyRegister

; 288  : 
; 289  :     // Return non-null value
; 290  :     rc = TRUE;

  003ec	e3a03001	 mov         r3, #1
  003f0	e58d3004	 str         r3, [sp, #4]

; 291  :     *phContext = (HANDLE)pDevice;

  003f4	e59d2000	 ldr         r2, [sp]
  003f8	e59d3058	 ldr         r3, [sp, #0x58]
  003fc	e5832000	 str         r2, [r3]

; 292  :     *pGpioCount = pDevice->nbBanks;

  00400	e59d3000	 ldr         r3, [sp]
  00404	e2833004	 add         r3, r3, #4
  00408	e5932000	 ldr         r2, [r3]
  0040c	e59d305c	 ldr         r3, [sp, #0x5C]
  00410	e5832000	 str         r2, [r3]
  00414		 |$LN2@OmapGpioIn|
  00414		 |$LN7@OmapGpioIn|
  00414		 |$LN11@OmapGpioIn|
  00414		 |$cleanUp$37104|

; 293  : 
; 294  : cleanUp:
; 295  :     if (rc == FALSE) OmapGpioDeinit((HANDLE)pDevice);

  00414	e59d3004	 ldr         r3, [sp, #4]
  00418	e3530000	 cmp         r3, #0
  0041c	1a000001	 bne         |$LN1@OmapGpioIn|
  00420	e59d0000	 ldr         r0, [sp]
  00424	eb000000	 bl          |?OmapGpioDeinit@@YAHPAX@Z|
  00428		 |$LN1@OmapGpioIn|

; 296  :     DEBUGMSG(ZONE_FUNCTION, (L"-OmapGpioInit()\r\n"));

  00428	e59f3040	 ldr         r3, [pc, #0x40]
  0042c	e5933440	 ldr         r3, [r3, #0x440]
  00430	e3130004	 tst         r3, #4
  00434	0a000004	 beq         |$LN23@OmapGpioIn|
  00438	e59f002c	 ldr         r0, [pc, #0x2C]
  0043c	eb000000	 bl          NKDbgPrintfW
  00440	e3a03001	 mov         r3, #1
  00444	e58d3048	 str         r3, [sp, #0x48]
  00448	ea000001	 b           |$LN24@OmapGpioIn|
  0044c		 |$LN23@OmapGpioIn|
  0044c	e3a03000	 mov         r3, #0
  00450	e58d3048	 str         r3, [sp, #0x48]
  00454		 |$LN24@OmapGpioIn|

; 297  :     return rc;

  00454	e59d3004	 ldr         r3, [sp, #4]
  00458	e58d3018	 str         r3, [sp, #0x18]

; 298  : }

  0045c	e59d0018	 ldr         r0, [sp, #0x18]
  00460	e28dd04c	 add         sp, sp, #0x4C
  00464	e89d6000	 ldmia       sp, {sp, lr}
  00468	e12fff1e	 bx          lr
  0046c		 |$LN28@OmapGpioIn|
  0046c		 |$LN29@OmapGpioIn|
  0046c	00000000	 DCD         |??_C@_1CE@FNDIPNHI@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00470		 |$LN30@OmapGpioIn|
  00470	00000000	 DCD         |dpCurSettings|
  00474		 |$LN31@OmapGpioIn|
  00474	00000000	 DCD         |??_C@_1HK@BGHMENPJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5@|
  00478		 |$LN32@OmapGpioIn|
  00478	00000000	 DCD         |??_C@_1IG@ILLLDEBG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@|
  0047c		 |$LN33@OmapGpioIn|
  0047c	11223344	 DCD         0x11223344
  00480		 |$LN34@OmapGpioIn|
  00480	00000000	 DCD         |??_C@_1HK@EBHBEPLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@|
  00484		 |$LN35@OmapGpioIn|
  00484	00000000	 DCD         |??_C@_1CI@NPLPGPH@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00488		 |$M37635|

			 ENDP  ; |?OmapGpioInit@@YAHPBGPAPAXPAI@Z|, OmapGpioInit

	IMPORT	|InitializeCriticalSection|

  00010			 AREA	 |.pdata|, PDATA
|$T37651| DCD	|$LN8@OmapGpioPo|
	DCD	0x40002804
; Function compile flags: /Odtp

  00488			 AREA	 |.text|, CODE, ARM

  00488		 |?OmapGpioPostInit@@YAHPAX@Z| PROC	; OmapGpioPostInit

; 306  : {

  00488		 |$LN8@OmapGpioPo|
  00488	e1a0c00d	 mov         r12, sp
  0048c	e92d0001	 stmdb       sp!, {r0}
  00490	e92d5000	 stmdb       sp!, {r12, lr}
  00494	e24dd00c	 sub         sp, sp, #0xC
  00498		 |$M37648|

; 307  :     UINT8 i;
; 308  :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)hContext;

  00498	e59d3014	 ldr         r3, [sp, #0x14]
  0049c	e58d3000	 str         r3, [sp]

; 309  : 
; 310  :     // Initialize critical sections
; 311  :     for (i = 0; i < pDevice->nbBanks; i++)

  004a0	e3a03000	 mov         r3, #0
  004a4	e5cd3004	 strb        r3, [sp, #4]
  004a8	ea000003	 b           |$LN3@OmapGpioPo|
  004ac		 |$LN2@OmapGpioPo|
  004ac	e5dd3004	 ldrb        r3, [sp, #4]
  004b0	e2833001	 add         r3, r3, #1
  004b4	e20330ff	 and         r3, r3, #0xFF
  004b8	e5cd3004	 strb        r3, [sp, #4]
  004bc		 |$LN3@OmapGpioPo|
  004bc	e5dd2004	 ldrb        r2, [sp, #4]
  004c0	e59d3000	 ldr         r3, [sp]
  004c4	e2833004	 add         r3, r3, #4
  004c8	e5933000	 ldr         r3, [r3]
  004cc	e1520003	 cmp         r2, r3
  004d0	2a00000a	 bcs         |$LN1@OmapGpioPo|

; 312  :     {
; 313  :         InitializeCriticalSection(&pDevice->bank[i].pCs);

  004d4	e59d3000	 ldr         r3, [sp]
  004d8	e283000c	 add         r0, r3, #0xC
  004dc	e5dd3004	 ldrb        r3, [sp, #4]
  004e0	e1a01003	 mov         r1, r3
  004e4	e3a03020	 mov         r3, #0x20
  004e8	e0020391	 mul         r2, r1, r3
  004ec	e5903000	 ldr         r3, [r0]
  004f0	e0833002	 add         r3, r3, r2
  004f4	e2830004	 add         r0, r3, #4
  004f8	eb000000	 bl          InitializeCriticalSection

; 314  :     }

  004fc	eaffffea	 b           |$LN2@OmapGpioPo|
  00500		 |$LN1@OmapGpioPo|

; 315  :     pDevice->fPostInit = TRUE;

  00500	e59d3000	 ldr         r3, [sp]
  00504	e2832008	 add         r2, r3, #8
  00508	e3a03001	 mov         r3, #1
  0050c	e5823000	 str         r3, [r2]

; 316  :     return TRUE;

  00510	e3a03001	 mov         r3, #1
  00514	e58d3008	 str         r3, [sp, #8]

; 317  : }

  00518	e59d0008	 ldr         r0, [sp, #8]
  0051c	e28dd00c	 add         sp, sp, #0xC
  00520	e89d6000	 ldmia       sp, {sp, lr}
  00524	e12fff1e	 bx          lr
  00528		 |$M37649|

			 ENDP  ; |?OmapGpioPostInit@@YAHPAX@Z|, OmapGpioPostInit

	EXPORT	|??_C@_1CI@LADCCELG@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@MMGIENMG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@ODGFHIHK@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LocalFree|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|DeleteCriticalSection|

  00018			 AREA	 |.pdata|, PDATA
|$T37663| DCD	|$LN22@OmapGpioDe|
	DCD	0x40008e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LADCCELG@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@MMGIENMG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@ODGFHIHK@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00528			 AREA	 |.text|, CODE, ARM

  00528		 |?OmapGpioDeinit@@YAHPAX@Z| PROC	; OmapGpioDeinit

; 328  : {

  00528		 |$LN22@OmapGpioDe|
  00528	e1a0c00d	 mov         r12, sp
  0052c	e92d0001	 stmdb       sp!, {r0}
  00530	e92d5000	 stmdb       sp!, {r12, lr}
  00534	e24dd020	 sub         sp, sp, #0x20
  00538		 |$M37660|

; 329  :     BOOL rc = FALSE;

  00538	e3a03000	 mov         r3, #0
  0053c	e58d3004	 str         r3, [sp, #4]

; 330  :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)context;

  00540	e59d3028	 ldr         r3, [sp, #0x28]
  00544	e58d3000	 str         r3, [sp]

; 331  :     UINT8 i = 0;

  00548	e3a03000	 mov         r3, #0
  0054c	e5cd3008	 strb        r3, [sp, #8]

; 332  : 
; 333  :     DEBUGMSG(ZONE_FUNCTION, (L"+OmapGpioDeinit(0x%08x)\r\n", context));

  00550	e59f31f8	 ldr         r3, [pc, #0x1F8]
  00554	e5933440	 ldr         r3, [r3, #0x440]
  00558	e3130004	 tst         r3, #4
  0055c	0a000005	 beq         |$LN14@OmapGpioDe|
  00560	e59d1028	 ldr         r1, [sp, #0x28]
  00564	e59f01f0	 ldr         r0, [pc, #0x1F0]
  00568	eb000000	 bl          NKDbgPrintfW
  0056c	e3a03001	 mov         r3, #1
  00570	e58d3014	 str         r3, [sp, #0x14]
  00574	ea000001	 b           |$LN15@OmapGpioDe|
  00578		 |$LN14@OmapGpioDe|
  00578	e3a03000	 mov         r3, #0
  0057c	e58d3014	 str         r3, [sp, #0x14]
  00580		 |$LN15@OmapGpioDe|

; 334  : 
; 335  :     // Check if we get correct context
; 336  :     if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))

  00580	e59d3000	 ldr         r3, [sp]
  00584	e3530000	 cmp         r3, #0
  00588	0a000004	 beq         |$LN10@OmapGpioDe|
  0058c	e59d3000	 ldr         r3, [sp]
  00590	e5932000	 ldr         r2, [r3]
  00594	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00598	e1520003	 cmp         r2, r3
  0059c	0a00000c	 beq         |$LN11@OmapGpioDe|
  005a0		 |$LN10@OmapGpioDe|

; 337  :     {
; 338  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: OmapGpioDeinit: "
; 339  :             L"Incorrect context parameter\r\n"
; 340  :             ));

  005a0	e59f31a8	 ldr         r3, [pc, #0x1A8]
  005a4	e5933440	 ldr         r3, [r3, #0x440]
  005a8	e3130001	 tst         r3, #1
  005ac	0a000004	 beq         |$LN16@OmapGpioDe|
  005b0	e59f019c	 ldr         r0, [pc, #0x19C]
  005b4	eb000000	 bl          NKDbgPrintfW
  005b8	e3a03001	 mov         r3, #1
  005bc	e58d3018	 str         r3, [sp, #0x18]
  005c0	ea000001	 b           |$LN17@OmapGpioDe|
  005c4		 |$LN16@OmapGpioDe|
  005c4	e3a03000	 mov         r3, #0
  005c8	e58d3018	 str         r3, [sp, #0x18]
  005cc		 |$LN17@OmapGpioDe|

; 341  :         goto cleanUp;

  005cc	ea00004d	 b           |$LN9@OmapGpioDe|
  005d0	ea00004c	 b           |$cleanUp$37154|
  005d4		 |$LN11@OmapGpioDe|

; 342  :     }
; 343  : 
; 344  :     // Delete critical sections
; 345  :     if (pDevice->fPostInit)

  005d4	e59d3000	 ldr         r3, [sp]
  005d8	e2833008	 add         r3, r3, #8
  005dc	e5933000	 ldr         r3, [r3]
  005e0	e3530000	 cmp         r3, #0
  005e4	0a000017	 beq         |$LN8@OmapGpioDe|

; 346  :     {
; 347  :         for (i = 0; i < pDevice->nbBanks; i++)

  005e8	e3a03000	 mov         r3, #0
  005ec	e5cd3008	 strb        r3, [sp, #8]
  005f0	ea000003	 b           |$LN7@OmapGpioDe|
  005f4		 |$LN6@OmapGpioDe|
  005f4	e5dd3008	 ldrb        r3, [sp, #8]
  005f8	e2833001	 add         r3, r3, #1
  005fc	e20330ff	 and         r3, r3, #0xFF
  00600	e5cd3008	 strb        r3, [sp, #8]
  00604		 |$LN7@OmapGpioDe|
  00604	e5dd2008	 ldrb        r2, [sp, #8]
  00608	e59d3000	 ldr         r3, [sp]
  0060c	e2833004	 add         r3, r3, #4
  00610	e5933000	 ldr         r3, [r3]
  00614	e1520003	 cmp         r2, r3
  00618	2a00000a	 bcs         |$LN5@OmapGpioDe|

; 348  :             DeleteCriticalSection(&pDevice->bank[i].pCs);

  0061c	e59d3000	 ldr         r3, [sp]
  00620	e283000c	 add         r0, r3, #0xC
  00624	e5dd3008	 ldrb        r3, [sp, #8]
  00628	e1a01003	 mov         r1, r3
  0062c	e3a03020	 mov         r3, #0x20
  00630	e0020391	 mul         r2, r1, r3
  00634	e5903000	 ldr         r3, [r0]
  00638	e0833002	 add         r3, r3, r2
  0063c	e2830004	 add         r0, r3, #4
  00640	eb000000	 bl          DeleteCriticalSection
  00644	eaffffea	 b           |$LN6@OmapGpioDe|
  00648		 |$LN5@OmapGpioDe|
  00648		 |$LN8@OmapGpioDe|

; 349  :     }
; 350  :     // Unmap module registers
; 351  :     for (i = 0 ; i < pDevice->nbBanks; i++)

  00648	e3a03000	 mov         r3, #0
  0064c	e5cd3008	 strb        r3, [sp, #8]
  00650	ea000003	 b           |$LN4@OmapGpioDe|
  00654		 |$LN3@OmapGpioDe|
  00654	e5dd3008	 ldrb        r3, [sp, #8]
  00658	e2833001	 add         r3, r3, #1
  0065c	e20330ff	 and         r3, r3, #0xFF
  00660	e5cd3008	 strb        r3, [sp, #8]
  00664		 |$LN4@OmapGpioDe|
  00664	e5dd2008	 ldrb        r2, [sp, #8]
  00668	e59d3000	 ldr         r3, [sp]
  0066c	e2833004	 add         r3, r3, #4
  00670	e5933000	 ldr         r3, [r3]
  00674	e1520003	 cmp         r2, r3
  00678	2a00001a	 bcs         |$LN2@OmapGpioDe|

; 352  :     {
; 353  :         if (pDevice->bank[i].ppGpioRegs != NULL)

  0067c	e59d3000	 ldr         r3, [sp]
  00680	e283000c	 add         r0, r3, #0xC
  00684	e5dd3008	 ldrb        r3, [sp, #8]
  00688	e1a01003	 mov         r1, r3
  0068c	e3a03020	 mov         r3, #0x20
  00690	e0020391	 mul         r2, r1, r3
  00694	e5903000	 ldr         r3, [r0]
  00698	e0833002	 add         r3, r3, r2
  0069c	e2833018	 add         r3, r3, #0x18
  006a0	e5933000	 ldr         r3, [r3]
  006a4	e3530000	 cmp         r3, #0
  006a8	0a00000d	 beq         |$LN1@OmapGpioDe|

; 354  :         {
; 355  :             DWORD size = sizeof(OMAP_GPIO_REGS);

  006ac	e3a030a0	 mov         r3, #0xA0
  006b0	e58d300c	 str         r3, [sp, #0xC]

; 356  :             MmUnmapIoSpace((VOID*)pDevice->bank[i].ppGpioRegs, size);

  006b4	e59d100c	 ldr         r1, [sp, #0xC]
  006b8	e59d3000	 ldr         r3, [sp]
  006bc	e283e00c	 add         lr, r3, #0xC
  006c0	e5dd3008	 ldrb        r3, [sp, #8]
  006c4	e1a00003	 mov         r0, r3
  006c8	e3a03020	 mov         r3, #0x20
  006cc	e0020390	 mul         r2, r0, r3
  006d0	e59e3000	 ldr         r3, [lr]
  006d4	e0833002	 add         r3, r3, r2
  006d8	e2833018	 add         r3, r3, #0x18
  006dc	e5930000	 ldr         r0, [r3]
  006e0	eb000000	 bl          MmUnmapIoSpace
  006e4		 |$LN1@OmapGpioDe|

; 357  :         }
; 358  :     }

  006e4	eaffffda	 b           |$LN3@OmapGpioDe|
  006e8		 |$LN2@OmapGpioDe|

; 359  :     // Free banks structures    
; 360  :     LocalFree(pDevice->bank);

  006e8	e59d3000	 ldr         r3, [sp]
  006ec	e283300c	 add         r3, r3, #0xC
  006f0	e5930000	 ldr         r0, [r3]
  006f4	eb000000	 bl          LocalFree

; 361  : 
; 362  :     // Free device structure
; 363  :     LocalFree(pDevice);

  006f8	e59d0000	 ldr         r0, [sp]
  006fc	eb000000	 bl          LocalFree

; 364  : 
; 365  :     // Done
; 366  :     rc = TRUE;

  00700	e3a03001	 mov         r3, #1
  00704	e58d3004	 str         r3, [sp, #4]
  00708		 |$LN9@OmapGpioDe|
  00708		 |$cleanUp$37154|

; 367  : 
; 368  : cleanUp:
; 369  :     DEBUGMSG(ZONE_FUNCTION, (L"-OmapGpioDeinit()\r\n"));

  00708	e59f3040	 ldr         r3, [pc, #0x40]
  0070c	e5933440	 ldr         r3, [r3, #0x440]
  00710	e3130004	 tst         r3, #4
  00714	0a000004	 beq         |$LN18@OmapGpioDe|
  00718	e59f002c	 ldr         r0, [pc, #0x2C]
  0071c	eb000000	 bl          NKDbgPrintfW
  00720	e3a03001	 mov         r3, #1
  00724	e58d301c	 str         r3, [sp, #0x1C]
  00728	ea000001	 b           |$LN19@OmapGpioDe|
  0072c		 |$LN18@OmapGpioDe|
  0072c	e3a03000	 mov         r3, #0
  00730	e58d301c	 str         r3, [sp, #0x1C]
  00734		 |$LN19@OmapGpioDe|

; 370  :     return rc;

  00734	e59d3004	 ldr         r3, [sp, #4]
  00738	e58d3010	 str         r3, [sp, #0x10]

; 371  : }

  0073c	e59d0010	 ldr         r0, [sp, #0x10]
  00740	e28dd020	 add         sp, sp, #0x20
  00744	e89d6000	 ldmia       sp, {sp, lr}
  00748	e12fff1e	 bx          lr
  0074c		 |$LN23@OmapGpioDe|
  0074c		 |$LN24@OmapGpioDe|
  0074c	00000000	 DCD         |??_C@_1CI@LADCCELG@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00750		 |$LN25@OmapGpioDe|
  00750	00000000	 DCD         |dpCurSettings|
  00754		 |$LN26@OmapGpioDe|
  00754	00000000	 DCD         |??_C@_1GK@MMGIENMG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@|
  00758		 |$LN27@OmapGpioDe|
  00758	11223344	 DCD         0x11223344
  0075c		 |$LN28@OmapGpioDe|
  0075c	00000000	 DCD         |??_C@_1DE@ODGFHIHK@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00760		 |$M37661|

			 ENDP  ; |?OmapGpioDeinit@@YAHPAX@Z|, OmapGpioDeinit

	EXPORT	|??_C@_1FI@OBNBHIPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| [ DATA ] ; `string'
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00020			 AREA	 |.pdata|, PDATA
|$T37677| DCD	|$LN25@OmapGpioSe|
	DCD	0x4000e304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@OBNBHIPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "M"
	DCB	0x0, "o", 0x0, "d", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00760			 AREA	 |.text|, CODE, ARM

  00760		 |?OmapGpioSetMode@@YAHPAXII@Z| PROC	; OmapGpioSetMode

; 384  : {

  00760		 |$LN25@OmapGpioSe|
  00760	e1a0c00d	 mov         r12, sp
  00764	e92d0007	 stmdb       sp!, {r0 - r2}
  00768	e92d5000	 stmdb       sp!, {r12, lr}
  0076c	e24dd024	 sub         sp, sp, #0x24
  00770		 |$M37674|

; 385  :     BOOL rc = FALSE;

  00770	e3a03000	 mov         r3, #0
  00774	e58d3004	 str         r3, [sp, #4]

; 386  :     UINT bit = GPIO_BIT(id);

  00778	e59d3030	 ldr         r3, [sp, #0x30]
  0077c	e203301f	 and         r3, r3, #0x1F
  00780	e58d300c	 str         r3, [sp, #0xC]

; 387  :     UINT bank = GPIO_BANK(id);

  00784	e59d3030	 ldr         r3, [sp, #0x30]
  00788	e1a032a3	 mov         r3, r3, lsr #5
  0078c	e58d3008	 str         r3, [sp, #8]

; 388  :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)context;

  00790	e59d302c	 ldr         r3, [sp, #0x2C]
  00794	e58d3000	 str         r3, [sp]

; 389  : 
; 390  :     // Check if we get correct context
; 391  :     if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))

  00798	e59d3000	 ldr         r3, [sp]
  0079c	e3530000	 cmp         r3, #0
  007a0	0a000004	 beq         |$LN17@OmapGpioSe|
  007a4	e59d3000	 ldr         r3, [sp]
  007a8	e5932000	 ldr         r2, [r3]
  007ac	e59f3334	 ldr         r3, [pc, #0x334]
  007b0	e1520003	 cmp         r2, r3
  007b4	0a00000c	 beq         |$LN18@OmapGpioSe|
  007b8		 |$LN17@OmapGpioSe|

; 392  :     {
; 393  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioSetMode: "
; 394  :             L"Incorrect context\r\n"
; 395  :             ));

  007b8	e59f3324	 ldr         r3, [pc, #0x324]
  007bc	e5933440	 ldr         r3, [r3, #0x440]
  007c0	e3130001	 tst         r3, #1
  007c4	0a000004	 beq         |$LN21@OmapGpioSe|
  007c8	e59f0310	 ldr         r0, [pc, #0x310]
  007cc	eb000000	 bl          NKDbgPrintfW
  007d0	e3a03001	 mov         r3, #1
  007d4	e58d3020	 str         r3, [sp, #0x20]
  007d8	ea000001	 b           |$LN22@OmapGpioSe|
  007dc		 |$LN21@OmapGpioSe|
  007dc	e3a03000	 mov         r3, #0
  007e0	e58d3020	 str         r3, [sp, #0x20]
  007e4		 |$LN22@OmapGpioSe|

; 396  :         goto cleanUp;

  007e4	ea0000b7	 b           |$LN16@OmapGpioSe|
  007e8	ea0000b6	 b           |$cleanUp$37183|
  007ec		 |$LN18@OmapGpioSe|

; 397  :     }
; 398  : 
; 399  :     if (id < pDevice->nbBanks*32)

  007ec	e59d3000	 ldr         r3, [sp]
  007f0	e2833004	 add         r3, r3, #4
  007f4	e5931000	 ldr         r1, [r3]
  007f8	e3a03020	 mov         r3, #0x20
  007fc	e0020391	 mul         r2, r1, r3
  00800	e59d3030	 ldr         r3, [sp, #0x30]
  00804	e1530002	 cmp         r3, r2
  00808	2a0000ae	 bcs         |$LN15@OmapGpioSe|

; 400  :     {
; 401  :         UINT32 mask = 1 << (bit);

  0080c	e59d200c	 ldr         r2, [sp, #0xC]
  00810	e3a03001	 mov         r3, #1
  00814	e1a03213	 mov         r3, r3, lsl r2
  00818	e58d3014	 str         r3, [sp, #0x14]

; 402  :         CRITICAL_SECTION *pCs = &pDevice->bank[bank].pCs;

  0081c	e59d3000	 ldr         r3, [sp]
  00820	e283000c	 add         r0, r3, #0xC
  00824	e59d1008	 ldr         r1, [sp, #8]
  00828	e3a03020	 mov         r3, #0x20
  0082c	e0020391	 mul         r2, r1, r3
  00830	e5903000	 ldr         r3, [r0]
  00834	e0833002	 add         r3, r3, r2
  00838	e2833004	 add         r3, r3, #4
  0083c	e58d3010	 str         r3, [sp, #0x10]

; 403  :         OMAP_GPIO_REGS *pGpio = pDevice->bank[bank].ppGpioRegs;

  00840	e59d3000	 ldr         r3, [sp]
  00844	e283000c	 add         r0, r3, #0xC
  00848	e59d1008	 ldr         r1, [sp, #8]
  0084c	e3a03020	 mov         r3, #0x20
  00850	e0020391	 mul         r2, r1, r3
  00854	e5903000	 ldr         r3, [r0]
  00858	e0833002	 add         r3, r3, r2
  0085c	e2833018	 add         r3, r3, #0x18
  00860	e5933000	 ldr         r3, [r3]
  00864	e58d3018	 str         r3, [sp, #0x18]

; 404  : 
; 405  :         if (pDevice->fPostInit) EnterCriticalSection(pCs);

  00868	e59d3000	 ldr         r3, [sp]
  0086c	e2833008	 add         r3, r3, #8
  00870	e5933000	 ldr         r3, [r3]
  00874	e3530000	 cmp         r3, #0
  00878	0a000001	 beq         |$LN14@OmapGpioSe|
  0087c	e59d0010	 ldr         r0, [sp, #0x10]
  00880	eb000000	 bl          EnterCriticalSection
  00884		 |$LN14@OmapGpioSe|

; 406  :         InternalSetGpioBankPowerState(pDevice, id, D0);

  00884	e3a02000	 mov         r2, #0
  00888	e59d1030	 ldr         r1, [sp, #0x30]
  0088c	e59d0000	 ldr         r0, [sp]
  00890	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 407  : 
; 408  :         // set gpio direction
; 409  :         if ((mode & GPIO_DIR_INPUT) != 0)

  00894	e59d3034	 ldr         r3, [sp, #0x34]
  00898	e3130001	 tst         r3, #1
  0089c	0a000008	 beq         |$LN13@OmapGpioSe|

; 410  :         {
; 411  :             SETREG32(&pGpio->OE, mask);

  008a0	e59d3018	 ldr         r3, [sp, #0x18]
  008a4	e2833034	 add         r3, r3, #0x34
  008a8	e5932000	 ldr         r2, [r3]
  008ac	e59d3014	 ldr         r3, [sp, #0x14]
  008b0	e1822003	 orr         r2, r2, r3
  008b4	e59d3018	 ldr         r3, [sp, #0x18]
  008b8	e2833034	 add         r3, r3, #0x34
  008bc	e5832000	 str         r2, [r3]

; 412  :         }
; 413  :         else

  008c0	ea000008	 b           |$LN12@OmapGpioSe|
  008c4		 |$LN13@OmapGpioSe|

; 414  :         {
; 415  :             CLRREG32(&pGpio->OE, mask);

  008c4	e59d3018	 ldr         r3, [sp, #0x18]
  008c8	e2831034	 add         r1, r3, #0x34
  008cc	e59d3014	 ldr         r3, [sp, #0x14]
  008d0	e1e02003	 mvn         r2, r3
  008d4	e5913000	 ldr         r3, [r1]
  008d8	e0032002	 and         r2, r3, r2
  008dc	e59d3018	 ldr         r3, [sp, #0x18]
  008e0	e2833034	 add         r3, r3, #0x34
  008e4	e5832000	 str         r2, [r3]
  008e8		 |$LN12@OmapGpioSe|

; 416  :         }
; 417  : 
; 418  :         // set debounce mode
; 419  :         if ((mode & GPIO_DEBOUNCE_ENABLE) != 0)

  008e8	e59d3034	 ldr         r3, [sp, #0x34]
  008ec	e3130020	 tst         r3, #0x20
  008f0	0a000008	 beq         |$LN11@OmapGpioSe|

; 420  :         {
; 421  :             SETREG32(&pGpio->DEBOUNCENABLE, mask);

  008f4	e59d3018	 ldr         r3, [sp, #0x18]
  008f8	e2833050	 add         r3, r3, #0x50
  008fc	e5932000	 ldr         r2, [r3]
  00900	e59d3014	 ldr         r3, [sp, #0x14]
  00904	e1822003	 orr         r2, r2, r3
  00908	e59d3018	 ldr         r3, [sp, #0x18]
  0090c	e2833050	 add         r3, r3, #0x50
  00910	e5832000	 str         r2, [r3]

; 422  :         }
; 423  :         else

  00914	ea000008	 b           |$LN10@OmapGpioSe|
  00918		 |$LN11@OmapGpioSe|

; 424  :         {
; 425  :             CLRREG32(&pGpio->DEBOUNCENABLE, mask);

  00918	e59d3018	 ldr         r3, [sp, #0x18]
  0091c	e2831050	 add         r1, r3, #0x50
  00920	e59d3014	 ldr         r3, [sp, #0x14]
  00924	e1e02003	 mvn         r2, r3
  00928	e5913000	 ldr         r3, [r1]
  0092c	e0032002	 and         r2, r3, r2
  00930	e59d3018	 ldr         r3, [sp, #0x18]
  00934	e2833050	 add         r3, r3, #0x50
  00938	e5832000	 str         r2, [r3]
  0093c		 |$LN10@OmapGpioSe|

; 426  :         }
; 427  : 
; 428  :         // set edge/level detect mode
; 429  :         if ((mode & GPIO_INT_LOW) != 0)

  0093c	e59d3034	 ldr         r3, [sp, #0x34]
  00940	e3130008	 tst         r3, #8
  00944	0a000008	 beq         |$LN9@OmapGpioSe|

; 430  :         {
; 431  :             SETREG32(&pGpio->LEVELDETECT0, mask);

  00948	e59d3018	 ldr         r3, [sp, #0x18]
  0094c	e2833040	 add         r3, r3, #0x40
  00950	e5932000	 ldr         r2, [r3]
  00954	e59d3014	 ldr         r3, [sp, #0x14]
  00958	e1822003	 orr         r2, r2, r3
  0095c	e59d3018	 ldr         r3, [sp, #0x18]
  00960	e2833040	 add         r3, r3, #0x40
  00964	e5832000	 str         r2, [r3]

; 432  :         }
; 433  :         else

  00968	ea000008	 b           |$LN8@OmapGpioSe|
  0096c		 |$LN9@OmapGpioSe|

; 434  :         {
; 435  :             CLRREG32(&pGpio->LEVELDETECT0, mask);

  0096c	e59d3018	 ldr         r3, [sp, #0x18]
  00970	e2831040	 add         r1, r3, #0x40
  00974	e59d3014	 ldr         r3, [sp, #0x14]
  00978	e1e02003	 mvn         r2, r3
  0097c	e5913000	 ldr         r3, [r1]
  00980	e0032002	 and         r2, r3, r2
  00984	e59d3018	 ldr         r3, [sp, #0x18]
  00988	e2833040	 add         r3, r3, #0x40
  0098c	e5832000	 str         r2, [r3]
  00990		 |$LN8@OmapGpioSe|

; 436  :         }
; 437  : 
; 438  :         if ((mode & GPIO_INT_HIGH) != 0)

  00990	e59d3034	 ldr         r3, [sp, #0x34]
  00994	e3130010	 tst         r3, #0x10
  00998	0a000008	 beq         |$LN7@OmapGpioSe|

; 439  :         {
; 440  :             SETREG32(&pGpio->LEVELDETECT1, mask);

  0099c	e59d3018	 ldr         r3, [sp, #0x18]
  009a0	e2833044	 add         r3, r3, #0x44
  009a4	e5932000	 ldr         r2, [r3]
  009a8	e59d3014	 ldr         r3, [sp, #0x14]
  009ac	e1822003	 orr         r2, r2, r3
  009b0	e59d3018	 ldr         r3, [sp, #0x18]
  009b4	e2833044	 add         r3, r3, #0x44
  009b8	e5832000	 str         r2, [r3]

; 441  :         }
; 442  :         else

  009bc	ea000008	 b           |$LN6@OmapGpioSe|
  009c0		 |$LN7@OmapGpioSe|

; 443  :         {
; 444  :             CLRREG32(&pGpio->LEVELDETECT1, mask);

  009c0	e59d3018	 ldr         r3, [sp, #0x18]
  009c4	e2831044	 add         r1, r3, #0x44
  009c8	e59d3014	 ldr         r3, [sp, #0x14]
  009cc	e1e02003	 mvn         r2, r3
  009d0	e5913000	 ldr         r3, [r1]
  009d4	e0032002	 and         r2, r3, r2
  009d8	e59d3018	 ldr         r3, [sp, #0x18]
  009dc	e2833044	 add         r3, r3, #0x44
  009e0	e5832000	 str         r2, [r3]
  009e4		 |$LN6@OmapGpioSe|

; 445  :         }
; 446  : 
; 447  :         if ((mode & GPIO_INT_LOW_HIGH) != 0)

  009e4	e59d3034	 ldr         r3, [sp, #0x34]
  009e8	e3130002	 tst         r3, #2
  009ec	0a000008	 beq         |$LN5@OmapGpioSe|

; 448  :         {
; 449  :             SETREG32(&pGpio->RISINGDETECT, mask);

  009f0	e59d3018	 ldr         r3, [sp, #0x18]
  009f4	e2833048	 add         r3, r3, #0x48
  009f8	e5932000	 ldr         r2, [r3]
  009fc	e59d3014	 ldr         r3, [sp, #0x14]
  00a00	e1822003	 orr         r2, r2, r3
  00a04	e59d3018	 ldr         r3, [sp, #0x18]
  00a08	e2833048	 add         r3, r3, #0x48
  00a0c	e5832000	 str         r2, [r3]

; 450  :         }
; 451  :         else

  00a10	ea000008	 b           |$LN4@OmapGpioSe|
  00a14		 |$LN5@OmapGpioSe|

; 452  :         {
; 453  :             CLRREG32(&pGpio->RISINGDETECT, mask);

  00a14	e59d3018	 ldr         r3, [sp, #0x18]
  00a18	e2831048	 add         r1, r3, #0x48
  00a1c	e59d3014	 ldr         r3, [sp, #0x14]
  00a20	e1e02003	 mvn         r2, r3
  00a24	e5913000	 ldr         r3, [r1]
  00a28	e0032002	 and         r2, r3, r2
  00a2c	e59d3018	 ldr         r3, [sp, #0x18]
  00a30	e2833048	 add         r3, r3, #0x48
  00a34	e5832000	 str         r2, [r3]
  00a38		 |$LN4@OmapGpioSe|

; 454  :         }
; 455  : 
; 456  :         if ((mode & GPIO_INT_HIGH_LOW) != 0)

  00a38	e59d3034	 ldr         r3, [sp, #0x34]
  00a3c	e3130004	 tst         r3, #4
  00a40	0a000008	 beq         |$LN3@OmapGpioSe|

; 457  :         {
; 458  :             SETREG32(&pGpio->FALLINGDETECT, mask);

  00a44	e59d3018	 ldr         r3, [sp, #0x18]
  00a48	e283304c	 add         r3, r3, #0x4C
  00a4c	e5932000	 ldr         r2, [r3]
  00a50	e59d3014	 ldr         r3, [sp, #0x14]
  00a54	e1822003	 orr         r2, r2, r3
  00a58	e59d3018	 ldr         r3, [sp, #0x18]
  00a5c	e283304c	 add         r3, r3, #0x4C
  00a60	e5832000	 str         r2, [r3]

; 459  :         }
; 460  :         else

  00a64	ea000008	 b           |$LN2@OmapGpioSe|
  00a68		 |$LN3@OmapGpioSe|

; 461  :         {
; 462  :             CLRREG32(&pGpio->FALLINGDETECT, mask);

  00a68	e59d3018	 ldr         r3, [sp, #0x18]
  00a6c	e283104c	 add         r1, r3, #0x4C
  00a70	e59d3014	 ldr         r3, [sp, #0x14]
  00a74	e1e02003	 mvn         r2, r3
  00a78	e5913000	 ldr         r3, [r1]
  00a7c	e0032002	 and         r2, r3, r2
  00a80	e59d3018	 ldr         r3, [sp, #0x18]
  00a84	e283304c	 add         r3, r3, #0x4C
  00a88	e5832000	 str         r2, [r3]
  00a8c		 |$LN2@OmapGpioSe|

; 463  :         }
; 464  : 
; 465  :         InternalSetGpioBankPowerState(pDevice, id, D4);

  00a8c	e3a02004	 mov         r2, #4
  00a90	e59d1030	 ldr         r1, [sp, #0x30]
  00a94	e59d0000	 ldr         r0, [sp]
  00a98	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 466  :         if (pDevice->fPostInit)LeaveCriticalSection(pCs);

  00a9c	e59d3000	 ldr         r3, [sp]
  00aa0	e2833008	 add         r3, r3, #8
  00aa4	e5933000	 ldr         r3, [r3]
  00aa8	e3530000	 cmp         r3, #0
  00aac	0a000001	 beq         |$LN1@OmapGpioSe|
  00ab0	e59d0010	 ldr         r0, [sp, #0x10]
  00ab4	eb000000	 bl          LeaveCriticalSection
  00ab8		 |$LN1@OmapGpioSe|

; 467  : 
; 468  :         // indicate gpio registers need to be saved for OFF mode
; 469  :         HalContextUpdateDirtyRegister(HAL_CONTEXTSAVE_GPIO);

  00ab8	e3a00001	 mov         r0, #1
  00abc	eb000000	 bl          HalContextUpdateDirtyRegister

; 470  : 
; 471  :         rc = TRUE;

  00ac0	e3a03001	 mov         r3, #1
  00ac4	e58d3004	 str         r3, [sp, #4]
  00ac8		 |$LN15@OmapGpioSe|
  00ac8		 |$LN16@OmapGpioSe|
  00ac8		 |$cleanUp$37183|

; 472  :     }
; 473  : 
; 474  : cleanUp:
; 475  :     return rc;

  00ac8	e59d3004	 ldr         r3, [sp, #4]
  00acc	e58d301c	 str         r3, [sp, #0x1C]

; 476  : }

  00ad0	e59d001c	 ldr         r0, [sp, #0x1C]
  00ad4	e28dd024	 add         sp, sp, #0x24
  00ad8	e89d6000	 ldmia       sp, {sp, lr}
  00adc	e12fff1e	 bx          lr
  00ae0		 |$LN26@OmapGpioSe|
  00ae0		 |$LN27@OmapGpioSe|
  00ae0	00000000	 DCD         |??_C@_1FI@OBNBHIPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@|
  00ae4		 |$LN28@OmapGpioSe|
  00ae4	00000000	 DCD         |dpCurSettings|
  00ae8		 |$LN29@OmapGpioSe|
  00ae8	11223344	 DCD         0x11223344
  00aec		 |$M37675|

			 ENDP  ; |?OmapGpioSetMode@@YAHPAXII@Z|, OmapGpioSetMode

	EXPORT	|??_C@_1FI@GGOKKMEH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAG?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| [ DATA ] ; `string'

  00028			 AREA	 |.pdata|, PDATA
|$T37689| DCD	|$LN20@OmapGpioGe|
	DCD	0x40009c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@GGOKKMEH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAG?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "M"
	DCB	0x0, "o", 0x0, "d", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00aec			 AREA	 |.text|, CODE, ARM

  00aec		 |?OmapGpioGetMode@@YAKPAXI@Z| PROC	; OmapGpioGetMode

; 487  : {

  00aec		 |$LN20@OmapGpioGe|
  00aec	e1a0c00d	 mov         r12, sp
  00af0	e92d0003	 stmdb       sp!, {r0, r1}
  00af4	e92d5000	 stmdb       sp!, {r12, lr}
  00af8	e24dd024	 sub         sp, sp, #0x24
  00afc		 |$M37686|

; 488  :     DWORD mode = (DWORD) -1;

  00afc	e3e03000	 mvn         r3, #0
  00b00	e58d3004	 str         r3, [sp, #4]

; 489  :     UINT bit = GPIO_BIT(id);

  00b04	e59d3030	 ldr         r3, [sp, #0x30]
  00b08	e203301f	 and         r3, r3, #0x1F
  00b0c	e58d300c	 str         r3, [sp, #0xC]

; 490  :     UINT bank = GPIO_BANK(id);

  00b10	e59d3030	 ldr         r3, [sp, #0x30]
  00b14	e1a032a3	 mov         r3, r3, lsr #5
  00b18	e58d3008	 str         r3, [sp, #8]

; 491  :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)context;

  00b1c	e59d302c	 ldr         r3, [sp, #0x2C]
  00b20	e58d3000	 str         r3, [sp]

; 492  : 
; 493  :     // Check if we get correct context
; 494  :     if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))

  00b24	e59d3000	 ldr         r3, [sp]
  00b28	e3530000	 cmp         r3, #0
  00b2c	0a000004	 beq         |$LN12@OmapGpioGe|
  00b30	e59d3000	 ldr         r3, [sp]
  00b34	e5932000	 ldr         r2, [r3]
  00b38	e59f3218	 ldr         r3, [pc, #0x218]
  00b3c	e1520003	 cmp         r2, r3
  00b40	0a00000c	 beq         |$LN13@OmapGpioGe|
  00b44		 |$LN12@OmapGpioGe|

; 495  :     {
; 496  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioGetMode: "
; 497  :             L"Incorrect context\r\n"
; 498  :             ));

  00b44	e59f3208	 ldr         r3, [pc, #0x208]
  00b48	e5933440	 ldr         r3, [r3, #0x440]
  00b4c	e3130001	 tst         r3, #1
  00b50	0a000004	 beq         |$LN16@OmapGpioGe|
  00b54	e59f01f4	 ldr         r0, [pc, #0x1F4]
  00b58	eb000000	 bl          NKDbgPrintfW
  00b5c	e3a03001	 mov         r3, #1
  00b60	e58d3020	 str         r3, [sp, #0x20]
  00b64	ea000001	 b           |$LN17@OmapGpioGe|
  00b68		 |$LN16@OmapGpioGe|
  00b68	e3a03000	 mov         r3, #0
  00b6c	e58d3020	 str         r3, [sp, #0x20]
  00b70		 |$LN17@OmapGpioGe|

; 499  :         goto cleanUp;

  00b70	ea000070	 b           |$LN11@OmapGpioGe|
  00b74	ea00006f	 b           |$cleanUp$37253|
  00b78		 |$LN13@OmapGpioGe|

; 500  :     }
; 501  : 
; 502  :     if (id < pDevice->nbBanks*32)

  00b78	e59d3000	 ldr         r3, [sp]
  00b7c	e2833004	 add         r3, r3, #4
  00b80	e5931000	 ldr         r1, [r3]
  00b84	e3a03020	 mov         r3, #0x20
  00b88	e0020391	 mul         r2, r1, r3
  00b8c	e59d3030	 ldr         r3, [sp, #0x30]
  00b90	e1530002	 cmp         r3, r2
  00b94	2a000067	 bcs         |$LN10@OmapGpioGe|

; 503  :     {
; 504  :         mode = 0;

  00b98	e3a03000	 mov         r3, #0
  00b9c	e58d3004	 str         r3, [sp, #4]

; 505  :         OMAP_GPIO_REGS *pGpio = pDevice->bank[bank].ppGpioRegs;

  00ba0	e59d3000	 ldr         r3, [sp]
  00ba4	e283000c	 add         r0, r3, #0xC
  00ba8	e59d1008	 ldr         r1, [sp, #8]
  00bac	e3a03020	 mov         r3, #0x20
  00bb0	e0020391	 mul         r2, r1, r3
  00bb4	e5903000	 ldr         r3, [r0]
  00bb8	e0833002	 add         r3, r3, r2
  00bbc	e2833018	 add         r3, r3, #0x18
  00bc0	e5933000	 ldr         r3, [r3]
  00bc4	e58d3018	 str         r3, [sp, #0x18]

; 506  :         UINT32 mask = 1 << (bit);

  00bc8	e59d200c	 ldr         r2, [sp, #0xC]
  00bcc	e3a03001	 mov         r3, #1
  00bd0	e1a03213	 mov         r3, r3, lsl r2
  00bd4	e58d3014	 str         r3, [sp, #0x14]

; 507  :         CRITICAL_SECTION *pCs = &pDevice->bank[bank].pCs;

  00bd8	e59d3000	 ldr         r3, [sp]
  00bdc	e283000c	 add         r0, r3, #0xC
  00be0	e59d1008	 ldr         r1, [sp, #8]
  00be4	e3a03020	 mov         r3, #0x20
  00be8	e0020391	 mul         r2, r1, r3
  00bec	e5903000	 ldr         r3, [r0]
  00bf0	e0833002	 add         r3, r3, r2
  00bf4	e2833004	 add         r3, r3, #4
  00bf8	e58d3010	 str         r3, [sp, #0x10]

; 508  : 
; 509  :         if (pDevice->fPostInit) EnterCriticalSection(pCs);

  00bfc	e59d3000	 ldr         r3, [sp]
  00c00	e2833008	 add         r3, r3, #8
  00c04	e5933000	 ldr         r3, [r3]
  00c08	e3530000	 cmp         r3, #0
  00c0c	0a000001	 beq         |$LN9@OmapGpioGe|
  00c10	e59d0010	 ldr         r0, [sp, #0x10]
  00c14	eb000000	 bl          EnterCriticalSection
  00c18		 |$LN9@OmapGpioGe|

; 510  :         InternalSetGpioBankPowerState(pDevice, id, D0);

  00c18	e3a02000	 mov         r2, #0
  00c1c	e59d1030	 ldr         r1, [sp, #0x30]
  00c20	e59d0000	 ldr         r0, [sp]
  00c24	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 511  : 
; 512  :         // get edge mode
; 513  :         if ((INREG32(&pGpio->OE) & mask) != 0)

  00c28	e59d3018	 ldr         r3, [sp, #0x18]
  00c2c	e2833034	 add         r3, r3, #0x34
  00c30	e5932000	 ldr         r2, [r3]
  00c34	e59d3014	 ldr         r3, [sp, #0x14]
  00c38	e1120003	 tst         r2, r3
  00c3c	0a000003	 beq         |$LN8@OmapGpioGe|

; 514  :         {
; 515  :             mode |= GPIO_DIR_INPUT;

  00c40	e59d3004	 ldr         r3, [sp, #4]
  00c44	e3833001	 orr         r3, r3, #1
  00c48	e58d3004	 str         r3, [sp, #4]

; 516  :         }
; 517  :         else

  00c4c	ea000001	 b           |$LN7@OmapGpioGe|
  00c50		 |$LN8@OmapGpioGe|

; 518  :         {
; 519  :             mode |= GPIO_DIR_OUTPUT;

  00c50	e59d3004	 ldr         r3, [sp, #4]
  00c54	e58d3004	 str         r3, [sp, #4]
  00c58		 |$LN7@OmapGpioGe|

; 520  :         }
; 521  : 
; 522  :         // get debounce mode
; 523  :         if ((INREG32(&pGpio->DEBOUNCENABLE) & mask) != 0)

  00c58	e59d3018	 ldr         r3, [sp, #0x18]
  00c5c	e2833050	 add         r3, r3, #0x50
  00c60	e5932000	 ldr         r2, [r3]
  00c64	e59d3014	 ldr         r3, [sp, #0x14]
  00c68	e1120003	 tst         r2, r3
  00c6c	0a000002	 beq         |$LN6@OmapGpioGe|

; 524  :         {
; 525  :             mode |= GPIO_DEBOUNCE_ENABLE;

  00c70	e59d3004	 ldr         r3, [sp, #4]
  00c74	e3833020	 orr         r3, r3, #0x20
  00c78	e58d3004	 str         r3, [sp, #4]
  00c7c		 |$LN6@OmapGpioGe|

; 526  :         }
; 527  : 
; 528  :         // get edge/level detect mode
; 529  :         if ((INREG32(&pGpio->LEVELDETECT0) & mask) != 0)

  00c7c	e59d3018	 ldr         r3, [sp, #0x18]
  00c80	e2833040	 add         r3, r3, #0x40
  00c84	e5932000	 ldr         r2, [r3]
  00c88	e59d3014	 ldr         r3, [sp, #0x14]
  00c8c	e1120003	 tst         r2, r3
  00c90	0a000002	 beq         |$LN5@OmapGpioGe|

; 530  :         {
; 531  :             mode |= GPIO_INT_LOW;

  00c94	e59d3004	 ldr         r3, [sp, #4]
  00c98	e3833008	 orr         r3, r3, #8
  00c9c	e58d3004	 str         r3, [sp, #4]
  00ca0		 |$LN5@OmapGpioGe|

; 532  :         }
; 533  : 
; 534  :         if ((INREG32(&pGpio->LEVELDETECT1) & mask) != 0)

  00ca0	e59d3018	 ldr         r3, [sp, #0x18]
  00ca4	e2833044	 add         r3, r3, #0x44
  00ca8	e5932000	 ldr         r2, [r3]
  00cac	e59d3014	 ldr         r3, [sp, #0x14]
  00cb0	e1120003	 tst         r2, r3
  00cb4	0a000002	 beq         |$LN4@OmapGpioGe|

; 535  :         {
; 536  :             mode |= GPIO_INT_HIGH;

  00cb8	e59d3004	 ldr         r3, [sp, #4]
  00cbc	e3833010	 orr         r3, r3, #0x10
  00cc0	e58d3004	 str         r3, [sp, #4]
  00cc4		 |$LN4@OmapGpioGe|

; 537  :         }
; 538  : 
; 539  :         if ((INREG32(&pGpio->RISINGDETECT) & mask) != 0)

  00cc4	e59d3018	 ldr         r3, [sp, #0x18]
  00cc8	e2833048	 add         r3, r3, #0x48
  00ccc	e5932000	 ldr         r2, [r3]
  00cd0	e59d3014	 ldr         r3, [sp, #0x14]
  00cd4	e1120003	 tst         r2, r3
  00cd8	0a000002	 beq         |$LN3@OmapGpioGe|

; 540  :         {
; 541  :             mode |= GPIO_INT_LOW_HIGH;

  00cdc	e59d3004	 ldr         r3, [sp, #4]
  00ce0	e3833002	 orr         r3, r3, #2
  00ce4	e58d3004	 str         r3, [sp, #4]
  00ce8		 |$LN3@OmapGpioGe|

; 542  :         }
; 543  : 
; 544  :         if ((INREG32(&pGpio->FALLINGDETECT) & mask) != 0)

  00ce8	e59d3018	 ldr         r3, [sp, #0x18]
  00cec	e283304c	 add         r3, r3, #0x4C
  00cf0	e5932000	 ldr         r2, [r3]
  00cf4	e59d3014	 ldr         r3, [sp, #0x14]
  00cf8	e1120003	 tst         r2, r3
  00cfc	0a000002	 beq         |$LN2@OmapGpioGe|

; 545  :         {
; 546  :             mode |= GPIO_INT_HIGH_LOW;

  00d00	e59d3004	 ldr         r3, [sp, #4]
  00d04	e3833004	 orr         r3, r3, #4
  00d08	e58d3004	 str         r3, [sp, #4]
  00d0c		 |$LN2@OmapGpioGe|

; 547  :         }
; 548  : 
; 549  :         InternalSetGpioBankPowerState(pDevice, id, D4);

  00d0c	e3a02004	 mov         r2, #4
  00d10	e59d1030	 ldr         r1, [sp, #0x30]
  00d14	e59d0000	 ldr         r0, [sp]
  00d18	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 550  :         if (pDevice->fPostInit) LeaveCriticalSection(pCs);

  00d1c	e59d3000	 ldr         r3, [sp]
  00d20	e2833008	 add         r3, r3, #8
  00d24	e5933000	 ldr         r3, [r3]
  00d28	e3530000	 cmp         r3, #0
  00d2c	0a000001	 beq         |$LN1@OmapGpioGe|
  00d30	e59d0010	 ldr         r0, [sp, #0x10]
  00d34	eb000000	 bl          LeaveCriticalSection
  00d38		 |$LN1@OmapGpioGe|
  00d38		 |$LN10@OmapGpioGe|
  00d38		 |$LN11@OmapGpioGe|
  00d38		 |$cleanUp$37253|

; 551  : 
; 552  :     }
; 553  : 
; 554  : cleanUp:
; 555  :     return mode;

  00d38	e59d3004	 ldr         r3, [sp, #4]
  00d3c	e58d301c	 str         r3, [sp, #0x1C]

; 556  : }

  00d40	e59d001c	 ldr         r0, [sp, #0x1C]
  00d44	e28dd024	 add         sp, sp, #0x24
  00d48	e89d6000	 ldmia       sp, {sp, lr}
  00d4c	e12fff1e	 bx          lr
  00d50		 |$LN21@OmapGpioGe|
  00d50		 |$LN22@OmapGpioGe|
  00d50	00000000	 DCD         |??_C@_1FI@GGOKKMEH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAG?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@|
  00d54		 |$LN23@OmapGpioGe|
  00d54	00000000	 DCD         |dpCurSettings|
  00d58		 |$LN24@OmapGpioGe|
  00d58	11223344	 DCD         0x11223344
  00d5c		 |$M37687|

			 ENDP  ; |?OmapGpioGetMode@@YAKPAXI@Z|, OmapGpioGetMode


  00030			 AREA	 |.pdata|, PDATA
|$T37699| DCD	|$LN5@OmapGpioPu|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00d5c			 AREA	 |.text|, CODE, ARM

  00d5c		 |?OmapGpioPullup@@YAHPAXII@Z| PROC	; OmapGpioPullup

; 571  : {

  00d5c		 |$LN5@OmapGpioPu|
  00d5c	e1a0c00d	 mov         r12, sp
  00d60	e92d0007	 stmdb       sp!, {r0 - r2}
  00d64	e92d5000	 stmdb       sp!, {r12, lr}
  00d68	e24dd004	 sub         sp, sp, #4
  00d6c		 |$M37696|

; 572  :     UNREFERENCED_PARAMETER(context);
; 573  :     UNREFERENCED_PARAMETER(id);
; 574  :     UNREFERENCED_PARAMETER(enable);
; 575  :     return TRUE;

  00d6c	e3a03001	 mov         r3, #1
  00d70	e58d3000	 str         r3, [sp]

; 576  : }

  00d74	e59d0000	 ldr         r0, [sp]
  00d78	e28dd004	 add         sp, sp, #4
  00d7c	e89d6000	 ldmia       sp, {sp, lr}
  00d80	e12fff1e	 bx          lr
  00d84		 |$M37697|

			 ENDP  ; |?OmapGpioPullup@@YAHPAXII@Z|, OmapGpioPullup


  00038			 AREA	 |.pdata|, PDATA
|$T37705| DCD	|$LN5@OmapGpioPu@2|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00d84			 AREA	 |.text|, CODE, ARM

  00d84		 |?OmapGpioPulldown@@YAHPAXII@Z| PROC	; OmapGpioPulldown

; 589  : {

  00d84		 |$LN5@OmapGpioPu@2|
  00d84	e1a0c00d	 mov         r12, sp
  00d88	e92d0007	 stmdb       sp!, {r0 - r2}
  00d8c	e92d5000	 stmdb       sp!, {r12, lr}
  00d90	e24dd004	 sub         sp, sp, #4
  00d94		 |$M37702|

; 590  :     UNREFERENCED_PARAMETER(context);
; 591  :     UNREFERENCED_PARAMETER(id);
; 592  :     UNREFERENCED_PARAMETER(enable);
; 593  :     return TRUE;

  00d94	e3a03001	 mov         r3, #1
  00d98	e58d3000	 str         r3, [sp]

; 594  : }

  00d9c	e59d0000	 ldr         r0, [sp]
  00da0	e28dd004	 add         sp, sp, #4
  00da4	e89d6000	 ldmia       sp, {sp, lr}
  00da8	e12fff1e	 bx          lr
  00dac		 |$M37703|

			 ENDP  ; |?OmapGpioPulldown@@YAHPAXII@Z|, OmapGpioPulldown

	EXPORT	|??_C@_1FG@KIGCHHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAS?$AAe?$AAt?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@| [ DATA ] ; `string'

  00040			 AREA	 |.pdata|, PDATA
|$T37713| DCD	|$LN13@OmapGpioSe@2|
	DCD	0x40006a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@KIGCHHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAS?$AAe?$AAt?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "B"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00dac			 AREA	 |.text|, CODE, ARM

  00dac		 |?OmapGpioSetBit@@YAHPAXI@Z| PROC	; OmapGpioSetBit

; 716  : {

  00dac		 |$LN13@OmapGpioSe@2|
  00dac	e1a0c00d	 mov         r12, sp
  00db0	e92d0003	 stmdb       sp!, {r0, r1}
  00db4	e92d5000	 stmdb       sp!, {r12, lr}
  00db8	e24dd020	 sub         sp, sp, #0x20
  00dbc		 |$M37710|

; 717  :     BOOL rc = FALSE;

  00dbc	e3a03000	 mov         r3, #0
  00dc0	e58d3004	 str         r3, [sp, #4]

; 718  :     UINT bit = GPIO_BIT(id);

  00dc4	e59d302c	 ldr         r3, [sp, #0x2C]
  00dc8	e203301f	 and         r3, r3, #0x1F
  00dcc	e58d300c	 str         r3, [sp, #0xC]

; 719  :     UINT bank = GPIO_BANK(id);

  00dd0	e59d302c	 ldr         r3, [sp, #0x2C]
  00dd4	e1a032a3	 mov         r3, r3, lsr #5
  00dd8	e58d3008	 str         r3, [sp, #8]

; 720  :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)context;

  00ddc	e59d3028	 ldr         r3, [sp, #0x28]
  00de0	e58d3000	 str         r3, [sp]

; 721  :     // Check if we get correct context & pin id
; 722  :     if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))

  00de4	e59d3000	 ldr         r3, [sp]
  00de8	e3530000	 cmp         r3, #0
  00dec	0a000004	 beq         |$LN5@OmapGpioSe@2|
  00df0	e59d3000	 ldr         r3, [sp]
  00df4	e5932000	 ldr         r2, [r3]
  00df8	e59f3150	 ldr         r3, [pc, #0x150]
  00dfc	e1520003	 cmp         r2, r3
  00e00	0a00000c	 beq         |$LN6@OmapGpioSe@2|
  00e04		 |$LN5@OmapGpioSe@2|

; 723  :     {
; 724  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioSetBit: Incorrect context\r\n"));

  00e04	e59f3140	 ldr         r3, [pc, #0x140]
  00e08	e5933440	 ldr         r3, [r3, #0x440]
  00e0c	e3130001	 tst         r3, #1
  00e10	0a000004	 beq         |$LN9@OmapGpioSe@2|
  00e14	e59f012c	 ldr         r0, [pc, #0x12C]
  00e18	eb000000	 bl          NKDbgPrintfW
  00e1c	e3a03001	 mov         r3, #1
  00e20	e58d301c	 str         r3, [sp, #0x1C]
  00e24	ea000001	 b           |$LN10@OmapGpioSe@2|
  00e28		 |$LN9@OmapGpioSe@2|
  00e28	e3a03000	 mov         r3, #0
  00e2c	e58d301c	 str         r3, [sp, #0x1C]
  00e30		 |$LN10@OmapGpioSe@2|

; 725  :         goto cleanUp;

  00e30	ea00003e	 b           |$LN4@OmapGpioSe@2|
  00e34	ea00003d	 b           |$cleanUp$37297|
  00e38		 |$LN6@OmapGpioSe@2|

; 726  :     }
; 727  : 
; 728  :     if (id < pDevice->nbBanks*32)

  00e38	e59d3000	 ldr         r3, [sp]
  00e3c	e2833004	 add         r3, r3, #4
  00e40	e5931000	 ldr         r1, [r3]
  00e44	e3a03020	 mov         r3, #0x20
  00e48	e0020391	 mul         r2, r1, r3
  00e4c	e59d302c	 ldr         r3, [sp, #0x2C]
  00e50	e1530002	 cmp         r3, r2
  00e54	2a000035	 bcs         |$LN3@OmapGpioSe@2|

; 729  :     {
; 730  :         volatile UINT *p = &pDevice->bank[bank].ppGpioRegs->DATAOUT;

  00e58	e59d3000	 ldr         r3, [sp]
  00e5c	e283000c	 add         r0, r3, #0xC
  00e60	e59d1008	 ldr         r1, [sp, #8]
  00e64	e3a03020	 mov         r3, #0x20
  00e68	e0020391	 mul         r2, r1, r3
  00e6c	e5903000	 ldr         r3, [r0]
  00e70	e0833002	 add         r3, r3, r2
  00e74	e2833018	 add         r3, r3, #0x18
  00e78	e5933000	 ldr         r3, [r3]
  00e7c	e283303c	 add         r3, r3, #0x3C
  00e80	e58d3010	 str         r3, [sp, #0x10]

; 731  :         CRITICAL_SECTION *pCs = &pDevice->bank[bank].pCs;

  00e84	e59d3000	 ldr         r3, [sp]
  00e88	e283000c	 add         r0, r3, #0xC
  00e8c	e59d1008	 ldr         r1, [sp, #8]
  00e90	e3a03020	 mov         r3, #0x20
  00e94	e0020391	 mul         r2, r1, r3
  00e98	e5903000	 ldr         r3, [r0]
  00e9c	e0833002	 add         r3, r3, r2
  00ea0	e2833004	 add         r3, r3, #4
  00ea4	e58d3014	 str         r3, [sp, #0x14]

; 732  : 
; 733  :         if (pDevice->fPostInit) EnterCriticalSection(pCs);

  00ea8	e59d3000	 ldr         r3, [sp]
  00eac	e2833008	 add         r3, r3, #8
  00eb0	e5933000	 ldr         r3, [r3]
  00eb4	e3530000	 cmp         r3, #0
  00eb8	0a000001	 beq         |$LN2@OmapGpioSe@2|
  00ebc	e59d0014	 ldr         r0, [sp, #0x14]
  00ec0	eb000000	 bl          EnterCriticalSection
  00ec4		 |$LN2@OmapGpioSe@2|

; 734  :         InternalSetGpioBankPowerState(pDevice, id, D0);

  00ec4	e3a02000	 mov         r2, #0
  00ec8	e59d102c	 ldr         r1, [sp, #0x2C]
  00ecc	e59d0000	 ldr         r0, [sp]
  00ed0	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 735  :         SETREG32(p, 1 << (bit));

  00ed4	e59d200c	 ldr         r2, [sp, #0xC]
  00ed8	e3a03001	 mov         r3, #1
  00edc	e1a02213	 mov         r2, r3, lsl r2
  00ee0	e59d3010	 ldr         r3, [sp, #0x10]
  00ee4	e5933000	 ldr         r3, [r3]
  00ee8	e1832002	 orr         r2, r3, r2
  00eec	e59d3010	 ldr         r3, [sp, #0x10]
  00ef0	e5832000	 str         r2, [r3]

; 736  :         InternalSetGpioBankPowerState(pDevice, id, D4);

  00ef4	e3a02004	 mov         r2, #4
  00ef8	e59d102c	 ldr         r1, [sp, #0x2C]
  00efc	e59d0000	 ldr         r0, [sp]
  00f00	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 737  :         if (pDevice->fPostInit) LeaveCriticalSection(pCs);

  00f04	e59d3000	 ldr         r3, [sp]
  00f08	e2833008	 add         r3, r3, #8
  00f0c	e5933000	 ldr         r3, [r3]
  00f10	e3530000	 cmp         r3, #0
  00f14	0a000001	 beq         |$LN1@OmapGpioSe@2|
  00f18	e59d0014	 ldr         r0, [sp, #0x14]
  00f1c	eb000000	 bl          LeaveCriticalSection
  00f20		 |$LN1@OmapGpioSe@2|

; 738  : 
; 739  :         // indicate gpio registers need to be saved for OFF mode
; 740  :         HalContextUpdateDirtyRegister(HAL_CONTEXTSAVE_GPIO);

  00f20	e3a00001	 mov         r0, #1
  00f24	eb000000	 bl          HalContextUpdateDirtyRegister

; 741  : 
; 742  :         rc = TRUE;

  00f28	e3a03001	 mov         r3, #1
  00f2c	e58d3004	 str         r3, [sp, #4]
  00f30		 |$LN3@OmapGpioSe@2|
  00f30		 |$LN4@OmapGpioSe@2|
  00f30		 |$cleanUp$37297|

; 743  :     }
; 744  : 
; 745  : cleanUp:
; 746  :     return rc;

  00f30	e59d3004	 ldr         r3, [sp, #4]
  00f34	e58d3018	 str         r3, [sp, #0x18]

; 747  : }

  00f38	e59d0018	 ldr         r0, [sp, #0x18]
  00f3c	e28dd020	 add         sp, sp, #0x20
  00f40	e89d6000	 ldmia       sp, {sp, lr}
  00f44	e12fff1e	 bx          lr
  00f48		 |$LN14@OmapGpioSe@2|
  00f48		 |$LN15@OmapGpioSe@2|
  00f48	00000000	 DCD         |??_C@_1FG@KIGCHHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAS?$AAe?$AAt?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@|
  00f4c		 |$LN16@OmapGpioSe@2|
  00f4c	00000000	 DCD         |dpCurSettings|
  00f50		 |$LN17@OmapGpioSe@2|
  00f50	11223344	 DCD         0x11223344
  00f54		 |$M37711|

			 ENDP  ; |?OmapGpioSetBit@@YAHPAXI@Z|, OmapGpioSetBit

	EXPORT	|??_C@_1FG@JBBKGIF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAC?$AAl?$AAr?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@| [ DATA ] ; `string'

  00048			 AREA	 |.pdata|, PDATA
|$T37725| DCD	|$LN13@OmapGpioCl|
	DCD	0x40006b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@JBBKGIF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAC?$AAl?$AAr?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "C", 0x0, "l", 0x0, "r", 0x0, "B"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00f54			 AREA	 |.text|, CODE, ARM

  00f54		 |?OmapGpioClrBit@@YAHPAXI@Z| PROC	; OmapGpioClrBit

; 758  : {

  00f54		 |$LN13@OmapGpioCl|
  00f54	e1a0c00d	 mov         r12, sp
  00f58	e92d0003	 stmdb       sp!, {r0, r1}
  00f5c	e92d5000	 stmdb       sp!, {r12, lr}
  00f60	e24dd020	 sub         sp, sp, #0x20
  00f64		 |$M37722|

; 759  :     BOOL rc = FALSE;

  00f64	e3a03000	 mov         r3, #0
  00f68	e58d3004	 str         r3, [sp, #4]

; 760  :     UINT bit = GPIO_BIT(id);

  00f6c	e59d302c	 ldr         r3, [sp, #0x2C]
  00f70	e203301f	 and         r3, r3, #0x1F
  00f74	e58d300c	 str         r3, [sp, #0xC]

; 761  :     UINT bank = GPIO_BANK(id);

  00f78	e59d302c	 ldr         r3, [sp, #0x2C]
  00f7c	e1a032a3	 mov         r3, r3, lsr #5
  00f80	e58d3008	 str         r3, [sp, #8]

; 762  :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)context;

  00f84	e59d3028	 ldr         r3, [sp, #0x28]
  00f88	e58d3000	 str         r3, [sp]

; 763  :     // Check if we get correct context & pin id
; 764  :     if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))

  00f8c	e59d3000	 ldr         r3, [sp]
  00f90	e3530000	 cmp         r3, #0
  00f94	0a000004	 beq         |$LN5@OmapGpioCl|
  00f98	e59d3000	 ldr         r3, [sp]
  00f9c	e5932000	 ldr         r2, [r3]
  00fa0	e59f3154	 ldr         r3, [pc, #0x154]
  00fa4	e1520003	 cmp         r2, r3
  00fa8	0a00000c	 beq         |$LN6@OmapGpioCl|
  00fac		 |$LN5@OmapGpioCl|

; 765  :     {
; 766  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioClrBit: Incorrect context\r\n"));

  00fac	e59f3144	 ldr         r3, [pc, #0x144]
  00fb0	e5933440	 ldr         r3, [r3, #0x440]
  00fb4	e3130001	 tst         r3, #1
  00fb8	0a000004	 beq         |$LN9@OmapGpioCl|
  00fbc	e59f0130	 ldr         r0, [pc, #0x130]
  00fc0	eb000000	 bl          NKDbgPrintfW
  00fc4	e3a03001	 mov         r3, #1
  00fc8	e58d301c	 str         r3, [sp, #0x1C]
  00fcc	ea000001	 b           |$LN10@OmapGpioCl|
  00fd0		 |$LN9@OmapGpioCl|
  00fd0	e3a03000	 mov         r3, #0
  00fd4	e58d301c	 str         r3, [sp, #0x1C]
  00fd8		 |$LN10@OmapGpioCl|

; 767  :         goto cleanUp;

  00fd8	ea00003f	 b           |$LN4@OmapGpioCl|
  00fdc	ea00003e	 b           |$cleanUp$37320|
  00fe0		 |$LN6@OmapGpioCl|

; 768  :     }
; 769  :     if (id < pDevice->nbBanks*32)

  00fe0	e59d3000	 ldr         r3, [sp]
  00fe4	e2833004	 add         r3, r3, #4
  00fe8	e5931000	 ldr         r1, [r3]
  00fec	e3a03020	 mov         r3, #0x20
  00ff0	e0020391	 mul         r2, r1, r3
  00ff4	e59d302c	 ldr         r3, [sp, #0x2C]
  00ff8	e1530002	 cmp         r3, r2
  00ffc	2a000036	 bcs         |$LN3@OmapGpioCl|

; 770  :     {
; 771  :         volatile UINT *p = &pDevice->bank[bank].ppGpioRegs->DATAOUT;

  01000	e59d3000	 ldr         r3, [sp]
  01004	e283000c	 add         r0, r3, #0xC
  01008	e59d1008	 ldr         r1, [sp, #8]
  0100c	e3a03020	 mov         r3, #0x20
  01010	e0020391	 mul         r2, r1, r3
  01014	e5903000	 ldr         r3, [r0]
  01018	e0833002	 add         r3, r3, r2
  0101c	e2833018	 add         r3, r3, #0x18
  01020	e5933000	 ldr         r3, [r3]
  01024	e283303c	 add         r3, r3, #0x3C
  01028	e58d3010	 str         r3, [sp, #0x10]

; 772  :         CRITICAL_SECTION *pCs = &pDevice->bank[bank].pCs;

  0102c	e59d3000	 ldr         r3, [sp]
  01030	e283000c	 add         r0, r3, #0xC
  01034	e59d1008	 ldr         r1, [sp, #8]
  01038	e3a03020	 mov         r3, #0x20
  0103c	e0020391	 mul         r2, r1, r3
  01040	e5903000	 ldr         r3, [r0]
  01044	e0833002	 add         r3, r3, r2
  01048	e2833004	 add         r3, r3, #4
  0104c	e58d3014	 str         r3, [sp, #0x14]

; 773  : 
; 774  :         if (pDevice->fPostInit) EnterCriticalSection(pCs);

  01050	e59d3000	 ldr         r3, [sp]
  01054	e2833008	 add         r3, r3, #8
  01058	e5933000	 ldr         r3, [r3]
  0105c	e3530000	 cmp         r3, #0
  01060	0a000001	 beq         |$LN2@OmapGpioCl|
  01064	e59d0014	 ldr         r0, [sp, #0x14]
  01068	eb000000	 bl          EnterCriticalSection
  0106c		 |$LN2@OmapGpioCl|

; 775  :         InternalSetGpioBankPowerState(pDevice, id, D0);

  0106c	e3a02000	 mov         r2, #0
  01070	e59d102c	 ldr         r1, [sp, #0x2C]
  01074	e59d0000	 ldr         r0, [sp]
  01078	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 776  :         CLRREG32(p, 1 << (bit));

  0107c	e59d200c	 ldr         r2, [sp, #0xC]
  01080	e3a03001	 mov         r3, #1
  01084	e1a03213	 mov         r3, r3, lsl r2
  01088	e1e02003	 mvn         r2, r3
  0108c	e59d3010	 ldr         r3, [sp, #0x10]
  01090	e5933000	 ldr         r3, [r3]
  01094	e0032002	 and         r2, r3, r2
  01098	e59d3010	 ldr         r3, [sp, #0x10]
  0109c	e5832000	 str         r2, [r3]

; 777  :         InternalSetGpioBankPowerState(pDevice, id, D4);

  010a0	e3a02004	 mov         r2, #4
  010a4	e59d102c	 ldr         r1, [sp, #0x2C]
  010a8	e59d0000	 ldr         r0, [sp]
  010ac	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 778  :         if (pDevice->fPostInit) LeaveCriticalSection(pCs);

  010b0	e59d3000	 ldr         r3, [sp]
  010b4	e2833008	 add         r3, r3, #8
  010b8	e5933000	 ldr         r3, [r3]
  010bc	e3530000	 cmp         r3, #0
  010c0	0a000001	 beq         |$LN1@OmapGpioCl|
  010c4	e59d0014	 ldr         r0, [sp, #0x14]
  010c8	eb000000	 bl          LeaveCriticalSection
  010cc		 |$LN1@OmapGpioCl|

; 779  :         // indicate gpio registers need to be saved for OFF mode
; 780  :         HalContextUpdateDirtyRegister(HAL_CONTEXTSAVE_GPIO);

  010cc	e3a00001	 mov         r0, #1
  010d0	eb000000	 bl          HalContextUpdateDirtyRegister

; 781  :         rc = TRUE;

  010d4	e3a03001	 mov         r3, #1
  010d8	e58d3004	 str         r3, [sp, #4]
  010dc		 |$LN3@OmapGpioCl|
  010dc		 |$LN4@OmapGpioCl|
  010dc		 |$cleanUp$37320|

; 782  :     }
; 783  : cleanUp:
; 784  :     return rc;

  010dc	e59d3004	 ldr         r3, [sp, #4]
  010e0	e58d3018	 str         r3, [sp, #0x18]

; 785  : }

  010e4	e59d0018	 ldr         r0, [sp, #0x18]
  010e8	e28dd020	 add         sp, sp, #0x20
  010ec	e89d6000	 ldmia       sp, {sp, lr}
  010f0	e12fff1e	 bx          lr
  010f4		 |$LN14@OmapGpioCl|
  010f4		 |$LN15@OmapGpioCl|
  010f4	00000000	 DCD         |??_C@_1FG@JBBKGIF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAC?$AAl?$AAr?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@|
  010f8		 |$LN16@OmapGpioCl|
  010f8	00000000	 DCD         |dpCurSettings|
  010fc		 |$LN17@OmapGpioCl|
  010fc	11223344	 DCD         0x11223344
  01100		 |$M37723|

			 ENDP  ; |?OmapGpioClrBit@@YAHPAXI@Z|, OmapGpioClrBit

	EXPORT	|??_C@_1FG@NMBGADLA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAG?$AAe?$AAt?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@| [ DATA ] ; `string'

  00050			 AREA	 |.pdata|, PDATA
|$T37737| DCD	|$LN13@OmapGpioGe@2|
	DCD	0x40006404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NMBGADLA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAG?$AAe?$AAt?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "B"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  01100			 AREA	 |.text|, CODE, ARM

  01100		 |?OmapGpioGetBit@@YAKPAXI@Z| PROC	; OmapGpioGetBit

; 796  : {

  01100		 |$LN13@OmapGpioGe@2|
  01100	e1a0c00d	 mov         r12, sp
  01104	e92d0003	 stmdb       sp!, {r0, r1}
  01108	e92d5000	 stmdb       sp!, {r12, lr}
  0110c	e24dd020	 sub         sp, sp, #0x20
  01110		 |$M37734|

; 797  :     DWORD value = (DWORD) -1;

  01110	e3e03000	 mvn         r3, #0
  01114	e58d3004	 str         r3, [sp, #4]

; 798  :     UINT bit = GPIO_BIT(id);

  01118	e59d302c	 ldr         r3, [sp, #0x2C]
  0111c	e203301f	 and         r3, r3, #0x1F
  01120	e58d300c	 str         r3, [sp, #0xC]

; 799  :     UINT bank = GPIO_BANK(id);

  01124	e59d302c	 ldr         r3, [sp, #0x2C]
  01128	e1a032a3	 mov         r3, r3, lsr #5
  0112c	e58d3008	 str         r3, [sp, #8]

; 800  :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)context;

  01130	e59d3028	 ldr         r3, [sp, #0x28]
  01134	e58d3000	 str         r3, [sp]

; 801  : 
; 802  :     // Check if we get correct context & pin id
; 803  :     if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))

  01138	e59d3000	 ldr         r3, [sp]
  0113c	e3530000	 cmp         r3, #0
  01140	0a000004	 beq         |$LN5@OmapGpioGe@2|
  01144	e59d3000	 ldr         r3, [sp]
  01148	e5932000	 ldr         r2, [r3]
  0114c	e59f3138	 ldr         r3, [pc, #0x138]
  01150	e1520003	 cmp         r2, r3
  01154	0a00000c	 beq         |$LN6@OmapGpioGe@2|
  01158		 |$LN5@OmapGpioGe@2|

; 804  :     {
; 805  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioGetBit: Incorrect context\r\n"));

  01158	e59f3128	 ldr         r3, [pc, #0x128]
  0115c	e5933440	 ldr         r3, [r3, #0x440]
  01160	e3130001	 tst         r3, #1
  01164	0a000004	 beq         |$LN9@OmapGpioGe@2|
  01168	e59f0114	 ldr         r0, [pc, #0x114]
  0116c	eb000000	 bl          NKDbgPrintfW
  01170	e3a03001	 mov         r3, #1
  01174	e58d301c	 str         r3, [sp, #0x1C]
  01178	ea000001	 b           |$LN10@OmapGpioGe@2|
  0117c		 |$LN9@OmapGpioGe@2|
  0117c	e3a03000	 mov         r3, #0
  01180	e58d301c	 str         r3, [sp, #0x1C]
  01184		 |$LN10@OmapGpioGe@2|

; 806  :         goto cleanUp;

  01184	ea000038	 b           |$LN4@OmapGpioGe@2|
  01188	ea000037	 b           |$cleanUp$37344|
  0118c		 |$LN6@OmapGpioGe@2|

; 807  :     }
; 808  : 
; 809  :     if (id < pDevice->nbBanks*32)

  0118c	e59d3000	 ldr         r3, [sp]
  01190	e2833004	 add         r3, r3, #4
  01194	e5931000	 ldr         r1, [r3]
  01198	e3a03020	 mov         r3, #0x20
  0119c	e0020391	 mul         r2, r1, r3
  011a0	e59d302c	 ldr         r3, [sp, #0x2C]
  011a4	e1530002	 cmp         r3, r2
  011a8	2a00002f	 bcs         |$LN3@OmapGpioGe@2|

; 810  :     {
; 811  :         volatile UINT *p = &pDevice->bank[bank].ppGpioRegs->DATAIN;

  011ac	e59d3000	 ldr         r3, [sp]
  011b0	e283000c	 add         r0, r3, #0xC
  011b4	e59d1008	 ldr         r1, [sp, #8]
  011b8	e3a03020	 mov         r3, #0x20
  011bc	e0020391	 mul         r2, r1, r3
  011c0	e5903000	 ldr         r3, [r0]
  011c4	e0833002	 add         r3, r3, r2
  011c8	e2833018	 add         r3, r3, #0x18
  011cc	e5933000	 ldr         r3, [r3]
  011d0	e2833038	 add         r3, r3, #0x38
  011d4	e58d3010	 str         r3, [sp, #0x10]

; 812  :         CRITICAL_SECTION *pCs = &pDevice->bank[bank].pCs;

  011d8	e59d3000	 ldr         r3, [sp]
  011dc	e283000c	 add         r0, r3, #0xC
  011e0	e59d1008	 ldr         r1, [sp, #8]
  011e4	e3a03020	 mov         r3, #0x20
  011e8	e0020391	 mul         r2, r1, r3
  011ec	e5903000	 ldr         r3, [r0]
  011f0	e0833002	 add         r3, r3, r2
  011f4	e2833004	 add         r3, r3, #4
  011f8	e58d3014	 str         r3, [sp, #0x14]

; 813  :         if (pDevice->fPostInit) EnterCriticalSection(pCs);

  011fc	e59d3000	 ldr         r3, [sp]
  01200	e2833008	 add         r3, r3, #8
  01204	e5933000	 ldr         r3, [r3]
  01208	e3530000	 cmp         r3, #0
  0120c	0a000001	 beq         |$LN2@OmapGpioGe@2|
  01210	e59d0014	 ldr         r0, [sp, #0x14]
  01214	eb000000	 bl          EnterCriticalSection
  01218		 |$LN2@OmapGpioGe@2|

; 814  :         InternalSetGpioBankPowerState(pDevice, id, D0);

  01218	e3a02000	 mov         r2, #0
  0121c	e59d102c	 ldr         r1, [sp, #0x2C]
  01220	e59d0000	 ldr         r0, [sp]
  01224	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 815  :         value = (INREG32(p) >> (bit)) & 0x01;

  01228	e59d3010	 ldr         r3, [sp, #0x10]
  0122c	e5932000	 ldr         r2, [r3]
  01230	e59d300c	 ldr         r3, [sp, #0xC]
  01234	e1a03332	 mov         r3, r2, lsr r3
  01238	e2033001	 and         r3, r3, #1
  0123c	e58d3004	 str         r3, [sp, #4]

; 816  :         InternalSetGpioBankPowerState(pDevice, id, D4);

  01240	e3a02004	 mov         r2, #4
  01244	e59d102c	 ldr         r1, [sp, #0x2C]
  01248	e59d0000	 ldr         r0, [sp]
  0124c	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 817  :         if (pDevice->fPostInit) LeaveCriticalSection(pCs);

  01250	e59d3000	 ldr         r3, [sp]
  01254	e2833008	 add         r3, r3, #8
  01258	e5933000	 ldr         r3, [r3]
  0125c	e3530000	 cmp         r3, #0
  01260	0a000001	 beq         |$LN1@OmapGpioGe@2|
  01264	e59d0014	 ldr         r0, [sp, #0x14]
  01268	eb000000	 bl          LeaveCriticalSection
  0126c		 |$LN1@OmapGpioGe@2|
  0126c		 |$LN3@OmapGpioGe@2|
  0126c		 |$LN4@OmapGpioGe@2|
  0126c		 |$cleanUp$37344|

; 818  :     }
; 819  : 
; 820  : cleanUp:
; 821  :     return value;

  0126c	e59d3004	 ldr         r3, [sp, #4]
  01270	e58d3018	 str         r3, [sp, #0x18]

; 822  : }

  01274	e59d0018	 ldr         r0, [sp, #0x18]
  01278	e28dd020	 add         sp, sp, #0x20
  0127c	e89d6000	 ldmia       sp, {sp, lr}
  01280	e12fff1e	 bx          lr
  01284		 |$LN14@OmapGpioGe@2|
  01284		 |$LN15@OmapGpioGe@2|
  01284	00000000	 DCD         |??_C@_1FG@NMBGADLA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAG?$AAe?$AAt?$AAB?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt@|
  01288		 |$LN16@OmapGpioGe@2|
  01288	00000000	 DCD         |dpCurSettings|
  0128c		 |$LN17@OmapGpioGe@2|
  0128c	11223344	 DCD         0x11223344
  01290		 |$M37735|

			 ENDP  ; |?OmapGpioGetBit@@YAKPAXI@Z|, OmapGpioGetBit

	EXPORT	|??_C@_1DM@IFMLOPJE@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@DHGGDOFN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MM@BOONICNJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|?IsEqualGUID@@YAHABU_GUID@@0@Z|	; IsEqualGUID
	EXPORT	|??_C@_1OG@DMBHACEF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| [ DATA ] ; `string'
	EXPORT	|GetCurrentProcessId|
	EXPORT	|??_C@_1HA@IINJOBHJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@IBGGEBD@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| [ DATA ] ; `string'
	IMPORT	|CeSafeCopyMemory|
	IMPORT	|SetLastError|
	IMPORT	|GetCallerProcess|

  00058			 AREA	 |.pdata|, PDATA
|$T37770| DCD	|$LN83@OmapGpioIo|
	DCD	0x40031404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@IFMLOPJE@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@DHGGDOFN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "P", 0x0, "O"
	DCB	0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "A", 0x0, "T", 0x0, "E", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MM@BOONICNJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "\\", 0x0, "O", 0x0, "M", 0x0, "A"
	DCB	0x0, "P", 0x0, "_", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O"
	DCB	0x0, "\\", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "\\", 0x0, ".", 0x0, ".", 0x0, "\\", 0x0, "o"
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, "3", 0x0, "5", 0x0, "x"
	DCB	0x0, "x", 0x0, "_", 0x0, "g", 0x0, "p", 0x0, "i", 0x0, "o"
	DCB	0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OG@DMBHACEF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "G", 0x0, "I", 0x0, "O", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "D", 0x0, "K"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "R", 0x0, "I", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "_"
	DCB	0x0, "I", 0x0, "F", 0x0, "C", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, "l", 0x0, "y", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "p"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "(", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@IINJOBHJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@IBGGEBD@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| DCB "+"
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "G", 0x0, "p"
	DCB	0x0, "i", 0x0, "o", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  01290			 AREA	 |.text|, CODE, ARM

  01290		 |?OmapGpioIoControl@@YAHPAXIPAEI1IPAK@Z| PROC ; OmapGpioIoControl

; 840  : {

  01290		 |$LN83@OmapGpioIo|
  01290	e1a0c00d	 mov         r12, sp
  01294	e92d000f	 stmdb       sp!, {r0 - r3}
  01298	e92d5000	 stmdb       sp!, {r12, lr}
  0129c	e24dde11	 sub         sp, sp, #0x11, 28
  012a0		 |$M37767|

; 841  : #ifdef DEVICE
; 842  :     UINT id;
; 843  :     DWORD value,mode;
; 844  :     DEVICE_IFC_GPIO ifc;
; 845  :     UINT bit;
; 846  :     UINT bank;
; 847  :     BOOL rc = FALSE;

  012a0	e3a03000	 mov         r3, #0
  012a4	e58d3018	 str         r3, [sp, #0x18]

; 848  :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)context;

  012a8	e59d3118	 ldr         r3, [sp, #0x118]
  012ac	e58d3010	 str         r3, [sp, #0x10]

; 849  : 
; 850  :     UNREFERENCED_PARAMETER(pOutSize);
; 851  : 
; 852  :     DEBUGMSG(ZONE_FUNCTION, (
; 853  :         L"+OmapGpioIOControl(0x%08x, 0x%08x, 0x%08x, %d, 0x%08x, %d, 0x%08x)\r\n",
; 854  :         context, code, pInBuffer, inSize, pOutBuffer, outSize, pOutSize
; 855  :         ));

  012b0	e59f3bb8	 ldr         r3, [pc, #0xBB8]
  012b4	e5933440	 ldr         r3, [r3, #0x440]
  012b8	e3130004	 tst         r3, #4
  012bc	0a00000f	 beq         |$LN62@OmapGpioIo|
  012c0	e59d3130	 ldr         r3, [sp, #0x130]
  012c4	e58d300c	 str         r3, [sp, #0xC]
  012c8	e59d312c	 ldr         r3, [sp, #0x12C]
  012cc	e58d3008	 str         r3, [sp, #8]
  012d0	e59d3128	 ldr         r3, [sp, #0x128]
  012d4	e58d3004	 str         r3, [sp, #4]
  012d8	e59d3124	 ldr         r3, [sp, #0x124]
  012dc	e58d3000	 str         r3, [sp]
  012e0	e59d3120	 ldr         r3, [sp, #0x120]
  012e4	e59d211c	 ldr         r2, [sp, #0x11C]
  012e8	e59d1118	 ldr         r1, [sp, #0x118]
  012ec	e59f0be8	 ldr         r0, [pc, #0xBE8]
  012f0	eb000000	 bl          NKDbgPrintfW
  012f4	e3a03001	 mov         r3, #1
  012f8	e58d30b0	 str         r3, [sp, #0xB0]
  012fc	ea000001	 b           |$LN63@OmapGpioIo|
  01300		 |$LN62@OmapGpioIo|
  01300	e3a03000	 mov         r3, #0
  01304	e58d30b0	 str         r3, [sp, #0xB0]
  01308		 |$LN63@OmapGpioIo|

; 856  : 
; 857  :     // Check if we get correct context
; 858  :     if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))

  01308	e59d3010	 ldr         r3, [sp, #0x10]
  0130c	e3530000	 cmp         r3, #0
  01310	0a000004	 beq         |$LN58@OmapGpioIo|
  01314	e59d3010	 ldr         r3, [sp, #0x10]
  01318	e5932000	 ldr         r2, [r3]
  0131c	e59f3bb4	 ldr         r3, [pc, #0xBB4]
  01320	e1520003	 cmp         r2, r3
  01324	0a00000c	 beq         |$LN59@OmapGpioIo|
  01328		 |$LN58@OmapGpioIo|

; 859  :     {
; 860  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: OmapGpioIOControl: "
; 861  :             L"Incorrect context parameter\r\n"
; 862  :             ));

  01328	e59f3b40	 ldr         r3, [pc, #0xB40]
  0132c	e5933440	 ldr         r3, [r3, #0x440]
  01330	e3130001	 tst         r3, #1
  01334	0a000004	 beq         |$LN64@OmapGpioIo|
  01338	e59f0b94	 ldr         r0, [pc, #0xB94]
  0133c	eb000000	 bl          NKDbgPrintfW
  01340	e3a03001	 mov         r3, #1
  01344	e58d30b4	 str         r3, [sp, #0xB4]
  01348	ea000001	 b           |$LN65@OmapGpioIo|
  0134c		 |$LN64@OmapGpioIo|
  0134c	e3a03000	 mov         r3, #0
  01350	e58d30b4	 str         r3, [sp, #0xB4]
  01354		 |$LN65@OmapGpioIo|

; 863  :         goto cleanUp;

  01354	ea0002b2	 b           |$LN57@OmapGpioIo|
  01358	ea0002b1	 b           |$cleanUp$37376|
  0135c		 |$LN59@OmapGpioIo|

; 864  :     }
; 865  :     switch (code)

  0135c	e59d311c	 ldr         r3, [sp, #0x11C]
  01360	e58d30b8	 str         r3, [sp, #0xB8]
  01364	e59d20b8	 ldr         r2, [sp, #0xB8]
  01368	e59f3b60	 ldr         r3, [pc, #0xB60]
  0136c	e1520003	 cmp         r2, r3
  01370	8a000020	 bhi         |$LN76@OmapGpioIo|
  01374	e59d20b8	 ldr         r2, [sp, #0xB8]
  01378	e59f3b50	 ldr         r3, [pc, #0xB50]
  0137c	e1520003	 cmp         r2, r3
  01380	0a00012c	 beq         |$LN27@OmapGpioIo|
  01384	e59d20b8	 ldr         r2, [sp, #0xB8]
  01388	e59f3b3c	 ldr         r3, [pc, #0xB3C]
  0138c	e1520003	 cmp         r2, r3
  01390	8a00000e	 bhi         |$LN77@OmapGpioIo|
  01394	e59d20b8	 ldr         r2, [sp, #0xB8]
  01398	e59f3b2c	 ldr         r3, [pc, #0xB2C]
  0139c	e1520003	 cmp         r2, r3
  013a0	0a0000af	 beq         |$LN40@OmapGpioIo|
  013a4	e59d20b8	 ldr         r2, [sp, #0xB8]
  013a8	e3a03822	 mov         r3, #0x22, 16
  013ac	e3833b01	 orr         r3, r3, #1, 22
  013b0	e1520003	 cmp         r2, r3
  013b4	0a000027	 beq         |$LN54@OmapGpioIo|
  013b8	e59d20b8	 ldr         r2, [sp, #0xB8]
  013bc	e3a03822	 mov         r3, #0x22, 16
  013c0	e3833b03	 orr         r3, r3, #3, 22
  013c4	e1520003	 cmp         r2, r3
  013c8	0a000088	 beq         |$LN44@OmapGpioIo|
  013cc	ea000294	 b           |$LN55@OmapGpioIo|
  013d0		 |$LN77@OmapGpioIo|
  013d0	e59d20b8	 ldr         r2, [sp, #0xB8]
  013d4	e59f3aec	 ldr         r3, [pc, #0xAEC]
  013d8	e1520003	 cmp         r2, r3
  013dc	0a0000bd	 beq         |$LN36@OmapGpioIo|
  013e0	e59d20b8	 ldr         r2, [sp, #0xB8]
  013e4	e3a03822	 mov         r3, #0x22, 16
  013e8	e3833ec1	 orr         r3, r3, #0xC1, 28
  013ec	e1520003	 cmp         r2, r3
  013f0	0a0000e9	 beq         |$LN31@OmapGpioIo|
  013f4	ea00028a	 b           |$LN55@OmapGpioIo|
  013f8		 |$LN76@OmapGpioIo|
  013f8	e59d20b8	 ldr         r2, [sp, #0xB8]
  013fc	e59f3ac0	 ldr         r3, [pc, #0xAC0]
  01400	e1520003	 cmp         r2, r3
  01404	8a00000d	 bhi         |$LN78@OmapGpioIo|
  01408	e59d20b8	 ldr         r2, [sp, #0xB8]
  0140c	e59f3ab0	 ldr         r3, [pc, #0xAB0]
  01410	e1520003	 cmp         r2, r3
  01414	0a0001e4	 beq         |$LN12@OmapGpioIo|
  01418	e59d20b8	 ldr         r2, [sp, #0xB8]
  0141c	e59f3a9c	 ldr         r3, [pc, #0xA9C]
  01420	e1520003	 cmp         r2, r3
  01424	0a000134	 beq         |$LN22@OmapGpioIo|
  01428	e59d20b8	 ldr         r2, [sp, #0xB8]
  0142c	e3a03822	 mov         r3, #0x22, 16
  01430	e3833ec2	 orr         r3, r3, #0xC2, 28
  01434	e1520003	 cmp         r2, r3
  01438	0a00016f	 beq         |$LN17@OmapGpioIo|
  0143c	ea000278	 b           |$LN55@OmapGpioIo|
  01440		 |$LN78@OmapGpioIo|
  01440	e59d20b8	 ldr         r2, [sp, #0xB8]
  01444	e3a03822	 mov         r3, #0x22, 16
  01448	e3833d31	 orr         r3, r3, #0x31, 26
  0144c	e1520003	 cmp         r2, r3
  01450	0a000221	 beq         |$LN6@OmapGpioIo|
  01454	ea000272	 b           |$LN55@OmapGpioIo|
  01458		 |$LN54@OmapGpioIo|

; 866  :     {
; 867  :     case IOCTL_DDK_GET_DRIVER_IFC:
; 868  :         // We can give interface only to our peer in device process
; 869  :         if (GetCurrentProcessId() != (DWORD)GetCallerProcess())

  01458	eb000000	 bl          GetCurrentProcessId
  0145c	e58d00bc	 str         r0, [sp, #0xBC]
  01460	eb000000	 bl          GetCallerProcess
  01464	e58d00c0	 str         r0, [sp, #0xC0]
  01468	e59d20bc	 ldr         r2, [sp, #0xBC]
  0146c	e59d30c0	 ldr         r3, [sp, #0xC0]
  01470	e1520003	 cmp         r2, r3
  01474	0a000011	 beq         |$LN53@OmapGpioIo|

; 870  :         {
; 871  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: GIO_IOControl: "
; 872  :                 L"IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 873  :                 L"device process (caller process id 0x%08x)\r\n",
; 874  :                 GetCurrentProcessId()
; 875  :                 ));

  01478	e59f39f0	 ldr         r3, [pc, #0x9F0]
  0147c	e5933440	 ldr         r3, [r3, #0x440]
  01480	e3130001	 tst         r3, #1
  01484	0a000007	 beq         |$LN66@OmapGpioIo|
  01488	eb000000	 bl          GetCurrentProcessId
  0148c	e58d00c4	 str         r0, [sp, #0xC4]
  01490	e59d10c4	 ldr         r1, [sp, #0xC4]
  01494	e59f0a20	 ldr         r0, [pc, #0xA20]
  01498	eb000000	 bl          NKDbgPrintfW
  0149c	e3a03001	 mov         r3, #1
  014a0	e58d30c8	 str         r3, [sp, #0xC8]
  014a4	ea000001	 b           |$LN67@OmapGpioIo|
  014a8		 |$LN66@OmapGpioIo|
  014a8	e3a03000	 mov         r3, #0
  014ac	e58d30c8	 str         r3, [sp, #0xC8]
  014b0		 |$LN67@OmapGpioIo|

; 876  :             SetLastError(ERROR_ACCESS_DENIED);

  014b0	e3a00005	 mov         r0, #5
  014b4	eb000000	 bl          SetLastError
  014b8	ea000259	 b           |$LN52@OmapGpioIo|

; 877  :             goto cleanUp;

  014bc	ea000258	 b           |$cleanUp$37376|
  014c0		 |$LN53@OmapGpioIo|

; 878  :         }
; 879  :         if ((pInBuffer == NULL) || (inSize < sizeof(GUID)))

  014c0	e59d3120	 ldr         r3, [sp, #0x120]
  014c4	e3530000	 cmp         r3, #0
  014c8	0a000002	 beq         |$LN50@OmapGpioIo|
  014cc	e59d3124	 ldr         r3, [sp, #0x124]
  014d0	e3530010	 cmp         r3, #0x10
  014d4	2a000002	 bcs         |$LN51@OmapGpioIo|
  014d8		 |$LN50@OmapGpioIo|

; 880  :         {
; 881  :             SetLastError(ERROR_INVALID_PARAMETER);

  014d8	e3a00057	 mov         r0, #0x57
  014dc	eb000000	 bl          SetLastError

; 882  :             break;

  014e0	ea00024f	 b           |$LN55@OmapGpioIo|
  014e4		 |$LN51@OmapGpioIo|

; 883  :         }
; 884  :         if (IsEqualGUID(*(GUID*)pInBuffer, DEVICE_IFC_GPIO_GUID))

  014e4	e59f19cc	 ldr         r1, [pc, #0x9CC]
  014e8	e59d0120	 ldr         r0, [sp, #0x120]
  014ec	eb000000	 bl          |?IsEqualGUID@@YAHABU_GUID@@0@Z|
  014f0	e58d00cc	 str         r0, [sp, #0xCC]
  014f4	e59d30cc	 ldr         r3, [sp, #0xCC]
  014f8	e3530000	 cmp         r3, #0
  014fc	0a000038	 beq         |$LN49@OmapGpioIo|

; 885  :         {
; 886  :             if (pOutSize != NULL) *pOutSize = sizeof(DEVICE_IFC_GPIO);

  01500	e59d3130	 ldr         r3, [sp, #0x130]
  01504	e3530000	 cmp         r3, #0
  01508	0a000002	 beq         |$LN48@OmapGpioIo|
  0150c	e59d2130	 ldr         r2, [sp, #0x130]
  01510	e3a03048	 mov         r3, #0x48
  01514	e5823000	 str         r3, [r2]
  01518		 |$LN48@OmapGpioIo|

; 887  :             if ((pOutBuffer == NULL) || (outSize < sizeof(DEVICE_IFC_GPIO)))

  01518	e59d3128	 ldr         r3, [sp, #0x128]
  0151c	e3530000	 cmp         r3, #0
  01520	0a000002	 beq         |$LN46@OmapGpioIo|
  01524	e59d312c	 ldr         r3, [sp, #0x12C]
  01528	e3530048	 cmp         r3, #0x48
  0152c	2a000002	 bcs         |$LN47@OmapGpioIo|
  01530		 |$LN46@OmapGpioIo|

; 888  :             {
; 889  :                 SetLastError(ERROR_INVALID_PARAMETER);

  01530	e3a00057	 mov         r0, #0x57
  01534	eb000000	 bl          SetLastError

; 890  :                 break;

  01538	ea000239	 b           |$LN55@OmapGpioIo|
  0153c		 |$LN47@OmapGpioIo|

; 891  :             }
; 892  :             ifc.context                 = context;

  0153c	e59d3118	 ldr         r3, [sp, #0x118]
  01540	e58d302c	 str         r3, [sp, #0x2C]

; 893  :             ifc.pfnSetBit               = OmapGpioSetBit;

  01544	e59f3968	 ldr         r3, [pc, #0x968]
  01548	e58d303c	 str         r3, [sp, #0x3C]

; 894  :             ifc.pfnClrBit               = OmapGpioClrBit;

  0154c	e59f395c	 ldr         r3, [pc, #0x95C]
  01550	e58d3040	 str         r3, [sp, #0x40]

; 895  :             ifc.pfnGetBit               = OmapGpioGetBit;

  01554	e59f3950	 ldr         r3, [pc, #0x950]
  01558	e58d3044	 str         r3, [sp, #0x44]

; 896  :             ifc.pfnSetMode              = OmapGpioSetMode;

  0155c	e59f3944	 ldr         r3, [pc, #0x944]
  01560	e58d3048	 str         r3, [sp, #0x48]

; 897  :             ifc.pfnGetMode              = OmapGpioGetMode;

  01564	e59f3938	 ldr         r3, [pc, #0x938]
  01568	e58d304c	 str         r3, [sp, #0x4C]

; 898  :             ifc.pfnPullup               = OmapGpioPullup;

  0156c	e59f392c	 ldr         r3, [pc, #0x92C]
  01570	e58d3050	 str         r3, [sp, #0x50]

; 899  :             ifc.pfnPulldown             = OmapGpioPulldown;

  01574	e59f3920	 ldr         r3, [pc, #0x920]
  01578	e58d3054	 str         r3, [sp, #0x54]

; 900  :             ifc.pfnInterruptInitialize  = OmapGpioInterruptInitialize;

  0157c	e59f3914	 ldr         r3, [pc, #0x914]
  01580	e58d305c	 str         r3, [sp, #0x5C]

; 901  :             ifc.pfnInterruptMask        = OmapGpioInterruptMask;

  01584	e59f3908	 ldr         r3, [pc, #0x908]
  01588	e58d3060	 str         r3, [sp, #0x60]

; 902  :             ifc.pfnInterruptDisable     = OmapGpioInterruptDisable;

  0158c	e59f38fc	 ldr         r3, [pc, #0x8FC]
  01590	e58d3064	 str         r3, [sp, #0x64]

; 903  :             ifc.pfnInterruptDone        = OmapGpioInterruptDone;

  01594	e59f38f0	 ldr         r3, [pc, #0x8F0]
  01598	e58d3068	 str         r3, [sp, #0x68]

; 904  : 			ifc.pfnGetSystemIrq			= OmapGpioGetSystemIrq;

  0159c	e59f38e4	 ldr         r3, [pc, #0x8E4]
  015a0	e58d306c	 str         r3, [sp, #0x6C]

; 905  :             ifc.pfnInterruptWakeUp      = OmapGpioInterruptWakeUp;

  015a4	e59f38d8	 ldr         r3, [pc, #0x8D8]
  015a8	e58d3070	 str         r3, [sp, #0x70]

; 906  :             ifc.pfnIoControl            = OmapGpioIoControl;

  015ac	e59f38cc	 ldr         r3, [pc, #0x8CC]
  015b0	e58d3058	 str         r3, [sp, #0x58]

; 907  : 
; 908  :             if (!CeSafeCopyMemory(pOutBuffer, &ifc, sizeof(ifc))) break;

  015b4	e3a02048	 mov         r2, #0x48
  015b8	e28d102c	 add         r1, sp, #0x2C
  015bc	e59d0128	 ldr         r0, [sp, #0x128]
  015c0	eb000000	 bl          CeSafeCopyMemory
  015c4	e58d00d0	 str         r0, [sp, #0xD0]
  015c8	e59d30d0	 ldr         r3, [sp, #0xD0]
  015cc	e3530000	 cmp         r3, #0
  015d0	1a000000	 bne         |$LN45@OmapGpioIo|
  015d4	ea000212	 b           |$LN55@OmapGpioIo|
  015d8		 |$LN45@OmapGpioIo|

; 909  :             rc = TRUE;

  015d8	e3a03001	 mov         r3, #1
  015dc	e58d3018	 str         r3, [sp, #0x18]

; 910  :             break;

  015e0	ea00020f	 b           |$LN55@OmapGpioIo|
  015e4		 |$LN49@OmapGpioIo|

; 911  :         }
; 912  :         SetLastError(ERROR_INVALID_PARAMETER);

  015e4	e3a00057	 mov         r0, #0x57
  015e8	eb000000	 bl          SetLastError

; 913  :         break;

  015ec	ea00020c	 b           |$LN55@OmapGpioIo|
  015f0		 |$LN44@OmapGpioIo|

; 914  : 
; 915  :     case IOCTL_GPIO_SETBIT:
; 916  :         if (pOutSize != 0) *pOutSize = 0;

  015f0	e59d3130	 ldr         r3, [sp, #0x130]
  015f4	e3530000	 cmp         r3, #0
  015f8	0a000002	 beq         |$LN43@OmapGpioIo|
  015fc	e59d2130	 ldr         r2, [sp, #0x130]
  01600	e3a03000	 mov         r3, #0
  01604	e5823000	 str         r3, [r2]
  01608		 |$LN43@OmapGpioIo|

; 917  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 918  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)))

  01608	e59d3120	 ldr         r3, [sp, #0x120]
  0160c	e3530000	 cmp         r3, #0
  01610	0a00000a	 beq         |$LN41@OmapGpioIo|
  01614	e59d3124	 ldr         r3, [sp, #0x124]
  01618	e3530004	 cmp         r3, #4
  0161c	3a000007	 bcc         |$LN41@OmapGpioIo|
  01620	e3a02004	 mov         r2, #4
  01624	e59d1120	 ldr         r1, [sp, #0x120]
  01628	e28d0014	 add         r0, sp, #0x14
  0162c	eb000000	 bl          CeSafeCopyMemory
  01630	e58d00d4	 str         r0, [sp, #0xD4]
  01634	e59d30d4	 ldr         r3, [sp, #0xD4]
  01638	e3530000	 cmp         r3, #0
  0163c	1a000002	 bne         |$LN42@OmapGpioIo|
  01640		 |$LN41@OmapGpioIo|

; 919  :         {
; 920  :             SetLastError(ERROR_INVALID_PARAMETER);

  01640	e3a00057	 mov         r0, #0x57
  01644	eb000000	 bl          SetLastError

; 921  :             break;

  01648	ea0001f5	 b           |$LN55@OmapGpioIo|
  0164c		 |$LN42@OmapGpioIo|

; 922  :         }
; 923  :         OmapGpioSetBit(context, id);

  0164c	e59d1014	 ldr         r1, [sp, #0x14]
  01650	e59d0118	 ldr         r0, [sp, #0x118]
  01654	eb000000	 bl          |?OmapGpioSetBit@@YAHPAXI@Z|

; 924  :         rc = TRUE;

  01658	e3a03001	 mov         r3, #1
  0165c	e58d3018	 str         r3, [sp, #0x18]

; 925  :         break;

  01660	ea0001ef	 b           |$LN55@OmapGpioIo|
  01664		 |$LN40@OmapGpioIo|

; 926  : 
; 927  :     case IOCTL_GPIO_CLRBIT:
; 928  :         if (pOutSize != 0) *pOutSize = 0;

  01664	e59d3130	 ldr         r3, [sp, #0x130]
  01668	e3530000	 cmp         r3, #0
  0166c	0a000002	 beq         |$LN39@OmapGpioIo|
  01670	e59d2130	 ldr         r2, [sp, #0x130]
  01674	e3a03000	 mov         r3, #0
  01678	e5823000	 str         r3, [r2]
  0167c		 |$LN39@OmapGpioIo|

; 929  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 930  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)))

  0167c	e59d3120	 ldr         r3, [sp, #0x120]
  01680	e3530000	 cmp         r3, #0
  01684	0a00000a	 beq         |$LN37@OmapGpioIo|
  01688	e59d3124	 ldr         r3, [sp, #0x124]
  0168c	e3530004	 cmp         r3, #4
  01690	3a000007	 bcc         |$LN37@OmapGpioIo|
  01694	e3a02004	 mov         r2, #4
  01698	e59d1120	 ldr         r1, [sp, #0x120]
  0169c	e28d0014	 add         r0, sp, #0x14
  016a0	eb000000	 bl          CeSafeCopyMemory
  016a4	e58d00d8	 str         r0, [sp, #0xD8]
  016a8	e59d30d8	 ldr         r3, [sp, #0xD8]
  016ac	e3530000	 cmp         r3, #0
  016b0	1a000002	 bne         |$LN38@OmapGpioIo|
  016b4		 |$LN37@OmapGpioIo|

; 931  :         {
; 932  :             SetLastError(ERROR_INVALID_PARAMETER);

  016b4	e3a00057	 mov         r0, #0x57
  016b8	eb000000	 bl          SetLastError

; 933  :             break;

  016bc	ea0001d8	 b           |$LN55@OmapGpioIo|
  016c0		 |$LN38@OmapGpioIo|

; 934  :         }
; 935  :         OmapGpioClrBit(context, id);

  016c0	e59d1014	 ldr         r1, [sp, #0x14]
  016c4	e59d0118	 ldr         r0, [sp, #0x118]
  016c8	eb000000	 bl          |?OmapGpioClrBit@@YAHPAXI@Z|

; 936  :         rc = TRUE;

  016cc	e3a03001	 mov         r3, #1
  016d0	e58d3018	 str         r3, [sp, #0x18]

; 937  :         break;

  016d4	ea0001d2	 b           |$LN55@OmapGpioIo|
  016d8		 |$LN36@OmapGpioIo|

; 938  : 
; 939  :     case IOCTL_GPIO_GETBIT:
; 940  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);

  016d8	e59d3130	 ldr         r3, [sp, #0x130]
  016dc	e3530000	 cmp         r3, #0
  016e0	0a000002	 beq         |$LN35@OmapGpioIo|
  016e4	e59d2130	 ldr         r2, [sp, #0x130]
  016e8	e3a03004	 mov         r3, #4
  016ec	e5823000	 str         r3, [r2]
  016f0		 |$LN35@OmapGpioIo|

; 941  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 942  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 943  :             (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))

  016f0	e59d3120	 ldr         r3, [sp, #0x120]
  016f4	e3530000	 cmp         r3, #0
  016f8	0a000010	 beq         |$LN33@OmapGpioIo|
  016fc	e59d3124	 ldr         r3, [sp, #0x124]
  01700	e3530004	 cmp         r3, #4
  01704	3a00000d	 bcc         |$LN33@OmapGpioIo|
  01708	e3a02004	 mov         r2, #4
  0170c	e59d1120	 ldr         r1, [sp, #0x120]
  01710	e28d0014	 add         r0, sp, #0x14
  01714	eb000000	 bl          CeSafeCopyMemory
  01718	e58d00dc	 str         r0, [sp, #0xDC]
  0171c	e59d30dc	 ldr         r3, [sp, #0xDC]
  01720	e3530000	 cmp         r3, #0
  01724	0a000005	 beq         |$LN33@OmapGpioIo|
  01728	e59d3128	 ldr         r3, [sp, #0x128]
  0172c	e3530000	 cmp         r3, #0
  01730	0a000002	 beq         |$LN33@OmapGpioIo|
  01734	e59d312c	 ldr         r3, [sp, #0x12C]
  01738	e3530004	 cmp         r3, #4
  0173c	2a000002	 bcs         |$LN34@OmapGpioIo|
  01740		 |$LN33@OmapGpioIo|

; 944  :         {
; 945  :             SetLastError(ERROR_INVALID_PARAMETER);

  01740	e3a00057	 mov         r0, #0x57
  01744	eb000000	 bl          SetLastError

; 946  :             break;

  01748	ea0001b5	 b           |$LN55@OmapGpioIo|
  0174c		 |$LN34@OmapGpioIo|

; 947  :         }
; 948  :         value = OmapGpioGetBit(context, id);

  0174c	e59d1014	 ldr         r1, [sp, #0x14]
  01750	e59d0118	 ldr         r0, [sp, #0x118]
  01754	eb000000	 bl          |?OmapGpioGetBit@@YAKPAXI@Z|
  01758	e58d00e0	 str         r0, [sp, #0xE0]
  0175c	e59d30e0	 ldr         r3, [sp, #0xE0]
  01760	e58d301c	 str         r3, [sp, #0x1C]

; 949  :         if (!CeSafeCopyMemory(pOutBuffer, &value, sizeof(value)))

  01764	e3a02004	 mov         r2, #4
  01768	e28d101c	 add         r1, sp, #0x1C
  0176c	e59d0128	 ldr         r0, [sp, #0x128]
  01770	eb000000	 bl          CeSafeCopyMemory
  01774	e58d00e4	 str         r0, [sp, #0xE4]
  01778	e59d30e4	 ldr         r3, [sp, #0xE4]
  0177c	e3530000	 cmp         r3, #0
  01780	1a000002	 bne         |$LN32@OmapGpioIo|

; 950  :         {
; 951  :             SetLastError(ERROR_INVALID_PARAMETER);

  01784	e3a00057	 mov         r0, #0x57
  01788	eb000000	 bl          SetLastError

; 952  :             break;

  0178c	ea0001a4	 b           |$LN55@OmapGpioIo|
  01790		 |$LN32@OmapGpioIo|

; 953  :         }
; 954  :         rc = TRUE;

  01790	e3a03001	 mov         r3, #1
  01794	e58d3018	 str         r3, [sp, #0x18]

; 955  :         break;

  01798	ea0001a1	 b           |$LN55@OmapGpioIo|
  0179c		 |$LN31@OmapGpioIo|

; 956  : 
; 957  :     case IOCTL_GPIO_SETMODE:
; 958  :         if (pOutSize != 0) *pOutSize = 0;

  0179c	e59d3130	 ldr         r3, [sp, #0x130]
  017a0	e3530000	 cmp         r3, #0
  017a4	0a000002	 beq         |$LN30@OmapGpioIo|
  017a8	e59d2130	 ldr         r2, [sp, #0x130]
  017ac	e3a03000	 mov         r3, #0
  017b0	e5823000	 str         r3, [r2]
  017b4		 |$LN30@OmapGpioIo|

; 959  :         if ((pInBuffer == NULL) || (inSize < 2 * sizeof(DWORD)) ||
; 960  :             !CeSafeCopyMemory(
; 961  :             &id, &((DWORD*)pInBuffer)[0], sizeof(DWORD)
; 962  :             ) ||
; 963  :             !CeSafeCopyMemory(
; 964  :             &mode, &((DWORD*)pInBuffer)[1], sizeof(DWORD)
; 965  :             ))

  017b4	e59d3120	 ldr         r3, [sp, #0x120]
  017b8	e3530000	 cmp         r3, #0
  017bc	0a000013	 beq         |$LN28@OmapGpioIo|
  017c0	e59d3124	 ldr         r3, [sp, #0x124]
  017c4	e3530008	 cmp         r3, #8
  017c8	3a000010	 bcc         |$LN28@OmapGpioIo|
  017cc	e3a02004	 mov         r2, #4
  017d0	e59d1120	 ldr         r1, [sp, #0x120]
  017d4	e28d0014	 add         r0, sp, #0x14
  017d8	eb000000	 bl          CeSafeCopyMemory
  017dc	e58d00e8	 str         r0, [sp, #0xE8]
  017e0	e59d30e8	 ldr         r3, [sp, #0xE8]
  017e4	e3530000	 cmp         r3, #0
  017e8	0a000008	 beq         |$LN28@OmapGpioIo|
  017ec	e3a02004	 mov         r2, #4
  017f0	e59d3120	 ldr         r3, [sp, #0x120]
  017f4	e2831004	 add         r1, r3, #4
  017f8	e28d0020	 add         r0, sp, #0x20
  017fc	eb000000	 bl          CeSafeCopyMemory
  01800	e58d00ec	 str         r0, [sp, #0xEC]
  01804	e59d30ec	 ldr         r3, [sp, #0xEC]
  01808	e3530000	 cmp         r3, #0
  0180c	1a000002	 bne         |$LN29@OmapGpioIo|
  01810		 |$LN28@OmapGpioIo|

; 966  :         {
; 967  :             SetLastError(ERROR_INVALID_PARAMETER);

  01810	e3a00057	 mov         r0, #0x57
  01814	eb000000	 bl          SetLastError

; 968  :             break;

  01818	ea000181	 b           |$LN55@OmapGpioIo|
  0181c		 |$LN29@OmapGpioIo|

; 969  :         }
; 970  :         OmapGpioSetMode(context, id, mode);

  0181c	e59d2020	 ldr         r2, [sp, #0x20]
  01820	e59d1014	 ldr         r1, [sp, #0x14]
  01824	e59d0118	 ldr         r0, [sp, #0x118]
  01828	eb000000	 bl          |?OmapGpioSetMode@@YAHPAXII@Z|

; 971  :         rc = TRUE;

  0182c	e3a03001	 mov         r3, #1
  01830	e58d3018	 str         r3, [sp, #0x18]

; 972  :         break;

  01834	ea00017a	 b           |$LN55@OmapGpioIo|
  01838		 |$LN27@OmapGpioIo|

; 973  : 
; 974  :     case IOCTL_GPIO_GETMODE:
; 975  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);

  01838	e59d3130	 ldr         r3, [sp, #0x130]
  0183c	e3530000	 cmp         r3, #0
  01840	0a000002	 beq         |$LN26@OmapGpioIo|
  01844	e59d2130	 ldr         r2, [sp, #0x130]
  01848	e3a03004	 mov         r3, #4
  0184c	e5823000	 str         r3, [r2]
  01850		 |$LN26@OmapGpioIo|

; 976  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 977  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 978  :             (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))

  01850	e59d3120	 ldr         r3, [sp, #0x120]
  01854	e3530000	 cmp         r3, #0
  01858	0a000010	 beq         |$LN24@OmapGpioIo|
  0185c	e59d3124	 ldr         r3, [sp, #0x124]
  01860	e3530004	 cmp         r3, #4
  01864	3a00000d	 bcc         |$LN24@OmapGpioIo|
  01868	e3a02004	 mov         r2, #4
  0186c	e59d1120	 ldr         r1, [sp, #0x120]
  01870	e28d0014	 add         r0, sp, #0x14
  01874	eb000000	 bl          CeSafeCopyMemory
  01878	e58d00f0	 str         r0, [sp, #0xF0]
  0187c	e59d30f0	 ldr         r3, [sp, #0xF0]
  01880	e3530000	 cmp         r3, #0
  01884	0a000005	 beq         |$LN24@OmapGpioIo|
  01888	e59d3128	 ldr         r3, [sp, #0x128]
  0188c	e3530000	 cmp         r3, #0
  01890	0a000002	 beq         |$LN24@OmapGpioIo|
  01894	e59d312c	 ldr         r3, [sp, #0x12C]
  01898	e3530004	 cmp         r3, #4
  0189c	2a000002	 bcs         |$LN25@OmapGpioIo|
  018a0		 |$LN24@OmapGpioIo|

; 979  :         {
; 980  :             SetLastError(ERROR_INVALID_PARAMETER);

  018a0	e3a00057	 mov         r0, #0x57
  018a4	eb000000	 bl          SetLastError

; 981  :             break;

  018a8	ea00015d	 b           |$LN55@OmapGpioIo|
  018ac		 |$LN25@OmapGpioIo|

; 982  :         }
; 983  :         mode = OmapGpioGetMode(context, id);

  018ac	e59d1014	 ldr         r1, [sp, #0x14]
  018b0	e59d0118	 ldr         r0, [sp, #0x118]
  018b4	eb000000	 bl          |?OmapGpioGetMode@@YAKPAXI@Z|
  018b8	e58d00f4	 str         r0, [sp, #0xF4]
  018bc	e59d30f4	 ldr         r3, [sp, #0xF4]
  018c0	e58d3020	 str         r3, [sp, #0x20]

; 984  :         if (!CeSafeCopyMemory(pOutBuffer, &mode, sizeof(mode)))

  018c4	e3a02004	 mov         r2, #4
  018c8	e28d1020	 add         r1, sp, #0x20
  018cc	e59d0128	 ldr         r0, [sp, #0x128]
  018d0	eb000000	 bl          CeSafeCopyMemory
  018d4	e58d00f8	 str         r0, [sp, #0xF8]
  018d8	e59d30f8	 ldr         r3, [sp, #0xF8]
  018dc	e3530000	 cmp         r3, #0
  018e0	1a000002	 bne         |$LN23@OmapGpioIo|

; 985  :         {
; 986  :             SetLastError(ERROR_INVALID_PARAMETER);

  018e4	e3a00057	 mov         r0, #0x57
  018e8	eb000000	 bl          SetLastError

; 987  :             break;

  018ec	ea00014c	 b           |$LN55@OmapGpioIo|
  018f0		 |$LN23@OmapGpioIo|

; 988  :         }
; 989  :         rc = TRUE;

  018f0	e3a03001	 mov         r3, #1
  018f4	e58d3018	 str         r3, [sp, #0x18]

; 990  :         break;

  018f8	ea000149	 b           |$LN55@OmapGpioIo|
  018fc		 |$LN22@OmapGpioIo|

; 991  :         /*
; 992  :         case IOCTL_GPIO_GETIRQ:
; 993  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);
; 994  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 995  :         !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 996  :         (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))
; 997  :         {
; 998  :         SetLastError(ERROR_INVALID_PARAMETER);
; 999  :         break;
; 1000 :         }
; 1001 :         value = OmapGpioGetSystemIrq(context, id);
; 1002 :         if (!CeSafeCopyMemory(pOutBuffer, &value, sizeof(value)))
; 1003 :         {
; 1004 :         SetLastError(ERROR_INVALID_PARAMETER);
; 1005 :         break;
; 1006 :         }
; 1007 :         rc = TRUE;
; 1008 :         break;
; 1009 : 
; 1010 :         case IOCTL_GPIO_INIT_INTERRUPT:
; 1011 :         if ((pInBuffer == NULL) || (inSize != sizeof(IOCTL_GPIO_INIT_INTERRUPT_INFO)))
; 1012 :         {
; 1013 :         SetLastError(ERROR_INVALID_PARAMETER);
; 1014 :         break;
; 1015 :         }
; 1016 :         else
; 1017 :         {
; 1018 :         HANDLE      hLocalEvent         = INVALID_HANDLE_VALUE;
; 1019 :         HANDLE      hCallerHandle       = GetCallerProcess();
; 1020 :         HANDLE      hCurrentProcHandle  = GetCurrentProcess();
; 1021 :         PIOCTL_GPIO_INIT_INTERRUPT_INFO pInitIntrInfo = (PIOCTL_GPIO_INIT_INTERRUPT_INFO)pInBuffer;
; 1022 : 
; 1023 :         if (hCurrentProcHandle != hCallerHandle)
; 1024 :         {
; 1025 :         BOOL    bStatus;
; 1026 : 
; 1027 :         bStatus = DuplicateHandle(hCallerHandle, pInitIntrInfo->hEvent,
; 1028 :         hCurrentProcHandle, &hLocalEvent,
; 1029 :         DUPLICATE_SAME_ACCESS,
; 1030 :         FALSE,
; 1031 :         DUPLICATE_SAME_ACCESS);
; 1032 : 
; 1033 :         if ((bStatus == FALSE) || (hLocalEvent == INVALID_HANDLE_VALUE))
; 1034 :         {
; 1035 :         RETAILMSG(1, (TEXT("GIO_IOControl: IOCTL_GPIO_INIT_INTERRUPT unable to duplicate event handle.\r\n")));
; 1036 :         break;
; 1037 :         }
; 1038 :         }
; 1039 :         else
; 1040 :         {
; 1041 :         hLocalEvent = pInitIntrInfo->hEvent;
; 1042 :         if (hLocalEvent == INVALID_HANDLE_VALUE)
; 1043 :         {
; 1044 :         SetLastError(ERROR_INVALID_PARAMETER);
; 1045 :         break;
; 1046 :         }
; 1047 :         }
; 1048 : 
; 1049 :         rc = InterruptInitialize(pInitIntrInfo->dwSysIntrID, hLocalEvent, NULL, 0);
; 1050 :         CloseHandle(hLocalEvent);
; 1051 :         }
; 1052 :         break;
; 1053 : 
; 1054 :         case IOCTL_GPIO_ACK_INTERRUPT:
; 1055 :         if ((pInBuffer == NULL) || (inSize != sizeof(IOCTL_GPIO_INTERRUPT_INFO)))
; 1056 :         {
; 1057 :         SetLastError(ERROR_INVALID_PARAMETER);
; 1058 :         break;
; 1059 :         }
; 1060 :         else
; 1061 :         {
; 1062 :         PIOCTL_GPIO_INTERRUPT_INFO pIntrInfo = (PIOCTL_GPIO_INTERRUPT_INFO)pInBuffer;
; 1063 : 
; 1064 :         rc = OmapGpioInterruptDone(context, pIntrInfo->uGpioID, pIntrInfo->dwSysIntrID);
; 1065 :         }
; 1066 :         break;
; 1067 : 
; 1068 :         case IOCTL_GPIO_DISABLE_INTERRUPT:
; 1069 :         if ((pInBuffer == NULL) || (inSize != sizeof(IOCTL_GPIO_INTERRUPT_INFO)))
; 1070 :         {
; 1071 :         SetLastError(ERROR_INVALID_PARAMETER);
; 1072 :         break;
; 1073 :         }
; 1074 :         else
; 1075 :         {
; 1076 :         PIOCTL_GPIO_INTERRUPT_INFO pIntrInfo = (PIOCTL_GPIO_INTERRUPT_INFO)pInBuffer;
; 1077 : 
; 1078 :         rc = OmapGpioInterruptDisable(context, pIntrInfo->uGpioID, pIntrInfo->dwSysIntrID);
; 1079 :         }
; 1080 :         break;
; 1081 :         }
; 1082 :         */
; 1083 :     case IOCTL_GPIO_SET_POWER_STATE:
; 1084 :         {
; 1085 :             if ((pInBuffer == NULL) || inSize != sizeof(IOCTL_GPIO_POWER_STATE_IN))

  018fc	e59d3120	 ldr         r3, [sp, #0x120]
  01900	e3530000	 cmp         r3, #0
  01904	0a000002	 beq         |$LN20@OmapGpioIo|
  01908	e59d3124	 ldr         r3, [sp, #0x124]
  0190c	e3530008	 cmp         r3, #8
  01910	0a000012	 beq         |$LN21@OmapGpioIo|
  01914		 |$LN20@OmapGpioIo|

; 1086 :             {
; 1087 :                 SetLastError(ERROR_INVALID_PARAMETER);

  01914	e3a00057	 mov         r0, #0x57
  01918	eb000000	 bl          SetLastError

; 1088 :                 ERRORMSG(ZONE_ERROR, (L"ERROR: OmapGpioIOControl: "
; 1089 :                     L"IOCTL_GPIO_SET_POWER_STATE - Invalid parameter\r\n"
; 1090 :                     ));

  0191c	e59f354c	 ldr         r3, [pc, #0x54C]
  01920	e5933440	 ldr         r3, [r3, #0x440]
  01924	e3130001	 tst         r3, #1
  01928	0a000009	 beq         |$LN68@OmapGpioIo|
  0192c	e3a02b01	 mov         r2, #1, 22
  01930	e3822042	 orr         r2, r2, #0x42
  01934	e59f1540	 ldr         r1, [pc, #0x540]
  01938	e59f0538	 ldr         r0, [pc, #0x538]
  0193c	eb000000	 bl          NKDbgPrintfW
  01940	e59f052c	 ldr         r0, [pc, #0x52C]
  01944	eb000000	 bl          NKDbgPrintfW
  01948	e3a03001	 mov         r3, #1
  0194c	e58d30fc	 str         r3, [sp, #0xFC]
  01950	ea000001	 b           |$LN69@OmapGpioIo|
  01954		 |$LN68@OmapGpioIo|
  01954	e3a03000	 mov         r3, #0
  01958	e58d30fc	 str         r3, [sp, #0xFC]
  0195c		 |$LN69@OmapGpioIo|

; 1091 :                 break;

  0195c	ea000130	 b           |$LN55@OmapGpioIo|
  01960		 |$LN21@OmapGpioIo|

; 1092 :             }
; 1093 : 
; 1094 :             IOCTL_GPIO_POWER_STATE_IN *pPowerIn;
; 1095 :             pPowerIn = (IOCTL_GPIO_POWER_STATE_IN*)pInBuffer;

  01960	e59d3120	 ldr         r3, [sp, #0x120]
  01964	e58d3074	 str         r3, [sp, #0x74]

; 1096 : 
; 1097 :             bank = GPIO_BANK(pPowerIn->gpioId);

  01968	e59d3074	 ldr         r3, [sp, #0x74]
  0196c	e5933000	 ldr         r3, [r3]
  01970	e1a032a3	 mov         r3, r3, lsr #5
  01974	e58d3024	 str         r3, [sp, #0x24]

; 1098 : 
; 1099 :             CRITICAL_SECTION *pCs = &pDevice->bank[bank].pCs;

  01978	e59d3010	 ldr         r3, [sp, #0x10]
  0197c	e283000c	 add         r0, r3, #0xC
  01980	e59d1024	 ldr         r1, [sp, #0x24]
  01984	e3a03020	 mov         r3, #0x20
  01988	e0020391	 mul         r2, r1, r3
  0198c	e5903000	 ldr         r3, [r0]
  01990	e0833002	 add         r3, r3, r2
  01994	e2833004	 add         r3, r3, #4
  01998	e58d3078	 str         r3, [sp, #0x78]

; 1100 :             if (pDevice->fPostInit) EnterCriticalSection(pCs);

  0199c	e59d3010	 ldr         r3, [sp, #0x10]
  019a0	e2833008	 add         r3, r3, #8
  019a4	e5933000	 ldr         r3, [r3]
  019a8	e3530000	 cmp         r3, #0
  019ac	0a000001	 beq         |$LN19@OmapGpioIo|
  019b0	e59d0078	 ldr         r0, [sp, #0x78]
  019b4	eb000000	 bl          EnterCriticalSection
  019b8		 |$LN19@OmapGpioIo|

; 1101 :             SetGpioBankPowerState(pDevice, pPowerIn->gpioId, pPowerIn->state);

  019b8	e59d3074	 ldr         r3, [sp, #0x74]
  019bc	e2833004	 add         r3, r3, #4
  019c0	e5932000	 ldr         r2, [r3]
  019c4	e59d3074	 ldr         r3, [sp, #0x74]
  019c8	e5931000	 ldr         r1, [r3]
  019cc	e59d0010	 ldr         r0, [sp, #0x10]
  019d0	eb000000	 bl          |?SetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 1102 :             if (pDevice->fPostInit) LeaveCriticalSection(pCs);

  019d4	e59d3010	 ldr         r3, [sp, #0x10]
  019d8	e2833008	 add         r3, r3, #8
  019dc	e5933000	 ldr         r3, [r3]
  019e0	e3530000	 cmp         r3, #0
  019e4	0a000001	 beq         |$LN18@OmapGpioIo|
  019e8	e59d0078	 ldr         r0, [sp, #0x78]
  019ec	eb000000	 bl          LeaveCriticalSection
  019f0		 |$LN18@OmapGpioIo|

; 1103 :             rc = TRUE;

  019f0	e3a03001	 mov         r3, #1
  019f4	e58d3018	 str         r3, [sp, #0x18]

; 1104 :         }
; 1105 :         break;

  019f8	ea000109	 b           |$LN55@OmapGpioIo|
  019fc		 |$LN17@OmapGpioIo|

; 1106 : 
; 1107 :     case IOCTL_GPIO_GET_POWER_STATE:
; 1108 :         {
; 1109 :             if ((pInBuffer == NULL) || (pOutBuffer == NULL) ||
; 1110 :                 inSize != sizeof(IOCTL_GPIO_POWER_STATE_IN) ||
; 1111 :                 outSize != sizeof(IOCTL_GPIO_GET_POWER_STATE_OUT))

  019fc	e59d3120	 ldr         r3, [sp, #0x120]
  01a00	e3530000	 cmp         r3, #0
  01a04	0a000008	 beq         |$LN15@OmapGpioIo|
  01a08	e59d3128	 ldr         r3, [sp, #0x128]
  01a0c	e3530000	 cmp         r3, #0
  01a10	0a000005	 beq         |$LN15@OmapGpioIo|
  01a14	e59d3124	 ldr         r3, [sp, #0x124]
  01a18	e3530008	 cmp         r3, #8
  01a1c	1a000002	 bne         |$LN15@OmapGpioIo|
  01a20	e59d312c	 ldr         r3, [sp, #0x12C]
  01a24	e3530008	 cmp         r3, #8
  01a28	0a000012	 beq         |$LN16@OmapGpioIo|
  01a2c		 |$LN15@OmapGpioIo|

; 1112 :             {
; 1113 :                 SetLastError(ERROR_INVALID_PARAMETER);

  01a2c	e3a00057	 mov         r0, #0x57
  01a30	eb000000	 bl          SetLastError

; 1114 :                 ERRORMSG(ZONE_ERROR, (L"ERROR: OmapGpioIOControl: "
; 1115 :                     L"IOCTL_GPIO_SET_POWER_STATE - Invalid parameter\r\n"
; 1116 :                     ));

  01a34	e59f3434	 ldr         r3, [pc, #0x434]
  01a38	e5933440	 ldr         r3, [r3, #0x440]
  01a3c	e3130001	 tst         r3, #1
  01a40	0a000009	 beq         |$LN70@OmapGpioIo|
  01a44	e3a02b01	 mov         r2, #1, 22
  01a48	e382205c	 orr         r2, r2, #0x5C
  01a4c	e59f1428	 ldr         r1, [pc, #0x428]
  01a50	e59f0420	 ldr         r0, [pc, #0x420]
  01a54	eb000000	 bl          NKDbgPrintfW
  01a58	e59f0414	 ldr         r0, [pc, #0x414]
  01a5c	eb000000	 bl          NKDbgPrintfW
  01a60	e3a03001	 mov         r3, #1
  01a64	e58d3100	 str         r3, [sp, #0x100]
  01a68	ea000001	 b           |$LN71@OmapGpioIo|
  01a6c		 |$LN70@OmapGpioIo|
  01a6c	e3a03000	 mov         r3, #0
  01a70	e58d3100	 str         r3, [sp, #0x100]
  01a74		 |$LN71@OmapGpioIo|

; 1117 :                 break;

  01a74	ea0000ea	 b           |$LN55@OmapGpioIo|
  01a78		 |$LN16@OmapGpioIo|

; 1118 :             }
; 1119 : 
; 1120 :             IOCTL_GPIO_POWER_STATE_IN *pPowerIn;
; 1121 :             IOCTL_GPIO_GET_POWER_STATE_OUT *pPowerOut;
; 1122 : 
; 1123 :             pPowerIn = (IOCTL_GPIO_POWER_STATE_IN*)pInBuffer;

  01a78	e59d3120	 ldr         r3, [sp, #0x120]
  01a7c	e58d307c	 str         r3, [sp, #0x7C]

; 1124 :             pPowerOut = (IOCTL_GPIO_GET_POWER_STATE_OUT*)pOutBuffer;

  01a80	e59d3128	 ldr         r3, [sp, #0x128]
  01a84	e58d3084	 str         r3, [sp, #0x84]

; 1125 : 
; 1126 :             bit = GPIO_BIT(pPowerIn->gpioId);

  01a88	e59d307c	 ldr         r3, [sp, #0x7C]
  01a8c	e5933000	 ldr         r3, [r3]
  01a90	e203301f	 and         r3, r3, #0x1F
  01a94	e58d3028	 str         r3, [sp, #0x28]

; 1127 :             bank = GPIO_BANK(pPowerIn->gpioId);

  01a98	e59d307c	 ldr         r3, [sp, #0x7C]
  01a9c	e5933000	 ldr         r3, [r3]
  01aa0	e1a032a3	 mov         r3, r3, lsr #5
  01aa4	e58d3024	 str         r3, [sp, #0x24]

; 1128 : 
; 1129 :             // get power state for gpio
; 1130 :             CRITICAL_SECTION *pCs = &pDevice->bank[bank].pCs;

  01aa8	e59d3010	 ldr         r3, [sp, #0x10]
  01aac	e283000c	 add         r0, r3, #0xC
  01ab0	e59d1024	 ldr         r1, [sp, #0x24]
  01ab4	e3a03020	 mov         r3, #0x20
  01ab8	e0020391	 mul         r2, r1, r3
  01abc	e5903000	 ldr         r3, [r0]
  01ac0	e0833002	 add         r3, r3, r2
  01ac4	e2833004	 add         r3, r3, #4
  01ac8	e58d3080	 str         r3, [sp, #0x80]

; 1131 :             if (pDevice->fPostInit) EnterCriticalSection(pCs);

  01acc	e59d3010	 ldr         r3, [sp, #0x10]
  01ad0	e2833008	 add         r3, r3, #8
  01ad4	e5933000	 ldr         r3, [r3]
  01ad8	e3530000	 cmp         r3, #0
  01adc	0a000001	 beq         |$LN14@OmapGpioIo|
  01ae0	e59d0080	 ldr         r0, [sp, #0x80]
  01ae4	eb000000	 bl          EnterCriticalSection
  01ae8		 |$LN14@OmapGpioIo|

; 1132 :             pPowerOut->gpioState = (pDevice->bank[bank].powerEnabled & (1 << bit)) ? D0 : D4;

  01ae8	e59d3010	 ldr         r3, [sp, #0x10]
  01aec	e283000c	 add         r0, r3, #0xC
  01af0	e59d1024	 ldr         r1, [sp, #0x24]
  01af4	e3a03020	 mov         r3, #0x20
  01af8	e0020391	 mul         r2, r1, r3
  01afc	e5903000	 ldr         r3, [r0]
  01b00	e0831002	 add         r1, r3, r2
  01b04	e59d2028	 ldr         r2, [sp, #0x28]
  01b08	e3a03001	 mov         r3, #1
  01b0c	e1a02213	 mov         r2, r3, lsl r2
  01b10	e5913000	 ldr         r3, [r1]
  01b14	e1130002	 tst         r3, r2
  01b18	0a000002	 beq         |$LN72@OmapGpioIo|
  01b1c	e3a03000	 mov         r3, #0
  01b20	e58d3104	 str         r3, [sp, #0x104]
  01b24	ea000001	 b           |$LN73@OmapGpioIo|
  01b28		 |$LN72@OmapGpioIo|
  01b28	e3a03004	 mov         r3, #4
  01b2c	e58d3104	 str         r3, [sp, #0x104]
  01b30		 |$LN73@OmapGpioIo|
  01b30	e59d2104	 ldr         r2, [sp, #0x104]
  01b34	e59d3084	 ldr         r3, [sp, #0x84]
  01b38	e5832000	 str         r2, [r3]

; 1133 :             pPowerOut->bankState = (pDevice->bank[bank].powerEnabled) ? D0 : D4;

  01b3c	e59d3010	 ldr         r3, [sp, #0x10]
  01b40	e283000c	 add         r0, r3, #0xC
  01b44	e59d1024	 ldr         r1, [sp, #0x24]
  01b48	e3a03020	 mov         r3, #0x20
  01b4c	e0020391	 mul         r2, r1, r3
  01b50	e5903000	 ldr         r3, [r0]
  01b54	e0833002	 add         r3, r3, r2
  01b58	e5933000	 ldr         r3, [r3]
  01b5c	e3530000	 cmp         r3, #0
  01b60	0a000002	 beq         |$LN74@OmapGpioIo|
  01b64	e3a03000	 mov         r3, #0
  01b68	e58d3108	 str         r3, [sp, #0x108]
  01b6c	ea000001	 b           |$LN75@OmapGpioIo|
  01b70		 |$LN74@OmapGpioIo|
  01b70	e3a03004	 mov         r3, #4
  01b74	e58d3108	 str         r3, [sp, #0x108]
  01b78		 |$LN75@OmapGpioIo|
  01b78	e59d3084	 ldr         r3, [sp, #0x84]
  01b7c	e2832004	 add         r2, r3, #4
  01b80	e59d3108	 ldr         r3, [sp, #0x108]
  01b84	e5823000	 str         r3, [r2]

; 1134 :             if (pDevice->fPostInit) LeaveCriticalSection(pCs);

  01b88	e59d3010	 ldr         r3, [sp, #0x10]
  01b8c	e2833008	 add         r3, r3, #8
  01b90	e5933000	 ldr         r3, [r3]
  01b94	e3530000	 cmp         r3, #0
  01b98	0a000001	 beq         |$LN13@OmapGpioIo|
  01b9c	e59d0080	 ldr         r0, [sp, #0x80]
  01ba0	eb000000	 bl          LeaveCriticalSection
  01ba4		 |$LN13@OmapGpioIo|

; 1135 : 
; 1136 :             rc = TRUE;

  01ba4	e3a03001	 mov         r3, #1
  01ba8	e58d3018	 str         r3, [sp, #0x18]
  01bac		 |$LN12@OmapGpioIo|

; 1137 :         }
; 1138 : 
; 1139 :     case IOCTL_GPIO_SET_DEBOUNCE_TIME:
; 1140 :         {
; 1141 :             if ((pInBuffer == NULL) ||
; 1142 :                 (inSize < sizeof(IOCTL_GPIO_SET_DEBOUNCE_TIME_IN)))

  01bac	e59d3120	 ldr         r3, [sp, #0x120]
  01bb0	e3530000	 cmp         r3, #0
  01bb4	0a000002	 beq         |$LN10@OmapGpioIo|
  01bb8	e59d3124	 ldr         r3, [sp, #0x124]
  01bbc	e3530008	 cmp         r3, #8
  01bc0	2a000002	 bcs         |$LN11@OmapGpioIo|
  01bc4		 |$LN10@OmapGpioIo|

; 1143 :             {
; 1144 :                 SetLastError(ERROR_INVALID_PARAMETER);

  01bc4	e3a00057	 mov         r0, #0x57
  01bc8	eb000000	 bl          SetLastError

; 1145 :                 break;

  01bcc	ea000094	 b           |$LN55@OmapGpioIo|
  01bd0		 |$LN11@OmapGpioIo|

; 1146 :             }
; 1147 : 
; 1148 :             IOCTL_GPIO_SET_DEBOUNCE_TIME_IN *pDebounce;
; 1149 : 
; 1150 :             pDebounce = (IOCTL_GPIO_SET_DEBOUNCE_TIME_IN*)pInBuffer;

  01bd0	e59d3120	 ldr         r3, [sp, #0x120]
  01bd4	e58d3088	 str         r3, [sp, #0x88]

; 1151 : 
; 1152 :             if (pDebounce->gpioId < pDevice->nbBanks*32)

  01bd8	e59d3010	 ldr         r3, [sp, #0x10]
  01bdc	e2833004	 add         r3, r3, #4
  01be0	e5931000	 ldr         r1, [r3]
  01be4	e3a03020	 mov         r3, #0x20
  01be8	e0020391	 mul         r2, r1, r3
  01bec	e59d3088	 ldr         r3, [sp, #0x88]
  01bf0	e5933000	 ldr         r3, [r3]
  01bf4	e1530002	 cmp         r3, r2
  01bf8	2a000036	 bcs         |$LN9@OmapGpioIo|

; 1153 :             {
; 1154 :                 CRITICAL_SECTION *pCs;
; 1155 :                 bank = GPIO_BANK(pDebounce->gpioId);

  01bfc	e59d3088	 ldr         r3, [sp, #0x88]
  01c00	e5933000	 ldr         r3, [r3]
  01c04	e1a032a3	 mov         r3, r3, lsr #5
  01c08	e58d3024	 str         r3, [sp, #0x24]

; 1156 :                 pCs = &pDevice->bank[bank].pCs;

  01c0c	e59d3010	 ldr         r3, [sp, #0x10]
  01c10	e283000c	 add         r0, r3, #0xC
  01c14	e59d1024	 ldr         r1, [sp, #0x24]
  01c18	e3a03020	 mov         r3, #0x20
  01c1c	e0020391	 mul         r2, r1, r3
  01c20	e5903000	 ldr         r3, [r0]
  01c24	e0833002	 add         r3, r3, r2
  01c28	e2833004	 add         r3, r3, #4
  01c2c	e58d308c	 str         r3, [sp, #0x8C]

; 1157 :                 if (pDevice->fPostInit) EnterCriticalSection(pCs);

  01c30	e59d3010	 ldr         r3, [sp, #0x10]
  01c34	e2833008	 add         r3, r3, #8
  01c38	e5933000	 ldr         r3, [r3]
  01c3c	e3530000	 cmp         r3, #0
  01c40	0a000001	 beq         |$LN8@OmapGpioIo|
  01c44	e59d008c	 ldr         r0, [sp, #0x8C]
  01c48	eb000000	 bl          EnterCriticalSection
  01c4c		 |$LN8@OmapGpioIo|

; 1158 :                 InternalSetGpioBankPowerState(pDevice, pDebounce->gpioId, D0);

  01c4c	e3a02000	 mov         r2, #0
  01c50	e59d3088	 ldr         r3, [sp, #0x88]
  01c54	e5931000	 ldr         r1, [r3]
  01c58	e59d0010	 ldr         r0, [sp, #0x10]
  01c5c	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 1159 :                 OUTREG32(&pDevice->bank[bank].ppGpioRegs->DEBOUNCINGTIME,
; 1160 :                     pDebounce->debounceTime);

  01c60	e59d3088	 ldr         r3, [sp, #0x88]
  01c64	e283e004	 add         lr, r3, #4
  01c68	e59d3010	 ldr         r3, [sp, #0x10]
  01c6c	e283000c	 add         r0, r3, #0xC
  01c70	e59d1024	 ldr         r1, [sp, #0x24]
  01c74	e3a03020	 mov         r3, #0x20
  01c78	e0020391	 mul         r2, r1, r3
  01c7c	e5903000	 ldr         r3, [r0]
  01c80	e0833002	 add         r3, r3, r2
  01c84	e2833018	 add         r3, r3, #0x18
  01c88	e5933000	 ldr         r3, [r3]
  01c8c	e2832054	 add         r2, r3, #0x54
  01c90	e59e3000	 ldr         r3, [lr]
  01c94	e5823000	 str         r3, [r2]

; 1161 :                 InternalSetGpioBankPowerState(pDevice, pDebounce->gpioId, D4);

  01c98	e3a02004	 mov         r2, #4
  01c9c	e59d3088	 ldr         r3, [sp, #0x88]
  01ca0	e5931000	 ldr         r1, [r3]
  01ca4	e59d0010	 ldr         r0, [sp, #0x10]
  01ca8	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 1162 :                 if (pDevice->fPostInit) LeaveCriticalSection(pCs);

  01cac	e59d3010	 ldr         r3, [sp, #0x10]
  01cb0	e2833008	 add         r3, r3, #8
  01cb4	e5933000	 ldr         r3, [r3]
  01cb8	e3530000	 cmp         r3, #0
  01cbc	0a000001	 beq         |$LN7@OmapGpioIo|
  01cc0	e59d008c	 ldr         r0, [sp, #0x8C]
  01cc4	eb000000	 bl          LeaveCriticalSection
  01cc8		 |$LN7@OmapGpioIo|

; 1163 : 
; 1164 :                 // indicate gpio registers need to be saved for OFF mode
; 1165 :                 HalContextUpdateDirtyRegister(HAL_CONTEXTSAVE_GPIO);

  01cc8	e3a00001	 mov         r0, #1
  01ccc	eb000000	 bl          HalContextUpdateDirtyRegister

; 1166 : 
; 1167 :                 rc = TRUE;

  01cd0	e3a03001	 mov         r3, #1
  01cd4	e58d3018	 str         r3, [sp, #0x18]
  01cd8		 |$LN9@OmapGpioIo|

; 1168 :             }
; 1169 :         }
; 1170 :         break;

  01cd8	ea000051	 b           |$LN55@OmapGpioIo|
  01cdc		 |$LN6@OmapGpioIo|

; 1171 : 
; 1172 :     case IOCTL_GPIO_GET_DEBOUNCE_TIME:
; 1173 :         {
; 1174 :             if ((pInBuffer == NULL) || (pOutBuffer == NULL) ||
; 1175 :                 (inSize < sizeof(UINT)) ||
; 1176 :                 (outSize < sizeof(UINT)))

  01cdc	e59d3120	 ldr         r3, [sp, #0x120]
  01ce0	e3530000	 cmp         r3, #0
  01ce4	0a000008	 beq         |$LN4@OmapGpioIo|
  01ce8	e59d3128	 ldr         r3, [sp, #0x128]
  01cec	e3530000	 cmp         r3, #0
  01cf0	0a000005	 beq         |$LN4@OmapGpioIo|
  01cf4	e59d3124	 ldr         r3, [sp, #0x124]
  01cf8	e3530004	 cmp         r3, #4
  01cfc	3a000002	 bcc         |$LN4@OmapGpioIo|
  01d00	e59d312c	 ldr         r3, [sp, #0x12C]
  01d04	e3530004	 cmp         r3, #4
  01d08	2a000002	 bcs         |$LN5@OmapGpioIo|
  01d0c		 |$LN4@OmapGpioIo|

; 1177 :             {
; 1178 :                 SetLastError(ERROR_INVALID_PARAMETER);

  01d0c	e3a00057	 mov         r0, #0x57
  01d10	eb000000	 bl          SetLastError

; 1179 :                 break;

  01d14	ea000042	 b           |$LN55@OmapGpioIo|
  01d18		 |$LN5@OmapGpioIo|

; 1180 :             }
; 1181 : 
; 1182 :             UINT *pId;
; 1183 :             UINT *pOut;
; 1184 : 
; 1185 :             pId = (UINT*)pInBuffer;

  01d18	e59d3120	 ldr         r3, [sp, #0x120]
  01d1c	e58d3090	 str         r3, [sp, #0x90]

; 1186 :             pOut = (UINT*)pOutBuffer;

  01d20	e59d3128	 ldr         r3, [sp, #0x128]
  01d24	e58d3094	 str         r3, [sp, #0x94]

; 1187 : 
; 1188 :             if (*pId < pDevice->nbBanks*32)

  01d28	e59d3010	 ldr         r3, [sp, #0x10]
  01d2c	e2833004	 add         r3, r3, #4
  01d30	e5931000	 ldr         r1, [r3]
  01d34	e3a03020	 mov         r3, #0x20
  01d38	e0020391	 mul         r2, r1, r3
  01d3c	e59d3090	 ldr         r3, [sp, #0x90]
  01d40	e5933000	 ldr         r3, [r3]
  01d44	e1530002	 cmp         r3, r2
  01d48	2a000035	 bcs         |$LN3@OmapGpioIo|

; 1189 :             {
; 1190 : 
; 1191 :                 bank = GPIO_BANK(*pId);

  01d4c	e59d3090	 ldr         r3, [sp, #0x90]
  01d50	e5933000	 ldr         r3, [r3]
  01d54	e1a032a3	 mov         r3, r3, lsr #5
  01d58	e58d3024	 str         r3, [sp, #0x24]

; 1192 : 
; 1193 :                 CRITICAL_SECTION *pCs = &pDevice->bank[bank].pCs;

  01d5c	e59d3010	 ldr         r3, [sp, #0x10]
  01d60	e283000c	 add         r0, r3, #0xC
  01d64	e59d1024	 ldr         r1, [sp, #0x24]
  01d68	e3a03020	 mov         r3, #0x20
  01d6c	e0020391	 mul         r2, r1, r3
  01d70	e5903000	 ldr         r3, [r0]
  01d74	e0833002	 add         r3, r3, r2
  01d78	e2833004	 add         r3, r3, #4
  01d7c	e58d3098	 str         r3, [sp, #0x98]

; 1194 :                 if (pDevice->fPostInit) EnterCriticalSection(pCs);

  01d80	e59d3010	 ldr         r3, [sp, #0x10]
  01d84	e2833008	 add         r3, r3, #8
  01d88	e5933000	 ldr         r3, [r3]
  01d8c	e3530000	 cmp         r3, #0
  01d90	0a000001	 beq         |$LN2@OmapGpioIo|
  01d94	e59d0098	 ldr         r0, [sp, #0x98]
  01d98	eb000000	 bl          EnterCriticalSection
  01d9c		 |$LN2@OmapGpioIo|

; 1195 :                 InternalSetGpioBankPowerState(pDevice, *pId, D0);

  01d9c	e3a02000	 mov         r2, #0
  01da0	e59d3090	 ldr         r3, [sp, #0x90]
  01da4	e5931000	 ldr         r1, [r3]
  01da8	e59d0010	 ldr         r0, [sp, #0x10]
  01dac	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 1196 :                 *pOut = INREG32(&pDevice->bank[bank].ppGpioRegs->DEBOUNCINGTIME);

  01db0	e59d3010	 ldr         r3, [sp, #0x10]
  01db4	e283000c	 add         r0, r3, #0xC
  01db8	e59d1024	 ldr         r1, [sp, #0x24]
  01dbc	e3a03020	 mov         r3, #0x20
  01dc0	e0020391	 mul         r2, r1, r3
  01dc4	e5903000	 ldr         r3, [r0]
  01dc8	e0833002	 add         r3, r3, r2
  01dcc	e2833018	 add         r3, r3, #0x18
  01dd0	e5933000	 ldr         r3, [r3]
  01dd4	e2833054	 add         r3, r3, #0x54
  01dd8	e5932000	 ldr         r2, [r3]
  01ddc	e59d3094	 ldr         r3, [sp, #0x94]
  01de0	e5832000	 str         r2, [r3]

; 1197 :                 InternalSetGpioBankPowerState(pDevice, *pId, D4);

  01de4	e3a02004	 mov         r2, #4
  01de8	e59d3090	 ldr         r3, [sp, #0x90]
  01dec	e5931000	 ldr         r1, [r3]
  01df0	e59d0010	 ldr         r0, [sp, #0x10]
  01df4	eb000000	 bl          |?InternalSetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|

; 1198 :                 if (pDevice->fPostInit) LeaveCriticalSection(pCs);

  01df8	e59d3010	 ldr         r3, [sp, #0x10]
  01dfc	e2833008	 add         r3, r3, #8
  01e00	e5933000	 ldr         r3, [r3]
  01e04	e3530000	 cmp         r3, #0
  01e08	0a000001	 beq         |$LN1@OmapGpioIo|
  01e0c	e59d0098	 ldr         r0, [sp, #0x98]
  01e10	eb000000	 bl          LeaveCriticalSection
  01e14		 |$LN1@OmapGpioIo|

; 1199 : 
; 1200 :                 // indicate gpio registers need to be saved for OFF mode
; 1201 :                 HalContextUpdateDirtyRegister(HAL_CONTEXTSAVE_GPIO);

  01e14	e3a00001	 mov         r0, #1
  01e18	eb000000	 bl          HalContextUpdateDirtyRegister

; 1202 : 
; 1203 :                 rc = TRUE;

  01e1c	e3a03001	 mov         r3, #1
  01e20	e58d3018	 str         r3, [sp, #0x18]
  01e24		 |$LN3@OmapGpioIo|
  01e24		 |$LN55@OmapGpioIo|
  01e24		 |$LN52@OmapGpioIo|
  01e24		 |$LN57@OmapGpioIo|
  01e24		 |$cleanUp$37376|

; 1204 :             }
; 1205 :         }
; 1206 :         break;
; 1207 :     }
; 1208 : 
; 1209 : cleanUp:
; 1210 :     DEBUGMSG(ZONE_FUNCTION, (L"-OmapGpioIOControl(rc = %d)\r\n", rc));

  01e24	e59f3044	 ldr         r3, [pc, #0x44]
  01e28	e5933440	 ldr         r3, [r3, #0x440]
  01e2c	e3130004	 tst         r3, #4
  01e30	0a000005	 beq         |$LN79@OmapGpioIo|
  01e34	e59d1018	 ldr         r1, [sp, #0x18]
  01e38	e59f002c	 ldr         r0, [pc, #0x2C]
  01e3c	eb000000	 bl          NKDbgPrintfW
  01e40	e3a03001	 mov         r3, #1
  01e44	e58d310c	 str         r3, [sp, #0x10C]
  01e48	ea000001	 b           |$LN80@OmapGpioIo|
  01e4c		 |$LN79@OmapGpioIo|
  01e4c	e3a03000	 mov         r3, #0
  01e50	e58d310c	 str         r3, [sp, #0x10C]
  01e54		 |$LN80@OmapGpioIo|

; 1211 :     return rc;

  01e54	e59d3018	 ldr         r3, [sp, #0x18]
  01e58	e58d30ac	 str         r3, [sp, #0xAC]

; 1212 : #endif
; 1213 : 
; 1214 : #ifdef OAL
; 1215 :     UNREFERENCED_PARAMETER(context);
; 1216 :     UNREFERENCED_PARAMETER(code);
; 1217 :     UNREFERENCED_PARAMETER(pInBuffer);
; 1218 :     UNREFERENCED_PARAMETER(inSize);
; 1219 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1220 :     UNREFERENCED_PARAMETER(outSize);
; 1221 :     UNREFERENCED_PARAMETER(pOutSize);        
; 1222 :     return FALSE;
; 1223 : #endif
; 1224 : }

  01e5c	e59d00ac	 ldr         r0, [sp, #0xAC]
  01e60	e28dde11	 add         sp, sp, #0x11, 28
  01e64	e89d6000	 ldmia       sp, {sp, lr}
  01e68	e12fff1e	 bx          lr
  01e6c		 |$LN84@OmapGpioIo|
  01e6c		 |$LN85@OmapGpioIo|
  01e6c	00000000	 DCD         |??_C@_1DM@IFMLOPJE@?$AA?9?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01e70		 |$LN86@OmapGpioIo|
  01e70	00000000	 DCD         |dpCurSettings|
  01e74		 |$LN87@OmapGpioIo|
  01e74	00000000	 DCD         |??_C@_1JG@DHGGDOFN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_@|
  01e78		 |$LN88@OmapGpioIo|
  01e78	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  01e7c		 |$LN89@OmapGpioIo|
  01e7c	00000000	 DCD         |??_C@_1MM@BOONICNJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01e80		 |$LN90@OmapGpioIo|
  01e80	00000000	 DCD         |?OmapGpioIoControl@@YAHPAXIPAEI1IPAK@Z|
  01e84		 |$LN91@OmapGpioIo|
  01e84	00000000	 DCD         |?OmapGpioInterruptWakeUp@@YAHPAXKKH@Z|
  01e88		 |$LN92@OmapGpioIo|
  01e88	00000000	 DCD         |?OmapGpioGetSystemIrq@@YAKPAXI@Z|
  01e8c		 |$LN93@OmapGpioIo|
  01e8c	00000000	 DCD         |?OmapGpioInterruptDone@@YAXPAXKK@Z|
  01e90		 |$LN94@OmapGpioIo|
  01e90	00000000	 DCD         |?OmapGpioInterruptDisable@@YAXPAXKK@Z|
  01e94		 |$LN95@OmapGpioIo|
  01e94	00000000	 DCD         |?OmapGpioInterruptMask@@YAXPAXKKH@Z|
  01e98		 |$LN96@OmapGpioIo|
  01e98	00000000	 DCD         |?OmapGpioInterruptInitialize@@YAHPAXKPAK0@Z|
  01e9c		 |$LN97@OmapGpioIo|
  01e9c	00000000	 DCD         |?OmapGpioPulldown@@YAHPAXII@Z|
  01ea0		 |$LN98@OmapGpioIo|
  01ea0	00000000	 DCD         |?OmapGpioPullup@@YAHPAXII@Z|
  01ea4		 |$LN99@OmapGpioIo|
  01ea4	00000000	 DCD         |?OmapGpioGetMode@@YAKPAXI@Z|
  01ea8		 |$LN100@OmapGpioIo|
  01ea8	00000000	 DCD         |?OmapGpioSetMode@@YAHPAXII@Z|
  01eac		 |$LN101@OmapGpioIo|
  01eac	00000000	 DCD         |?OmapGpioGetBit@@YAKPAXI@Z|
  01eb0		 |$LN102@OmapGpioIo|
  01eb0	00000000	 DCD         |?OmapGpioClrBit@@YAHPAXI@Z|
  01eb4		 |$LN103@OmapGpioIo|
  01eb4	00000000	 DCD         |?OmapGpioSetBit@@YAHPAXI@Z|
  01eb8		 |$LN104@OmapGpioIo|
  01eb8	00000000	 DCD         |DEVICE_IFC_GPIO_GUID|
  01ebc		 |$LN105@OmapGpioIo|
  01ebc	00000000	 DCD         |??_C@_1OG@DMBHACEF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@|
  01ec0		 |$LN106@OmapGpioIo|
  01ec0	00220c1c	 DCD         0x220c1c
  01ec4		 |$LN107@OmapGpioIo|
  01ec4	00220c24	 DCD         0x220c24
  01ec8		 |$LN108@OmapGpioIo|
  01ec8	00220c0c	 DCD         0x220c0c
  01ecc		 |$LN109@OmapGpioIo|
  01ecc	00220c04	 DCD         0x220c04
  01ed0		 |$LN110@OmapGpioIo|
  01ed0	00220c14	 DCD         0x220c14
  01ed4		 |$LN111@OmapGpioIo|
  01ed4	00000000	 DCD         |??_C@_1HA@IINJOBHJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr@|
  01ed8		 |$LN112@OmapGpioIo|
  01ed8	11223344	 DCD         0x11223344
  01edc		 |$LN113@OmapGpioIo|
  01edc	00000000	 DCD         |??_C@_1IK@IBGGEBD@?$AA?$CL?$AAO?$AAm?$AAa?$AAp?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@|
  01ee0		 |$M37768|

			 ENDP  ; |?OmapGpioIoControl@@YAHPAXIPAEI1IPAK@Z|, OmapGpioIoControl

	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37806| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M37803|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00008	e3a0000c	 mov         r0, #0xC
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 375  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37804|

			 ENDP  ; |GetCurrentProcessId|

	IMPORT	|memcmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T37816| DCD	|$LN7@IsEqualGUI|
	DCD	0x40001704
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsEqualGUID@@YAHABU_GUID@@0@Z| PROC	; IsEqualGUID

; 493  : {

  00000		 |$LN7@IsEqualGUI|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37813|

; 494  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00010	e3a02010	 mov         r2, #0x10
  00014	e59d1018	 ldr         r1, [sp, #0x18]
  00018	e59d0014	 ldr         r0, [sp, #0x14]
  0001c	eb000000	 bl          memcmp
  00020	e58d0004	 str         r0, [sp, #4]
  00024	e59d3004	 ldr         r3, [sp, #4]
  00028	e3530000	 cmp         r3, #0
  0002c	1a000002	 bne         |$LN3@IsEqualGUI|
  00030	e3a03001	 mov         r3, #1
  00034	e58d3008	 str         r3, [sp, #8]
  00038	ea000001	 b           |$LN4@IsEqualGUI|
  0003c		 |$LN3@IsEqualGUI|
  0003c	e3a03000	 mov         r3, #0
  00040	e58d3008	 str         r3, [sp, #8]
  00044		 |$LN4@IsEqualGUI|
  00044	e59d3008	 ldr         r3, [sp, #8]
  00048	e58d3000	 str         r3, [sp]

; 495  : }

  0004c	e59d0000	 ldr         r0, [sp]
  00050	e28dd00c	 add         sp, sp, #0xC
  00054	e89d6000	 ldmia       sp, {sp, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M37814|

			 ENDP  ; |?IsEqualGUID@@YAHABU_GUID@@0@Z|, IsEqualGUID


  00060			 AREA	 |.pdata|, PDATA
|$T37827| DCD	|$LN14@SetGpioBan|
	DCD	0x40007b04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\omap_gpio\omap35xx_gpio.cpp

  01ee0			 AREA	 |.text|, CODE, ARM

  01ee0		 |?SetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z| PROC ; SetGpioBankPowerState

; 155  : {

  01ee0		 |$LN14@SetGpioBan|
  01ee0	e1a0c00d	 mov         r12, sp
  01ee4	e92d0007	 stmdb       sp!, {r0 - r2}
  01ee8	e92d5000	 stmdb       sp!, {r12, lr}
  01eec	e24dd014	 sub         sp, sp, #0x14
  01ef0		 |$M37824|

; 156  :     // determine GPIO bank
; 157  :     UINT bit = GPIO_BIT(id);

  01ef0	e59d3020	 ldr         r3, [sp, #0x20]
  01ef4	e203301f	 and         r3, r3, #0x1F
  01ef8	e58d3008	 str         r3, [sp, #8]

; 158  :     UINT bank = GPIO_BANK(id);

  01efc	e59d3020	 ldr         r3, [sp, #0x20]
  01f00	e1a032a3	 mov         r3, r3, lsr #5
  01f04	e58d3000	 str         r3, [sp]

; 159  :     UINT prevPowerState = pDevice->bank[bank].powerEnabled;

  01f08	e59d301c	 ldr         r3, [sp, #0x1C]
  01f0c	e283000c	 add         r0, r3, #0xC
  01f10	e59d1000	 ldr         r1, [sp]
  01f14	e3a03020	 mov         r3, #0x20
  01f18	e0020391	 mul         r2, r1, r3
  01f1c	e5903000	 ldr         r3, [r0]
  01f20	e0833002	 add         r3, r3, r2
  01f24	e5933000	 ldr         r3, [r3]
  01f28	e58d3004	 str         r3, [sp, #4]

; 160  : 
; 161  :     if (state < D3)

  01f2c	e59d3024	 ldr         r3, [sp, #0x24]
  01f30	e3530003	 cmp         r3, #3
  01f34	aa000012	 bge         |$LN5@SetGpioBan|

; 162  :     {
; 163  :         pDevice->bank[bank].powerEnabled |= bit;

  01f38	e59d301c	 ldr         r3, [sp, #0x1C]
  01f3c	e283000c	 add         r0, r3, #0xC
  01f40	e59d1000	 ldr         r1, [sp]
  01f44	e3a03020	 mov         r3, #0x20
  01f48	e0020391	 mul         r2, r1, r3
  01f4c	e5903000	 ldr         r3, [r0]
  01f50	e0833002	 add         r3, r3, r2
  01f54	e5932000	 ldr         r2, [r3]
  01f58	e59d3008	 ldr         r3, [sp, #8]
  01f5c	e182e003	 orr         lr, r2, r3
  01f60	e59d301c	 ldr         r3, [sp, #0x1C]
  01f64	e283000c	 add         r0, r3, #0xC
  01f68	e59d1000	 ldr         r1, [sp]
  01f6c	e3a03020	 mov         r3, #0x20
  01f70	e0020391	 mul         r2, r1, r3
  01f74	e5903000	 ldr         r3, [r0]
  01f78	e0833002	 add         r3, r3, r2
  01f7c	e583e000	 str         lr, [r3]

; 164  :     }
; 165  :     else

  01f80	ea000012	 b           |$LN4@SetGpioBan|
  01f84		 |$LN5@SetGpioBan|

; 166  :     {
; 167  :         pDevice->bank[bank].powerEnabled &= ~bit;

  01f84	e59d301c	 ldr         r3, [sp, #0x1C]
  01f88	e283000c	 add         r0, r3, #0xC
  01f8c	e59d1000	 ldr         r1, [sp]
  01f90	e3a03020	 mov         r3, #0x20
  01f94	e0020391	 mul         r2, r1, r3
  01f98	e5903000	 ldr         r3, [r0]
  01f9c	e0831002	 add         r1, r3, r2
  01fa0	e59d3008	 ldr         r3, [sp, #8]
  01fa4	e1e02003	 mvn         r2, r3
  01fa8	e5913000	 ldr         r3, [r1]
  01fac	e003e002	 and         lr, r3, r2
  01fb0	e59d301c	 ldr         r3, [sp, #0x1C]
  01fb4	e283000c	 add         r0, r3, #0xC
  01fb8	e59d1000	 ldr         r1, [sp]
  01fbc	e3a03020	 mov         r3, #0x20
  01fc0	e0020391	 mul         r2, r1, r3
  01fc4	e5903000	 ldr         r3, [r0]
  01fc8	e0833002	 add         r3, r3, r2
  01fcc	e583e000	 str         lr, [r3]
  01fd0		 |$LN4@SetGpioBan|

; 168  :     }
; 169  : 
; 170  :     // check if power needs to be enabled/disabled for the gpio bank
; 171  :     if (!prevPowerState != !pDevice->bank[bank].powerEnabled)

  01fd0	e59d3004	 ldr         r3, [sp, #4]
  01fd4	e3530000	 cmp         r3, #0
  01fd8	1a000002	 bne         |$LN8@SetGpioBan|
  01fdc	e3a03001	 mov         r3, #1
  01fe0	e58d300c	 str         r3, [sp, #0xC]
  01fe4	ea000001	 b           |$LN9@SetGpioBan|
  01fe8		 |$LN8@SetGpioBan|
  01fe8	e3a03000	 mov         r3, #0
  01fec	e58d300c	 str         r3, [sp, #0xC]
  01ff0		 |$LN9@SetGpioBan|
  01ff0	e59d301c	 ldr         r3, [sp, #0x1C]
  01ff4	e283000c	 add         r0, r3, #0xC
  01ff8	e59d1000	 ldr         r1, [sp]
  01ffc	e3a03020	 mov         r3, #0x20
  02000	e0020391	 mul         r2, r1, r3
  02004	e5903000	 ldr         r3, [r0]
  02008	e0833002	 add         r3, r3, r2
  0200c	e5933000	 ldr         r3, [r3]
  02010	e3530000	 cmp         r3, #0
  02014	1a000002	 bne         |$LN10@SetGpioBan|
  02018	e3a03001	 mov         r3, #1
  0201c	e58d3010	 str         r3, [sp, #0x10]
  02020	ea000001	 b           |$LN11@SetGpioBan|
  02024		 |$LN10@SetGpioBan|
  02024	e3a03000	 mov         r3, #0
  02028	e58d3010	 str         r3, [sp, #0x10]
  0202c		 |$LN11@SetGpioBan|
  0202c	e59d200c	 ldr         r2, [sp, #0xC]
  02030	e59d3010	 ldr         r3, [sp, #0x10]
  02034	e1520003	 cmp         r2, r3
  02038	0a000020	 beq         |$LN3@SetGpioBan|

; 172  :     {
; 173  :         if (pDevice->bank[bank].powerEnabled == 0)

  0203c	e59d301c	 ldr         r3, [sp, #0x1C]
  02040	e283000c	 add         r0, r3, #0xC
  02044	e59d1000	 ldr         r1, [sp]
  02048	e3a03020	 mov         r3, #0x20
  0204c	e0020391	 mul         r2, r1, r3
  02050	e5903000	 ldr         r3, [r0]
  02054	e0833002	 add         r3, r3, r2
  02058	e5933000	 ldr         r3, [r3]
  0205c	e3530000	 cmp         r3, #0
  02060	1a00000b	 bne         |$LN2@SetGpioBan|

; 174  :         {
; 175  :             EnableDeviceClocks(pDevice->bank[bank].DeviceID, FALSE);

  02064	e3a01000	 mov         r1, #0
  02068	e59d301c	 ldr         r3, [sp, #0x1C]
  0206c	e283e00c	 add         lr, r3, #0xC
  02070	e59d0000	 ldr         r0, [sp]
  02074	e3a03020	 mov         r3, #0x20
  02078	e0020390	 mul         r2, r0, r3
  0207c	e59e3000	 ldr         r3, [lr]
  02080	e0833002	 add         r3, r3, r2
  02084	e283301c	 add         r3, r3, #0x1C
  02088	e5930000	 ldr         r0, [r3]
  0208c	eb000000	 bl          EnableDeviceClocks

; 176  :         }
; 177  :         else

  02090	ea00000a	 b           |$LN1@SetGpioBan|
  02094		 |$LN2@SetGpioBan|

; 178  :         {
; 179  :             EnableDeviceClocks(pDevice->bank[bank].DeviceID, TRUE);

  02094	e3a01001	 mov         r1, #1
  02098	e59d301c	 ldr         r3, [sp, #0x1C]
  0209c	e283e00c	 add         lr, r3, #0xC
  020a0	e59d0000	 ldr         r0, [sp]
  020a4	e3a03020	 mov         r3, #0x20
  020a8	e0020390	 mul         r2, r0, r3
  020ac	e59e3000	 ldr         r3, [lr]
  020b0	e0833002	 add         r3, r3, r2
  020b4	e283301c	 add         r3, r3, #0x1C
  020b8	e5930000	 ldr         r0, [r3]
  020bc	eb000000	 bl          EnableDeviceClocks
  020c0		 |$LN1@SetGpioBan|
  020c0		 |$LN3@SetGpioBan|

; 180  :         }
; 181  :     }
; 182  : }

  020c0	e28dd014	 add         sp, sp, #0x14
  020c4	e89d6000	 ldmia       sp, {sp, lr}
  020c8	e12fff1e	 bx          lr
  020cc		 |$M37825|

			 ENDP  ; |?SetGpioBankPowerState@@YAXPAUOmapGpioDevice_t@@IW4_CEDEVICE_POWER_STATE@@@Z|, SetGpioBankPowerState

	IMPORT	|BSPGetGpioIrq|

  00068			 AREA	 |.pdata|, PDATA
|$T37833| DCD	|$LN5@OmapGpioGe@3|
	DCD	0x40000d04
; Function compile flags: /Odtp

  020cc			 AREA	 |.text|, CODE, ARM

  020cc		 |?OmapGpioGetSystemIrq@@YAKPAXI@Z| PROC ; OmapGpioGetSystemIrq

; 1258 : {

  020cc		 |$LN5@OmapGpioGe@3|
  020cc	e1a0c00d	 mov         r12, sp
  020d0	e92d0003	 stmdb       sp!, {r0, r1}
  020d4	e92d5000	 stmdb       sp!, {r12, lr}
  020d8	e24dd008	 sub         sp, sp, #8
  020dc		 |$M37830|

; 1259 :     UNREFERENCED_PARAMETER(hContext);
; 1260 : 	//get the interrupt number associated with this pin
; 1261 :     return BSPGetGpioIrq(id);

  020dc	e59d0014	 ldr         r0, [sp, #0x14]
  020e0	eb000000	 bl          BSPGetGpioIrq
  020e4	e58d0004	 str         r0, [sp, #4]
  020e8	e59d3004	 ldr         r3, [sp, #4]
  020ec	e58d3000	 str         r3, [sp]

; 1262 : }

  020f0	e59d0000	 ldr         r0, [sp]
  020f4	e28dd008	 add         sp, sp, #8
  020f8	e89d6000	 ldmia       sp, {sp, lr}
  020fc	e12fff1e	 bx          lr
  02100		 |$M37831|

			 ENDP  ; |?OmapGpioGetSystemIrq@@YAKPAXI@Z|, OmapGpioGetSystemIrq

	IMPORT	|InterruptInitialize|
	IMPORT	|KernelIoControl|

  00070			 AREA	 |.pdata|, PDATA
|$T37843| DCD	|$LN12@OmapGpioIn@2|
	DCD	0x40005504
; Function compile flags: /Odtp

  02100			 AREA	 |.text|, CODE, ARM

  02100		 |?OmapGpioInterruptInitialize@@YAHPAXKPAK0@Z| PROC ; OmapGpioInterruptInitialize

; 1270 : {

  02100		 |$LN12@OmapGpioIn@2|
  02100	e1a0c00d	 mov         r12, sp
  02104	e92d000f	 stmdb       sp!, {r0 - r3}
  02108	e92d5000	 stmdb       sp!, {r12, lr}
  0210c	e24dd030	 sub         sp, sp, #0x30
  02110		 |$M37840|

; 1271 :     DWORD logintr;
; 1272 :     OmapGpioDevice_t *pDevice = (OmapGpioDevice_t*)hContext;

  02110	e59d3038	 ldr         r3, [sp, #0x38]
  02114	e58d3008	 str         r3, [sp, #8]

; 1273 : 
; 1274 :     if ((pDevice == NULL) || (sysintr == NULL) || (hEvent == NULL) || (id >= pDevice->nbBanks*32))

  02118	e59d3008	 ldr         r3, [sp, #8]
  0211c	e3530000	 cmp         r3, #0
  02120	0a00000d	 beq         |$LN6@OmapGpioIn@2|
  02124	e59d3040	 ldr         r3, [sp, #0x40]
  02128	e3530000	 cmp         r3, #0
  0212c	0a00000a	 beq         |$LN6@OmapGpioIn@2|
  02130	e59d3044	 ldr         r3, [sp, #0x44]
  02134	e3530000	 cmp         r3, #0
  02138	0a000007	 beq         |$LN6@OmapGpioIn@2|
  0213c	e59d3008	 ldr         r3, [sp, #8]
  02140	e2833004	 add         r3, r3, #4
  02144	e5931000	 ldr         r1, [r3]
  02148	e3a03020	 mov         r3, #0x20
  0214c	e0020391	 mul         r2, r1, r3
  02150	e59d303c	 ldr         r3, [sp, #0x3C]
  02154	e1530002	 cmp         r3, r2
  02158	3a000002	 bcc         |$LN7@OmapGpioIn@2|
  0215c		 |$LN6@OmapGpioIn@2|

; 1275 :     {
; 1276 :         return FALSE;

  0215c	e3a03000	 mov         r3, #0
  02160	e58d3010	 str         r3, [sp, #0x10]
  02164	ea000034	 b           |$LN8@OmapGpioIn@2|
  02168		 |$LN7@OmapGpioIn@2|

; 1277 :     }
; 1278 :     
; 1279 :     *sysintr = (DWORD) SYSINTR_UNDEFINED;

  02168	e59d2040	 ldr         r2, [sp, #0x40]
  0216c	e3e03000	 mvn         r3, #0
  02170	e5823000	 str         r3, [r2]

; 1280 : 
; 1281 :     //get the interrupt number associated with this pin
; 1282 :     logintr = BSPGetGpioIrq(id);

  02174	e59d003c	 ldr         r0, [sp, #0x3C]
  02178	eb000000	 bl          BSPGetGpioIrq
  0217c	e58d0024	 str         r0, [sp, #0x24]
  02180	e59d3024	 ldr         r3, [sp, #0x24]
  02184	e58d300c	 str         r3, [sp, #0xC]

; 1283 : 
; 1284 :     //Get a valid sysintr for this interrupt
; 1285 :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR,&logintr,sizeof(logintr),sysintr,sizeof(*sysintr),NULL))

  02188	e3a03000	 mov         r3, #0
  0218c	e58d3004	 str         r3, [sp, #4]
  02190	e3a03004	 mov         r3, #4
  02194	e58d3000	 str         r3, [sp]
  02198	e59d3040	 ldr         r3, [sp, #0x40]
  0219c	e3a02004	 mov         r2, #4
  021a0	e28d100c	 add         r1, sp, #0xC
  021a4	e59f00a4	 ldr         r0, [pc, #0xA4]
  021a8	eb000000	 bl          KernelIoControl
  021ac	e58d0028	 str         r0, [sp, #0x28]
  021b0	e59d3028	 ldr         r3, [sp, #0x28]
  021b4	e3530000	 cmp         r3, #0
  021b8	1a000001	 bne         |$LN5@OmapGpioIn@2|
  021bc	ea00000f	 b           |$LN4@OmapGpioIn@2|

; 1286 :     {
; 1287 :         goto failed;

  021c0	ea00000e	 b           |$failed$37513|
  021c4		 |$LN5@OmapGpioIn@2|

; 1288 :     }
; 1289 : 
; 1290 :     // Initialize the interrupt
; 1291 :     if (InterruptInitialize(*sysintr,hEvent,NULL,0) == FALSE)

  021c4	e3a03000	 mov         r3, #0
  021c8	e3a02000	 mov         r2, #0
  021cc	e59d1044	 ldr         r1, [sp, #0x44]
  021d0	e59d0040	 ldr         r0, [sp, #0x40]
  021d4	e5900000	 ldr         r0, [r0]
  021d8	eb000000	 bl          InterruptInitialize
  021dc	e58d002c	 str         r0, [sp, #0x2C]
  021e0	e59d302c	 ldr         r3, [sp, #0x2C]
  021e4	e3530000	 cmp         r3, #0
  021e8	1a000001	 bne         |$LN3@OmapGpioIn@2|
  021ec	ea000003	 b           |$LN2@OmapGpioIn@2|

; 1292 :     {
; 1293 :         goto failed;

  021f0	ea000002	 b           |$failed$37513|
  021f4		 |$LN3@OmapGpioIn@2|

; 1294 :     }
; 1295 :     return TRUE;

  021f4	e3a03001	 mov         r3, #1
  021f8	e58d3010	 str         r3, [sp, #0x10]
  021fc	ea00000e	 b           |$LN8@OmapGpioIn@2|
  02200		 |$LN2@OmapGpioIn@2|
  02200		 |$LN4@OmapGpioIn@2|
  02200		 |$failed$37513|

; 1296 : 
; 1297 : failed:
; 1298 :     if (*sysintr != SYSINTR_UNDEFINED)

  02200	e59d3040	 ldr         r3, [sp, #0x40]
  02204	e5933000	 ldr         r3, [r3]
  02208	e3730001	 cmn         r3, #1
  0220c	0a000008	 beq         |$LN1@OmapGpioIn@2|

; 1299 :     {
; 1300 :         KernelIoControl(IOCTL_HAL_RELEASE_SYSINTR,sysintr,sizeof(*sysintr),NULL,0,NULL);

  02210	e3a03000	 mov         r3, #0
  02214	e58d3004	 str         r3, [sp, #4]
  02218	e3a03000	 mov         r3, #0
  0221c	e58d3000	 str         r3, [sp]
  02220	e3a03000	 mov         r3, #0
  02224	e3a02004	 mov         r2, #4
  02228	e59d1040	 ldr         r1, [sp, #0x40]
  0222c	e59f0018	 ldr         r0, [pc, #0x18]
  02230	eb000000	 bl          KernelIoControl
  02234		 |$LN1@OmapGpioIn@2|

; 1301 :     }
; 1302 : 
; 1303 :     return FALSE;

  02234	e3a03000	 mov         r3, #0
  02238	e58d3010	 str         r3, [sp, #0x10]
  0223c		 |$LN8@OmapGpioIn@2|

; 1304 : }

  0223c	e59d0010	 ldr         r0, [sp, #0x10]
  02240	e28dd030	 add         sp, sp, #0x30
  02244	e89d6000	 ldmia       sp, {sp, lr}
  02248	e12fff1e	 bx          lr
  0224c		 |$LN13@OmapGpioIn@2|
  0224c		 |$LN14@OmapGpioIn@2|
  0224c	010100d8	 DCD         0x10100d8
  02250		 |$LN15@OmapGpioIn@2|
  02250	01010098	 DCD         0x1010098
  02254		 |$M37841|

			 ENDP  ; |?OmapGpioInterruptInitialize@@YAHPAXKPAK0@Z|, OmapGpioInterruptInitialize

	IMPORT	|InterruptMask|

  00078			 AREA	 |.pdata|, PDATA
|$T37851| DCD	|$LN5@OmapGpioIn@3|
	DCD	0x40000803
; Function compile flags: /Odtp

  02254			 AREA	 |.text|, CODE, ARM

  02254		 |?OmapGpioInterruptMask@@YAXPAXKKH@Z| PROC ; OmapGpioInterruptMask

; 1312 : {

  02254		 |$LN5@OmapGpioIn@3|
  02254	e1a0c00d	 mov         r12, sp
  02258	e92d000f	 stmdb       sp!, {r0 - r3}
  0225c	e92d5000	 stmdb       sp!, {r12, lr}
  02260		 |$M37848|

; 1313 :     UNREFERENCED_PARAMETER(hContext);
; 1314 :     UNREFERENCED_PARAMETER(id);
; 1315 : 
; 1316 :     InterruptMask(sysintr,fDisable);

  02260	e59d1014	 ldr         r1, [sp, #0x14]
  02264	e59d0010	 ldr         r0, [sp, #0x10]
  02268	eb000000	 bl          InterruptMask

; 1317 : }

  0226c	e89d6000	 ldmia       sp, {sp, lr}
  02270	e12fff1e	 bx          lr
  02274		 |$M37849|

			 ENDP  ; |?OmapGpioInterruptMask@@YAXPAXKKH@Z|, OmapGpioInterruptMask

	IMPORT	|InterruptDisable|

  00080			 AREA	 |.pdata|, PDATA
|$T37858| DCD	|$LN6@OmapGpioIn@4|
	DCD	0x40001604
; Function compile flags: /Odtp

  02274			 AREA	 |.text|, CODE, ARM

  02274		 |?OmapGpioInterruptDisable@@YAXPAXKK@Z| PROC ; OmapGpioInterruptDisable

; 1325 : {

  02274		 |$LN6@OmapGpioIn@4|
  02274	e1a0c00d	 mov         r12, sp
  02278	e92d000f	 stmdb       sp!, {r0 - r3}
  0227c	e92d5000	 stmdb       sp!, {r12, lr}
  02280	e24dd010	 sub         sp, sp, #0x10
  02284		 |$M37855|

; 1326 :     UNREFERENCED_PARAMETER(hContext);
; 1327 :     UNREFERENCED_PARAMETER(id);
; 1328 : 
; 1329 :     InterruptDisable(sysintr);

  02284	e59d0020	 ldr         r0, [sp, #0x20]
  02288	eb000000	 bl          InterruptDisable

; 1330 : 
; 1331 :     if (sysintr != SYSINTR_UNDEFINED)

  0228c	e59d3020	 ldr         r3, [sp, #0x20]
  02290	e3730001	 cmn         r3, #1
  02294	0a000008	 beq         |$LN1@OmapGpioIn@4|

; 1332 :     {
; 1333 :         KernelIoControl(IOCTL_HAL_RELEASE_SYSINTR,&sysintr,sizeof(sysintr),NULL,0,NULL);

  02298	e3a03000	 mov         r3, #0
  0229c	e58d3004	 str         r3, [sp, #4]
  022a0	e3a03000	 mov         r3, #0
  022a4	e58d3000	 str         r3, [sp]
  022a8	e3a03000	 mov         r3, #0
  022ac	e3a02004	 mov         r2, #4
  022b0	e28d1020	 add         r1, sp, #0x20
  022b4	e59f000c	 ldr         r0, [pc, #0xC]
  022b8	eb000000	 bl          KernelIoControl
  022bc		 |$LN1@OmapGpioIn@4|

; 1334 :     }
; 1335 : }

  022bc	e28dd010	 add         sp, sp, #0x10
  022c0	e89d6000	 ldmia       sp, {sp, lr}
  022c4	e12fff1e	 bx          lr
  022c8		 |$LN7@OmapGpioIn@4|
  022c8		 |$LN8@OmapGpioIn@4|
  022c8	010100d8	 DCD         0x10100d8
  022cc		 |$M37856|

			 ENDP  ; |?OmapGpioInterruptDisable@@YAXPAXKK@Z|, OmapGpioInterruptDisable

	IMPORT	|InterruptDone|

  00088			 AREA	 |.pdata|, PDATA
|$T37865| DCD	|$LN5@OmapGpioIn@5|
	DCD	0x40000703
; Function compile flags: /Odtp

  022cc			 AREA	 |.text|, CODE, ARM

  022cc		 |?OmapGpioInterruptDone@@YAXPAXKK@Z| PROC ; OmapGpioInterruptDone

; 1343 : {

  022cc		 |$LN5@OmapGpioIn@5|
  022cc	e1a0c00d	 mov         r12, sp
  022d0	e92d0007	 stmdb       sp!, {r0 - r2}
  022d4	e92d5000	 stmdb       sp!, {r12, lr}
  022d8		 |$M37862|

; 1344 :     UNREFERENCED_PARAMETER(hContext);
; 1345 :     UNREFERENCED_PARAMETER(id);
; 1346 :     InterruptDone(sysintr);

  022d8	e59d0010	 ldr         r0, [sp, #0x10]
  022dc	eb000000	 bl          InterruptDone

; 1347 : }

  022e0	e89d6000	 ldmia       sp, {sp, lr}
  022e4	e12fff1e	 bx          lr
  022e8		 |$M37863|

			 ENDP  ; |?OmapGpioInterruptDone@@YAXPAXKK@Z|, OmapGpioInterruptDone


  00090			 AREA	 |.pdata|, PDATA
|$T37875| DCD	|$LN7@OmapGpioIn@6|
	DCD	0x40001e04
; Function compile flags: /Odtp

  022e8			 AREA	 |.text|, CODE, ARM

  022e8		 |?OmapGpioInterruptWakeUp@@YAHPAXKKH@Z| PROC ; OmapGpioInterruptWakeUp

; 1357 : {

  022e8		 |$LN7@OmapGpioIn@6|
  022e8	e1a0c00d	 mov         r12, sp
  022ec	e92d000f	 stmdb       sp!, {r0 - r3}
  022f0	e92d5000	 stmdb       sp!, {r12, lr}
  022f4	e24dd01c	 sub         sp, sp, #0x1C
  022f8		 |$M37872|

; 1358 :     UNREFERENCED_PARAMETER(hContext);
; 1359 :     UNREFERENCED_PARAMETER(id);
; 1360 :     return KernelIoControl(fEnabled ? IOCTL_HAL_ENABLE_WAKE : IOCTL_HAL_DISABLE_WAKE, 
; 1361 :         &sysintr,sizeof(sysintr), NULL, 0, NULL );

  022f8	e59d3030	 ldr         r3, [sp, #0x30]
  022fc	e3530000	 cmp         r3, #0
  02300	0a000002	 beq         |$LN3@OmapGpioIn@6|
  02304	e59f3050	 ldr         r3, [pc, #0x50]
  02308	e58d3014	 str         r3, [sp, #0x14]
  0230c	ea000001	 b           |$LN4@OmapGpioIn@6|
  02310		 |$LN3@OmapGpioIn@6|
  02310	e59f3040	 ldr         r3, [pc, #0x40]
  02314	e58d3014	 str         r3, [sp, #0x14]
  02318		 |$LN4@OmapGpioIn@6|
  02318	e3a03000	 mov         r3, #0
  0231c	e58d3004	 str         r3, [sp, #4]
  02320	e3a03000	 mov         r3, #0
  02324	e58d3000	 str         r3, [sp]
  02328	e3a03000	 mov         r3, #0
  0232c	e3a02004	 mov         r2, #4
  02330	e28d102c	 add         r1, sp, #0x2C
  02334	e59d0014	 ldr         r0, [sp, #0x14]
  02338	eb000000	 bl          KernelIoControl
  0233c	e58d0018	 str         r0, [sp, #0x18]
  02340	e59d3018	 ldr         r3, [sp, #0x18]
  02344	e58d3010	 str         r3, [sp, #0x10]

; 1362 : }

  02348	e59d0010	 ldr         r0, [sp, #0x10]
  0234c	e28dd01c	 add         sp, sp, #0x1C
  02350	e89d6000	 ldmia       sp, {sp, lr}
  02354	e12fff1e	 bx          lr
  02358		 |$LN8@OmapGpioIn@6|
  02358		 |$LN9@OmapGpioIn@6|
  02358	010100a4	 DCD         0x10100a4
  0235c		 |$LN10@OmapGpioIn@6|
  0235c	010100a0	 DCD         0x10100a0
  02360		 |$M37873|

			 ENDP  ; |?OmapGpioInterruptWakeUp@@YAHPAXKKH@Z|, OmapGpioInterruptWakeUp

	EXPORT	|?GIO_Init@@YAKPBGK@Z|			; GIO_Init

  00098			 AREA	 |.pdata|, PDATA
|$T37884| DCD	|$LN7@GIO_Init|
	DCD	0x40001b04
; Function compile flags: /Odtp

  02360			 AREA	 |.text|, CODE, ARM

  02360		 |?GIO_Init@@YAKPBGK@Z| PROC		; GIO_Init

; 1371 : {

  02360		 |$LN7@GIO_Init|
  02360	e1a0c00d	 mov         r12, sp
  02364	e92d0003	 stmdb       sp!, {r0, r1}
  02368	e92d5000	 stmdb       sp!, {r12, lr}
  0236c	e24dd014	 sub         sp, sp, #0x14
  02370		 |$M37881|

; 1372 :     HANDLE devCtxt;
; 1373 :     UINT count;
; 1374 : 
; 1375 :     UNREFERENCED_PARAMETER(dwBusContext);
; 1376 : 
; 1377 :     if (OmapGpioInit(pContext,&devCtxt,&count))

  02370	e28d2000	 add         r2, sp, #0
  02374	e28d1004	 add         r1, sp, #4
  02378	e59d001c	 ldr         r0, [sp, #0x1C]
  0237c	eb000000	 bl          |?OmapGpioInit@@YAHPBGPAPAXPAI@Z|
  02380	e58d000c	 str         r0, [sp, #0xC]
  02384	e59d300c	 ldr         r3, [sp, #0xC]
  02388	e3530000	 cmp         r3, #0
  0238c	0a000008	 beq         |$LN2@GIO_Init|

; 1378 :     {
; 1379 :         if (OmapGpioPostInit(devCtxt))

  02390	e59d0004	 ldr         r0, [sp, #4]
  02394	eb000000	 bl          |?OmapGpioPostInit@@YAHPAX@Z|
  02398	e58d0010	 str         r0, [sp, #0x10]
  0239c	e59d3010	 ldr         r3, [sp, #0x10]
  023a0	e3530000	 cmp         r3, #0
  023a4	0a000002	 beq         |$LN1@GIO_Init|

; 1380 :         {
; 1381 :             return (DWORD) devCtxt;

  023a8	e59d3004	 ldr         r3, [sp, #4]
  023ac	e58d3008	 str         r3, [sp, #8]
  023b0	ea000001	 b           |$LN3@GIO_Init|
  023b4		 |$LN1@GIO_Init|
  023b4		 |$LN2@GIO_Init|

; 1382 :         }
; 1383 :     }
; 1384 :     return NULL;

  023b4	e3a03000	 mov         r3, #0
  023b8	e58d3008	 str         r3, [sp, #8]
  023bc		 |$LN3@GIO_Init|

; 1385 : }

  023bc	e59d0008	 ldr         r0, [sp, #8]
  023c0	e28dd014	 add         sp, sp, #0x14
  023c4	e89d6000	 ldmia       sp, {sp, lr}
  023c8	e12fff1e	 bx          lr
  023cc		 |$M37882|

			 ENDP  ; |?GIO_Init@@YAKPBGK@Z|, GIO_Init

	EXPORT	|?GIO_Deinit@@YAHK@Z|			; GIO_Deinit

  000a0			 AREA	 |.pdata|, PDATA
|$T37890| DCD	|$LN5@GIO_Deinit|
	DCD	0x40000d04
; Function compile flags: /Odtp

  023cc			 AREA	 |.text|, CODE, ARM

  023cc		 |?GIO_Deinit@@YAHK@Z| PROC		; GIO_Deinit

; 1390 : {

  023cc		 |$LN5@GIO_Deinit|
  023cc	e1a0c00d	 mov         r12, sp
  023d0	e92d0001	 stmdb       sp!, {r0}
  023d4	e92d5000	 stmdb       sp!, {r12, lr}
  023d8	e24dd008	 sub         sp, sp, #8
  023dc		 |$M37887|

; 1391 :     return OmapGpioDeinit((HANDLE)hDeviceContext);

  023dc	e59d0010	 ldr         r0, [sp, #0x10]
  023e0	eb000000	 bl          |?OmapGpioDeinit@@YAHPAX@Z|
  023e4	e58d0004	 str         r0, [sp, #4]
  023e8	e59d3004	 ldr         r3, [sp, #4]
  023ec	e58d3000	 str         r3, [sp]

; 1392 : }

  023f0	e59d0000	 ldr         r0, [sp]
  023f4	e28dd008	 add         sp, sp, #8
  023f8	e89d6000	 ldmia       sp, {sp, lr}
  023fc	e12fff1e	 bx          lr
  02400		 |$M37888|

			 ENDP  ; |?GIO_Deinit@@YAHK@Z|, GIO_Deinit

	EXPORT	|?GIO_Open@@YAKKKK@Z|			; GIO_Open

  000a8			 AREA	 |.pdata|, PDATA
|$T37896| DCD	|$LN5@GIO_Open|
	DCD	0x40000a04
; Function compile flags: /Odtp

  02400			 AREA	 |.text|, CODE, ARM

  02400		 |?GIO_Open@@YAKKKK@Z| PROC		; GIO_Open

; 1399 : {

  02400		 |$LN5@GIO_Open|
  02400	e1a0c00d	 mov         r12, sp
  02404	e92d0007	 stmdb       sp!, {r0 - r2}
  02408	e92d5000	 stmdb       sp!, {r12, lr}
  0240c	e24dd004	 sub         sp, sp, #4
  02410		 |$M37893|

; 1400 :     UNREFERENCED_PARAMETER(AccessCode);
; 1401 :     UNREFERENCED_PARAMETER(ShareMode);
; 1402 :     return hDeviceContext;

  02410	e59d300c	 ldr         r3, [sp, #0xC]
  02414	e58d3000	 str         r3, [sp]

; 1403 : }

  02418	e59d0000	 ldr         r0, [sp]
  0241c	e28dd004	 add         sp, sp, #4
  02420	e89d6000	 ldmia       sp, {sp, lr}
  02424	e12fff1e	 bx          lr
  02428		 |$M37894|

			 ENDP  ; |?GIO_Open@@YAKKKK@Z|, GIO_Open

	EXPORT	|?GIO_Close@@YAHK@Z|			; GIO_Close

  000b0			 AREA	 |.pdata|, PDATA
|$T37902| DCD	|$LN5@GIO_Close|
	DCD	0x40000a04
; Function compile flags: /Odtp

  02428			 AREA	 |.text|, CODE, ARM

  02428		 |?GIO_Close@@YAHK@Z| PROC		; GIO_Close

; 1408 : {

  02428		 |$LN5@GIO_Close|
  02428	e1a0c00d	 mov         r12, sp
  0242c	e92d0001	 stmdb       sp!, {r0}
  02430	e92d5000	 stmdb       sp!, {r12, lr}
  02434	e24dd004	 sub         sp, sp, #4
  02438		 |$M37899|

; 1409 :     UNREFERENCED_PARAMETER(hOpenContext);
; 1410 :     return TRUE;

  02438	e3a03001	 mov         r3, #1
  0243c	e58d3000	 str         r3, [sp]

; 1411 : }

  02440	e59d0000	 ldr         r0, [sp]
  02444	e28dd004	 add         sp, sp, #4
  02448	e89d6000	 ldmia       sp, {sp, lr}
  0244c	e12fff1e	 bx          lr
  02450		 |$M37900|

			 ENDP  ; |?GIO_Close@@YAHK@Z|, GIO_Close

	EXPORT	|?GIO_PowerDown@@YAXK@Z|		; GIO_PowerDown

  000b8			 AREA	 |.pdata|, PDATA
|$T37907| DCD	|$LN5@GIO_PowerD|
	DCD	0x40000703
; Function compile flags: /Odtp

  02450			 AREA	 |.text|, CODE, ARM

  02450		 |?GIO_PowerDown@@YAXK@Z| PROC		; GIO_PowerDown

; 1416 : {

  02450		 |$LN5@GIO_PowerD|
  02450	e1a0c00d	 mov         r12, sp
  02454	e92d0001	 stmdb       sp!, {r0}
  02458	e92d5000	 stmdb       sp!, {r12, lr}
  0245c		 |$M37904|

; 1417 :     OmapGpioPowerDown((HANDLE) hDeviceContext);

  0245c	e59d0008	 ldr         r0, [sp, #8]
  02460	eb000000	 bl          |?OmapGpioPowerDown@@YAXPAX@Z|

; 1418 : }

  02464	e89d6000	 ldmia       sp, {sp, lr}
  02468	e12fff1e	 bx          lr
  0246c		 |$M37905|

			 ENDP  ; |?GIO_PowerDown@@YAXK@Z|, GIO_PowerDown


  000c0			 AREA	 |.pdata|, PDATA
|$T37912| DCD	|$LN5@OmapGpioPo@2|
	DCD	0x40000503
; Function compile flags: /Odtp

  0246c			 AREA	 |.text|, CODE, ARM

  0246c		 |?OmapGpioPowerDown@@YAXPAX@Z| PROC	; OmapGpioPowerDown

; 1250 : {

  0246c		 |$LN5@OmapGpioPo@2|
  0246c	e1a0c00d	 mov         r12, sp
  02470	e92d0001	 stmdb       sp!, {r0}
  02474	e92d5000	 stmdb       sp!, {r12, lr}
  02478		 |$M37909|

; 1251 :     UNREFERENCED_PARAMETER(hContext);
; 1252 : }

  02478	e89d6000	 ldmia       sp, {sp, lr}
  0247c	e12fff1e	 bx          lr
  02480		 |$M37910|

			 ENDP  ; |?OmapGpioPowerDown@@YAXPAX@Z|, OmapGpioPowerDown

	EXPORT	|?GIO_PowerUp@@YAXK@Z|			; GIO_PowerUp

  000c8			 AREA	 |.pdata|, PDATA
|$T37917| DCD	|$LN5@GIO_PowerU|
	DCD	0x40000703
; Function compile flags: /Odtp

  02480			 AREA	 |.text|, CODE, ARM

  02480		 |?GIO_PowerUp@@YAXK@Z| PROC		; GIO_PowerUp

; 1422 : {

  02480		 |$LN5@GIO_PowerU|
  02480	e1a0c00d	 mov         r12, sp
  02484	e92d0001	 stmdb       sp!, {r0}
  02488	e92d5000	 stmdb       sp!, {r12, lr}
  0248c		 |$M37914|

; 1423 :     OmapGpioPowerUp((HANDLE) hDeviceContext);

  0248c	e59d0008	 ldr         r0, [sp, #8]
  02490	eb000000	 bl          |?OmapGpioPowerUp@@YAXPAX@Z|

; 1424 : }

  02494	e89d6000	 ldmia       sp, {sp, lr}
  02498	e12fff1e	 bx          lr
  0249c		 |$M37915|

			 ENDP  ; |?GIO_PowerUp@@YAXK@Z|, GIO_PowerUp


  000d0			 AREA	 |.pdata|, PDATA
|$T37922| DCD	|$LN5@OmapGpioPo@3|
	DCD	0x40000503
; Function compile flags: /Odtp

  0249c			 AREA	 |.text|, CODE, ARM

  0249c		 |?OmapGpioPowerUp@@YAXPAX@Z| PROC	; OmapGpioPowerUp

; 1236 : {

  0249c		 |$LN5@OmapGpioPo@3|
  0249c	e1a0c00d	 mov         r12, sp
  024a0	e92d0001	 stmdb       sp!, {r0}
  024a4	e92d5000	 stmdb       sp!, {r12, lr}
  024a8		 |$M37919|

; 1237 :     UNREFERENCED_PARAMETER(hContext);
; 1238 : }

  024a8	e89d6000	 ldmia       sp, {sp, lr}
  024ac	e12fff1e	 bx          lr
  024b0		 |$M37920|

			 ENDP  ; |?OmapGpioPowerUp@@YAXPAX@Z|, OmapGpioPowerUp

	EXPORT	|?GIO_IOControl@@YAHKKPAEK0KPAK@Z|	; GIO_IOControl

  000d8			 AREA	 |.pdata|, PDATA
|$T37931| DCD	|$LN5@GIO_IOCont|
	DCD	0x40001604
; Function compile flags: /Odtp

  024b0			 AREA	 |.text|, CODE, ARM

  024b0		 |?GIO_IOControl@@YAHKKPAEK0KPAK@Z| PROC ; GIO_IOControl

; 1437 : {

  024b0		 |$LN5@GIO_IOCont|
  024b0	e1a0c00d	 mov         r12, sp
  024b4	e92d000f	 stmdb       sp!, {r0 - r3}
  024b8	e92d5000	 stmdb       sp!, {r12, lr}
  024bc	e24dd020	 sub         sp, sp, #0x20
  024c0		 |$M37928|

; 1438 :     return OmapGpioIoControl(
; 1439 :         (HANDLE)hOpenContext,
; 1440 :         dwCode,
; 1441 :         pBufIn,
; 1442 :         dwLenIn,
; 1443 :         pBufOut,
; 1444 :         dwLenOut,
; 1445 :         pdwActualOut 
; 1446 :         );

  024c0	e59d3040	 ldr         r3, [sp, #0x40]
  024c4	e58d3008	 str         r3, [sp, #8]
  024c8	e59d303c	 ldr         r3, [sp, #0x3C]
  024cc	e58d3004	 str         r3, [sp, #4]
  024d0	e59d3038	 ldr         r3, [sp, #0x38]
  024d4	e58d3000	 str         r3, [sp]
  024d8	e59d3034	 ldr         r3, [sp, #0x34]
  024dc	e59d2030	 ldr         r2, [sp, #0x30]
  024e0	e59d102c	 ldr         r1, [sp, #0x2C]
  024e4	e59d0028	 ldr         r0, [sp, #0x28]
  024e8	eb000000	 bl          |?OmapGpioIoControl@@YAHPAXIPAEI1IPAK@Z|
  024ec	e58d001c	 str         r0, [sp, #0x1C]
  024f0	e59d301c	 ldr         r3, [sp, #0x1C]
  024f4	e58d3018	 str         r3, [sp, #0x18]

; 1447 : }

  024f8	e59d0018	 ldr         r0, [sp, #0x18]
  024fc	e28dd020	 add         sp, sp, #0x20
  02500	e89d6000	 ldmia       sp, {sp, lr}
  02504	e12fff1e	 bx          lr
  02508		 |$M37929|

			 ENDP  ; |?GIO_IOControl@@YAHKKPAEK0KPAK@Z|, GIO_IOControl

	END
