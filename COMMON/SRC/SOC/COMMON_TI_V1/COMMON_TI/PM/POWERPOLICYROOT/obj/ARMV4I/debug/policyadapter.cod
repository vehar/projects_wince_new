; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\PM\POWERPOLICYROOT\policyadapter.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"/include:?_factory@?$$singleton@V?$$free_list@$$0GE@Vall"
	DCB	"ocator@ce@@@ce@@$$03V?$$static_allocator@V?$$free_list@$$"
	DCB	"0GE@Vallocator@ce@@@ce@@$$03@2@@ce@@1Ulock_factory@12@A "
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_19DINFBLAK@?$AAN?$AAa?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@PJMPBMAL@?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?Initialize@PolicyAdapter@@QAAHPBG@Z|	; PolicyAdapter::Initialize
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|wcscpy|
	IMPORT	|wcslen|

  00000			 AREA	 |.pdata|, PDATA
|$T36698| DCD	|$LN16@Initialize|
	DCD	0x40007004
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| DCB "D", 0x0, "l", 0x0, "l", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19DINFBLAK@?$AAN?$AAa?$AAm?$AAe?$AA?$AA@| DCB "N", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@PJMPBMAL@?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@| DCB "O", 0x0, "r", 0x0
	DCB	"d", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@PolicyAdapter@@QAAHPBG@Z| PROC ; PolicyAdapter::Initialize

; 41   : {

  00000		 |$LN16@Initialize|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd04c	 sub         sp, sp, #0x4C
  00010		 |$M36695|

; 42   :     LONG code;
; 43   :     DWORD size;
; 44   :     DWORD rc = FALSE;    

  00010	e3a03000	 mov         r3, #0
  00014	e58d3008	 str         r3, [sp, #8]

; 45   :     HKEY hKey = NULL;

  00018	e3a03000	 mov         r3, #0
  0001c	e58d300c	 str         r3, [sp, #0xC]

; 46   : 
; 47   :     // Save device registry key for later use
; 48   :     if (_tcslen(szContext) >= sizeof(m_szRegKey) / sizeof(m_szRegKey[0])) goto cleanUp;

  00020	e59d0058	 ldr         r0, [sp, #0x58]
  00024	eb000000	 bl          wcslen
  00028	e58d0038	 str         r0, [sp, #0x38]
  0002c	e59d3038	 ldr         r3, [sp, #0x38]
  00030	e3530f41	 cmp         r3, #0x41, 30
  00034	3a000001	 bcc         |$LN11@Initialize|
  00038	ea000052	 b           |$LN10@Initialize|
  0003c	ea000051	 b           |$cleanUp$35841|
  00040		 |$LN11@Initialize|

; 49   :     _tcscpy(m_szRegKey, szContext);

  00040	e59d1058	 ldr         r1, [sp, #0x58]
  00044	e59d3054	 ldr         r3, [sp, #0x54]
  00048	e2830f85	 add         r0, r3, #0x85, 30
  0004c	eb000000	 bl          wcscpy

; 50   : 
; 51   :     // Open device registry key
; 52   :     code = ::RegOpenKeyEx(HKEY_LOCAL_MACHINE, szContext, 0, 0, &hKey);

  00050	e28d300c	 add         r3, sp, #0xC
  00054	e58d3000	 str         r3, [sp]
  00058	e3a03000	 mov         r3, #0
  0005c	e3a02000	 mov         r2, #0
  00060	e59d1058	 ldr         r1, [sp, #0x58]
  00064	e3a0010a	 mov         r0, #0xA, 2
  00068	eb000000	 bl          RegOpenKeyExW
  0006c	e58d003c	 str         r0, [sp, #0x3C]
  00070	e59d303c	 ldr         r3, [sp, #0x3C]
  00074	e58d3010	 str         r3, [sp, #0x10]

; 53   :     if (code != ERROR_SUCCESS) goto cleanUp;

  00078	e59d3010	 ldr         r3, [sp, #0x10]
  0007c	e3530000	 cmp         r3, #0
  00080	0a000001	 beq         |$LN9@Initialize|
  00084	ea00003f	 b           |$LN8@Initialize|
  00088	ea00003e	 b           |$cleanUp$35841|
  0008c		 |$LN9@Initialize|

; 54   : 
; 55   :     // read load order
; 56   :     size = sizeof(m_dwOrder);

  0008c	e3a03004	 mov         r3, #4
  00090	e58d3014	 str         r3, [sp, #0x14]

; 57   :     code = RegQueryValueEx(hKey, REGEDIT_POLICY_ORDER, 0, 0, (BYTE*)&m_dwOrder, &size);

  00094	e28d3014	 add         r3, sp, #0x14
  00098	e58d3004	 str         r3, [sp, #4]
  0009c	e59d3054	 ldr         r3, [sp, #0x54]
  000a0	e2833004	 add         r3, r3, #4
  000a4	e58d3000	 str         r3, [sp]
  000a8	e3a03000	 mov         r3, #0
  000ac	e3a02000	 mov         r2, #0
  000b0	e59f1104	 ldr         r1, [pc, #0x104]
  000b4	e59d000c	 ldr         r0, [sp, #0xC]
  000b8	eb000000	 bl          RegQueryValueExW
  000bc	e58d0040	 str         r0, [sp, #0x40]
  000c0	e59d3040	 ldr         r3, [sp, #0x40]
  000c4	e58d3010	 str         r3, [sp, #0x10]

; 58   :     if (code != ERROR_SUCCESS) goto cleanUp;

  000c8	e59d3010	 ldr         r3, [sp, #0x10]
  000cc	e3530000	 cmp         r3, #0
  000d0	0a000001	 beq         |$LN7@Initialize|
  000d4	ea00002b	 b           |$LN6@Initialize|
  000d8	ea00002a	 b           |$cleanUp$35841|
  000dc		 |$LN7@Initialize|

; 59   : 
; 60   :     // read constraint name
; 61   :     size = sizeof(m_szPolicyName);

  000dc	e3a03f82	 mov         r3, #0x82, 30
  000e0	e58d3014	 str         r3, [sp, #0x14]

; 62   :     code = RegQueryValueEx(hKey, REGEDIT_POLICY_NAME, 0, 0, (BYTE*)&m_szPolicyName, &size);

  000e4	e28d3014	 add         r3, sp, #0x14
  000e8	e58d3004	 str         r3, [sp, #4]
  000ec	e59d3054	 ldr         r3, [sp, #0x54]
  000f0	e2833b01	 add         r3, r3, #1, 22
  000f4	e283301c	 add         r3, r3, #0x1C
  000f8	e58d3000	 str         r3, [sp]
  000fc	e3a03000	 mov         r3, #0
  00100	e3a02000	 mov         r2, #0
  00104	e59f10ac	 ldr         r1, [pc, #0xAC]
  00108	e59d000c	 ldr         r0, [sp, #0xC]
  0010c	eb000000	 bl          RegQueryValueExW
  00110	e58d0044	 str         r0, [sp, #0x44]
  00114	e59d3044	 ldr         r3, [sp, #0x44]
  00118	e58d3010	 str         r3, [sp, #0x10]

; 63   :     if (code != ERROR_SUCCESS) goto cleanUp;

  0011c	e59d3010	 ldr         r3, [sp, #0x10]
  00120	e3530000	 cmp         r3, #0
  00124	0a000001	 beq         |$LN5@Initialize|
  00128	ea000016	 b           |$LN4@Initialize|
  0012c	ea000015	 b           |$cleanUp$35841|
  00130		 |$LN5@Initialize|

; 64   : 
; 65   :     // read dll name
; 66   :     size = sizeof(m_szDll);

  00130	e3a03f82	 mov         r3, #0x82, 30
  00134	e58d3014	 str         r3, [sp, #0x14]

; 67   :     code = RegQueryValueEx(hKey, REGEDIT_POLICY_DLL, 0, 0, (BYTE*)&m_szDll, &size);

  00138	e28d3014	 add         r3, sp, #0x14
  0013c	e58d3004	 str         r3, [sp, #4]
  00140	e59d3054	 ldr         r3, [sp, #0x54]
  00144	e2833008	 add         r3, r3, #8
  00148	e58d3000	 str         r3, [sp]
  0014c	e3a03000	 mov         r3, #0
  00150	e3a02000	 mov         r2, #0
  00154	e59f1058	 ldr         r1, [pc, #0x58]
  00158	e59d000c	 ldr         r0, [sp, #0xC]
  0015c	eb000000	 bl          RegQueryValueExW
  00160	e58d0048	 str         r0, [sp, #0x48]
  00164	e59d3048	 ldr         r3, [sp, #0x48]
  00168	e58d3010	 str         r3, [sp, #0x10]

; 68   :     if (code != ERROR_SUCCESS) goto cleanUp;

  0016c	e59d3010	 ldr         r3, [sp, #0x10]
  00170	e3530000	 cmp         r3, #0
  00174	0a000001	 beq         |$LN3@Initialize|
  00178	ea000002	 b           |$LN2@Initialize|
  0017c	ea000001	 b           |$cleanUp$35841|
  00180		 |$LN3@Initialize|

; 69   :     
; 70   :     // Done
; 71   :     rc = TRUE;

  00180	e3a03001	 mov         r3, #1
  00184	e58d3008	 str         r3, [sp, #8]
  00188		 |$LN2@Initialize|
  00188		 |$LN4@Initialize|
  00188		 |$LN6@Initialize|
  00188		 |$LN8@Initialize|
  00188		 |$LN10@Initialize|
  00188		 |$cleanUp$35841|

; 72   :     
; 73   : cleanUp:    
; 74   :     if (hKey != NULL) RegCloseKey(hKey);

  00188	e59d300c	 ldr         r3, [sp, #0xC]
  0018c	e3530000	 cmp         r3, #0
  00190	0a000001	 beq         |$LN1@Initialize|
  00194	e59d000c	 ldr         r0, [sp, #0xC]
  00198	eb000000	 bl          RegCloseKey
  0019c		 |$LN1@Initialize|

; 75   :     return rc;

  0019c	e59d3008	 ldr         r3, [sp, #8]
  001a0	e58d3034	 str         r3, [sp, #0x34]

; 76   : }

  001a4	e59d0034	 ldr         r0, [sp, #0x34]
  001a8	e28dd04c	 add         sp, sp, #0x4C
  001ac	e89d6000	 ldmia       sp, {sp, lr}
  001b0	e12fff1e	 bx          lr
  001b4		 |$LN17@Initialize|
  001b4		 |$LN18@Initialize|
  001b4	00000000	 DCD         |??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@|
  001b8		 |$LN19@Initialize|
  001b8	00000000	 DCD         |??_C@_19DINFBLAK@?$AAN?$AAa?$AAm?$AAe?$AA?$AA@|
  001bc		 |$LN20@Initialize|
  001bc	00000000	 DCD         |??_C@_1M@PJMPBMAL@?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@|
  001c0		 |$M36696|

			 ENDP  ; |?Initialize@PolicyAdapter@@QAAHPBG@Z|, PolicyAdapter::Initialize

	EXPORT	|??_C@_1CM@JCMOMFFI@?$AAP?$AAo?$AAs?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@MKMELJJH@?$AAP?$AAr?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@DCFPCHLO@?$AAP?$AAo?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@GKFFFLHB@?$AAP?$AAr?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@FHEHAOKJ@?$AAC?$AAl?$AAo?$AAs?$AAe?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@KPFBJADD@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@HFNHAJFD@?$AAO?$AAp?$AAe?$AAn?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@KBEINNHC@?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@LLCLNBHO@?$AA?$CF?$AAs?$AA_?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@PAHFEOCJ@?$AAI?$AAn?$AAi?$AAt?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?PostInitialize@PolicyAdapter@@QAAHPAVPolicyRoot@@@Z| ; PolicyAdapter::PostInitialize
	IMPORT	|?AddSystemChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z| ; PolicyRoot::AddSystemChangeObserver
	IMPORT	|?AddDeviceChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z| ; PolicyRoot::AddDeviceChangeObserver
	IMPORT	|GetProcAddressW|
	IMPORT	|swprintf|
	IMPORT	|LoadLibraryW|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00008			 AREA	 |.pdata|, PDATA
|$T36715| DCD	|$LN22@PostInitia|
	DCD	0xc0011b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JCMOMFFI@?$AAP?$AAo?$AAs?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "g", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MKMELJJH@?$AAP?$AAr?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "e", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DCFPCHLO@?$AAP?$AAo?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "g", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@GKFFFLHB@?$AAP?$AAr?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@FHEHAOKJ@?$AAC?$AAl?$AAo?$AAs?$AAe?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| DCB "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "s", 0x0, "e", 0x0, "P", 0x0, "o"
	DCB	0x0, "l", 0x0, "i", 0x0, "c", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KPFBJADD@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| DCB "N"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@HFNHAJFD@?$AAO?$AAp?$AAe?$AAn?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| DCB "O"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "P", 0x0, "o", 0x0, "l"
	DCB	0x0, "i", 0x0, "c", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KBEINNHC@?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LLCLNBHO@?$AA?$CF?$AAs?$AA_?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0
	DCB	"s", 0x0, "_", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@PAHFEOCJ@?$AAI?$AAn?$AAi?$AAt?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "l"
	DCB	0x0, "i", 0x0, "c", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T36711| DCD	0xffffffb8
; Function compile flags: /Odtp

  001c0			 AREA	 |.text|, CODE, ARM

  001c0	00000000	 DCD         |__GSHandlerCheck|
  001c4	00000000	 DCD         |$T36711|

  001c8		 |?PostInitialize@PolicyAdapter@@QAAHPAVPolicyRoot@@@Z| PROC ; PolicyAdapter::PostInitialize

; 87   : {

  001c8		 |$LN22@PostInitia|
  001c8	e1a0c00d	 mov         r12, sp
  001cc	e92d0003	 stmdb       sp!, {r0, r1}
  001d0	e92d5000	 stmdb       sp!, {r12, lr}
  001d4	e24ddf91	 sub         sp, sp, #0x91, 30
  001d8		 |$M36712|
  001d8	e59f3450	 ldr         r3, [pc, #0x450]
  001dc	e5933000	 ldr         r3, [r3]
  001e0	e58d320c	 str         r3, [sp, #0x20C]

; 88   :     BOOL rc = FALSE;

  001e4	e3a03000	 mov         r3, #0
  001e8	e58d3000	 str         r3, [sp]

; 89   :     _TCHAR szBuffer[MAX_PATH];
; 90   :     
; 91   :     // Load library
; 92   :     m_hModule = ::LoadLibrary(m_szDll);

  001ec	e59d324c	 ldr         r3, [sp, #0x24C]
  001f0	e2830008	 add         r0, r3, #8
  001f4	eb000000	 bl          LoadLibraryW
  001f8	e58d0214	 str         r0, [sp, #0x214]
  001fc	e59d2214	 ldr         r2, [sp, #0x214]
  00200	e59d324c	 ldr         r3, [sp, #0x24C]
  00204	e5832000	 str         r2, [r3]

; 93   :     if (m_hModule == NULL) goto cleanUp;

  00208	e59d324c	 ldr         r3, [sp, #0x24C]
  0020c	e5933000	 ldr         r3, [r3]
  00210	e3530000	 cmp         r3, #0
  00214	1a000001	 bne         |$LN15@PostInitia|
  00218	ea0000f2	 b           |$LN14@PostInitia|
  0021c	ea0000f1	 b           |$cleanUp$35867|
  00220		 |$LN15@PostInitia|

; 94   : 
; 95   :     //
; 96   :     // load functions
; 97   :     
; 98   :     // xxx_InitPolicy
; 99   :     _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, INIT_NAME);

  00220	e59f3404	 ldr         r3, [pc, #0x404]
  00224	e59d224c	 ldr         r2, [sp, #0x24C]
  00228	e2822b01	 add         r2, r2, #1, 22
  0022c	e282201c	 add         r2, r2, #0x1C
  00230	e59f13d0	 ldr         r1, [pc, #0x3D0]
  00234	e28d0004	 add         r0, sp, #4
  00238	eb000000	 bl          swprintf

; 100  :     m_fns.InitPolicy = reinterpret_cast<fnInitPolicy>(
; 101  :                             ::GetProcAddress(m_hModule, szBuffer)
; 102  :                             );

  0023c	e28d1004	 add         r1, sp, #4
  00240	e59d324c	 ldr         r3, [sp, #0x24C]
  00244	e5930000	 ldr         r0, [r3]
  00248	eb000000	 bl          GetProcAddressW
  0024c	e58d0218	 str         r0, [sp, #0x218]
  00250	e59d324c	 ldr         r3, [sp, #0x24C]
  00254	e2833c06	 add         r3, r3, #6, 24
  00258	e2832024	 add         r2, r3, #0x24
  0025c	e59d3218	 ldr         r3, [sp, #0x218]
  00260	e5823000	 str         r3, [r2]

; 103  :     if (m_fns.InitPolicy == NULL) goto cleanUp;

  00264	e59d324c	 ldr         r3, [sp, #0x24C]
  00268	e2833c06	 add         r3, r3, #6, 24
  0026c	e2833024	 add         r3, r3, #0x24
  00270	e5933000	 ldr         r3, [r3]
  00274	e3530000	 cmp         r3, #0
  00278	1a000001	 bne         |$LN13@PostInitia|
  0027c	ea0000d9	 b           |$LN12@PostInitia|
  00280	ea0000d8	 b           |$cleanUp$35867|
  00284		 |$LN13@PostInitia|

; 104  : 
; 105  :     // xxx_DeinitPolicy
; 106  :     _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, DEINIT_NAME);

  00284	e59f339c	 ldr         r3, [pc, #0x39C]
  00288	e59d224c	 ldr         r2, [sp, #0x24C]
  0028c	e2822b01	 add         r2, r2, #1, 22
  00290	e282201c	 add         r2, r2, #0x1C
  00294	e59f136c	 ldr         r1, [pc, #0x36C]
  00298	e28d0004	 add         r0, sp, #4
  0029c	eb000000	 bl          swprintf

; 107  :     m_fns.DeinitPolicy = reinterpret_cast<fnDeinitPolicy>(
; 108  :                             ::GetProcAddress(m_hModule, szBuffer)
; 109  :                             );

  002a0	e28d1004	 add         r1, sp, #4
  002a4	e59d324c	 ldr         r3, [sp, #0x24C]
  002a8	e5930000	 ldr         r0, [r3]
  002ac	eb000000	 bl          GetProcAddressW
  002b0	e58d021c	 str         r0, [sp, #0x21C]
  002b4	e59d324c	 ldr         r3, [sp, #0x24C]
  002b8	e2833c06	 add         r3, r3, #6, 24
  002bc	e2832028	 add         r2, r3, #0x28
  002c0	e59d321c	 ldr         r3, [sp, #0x21C]
  002c4	e5823000	 str         r3, [r2]

; 110  :     if (m_fns.DeinitPolicy == NULL) goto cleanUp;

  002c8	e59d324c	 ldr         r3, [sp, #0x24C]
  002cc	e2833c06	 add         r3, r3, #6, 24
  002d0	e2833028	 add         r3, r3, #0x28
  002d4	e5933000	 ldr         r3, [r3]
  002d8	e3530000	 cmp         r3, #0
  002dc	1a000001	 bne         |$LN11@PostInitia|
  002e0	ea0000c0	 b           |$LN10@PostInitia|
  002e4	ea0000bf	 b           |$cleanUp$35867|
  002e8		 |$LN11@PostInitia|

; 111  : 
; 112  :     // xxx_OpenPolicy
; 113  :     _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, OPEN_NAME);

  002e8	e59f3334	 ldr         r3, [pc, #0x334]
  002ec	e59d224c	 ldr         r2, [sp, #0x24C]
  002f0	e2822b01	 add         r2, r2, #1, 22
  002f4	e282201c	 add         r2, r2, #0x1C
  002f8	e59f1308	 ldr         r1, [pc, #0x308]
  002fc	e28d0004	 add         r0, sp, #4
  00300	eb000000	 bl          swprintf

; 114  :     m_fns.OpenPolicy = reinterpret_cast<fnOpenPolicy>(
; 115  :                             ::GetProcAddress(m_hModule, szBuffer)
; 116  :                             );

  00304	e28d1004	 add         r1, sp, #4
  00308	e59d324c	 ldr         r3, [sp, #0x24C]
  0030c	e5930000	 ldr         r0, [r3]
  00310	eb000000	 bl          GetProcAddressW
  00314	e58d0220	 str         r0, [sp, #0x220]
  00318	e59d324c	 ldr         r3, [sp, #0x24C]
  0031c	e2833c06	 add         r3, r3, #6, 24
  00320	e283202c	 add         r2, r3, #0x2C
  00324	e59d3220	 ldr         r3, [sp, #0x220]
  00328	e5823000	 str         r3, [r2]

; 117  : 
; 118  :     if (m_fns.OpenPolicy != NULL)

  0032c	e59d324c	 ldr         r3, [sp, #0x24C]
  00330	e2833c06	 add         r3, r3, #6, 24
  00334	e283302c	 add         r3, r3, #0x2C
  00338	e5933000	 ldr         r3, [r3]
  0033c	e3530000	 cmp         r3, #0
  00340	0a00002f	 beq         |$LN9@PostInitia|

; 119  :             {
; 120  :         // xxx_UpdatePolicy
; 121  :         _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, NOTIFY_NAME);

  00344	e59f32d4	 ldr         r3, [pc, #0x2D4]
  00348	e59d224c	 ldr         r2, [sp, #0x24C]
  0034c	e2822b01	 add         r2, r2, #1, 22
  00350	e282201c	 add         r2, r2, #0x1C
  00354	e59f12ac	 ldr         r1, [pc, #0x2AC]
  00358	e28d0004	 add         r0, sp, #4
  0035c	eb000000	 bl          swprintf

; 122  :         m_fns.NotifyPolicy = reinterpret_cast<fnNotifyPolicy>(
; 123  :                                 ::GetProcAddress(m_hModule, szBuffer)
; 124  :                                 );

  00360	e28d1004	 add         r1, sp, #4
  00364	e59d324c	 ldr         r3, [sp, #0x24C]
  00368	e5930000	 ldr         r0, [r3]
  0036c	eb000000	 bl          GetProcAddressW
  00370	e58d0224	 str         r0, [sp, #0x224]
  00374	e59d324c	 ldr         r3, [sp, #0x24C]
  00378	e2832e63	 add         r2, r3, #0x63, 28
  0037c	e59d3224	 ldr         r3, [sp, #0x224]
  00380	e5823000	 str         r3, [r2]

; 125  :         if (m_fns.NotifyPolicy == NULL) goto cleanUp;

  00384	e59d324c	 ldr         r3, [sp, #0x24C]
  00388	e2833e63	 add         r3, r3, #0x63, 28
  0038c	e5933000	 ldr         r3, [r3]
  00390	e3530000	 cmp         r3, #0
  00394	1a000001	 bne         |$LN8@PostInitia|
  00398	ea000092	 b           |$LN7@PostInitia|
  0039c	ea000091	 b           |$cleanUp$35867|
  003a0		 |$LN8@PostInitia|

; 126  : 
; 127  :         // xxx_ClosePolicy
; 128  :         _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, CLOSE_NAME);

  003a0	e59f3274	 ldr         r3, [pc, #0x274]
  003a4	e59d224c	 ldr         r2, [sp, #0x24C]
  003a8	e2822b01	 add         r2, r2, #1, 22
  003ac	e282201c	 add         r2, r2, #0x1C
  003b0	e59f1250	 ldr         r1, [pc, #0x250]
  003b4	e28d0004	 add         r0, sp, #4
  003b8	eb000000	 bl          swprintf

; 129  :         m_fns.ClosePolicy = reinterpret_cast<fnClosePolicy>(
; 130  :                                 ::GetProcAddress(m_hModule, szBuffer)
; 131  :                                 );

  003bc	e28d1004	 add         r1, sp, #4
  003c0	e59d324c	 ldr         r3, [sp, #0x24C]
  003c4	e5930000	 ldr         r0, [r3]
  003c8	eb000000	 bl          GetProcAddressW
  003cc	e58d0228	 str         r0, [sp, #0x228]
  003d0	e59d324c	 ldr         r3, [sp, #0x24C]
  003d4	e2833c06	 add         r3, r3, #6, 24
  003d8	e2832034	 add         r2, r3, #0x34
  003dc	e59d3228	 ldr         r3, [sp, #0x228]
  003e0	e5823000	 str         r3, [r2]

; 132  :         if (m_fns.ClosePolicy == NULL) goto cleanUp;

  003e4	e59d324c	 ldr         r3, [sp, #0x24C]
  003e8	e2833c06	 add         r3, r3, #6, 24
  003ec	e2833034	 add         r3, r3, #0x34
  003f0	e5933000	 ldr         r3, [r3]
  003f4	e3530000	 cmp         r3, #0
  003f8	1a000001	 bne         |$LN6@PostInitia|
  003fc	ea000079	 b           |$LN5@PostInitia|
  00400	ea000078	 b           |$cleanUp$35867|
  00404		 |$LN6@PostInitia|
  00404		 |$LN9@PostInitia|

; 133  :         }
; 134  : 
; 135  :     // device state change notification 
; 136  :     _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, PREDEVICESTATE_NAME);

  00404	e59f320c	 ldr         r3, [pc, #0x20C]
  00408	e59d224c	 ldr         r2, [sp, #0x24C]
  0040c	e2822b01	 add         r2, r2, #1, 22
  00410	e282201c	 add         r2, r2, #0x1C
  00414	e59f11ec	 ldr         r1, [pc, #0x1EC]
  00418	e28d0004	 add         r0, sp, #4
  0041c	eb000000	 bl          swprintf

; 137  :     m_fns.PreDeviceStateChange = reinterpret_cast<fnDeviceStateChange>(
; 138  :                             ::GetProcAddress(m_hModule, szBuffer)
; 139  :                             );

  00420	e28d1004	 add         r1, sp, #4
  00424	e59d324c	 ldr         r3, [sp, #0x24C]
  00428	e5930000	 ldr         r0, [r3]
  0042c	eb000000	 bl          GetProcAddressW
  00430	e58d022c	 str         r0, [sp, #0x22C]
  00434	e59d324c	 ldr         r3, [sp, #0x24C]
  00438	e2833c06	 add         r3, r3, #6, 24
  0043c	e2832038	 add         r2, r3, #0x38
  00440	e59d322c	 ldr         r3, [sp, #0x22C]
  00444	e5823000	 str         r3, [r2]

; 140  : 
; 141  :     _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, POSTDEVICESTATE_NAME);

  00448	e59f31c4	 ldr         r3, [pc, #0x1C4]
  0044c	e59d224c	 ldr         r2, [sp, #0x24C]
  00450	e2822b01	 add         r2, r2, #1, 22
  00454	e282201c	 add         r2, r2, #0x1C
  00458	e59f11a8	 ldr         r1, [pc, #0x1A8]
  0045c	e28d0004	 add         r0, sp, #4
  00460	eb000000	 bl          swprintf

; 142  :     m_fns.PostDeviceStateChange = reinterpret_cast<fnDeviceStateChange>(
; 143  :                             ::GetProcAddress(m_hModule, szBuffer)
; 144  :                             );

  00464	e28d1004	 add         r1, sp, #4
  00468	e59d324c	 ldr         r3, [sp, #0x24C]
  0046c	e5930000	 ldr         r0, [r3]
  00470	eb000000	 bl          GetProcAddressW
  00474	e58d0230	 str         r0, [sp, #0x230]
  00478	e59d324c	 ldr         r3, [sp, #0x24C]
  0047c	e2833c06	 add         r3, r3, #6, 24
  00480	e283203c	 add         r2, r3, #0x3C
  00484	e59d3230	 ldr         r3, [sp, #0x230]
  00488	e5823000	 str         r3, [r2]

; 145  : 
; 146  :     if (m_fns.PreDeviceStateChange != NULL || m_fns.PostDeviceStateChange != NULL)

  0048c	e59d324c	 ldr         r3, [sp, #0x24C]
  00490	e2833c06	 add         r3, r3, #6, 24
  00494	e2833038	 add         r3, r3, #0x38
  00498	e5933000	 ldr         r3, [r3]
  0049c	e3530000	 cmp         r3, #0
  004a0	1a000005	 bne         |$LN3@PostInitia|
  004a4	e59d324c	 ldr         r3, [sp, #0x24C]
  004a8	e2833c06	 add         r3, r3, #6, 24
  004ac	e283303c	 add         r3, r3, #0x3C
  004b0	e5933000	 ldr         r3, [r3]
  004b4	e3530000	 cmp         r3, #0
  004b8	0a000002	 beq         |$LN4@PostInitia|
  004bc		 |$LN3@PostInitia|

; 147  :         {
; 148  :         pPolicyRoot->AddDeviceChangeObserver(this);

  004bc	e59d124c	 ldr         r1, [sp, #0x24C]
  004c0	e59d0250	 ldr         r0, [sp, #0x250]
  004c4	eb000000	 bl          |?AddDeviceChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z|
  004c8		 |$LN4@PostInitia|

; 149  :         }
; 150  : 
; 151  :     // device state change notification 
; 152  :     _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, PRESYSTEMSTATE_NAME);

  004c8	e59f3140	 ldr         r3, [pc, #0x140]
  004cc	e59d224c	 ldr         r2, [sp, #0x24C]
  004d0	e2822b01	 add         r2, r2, #1, 22
  004d4	e282201c	 add         r2, r2, #0x1C
  004d8	e59f1128	 ldr         r1, [pc, #0x128]
  004dc	e28d0004	 add         r0, sp, #4
  004e0	eb000000	 bl          swprintf

; 153  :     m_fns.PreSystemStateChange = reinterpret_cast<fnSystemStateChange>(
; 154  :                             ::GetProcAddress(m_hModule, szBuffer)
; 155  :                             );

  004e4	e28d1004	 add         r1, sp, #4
  004e8	e59d324c	 ldr         r3, [sp, #0x24C]
  004ec	e5930000	 ldr         r0, [r3]
  004f0	eb000000	 bl          GetProcAddressW
  004f4	e58d0234	 str         r0, [sp, #0x234]
  004f8	e59d324c	 ldr         r3, [sp, #0x24C]
  004fc	e2832d19	 add         r2, r3, #0x19, 26
  00500	e59d3234	 ldr         r3, [sp, #0x234]
  00504	e5823000	 str         r3, [r2]

; 156  : 
; 157  :     _stprintf(szBuffer, FUNCTION_FMT, m_szPolicyName, POSTSYSTEMSTATE_NAME);

  00508	e59f30fc	 ldr         r3, [pc, #0xFC]
  0050c	e59d224c	 ldr         r2, [sp, #0x24C]
  00510	e2822b01	 add         r2, r2, #1, 22
  00514	e282201c	 add         r2, r2, #0x1C
  00518	e59f10e8	 ldr         r1, [pc, #0xE8]
  0051c	e28d0004	 add         r0, sp, #4
  00520	eb000000	 bl          swprintf

; 158  :     m_fns.PostSystemStateChange = reinterpret_cast<fnSystemStateChange>(
; 159  :                             ::GetProcAddress(m_hModule, szBuffer)
; 160  :                             );

  00524	e28d1004	 add         r1, sp, #4
  00528	e59d324c	 ldr         r3, [sp, #0x24C]
  0052c	e5930000	 ldr         r0, [r3]
  00530	eb000000	 bl          GetProcAddressW
  00534	e58d0238	 str         r0, [sp, #0x238]
  00538	e59d324c	 ldr         r3, [sp, #0x24C]
  0053c	e2833c06	 add         r3, r3, #6, 24
  00540	e2832044	 add         r2, r3, #0x44
  00544	e59d3238	 ldr         r3, [sp, #0x238]
  00548	e5823000	 str         r3, [r2]

; 161  : 
; 162  :     if (m_fns.PreSystemStateChange != NULL || m_fns.PostSystemStateChange != NULL)

  0054c	e59d324c	 ldr         r3, [sp, #0x24C]
  00550	e2833d19	 add         r3, r3, #0x19, 26
  00554	e5933000	 ldr         r3, [r3]
  00558	e3530000	 cmp         r3, #0
  0055c	1a000005	 bne         |$LN1@PostInitia|
  00560	e59d324c	 ldr         r3, [sp, #0x24C]
  00564	e2833c06	 add         r3, r3, #6, 24
  00568	e2833044	 add         r3, r3, #0x44
  0056c	e5933000	 ldr         r3, [r3]
  00570	e3530000	 cmp         r3, #0
  00574	0a000002	 beq         |$LN2@PostInitia|
  00578		 |$LN1@PostInitia|

; 163  :         {
; 164  :         pPolicyRoot->AddSystemChangeObserver(this);

  00578	e59d124c	 ldr         r1, [sp, #0x24C]
  0057c	e59d0250	 ldr         r0, [sp, #0x250]
  00580	eb000000	 bl          |?AddSystemChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z|
  00584		 |$LN2@PostInitia|

; 165  :         }
; 166  :     
; 167  :     // try to initialize constraint adapter
; 168  :     m_hPolicyAdapter = m_fns.InitPolicy(m_szRegKey);

  00584	e59d324c	 ldr         r3, [sp, #0x24C]
  00588	e2830f85	 add         r0, r3, #0x85, 30
  0058c	e59d324c	 ldr         r3, [sp, #0x24C]
  00590	e2833c06	 add         r3, r3, #6, 24
  00594	e2833024	 add         r3, r3, #0x24
  00598	e5933000	 ldr         r3, [r3]
  0059c	e1a0e00f	 mov         lr, pc
  005a0	e12fff13	 bx          r3
  005a4	e58d023c	 str         r0, [sp, #0x23C]
  005a8	e59d324c	 ldr         r3, [sp, #0x24C]
  005ac	e2832e21	 add         r2, r3, #0x21, 28
  005b0	e59d323c	 ldr         r3, [sp, #0x23C]
  005b4	e5823000	 str         r3, [r2]

; 169  :     rc = m_hPolicyAdapter != NULL;

  005b8	e59d324c	 ldr         r3, [sp, #0x24C]
  005bc	e2833e21	 add         r3, r3, #0x21, 28
  005c0	e5933000	 ldr         r3, [r3]
  005c4	e3530000	 cmp         r3, #0
  005c8	0a000002	 beq         |$LN18@PostInitia|
  005cc	e3a03001	 mov         r3, #1
  005d0	e58d3240	 str         r3, [sp, #0x240]
  005d4	ea000001	 b           |$LN19@PostInitia|
  005d8		 |$LN18@PostInitia|
  005d8	e3a03000	 mov         r3, #0
  005dc	e58d3240	 str         r3, [sp, #0x240]
  005e0		 |$LN19@PostInitia|
  005e0	e59d3240	 ldr         r3, [sp, #0x240]
  005e4	e58d3000	 str         r3, [sp]
  005e8		 |$LN5@PostInitia|
  005e8		 |$LN7@PostInitia|
  005e8		 |$LN10@PostInitia|
  005e8		 |$LN12@PostInitia|
  005e8		 |$LN14@PostInitia|
  005e8		 |$cleanUp$35867|

; 170  :     
; 171  : cleanUp:
; 172  :     return rc;

  005e8	e59d020c	 ldr         r0, [sp, #0x20C]
  005ec	eb000000	 bl          __security_check_cookie
  005f0	e59d3000	 ldr         r3, [sp]
  005f4	e58d3210	 str         r3, [sp, #0x210]

; 173  : }

  005f8	e59d0210	 ldr         r0, [sp, #0x210]
  005fc	e28ddf91	 add         sp, sp, #0x91, 30
  00600	e89d6000	 ldmia       sp, {sp, lr}
  00604	e12fff1e	 bx          lr
  00608		 |$LN23@PostInitia|
  00608		 |$LN24@PostInitia|
  00608	00000000	 DCD         |??_C@_1M@LLCLNBHO@?$AA?$CF?$AAs?$AA_?$AA?$CF?$AAs?$AA?$AA@|
  0060c		 |$LN25@PostInitia|
  0060c	00000000	 DCD         |??_C@_1CM@JCMOMFFI@?$AAP?$AAo?$AAs?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@|
  00610		 |$LN26@PostInitia|
  00610	00000000	 DCD         |??_C@_1CK@MKMELJJH@?$AAP?$AAr?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@|
  00614		 |$LN27@PostInitia|
  00614	00000000	 DCD         |??_C@_1CM@DCFPCHLO@?$AAP?$AAo?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@|
  00618		 |$LN28@PostInitia|
  00618	00000000	 DCD         |??_C@_1CK@GKFFFLHB@?$AAP?$AAr?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AA@|
  0061c		 |$LN29@PostInitia|
  0061c	00000000	 DCD         |??_C@_1BI@FHEHAOKJ@?$AAC?$AAl?$AAo?$AAs?$AAe?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@|
  00620		 |$LN30@PostInitia|
  00620	00000000	 DCD         |??_C@_1BK@KPFBJADD@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@|
  00624		 |$LN31@PostInitia|
  00624	00000000	 DCD         |??_C@_1BG@HFNHAJFD@?$AAO?$AAp?$AAe?$AAn?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@|
  00628		 |$LN32@PostInitia|
  00628	00000000	 DCD         |??_C@_1BK@KBEINNHC@?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@|
  0062c		 |$LN33@PostInitia|
  0062c	00000000	 DCD         |??_C@_1BG@PAHFEOCJ@?$AAI?$AAn?$AAi?$AAt?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@|
  00630		 |$LN34@PostInitia|
  00630	00000000	 DCD         |__security_cookie|
  00634		 |$M36713|

			 ENDP  ; |?PostInitialize@PolicyAdapter@@QAAHPAVPolicyRoot@@@Z|, PolicyAdapter::PostInitialize

	EXPORT	|?Uninitialize@PolicyAdapter@@QAAXXZ|	; PolicyAdapter::Uninitialize
	IMPORT	|memset|
	IMPORT	|FreeLibrary|

  00010			 AREA	 |.pdata|, PDATA
|$T36732| DCD	|$LN7@Uninitiali|
	DCD	0x40003e03
; Function compile flags: /Odtp

  00634			 AREA	 |.text|, CODE, ARM

  00634		 |?Uninitialize@PolicyAdapter@@QAAXXZ| PROC ; PolicyAdapter::Uninitialize

; 182  : {

  00634		 |$LN7@Uninitiali|
  00634	e1a0c00d	 mov         r12, sp
  00638	e92d0001	 stmdb       sp!, {r0}
  0063c	e92d5000	 stmdb       sp!, {r12, lr}
  00640		 |$M36729|

; 183  :     if (m_fns.ClosePolicy != NULL && m_hPolicyAdapter != NULL)

  00640	e59d3008	 ldr         r3, [sp, #8]
  00644	e2833c06	 add         r3, r3, #6, 24
  00648	e2833034	 add         r3, r3, #0x34
  0064c	e5933000	 ldr         r3, [r3]
  00650	e3530000	 cmp         r3, #0
  00654	0a00000d	 beq         |$LN2@Uninitiali|
  00658	e59d3008	 ldr         r3, [sp, #8]
  0065c	e2833e21	 add         r3, r3, #0x21, 28
  00660	e5933000	 ldr         r3, [r3]
  00664	e3530000	 cmp         r3, #0
  00668	0a000008	 beq         |$LN2@Uninitiali|

; 184  :         {
; 185  :         m_fns.ClosePolicy(m_hPolicyAdapter);

  0066c	e59d3008	 ldr         r3, [sp, #8]
  00670	e2833e21	 add         r3, r3, #0x21, 28
  00674	e5930000	 ldr         r0, [r3]
  00678	e59d3008	 ldr         r3, [sp, #8]
  0067c	e2833c06	 add         r3, r3, #6, 24
  00680	e2833034	 add         r3, r3, #0x34
  00684	e5933000	 ldr         r3, [r3]
  00688	e1a0e00f	 mov         lr, pc
  0068c	e12fff13	 bx          r3
  00690		 |$LN2@Uninitiali|

; 186  :         }
; 187  : 
; 188  :     if (m_hModule != NULL)

  00690	e59d3008	 ldr         r3, [sp, #8]
  00694	e5933000	 ldr         r3, [r3]
  00698	e3530000	 cmp         r3, #0
  0069c	0a000002	 beq         |$LN1@Uninitiali|

; 189  :         {
; 190  :         FreeLibrary(m_hModule);

  006a0	e59d3008	 ldr         r3, [sp, #8]
  006a4	e5930000	 ldr         r0, [r3]
  006a8	eb000000	 bl          FreeLibrary
  006ac		 |$LN1@Uninitiali|

; 191  :         }
; 192  : 
; 193  :     // reset member variables
; 194  :     *m_szDll = NULL;

  006ac	e59d3008	 ldr         r3, [sp, #8]
  006b0	e2832008	 add         r2, r3, #8
  006b4	e3a03000	 mov         r3, #0
  006b8	e1c230b0	 strh        r3, [r2]

; 195  :     m_hModule = NULL;

  006bc	e59d2008	 ldr         r2, [sp, #8]
  006c0	e3a03000	 mov         r3, #0
  006c4	e5823000	 str         r3, [r2]

; 196  :     m_dwOrder = 0;

  006c8	e59d3008	 ldr         r3, [sp, #8]
  006cc	e2832004	 add         r2, r3, #4
  006d0	e3a03000	 mov         r3, #0
  006d4	e5823000	 str         r3, [r2]

; 197  :     *m_szRegKey = NULL;

  006d8	e59d3008	 ldr         r3, [sp, #8]
  006dc	e2832f85	 add         r2, r3, #0x85, 30
  006e0	e3a03000	 mov         r3, #0
  006e4	e1c230b0	 strh        r3, [r2]

; 198  :     *m_szPolicyName = NULL;

  006e8	e59d3008	 ldr         r3, [sp, #8]
  006ec	e2833b01	 add         r3, r3, #1, 22
  006f0	e283201c	 add         r2, r3, #0x1C
  006f4	e3a03000	 mov         r3, #0
  006f8	e1c230b0	 strh        r3, [r2]

; 199  :     m_hPolicyAdapter = NULL;

  006fc	e59d3008	 ldr         r3, [sp, #8]
  00700	e2832e21	 add         r2, r3, #0x21, 28
  00704	e3a03000	 mov         r3, #0
  00708	e5823000	 str         r3, [r2]

; 200  :     memset(&m_fns, 0, sizeof(PolicyAdapterFns));

  0070c	e3a02024	 mov         r2, #0x24
  00710	e3a01000	 mov         r1, #0
  00714	e59d3008	 ldr         r3, [sp, #8]
  00718	e2833c06	 add         r3, r3, #6, 24
  0071c	e2830024	 add         r0, r3, #0x24
  00720	eb000000	 bl          memset

; 201  : }

  00724	e89d6000	 ldmia       sp, {sp, lr}
  00728	e12fff1e	 bx          lr
  0072c		 |$M36730|

			 ENDP  ; |?Uninitialize@PolicyAdapter@@QAAXXZ|, PolicyAdapter::Uninitialize

	EXPORT	|??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory
; File c:\wince600\public\common\oak\inc\singleton.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T36737| DCD	|$LN5@factory|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| PROC ; `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''

; 390  :     {

  00000		 |$LN5@factory|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36734|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@factory|
  00014		 |$LN7@factory|
  00014	00000000	 DCD         |?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A|
  00018		 |$M36735|

			 ENDP  ; |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ|, `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''

	EXPORT	|?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

  00000			 AREA	 |.pdata|, PDATA
|$T36747| DCD	|$LN5@lock_facto|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

; 339  :         lock_factory()

  00000		 |$LN5@lock_facto|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36744|
  00010	eb000000	 bl          |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|

; 340  :             {get_lock(); }

  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36745|

			 ENDP  ; |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

	EXPORT	|??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
	EXPORT	|??0critical_section@ce@@QAA@XZ|	; ce::critical_section::critical_section
	EXPORT	|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs
	EXPORT	|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'
	IMPORT	|atexit|

  00000			 AREA	 |.bss|, NOINIT
|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| % 0x14 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs

  00000			 AREA	 |.bss|, NOINIT
|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| % 0x4 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'

  00000			 AREA	 |.pdata|, PDATA
|$T36755| DCD	|$LN6@get_lock|
	DCD	0x40001b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

; 320  :     {

  00000		 |$LN6@get_lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M36752|

; 321  :         static critical_section cs;

  00008	e59f3058	 ldr         r3, [pc, #0x58]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e3130001	 tst         r3, #1
  00014	1a000008	 bne         |$LN1@get_lock|
  00018	e59f3048	 ldr         r3, [pc, #0x48]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e3832001	 orr         r2, r3, #1
  00024	e59f303c	 ldr         r3, [pc, #0x3C]
  00028	e5832000	 str         r2, [r3]
  0002c	e59f0028	 ldr         r0, [pc, #0x28]
  00030	eb000000	 bl          |??0critical_section@ce@@QAA@XZ|
  00034	e59f0028	 ldr         r0, [pc, #0x28]
  00038	eb000000	 bl          atexit
  0003c		 |$LN1@get_lock|

; 322  :         
; 323  :         //
; 324  :         // This statement forces compiler to instantiate _factory member
; 325  :         // thus assuring that lock_factory ctor is called. 
; 326  :         //
; 327  :         lock_factory* volatile p = &_factory;

  0003c	e59f301c	 ldr         r3, [pc, #0x1C]
  00040	e58d3000	 str         r3, [sp]

; 328  : 
; 329  :         return cs;

  00044	e59f3010	 ldr         r3, [pc, #0x10]
  00048	e58d3004	 str         r3, [sp, #4]

; 330  :     }

  0004c	e59d0004	 ldr         r0, [sp, #4]
  00050	e28dd008	 add         sp, sp, #8
  00054	e49de004	 ldr         lr, [sp], #4
  00058	e12fff1e	 bx          lr
  0005c		 |$LN7@get_lock|
  0005c		 |$LN8@get_lock|
  0005c	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  00060		 |$LN9@get_lock|
  00060	00000000	 DCD         |?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A|
  00064		 |$LN10@get_lock|
  00064	00000000	 DCD         |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|
  00068		 |$LN11@get_lock|
  00068	00000000	 DCD         |??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51|
  0006c		 |$M36753|

			 ENDP  ; |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\sync.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T36768| DCD	|$LN5@critical_s|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::critical_section

; 125  :     critical_section()

  00000		 |$LN5@critical_s|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36765|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          InitializeCriticalSection
  00018	e59d300c	 ldr         r3, [sp, #0xC]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M36766|

			 ENDP  ; |??0critical_section@ce@@QAA@XZ|, ce::critical_section::critical_section

	EXPORT	|??1critical_section@ce@@QAA@XZ|	; ce::critical_section::~critical_section

  00000			 AREA	 |.pdata|, PDATA
|$T36775| DCD	|$LN5@dynamic|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| PROC ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
  00000		 |$LN5@dynamic|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36772|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          |??1critical_section@ce@@QAA@XZ|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@dynamic|
  00014		 |$LN7@dynamic|
  00014	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  00018		 |$M36773|

			 ENDP  ; |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|, `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''

	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T36784| DCD	|$LN5@critical_s@2|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::~critical_section

; 129  :         {DeleteCriticalSection(this); }

  00000		 |$LN5@critical_s@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36781|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          DeleteCriticalSection
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M36782|

			 ENDP  ; |??1critical_section@ce@@QAA@XZ|, ce::critical_section::~critical_section

	EXPORT	|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| [ DATA ] ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.bss|, NOINIT
|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| % 0x1 ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.CRT$XCU|, DATA
|?_factory$initializer$@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1P6AXXZA| DCD |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory$initializer$
	END
