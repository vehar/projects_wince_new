; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\PM\DEVICEMEDIATOR\devicelist.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"/include:?_factory@?$$singleton@V?$$free_list@$$0GE@Vall"
	DCB	"ocator@ce@@@ce@@$$03V?$$static_allocator@V?$$free_list@$$"
	DCB	"0GE@Vallocator@ce@@@ce@@$$03@2@@ce@@1Ulock_factory@12@A "
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?Initialize@DeviceList@@UAAHXZ|	; DeviceList::Initialize
	IMPORT	|InitializeCriticalSection|

  00000			 AREA	 |.bss|, NOINIT
|s_rgDeviceList| % 0x200

  00000			 AREA	 |.pdata|, PDATA
|$T41210| DCD	|$LN8@Initialize|
	DCD	0x40001f04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicelist.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@DeviceList@@UAAHXZ| PROC	; DeviceList::Initialize

; 57   : {

  00000		 |$LN8@Initialize|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M41207|

; 58   :     ::InitializeCriticalSection(&m_cs);

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2830010	 add         r0, r3, #0x10
  00018	eb000000	 bl          InitializeCriticalSection

; 59   :     for(UINT32 count=0; count<OMAP_MAX_DEVICE_COUNT; count++)

  0001c	e3a03000	 mov         r3, #0
  00020	e58d3000	 str         r3, [sp]
  00024	ea000002	 b           |$LN3@Initialize|
  00028		 |$LN2@Initialize|
  00028	e59d3000	 ldr         r3, [sp]
  0002c	e2833001	 add         r3, r3, #1
  00030	e58d3000	 str         r3, [sp]
  00034		 |$LN3@Initialize|
  00034	e59d3000	 ldr         r3, [sp]
  00038	e3530080	 cmp         r3, #0x80
  0003c	2a000007	 bcs         |$LN1@Initialize|

; 60   :         {
; 61   :         s_rgDeviceList[count] = NULL;

  00040	e59d1000	 ldr         r1, [sp]
  00044	e3a03004	 mov         r3, #4
  00048	e0020391	 mul         r2, r1, r3
  0004c	e59f3024	 ldr         r3, [pc, #0x24]
  00050	e0832002	 add         r2, r3, r2
  00054	e3a03000	 mov         r3, #0
  00058	e5823000	 str         r3, [r2]

; 62   :         }

  0005c	eafffff1	 b           |$LN2@Initialize|
  00060		 |$LN1@Initialize|

; 63   :     return TRUE;

  00060	e3a03001	 mov         r3, #1
  00064	e58d3004	 str         r3, [sp, #4]

; 64   : }

  00068	e59d0004	 ldr         r0, [sp, #4]
  0006c	e28dd008	 add         sp, sp, #8
  00070	e89d6000	 ldmia       sp, {sp, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LN9@Initialize|
  00078		 |$LN10@Initialize|
  00078	00000000	 DCD         |s_rgDeviceList|
  0007c		 |$M41208|

			 ENDP  ; |?Initialize@DeviceList@@UAAHXZ|, DeviceList::Initialize

	EXPORT	|?Uninitialize@DeviceList@@UAAHXZ|	; DeviceList::Uninitialize

  00008			 AREA	 |.pdata|, PDATA
|$T41218| DCD	|$LN5@Uninitiali|
	DCD	0x40000a04
; Function compile flags: /Odtp

  0007c			 AREA	 |.text|, CODE, ARM

  0007c		 |?Uninitialize@DeviceList@@UAAHXZ| PROC ; DeviceList::Uninitialize

; 69   : {

  0007c		 |$LN5@Uninitiali|
  0007c	e1a0c00d	 mov         r12, sp
  00080	e92d0001	 stmdb       sp!, {r0}
  00084	e92d5000	 stmdb       sp!, {r12, lr}
  00088	e24dd004	 sub         sp, sp, #4
  0008c		 |$M41215|

; 70   :     return TRUE;

  0008c	e3a03001	 mov         r3, #1
  00090	e58d3000	 str         r3, [sp]

; 71   : }

  00094	e59d0000	 ldr         r0, [sp]
  00098	e28dd004	 add         sp, sp, #4
  0009c	e89d6000	 ldmia       sp, {sp, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$M41216|

			 ENDP  ; |?Uninitialize@DeviceList@@UAAHXZ|, DeviceList::Uninitialize

	EXPORT	|??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?InsertDevice@DeviceList@@UAAHPBGPAVDeviceBase@@PAUHKEY__@@@Z| ; DeviceList::InsertDevice
	IMPORT	|s_DeviceAddressMap|
	IMPORT	|wcstoul|
	IMPORT	|RegQueryValueExW|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00010			 AREA	 |.pdata|, PDATA
|$T41235| DCD	|$LN19@InsertDevi|
	DCD	0xc0008604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@| DCB "M", 0x0
	DCB	"e", 0x0, "m", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.xdata|, DATA
|$T41231| DCD	0xffffffb4
; Function compile flags: /Odtp

  000a4			 AREA	 |.text|, CODE, ARM

  000a4	00000000	 DCD         |__GSHandlerCheck|
  000a8	00000000	 DCD         |$T41231|

  000ac		 |?InsertDevice@DeviceList@@UAAHPBGPAVDeviceBase@@PAUHKEY__@@@Z| PROC ; DeviceList::InsertDevice

; 81   : {

  000ac		 |$LN19@InsertDevi|
  000ac	e1a0c00d	 mov         r12, sp
  000b0	e92d000f	 stmdb       sp!, {r0 - r3}
  000b4	e92d5000	 stmdb       sp!, {r12, lr}
  000b8	e24ddf96	 sub         sp, sp, #0x96, 30
  000bc		 |$M41232|
  000bc	e59f31fc	 ldr         r3, [pc, #0x1FC]
  000c0	e5933000	 ldr         r3, [r3]
  000c4	e58d3224	 str         r3, [sp, #0x224]

; 82   :     BOOL rc = FALSE;

  000c8	e3a03000	 mov         r3, #0
  000cc	e58d300c	 str         r3, [sp, #0xC]

; 83   :     
; 84   :     // Get Notification flags
; 85   :     DWORD dwType = REG_DWORD;

  000d0	e3a03004	 mov         r3, #4
  000d4	e58d3008	 str         r3, [sp, #8]

; 86   :     DWORD dwSize;
; 87   :     _TCHAR szMembase[MAX_PATH];
; 88   : 
; 89   :     // Get the device MemBase
; 90   :     DWORD dwMemBase = 0;

  000d8	e3a03000	 mov         r3, #0
  000dc	e58d3014	 str         r3, [sp, #0x14]

; 91   : 
; 92   :     UNREFERENCED_PARAMETER(szDeviceName);
; 93   : 
; 94   :     if (::RegQueryValueEx(hKey, DEVLOAD_MEMBASE_VALNAME, NULL, &dwType, 
; 95   :             NULL, NULL) != ERROR_SUCCESS)

  000e0	e3a03000	 mov         r3, #0
  000e4	e58d3004	 str         r3, [sp, #4]
  000e8	e3a03000	 mov         r3, #0
  000ec	e58d3000	 str         r3, [sp]
  000f0	e28d3008	 add         r3, sp, #8
  000f4	e3a02000	 mov         r2, #0
  000f8	e59f11bc	 ldr         r1, [pc, #0x1BC]
  000fc	e59d026c	 ldr         r0, [sp, #0x26C]
  00100	eb000000	 bl          RegQueryValueExW
  00104	e58d0244	 str         r0, [sp, #0x244]
  00108	e59d3244	 ldr         r3, [sp, #0x244]
  0010c	e3530000	 cmp         r3, #0
  00110	0a000001	 beq         |$LN14@InsertDevi|
  00114	ea00005e	 b           |$LN13@InsertDevi|

; 96   :         {
; 97   :         goto cleanUp;

  00118	ea00005d	 b           |$cleanUp$40560|
  0011c		 |$LN14@InsertDevi|

; 98   :         }
; 99   : 
; 100  :     switch(dwType)

  0011c	e59d3008	 ldr         r3, [sp, #8]
  00120	e58d3248	 str         r3, [sp, #0x248]
  00124	e59d3248	 ldr         r3, [sp, #0x248]
  00128	e3530001	 cmp         r3, #1
  0012c	0a000018	 beq         |$LN7@InsertDevi|
  00130	e59d3248	 ldr         r3, [sp, #0x248]
  00134	e3530004	 cmp         r3, #4
  00138	0a000003	 beq         |$LN10@InsertDevi|
  0013c	e59d3248	 ldr         r3, [sp, #0x248]
  00140	e3530007	 cmp         r3, #7
  00144	0a000012	 beq         |$LN7@InsertDevi|
  00148	ea000029	 b           |$LN11@InsertDevi|
  0014c		 |$LN10@InsertDevi|

; 101  :         {
; 102  :         case REG_DWORD:
; 103  :             dwSize = sizeof(dwMemBase);

  0014c	e3a03004	 mov         r3, #4
  00150	e58d3010	 str         r3, [sp, #0x10]

; 104  :             if (::RegQueryValueEx(hKey, DEVLOAD_MEMBASE_VALNAME, NULL, &dwType, 
; 105  :                 (BYTE*)&dwMemBase, &dwSize) != ERROR_SUCCESS)

  00154	e28d3010	 add         r3, sp, #0x10
  00158	e58d3004	 str         r3, [sp, #4]
  0015c	e28d3014	 add         r3, sp, #0x14
  00160	e58d3000	 str         r3, [sp]
  00164	e28d3008	 add         r3, sp, #8
  00168	e3a02000	 mov         r2, #0
  0016c	e59f1148	 ldr         r1, [pc, #0x148]
  00170	e59d026c	 ldr         r0, [sp, #0x26C]
  00174	eb000000	 bl          RegQueryValueExW
  00178	e58d024c	 str         r0, [sp, #0x24C]
  0017c	e59d324c	 ldr         r3, [sp, #0x24C]
  00180	e3530000	 cmp         r3, #0
  00184	0a000001	 beq         |$LN9@InsertDevi|
  00188	ea000041	 b           |$LN8@InsertDevi|

; 106  :             {
; 107  : 
; 108  :             goto cleanUp;

  0018c	ea000040	 b           |$cleanUp$40560|
  00190		 |$LN9@InsertDevi|

; 109  :             }
; 110  :             break;

  00190	ea000017	 b           |$LN11@InsertDevi|
  00194		 |$LN7@InsertDevi|

; 111  :             
; 112  :         case REG_SZ:
; 113  :         case REG_MULTI_SZ:
; 114  :             // Read string or multi string
; 115  :             dwSize = MAX_PATH;

  00194	e3a03f41	 mov         r3, #0x41, 30
  00198	e58d3010	 str         r3, [sp, #0x10]

; 116  :             if (::RegQueryValueEx(hKey, DEVLOAD_MEMBASE_VALNAME, NULL, &dwType, 
; 117  :                     (BYTE*)szMembase, &dwSize) != ERROR_SUCCESS)

  0019c	e28d3010	 add         r3, sp, #0x10
  001a0	e58d3004	 str         r3, [sp, #4]
  001a4	e28d3018	 add         r3, sp, #0x18
  001a8	e58d3000	 str         r3, [sp]
  001ac	e28d3008	 add         r3, sp, #8
  001b0	e3a02000	 mov         r2, #0
  001b4	e59f1100	 ldr         r1, [pc, #0x100]
  001b8	e59d026c	 ldr         r0, [sp, #0x26C]
  001bc	eb000000	 bl          RegQueryValueExW
  001c0	e58d0250	 str         r0, [sp, #0x250]
  001c4	e59d3250	 ldr         r3, [sp, #0x250]
  001c8	e3530000	 cmp         r3, #0
  001cc	0a000001	 beq         |$LN6@InsertDevi|
  001d0	ea00002f	 b           |$LN5@InsertDevi|

; 118  :                 {
; 119  :                 goto cleanUp;

  001d4	ea00002e	 b           |$cleanUp$40560|
  001d8		 |$LN6@InsertDevi|

; 120  :                 }
; 121  :            
; 122  :             // Convert first string as hexa number
; 123  :             dwMemBase = wcstoul(szMembase, NULL, 16);

  001d8	e3a02010	 mov         r2, #0x10
  001dc	e3a01000	 mov         r1, #0
  001e0	e28d0018	 add         r0, sp, #0x18
  001e4	eb000000	 bl          wcstoul
  001e8	e58d0254	 str         r0, [sp, #0x254]
  001ec	e59d3254	 ldr         r3, [sp, #0x254]
  001f0	e58d3014	 str         r3, [sp, #0x14]
  001f4		 |$LN11@InsertDevi|

; 124  :             break;
; 125  :         }
; 126  : 
; 127  :      // Update the device list array 
; 128  : 
; 129  :      // Find the device id from the address to device id mapping table
; 130  :      // and updated the device base pointer in the device id location of 
; 131  :      // s_DeviceList
; 132  :      for (int i = 0; s_DeviceAddressMap[i].deviceAddress != 0; ++i)

  001f4	e3a03000	 mov         r3, #0
  001f8	e58d3220	 str         r3, [sp, #0x220]
  001fc	ea000002	 b           |$LN4@InsertDevi|
  00200		 |$LN3@InsertDevi|
  00200	e59d3220	 ldr         r3, [sp, #0x220]
  00204	e2833001	 add         r3, r3, #1
  00208	e58d3220	 str         r3, [sp, #0x220]
  0020c		 |$LN4@InsertDevi|
  0020c	e59d1220	 ldr         r1, [sp, #0x220]
  00210	e3a03008	 mov         r3, #8
  00214	e0020391	 mul         r2, r1, r3
  00218	e59f3098	 ldr         r3, [pc, #0x98]
  0021c	e0833002	 add         r3, r3, r2
  00220	e5933000	 ldr         r3, [r3]
  00224	e3530000	 cmp         r3, #0
  00228	0a000017	 beq         |$LN2@InsertDevi|

; 133  :         {
; 134  :         if (s_DeviceAddressMap[i].deviceAddress == dwMemBase)

  0022c	e59d1220	 ldr         r1, [sp, #0x220]
  00230	e3a03008	 mov         r3, #8
  00234	e0020391	 mul         r2, r1, r3
  00238	e59f3078	 ldr         r3, [pc, #0x78]
  0023c	e0833002	 add         r3, r3, r2
  00240	e5932000	 ldr         r2, [r3]
  00244	e59d3014	 ldr         r3, [sp, #0x14]
  00248	e1520003	 cmp         r2, r3
  0024c	1a00000d	 bne         |$LN1@InsertDevi|

; 135  :             {
; 136  :             s_rgDeviceList[(s_DeviceAddressMap[i].device)] = pDevice;

  00250	e59d1220	 ldr         r1, [sp, #0x220]
  00254	e3a03008	 mov         r3, #8
  00258	e0020391	 mul         r2, r1, r3
  0025c	e59f3054	 ldr         r3, [pc, #0x54]
  00260	e0833002	 add         r3, r3, r2
  00264	e2833004	 add         r3, r3, #4
  00268	e5931000	 ldr         r1, [r3]
  0026c	e3a03004	 mov         r3, #4
  00270	e0020391	 mul         r2, r1, r3
  00274	e59f3038	 ldr         r3, [pc, #0x38]
  00278	e0832002	 add         r2, r3, r2
  0027c	e59d3268	 ldr         r3, [sp, #0x268]
  00280	e5823000	 str         r3, [r2]

; 137  :             break;

  00284	ea000000	 b           |$LN2@InsertDevi|
  00288		 |$LN1@InsertDevi|

; 138  :             }
; 139  :         }

  00288	eaffffdc	 b           |$LN3@InsertDevi|
  0028c		 |$LN2@InsertDevi|

; 140  : 
; 141  :     rc = TRUE;

  0028c	e3a03001	 mov         r3, #1
  00290	e58d300c	 str         r3, [sp, #0xC]
  00294		 |$LN5@InsertDevi|
  00294		 |$LN8@InsertDevi|
  00294		 |$LN13@InsertDevi|
  00294		 |$cleanUp$40560|

; 142  : 
; 143  : cleanUp:
; 144  :     return rc;    

  00294	e59d0224	 ldr         r0, [sp, #0x224]
  00298	eb000000	 bl          __security_check_cookie
  0029c	e59d300c	 ldr         r3, [sp, #0xC]
  002a0	e58d3240	 str         r3, [sp, #0x240]

; 145  : }

  002a4	e59d0240	 ldr         r0, [sp, #0x240]
  002a8	e28ddf96	 add         sp, sp, #0x96, 30
  002ac	e89d6000	 ldmia       sp, {sp, lr}
  002b0	e12fff1e	 bx          lr
  002b4		 |$LN20@InsertDevi|
  002b4		 |$LN21@InsertDevi|
  002b4	00000000	 DCD         |s_rgDeviceList|
  002b8		 |$LN22@InsertDevi|
  002b8	00000000	 DCD         |s_DeviceAddressMap|
  002bc		 |$LN23@InsertDevi|
  002bc	00000000	 DCD         |??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@|
  002c0		 |$LN24@InsertDevi|
  002c0	00000000	 DCD         |__security_cookie|
  002c4		 |$M41233|

			 ENDP  ; |?InsertDevice@DeviceList@@UAAHPBGPAVDeviceBase@@PAUHKEY__@@@Z|, DeviceList::InsertDevice

	EXPORT	|?Unlock@DeviceList@@IAAXXZ|		; DeviceList::Unlock
	EXPORT	|?Lock@DeviceList@@IAAXXZ|		; DeviceList::Lock
	EXPORT	|?RemoveDevice@DeviceList@@UAAHPBGPAVDeviceBase@@@Z| ; DeviceList::RemoveDevice

  00018			 AREA	 |.pdata|, PDATA
|$T41246| DCD	|$LN9@RemoveDevi|
	DCD	0x40002c04
; Function compile flags: /Odtp

  002c4			 AREA	 |.text|, CODE, ARM

  002c4		 |?RemoveDevice@DeviceList@@UAAHPBGPAVDeviceBase@@@Z| PROC ; DeviceList::RemoveDevice

; 153  : {   

  002c4		 |$LN9@RemoveDevi|
  002c4	e1a0c00d	 mov         r12, sp
  002c8	e92d0007	 stmdb       sp!, {r0 - r2}
  002cc	e92d5000	 stmdb       sp!, {r12, lr}
  002d0	e24dd00c	 sub         sp, sp, #0xC
  002d4		 |$M41243|

; 154  :     BOOL rc = TRUE;

  002d4	e3a03001	 mov         r3, #1
  002d8	e58d3000	 str         r3, [sp]

; 155  : 
; 156  :     UNREFERENCED_PARAMETER(szDeviceName);
; 157  : 
; 158  :     Lock();

  002dc	e59d0014	 ldr         r0, [sp, #0x14]
  002e0	eb000000	 bl          |?Lock@DeviceList@@IAAXXZ|

; 159  :     
; 160  :     // Remove the device entry from the list
; 161  :     for(int i = 0; i<OMAP_MAX_DEVICE_COUNT; i++)

  002e4	e3a03000	 mov         r3, #0
  002e8	e58d3004	 str         r3, [sp, #4]
  002ec	ea000002	 b           |$LN4@RemoveDevi|
  002f0		 |$LN3@RemoveDevi|
  002f0	e59d3004	 ldr         r3, [sp, #4]
  002f4	e2833001	 add         r3, r3, #1
  002f8	e58d3004	 str         r3, [sp, #4]
  002fc		 |$LN4@RemoveDevi|
  002fc	e59d3004	 ldr         r3, [sp, #4]
  00300	e3530080	 cmp         r3, #0x80
  00304	aa000011	 bge         |$LN2@RemoveDevi|

; 162  :         {
; 163  :         if(s_rgDeviceList[i] == pDevice)

  00308	e59d1004	 ldr         r1, [sp, #4]
  0030c	e3a03004	 mov         r3, #4
  00310	e0020391	 mul         r2, r1, r3
  00314	e59f3054	 ldr         r3, [pc, #0x54]
  00318	e0833002	 add         r3, r3, r2
  0031c	e5932000	 ldr         r2, [r3]
  00320	e59d301c	 ldr         r3, [sp, #0x1C]
  00324	e1520003	 cmp         r2, r3
  00328	1a000007	 bne         |$LN1@RemoveDevi|

; 164  :             {
; 165  :             s_rgDeviceList[i] = NULL;

  0032c	e59d1004	 ldr         r1, [sp, #4]
  00330	e3a03004	 mov         r3, #4
  00334	e0020391	 mul         r2, r1, r3
  00338	e59f3030	 ldr         r3, [pc, #0x30]
  0033c	e0832002	 add         r2, r3, r2
  00340	e3a03000	 mov         r3, #0
  00344	e5823000	 str         r3, [r2]

; 166  :             break;

  00348	ea000000	 b           |$LN2@RemoveDevi|
  0034c		 |$LN1@RemoveDevi|

; 167  :             }
; 168  :         }

  0034c	eaffffe7	 b           |$LN3@RemoveDevi|
  00350		 |$LN2@RemoveDevi|

; 169  : 
; 170  :     Unlock();

  00350	e59d0014	 ldr         r0, [sp, #0x14]
  00354	eb000000	 bl          |?Unlock@DeviceList@@IAAXXZ|

; 171  :     return rc;

  00358	e59d3000	 ldr         r3, [sp]
  0035c	e58d3008	 str         r3, [sp, #8]

; 172  : }

  00360	e59d0008	 ldr         r0, [sp, #8]
  00364	e28dd00c	 add         sp, sp, #0xC
  00368	e89d6000	 ldmia       sp, {sp, lr}
  0036c	e12fff1e	 bx          lr
  00370		 |$LN10@RemoveDevi|
  00370		 |$LN11@RemoveDevi|
  00370	00000000	 DCD         |s_rgDeviceList|
  00374		 |$M41244|

			 ENDP  ; |?RemoveDevice@DeviceList@@UAAHPBGPAVDeviceBase@@@Z|, DeviceList::RemoveDevice

	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicelist.h

  00000			 AREA	 |.pdata|, PDATA
|$T41253| DCD	|$LN5@Lock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@DeviceList@@IAAXXZ| PROC	; DeviceList::Lock

; 62   :         {

  00000		 |$LN5@Lock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M41250|

; 63   :         ::EnterCriticalSection(&m_cs);

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830010	 add         r0, r3, #0x10
  00014	eb000000	 bl          EnterCriticalSection

; 64   :         }

  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M41251|

			 ENDP  ; |?Lock@DeviceList@@IAAXXZ|, DeviceList::Lock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T41260| DCD	|$LN5@Unlock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@DeviceList@@IAAXXZ| PROC	; DeviceList::Unlock

; 67   :         {

  00000		 |$LN5@Unlock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M41257|

; 68   :         ::LeaveCriticalSection(&m_cs);

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830010	 add         r0, r3, #0x10
  00014	eb000000	 bl          LeaveCriticalSection

; 69   :         }

  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M41258|

			 ENDP  ; |?Unlock@DeviceList@@IAAXXZ|, DeviceList::Unlock

	EXPORT	|?SendIoControl@DeviceList@@UAAHKKPAXK0KPAK@Z| ; DeviceList::SendIoControl

  00020			 AREA	 |.pdata|, PDATA
|$T41271| DCD	|$LN7@SendIoCont|
	DCD	0x40004004
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicelist.cpp

  00374			 AREA	 |.text|, CODE, ARM

  00374		 |?SendIoControl@DeviceList@@UAAHKKPAXK0KPAK@Z| PROC ; DeviceList::SendIoControl

; 185  : { 

  00374		 |$LN7@SendIoCont|
  00374	e1a0c00d	 mov         r12, sp
  00378	e92d000f	 stmdb       sp!, {r0 - r3}
  0037c	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  00380	e24dd024	 sub         sp, sp, #0x24
  00384		 |$M41268|

; 186  :     BOOL rc = TRUE;

  00384	e3a03001	 mov         r3, #1
  00388	e58d300c	 str         r3, [sp, #0xC]

; 187  : 
; 188  :     UNREFERENCED_PARAMETER(lpBytesReturned);
; 189  :     UNREFERENCED_PARAMETER(nOutBufSize);
; 190  :     UNREFERENCED_PARAMETER(lpOutBuf);
; 191  :     UNREFERENCED_PARAMETER(nInBufSize);
; 192  :     UNREFERENCED_PARAMETER(lpInBuf);
; 193  : 
; 194  :     if( dwParam >= OMAP_MAX_DEVICE_COUNT) return rc;

  0038c	e59d3038	 ldr         r3, [sp, #0x38]
  00390	e3530080	 cmp         r3, #0x80
  00394	3a000002	 bcc         |$LN2@SendIoCont|
  00398	e59d300c	 ldr         r3, [sp, #0xC]
  0039c	e58d3010	 str         r3, [sp, #0x10]
  003a0	ea00002e	 b           |$LN3@SendIoCont|
  003a4		 |$LN2@SendIoCont|

; 195  : 
; 196  :     if( s_rgDeviceList[dwParam] == NULL) return rc;

  003a4	e59d1038	 ldr         r1, [sp, #0x38]
  003a8	e3a03004	 mov         r3, #4
  003ac	e0020391	 mul         r2, r1, r3
  003b0	e59f30b8	 ldr         r3, [pc, #0xB8]
  003b4	e0833002	 add         r3, r3, r2
  003b8	e5933000	 ldr         r3, [r3]
  003bc	e3530000	 cmp         r3, #0
  003c0	1a000002	 bne         |$LN1@SendIoCont|
  003c4	e59d300c	 ldr         r3, [sp, #0xC]
  003c8	e58d3010	 str         r3, [sp, #0x10]
  003cc	ea000023	 b           |$LN3@SendIoCont|
  003d0		 |$LN1@SendIoCont|

; 197  :  
; 198  :     Lock();

  003d0	e59d0034	 ldr         r0, [sp, #0x34]
  003d4	eb000000	 bl          |?Lock@DeviceList@@IAAXXZ|

; 199  : 
; 200  :     // Send IOCTL to device
; 201  :     rc = (s_rgDeviceList[dwParam])->SendIoControl(dwIoControlCode, &dwParam, 
; 202  :                 sizeof(dwParam), NULL, NULL, NULL
; 203  :                 );

  003d8	e3a03000	 mov         r3, #0
  003dc	e58d3008	 str         r3, [sp, #8]
  003e0	e3a03000	 mov         r3, #0
  003e4	e58d3004	 str         r3, [sp, #4]
  003e8	e3a03000	 mov         r3, #0
  003ec	e58d3000	 str         r3, [sp]
  003f0	e3a03004	 mov         r3, #4
  003f4	e28d2038	 add         r2, sp, #0x38
  003f8	e59d103c	 ldr         r1, [sp, #0x3C]
  003fc	e59d4038	 ldr         r4, [sp, #0x38]
  00400	e3a00004	 mov         r0, #4
  00404	e00e0094	 mul         lr, r4, r0
  00408	e59f0060	 ldr         r0, [pc, #0x60]
  0040c	e080000e	 add         r0, r0, lr
  00410	e5905000	 ldr         r5, [r0]
  00414	e59d4038	 ldr         r4, [sp, #0x38]
  00418	e3a00004	 mov         r0, #4
  0041c	e00e0094	 mul         lr, r4, r0
  00420	e59f0048	 ldr         r0, [pc, #0x48]
  00424	e080000e	 add         r0, r0, lr
  00428	e5904000	 ldr         r4, [r0]
  0042c	e5950000	 ldr         r0, [r5]
  00430	e280e00c	 add         lr, r0, #0xC
  00434	e1a00004	 mov         r0, r4
  00438	e59e4000	 ldr         r4, [lr]
  0043c	e1a0e00f	 mov         lr, pc
  00440	e12fff14	 bx          r4
  00444	e58d0020	 str         r0, [sp, #0x20]
  00448	e59d3020	 ldr         r3, [sp, #0x20]
  0044c	e58d300c	 str         r3, [sp, #0xC]

; 204  :         
; 205  :     Unlock();

  00450	e59d0034	 ldr         r0, [sp, #0x34]
  00454	eb000000	 bl          |?Unlock@DeviceList@@IAAXXZ|

; 206  : 
; 207  :     return rc;

  00458	e59d300c	 ldr         r3, [sp, #0xC]
  0045c	e58d3010	 str         r3, [sp, #0x10]
  00460		 |$LN3@SendIoCont|

; 208  : }

  00460	e59d0010	 ldr         r0, [sp, #0x10]
  00464	e28dd024	 add         sp, sp, #0x24
  00468	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  0046c	e12fff1e	 bx          lr
  00470		 |$LN8@SendIoCont|
  00470		 |$LN9@SendIoCont|
  00470	00000000	 DCD         |s_rgDeviceList|
  00474		 |$M41269|

			 ENDP  ; |?SendIoControl@DeviceList@@UAAHKKPAXK0KPAK@Z|, DeviceList::SendIoControl

	EXPORT	|??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory
; File c:\wince600\public\common\oak\inc\singleton.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T41278| DCD	|$LN5@factory|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| PROC ; `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''

; 390  :     {

  00000		 |$LN5@factory|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41275|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@factory|
  00014		 |$LN7@factory|
  00014	00000000	 DCD         |?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A|
  00018		 |$M41276|

			 ENDP  ; |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ|, `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''

	EXPORT	|?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

  00000			 AREA	 |.pdata|, PDATA
|$T41288| DCD	|$LN5@lock_facto|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

; 339  :         lock_factory()

  00000		 |$LN5@lock_facto|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M41285|
  00010	eb000000	 bl          |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|

; 340  :             {get_lock(); }

  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M41286|

			 ENDP  ; |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

	EXPORT	|??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
	EXPORT	|??0critical_section@ce@@QAA@XZ|	; ce::critical_section::critical_section
	EXPORT	|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs
	EXPORT	|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'
	IMPORT	|atexit|

  00000			 AREA	 |.bss|, NOINIT
|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| % 0x14 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs

  00000			 AREA	 |.bss|, NOINIT
|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| % 0x4 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'

  00000			 AREA	 |.pdata|, PDATA
|$T41296| DCD	|$LN6@get_lock|
	DCD	0x40001b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

; 320  :     {

  00000		 |$LN6@get_lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M41293|

; 321  :         static critical_section cs;

  00008	e59f3058	 ldr         r3, [pc, #0x58]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e3130001	 tst         r3, #1
  00014	1a000008	 bne         |$LN1@get_lock|
  00018	e59f3048	 ldr         r3, [pc, #0x48]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e3832001	 orr         r2, r3, #1
  00024	e59f303c	 ldr         r3, [pc, #0x3C]
  00028	e5832000	 str         r2, [r3]
  0002c	e59f0028	 ldr         r0, [pc, #0x28]
  00030	eb000000	 bl          |??0critical_section@ce@@QAA@XZ|
  00034	e59f0028	 ldr         r0, [pc, #0x28]
  00038	eb000000	 bl          atexit
  0003c		 |$LN1@get_lock|

; 322  :         
; 323  :         //
; 324  :         // This statement forces compiler to instantiate _factory member
; 325  :         // thus assuring that lock_factory ctor is called. 
; 326  :         //
; 327  :         lock_factory* volatile p = &_factory;

  0003c	e59f301c	 ldr         r3, [pc, #0x1C]
  00040	e58d3000	 str         r3, [sp]

; 328  : 
; 329  :         return cs;

  00044	e59f3010	 ldr         r3, [pc, #0x10]
  00048	e58d3004	 str         r3, [sp, #4]

; 330  :     }

  0004c	e59d0004	 ldr         r0, [sp, #4]
  00050	e28dd008	 add         sp, sp, #8
  00054	e49de004	 ldr         lr, [sp], #4
  00058	e12fff1e	 bx          lr
  0005c		 |$LN7@get_lock|
  0005c		 |$LN8@get_lock|
  0005c	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  00060		 |$LN9@get_lock|
  00060	00000000	 DCD         |?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A|
  00064		 |$LN10@get_lock|
  00064	00000000	 DCD         |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|
  00068		 |$LN11@get_lock|
  00068	00000000	 DCD         |??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51|
  0006c		 |$M41294|

			 ENDP  ; |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

; File c:\wince600\public\common\oak\inc\sync.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T41309| DCD	|$LN5@critical_s|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::critical_section

; 125  :     critical_section()

  00000		 |$LN5@critical_s|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M41306|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          InitializeCriticalSection
  00018	e59d300c	 ldr         r3, [sp, #0xC]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M41307|

			 ENDP  ; |??0critical_section@ce@@QAA@XZ|, ce::critical_section::critical_section

	EXPORT	|??1critical_section@ce@@QAA@XZ|	; ce::critical_section::~critical_section

  00000			 AREA	 |.pdata|, PDATA
|$T41316| DCD	|$LN5@dynamic|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| PROC ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
  00000		 |$LN5@dynamic|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41313|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          |??1critical_section@ce@@QAA@XZ|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@dynamic|
  00014		 |$LN7@dynamic|
  00014	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  00018		 |$M41314|

			 ENDP  ; |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|, `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''

	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T41325| DCD	|$LN5@critical_s@2|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::~critical_section

; 129  :         {DeleteCriticalSection(this); }

  00000		 |$LN5@critical_s@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M41322|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          DeleteCriticalSection
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M41323|

			 ENDP  ; |??1critical_section@ce@@QAA@XZ|, ce::critical_section::~critical_section

	EXPORT	|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| [ DATA ] ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.bss|, NOINIT
|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| % 0x1 ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.CRT$XCU|, DATA
|?_factory$initializer$@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1P6AXXZA| DCD |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory$initializer$
	END
