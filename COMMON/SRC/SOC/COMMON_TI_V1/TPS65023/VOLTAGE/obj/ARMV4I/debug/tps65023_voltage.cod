; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\TPS65023\VOLTAGE\tps65023_voltage.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|LDO2_table| [ DATA ]
	EXPORT	|LDO1_table| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_hTwl| %	0x4

  00000			 AREA	 |.data|, DATA
|LDO2_table| DCW 0x41a
	DCW	0x4b0
	DCW	0x514
	DCW	0x708
	DCW	0x9c4
	DCW	0xaf0
	DCW	0xbb8
	DCW	0xce4
	DCW	0xffff
	%	2
|LDO1_table| DCW 0x3e8
	DCW	0x44c
	DCW	0x514
	DCW	0x708
	DCW	0x898
	DCW	0xa28
	DCW	0xaf0
	DCW	0xc4e
	DCW	0xffff

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|ValidateHandle|
	IMPORT	|TWLOpen|

  00000			 AREA	 |.pdata|, PDATA
|$T43621| DCD	|$LN8@ValidateHa|
	DCD	0x40001b02
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps65023\voltage\tps65023_voltage.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ValidateHandle| PROC

; 90   : {

  00000		 |$LN8@ValidateHa|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M43618|

; 91   : 	if ( g_hTwl == NULL)

  00008	e59f3058	 ldr         r3, [pc, #0x58]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e3530000	 cmp         r3, #0
  00014	1a000004	 bne         |$LN1@ValidateHa|

; 92   : 	{
; 93   : 		g_hTwl = TWLOpen();

  00018	eb000000	 bl          TWLOpen
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d2004	 ldr         r2, [sp, #4]
  00024	e59f303c	 ldr         r3, [pc, #0x3C]
  00028	e5832000	 str         r2, [r3]
  0002c		 |$LN1@ValidateHa|

; 94   : 	}
; 95   : 	return (g_hTwl != NULL);

  0002c	e59f3034	 ldr         r3, [pc, #0x34]
  00030	e5933000	 ldr         r3, [r3]
  00034	e3530000	 cmp         r3, #0
  00038	0a000002	 beq         |$LN4@ValidateHa|
  0003c	e3a03001	 mov         r3, #1
  00040	e58d3008	 str         r3, [sp, #8]
  00044	ea000001	 b           |$LN5@ValidateHa|
  00048		 |$LN4@ValidateHa|
  00048	e3a03000	 mov         r3, #0
  0004c	e58d3008	 str         r3, [sp, #8]
  00050		 |$LN5@ValidateHa|
  00050	e59d3008	 ldr         r3, [sp, #8]
  00054	e58d3000	 str         r3, [sp]

; 96   : }

  00058	e59d0000	 ldr         r0, [sp]
  0005c	e28dd00c	 add         sp, sp, #0xC
  00060	e49de004	 ldr         lr, [sp], #4
  00064	e12fff1e	 bx          lr
  00068		 |$LN9@ValidateHa|
  00068		 |$LN10@ValidateHa|
  00068	00000000	 DCD         |g_hTwl|
  0006c		 |$M43619|

			 ENDP  ; |ValidateHandle|

	EXPORT	|TWLSetVoltage|
	IMPORT	|TWLWriteRegs|
	IMPORT	|TWLSetValue|
	IMPORT	|__rt_udiv|

  00008			 AREA	 |.pdata|, PDATA
|$T43637| DCD	|$LN27@TWLSetVolt|
	DCD	0x40007e04
; Function compile flags: /Odtp

  0006c			 AREA	 |.text|, CODE, ARM

  0006c		 |TWLSetVoltage| PROC

; 116  : {

  0006c		 |$LN27@TWLSetVolt|
  0006c	e1a0c00d	 mov         r12, sp
  00070	e92d0003	 stmdb       sp!, {r0, r1}
  00074	e92d5000	 stmdb       sp!, {r12, lr}
  00078	e24dd010	 sub         sp, sp, #0x10
  0007c		 |$M43634|

; 117  : 	BYTE Buffer;
; 118  : 	ValidateHandle();

  0007c	eb000000	 bl          ValidateHandle

; 119  : 	
; 120  : 	switch(voltage)

  00080	e59d3018	 ldr         r3, [sp, #0x18]
  00084	e58d3008	 str         r3, [sp, #8]
  00088	e59d3008	 ldr         r3, [sp, #8]
  0008c	e3530004	 cmp         r3, #4
  00090	8a000067	 bhi         |$LN1@TWLSetVolt|
  00094	e59d2008	 ldr         r2, [sp, #8]
  00098	e1a03102	 mov         r3, r2, lsl #2
  0009c	e083300f	 add         r3, r3, pc
  000a0	e5933004	 ldr         r3, [r3, #4]
  000a4	e08ff003	 add         pc, pc, r3
  000a8		 |$LN19@TWLSetVolt|
  000a8		 |$LN18@TWLSetVolt|
  000a8		 |$LN20@TWLSetVolt|
  000a8	00000010	 DCD         0x10
  000ac		 |$LN21@TWLSetVolt|
  000ac	00000070	 DCD         0x70
  000b0		 |$LN22@TWLSetVolt|
  000b0	000000e0	 DCD         0xe0
  000b4		 |$LN23@TWLSetVolt|
  000b4	00000170	 DCD         0x170
  000b8		 |$LN24@TWLSetVolt|
  000b8	0000017c	 DCD         0x17c
  000bc		 |$LN13@TWLSetVolt|

; 121  : 	{
; 122  : 	case VLDO1:
; 123  : 		if( mv < VLDO1_MIN_VOLTAGE || mv > VLDO1_MAX_VOLTAGE)

  000bc	e59d301c	 ldr         r3, [sp, #0x1C]
  000c0	e3530ffa	 cmp         r3, #0xFA, 30
  000c4	3a000004	 bcc         |$LN11@TWLSetVolt|
  000c8	e59d201c	 ldr         r2, [sp, #0x1C]
  000cc	e3a03b03	 mov         r3, #3, 22
  000d0	e383304e	 orr         r3, r3, #0x4E
  000d4	e1520003	 cmp         r2, r3
  000d8	9a000002	 bls         |$LN12@TWLSetVolt|
  000dc		 |$LN11@TWLSetVolt|

; 124  : 			return FALSE;

  000dc	e3a03000	 mov         r3, #0
  000e0	e58d3004	 str         r3, [sp, #4]
  000e4	ea000057	 b           |$LN16@TWLSetVolt|
  000e8		 |$LN12@TWLSetVolt|

; 125  : 		Buffer = FindVoltageIndex(LDO1_table,mv);

  000e8	e59d101c	 ldr         r1, [sp, #0x1C]
  000ec	e59f016c	 ldr         r0, [pc, #0x16C]
  000f0	eb000000	 bl          FindVoltageIndex
  000f4	e5cd000c	 strb        r0, [sp, #0xC]
  000f8	e5dd300c	 ldrb        r3, [sp, #0xC]
  000fc	e5cd3000	 strb        r3, [sp]

; 126  : 		TWLSetValue(g_hTwl, LDO_CTRL, Buffer, 0x7);

  00100	e3a03007	 mov         r3, #7
  00104	e5dd2000	 ldrb        r2, [sp]
  00108	e3a01008	 mov         r1, #8
  0010c	e59f0144	 ldr         r0, [pc, #0x144]
  00110	e5900000	 ldr         r0, [r0]
  00114	eb000000	 bl          TWLSetValue

; 127  : 		break;

  00118	ea000048	 b           |$LN14@TWLSetVolt|
  0011c		 |$LN10@TWLSetVolt|

; 128  : 
; 129  : 	case VLDO2:
; 130  : 		if( mv < VLDO2_MIN_VOLTAGE || mv > VLDO2_MAX_VOLTAGE)

  0011c	e59d201c	 ldr         r2, [sp, #0x1C]
  00120	e3a03b01	 mov         r3, #1, 22
  00124	e383301a	 orr         r3, r3, #0x1A
  00128	e1520003	 cmp         r2, r3
  0012c	3a000004	 bcc         |$LN8@TWLSetVolt|
  00130	e59d201c	 ldr         r2, [sp, #0x1C]
  00134	e3a03b03	 mov         r3, #3, 22
  00138	e38330e4	 orr         r3, r3, #0xE4
  0013c	e1520003	 cmp         r2, r3
  00140	9a000002	 bls         |$LN9@TWLSetVolt|
  00144		 |$LN8@TWLSetVolt|

; 131  : 			return FALSE;

  00144	e3a03000	 mov         r3, #0
  00148	e58d3004	 str         r3, [sp, #4]
  0014c	ea00003d	 b           |$LN16@TWLSetVolt|
  00150		 |$LN9@TWLSetVolt|

; 132  : 		Buffer = FindVoltageIndex(LDO2_table,mv);		

  00150	e59d101c	 ldr         r1, [sp, #0x1C]
  00154	e59f0100	 ldr         r0, [pc, #0x100]
  00158	eb000000	 bl          FindVoltageIndex
  0015c	e5cd000d	 strb        r0, [sp, #0xD]
  00160	e5dd300d	 ldrb        r3, [sp, #0xD]
  00164	e5cd3000	 strb        r3, [sp]

; 133  : 		TWLSetValue(g_hTwl, LDO_CTRL, Buffer << 4, 0x7 << 4);

  00168	e3a03070	 mov         r3, #0x70
  0016c	e5dd2000	 ldrb        r2, [sp]
  00170	e1a02202	 mov         r2, r2, lsl #4
  00174	e20220ff	 and         r2, r2, #0xFF
  00178	e3a01008	 mov         r1, #8
  0017c	e59f00d4	 ldr         r0, [pc, #0xD4]
  00180	e5900000	 ldr         r0, [r0]
  00184	eb000000	 bl          TWLSetValue

; 134  : 		break;

  00188	ea00002c	 b           |$LN14@TWLSetVolt|
  0018c		 |$LN7@TWLSetVolt|

; 135  : 
; 136  : 	case VDCDC1:
; 137  : 		if( mv < VDCDC1_MIN_VOLTAGE || mv > VDCDC1_MAX_VOLTAGE)

  0018c	e59d301c	 ldr         r3, [sp, #0x1C]
  00190	e3530e32	 cmp         r3, #0x32, 28
  00194	3a000002	 bcc         |$LN5@TWLSetVolt|
  00198	e59d301c	 ldr         r3, [sp, #0x1C]
  0019c	e3530d19	 cmp         r3, #0x19, 26
  001a0	9a000002	 bls         |$LN6@TWLSetVolt|
  001a4		 |$LN5@TWLSetVolt|

; 138  : 			return FALSE;

  001a4	e3a03000	 mov         r3, #0
  001a8	e58d3004	 str         r3, [sp, #4]
  001ac	ea000025	 b           |$LN16@TWLSetVolt|
  001b0		 |$LN6@TWLSetVolt|

; 139  :         
; 140  :         if (mv > 1575)  //special case (0x1F that should be 1575mv is actually 1600mv)

  001b0	e59d201c	 ldr         r2, [sp, #0x1C]
  001b4	e3a03c06	 mov         r3, #6, 24
  001b8	e3833027	 orr         r3, r3, #0x27
  001bc	e1520003	 cmp         r2, r3
  001c0	9a000002	 bls         |$LN4@TWLSetVolt|

; 141  :             mv = 1575;

  001c4	e3a03c06	 mov         r3, #6, 24
  001c8	e3833027	 orr         r3, r3, #0x27
  001cc	e58d301c	 str         r3, [sp, #0x1C]
  001d0		 |$LN4@TWLSetVolt|

; 142  : 
; 143  : 		Buffer = (BYTE) ((mv - VDCDC1_MIN_VOLTAGE)/VDCDC1_VOLTAGE_STEP);        

  001d0	e59d301c	 ldr         r3, [sp, #0x1C]
  001d4	e2431e32	 sub         r1, r3, #0x32, 28
  001d8	e3a00019	 mov         r0, #0x19
  001dc	eb000000	 bl          __rt_udiv
  001e0	e20030ff	 and         r3, r0, #0xFF
  001e4	e5cd3000	 strb        r3, [sp]

; 144  : 		TWLWriteRegs(g_hTwl, DEFCORE, &Buffer, 1);

  001e8	e3a03001	 mov         r3, #1
  001ec	e28d2000	 add         r2, sp, #0
  001f0	e3a01006	 mov         r1, #6
  001f4	e59f005c	 ldr         r0, [pc, #0x5C]
  001f8	e5900000	 ldr         r0, [r0]
  001fc	eb000000	 bl          TWLWriteRegs

; 145  :         TWLSetValue(g_hTwl, CON_CTRL2, CON_CTRL2_GO, CON_CTRL2_GO);

  00200	e3a03080	 mov         r3, #0x80
  00204	e3a02080	 mov         r2, #0x80
  00208	e3a01005	 mov         r1, #5
  0020c	e59f0044	 ldr         r0, [pc, #0x44]
  00210	e5900000	 ldr         r0, [r0]
  00214	eb000000	 bl          TWLSetValue

; 146  :         
; 147  : 		break;

  00218	ea000008	 b           |$LN14@TWLSetVolt|
  0021c		 |$LN3@TWLSetVolt|

; 148  : 
; 149  : 	case VDCDC2:
; 150  : 		return FALSE;

  0021c	e3a03000	 mov         r3, #0
  00220	e58d3004	 str         r3, [sp, #4]
  00224	ea000007	 b           |$LN16@TWLSetVolt|
  00228		 |$LN2@TWLSetVolt|

; 151  : 
; 152  : 	case VDCDC3:
; 153  : 		return FALSE;

  00228	e3a03000	 mov         r3, #0
  0022c	e58d3004	 str         r3, [sp, #4]
  00230	ea000004	 b           |$LN16@TWLSetVolt|
  00234		 |$LN1@TWLSetVolt|

; 154  : 
; 155  : 	default :
; 156  : 		return FALSE;

  00234	e3a03000	 mov         r3, #0
  00238	e58d3004	 str         r3, [sp, #4]
  0023c	ea000001	 b           |$LN16@TWLSetVolt|
  00240		 |$LN14@TWLSetVolt|

; 157  : 	}
; 158  : 	return TRUE;

  00240	e3a03001	 mov         r3, #1
  00244	e58d3004	 str         r3, [sp, #4]
  00248		 |$LN16@TWLSetVolt|

; 159  : }

  00248	e59d0004	 ldr         r0, [sp, #4]
  0024c	e28dd010	 add         sp, sp, #0x10
  00250	e89d6000	 ldmia       sp, {sp, lr}
  00254	e12fff1e	 bx          lr
  00258		 |$LN28@TWLSetVolt|
  00258		 |$LN29@TWLSetVolt|
  00258	00000000	 DCD         |g_hTwl|
  0025c		 |$LN30@TWLSetVolt|
  0025c	00000000	 DCD         |LDO2_table|
  00260		 |$LN31@TWLSetVolt|
  00260	00000000	 DCD         |LDO1_table|
  00264		 |$M43635|

			 ENDP  ; |TWLSetVoltage|


  00010			 AREA	 |.pdata|, PDATA
|$T43647| DCD	|$LN8@FindVoltag|
	DCD	0x40002c04
; Function compile flags: /Odtp

  00264			 AREA	 |.text|, CODE, ARM

  00264		 |FindVoltageIndex| PROC

; 99   : {

  00264		 |$LN8@FindVoltag|
  00264	e1a0c00d	 mov         r12, sp
  00268	e92d0003	 stmdb       sp!, {r0, r1}
  0026c	e92d5000	 stmdb       sp!, {r12, lr}
  00270	e24dd008	 sub         sp, sp, #8
  00274		 |$M43644|

; 100  :     BYTE i=0;    

  00274	e3a03000	 mov         r3, #0
  00278	e5cd3000	 strb        r3, [sp]
  0027c		 |$LN3@FindVoltag|

; 101  :     while (table[i] != 0xFFFF)    

  0027c	e5dd3000	 ldrb        r3, [sp]
  00280	e1a01003	 mov         r1, r3
  00284	e3a03002	 mov         r3, #2
  00288	e0020391	 mul         r2, r1, r3
  0028c	e59d3010	 ldr         r3, [sp, #0x10]
  00290	e0833002	 add         r3, r3, r2
  00294	e1d330b0	 ldrh        r3, [r3]
  00298	e1a02003	 mov         r2, r3
  0029c	e3a03cff	 mov         r3, #0xFF, 24
  002a0	e38330ff	 orr         r3, r3, #0xFF
  002a4	e1520003	 cmp         r2, r3
  002a8	0a000011	 beq         |$LN2@FindVoltag|

; 102  :     {
; 103  :         if (mv < table[i])

  002ac	e5dd3000	 ldrb        r3, [sp]
  002b0	e1a01003	 mov         r1, r3
  002b4	e3a03002	 mov         r3, #2
  002b8	e0020391	 mul         r2, r1, r3
  002bc	e59d3010	 ldr         r3, [sp, #0x10]
  002c0	e0833002	 add         r3, r3, r2
  002c4	e1d320b0	 ldrh        r2, [r3]
  002c8	e59d3014	 ldr         r3, [sp, #0x14]
  002cc	e1530002	 cmp         r3, r2
  002d0	2a000002	 bcs         |$LN1@FindVoltag|

; 104  :         {            
; 105  :             return i;            

  002d4	e5dd3000	 ldrb        r3, [sp]
  002d8	e5cd3004	 strb        r3, [sp, #4]
  002dc	ea000008	 b           |$LN4@FindVoltag|
  002e0		 |$LN1@FindVoltag|

; 106  :         }
; 107  :         i++;

  002e0	e5dd3000	 ldrb        r3, [sp]
  002e4	e2833001	 add         r3, r3, #1
  002e8	e20330ff	 and         r3, r3, #0xFF
  002ec	e5cd3000	 strb        r3, [sp]

; 108  :     }

  002f0	eaffffe1	 b           |$LN3@FindVoltag|
  002f4		 |$LN2@FindVoltag|

; 109  :     return i-1;

  002f4	e5dd3000	 ldrb        r3, [sp]
  002f8	e2433001	 sub         r3, r3, #1
  002fc	e20330ff	 and         r3, r3, #0xFF
  00300	e5cd3004	 strb        r3, [sp, #4]
  00304		 |$LN4@FindVoltag|

; 110  : }

  00304	e5dd0004	 ldrb        r0, [sp, #4]
  00308	e28dd008	 add         sp, sp, #8
  0030c	e89d6000	 ldmia       sp, {sp, lr}
  00310	e12fff1e	 bx          lr
  00314		 |$M43645|

			 ENDP  ; |FindVoltageIndex|

	EXPORT	|TWLGetVoltage|
	IMPORT	|TWLReadRegs|

  00018			 AREA	 |.pdata|, PDATA
|$T43660| DCD	|$LN21@TWLGetVolt|
	DCD	0x40006004
; Function compile flags: /Odtp

  00314			 AREA	 |.text|, CODE, ARM

  00314		 |TWLGetVoltage| PROC

; 166  : {

  00314		 |$LN21@TWLGetVolt|
  00314	e1a0c00d	 mov         r12, sp
  00318	e92d0003	 stmdb       sp!, {r0, r1}
  0031c	e92d5000	 stmdb       sp!, {r12, lr}
  00320	e24dd00c	 sub         sp, sp, #0xC
  00324		 |$M43657|

; 167  : 	BYTE Buffer;
; 168  : 	ValidateHandle();

  00324	eb000000	 bl          ValidateHandle

; 169  : 
; 170  : 	switch(voltage)

  00328	e59d3014	 ldr         r3, [sp, #0x14]
  0032c	e58d3008	 str         r3, [sp, #8]
  00330	e59d3008	 ldr         r3, [sp, #8]
  00334	e3530004	 cmp         r3, #4
  00338	8a000049	 bhi         |$LN1@TWLGetVolt|
  0033c	e59d2008	 ldr         r2, [sp, #8]
  00340	e1a03102	 mov         r3, r2, lsl #2
  00344	e083300f	 add         r3, r3, pc
  00348	e5933004	 ldr         r3, [r3, #4]
  0034c	e08ff003	 add         pc, pc, r3
  00350		 |$LN13@TWLGetVolt|
  00350		 |$LN12@TWLGetVolt|
  00350		 |$LN14@TWLGetVolt|
  00350	00000010	 DCD         0x10
  00354		 |$LN15@TWLGetVolt|
  00354	00000050	 DCD         0x50
  00358		 |$LN16@TWLGetVolt|
  00358	00000094	 DCD         0x94
  0035c		 |$LN17@TWLGetVolt|
  0035c	000000f0	 DCD         0xf0
  00360		 |$LN18@TWLGetVolt|
  00360	00000100	 DCD         0x100
  00364		 |$LN7@TWLGetVolt|

; 171  : 	{
; 172  : 	case VLDO1:
; 173  : 		TWLReadRegs(g_hTwl, LDO_CTRL, &Buffer, 1);		

  00364	e3a03001	 mov         r3, #1
  00368	e28d2000	 add         r2, sp, #0
  0036c	e3a01008	 mov         r1, #8
  00370	e59f0110	 ldr         r0, [pc, #0x110]
  00374	e5900000	 ldr         r0, [r0]
  00378	eb000000	 bl          TWLReadRegs

; 174  : 		*pmv = LDO1_table[Buffer & 0x7];

  0037c	e5dd3000	 ldrb        r3, [sp]
  00380	e2031007	 and         r1, r3, #7
  00384	e3a03002	 mov         r3, #2
  00388	e0020391	 mul         r2, r1, r3
  0038c	e59f30fc	 ldr         r3, [pc, #0xFC]
  00390	e0833002	 add         r3, r3, r2
  00394	e1d320b0	 ldrh        r2, [r3]
  00398	e59d3018	 ldr         r3, [sp, #0x18]
  0039c	e5832000	 str         r2, [r3]

; 175  : 		break;

  003a0	ea000032	 b           |$LN8@TWLGetVolt|
  003a4		 |$LN6@TWLGetVolt|

; 176  : 
; 177  : 	case VLDO2:
; 178  : 		TWLReadRegs(g_hTwl, LDO_CTRL, &Buffer, 1);

  003a4	e3a03001	 mov         r3, #1
  003a8	e28d2000	 add         r2, sp, #0
  003ac	e3a01008	 mov         r1, #8
  003b0	e59f00d0	 ldr         r0, [pc, #0xD0]
  003b4	e5900000	 ldr         r0, [r0]
  003b8	eb000000	 bl          TWLReadRegs

; 179  : 		*pmv = LDO2_table[(Buffer >> 4) & 0x7];

  003bc	e5dd3000	 ldrb        r3, [sp]
  003c0	e1a03243	 mov         r3, r3, asr #4
  003c4	e2031007	 and         r1, r3, #7
  003c8	e3a03002	 mov         r3, #2
  003cc	e0020391	 mul         r2, r1, r3
  003d0	e59f30b4	 ldr         r3, [pc, #0xB4]
  003d4	e0833002	 add         r3, r3, r2
  003d8	e1d320b0	 ldrh        r2, [r3]
  003dc	e59d3018	 ldr         r3, [sp, #0x18]
  003e0	e5832000	 str         r2, [r3]

; 180  : 		break;

  003e4	ea000021	 b           |$LN8@TWLGetVolt|
  003e8		 |$LN5@TWLGetVolt|

; 181  : 
; 182  : 	case VDCDC1:
; 183  : 		TWLReadRegs(g_hTwl, DEFCORE, &Buffer, 1);        

  003e8	e3a03001	 mov         r3, #1
  003ec	e28d2000	 add         r2, sp, #0
  003f0	e3a01006	 mov         r1, #6
  003f4	e59f008c	 ldr         r0, [pc, #0x8C]
  003f8	e5900000	 ldr         r0, [r0]
  003fc	eb000000	 bl          TWLReadRegs

; 184  : 		*pmv = (Buffer * VDCDC1_VOLTAGE_STEP) + VDCDC1_MIN_VOLTAGE;

  00400	e5dd3000	 ldrb        r3, [sp]
  00404	e1a02003	 mov         r2, r3
  00408	e3a03019	 mov         r3, #0x19
  0040c	e0030392	 mul         r3, r2, r3
  00410	e2832e32	 add         r2, r3, #0x32, 28
  00414	e59d3018	 ldr         r3, [sp, #0x18]
  00418	e5832000	 str         r2, [r3]

; 185  :         if (*pmv == 1575) //special case

  0041c	e59d3018	 ldr         r3, [sp, #0x18]
  00420	e5932000	 ldr         r2, [r3]
  00424	e3a03c06	 mov         r3, #6, 24
  00428	e3833027	 orr         r3, r3, #0x27
  0042c	e1520003	 cmp         r2, r3
  00430	1a000002	 bne         |$LN4@TWLGetVolt|

; 186  :             *pmv = 1600; 

  00434	e59d2018	 ldr         r2, [sp, #0x18]
  00438	e3a03d19	 mov         r3, #0x19, 26
  0043c	e5823000	 str         r3, [r2]
  00440		 |$LN4@TWLGetVolt|

; 187  : 		break;

  00440	ea00000a	 b           |$LN8@TWLGetVolt|
  00444		 |$LN3@TWLGetVolt|

; 188  : 
; 189  : 	case VDCDC2:
; 190  : 		return FALSE;

  00444	e3a03000	 mov         r3, #0
  00448	e58d3004	 str         r3, [sp, #4]
  0044c	ea000009	 b           |$LN10@TWLGetVolt|

; 191  : 		break;

  00450	ea000006	 b           |$LN8@TWLGetVolt|
  00454		 |$LN2@TWLGetVolt|

; 192  : 
; 193  : 	case VDCDC3:
; 194  : 		return FALSE;

  00454	e3a03000	 mov         r3, #0
  00458	e58d3004	 str         r3, [sp, #4]
  0045c	ea000005	 b           |$LN10@TWLGetVolt|

; 195  : 		break;

  00460	ea000002	 b           |$LN8@TWLGetVolt|
  00464		 |$LN1@TWLGetVolt|

; 196  : 
; 197  : 	default :
; 198  : 		return FALSE;

  00464	e3a03000	 mov         r3, #0
  00468	e58d3004	 str         r3, [sp, #4]
  0046c	ea000001	 b           |$LN10@TWLGetVolt|
  00470		 |$LN8@TWLGetVolt|

; 199  : 	}
; 200  : 	return TRUE;

  00470	e3a03001	 mov         r3, #1
  00474	e58d3004	 str         r3, [sp, #4]
  00478		 |$LN10@TWLGetVolt|

; 201  : }

  00478	e59d0004	 ldr         r0, [sp, #4]
  0047c	e28dd00c	 add         sp, sp, #0xC
  00480	e89d6000	 ldmia       sp, {sp, lr}
  00484	e12fff1e	 bx          lr
  00488		 |$LN22@TWLGetVolt|
  00488		 |$LN23@TWLGetVolt|
  00488	00000000	 DCD         |g_hTwl|
  0048c		 |$LN24@TWLGetVolt|
  0048c	00000000	 DCD         |LDO2_table|
  00490		 |$LN25@TWLGetVolt|
  00490	00000000	 DCD         |LDO1_table|
  00494		 |$M43658|

			 ENDP  ; |TWLGetVoltage|

	EXPORT	|TWLGetVoltageStatus|

  00020			 AREA	 |.pdata|, PDATA
|$T43679| DCD	|$LN32@TWLGetVolt@2|
	DCD	0x40006104
; Function compile flags: /Odtp

  00494			 AREA	 |.text|, CODE, ARM

  00494		 |TWLGetVoltageStatus| PROC

; 208  : {

  00494		 |$LN32@TWLGetVolt@2|
  00494	e1a0c00d	 mov         r12, sp
  00498	e92d0003	 stmdb       sp!, {r0, r1}
  0049c	e92d5000	 stmdb       sp!, {r12, lr}
  004a0	e24dd010	 sub         sp, sp, #0x10
  004a4		 |$M43676|

; 209  : 	BYTE Buffer;
; 210  : 	*status = VOLTAGE_OK;

  004a4	e59d201c	 ldr         r2, [sp, #0x1C]
  004a8	e3a03001	 mov         r3, #1
  004ac	e5823000	 str         r3, [r2]

; 211  : 	ValidateHandle();

  004b0	eb000000	 bl          ValidateHandle

; 212  : 	if(!TWLReadRegs(g_hTwl, PGOODZ, &Buffer, 1))

  004b4	e3a03001	 mov         r3, #1
  004b8	e28d2000	 add         r2, sp, #0
  004bc	e3a01001	 mov         r1, #1
  004c0	e59f014c	 ldr         r0, [pc, #0x14C]
  004c4	e5900000	 ldr         r0, [r0]
  004c8	eb000000	 bl          TWLReadRegs
  004cc	e58d0008	 str         r0, [sp, #8]
  004d0	e59d3008	 ldr         r3, [sp, #8]
  004d4	e3530000	 cmp         r3, #0
  004d8	1a000002	 bne         |$LN18@TWLGetVolt@2|

; 213  : 		return FALSE;

  004dc	e3a03000	 mov         r3, #0
  004e0	e58d3004	 str         r3, [sp, #4]
  004e4	ea000046	 b           |$LN19@TWLGetVolt@2|
  004e8		 |$LN18@TWLGetVolt@2|

; 214  : 	switch(voltage)

  004e8	e59d3018	 ldr         r3, [sp, #0x18]
  004ec	e58d300c	 str         r3, [sp, #0xC]
  004f0	e59d300c	 ldr         r3, [sp, #0xC]
  004f4	e3530006	 cmp         r3, #6
  004f8	8a00003c	 bhi         |$LN1@TWLGetVolt@2|
  004fc	e59d200c	 ldr         r2, [sp, #0xC]
  00500	e1a03102	 mov         r3, r2, lsl #2
  00504	e083300f	 add         r3, r3, pc
  00508	e5933004	 ldr         r3, [r3, #4]
  0050c	e08ff003	 add         pc, pc, r3
  00510		 |$LN22@TWLGetVolt@2|
  00510		 |$LN21@TWLGetVolt@2|
  00510		 |$LN23@TWLGetVolt@2|
  00510	00000018	 DCD         0x18
  00514		 |$LN24@TWLGetVolt@2|
  00514	00000034	 DCD         0x34
  00518		 |$LN25@TWLGetVolt@2|
  00518	00000050	 DCD         0x50
  0051c		 |$LN26@TWLGetVolt@2|
  0051c	0000006c	 DCD         0x6c
  00520		 |$LN27@TWLGetVolt@2|
  00520	00000088	 DCD         0x88
  00524		 |$LN28@TWLGetVolt@2|
  00524	000000a4	 DCD         0xa4
  00528		 |$LN29@TWLGetVolt@2|
  00528	000000c0	 DCD         0xc0
  0052c		 |$LN15@TWLGetVolt@2|

; 215  : 	{
; 216  : 	case VLDO1:
; 217  : 		if(Buffer & PGOODZ_LDO1)

  0052c	e5dd3000	 ldrb        r3, [sp]
  00530	e3130002	 tst         r3, #2
  00534	0a000002	 beq         |$LN14@TWLGetVolt@2|

; 218  : 			*status = VOLTAGE_FAILURE;

  00538	e59d201c	 ldr         r2, [sp, #0x1C]
  0053c	e3a03000	 mov         r3, #0
  00540	e5823000	 str         r3, [r2]
  00544		 |$LN14@TWLGetVolt@2|

; 219  : 		break;

  00544	ea00002c	 b           |$LN16@TWLGetVolt@2|
  00548		 |$LN13@TWLGetVolt@2|

; 220  : 
; 221  : 	case VLDO2:
; 222  : 		if(Buffer & PGOODZ_LDO2)

  00548	e5dd3000	 ldrb        r3, [sp]
  0054c	e3130004	 tst         r3, #4
  00550	0a000002	 beq         |$LN12@TWLGetVolt@2|

; 223  : 			*status = VOLTAGE_FAILURE;

  00554	e59d201c	 ldr         r2, [sp, #0x1C]
  00558	e3a03000	 mov         r3, #0
  0055c	e5823000	 str         r3, [r2]
  00560		 |$LN12@TWLGetVolt@2|

; 224  : 		break;

  00560	ea000025	 b           |$LN16@TWLGetVolt@2|
  00564		 |$LN11@TWLGetVolt@2|

; 225  : 
; 226  : 	case VDCDC1:
; 227  : 		if(Buffer & PGOODZ_DCDC1)

  00564	e5dd3000	 ldrb        r3, [sp]
  00568	e3130020	 tst         r3, #0x20
  0056c	0a000002	 beq         |$LN10@TWLGetVolt@2|

; 228  : 			*status = VOLTAGE_FAILURE;

  00570	e59d201c	 ldr         r2, [sp, #0x1C]
  00574	e3a03000	 mov         r3, #0
  00578	e5823000	 str         r3, [r2]
  0057c		 |$LN10@TWLGetVolt@2|

; 229  : 		break;

  0057c	ea00001e	 b           |$LN16@TWLGetVolt@2|
  00580		 |$LN9@TWLGetVolt@2|

; 230  : 
; 231  : 	case VDCDC2:
; 232  : 		if(Buffer & PGOODZ_DCDC2)

  00580	e5dd3000	 ldrb        r3, [sp]
  00584	e3130010	 tst         r3, #0x10
  00588	0a000002	 beq         |$LN8@TWLGetVolt@2|

; 233  : 			*status = VOLTAGE_FAILURE;

  0058c	e59d201c	 ldr         r2, [sp, #0x1C]
  00590	e3a03000	 mov         r3, #0
  00594	e5823000	 str         r3, [r2]
  00598		 |$LN8@TWLGetVolt@2|

; 234  : 		break;

  00598	ea000017	 b           |$LN16@TWLGetVolt@2|
  0059c		 |$LN7@TWLGetVolt@2|

; 235  : 
; 236  : 	case VDCDC3:
; 237  : 		if(Buffer & PGOODZ_DCDC1)

  0059c	e5dd3000	 ldrb        r3, [sp]
  005a0	e3130020	 tst         r3, #0x20
  005a4	0a000002	 beq         |$LN6@TWLGetVolt@2|

; 238  : 			*status = VOLTAGE_FAILURE;

  005a8	e59d201c	 ldr         r2, [sp, #0x1C]
  005ac	e3a03000	 mov         r3, #0
  005b0	e5823000	 str         r3, [r2]
  005b4		 |$LN6@TWLGetVolt@2|

; 239  : 		break;

  005b4	ea000010	 b           |$LN16@TWLGetVolt@2|
  005b8		 |$LN5@TWLGetVolt@2|

; 240  : 
; 241  : 	case LOWBATT:
; 242  : 		if(Buffer & PGOODZ_LOWBATT)

  005b8	e5dd3000	 ldrb        r3, [sp]
  005bc	e3130040	 tst         r3, #0x40
  005c0	0a000002	 beq         |$LN4@TWLGetVolt@2|

; 243  : 			*status = VOLTAGE_FAILURE;

  005c4	e59d201c	 ldr         r2, [sp, #0x1C]
  005c8	e3a03000	 mov         r3, #0
  005cc	e5823000	 str         r3, [r2]
  005d0		 |$LN4@TWLGetVolt@2|

; 244  : 		break;

  005d0	ea000009	 b           |$LN16@TWLGetVolt@2|
  005d4		 |$LN3@TWLGetVolt@2|

; 245  : 
; 246  : 	case PWRFAIL:
; 247  : 		if(Buffer & PGOODZ_PWRFAIL)

  005d4	e5dd3000	 ldrb        r3, [sp]
  005d8	e3130080	 tst         r3, #0x80
  005dc	0a000002	 beq         |$LN2@TWLGetVolt@2|

; 248  : 			*status = VOLTAGE_FAILURE;

  005e0	e59d201c	 ldr         r2, [sp, #0x1C]
  005e4	e3a03000	 mov         r3, #0
  005e8	e5823000	 str         r3, [r2]
  005ec		 |$LN2@TWLGetVolt@2|

; 249  : 		break;

  005ec	ea000002	 b           |$LN16@TWLGetVolt@2|
  005f0		 |$LN1@TWLGetVolt@2|

; 250  : 
; 251  : 	default :
; 252  : 		return FALSE;

  005f0	e3a03000	 mov         r3, #0
  005f4	e58d3004	 str         r3, [sp, #4]
  005f8	ea000001	 b           |$LN19@TWLGetVolt@2|
  005fc		 |$LN16@TWLGetVolt@2|

; 253  : 	}
; 254  : 	return TRUE;

  005fc	e3a03001	 mov         r3, #1
  00600	e58d3004	 str         r3, [sp, #4]
  00604		 |$LN19@TWLGetVolt@2|

; 255  : }

  00604	e59d0004	 ldr         r0, [sp, #4]
  00608	e28dd010	 add         sp, sp, #0x10
  0060c	e89d6000	 ldmia       sp, {sp, lr}
  00610	e12fff1e	 bx          lr
  00614		 |$LN33@TWLGetVolt@2|
  00614		 |$LN34@TWLGetVolt@2|
  00614	00000000	 DCD         |g_hTwl|
  00618		 |$M43677|

			 ENDP  ; |TWLGetVoltageStatus|

	EXPORT	|TWLSetVoltageSlewRate|

  00028			 AREA	 |.pdata|, PDATA
|$T43687| DCD	|$LN6@TWLSetVolt@2|
	DCD	0x40001004
; Function compile flags: /Odtp

  00618			 AREA	 |.text|, CODE, ARM

  00618		 |TWLSetVoltageSlewRate| PROC

; 261  : {

  00618		 |$LN6@TWLSetVolt@2|
  00618	e1a0c00d	 mov         r12, sp
  0061c	e92d0003	 stmdb       sp!, {r0, r1}
  00620	e92d5000	 stmdb       sp!, {r12, lr}
  00624	e24dd004	 sub         sp, sp, #4
  00628		 |$M43684|

; 262  :     if (voltage != VDCDC1)

  00628	e59d300c	 ldr         r3, [sp, #0xC]
  0062c	e3530002	 cmp         r3, #2
  00630	0a000002	 beq         |$LN1@TWLSetVolt@2|

; 263  :     {
; 264  :         return FALSE;

  00634	e3a03000	 mov         r3, #0
  00638	e58d3000	 str         r3, [sp]
  0063c	ea000001	 b           |$LN2@TWLSetVolt@2|
  00640		 |$LN1@TWLSetVolt@2|

; 265  :     }
; 266  :     UNREFERENCED_PARAMETER(rate);
; 267  :     return FALSE;

  00640	e3a03000	 mov         r3, #0
  00644	e58d3000	 str         r3, [sp]
  00648		 |$LN2@TWLSetVolt@2|

; 268  : }

  00648	e59d0000	 ldr         r0, [sp]
  0064c	e28dd004	 add         sp, sp, #4
  00650	e89d6000	 ldmia       sp, {sp, lr}
  00654	e12fff1e	 bx          lr
  00658		 |$M43685|

			 ENDP  ; |TWLSetVoltageSlewRate|

	EXPORT	|TWLGetVoltageSlewRate|

  00030			 AREA	 |.pdata|, PDATA
|$T43693| DCD	|$LN6@TWLGetVolt@3|
	DCD	0x40001004
; Function compile flags: /Odtp

  00658			 AREA	 |.text|, CODE, ARM

  00658		 |TWLGetVoltageSlewRate| PROC

; 274  : {

  00658		 |$LN6@TWLGetVolt@3|
  00658	e1a0c00d	 mov         r12, sp
  0065c	e92d0003	 stmdb       sp!, {r0, r1}
  00660	e92d5000	 stmdb       sp!, {r12, lr}
  00664	e24dd004	 sub         sp, sp, #4
  00668		 |$M43690|

; 275  :     if (voltage != VDCDC1)

  00668	e59d300c	 ldr         r3, [sp, #0xC]
  0066c	e3530002	 cmp         r3, #2
  00670	0a000002	 beq         |$LN1@TWLGetVolt@3|

; 276  :     {
; 277  :         return FALSE;

  00674	e3a03000	 mov         r3, #0
  00678	e58d3000	 str         r3, [sp]
  0067c	ea000001	 b           |$LN2@TWLGetVolt@3|
  00680		 |$LN1@TWLGetVolt@3|

; 278  :     }
; 279  :     UNREFERENCED_PARAMETER(rate);
; 280  :     return FALSE;

  00680	e3a03000	 mov         r3, #0
  00684	e58d3000	 str         r3, [sp]
  00688		 |$LN2@TWLGetVolt@3|

; 281  : }

  00688	e59d0000	 ldr         r0, [sp]
  0068c	e28dd004	 add         sp, sp, #4
  00690	e89d6000	 ldmia       sp, {sp, lr}
  00694	e12fff1e	 bx          lr
  00698		 |$M43691|

			 ENDP  ; |TWLGetVoltageSlewRate|

	EXPORT	|TWLEnableVoltage|

  00038			 AREA	 |.pdata|, PDATA
|$T43708| DCD	|$LN22@TWLEnableV|
	DCD	0x40003e04
; Function compile flags: /Odtp

  00698			 AREA	 |.text|, CODE, ARM

  00698		 |TWLEnableVoltage| PROC

; 287  : {

  00698		 |$LN22@TWLEnableV|
  00698	e1a0c00d	 mov         r12, sp
  0069c	e92d0003	 stmdb       sp!, {r0, r1}
  006a0	e92d5000	 stmdb       sp!, {r12, lr}
  006a4	e24dd014	 sub         sp, sp, #0x14
  006a8		 |$M43705|

; 288  :     BYTE mask = 0;

  006a8	e3a03000	 mov         r3, #0
  006ac	e5cd3000	 strb        r3, [sp]

; 289  :     switch (voltage)

  006b0	e59d301c	 ldr         r3, [sp, #0x1C]
  006b4	e58d3008	 str         r3, [sp, #8]
  006b8	e59d3008	 ldr         r3, [sp, #8]
  006bc	e3530004	 cmp         r3, #4
  006c0	8a000018	 bhi         |$LN1@TWLEnableV|
  006c4	e59d2008	 ldr         r2, [sp, #8]
  006c8	e1a03102	 mov         r3, r2, lsl #2
  006cc	e083300f	 add         r3, r3, pc
  006d0	e5933004	 ldr         r3, [r3, #4]
  006d4	e08ff003	 add         pc, pc, r3
  006d8		 |$LN14@TWLEnableV|
  006d8		 |$LN13@TWLEnableV|
  006d8		 |$LN15@TWLEnableV|
  006d8	00000034	 DCD         0x34
  006dc		 |$LN16@TWLEnableV|
  006dc	00000040	 DCD         0x40
  006e0		 |$LN17@TWLEnableV|
  006e0	00000010	 DCD         0x10
  006e4		 |$LN18@TWLEnableV|
  006e4	0000001c	 DCD         0x1c
  006e8		 |$LN19@TWLEnableV|
  006e8	00000028	 DCD         0x28
  006ec		 |$LN6@TWLEnableV|

; 290  :     {
; 291  :     case VDCDC1:
; 292  :         mask = REG_CTRL_DCDC1;

  006ec	e3a03020	 mov         r3, #0x20
  006f0	e5cd3000	 strb        r3, [sp]

; 293  :         break;

  006f4	ea00000e	 b           |$LN7@TWLEnableV|
  006f8		 |$LN5@TWLEnableV|

; 294  :     case VDCDC2:
; 295  :         mask = REG_CTRL_DCDC2;

  006f8	e3a03010	 mov         r3, #0x10
  006fc	e5cd3000	 strb        r3, [sp]

; 296  :         break;

  00700	ea00000b	 b           |$LN7@TWLEnableV|
  00704		 |$LN4@TWLEnableV|

; 297  :     case VDCDC3:
; 298  :         mask = REG_CTRL_DCDC3;

  00704	e3a03008	 mov         r3, #8
  00708	e5cd3000	 strb        r3, [sp]

; 299  :         break;

  0070c	ea000008	 b           |$LN7@TWLEnableV|
  00710		 |$LN3@TWLEnableV|

; 300  :     case VLDO1:
; 301  :         mask = REG_CTRL_LDO1;

  00710	e3a03002	 mov         r3, #2
  00714	e5cd3000	 strb        r3, [sp]

; 302  :         break;

  00718	ea000005	 b           |$LN7@TWLEnableV|
  0071c		 |$LN2@TWLEnableV|

; 303  :     case VLDO2:
; 304  :         mask = REG_CTRL_LDO2;

  0071c	e3a03004	 mov         r3, #4
  00720	e5cd3000	 strb        r3, [sp]

; 305  :         break;

  00724	ea000002	 b           |$LN7@TWLEnableV|
  00728		 |$LN1@TWLEnableV|

; 306  :     default: return FALSE;

  00728	e3a03000	 mov         r3, #0
  0072c	e58d3004	 str         r3, [sp, #4]
  00730	ea000011	 b           |$LN9@TWLEnableV|
  00734		 |$LN7@TWLEnableV|

; 307  :     }
; 308  :     return TWLSetValue(g_hTwl, REG_CTRL, fOn ? mask : 0, mask);

  00734	e59d3020	 ldr         r3, [sp, #0x20]
  00738	e3530000	 cmp         r3, #0
  0073c	0a000002	 beq         |$LN11@TWLEnableV|
  00740	e5dd3000	 ldrb        r3, [sp]
  00744	e58d300c	 str         r3, [sp, #0xC]
  00748	ea000001	 b           |$LN12@TWLEnableV|
  0074c		 |$LN11@TWLEnableV|
  0074c	e3a03000	 mov         r3, #0
  00750	e58d300c	 str         r3, [sp, #0xC]
  00754		 |$LN12@TWLEnableV|
  00754	e5dd3000	 ldrb        r3, [sp]
  00758	e59d200c	 ldr         r2, [sp, #0xC]
  0075c	e20220ff	 and         r2, r2, #0xFF
  00760	e3a01003	 mov         r1, #3
  00764	e59f0020	 ldr         r0, [pc, #0x20]
  00768	e5900000	 ldr         r0, [r0]
  0076c	eb000000	 bl          TWLSetValue
  00770	e58d0010	 str         r0, [sp, #0x10]
  00774	e59d3010	 ldr         r3, [sp, #0x10]
  00778	e58d3004	 str         r3, [sp, #4]
  0077c		 |$LN9@TWLEnableV|

; 309  : }

  0077c	e59d0004	 ldr         r0, [sp, #4]
  00780	e28dd014	 add         sp, sp, #0x14
  00784	e89d6000	 ldmia       sp, {sp, lr}
  00788	e12fff1e	 bx          lr
  0078c		 |$LN23@TWLEnableV|
  0078c		 |$LN24@TWLEnableV|
  0078c	00000000	 DCD         |g_hTwl|
  00790		 |$M43706|

			 ENDP  ; |TWLEnableVoltage|

	EXPORT	|TWLReadIDCode|

  00040			 AREA	 |.pdata|, PDATA
|$T43716| DCD	|$LN7@TWLReadIDC|
	DCD	0x40001704
; Function compile flags: /Odtp

  00790			 AREA	 |.text|, CODE, ARM

  00790		 |TWLReadIDCode| PROC

; 319  : {    

  00790		 |$LN7@TWLReadIDC|
  00790	e1a0c00d	 mov         r12, sp
  00794	e92d0001	 stmdb       sp!, {r0}
  00798	e92d5000	 stmdb       sp!, {r12, lr}
  0079c	e24dd00c	 sub         sp, sp, #0xC
  007a0		 |$M43713|

; 320  :     UINT8 version;
; 321  :     if (TWLReadRegs(hTwl, VERSION, &version, sizeof(version)))

  007a0	e3a03001	 mov         r3, #1
  007a4	e28d2000	 add         r2, sp, #0
  007a8	e3a01000	 mov         r1, #0
  007ac	e59d0014	 ldr         r0, [sp, #0x14]
  007b0	eb000000	 bl          TWLReadRegs
  007b4	e58d0008	 str         r0, [sp, #8]
  007b8	e59d3008	 ldr         r3, [sp, #8]
  007bc	e3530000	 cmp         r3, #0
  007c0	0a000003	 beq         |$LN2@TWLReadIDC|

; 322  :     {
; 323  :         return version;

  007c4	e5dd3000	 ldrb        r3, [sp]
  007c8	e5cd3004	 strb        r3, [sp, #4]
  007cc	ea000002	 b           |$LN3@TWLReadIDC|

; 324  :     }
; 325  :     else

  007d0	ea000001	 b           |$LN1@TWLReadIDC|
  007d4		 |$LN2@TWLReadIDC|

; 326  :     {
; 327  :         return (UINT8) -1;

  007d4	e3a030ff	 mov         r3, #0xFF
  007d8	e5cd3004	 strb        r3, [sp, #4]
  007dc		 |$LN1@TWLReadIDC|
  007dc		 |$LN3@TWLReadIDC|

; 328  :     }
; 329  : }

  007dc	e5dd0004	 ldrb        r0, [sp, #4]
  007e0	e28dd00c	 add         sp, sp, #0xC
  007e4	e89d6000	 ldmia       sp, {sp, lr}
  007e8	e12fff1e	 bx          lr
  007ec		 |$M43714|

			 ENDP  ; |TWLReadIDCode|

	END
