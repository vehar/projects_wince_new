; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\TRITON\TWL\DEVICE\twl_access.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1M@MOBNNOLN@?$AAT?$AAW?$AAL?$AA1?$AA?3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|TWLOpen|
	IMPORT	|LocalFree|
	IMPORT	|DeviceIoControl|
	IMPORT	|DEVICE_IFC_TWL_GUID|
	IMPORT	|CloseHandle|
	IMPORT	|LocalAlloc|
	IMPORT	|CreateFileW|

  00000			 AREA	 |.pdata|, PDATA
|$T44103| DCD	|$LN8@TWLOpen|
	DCD	0x40004702
; File c:\wince600\platform\common\src\soc\common_ti_v1\triton\twl\device\twl_access.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@MOBNNOLN@?$AAT?$AAW?$AAL?$AA1?$AA?3?$AA?$AA@| DCB "T", 0x0, "W", 0x0
	DCB	"L", 0x0, "1", 0x0, ":", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLOpen| PROC

; 38   : {

  00000		 |$LN8@TWLOpen|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd044	 sub         sp, sp, #0x44
  00008		 |$M44100|

; 39   :     HANDLE hDevice;
; 40   :     DEVICE_CONTEXT_TWL *pContext = NULL;

  00008	e3a03000	 mov         r3, #0
  0000c	e58d3014	 str         r3, [sp, #0x14]

; 41   : 
; 42   :     hDevice = CreateFile(TWL_DEVICE_NAME, 0, 0, NULL, 0, 0, NULL);

  00010	e3a03000	 mov         r3, #0
  00014	e58d3008	 str         r3, [sp, #8]
  00018	e3a03000	 mov         r3, #0
  0001c	e58d3004	 str         r3, [sp, #4]
  00020	e3a03000	 mov         r3, #0
  00024	e58d3000	 str         r3, [sp]
  00028	e3a03000	 mov         r3, #0
  0002c	e3a02000	 mov         r2, #0
  00030	e3a01000	 mov         r1, #0
  00034	e59f00dc	 ldr         r0, [pc, #0xDC]
  00038	eb000000	 bl          CreateFileW
  0003c	e58d0038	 str         r0, [sp, #0x38]
  00040	e59d3038	 ldr         r3, [sp, #0x38]
  00044	e58d3010	 str         r3, [sp, #0x10]

; 43   :     if (hDevice == INVALID_HANDLE_VALUE) goto cleanUp;

  00048	e59d3010	 ldr         r3, [sp, #0x10]
  0004c	e3730001	 cmn         r3, #1
  00050	1a000000	 bne         |$LN3@TWLOpen|
  00054	ea000028	 b           |$cleanUp$43965|
  00058		 |$LN3@TWLOpen|

; 44   : 
; 45   :     // Allocate memory for our handler...
; 46   :     pContext = (DEVICE_CONTEXT_TWL*)LocalAlloc(
; 47   :         LPTR, sizeof(DEVICE_CONTEXT_TWL)
; 48   :         );

  00058	e3a01024	 mov         r1, #0x24
  0005c	e3a00040	 mov         r0, #0x40
  00060	eb000000	 bl          LocalAlloc
  00064	e58d003c	 str         r0, [sp, #0x3C]
  00068	e59d303c	 ldr         r3, [sp, #0x3C]
  0006c	e58d3014	 str         r3, [sp, #0x14]

; 49   :     if (pContext == NULL)

  00070	e59d3014	 ldr         r3, [sp, #0x14]
  00074	e3530000	 cmp         r3, #0
  00078	1a000002	 bne         |$LN2@TWLOpen|

; 50   :         {
; 51   :         CloseHandle(hDevice);

  0007c	e59d0010	 ldr         r0, [sp, #0x10]
  00080	eb000000	 bl          CloseHandle

; 52   :         goto cleanUp;

  00084	ea00001c	 b           |$cleanUp$43965|
  00088		 |$LN2@TWLOpen|

; 53   :         }
; 54   : 
; 55   :     // Get function pointers, fail when IOCTL isn't supported...
; 56   :     if (!DeviceIoControl(
; 57   :             hDevice, IOCTL_DDK_GET_DRIVER_IFC, (VOID*)&DEVICE_IFC_TWL_GUID,
; 58   :             sizeof(DEVICE_IFC_TWL_GUID), &pContext->ifc, sizeof(DEVICE_IFC_TWL),
; 59   :             NULL, NULL))

  00088	e3a03000	 mov         r3, #0
  0008c	e58d300c	 str         r3, [sp, #0xC]
  00090	e3a03000	 mov         r3, #0
  00094	e58d3008	 str         r3, [sp, #8]
  00098	e3a0301c	 mov         r3, #0x1C
  0009c	e58d3004	 str         r3, [sp, #4]
  000a0	e59d3014	 ldr         r3, [sp, #0x14]
  000a4	e58d3000	 str         r3, [sp]
  000a8	e3a03010	 mov         r3, #0x10
  000ac	e59f2060	 ldr         r2, [pc, #0x60]
  000b0	e3a01822	 mov         r1, #0x22, 16
  000b4	e3811b01	 orr         r1, r1, #1, 22
  000b8	e59d0010	 ldr         r0, [sp, #0x10]
  000bc	eb000000	 bl          DeviceIoControl
  000c0	e58d0040	 str         r0, [sp, #0x40]
  000c4	e59d3040	 ldr         r3, [sp, #0x40]
  000c8	e3530000	 cmp         r3, #0
  000cc	1a000006	 bne         |$LN1@TWLOpen|

; 60   :         {
; 61   :         CloseHandle(hDevice);

  000d0	e59d0010	 ldr         r0, [sp, #0x10]
  000d4	eb000000	 bl          CloseHandle

; 62   :         LocalFree(pContext);

  000d8	e59d0014	 ldr         r0, [sp, #0x14]
  000dc	eb000000	 bl          LocalFree

; 63   :         pContext = NULL;

  000e0	e3a03000	 mov         r3, #0
  000e4	e58d3014	 str         r3, [sp, #0x14]

; 64   :         goto cleanUp;

  000e8	ea000003	 b           |$cleanUp$43965|
  000ec		 |$LN1@TWLOpen|

; 65   :         }
; 66   : 
; 67   :     // Save device handle
; 68   :     pContext->hDevice = hDevice;

  000ec	e59d3014	 ldr         r3, [sp, #0x14]
  000f0	e283201c	 add         r2, r3, #0x1C
  000f4	e59d3010	 ldr         r3, [sp, #0x10]
  000f8	e5823000	 str         r3, [r2]
  000fc		 |$cleanUp$43965|

; 69   : 
; 70   : cleanUp:
; 71   :     return pContext;

  000fc	e59d3014	 ldr         r3, [sp, #0x14]
  00100	e58d3034	 str         r3, [sp, #0x34]

; 72   : }

  00104	e59d0034	 ldr         r0, [sp, #0x34]
  00108	e28dd044	 add         sp, sp, #0x44
  0010c	e49de004	 ldr         lr, [sp], #4
  00110	e12fff1e	 bx          lr
  00114		 |$LN9@TWLOpen|
  00114		 |$LN10@TWLOpen|
  00114	00000000	 DCD         |DEVICE_IFC_TWL_GUID|
  00118		 |$LN11@TWLOpen|
  00118	00000000	 DCD         |??_C@_1M@MOBNNOLN@?$AAT?$AAW?$AAL?$AA1?$AA?3?$AA?$AA@|
  0011c		 |$M44101|

			 ENDP  ; |TWLOpen|

	EXPORT	|TWLClose|

  00008			 AREA	 |.pdata|, PDATA
|$T44111| DCD	|$LN5@TWLClose|
	DCD	0x40000f04
; Function compile flags: /Odtp

  0011c			 AREA	 |.text|, CODE, ARM

  0011c		 |TWLClose| PROC

; 79   : {

  0011c		 |$LN5@TWLClose|
  0011c	e1a0c00d	 mov         r12, sp
  00120	e92d0001	 stmdb       sp!, {r0}
  00124	e92d5000	 stmdb       sp!, {r12, lr}
  00128	e24dd004	 sub         sp, sp, #4
  0012c		 |$M44108|

; 80   :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  0012c	e59d300c	 ldr         r3, [sp, #0xC]
  00130	e58d3000	 str         r3, [sp]

; 81   :     CloseHandle(pContext->hDevice);

  00134	e59d3000	 ldr         r3, [sp]
  00138	e283301c	 add         r3, r3, #0x1C
  0013c	e5930000	 ldr         r0, [r3]
  00140	eb000000	 bl          CloseHandle

; 82   :     LocalFree(pContext);

  00144	e59d0000	 ldr         r0, [sp]
  00148	eb000000	 bl          LocalFree

; 83   : }

  0014c	e28dd004	 add         sp, sp, #4
  00150	e89d6000	 ldmia       sp, {sp, lr}
  00154	e12fff1e	 bx          lr
  00158		 |$M44109|

			 ENDP  ; |TWLClose|

	EXPORT	|TWLReadRegs|
	IMPORT	|ReadFile|
	IMPORT	|SetFilePointer|

  00010			 AREA	 |.pdata|, PDATA
|$T44118| DCD	|$LN8@TWLReadReg|
	DCD	0x40003c04
; Function compile flags: /Odtp

  00158			 AREA	 |.text|, CODE, ARM

  00158		 |TWLReadRegs| PROC

; 93   : {

  00158		 |$LN8@TWLReadReg|
  00158	e1a0c00d	 mov         r12, sp
  0015c	e92d000f	 stmdb       sp!, {r0 - r3}
  00160	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00164	e24dd018	 sub         sp, sp, #0x18
  00168		 |$M44115|

; 94   :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  00168	e59d3024	 ldr         r3, [sp, #0x24]
  0016c	e58d3004	 str         r3, [sp, #4]

; 95   :     if (pContext->ifc.pfnReadRegs != NULL)

  00170	e59d3004	 ldr         r3, [sp, #4]
  00174	e2833004	 add         r3, r3, #4
  00178	e5933000	 ldr         r3, [r3]
  0017c	e3530000	 cmp         r3, #0
  00180	0a00000e	 beq         |$LN3@TWLReadReg|

; 96   :         {
; 97   :         return pContext->ifc.pfnReadRegs(
; 98   :             pContext->ifc.context, address, pBuffer, size
; 99   :             );

  00184	e59d3030	 ldr         r3, [sp, #0x30]
  00188	e59d202c	 ldr         r2, [sp, #0x2C]
  0018c	e59d1028	 ldr         r1, [sp, #0x28]
  00190	e59d0004	 ldr         r0, [sp, #4]
  00194	e5900000	 ldr         r0, [r0]
  00198	e59de004	 ldr         lr, [sp, #4]
  0019c	e28ee004	 add         lr, lr, #4
  001a0	e59e4000	 ldr         r4, [lr]
  001a4	e1a0e00f	 mov         lr, pc
  001a8	e12fff14	 bx          r4
  001ac	e58d0014	 str         r0, [sp, #0x14]
  001b0	e59d3014	 ldr         r3, [sp, #0x14]
  001b4	e58d300c	 str         r3, [sp, #0xC]
  001b8	ea00001e	 b           |$LN4@TWLReadReg|

; 100  :         }
; 101  :     else

  001bc	ea00001d	 b           |$LN2@TWLReadReg|
  001c0		 |$LN3@TWLReadReg|

; 102  :         {
; 103  :         DWORD dwCount = 0;

  001c0	e3a03000	 mov         r3, #0
  001c4	e58d3008	 str         r3, [sp, #8]

; 104  :         if (pContext->seekAddress != address)

  001c8	e59d3004	 ldr         r3, [sp, #4]
  001cc	e2833020	 add         r3, r3, #0x20
  001d0	e5932000	 ldr         r2, [r3]
  001d4	e59d3028	 ldr         r3, [sp, #0x28]
  001d8	e1520003	 cmp         r2, r3
  001dc	0a00000a	 beq         |$LN1@TWLReadReg|

; 105  :             {
; 106  :             SetFilePointer(pContext->hDevice, address, NULL, FILE_CURRENT);

  001e0	e3a03001	 mov         r3, #1
  001e4	e3a02000	 mov         r2, #0
  001e8	e59d1028	 ldr         r1, [sp, #0x28]
  001ec	e59d0004	 ldr         r0, [sp, #4]
  001f0	e280001c	 add         r0, r0, #0x1C
  001f4	e5900000	 ldr         r0, [r0]
  001f8	eb000000	 bl          SetFilePointer

; 107  :             pContext->seekAddress = address;

  001fc	e59d3004	 ldr         r3, [sp, #4]
  00200	e2832020	 add         r2, r3, #0x20
  00204	e59d3028	 ldr         r3, [sp, #0x28]
  00208	e5823000	 str         r3, [r2]
  0020c		 |$LN1@TWLReadReg|

; 108  :             }
; 109  :         ReadFile(pContext->hDevice, pBuffer, size, &dwCount, NULL);

  0020c	e3a03000	 mov         r3, #0
  00210	e58d3000	 str         r3, [sp]
  00214	e28d3008	 add         r3, sp, #8
  00218	e59d2030	 ldr         r2, [sp, #0x30]
  0021c	e59d102c	 ldr         r1, [sp, #0x2C]
  00220	e59d0004	 ldr         r0, [sp, #4]
  00224	e280001c	 add         r0, r0, #0x1C
  00228	e5900000	 ldr         r0, [r0]
  0022c	eb000000	 bl          ReadFile

; 110  :         return dwCount;

  00230	e59d3008	 ldr         r3, [sp, #8]
  00234	e58d300c	 str         r3, [sp, #0xC]
  00238		 |$LN2@TWLReadReg|
  00238		 |$LN4@TWLReadReg|

; 111  :         }
; 112  : }

  00238	e59d000c	 ldr         r0, [sp, #0xC]
  0023c	e28dd018	 add         sp, sp, #0x18
  00240	e89d6010	 ldmia       sp, {r4, sp, lr}
  00244	e12fff1e	 bx          lr
  00248		 |$M44116|

			 ENDP  ; |TWLReadRegs|

	EXPORT	|TWLWriteRegs|
	IMPORT	|WriteFile|

  00018			 AREA	 |.pdata|, PDATA
|$T44125| DCD	|$LN8@TWLWriteRe|
	DCD	0x40003d04
; Function compile flags: /Odtp

  00248			 AREA	 |.text|, CODE, ARM

  00248		 |TWLWriteRegs| PROC

; 122  : {

  00248		 |$LN8@TWLWriteRe|
  00248	e1a0c00d	 mov         r12, sp
  0024c	e92d000f	 stmdb       sp!, {r0 - r3}
  00250	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00254	e24dd01c	 sub         sp, sp, #0x1C
  00258		 |$M44122|

; 123  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  00258	e59d3028	 ldr         r3, [sp, #0x28]
  0025c	e58d3004	 str         r3, [sp, #4]

; 124  :     if (pContext->ifc.pfnWriteRegs != NULL)

  00260	e59d3004	 ldr         r3, [sp, #4]
  00264	e2833008	 add         r3, r3, #8
  00268	e5933000	 ldr         r3, [r3]
  0026c	e3530000	 cmp         r3, #0
  00270	0a00000e	 beq         |$LN3@TWLWriteRe|

; 125  :         {
; 126  :         return pContext->ifc.pfnWriteRegs(
; 127  :             pContext->ifc.context, address, pBuffer, size
; 128  :             );

  00274	e59d3034	 ldr         r3, [sp, #0x34]
  00278	e59d2030	 ldr         r2, [sp, #0x30]
  0027c	e59d102c	 ldr         r1, [sp, #0x2C]
  00280	e59d0004	 ldr         r0, [sp, #4]
  00284	e5900000	 ldr         r0, [r0]
  00288	e59de004	 ldr         lr, [sp, #4]
  0028c	e28ee008	 add         lr, lr, #8
  00290	e59e4000	 ldr         r4, [lr]
  00294	e1a0e00f	 mov         lr, pc
  00298	e12fff14	 bx          r4
  0029c	e58d0014	 str         r0, [sp, #0x14]
  002a0	e59d3014	 ldr         r3, [sp, #0x14]
  002a4	e58d300c	 str         r3, [sp, #0xC]
  002a8	ea00001f	 b           |$LN4@TWLWriteRe|

; 129  :         }
; 130  :     else

  002ac	ea00001e	 b           |$LN2@TWLWriteRe|
  002b0		 |$LN3@TWLWriteRe|

; 131  :         {
; 132  :         DWORD dwCount = 0;

  002b0	e3a03000	 mov         r3, #0
  002b4	e58d3008	 str         r3, [sp, #8]

; 133  :         if (pContext->seekAddress != address)

  002b8	e59d3004	 ldr         r3, [sp, #4]
  002bc	e2833020	 add         r3, r3, #0x20
  002c0	e5932000	 ldr         r2, [r3]
  002c4	e59d302c	 ldr         r3, [sp, #0x2C]
  002c8	e1520003	 cmp         r2, r3
  002cc	0a00000a	 beq         |$LN1@TWLWriteRe|

; 134  :             {
; 135  :             SetFilePointer(pContext->hDevice, address, NULL, FILE_CURRENT);

  002d0	e3a03001	 mov         r3, #1
  002d4	e3a02000	 mov         r2, #0
  002d8	e59d102c	 ldr         r1, [sp, #0x2C]
  002dc	e59d0004	 ldr         r0, [sp, #4]
  002e0	e280001c	 add         r0, r0, #0x1C
  002e4	e5900000	 ldr         r0, [r0]
  002e8	eb000000	 bl          SetFilePointer

; 136  :             pContext->seekAddress = address;

  002ec	e59d3004	 ldr         r3, [sp, #4]
  002f0	e2832020	 add         r2, r3, #0x20
  002f4	e59d302c	 ldr         r3, [sp, #0x2C]
  002f8	e5823000	 str         r3, [r2]
  002fc		 |$LN1@TWLWriteRe|

; 137  :             }
; 138  :         return WriteFile(pContext->hDevice, pBuffer, size, &dwCount, NULL);

  002fc	e3a03000	 mov         r3, #0
  00300	e58d3000	 str         r3, [sp]
  00304	e28d3008	 add         r3, sp, #8
  00308	e59d2034	 ldr         r2, [sp, #0x34]
  0030c	e59d1030	 ldr         r1, [sp, #0x30]
  00310	e59d0004	 ldr         r0, [sp, #4]
  00314	e280001c	 add         r0, r0, #0x1C
  00318	e5900000	 ldr         r0, [r0]
  0031c	eb000000	 bl          WriteFile
  00320	e58d0018	 str         r0, [sp, #0x18]
  00324	e59d3018	 ldr         r3, [sp, #0x18]
  00328	e58d300c	 str         r3, [sp, #0xC]
  0032c		 |$LN2@TWLWriteRe|
  0032c		 |$LN4@TWLWriteRe|

; 139  :         }
; 140  : }

  0032c	e59d000c	 ldr         r0, [sp, #0xC]
  00330	e28dd01c	 add         sp, sp, #0x1C
  00334	e89d6010	 ldmia       sp, {r4, sp, lr}
  00338	e12fff1e	 bx          lr
  0033c		 |$M44123|

			 ENDP  ; |TWLWriteRegs|

	EXPORT	|GetCurrentProcessId|
	EXPORT	|TWLInterruptInitialize|

  00020			 AREA	 |.pdata|, PDATA
|$T44135| DCD	|$LN7@TWLInterru|
	DCD	0x40003804
; Function compile flags: /Odtp

  0033c			 AREA	 |.text|, CODE, ARM

  0033c		 |TWLInterruptInitialize| PROC

; 148  : {

  0033c		 |$LN7@TWLInterru|
  0033c	e1a0c00d	 mov         r12, sp
  00340	e92d0007	 stmdb       sp!, {r0 - r2}
  00344	e92d5000	 stmdb       sp!, {r12, lr}
  00348	e24dd040	 sub         sp, sp, #0x40
  0034c		 |$M44132|

; 149  :     IOCTL_TWL_INTRINIT_IN inParam;
; 150  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  0034c	e59d3048	 ldr         r3, [sp, #0x48]
  00350	e58d301c	 str         r3, [sp, #0x1C]

; 151  : 
; 152  :     if (pContext->ifc.pfnInterruptInitialize != NULL)

  00354	e59d301c	 ldr         r3, [sp, #0x1C]
  00358	e283300c	 add         r3, r3, #0xC
  0035c	e5933000	 ldr         r3, [r3]
  00360	e3530000	 cmp         r3, #0
  00364	0a00000d	 beq         |$LN2@TWLInterru|

; 153  :         {
; 154  :         return pContext->ifc.pfnInterruptInitialize(
; 155  :             pContext->ifc.context, intrId, hEvent
; 156  :             );

  00368	e59d2050	 ldr         r2, [sp, #0x50]
  0036c	e59d104c	 ldr         r1, [sp, #0x4C]
  00370	e59d301c	 ldr         r3, [sp, #0x1C]
  00374	e5930000	 ldr         r0, [r3]
  00378	e59d301c	 ldr         r3, [sp, #0x1C]
  0037c	e283300c	 add         r3, r3, #0xC
  00380	e5933000	 ldr         r3, [r3]
  00384	e1a0e00f	 mov         lr, pc
  00388	e12fff13	 bx          r3
  0038c	e58d0034	 str         r0, [sp, #0x34]
  00390	e59d3034	 ldr         r3, [sp, #0x34]
  00394	e58d3020	 str         r3, [sp, #0x20]
  00398	ea00001a	 b           |$LN3@TWLInterru|

; 157  :         }
; 158  :     else

  0039c	ea000019	 b           |$LN1@TWLInterru|
  003a0		 |$LN2@TWLInterru|

; 159  :         {
; 160  :         inParam.intrId = intrId;

  003a0	e59d304c	 ldr         r3, [sp, #0x4C]
  003a4	e58d3014	 str         r3, [sp, #0x14]

; 161  :         inParam.hEvent = hEvent;

  003a8	e59d3050	 ldr         r3, [sp, #0x50]
  003ac	e58d3018	 str         r3, [sp, #0x18]

; 162  :         inParam.procId = GetCurrentProcessId();

  003b0	eb000000	 bl          GetCurrentProcessId
  003b4	e58d0038	 str         r0, [sp, #0x38]
  003b8	e59d3038	 ldr         r3, [sp, #0x38]
  003bc	e58d3010	 str         r3, [sp, #0x10]

; 163  :         return DeviceIoControl(pContext->hDevice,
; 164  :                                IOCTL_TWL_INTRINIT,
; 165  :                                &inParam,
; 166  :                                sizeof(inParam),
; 167  :                                NULL,
; 168  :                                0,
; 169  :                                NULL,
; 170  :                                NULL 
; 171  :                                );

  003c0	e3a03000	 mov         r3, #0
  003c4	e58d300c	 str         r3, [sp, #0xC]
  003c8	e3a03000	 mov         r3, #0
  003cc	e58d3008	 str         r3, [sp, #8]
  003d0	e3a03000	 mov         r3, #0
  003d4	e58d3004	 str         r3, [sp, #4]
  003d8	e3a03000	 mov         r3, #0
  003dc	e58d3000	 str         r3, [sp]
  003e0	e3a0300c	 mov         r3, #0xC
  003e4	e28d2010	 add         r2, sp, #0x10
  003e8	e59f1028	 ldr         r1, [pc, #0x28]
  003ec	e59d001c	 ldr         r0, [sp, #0x1C]
  003f0	e280001c	 add         r0, r0, #0x1C
  003f4	e5900000	 ldr         r0, [r0]
  003f8	eb000000	 bl          DeviceIoControl
  003fc	e58d003c	 str         r0, [sp, #0x3C]
  00400	e59d303c	 ldr         r3, [sp, #0x3C]
  00404	e58d3020	 str         r3, [sp, #0x20]
  00408		 |$LN1@TWLInterru|
  00408		 |$LN3@TWLInterru|

; 172  :         }
; 173  : }

  00408	e59d0020	 ldr         r0, [sp, #0x20]
  0040c	e28dd040	 add         sp, sp, #0x40
  00410	e89d6000	 ldmia       sp, {sp, lr}
  00414	e12fff1e	 bx          lr
  00418		 |$LN8@TWLInterru|
  00418		 |$LN9@TWLInterru|
  00418	00220c0c	 DCD         0x220c0c
  0041c		 |$M44133|

			 ENDP  ; |TWLInterruptInitialize|

	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T44143| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M44140|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00008	e3a0000c	 mov         r0, #0xC
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 375  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M44141|

			 ENDP  ; |GetCurrentProcessId|

	EXPORT	|TWLInterruptMask|

  00028			 AREA	 |.pdata|, PDATA
|$T44155| DCD	|$LN7@TWLInterru@2|
	DCD	0x40003404
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\triton\twl\device\twl_access.c

  0041c			 AREA	 |.text|, CODE, ARM

  0041c		 |TWLInterruptMask| PROC

; 182  : {

  0041c		 |$LN7@TWLInterru@2|
  0041c	e1a0c00d	 mov         r12, sp
  00420	e92d0007	 stmdb       sp!, {r0 - r2}
  00424	e92d5000	 stmdb       sp!, {r12, lr}
  00428	e24dd03c	 sub         sp, sp, #0x3C
  0042c		 |$M44152|

; 183  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  0042c	e59d3044	 ldr         r3, [sp, #0x44]
  00430	e58d3010	 str         r3, [sp, #0x10]

; 184  : 
; 185  :     if (pContext->ifc.pfnInterruptMask != NULL)

  00434	e59d3010	 ldr         r3, [sp, #0x10]
  00438	e2833014	 add         r3, r3, #0x14
  0043c	e5933000	 ldr         r3, [r3]
  00440	e3530000	 cmp         r3, #0
  00444	0a00000d	 beq         |$LN2@TWLInterru@2|

; 186  :         {
; 187  :         return pContext->ifc.pfnInterruptMask(
; 188  :             pContext->ifc.context, intrId, bEnable
; 189  :             );

  00448	e59d204c	 ldr         r2, [sp, #0x4C]
  0044c	e59d1048	 ldr         r1, [sp, #0x48]
  00450	e59d3010	 ldr         r3, [sp, #0x10]
  00454	e5930000	 ldr         r0, [r3]
  00458	e59d3010	 ldr         r3, [sp, #0x10]
  0045c	e2833014	 add         r3, r3, #0x14
  00460	e5933000	 ldr         r3, [r3]
  00464	e1a0e00f	 mov         lr, pc
  00468	e12fff13	 bx          r3
  0046c	e58d0034	 str         r0, [sp, #0x34]
  00470	e59d3034	 ldr         r3, [sp, #0x34]
  00474	e58d3020	 str         r3, [sp, #0x20]
  00478	ea000016	 b           |$LN3@TWLInterru@2|

; 190  :         }
; 191  :     else

  0047c	ea000015	 b           |$LN1@TWLInterru@2|
  00480		 |$LN2@TWLInterru@2|

; 192  :         {
; 193  :         IOCTL_TWL_INTRMASK_IN inParam;
; 194  :         inParam.intrId = intrId;

  00480	e59d3048	 ldr         r3, [sp, #0x48]
  00484	e58d3018	 str         r3, [sp, #0x18]

; 195  :         inParam.bEnable = bEnable;

  00488	e59d304c	 ldr         r3, [sp, #0x4C]
  0048c	e58d301c	 str         r3, [sp, #0x1C]

; 196  : 
; 197  :         return DeviceIoControl(pContext->hDevice,
; 198  :                                IOCTL_TWL_INTRMASK,
; 199  :                                &inParam,
; 200  :                                sizeof(inParam),
; 201  :                                NULL,
; 202  :                                0,
; 203  :                                NULL,
; 204  :                                NULL 
; 205  :                                );

  00490	e3a03000	 mov         r3, #0
  00494	e58d300c	 str         r3, [sp, #0xC]
  00498	e3a03000	 mov         r3, #0
  0049c	e58d3008	 str         r3, [sp, #8]
  004a0	e3a03000	 mov         r3, #0
  004a4	e58d3004	 str         r3, [sp, #4]
  004a8	e3a03000	 mov         r3, #0
  004ac	e58d3000	 str         r3, [sp]
  004b0	e3a0300c	 mov         r3, #0xC
  004b4	e28d2014	 add         r2, sp, #0x14
  004b8	e59f1028	 ldr         r1, [pc, #0x28]
  004bc	e59d0010	 ldr         r0, [sp, #0x10]
  004c0	e280001c	 add         r0, r0, #0x1C
  004c4	e5900000	 ldr         r0, [r0]
  004c8	eb000000	 bl          DeviceIoControl
  004cc	e58d0038	 str         r0, [sp, #0x38]
  004d0	e59d3038	 ldr         r3, [sp, #0x38]
  004d4	e58d3020	 str         r3, [sp, #0x20]
  004d8		 |$LN1@TWLInterru@2|
  004d8		 |$LN3@TWLInterru@2|

; 206  :         }
; 207  : }

  004d8	e59d0020	 ldr         r0, [sp, #0x20]
  004dc	e28dd03c	 add         sp, sp, #0x3C
  004e0	e89d6000	 ldmia       sp, {sp, lr}
  004e4	e12fff1e	 bx          lr
  004e8		 |$LN8@TWLInterru@2|
  004e8		 |$LN9@TWLInterru@2|
  004e8	00220c14	 DCD         0x220c14
  004ec		 |$M44153|

			 ENDP  ; |TWLInterruptMask|

	EXPORT	|TWLInterruptDisable|

  00030			 AREA	 |.pdata|, PDATA
|$T44167| DCD	|$LN7@TWLInterru@3|
	DCD	0x40002f04
; Function compile flags: /Odtp

  004ec			 AREA	 |.text|, CODE, ARM

  004ec		 |TWLInterruptDisable| PROC

; 214  : {

  004ec		 |$LN7@TWLInterru@3|
  004ec	e1a0c00d	 mov         r12, sp
  004f0	e92d000f	 stmdb       sp!, {r0 - r3}
  004f4	e92d5000	 stmdb       sp!, {r12, lr}
  004f8	e24dd030	 sub         sp, sp, #0x30
  004fc		 |$M44164|

; 215  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  004fc	e59d3038	 ldr         r3, [sp, #0x38]
  00500	e58d3010	 str         r3, [sp, #0x10]

; 216  : 
; 217  :     if (pContext->ifc.pfnInterruptDisable != NULL)

  00504	e59d3010	 ldr         r3, [sp, #0x10]
  00508	e2833010	 add         r3, r3, #0x10
  0050c	e5933000	 ldr         r3, [r3]
  00510	e3530000	 cmp         r3, #0
  00514	0a00000c	 beq         |$LN2@TWLInterru@3|

; 218  :         {
; 219  :         return pContext->ifc.pfnInterruptDisable(
; 220  :             pContext->ifc.context, intrId
; 221  :             );

  00518	e59d103c	 ldr         r1, [sp, #0x3C]
  0051c	e59d3010	 ldr         r3, [sp, #0x10]
  00520	e5930000	 ldr         r0, [r3]
  00524	e59d3010	 ldr         r3, [sp, #0x10]
  00528	e2833010	 add         r3, r3, #0x10
  0052c	e5933000	 ldr         r3, [r3]
  00530	e1a0e00f	 mov         lr, pc
  00534	e12fff13	 bx          r3
  00538	e58d0028	 str         r0, [sp, #0x28]
  0053c	e59d3028	 ldr         r3, [sp, #0x28]
  00540	e58d3014	 str         r3, [sp, #0x14]
  00544	ea000013	 b           |$LN3@TWLInterru@3|

; 222  :         }
; 223  :     else

  00548	ea000012	 b           |$LN1@TWLInterru@3|
  0054c		 |$LN2@TWLInterru@3|

; 224  :         {
; 225  :         return DeviceIoControl(pContext->hDevice,
; 226  :                                IOCTL_TWL_INTRDISABLE,
; 227  :                                &intrId,
; 228  :                                sizeof(DWORD),
; 229  :                                NULL,
; 230  :                                0,
; 231  :                                NULL,
; 232  :                                NULL 
; 233  :                                );

  0054c	e3a03000	 mov         r3, #0
  00550	e58d300c	 str         r3, [sp, #0xC]
  00554	e3a03000	 mov         r3, #0
  00558	e58d3008	 str         r3, [sp, #8]
  0055c	e3a03000	 mov         r3, #0
  00560	e58d3004	 str         r3, [sp, #4]
  00564	e3a03000	 mov         r3, #0
  00568	e58d3000	 str         r3, [sp]
  0056c	e3a03004	 mov         r3, #4
  00570	e28d203c	 add         r2, sp, #0x3C
  00574	e3a01822	 mov         r1, #0x22, 16
  00578	e3811ec1	 orr         r1, r1, #0xC1, 28
  0057c	e59d0010	 ldr         r0, [sp, #0x10]
  00580	e280001c	 add         r0, r0, #0x1C
  00584	e5900000	 ldr         r0, [r0]
  00588	eb000000	 bl          DeviceIoControl
  0058c	e58d002c	 str         r0, [sp, #0x2C]
  00590	e59d302c	 ldr         r3, [sp, #0x2C]
  00594	e58d3014	 str         r3, [sp, #0x14]
  00598		 |$LN1@TWLInterru@3|
  00598		 |$LN3@TWLInterru@3|

; 234  :         }
; 235  : }

  00598	e59d0014	 ldr         r0, [sp, #0x14]
  0059c	e28dd030	 add         sp, sp, #0x30
  005a0	e89d6000	 ldmia       sp, {sp, lr}
  005a4	e12fff1e	 bx          lr
  005a8		 |$M44165|

			 ENDP  ; |TWLInterruptDisable|

	EXPORT	|TWLWakeEnable|

  00038			 AREA	 |.pdata|, PDATA
|$T44177| DCD	|$LN7@TWLWakeEna|
	DCD	0x40003404
; Function compile flags: /Odtp

  005a8			 AREA	 |.text|, CODE, ARM

  005a8		 |TWLWakeEnable| PROC

; 244  : {

  005a8		 |$LN7@TWLWakeEna|
  005a8	e1a0c00d	 mov         r12, sp
  005ac	e92d0007	 stmdb       sp!, {r0 - r2}
  005b0	e92d5000	 stmdb       sp!, {r12, lr}
  005b4	e24dd038	 sub         sp, sp, #0x38
  005b8		 |$M44174|

; 245  :     IOCTL_TWL_WAKEENABLE_IN inParam;
; 246  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  005b8	e59d3040	 ldr         r3, [sp, #0x40]
  005bc	e58d3018	 str         r3, [sp, #0x18]

; 247  : 
; 248  :     if (pContext->ifc.pfnEnableWakeup != NULL)

  005c0	e59d3018	 ldr         r3, [sp, #0x18]
  005c4	e2833018	 add         r3, r3, #0x18
  005c8	e5933000	 ldr         r3, [r3]
  005cc	e3530000	 cmp         r3, #0
  005d0	0a00000d	 beq         |$LN2@TWLWakeEna|

; 249  :         {
; 250  :         return pContext->ifc.pfnEnableWakeup(
; 251  :             pContext->ifc.context, intrId, bEnable
; 252  :             );

  005d4	e59d2048	 ldr         r2, [sp, #0x48]
  005d8	e59d1044	 ldr         r1, [sp, #0x44]
  005dc	e59d3018	 ldr         r3, [sp, #0x18]
  005e0	e5930000	 ldr         r0, [r3]
  005e4	e59d3018	 ldr         r3, [sp, #0x18]
  005e8	e2833018	 add         r3, r3, #0x18
  005ec	e5933000	 ldr         r3, [r3]
  005f0	e1a0e00f	 mov         lr, pc
  005f4	e12fff13	 bx          r3
  005f8	e58d0030	 str         r0, [sp, #0x30]
  005fc	e59d3030	 ldr         r3, [sp, #0x30]
  00600	e58d301c	 str         r3, [sp, #0x1C]
  00604	ea000016	 b           |$LN3@TWLWakeEna|

; 253  :         }
; 254  :     else

  00608	ea000015	 b           |$LN1@TWLWakeEna|
  0060c		 |$LN2@TWLWakeEna|

; 255  :         {
; 256  :         inParam.intrId = intrId;

  0060c	e59d3044	 ldr         r3, [sp, #0x44]
  00610	e58d3010	 str         r3, [sp, #0x10]

; 257  :         inParam.bEnable = bEnable;

  00614	e59d3048	 ldr         r3, [sp, #0x48]
  00618	e58d3014	 str         r3, [sp, #0x14]

; 258  :         return DeviceIoControl(pContext->hDevice,
; 259  :                                IOCTL_TWL_WAKEENABLE,
; 260  :                                &inParam,
; 261  :                                sizeof(inParam),
; 262  :                                NULL,
; 263  :                                0,
; 264  :                                NULL,
; 265  :                                NULL 
; 266  :                                );

  0061c	e3a03000	 mov         r3, #0
  00620	e58d300c	 str         r3, [sp, #0xC]
  00624	e3a03000	 mov         r3, #0
  00628	e58d3008	 str         r3, [sp, #8]
  0062c	e3a03000	 mov         r3, #0
  00630	e58d3004	 str         r3, [sp, #4]
  00634	e3a03000	 mov         r3, #0
  00638	e58d3000	 str         r3, [sp]
  0063c	e3a03008	 mov         r3, #8
  00640	e28d2010	 add         r2, sp, #0x10
  00644	e59f1028	 ldr         r1, [pc, #0x28]
  00648	e59d0018	 ldr         r0, [sp, #0x18]
  0064c	e280001c	 add         r0, r0, #0x1C
  00650	e5900000	 ldr         r0, [r0]
  00654	eb000000	 bl          DeviceIoControl
  00658	e58d0034	 str         r0, [sp, #0x34]
  0065c	e59d3034	 ldr         r3, [sp, #0x34]
  00660	e58d301c	 str         r3, [sp, #0x1C]
  00664		 |$LN1@TWLWakeEna|
  00664		 |$LN3@TWLWakeEna|

; 267  :         }
; 268  : }

  00664	e59d001c	 ldr         r0, [sp, #0x1C]
  00668	e28dd038	 add         sp, sp, #0x38
  0066c	e89d6000	 ldmia       sp, {sp, lr}
  00670	e12fff1e	 bx          lr
  00674		 |$LN8@TWLWakeEna|
  00674		 |$LN9@TWLWakeEna|
  00674	00220c18	 DCD         0x220c18
  00678		 |$M44175|

			 ENDP  ; |TWLWakeEnable|

	END
