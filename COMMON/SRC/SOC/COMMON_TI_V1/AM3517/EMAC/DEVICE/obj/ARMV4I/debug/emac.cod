; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\AM3517\EMAC\emac.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|g_pSysConfRegs| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_pSysConfRegs| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|SocResetEmac|
	IMPORT	|GetTickCount|

  00000			 AREA	 |.pdata|, PDATA
|$T45147| DCD	|$LN8@SocResetEm|
	DCD	0x40002c02
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\emac\emac.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SocResetEmac| PROC

; 42   : {

  00000		 |$LN8@SocResetEm|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M45144|

; 43   :     if (validate_pointer())

  00008	eb000000	 bl          validate_pointer
  0000c	e58d0004	 str         r0, [sp, #4]
  00010	e59d3004	 ldr         r3, [sp, #4]
  00014	e3530000	 cmp         r3, #0
  00018	0a000020	 beq         |$LN3@SocResetEm|

; 44   :     {
; 45   : 		g_pSysConfRegs->CONTROL_IP_SW_RESET |= CPGMACSS_SW_RST;

  0001c	e59f3088	 ldr         r3, [pc, #0x88]
  00020	e5933000	 ldr         r3, [r3]
  00024	e2833fca	 add         r3, r3, #0xCA, 30
  00028	e5933000	 ldr         r3, [r3]
  0002c	e3832002	 orr         r2, r3, #2
  00030	e59f3074	 ldr         r3, [pc, #0x74]
  00034	e5933000	 ldr         r3, [r3]
  00038	e2833fca	 add         r3, r3, #0xCA, 30
  0003c	e5832000	 str         r2, [r3]

; 46   : 
; 47   : #ifndef BOOT_MODE
; 48   : 		{
; 49   : 			DWORD dwStart = 0;

  00040	e3a03000	 mov         r3, #0
  00044	e58d3000	 str         r3, [sp]

; 50   : 
; 51   : 			// Wait for a few milliseconds
; 52   : 			dwStart = GetTickCount();

  00048	eb000000	 bl          GetTickCount
  0004c	e58d0008	 str         r0, [sp, #8]
  00050	e59d3008	 ldr         r3, [sp, #8]
  00054	e58d3000	 str         r3, [sp]
  00058		 |$LN2@SocResetEm|

; 53   : 			while((GetTickCount() - dwStart) < 10);

  00058	eb000000	 bl          GetTickCount
  0005c	e58d000c	 str         r0, [sp, #0xC]
  00060	e59d200c	 ldr         r2, [sp, #0xC]
  00064	e59d3000	 ldr         r3, [sp]
  00068	e0423003	 sub         r3, r2, r3
  0006c	e353000a	 cmp         r3, #0xA
  00070	2a000000	 bcs         |$LN1@SocResetEm|
  00074	eafffff7	 b           |$LN2@SocResetEm|
  00078		 |$LN1@SocResetEm|

; 54   : 		}
; 55   : #else
; 56   : 		OALStall(10);
; 57   : #endif
; 58   :         g_pSysConfRegs->CONTROL_IP_SW_RESET &= ~CPGMACSS_SW_RST;

  00078	e59f302c	 ldr         r3, [pc, #0x2C]
  0007c	e5933000	 ldr         r3, [r3]
  00080	e2833fca	 add         r3, r3, #0xCA, 30
  00084	e5932000	 ldr         r2, [r3]
  00088	e3e03002	 mvn         r3, #2
  0008c	e0022003	 and         r2, r2, r3
  00090	e59f3014	 ldr         r3, [pc, #0x14]
  00094	e5933000	 ldr         r3, [r3]
  00098	e2833fca	 add         r3, r3, #0xCA, 30
  0009c	e5832000	 str         r2, [r3]
  000a0		 |$LN3@SocResetEm|

; 59   :     }
; 60   : }

  000a0	e28dd010	 add         sp, sp, #0x10
  000a4	e49de004	 ldr         lr, [sp], #4
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN9@SocResetEm|
  000ac		 |$LN10@SocResetEm|
  000ac	00000000	 DCD         |g_pSysConfRegs|
  000b0		 |$M45145|

			 ENDP  ; |SocResetEmac|

	IMPORT	|MmMapIoSpace|

  00008			 AREA	 |.pdata|, PDATA
|$T45157| DCD	|$LN8@validate_p|
	DCD	0x40002402
; Function compile flags: /Odtp

  000b0			 AREA	 |.text|, CODE, ARM

  000b0		 |validate_pointer| PROC

; 24   : {

  000b0		 |$LN8@validate_p|
  000b0	e52de004	 str         lr, [sp, #-4]!
  000b4	e24dd014	 sub         sp, sp, #0x14
  000b8		 |$M45154|

; 25   :     if (g_pSysConfRegs == NULL)

  000b8	e59f3078	 ldr         r3, [pc, #0x78]
  000bc	e5933000	 ldr         r3, [r3]
  000c0	e3530000	 cmp         r3, #0
  000c4	1a00000c	 bne         |$LN1@validate_p|

; 26   :     {
; 27   : #ifndef BOOT_MODE
; 28   :         PHYSICAL_ADDRESS pa;
; 29   :         /* Map the sys config registers */
; 30   :         pa.QuadPart = (LONGLONG)OMAP_SYSC_GENERAL_REGS_PA;

  000c8	e59f306c	 ldr         r3, [pc, #0x6C]
  000cc	e58d3000	 str         r3, [sp]
  000d0	e3a03000	 mov         r3, #0
  000d4	e58d3004	 str         r3, [sp, #4]

; 31   :         g_pSysConfRegs = (OMAP_SYSC_GENERAL_REGS*) MmMapIoSpace(pa,
; 32   :             sizeof (OMAP_SYSC_GENERAL_REGS),
; 33   :             FALSE);

  000d8	e3a03000	 mov         r3, #0
  000dc	e3a02ea6	 mov         r2, #0xA6, 28
  000e0	e59d0000	 ldr         r0, [sp]
  000e4	e59d1004	 ldr         r1, [sp, #4]
  000e8	eb000000	 bl          MmMapIoSpace
  000ec	e58d000c	 str         r0, [sp, #0xC]
  000f0	e59d200c	 ldr         r2, [sp, #0xC]
  000f4	e59f303c	 ldr         r3, [pc, #0x3C]
  000f8	e5832000	 str         r2, [r3]
  000fc		 |$LN1@validate_p|

; 34   : #else
; 35   : 		g_pSysConfRegs = OALPAtoUA(OMAP_SYSC_GENERAL_REGS_PA);
; 36   : #endif
; 37   :     }
; 38   :     return (g_pSysConfRegs != NULL) ? TRUE : FALSE;

  000fc	e59f3034	 ldr         r3, [pc, #0x34]
  00100	e5933000	 ldr         r3, [r3]
  00104	e3530000	 cmp         r3, #0
  00108	0a000002	 beq         |$LN4@validate_p|
  0010c	e3a03001	 mov         r3, #1
  00110	e58d3010	 str         r3, [sp, #0x10]
  00114	ea000001	 b           |$LN5@validate_p|
  00118		 |$LN4@validate_p|
  00118	e3a03000	 mov         r3, #0
  0011c	e58d3010	 str         r3, [sp, #0x10]
  00120		 |$LN5@validate_p|
  00120	e59d3010	 ldr         r3, [sp, #0x10]
  00124	e58d3008	 str         r3, [sp, #8]

; 39   : }

  00128	e59d0008	 ldr         r0, [sp, #8]
  0012c	e28dd014	 add         sp, sp, #0x14
  00130	e49de004	 ldr         lr, [sp], #4
  00134	e12fff1e	 bx          lr
  00138		 |$LN9@validate_p|
  00138		 |$LN10@validate_p|
  00138	00000000	 DCD         |g_pSysConfRegs|
  0013c		 |$LN11@validate_p|
  0013c	48002270	 DCD         0x48002270
  00140		 |$M45155|

			 ENDP  ; |validate_pointer|

	EXPORT	|SocAckInterrupt|

  00010			 AREA	 |.pdata|, PDATA
|$T45165| DCD	|$LN6@SocAckInte|
	DCD	0x40001304
; Function compile flags: /Odtp

  00140			 AREA	 |.text|, CODE, ARM

  00140		 |SocAckInterrupt| PROC

; 64   : {

  00140		 |$LN6@SocAckInte|
  00140	e1a0c00d	 mov         r12, sp
  00144	e92d0001	 stmdb       sp!, {r0}
  00148	e92d5000	 stmdb       sp!, {r12, lr}
  0014c	e24dd004	 sub         sp, sp, #4
  00150		 |$M45162|

; 65   :     if (validate_pointer())

  00150	eb000000	 bl          validate_pointer
  00154	e58d0000	 str         r0, [sp]
  00158	e59d3000	 ldr         r3, [sp]
  0015c	e3530000	 cmp         r3, #0
  00160	0a000005	 beq         |$LN1@SocAckInte|

; 66   :     {
; 67   :         g_pSysConfRegs->CONTROL_LVL_INTR_CLEAR = flag & 0xF;

  00164	e59d300c	 ldr         r3, [sp, #0xC]
  00168	e203200f	 and         r2, r3, #0xF
  0016c	e59f3014	 ldr         r3, [pc, #0x14]
  00170	e5933000	 ldr         r3, [r3]
  00174	e2833fc9	 add         r3, r3, #0xC9, 30
  00178	e5832000	 str         r2, [r3]
  0017c		 |$LN1@SocAckInte|

; 68   :     }
; 69   : }

  0017c	e28dd004	 add         sp, sp, #4
  00180	e89d6000	 ldmia       sp, {sp, lr}
  00184	e12fff1e	 bx          lr
  00188		 |$LN7@SocAckInte|
  00188		 |$LN8@SocAckInte|
  00188	00000000	 DCD         |g_pSysConfRegs|
  0018c		 |$M45163|

			 ENDP  ; |SocAckInterrupt|

	END
