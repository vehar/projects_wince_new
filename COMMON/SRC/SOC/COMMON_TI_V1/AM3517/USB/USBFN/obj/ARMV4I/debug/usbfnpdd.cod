; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\AM3517\USB\USBFN\usbfnpdd.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1CE@NGHFOCHF@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAR?$AAx?$AAG?$AAe?$AAn?$AAR?$AAN?$AAD?$AAI?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@FLLDNPDG@?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@GMFDDKFG@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_00CNPNBAHC@?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_1BM@IOLIHJIC@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@OGFPDABJ@?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NGHFOCHF@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAR?$AAx?$AAG?$AAe?$AAn?$AAR?$AAN?$AAD?$AAI?$AAS?$AA?$AA@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "R", 0x0, "x", 0x0, "G", 0x0, "e", 0x0, "n", 0x0, "R"
	DCB	0x0, "N", 0x0, "D", 0x0, "I", 0x0, "S", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@FLLDNPDG@?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r", 0x0, "i", 0x0, "p"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "C", 0x0, "o", 0x0, "u"
	DCB	0x0, "n", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@GMFDDKFG@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "m"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_00CNPNBAHC@?$AA@| DCB 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@IOLIHJIC@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@OGFPDABJ@?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| DCB "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@| DCB "I", 0x0, "r", 0x0, "q", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "U", 0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, 0x0
	DCB	0x0
	%	52
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, 0x0, 0x0
	%	52
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, 0x0, 0x0
	%	48
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0
	DCB	"e", 0x0, "r", 0x0, 0x0, 0x0
	%	46
	DCB	"P", 0x0, "i", 0x0, "p", 0x0, "e", 0x0, 0x0, 0x0
	%	54
	DCB	"S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, 0x0, 0x0
	%	54
	DCB	"R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	48
	DCB	"U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "E", 0x0, "v", 0x0
	DCB	"e", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0
	%	42
	DCB	"P", 0x0, "d", 0x0, "d", 0x0, "I", 0x0, "n", 0x0, "i", 0x0
	DCB	"t", 0x0, 0x0, 0x0
	%	48
	DCB	"P", 0x0, "d", 0x0, "d", 0x0, "E", 0x0, "P", 0x0, "0", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"P", 0x0, "d", 0x0, "d", 0x0, "R", 0x0, "X", 0x0, 0x0, 0x0
	%	52
	DCB	"P", 0x0, "d", 0x0, "d", 0x0, "T", 0x0, "X", 0x0, 0x0, 0x0
	%	52
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "e", 0x0, "n", 0x0
	DCB	"t", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "S", 0x0, "O", 0x0, 0x0, 0x0
	%	56
	DCB	"P", 0x0, "d", 0x0, "d", 0x0, "D", 0x0, "M", 0x0, "A", 0x0
	DCB	0x0, 0x0
	%	50
	DCD	0x8107

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|f_DeviceRegParams| DCD |??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x0
	DCD	0x4
	DCD	0x47
	DCD	|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x4
	DCD	0x4
	DCD	0x65
	DCD	|??_C@_1BM@OGFPDABJ@?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x8
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BM@IOLIHJIC@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$AA@|
	DCD	0x2
	DCD	0x0
	DCD	0x4c
	DCD	0x208
	DCD	|??_C@_00CNPNBAHC@?$AA@|
	DCD	|??_C@_1CO@GMFDDKFG@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0xc
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1CA@FLLDNPDG@?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x660
	DCD	0x4
	DCD	0x200
	DCD	|??_C@_1CE@NGHFOCHF@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAR?$AAx?$AAG?$AAe?$AAn?$AAR?$AAN?$AAD?$AAI?$AAS?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x664
	DCD	0x4
	DCD	0x0
	EXPORT	|??_C@_1IO@CFFGEKIK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?3?$AA?5?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAt?$AAo?$AAt@| [ DATA ] ; `string'
	EXPORT	|ReadFIFO|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T49299| DCD	|$LN15@ReadFIFO|
	DCD	0x40007404
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbfn\usbfnpdd.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@CFFGEKIK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?3?$AA?5?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAt?$AAo?$AAt@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "F", 0x0, "I", 0x0, "F"
	DCB	0x0, "O", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, "t", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ReadFIFO| PROC

; 191  : {

  00000		 |$LN15@ReadFIFO|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd044	 sub         sp, sp, #0x44
  00010		 |$M49296|

; 192  :     DWORD total   = size / 4;

  00010	e59d1058	 ldr         r1, [sp, #0x58]
  00014	e3a00004	 mov         r0, #4
  00018	eb000000	 bl          __rt_udiv
  0001c	e58d001c	 str         r0, [sp, #0x1C]

; 193  :     DWORD remain  = size % 4;

  00020	e59d1058	 ldr         r1, [sp, #0x58]
  00024	e3a00004	 mov         r0, #4
  00028	eb000000	 bl          __rt_udiv
  0002c	e58d1018	 str         r1, [sp, #0x18]

; 194  :     DWORD i		  = 0;

  00030	e3a03000	 mov         r3, #0
  00034	e58d3008	 str         r3, [sp, #8]

; 195  :     DWORD* pDword = (DWORD*)pData;

  00038	e59d3054	 ldr         r3, [sp, #0x54]
  0003c	e58d3010	 str         r3, [sp, #0x10]

; 196  : 
; 197  :     CSL_UsbRegs* pUsbdRegs = pPdd->pUsbdRegs;

  00040	e59d304c	 ldr         r3, [sp, #0x4C]
  00044	e283301c	 add         r3, r3, #0x1C
  00048	e5933000	 ldr         r3, [r3]
  0004c	e58d3014	 str         r3, [sp, #0x14]

; 198  :     volatile ULONG *pReg = (volatile ULONG*)(&pUsbdRegs->FIFO[endpoint]);

  00050	e59d3014	 ldr         r3, [sp, #0x14]
  00054	e2831e42	 add         r1, r3, #0x42, 28
  00058	e5dd3050	 ldrb        r3, [sp, #0x50]
  0005c	e1a02003	 mov         r2, r3
  00060	e3a03004	 mov         r3, #4
  00064	e0030392	 mul         r3, r2, r3
  00068	e0813003	 add         r3, r1, r3
  0006c	e58d300c	 str         r3, [sp, #0xC]

; 199  : 
; 200  :     // Critical section would be handled outside
; 201  :     DEBUGMSG(ZONE_PDD_RX, (TEXT("ReadFIFO EP(%d): pData(0x%x) total (0x%x), remain (0x%x), size(0x%x)\r\n"), endpoint, pData, total, remain, size));

  00070	e59f3154	 ldr         r3, [pc, #0x154]
  00074	e5933440	 ldr         r3, [r3, #0x440]
  00078	e3130b01	 tst         r3, #1, 22
  0007c	0a00001d	 beq         |$LN11@ReadFIFO|
  00080	e59f3144	 ldr         r3, [pc, #0x144]
  00084	e5933440	 ldr         r3, [r3, #0x440]
  00088	e3130801	 tst         r3, #1, 16
  0008c	0a00000b	 beq         |$LN9@ReadFIFO|
  00090	e59d3058	 ldr         r3, [sp, #0x58]
  00094	e58d3004	 str         r3, [sp, #4]
  00098	e59d3018	 ldr         r3, [sp, #0x18]
  0009c	e58d3000	 str         r3, [sp]
  000a0	e59d301c	 ldr         r3, [sp, #0x1C]
  000a4	e59d2054	 ldr         r2, [sp, #0x54]
  000a8	e5dd1050	 ldrb        r1, [sp, #0x50]
  000ac	e59f0114	 ldr         r0, [pc, #0x114]
  000b0	eb000000	 bl          CeLogMsg
  000b4	e3a03001	 mov         r3, #1
  000b8	e58d303c	 str         r3, [sp, #0x3C]
  000bc	ea00000a	 b           |$LN10@ReadFIFO|
  000c0		 |$LN9@ReadFIFO|
  000c0	e59d3058	 ldr         r3, [sp, #0x58]
  000c4	e58d3004	 str         r3, [sp, #4]
  000c8	e59d3018	 ldr         r3, [sp, #0x18]
  000cc	e58d3000	 str         r3, [sp]
  000d0	e59d301c	 ldr         r3, [sp, #0x1C]
  000d4	e59d2054	 ldr         r2, [sp, #0x54]
  000d8	e5dd1050	 ldrb        r1, [sp, #0x50]
  000dc	e59f00e4	 ldr         r0, [pc, #0xE4]
  000e0	eb000000	 bl          NKDbgPrintfW
  000e4	e3a03000	 mov         r3, #0
  000e8	e58d303c	 str         r3, [sp, #0x3C]
  000ec		 |$LN10@ReadFIFO|
  000ec	e3a03001	 mov         r3, #1
  000f0	e58d3040	 str         r3, [sp, #0x40]
  000f4	ea000001	 b           |$LN12@ReadFIFO|
  000f8		 |$LN11@ReadFIFO|
  000f8	e3a03000	 mov         r3, #0
  000fc	e58d3040	 str         r3, [sp, #0x40]
  00100		 |$LN12@ReadFIFO|

; 202  : 
; 203  :     // this is 32-bit align
; 204  :     for (i = 0; i < total; i++)

  00100	e3a03000	 mov         r3, #0
  00104	e58d3008	 str         r3, [sp, #8]
  00108	ea000002	 b           |$LN6@ReadFIFO|
  0010c		 |$LN5@ReadFIFO|
  0010c	e59d3008	 ldr         r3, [sp, #8]
  00110	e2833001	 add         r3, r3, #1
  00114	e58d3008	 str         r3, [sp, #8]
  00118		 |$LN6@ReadFIFO|
  00118	e59d2008	 ldr         r2, [sp, #8]
  0011c	e59d301c	 ldr         r3, [sp, #0x1C]
  00120	e1520003	 cmp         r2, r3
  00124	2a000007	 bcs         |$LN4@ReadFIFO|

; 205  :     {
; 206  :         *pDword++ = INREG32(pReg);

  00128	e59d300c	 ldr         r3, [sp, #0xC]
  0012c	e5932000	 ldr         r2, [r3]
  00130	e59d3010	 ldr         r3, [sp, #0x10]
  00134	e5832000	 str         r2, [r3]
  00138	e59d3010	 ldr         r3, [sp, #0x10]
  0013c	e2833004	 add         r3, r3, #4
  00140	e58d3010	 str         r3, [sp, #0x10]

; 207  :     }

  00144	eafffff0	 b           |$LN5@ReadFIFO|
  00148		 |$LN4@ReadFIFO|

; 208  :         
; 209  :     // Set the pByte equal to the last bytes of data being transferred
; 210  :     if (remain != 0)

  00148	e59d3018	 ldr         r3, [sp, #0x18]
  0014c	e3530000	 cmp         r3, #0
  00150	0a000016	 beq         |$LN3@ReadFIFO|

; 211  :     {
; 212  :         UCHAR* pUCHAR = (UCHAR*) pDword;

  00154	e59d3010	 ldr         r3, [sp, #0x10]
  00158	e58d3024	 str         r3, [sp, #0x24]

; 213  :         DWORD dwTemp = INREG32(pReg);

  0015c	e59d300c	 ldr         r3, [sp, #0xC]
  00160	e5933000	 ldr         r3, [r3]
  00164	e58d3020	 str         r3, [sp, #0x20]
  00168		 |$LN2@ReadFIFO|

; 214  :         
; 215  :         while (remain--)

  00168	e59d3018	 ldr         r3, [sp, #0x18]
  0016c	e3530000	 cmp         r3, #0
  00170	e59d3018	 ldr         r3, [sp, #0x18]
  00174	e2433001	 sub         r3, r3, #1
  00178	e58d3018	 str         r3, [sp, #0x18]
  0017c	0a00000b	 beq         |$LN1@ReadFIFO|

; 216  :         {
; 217  :             *pUCHAR++ = (UCHAR) (dwTemp & 0xFF);

  00180	e59d3020	 ldr         r3, [sp, #0x20]
  00184	e20330ff	 and         r3, r3, #0xFF
  00188	e20320ff	 and         r2, r3, #0xFF
  0018c	e59d3024	 ldr         r3, [sp, #0x24]
  00190	e5c32000	 strb        r2, [r3]
  00194	e59d3024	 ldr         r3, [sp, #0x24]
  00198	e2833001	 add         r3, r3, #1
  0019c	e58d3024	 str         r3, [sp, #0x24]

; 218  :             dwTemp>>=8;

  001a0	e59d3020	 ldr         r3, [sp, #0x20]
  001a4	e1a03423	 mov         r3, r3, lsr #8
  001a8	e58d3020	 str         r3, [sp, #0x20]

; 219  :         }

  001ac	eaffffed	 b           |$LN2@ReadFIFO|
  001b0		 |$LN1@ReadFIFO|
  001b0		 |$LN3@ReadFIFO|

; 220  :     }
; 221  : 
; 222  : #if 0
; 223  :     RETAILMSG(1,(TEXT("Read fifo\r\n")));
; 224  :     memdump((UCHAR*)pData,(USHORT)size,0);
; 225  :     RETAILMSG(1,(TEXT("\r\n")));
; 226  : #endif
; 227  : 
; 228  :     return TRUE;

  001b0	e3a03001	 mov         r3, #1
  001b4	e58d3038	 str         r3, [sp, #0x38]

; 229  : }

  001b8	e59d0038	 ldr         r0, [sp, #0x38]
  001bc	e28dd044	 add         sp, sp, #0x44
  001c0	e89d6000	 ldmia       sp, {sp, lr}
  001c4	e12fff1e	 bx          lr
  001c8		 |$LN16@ReadFIFO|
  001c8		 |$LN17@ReadFIFO|
  001c8	00000000	 DCD         |??_C@_1IO@CFFGEKIK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?3?$AA?5?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAt?$AAo?$AAt@|
  001cc		 |$LN18@ReadFIFO|
  001cc	00000000	 DCD         |dpCurSettings|
  001d0		 |$M49297|

			 ENDP  ; |ReadFIFO|

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00008			 AREA	 |.pdata|, PDATA
|$T49316| DCD	|$LN7@CeLogMsg|
	DCD	0xc0003704

  00000			 AREA	 |.xdata|, DATA
|$T49312| DCD	0xffffffcc
; Function compile flags: /Odtp
; File c:\wince600\public\common\sdk\inc\celog.h

  001d0			 AREA	 |.text|, CODE, ARM

  001d0	00000000	 DCD         |__GSHandlerCheck|
  001d4	00000000	 DCD         |$T49312|

  001d8		 |CeLogMsg| PROC

; 1020 : {

  001d8		 |$LN7@CeLogMsg|
  001d8	e1a0c00d	 mov         r12, sp
  001dc	e92d000f	 stmdb       sp!, {r0 - r3}
  001e0	e92d5000	 stmdb       sp!, {r12, lr}
  001e4	e24ddd09	 sub         sp, sp, #9, 26
  001e8		 |$M49313|
  001e8	e59f30c0	 ldr         r3, [pc, #0xC0]
  001ec	e5933000	 ldr         r3, [r3]
  001f0	e58d3224	 str         r3, [sp, #0x224]

; 1021 :     va_list arglist;
; 1022 :     WCHAR   szTemp[MAX_PATH];
; 1023 :     size_t  cchLen;
; 1024 :     HRESULT hr;
; 1025 : 
; 1026 :     // Compose a single string using the input args
; 1027 :     va_start(arglist, szFormat);

  001f4	e28d3f92	 add         r3, sp, #0x92, 30
  001f8	e2833004	 add         r3, r3, #4
  001fc	e58d3010	 str         r3, [sp, #0x10]

; 1028 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00200	e59d3010	 ldr         r3, [sp, #0x10]
  00204	e59d2248	 ldr         r2, [sp, #0x248]
  00208	e3a01f41	 mov         r1, #0x41, 30
  0020c	e28d0014	 add         r0, sp, #0x14
  00210	eb000000	 bl          StringCchVPrintfW
  00214	e58d0238	 str         r0, [sp, #0x238]
  00218	e59d3238	 ldr         r3, [sp, #0x238]
  0021c	e58d321c	 str         r3, [sp, #0x21C]

; 1029 :     if (SUCCEEDED(hr)) {

  00220	e59d321c	 ldr         r3, [sp, #0x21C]
  00224	e3530000	 cmp         r3, #0
  00228	ba00001b	 blt         |$LN2@CeLogMsg|

; 1030 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  0022c	e28d2e22	 add         r2, sp, #0x22, 28
  00230	e3a01f41	 mov         r1, #0x41, 30
  00234	e28d0014	 add         r0, sp, #0x14
  00238	eb000000	 bl          StringCchLengthW
  0023c	e58d023c	 str         r0, [sp, #0x23C]
  00240	e59d323c	 ldr         r3, [sp, #0x23C]
  00244	e58d321c	 str         r3, [sp, #0x21C]

; 1031 :         if (SUCCEEDED(hr)) {

  00248	e59d321c	 ldr         r3, [sp, #0x21C]
  0024c	e3530000	 cmp         r3, #0
  00250	ba000011	 blt         |$LN1@CeLogMsg|

; 1032 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1033 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00254	e3a03000	 mov         r3, #0
  00258	e58d300c	 str         r3, [sp, #0xC]
  0025c	e3a03000	 mov         r3, #0
  00260	e58d3008	 str         r3, [sp, #8]
  00264	e3a03101	 mov         r3, #1, 2
  00268	e58d3004	 str         r3, [sp, #4]
  0026c	e3a03000	 mov         r3, #0
  00270	e58d3000	 str         r3, [sp]
  00274	e59d3220	 ldr         r3, [sp, #0x220]
  00278	e2832001	 add         r2, r3, #1
  0027c	e3a03002	 mov         r3, #2
  00280	e0030392	 mul         r3, r2, r3
  00284	e1a03803	 mov         r3, r3, lsl #16
  00288	e1a03823	 mov         r3, r3, lsr #16
  0028c	e28d2014	 add         r2, sp, #0x14
  00290	e3a0104a	 mov         r1, #0x4A
  00294	e3a00001	 mov         r0, #1
  00298	eb000000	 bl          CeLogData
  0029c		 |$LN1@CeLogMsg|
  0029c		 |$LN2@CeLogMsg|

; 1020 : {

  0029c	e59d0224	 ldr         r0, [sp, #0x224]
  002a0	eb000000	 bl          __security_check_cookie

; 1034 :         }
; 1035 :     }
; 1036 : }

  002a4	e28ddd09	 add         sp, sp, #9, 26
  002a8	e89d6000	 ldmia       sp, {sp, lr}
  002ac	e12fff1e	 bx          lr
  002b0		 |$LN8@CeLogMsg|
  002b0		 |$LN9@CeLogMsg|
  002b0	00000000	 DCD         |__security_cookie|
  002b4		 |$M49314|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??_C@_1GK@LINCOMEM@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAt?$AAo?$AAt?$AAa?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?5@| [ DATA ] ; `string'
	EXPORT	|WriteFIFO|

  00010			 AREA	 |.pdata|, PDATA
|$T49328| DCD	|$LN15@WriteFIFO|
	DCD	0x40006804
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbfn\usbfnpdd.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@LINCOMEM@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAt?$AAo?$AAt?$AAa?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?5@| DCB "W"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, "t", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  002b4			 AREA	 |.text|, CODE, ARM

  002b4		 |WriteFIFO| PROC

; 232  : {

  002b4		 |$LN15@WriteFIFO|
  002b4	e1a0c00d	 mov         r12, sp
  002b8	e92d000f	 stmdb       sp!, {r0 - r3}
  002bc	e92d5000	 stmdb       sp!, {r12, lr}
  002c0	e24dd028	 sub         sp, sp, #0x28
  002c4		 |$M49325|

; 233  :     DWORD total					= size / 4;

  002c4	e59d103c	 ldr         r1, [sp, #0x3C]
  002c8	e3a00004	 mov         r0, #4
  002cc	eb000000	 bl          __rt_udiv
  002d0	e58d0014	 str         r0, [sp, #0x14]

; 234  :     DWORD remain				= size % 4;

  002d4	e59d103c	 ldr         r1, [sp, #0x3C]
  002d8	e3a00004	 mov         r0, #4
  002dc	eb000000	 bl          __rt_udiv
  002e0	e58d1010	 str         r1, [sp, #0x10]

; 235  :     DWORD i						= 0;

  002e4	e3a03000	 mov         r3, #0
  002e8	e58d3000	 str         r3, [sp]

; 236  :     DWORD* pDword				= (DWORD*)pData;

  002ec	e59d3038	 ldr         r3, [sp, #0x38]
  002f0	e58d3008	 str         r3, [sp, #8]

; 237  :     CSL_UsbRegs* pUsbdRegs = pPdd->pUsbdRegs;

  002f4	e59d3030	 ldr         r3, [sp, #0x30]
  002f8	e283301c	 add         r3, r3, #0x1C
  002fc	e5933000	 ldr         r3, [r3]
  00300	e58d300c	 str         r3, [sp, #0xC]

; 238  :     volatile ULONG *pReg = (volatile ULONG*)(&pUsbdRegs->FIFO[endpoint]);

  00304	e59d300c	 ldr         r3, [sp, #0xC]
  00308	e2831e42	 add         r1, r3, #0x42, 28
  0030c	e5dd3034	 ldrb        r3, [sp, #0x34]
  00310	e1a02003	 mov         r2, r3
  00314	e3a03004	 mov         r3, #4
  00318	e0030392	 mul         r3, r2, r3
  0031c	e0813003	 add         r3, r1, r3
  00320	e58d3004	 str         r3, [sp, #4]

; 239  : 
; 240  :     // Critical section would be handled outside
; 241  :     DEBUGMSG(ZONE_PDD_TX, (TEXT("WriteFIFO: total (0x%x), remain (0x%x), size(0x%x)\r\n"), total, remain, size));    

  00324	e59f3124	 ldr         r3, [pc, #0x124]
  00328	e5933440	 ldr         r3, [r3, #0x440]
  0032c	e3130b02	 tst         r3, #2, 22
  00330	0a000015	 beq         |$LN11@WriteFIFO|
  00334	e59f3114	 ldr         r3, [pc, #0x114]
  00338	e5933440	 ldr         r3, [r3, #0x440]
  0033c	e3130801	 tst         r3, #1, 16
  00340	0a000007	 beq         |$LN9@WriteFIFO|
  00344	e59d303c	 ldr         r3, [sp, #0x3C]
  00348	e59d2010	 ldr         r2, [sp, #0x10]
  0034c	e59d1014	 ldr         r1, [sp, #0x14]
  00350	e59f00f4	 ldr         r0, [pc, #0xF4]
  00354	eb000000	 bl          CeLogMsg
  00358	e3a03001	 mov         r3, #1
  0035c	e58d3020	 str         r3, [sp, #0x20]
  00360	ea000006	 b           |$LN10@WriteFIFO|
  00364		 |$LN9@WriteFIFO|
  00364	e59d303c	 ldr         r3, [sp, #0x3C]
  00368	e59d2010	 ldr         r2, [sp, #0x10]
  0036c	e59d1014	 ldr         r1, [sp, #0x14]
  00370	e59f00d4	 ldr         r0, [pc, #0xD4]
  00374	eb000000	 bl          NKDbgPrintfW
  00378	e3a03000	 mov         r3, #0
  0037c	e58d3020	 str         r3, [sp, #0x20]
  00380		 |$LN10@WriteFIFO|
  00380	e3a03001	 mov         r3, #1
  00384	e58d3024	 str         r3, [sp, #0x24]
  00388	ea000001	 b           |$LN12@WriteFIFO|
  0038c		 |$LN11@WriteFIFO|
  0038c	e3a03000	 mov         r3, #0
  00390	e58d3024	 str         r3, [sp, #0x24]
  00394		 |$LN12@WriteFIFO|

; 242  : 
; 243  : #if 0
; 244  :     RETAILMSG(1,(TEXT("Write fifo\r\n")));
; 245  :     memdump((UCHAR*)pData,(USHORT)size,0);
; 246  :     RETAILMSG(1,(TEXT("\r\n")));
; 247  : #endif
; 248  : 
; 249  :     // this is 32-bit align
; 250  :     for (i = 0; i < total; i++)

  00394	e3a03000	 mov         r3, #0
  00398	e58d3000	 str         r3, [sp]
  0039c	ea000002	 b           |$LN6@WriteFIFO|
  003a0		 |$LN5@WriteFIFO|
  003a0	e59d3000	 ldr         r3, [sp]
  003a4	e2833001	 add         r3, r3, #1
  003a8	e58d3000	 str         r3, [sp]
  003ac		 |$LN6@WriteFIFO|
  003ac	e59d2000	 ldr         r2, [sp]
  003b0	e59d3014	 ldr         r3, [sp, #0x14]
  003b4	e1520003	 cmp         r2, r3
  003b8	2a000007	 bcs         |$LN4@WriteFIFO|

; 251  :     {
; 252  :         OUTREG32(pReg, *pDword++);

  003bc	e59d3008	 ldr         r3, [sp, #8]
  003c0	e5932000	 ldr         r2, [r3]
  003c4	e59d3004	 ldr         r3, [sp, #4]
  003c8	e5832000	 str         r2, [r3]
  003cc	e59d3008	 ldr         r3, [sp, #8]
  003d0	e2833004	 add         r3, r3, #4
  003d4	e58d3008	 str         r3, [sp, #8]

; 253  :     }

  003d8	eafffff0	 b           |$LN5@WriteFIFO|
  003dc		 |$LN4@WriteFIFO|

; 254  : 
; 255  :     // Set the pByte equal to the last bytes of data being transferred
; 256  :     if (remain != 0)

  003dc	e59d3010	 ldr         r3, [sp, #0x10]
  003e0	e3530000	 cmp         r3, #0
  003e4	0a000012	 beq         |$LN3@WriteFIFO|

; 257  :     {
; 258  :         // Pointer to the first byte of data
; 259  :         USHORT *pWORD =(USHORT *)pDword;

  003e8	e59d3008	 ldr         r3, [sp, #8]
  003ec	e58d3018	 str         r3, [sp, #0x18]

; 260  : 
; 261  :         // Finally if there is remain
; 262  :         if (remain & 0x2)  // either 2 or 3

  003f0	e59d3010	 ldr         r3, [sp, #0x10]
  003f4	e3130002	 tst         r3, #2
  003f8	0a000006	 beq         |$LN2@WriteFIFO|

; 263  :         {
; 264  :             // Write 2 bytes to there
; 265  :             OUTREG16(pReg, *pWORD++);        

  003fc	e59d3018	 ldr         r3, [sp, #0x18]
  00400	e1d320b0	 ldrh        r2, [r3]
  00404	e59d3004	 ldr         r3, [sp, #4]
  00408	e1c320b0	 strh        r2, [r3]
  0040c	e59d3018	 ldr         r3, [sp, #0x18]
  00410	e2833002	 add         r3, r3, #2
  00414	e58d3018	 str         r3, [sp, #0x18]
  00418		 |$LN2@WriteFIFO|

; 266  :         }
; 267  : 
; 268  :         if (remain & 0x1)

  00418	e59d3010	 ldr         r3, [sp, #0x10]
  0041c	e3130001	 tst         r3, #1
  00420	0a000003	 beq         |$LN1@WriteFIFO|

; 269  :         {
; 270  :             // Write 1 byte to there
; 271  :             OUTREG8(pReg, *((UCHAR*)pWORD));

  00424	e59d3018	 ldr         r3, [sp, #0x18]
  00428	e5d32000	 ldrb        r2, [r3]
  0042c	e59d3004	 ldr         r3, [sp, #4]
  00430	e5c32000	 strb        r2, [r3]
  00434		 |$LN1@WriteFIFO|
  00434		 |$LN3@WriteFIFO|

; 272  :         }
; 273  :     }
; 274  :     return TRUE;

  00434	e3a03001	 mov         r3, #1
  00438	e58d301c	 str         r3, [sp, #0x1C]

; 275  : }

  0043c	e59d001c	 ldr         r0, [sp, #0x1C]
  00440	e28dd028	 add         sp, sp, #0x28
  00444	e89d6000	 ldmia       sp, {sp, lr}
  00448	e12fff1e	 bx          lr
  0044c		 |$LN16@WriteFIFO|
  0044c		 |$LN17@WriteFIFO|
  0044c	00000000	 DCD         |??_C@_1GK@LINCOMEM@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAt?$AAo?$AAt?$AAa?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?5@|
  00450		 |$LN18@WriteFIFO|
  00450	00000000	 DCD         |dpCurSettings|
  00454		 |$M49326|

			 ENDP  ; |WriteFIFO|

	EXPORT	|??_C@_1HM@BDJKHHG@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAU?$AAs?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAq?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AAT?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|SetupUsbRequest|

  00018			 AREA	 |.pdata|, PDATA
|$T49350| DCD	|$LN15@SetupUsbRe|
	DCD	0x40009e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@BDJKHHG@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAU?$AAs?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAq?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AAT?$AA?5?$AA0?$AAx@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p", 0x0, "U", 0x0, "s"
	DCB	0x0, "b", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "q", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, " ", 0x0, "T", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, " "
	DCB	0x0, "V", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, " ", 0x0, "I", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "L", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "A", 0x0, "M", 0x0, "3", 0x0, "5", 0x0, "1", 0x0, "7"
	DCB	0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "\\", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, "\\", 0x0, "."
	DCB	0x0, "\\", 0x0, "u", 0x0, "s", 0x0, "b", 0x0, "f", 0x0, "n"
	DCB	0x0, "p", 0x0, "d", 0x0, "d", 0x0, ".", 0x0, "c", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00454			 AREA	 |.text|, CODE, ARM

  00454		 |SetupUsbRequest| PROC

; 300  : {

  00454		 |$LN15@SetupUsbRe|
  00454	e1a0c00d	 mov         r12, sp
  00458	e92d000f	 stmdb       sp!, {r0 - r3}
  0045c	e92d5000	 stmdb       sp!, {r12, lr}
  00460	e24dd034	 sub         sp, sp, #0x34
  00464		 |$M49347|

; 301  :     UINT16 pktCounter = requestSize;

  00464	e1dd34b8	 ldrh        r3, [sp, #0x48]
  00468	e1cd30bc	 strh        r3, [sp, #0xC]

; 302  :     PBYTE pUsbDevReq = (PBYTE)pUsbRequest;

  0046c	e59d3040	 ldr         r3, [sp, #0x40]
  00470	e58d3008	 str         r3, [sp, #8]

; 303  : 
; 304  :     DEBUGCHK(epNumber == 0);

  00474	e1dd34b4	 ldrh        r3, [sp, #0x44]
  00478	e3530000	 cmp         r3, #0
  0047c	1a000002	 bne         |$LN3@SetupUsbRe|
  00480	e3a03001	 mov         r3, #1
  00484	e58d3020	 str         r3, [sp, #0x20]
  00488	ea000007	 b           |$LN4@SetupUsbRe|
  0048c		 |$LN3@SetupUsbRe|
  0048c	e3a03e13	 mov         r3, #0x13, 28
  00490	e59f2230	 ldr         r2, [pc, #0x230]
  00494	e59f1224	 ldr         r1, [pc, #0x224]
  00498	e59f0224	 ldr         r0, [pc, #0x224]
  0049c	eb000000	 bl          NKDbgPrintfW
  004a0	e6000010	 __debugbreak_ce
  004a4	e3a03000	 mov         r3, #0
  004a8	e58d3020	 str         r3, [sp, #0x20]
  004ac		 |$LN4@SetupUsbRe|

; 305  :     DEBUGCHK(requestSize == 8);

  004ac	e1dd34b8	 ldrh        r3, [sp, #0x48]
  004b0	e3530008	 cmp         r3, #8
  004b4	1a000002	 bne         |$LN5@SetupUsbRe|
  004b8	e3a03001	 mov         r3, #1
  004bc	e58d3024	 str         r3, [sp, #0x24]
  004c0	ea000008	 b           |$LN6@SetupUsbRe|
  004c4		 |$LN5@SetupUsbRe|
  004c4	e3a03c01	 mov         r3, #1, 24
  004c8	e3833031	 orr         r3, r3, #0x31
  004cc	e59f21f4	 ldr         r2, [pc, #0x1F4]
  004d0	e59f11e8	 ldr         r1, [pc, #0x1E8]
  004d4	e59f01e8	 ldr         r0, [pc, #0x1E8]
  004d8	eb000000	 bl          NKDbgPrintfW
  004dc	e6000010	 __debugbreak_ce
  004e0	e3a03000	 mov         r3, #0
  004e4	e58d3024	 str         r3, [sp, #0x24]
  004e8		 |$LN6@SetupUsbRe|

; 306  : 
; 307  :     // Read pktCounter bytes from the EndPoint FIFO
; 308  : 	ReadFIFO(pPdd, (UCHAR)epNumber, pUsbDevReq, pktCounter);

  004e8	e1dd30bc	 ldrh        r3, [sp, #0xC]
  004ec	e59d2008	 ldr         r2, [sp, #8]
  004f0	e1dd14b4	 ldrh        r1, [sp, #0x44]
  004f4	e20110ff	 and         r1, r1, #0xFF
  004f8	e59d003c	 ldr         r0, [sp, #0x3C]
  004fc	eb000000	 bl          ReadFIFO

; 309  : 
; 310  :     /* Save setup packet direction & size for later use */
; 311  :     pPdd->setupDirRx = (pUsbRequest->bmRequestType & 0x80) == 0;

  00500	e59d3040	 ldr         r3, [sp, #0x40]
  00504	e5d33000	 ldrb        r3, [r3]
  00508	e3130080	 tst         r3, #0x80
  0050c	1a000002	 bne         |$LN7@SetupUsbRe|
  00510	e3a03001	 mov         r3, #1
  00514	e58d3028	 str         r3, [sp, #0x28]
  00518	ea000001	 b           |$LN8@SetupUsbRe|
  0051c		 |$LN7@SetupUsbRe|
  0051c	e3a03000	 mov         r3, #0
  00520	e58d3028	 str         r3, [sp, #0x28]
  00524		 |$LN8@SetupUsbRe|
  00524	e59d303c	 ldr         r3, [sp, #0x3C]
  00528	e2832f99	 add         r2, r3, #0x99, 30
  0052c	e59d3028	 ldr         r3, [sp, #0x28]
  00530	e5823000	 str         r3, [r2]

; 312  :     pPdd->setupCount = pUsbRequest->wLength;

  00534	e59d3040	 ldr         r3, [sp, #0x40]
  00538	e2830006	 add         r0, r3, #6
  0053c	e59d303c	 ldr         r3, [sp, #0x3C]
  00540	e2831f9a	 add         r1, r3, #0x9A, 30
  00544	e5d03001	 ldrb        r3, [r0, #1]
  00548	e1a03403	 mov         r3, r3, lsl #8
  0054c	e1a02803	 mov         r2, r3, lsl #16
  00550	e1a02822	 mov         r2, r2, lsr #16
  00554	e5d03000	 ldrb        r3, [r0]
  00558	e1833002	 orr         r3, r3, r2
  0055c	e1c130b0	 strh        r3, [r1]

; 313  : 
; 314  :     PRINTMSG(ZONE_PDD_EP0,
; 315  :         (L"SetupUsbRequest: Req 0x%02x T 0x%02x V 0x%02x I 0x%x L 0x%x\r\n",
; 316  :          pUsbRequest->bmRequestType,
; 317  :          pUsbRequest->bRequest,
; 318  :          pUsbRequest->wValue,
; 319  :          pUsbRequest->wIndex,
; 320  :          pUsbRequest->wLength));

  00560	e59f3158	 ldr         r3, [pc, #0x158]
  00564	e5933440	 ldr         r3, [r3, #0x440]
  00568	e3130c02	 tst         r3, #2, 24
  0056c	0a00004d	 beq         |$LN11@SetupUsbRe|
  00570	e59f3148	 ldr         r3, [pc, #0x148]
  00574	e5933440	 ldr         r3, [r3, #0x440]
  00578	e3130801	 tst         r3, #1, 16
  0057c	0a000023	 beq         |$LN9@SetupUsbRe|
  00580	e59d3040	 ldr         r3, [sp, #0x40]
  00584	e2831006	 add         r1, r3, #6
  00588	e5d13001	 ldrb        r3, [r1, #1]
  0058c	e1a03403	 mov         r3, r3, lsl #8
  00590	e1a02803	 mov         r2, r3, lsl #16
  00594	e1a02822	 mov         r2, r2, lsr #16
  00598	e5d13000	 ldrb        r3, [r1]
  0059c	e1833002	 orr         r3, r3, r2
  005a0	e58d3004	 str         r3, [sp, #4]
  005a4	e59d3040	 ldr         r3, [sp, #0x40]
  005a8	e2831004	 add         r1, r3, #4
  005ac	e5d13001	 ldrb        r3, [r1, #1]
  005b0	e1a03403	 mov         r3, r3, lsl #8
  005b4	e1a02803	 mov         r2, r3, lsl #16
  005b8	e1a02822	 mov         r2, r2, lsr #16
  005bc	e5d13000	 ldrb        r3, [r1]
  005c0	e1833002	 orr         r3, r3, r2
  005c4	e58d3000	 str         r3, [sp]
  005c8	e59d3040	 ldr         r3, [sp, #0x40]
  005cc	e2831002	 add         r1, r3, #2
  005d0	e5d13001	 ldrb        r3, [r1, #1]
  005d4	e1a03403	 mov         r3, r3, lsl #8
  005d8	e1a02803	 mov         r2, r3, lsl #16
  005dc	e1a02822	 mov         r2, r2, lsr #16
  005e0	e5d13000	 ldrb        r3, [r1]
  005e4	e1833002	 orr         r3, r3, r2
  005e8	e59d2040	 ldr         r2, [sp, #0x40]
  005ec	e2822001	 add         r2, r2, #1
  005f0	e5d22000	 ldrb        r2, [r2]
  005f4	e59d1040	 ldr         r1, [sp, #0x40]
  005f8	e5d11000	 ldrb        r1, [r1]
  005fc	e59f00b8	 ldr         r0, [pc, #0xB8]
  00600	eb000000	 bl          CeLogMsg
  00604	e3a03001	 mov         r3, #1
  00608	e58d302c	 str         r3, [sp, #0x2C]
  0060c	ea000022	 b           |$LN10@SetupUsbRe|
  00610		 |$LN9@SetupUsbRe|
  00610	e59d3040	 ldr         r3, [sp, #0x40]
  00614	e2831006	 add         r1, r3, #6
  00618	e5d13001	 ldrb        r3, [r1, #1]
  0061c	e1a03403	 mov         r3, r3, lsl #8
  00620	e1a02803	 mov         r2, r3, lsl #16
  00624	e1a02822	 mov         r2, r2, lsr #16
  00628	e5d13000	 ldrb        r3, [r1]
  0062c	e1833002	 orr         r3, r3, r2
  00630	e58d3004	 str         r3, [sp, #4]
  00634	e59d3040	 ldr         r3, [sp, #0x40]
  00638	e2831004	 add         r1, r3, #4
  0063c	e5d13001	 ldrb        r3, [r1, #1]
  00640	e1a03403	 mov         r3, r3, lsl #8
  00644	e1a02803	 mov         r2, r3, lsl #16
  00648	e1a02822	 mov         r2, r2, lsr #16
  0064c	e5d13000	 ldrb        r3, [r1]
  00650	e1833002	 orr         r3, r3, r2
  00654	e58d3000	 str         r3, [sp]
  00658	e59d3040	 ldr         r3, [sp, #0x40]
  0065c	e2831002	 add         r1, r3, #2
  00660	e5d13001	 ldrb        r3, [r1, #1]
  00664	e1a03403	 mov         r3, r3, lsl #8
  00668	e1a02803	 mov         r2, r3, lsl #16
  0066c	e1a02822	 mov         r2, r2, lsr #16
  00670	e5d13000	 ldrb        r3, [r1]
  00674	e1833002	 orr         r3, r3, r2
  00678	e59d2040	 ldr         r2, [sp, #0x40]
  0067c	e2822001	 add         r2, r2, #1
  00680	e5d22000	 ldrb        r2, [r2]
  00684	e59d1040	 ldr         r1, [sp, #0x40]
  00688	e5d11000	 ldrb        r1, [r1]
  0068c	e59f0028	 ldr         r0, [pc, #0x28]
  00690	eb000000	 bl          NKDbgPrintfW
  00694	e3a03000	 mov         r3, #0
  00698	e58d302c	 str         r3, [sp, #0x2C]
  0069c		 |$LN10@SetupUsbRe|
  0069c	e3a03001	 mov         r3, #1
  006a0	e58d3030	 str         r3, [sp, #0x30]
  006a4	ea000001	 b           |$LN12@SetupUsbRe|
  006a8		 |$LN11@SetupUsbRe|
  006a8	e3a03000	 mov         r3, #0
  006ac	e58d3030	 str         r3, [sp, #0x30]
  006b0		 |$LN12@SetupUsbRe|

; 321  : }

  006b0	e28dd034	 add         sp, sp, #0x34
  006b4	e89d6000	 ldmia       sp, {sp, lr}
  006b8	e12fff1e	 bx          lr
  006bc		 |$LN16@SetupUsbRe|
  006bc		 |$LN17@SetupUsbRe|
  006bc	00000000	 DCD         |??_C@_1HM@BDJKHHG@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAU?$AAs?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAq?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AAT?$AA?5?$AA0?$AAx@|
  006c0		 |$LN18@SetupUsbRe|
  006c0	00000000	 DCD         |dpCurSettings|
  006c4		 |$LN19@SetupUsbRe|
  006c4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  006c8		 |$LN20@SetupUsbRe|
  006c8	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  006cc		 |$M49348|

			 ENDP  ; |SetupUsbRequest|

	EXPORT	|??_C@_1CO@KENNPJL@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@HIIBBKPB@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@IGBBBJEC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAH?$AAA?$AAL?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAY?$AAS?$AAT?$AAI?$AAN?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@BHBLAGEJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAU@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@FCLHPLHL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@FDOPPAGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAP?$AAP?$AAI?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@BAOADCDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@PGIBGLEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@OEPLPLAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAb?$AAu?$AAs?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@JDGAACEB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAp?$AAa?$AAr?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@MKAFOGGK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@COOJIHLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAO?$AAb?$AAj?$AAe?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@LBGLCJKI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@NBIJIALA@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_ContextSetup|
	IMPORT	|KernelIoControl|
	IMPORT	|CreateEventW|
	IMPORT	|USBPeripheralInit|
	IMPORT	|MmMapIoSpace|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|OpenEventW|
	IMPORT	|wcslen|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|LocalAlloc|
	IMPORT	|USBFNPDD_Init|

  00020			 AREA	 |.pdata|, PDATA
|$T49399| DCD	|$LN50@UfnPdd_Con|
	DCD	0x40020304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@KENNPJL@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@HIIBBKPB@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x"
	DCB	0x0, "t", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p"
	DCB	0x0, ":", 0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@IGBBBJEC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAH?$AAA?$AAL?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAY?$AAS?$AAT?$AAI?$AAN?$AAR@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_"
	DCB	0x0, "H", 0x0, "A", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "I", 0x0, "N"
	DCB	0x0, "R", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@BHBLAGEJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAU@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x"
	DCB	0x0, "t", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p"
	DCB	0x0, ":", 0x0, " ", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "F", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@FCLHPLHL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "F", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FDOPPAGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAP?$AAP?$AAI?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAa@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "P", 0x0, "P", 0x0, "I", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@BAOADCDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@PGIBGLEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAg@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x"
	DCB	0x0, "t", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p"
	DCB	0x0, ":", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "p", 0x0, "p"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " "
	DCB	0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@OEPLPLAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAb?$AAu?$AAs?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@JDGAACEB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAp?$AAa?$AAr?$AAa@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@MKAFOGGK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAg@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x"
	DCB	0x0, "t", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p"
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@COOJIHLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAO?$AAb?$AAj?$AAe?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "P", 0x0, "D"
	DCB	0x0, "D", 0x0, " ", 0x0, "O", 0x0, "b", 0x0, "j", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@LBGLCJKI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x"
	DCB	0x0, "t", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F"
	DCB	0x0, "N", 0x0, " ", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@NBIJIALA@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  006cc			 AREA	 |.text|, CODE, ARM

  006cc		 |UfnPdd_ContextSetup| PROC

; 537  : {

  006cc		 |$LN50@UfnPdd_Con|
  006cc	e1a0c00d	 mov         r12, sp
  006d0	e92d0003	 stmdb       sp!, {r0, r1}
  006d4	e92d5000	 stmdb       sp!, {r12, lr}
  006d8	e24dd0a0	 sub         sp, sp, #0xA0
  006dc		 |$M49396|

; 538  :     BOOL retValue = FALSE;

  006dc	e3a03000	 mov         r3, #0
  006e0	e58d301c	 str         r3, [sp, #0x1C]

; 539  :     CSL_UsbRegs *pUsbdRegs = NULL;

  006e4	e3a03000	 mov         r3, #0
  006e8	e58d300c	 str         r3, [sp, #0xC]

; 540  :     CSL_CppiRegs *pCppiRegs = NULL;

  006ec	e3a03000	 mov         r3, #0
  006f0	e58d3008	 str         r3, [sp, #8]

; 541  :     PHYSICAL_ADDRESS pa;
; 542  :     DWORD usbIrqVal;
; 543  : 
; 544  :     PRINTMSG(ZONE_FUNCTION, (L"+UfnPdd_ContextSetup\r\n"));

  006f4	e59f3790	 ldr         r3, [pc, #0x790]
  006f8	e5933440	 ldr         r3, [r3, #0x440]
  006fc	e3130a01	 tst         r3, #1, 20
  00700	0a00000f	 beq         |$LN14@UfnPdd_Con|
  00704	e59f3780	 ldr         r3, [pc, #0x780]
  00708	e5933440	 ldr         r3, [r3, #0x440]
  0070c	e3130801	 tst         r3, #1, 16
  00710	0a000004	 beq         |$LN12@UfnPdd_Con|
  00714	e59f07b8	 ldr         r0, [pc, #0x7B8]
  00718	eb000000	 bl          CeLogMsg
  0071c	e3a03001	 mov         r3, #1
  00720	e58d302c	 str         r3, [sp, #0x2C]
  00724	ea000003	 b           |$LN13@UfnPdd_Con|
  00728		 |$LN12@UfnPdd_Con|
  00728	e59f07a4	 ldr         r0, [pc, #0x7A4]
  0072c	eb000000	 bl          NKDbgPrintfW
  00730	e3a03000	 mov         r3, #0
  00734	e58d302c	 str         r3, [sp, #0x2C]
  00738		 |$LN13@UfnPdd_Con|
  00738	e3a03001	 mov         r3, #1
  0073c	e58d3030	 str         r3, [sp, #0x30]
  00740	ea000001	 b           |$LN15@UfnPdd_Con|
  00744		 |$LN14@UfnPdd_Con|
  00744	e3a03000	 mov         r3, #0
  00748	e58d3030	 str         r3, [sp, #0x30]
  0074c		 |$LN15@UfnPdd_Con|

; 545  : 
; 546  :     // Initialise platform PDD
; 547  :     if (!USBFNPDD_Init())

  0074c	eb000000	 bl          USBFNPDD_Init
  00750	e58d0034	 str         r0, [sp, #0x34]
  00754	e59d3034	 ldr         r3, [sp, #0x34]
  00758	e3530000	 cmp         r3, #0
  0075c	1a000016	 bne         |$LN9@UfnPdd_Con|

; 548  :     {
; 549  :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_ContextSetup: Failed to initialise platform USBFN PDD\r\n"));

  00760	e59f3724	 ldr         r3, [pc, #0x724]
  00764	e5933440	 ldr         r3, [r3, #0x440]
  00768	e3130001	 tst         r3, #1
  0076c	0a00000f	 beq         |$LN18@UfnPdd_Con|
  00770	e59f3714	 ldr         r3, [pc, #0x714]
  00774	e5933440	 ldr         r3, [r3, #0x440]
  00778	e3130801	 tst         r3, #1, 16
  0077c	0a000004	 beq         |$LN16@UfnPdd_Con|
  00780	e59f0748	 ldr         r0, [pc, #0x748]
  00784	eb000000	 bl          CeLogMsg
  00788	e3a03001	 mov         r3, #1
  0078c	e58d3038	 str         r3, [sp, #0x38]
  00790	ea000003	 b           |$LN17@UfnPdd_Con|
  00794		 |$LN16@UfnPdd_Con|
  00794	e59f0734	 ldr         r0, [pc, #0x734]
  00798	eb000000	 bl          NKDbgPrintfW
  0079c	e3a03000	 mov         r3, #0
  007a0	e58d3038	 str         r3, [sp, #0x38]
  007a4		 |$LN17@UfnPdd_Con|
  007a4	e3a03001	 mov         r3, #1
  007a8	e58d303c	 str         r3, [sp, #0x3C]
  007ac	ea000001	 b           |$LN19@UfnPdd_Con|
  007b0		 |$LN18@UfnPdd_Con|
  007b0	e3a03000	 mov         r3, #0
  007b4	e58d303c	 str         r3, [sp, #0x3C]
  007b8		 |$LN19@UfnPdd_Con|

; 550  :         goto cleanUp;

  007b8	ea000196	 b           |$cleanUp$47740|
  007bc		 |$LN9@UfnPdd_Con|

; 551  :     }
; 552  : 
; 553  :     /* Allocate PDD object */
; 554  :     if (NULL == ((*ppPddContext) = (USBFNPDDCONTEXT *)
; 555  :                  LocalAlloc(LPTR, sizeof(USBFNPDDCONTEXT))))

  007bc	e3a01c06	 mov         r1, #6, 24
  007c0	e3811068	 orr         r1, r1, #0x68
  007c4	e3a00040	 mov         r0, #0x40
  007c8	eb000000	 bl          LocalAlloc
  007cc	e58d0040	 str         r0, [sp, #0x40]
  007d0	e59d2040	 ldr         r2, [sp, #0x40]
  007d4	e59d30ac	 ldr         r3, [sp, #0xAC]
  007d8	e5832000	 str         r2, [r3]
  007dc	e59d30ac	 ldr         r3, [sp, #0xAC]
  007e0	e5933000	 ldr         r3, [r3]
  007e4	e3530000	 cmp         r3, #0
  007e8	1a000007	 bne         |$LN8@UfnPdd_Con|

; 556  :     {
; 557  :         ERRORMSG (TRUE, (TEXT("ERROR: Unable to Alloc PDD Object!!\r\n")));

  007ec	e3a02c02	 mov         r2, #2, 24
  007f0	e382202d	 orr         r2, r2, #0x2D
  007f4	e59f16a0	 ldr         r1, [pc, #0x6A0]
  007f8	e59f0698	 ldr         r0, [pc, #0x698]
  007fc	eb000000	 bl          NKDbgPrintfW
  00800	e59f06c4	 ldr         r0, [pc, #0x6C4]
  00804	eb000000	 bl          NKDbgPrintfW

; 558  :         goto cleanUp;

  00808	ea000182	 b           |$cleanUp$47740|
  0080c		 |$LN8@UfnPdd_Con|

; 559  :     }
; 560  : 
; 561  :     /* Initialize critical section */
; 562  :     InitializeCriticalSection(&(*ppPddContext)->epCS);

  0080c	e59d30ac	 ldr         r3, [sp, #0xAC]
  00810	e5933000	 ldr         r3, [r3]
  00814	e2830e27	 add         r0, r3, #0x27, 28
  00818	eb000000	 bl          InitializeCriticalSection

; 563  :     (*ppPddContext)->devState = 0;

  0081c	e59d30ac	 ldr         r3, [sp, #0xAC]
  00820	e5933000	 ldr         r3, [r3]
  00824	e2832f96	 add         r2, r3, #0x96, 30
  00828	e3a03000	 mov         r3, #0
  0082c	e5823000	 str         r3, [r2]

; 564  : 
; 565  :     PRINTMSG(ZONE_PDD_INIT, (
; 566  :                  L"UfnPdd_ContextSetup: Reading Registry Information\r\n"));

  00830	e59f3654	 ldr         r3, [pc, #0x654]
  00834	e5933440	 ldr         r3, [r3, #0x440]
  00838	e3130c01	 tst         r3, #1, 24
  0083c	0a00000f	 beq         |$LN22@UfnPdd_Con|
  00840	e59f3644	 ldr         r3, [pc, #0x644]
  00844	e5933440	 ldr         r3, [r3, #0x440]
  00848	e3130801	 tst         r3, #1, 16
  0084c	0a000004	 beq         |$LN20@UfnPdd_Con|
  00850	e59f0670	 ldr         r0, [pc, #0x670]
  00854	eb000000	 bl          CeLogMsg
  00858	e3a03001	 mov         r3, #1
  0085c	e58d3044	 str         r3, [sp, #0x44]
  00860	ea000003	 b           |$LN21@UfnPdd_Con|
  00864		 |$LN20@UfnPdd_Con|
  00864	e59f065c	 ldr         r0, [pc, #0x65C]
  00868	eb000000	 bl          NKDbgPrintfW
  0086c	e3a03000	 mov         r3, #0
  00870	e58d3044	 str         r3, [sp, #0x44]
  00874		 |$LN21@UfnPdd_Con|
  00874	e3a03001	 mov         r3, #1
  00878	e58d3048	 str         r3, [sp, #0x48]
  0087c	ea000001	 b           |$LN23@UfnPdd_Con|
  00880		 |$LN22@UfnPdd_Con|
  00880	e3a03000	 mov         r3, #0
  00884	e58d3048	 str         r3, [sp, #0x48]
  00888		 |$LN23@UfnPdd_Con|

; 567  : 
; 568  :     /* Read device parameters */
; 569  :     if (GetDeviceRegistryParams (szActiveKey, *ppPddContext,
; 570  :                                  dimof(f_DeviceRegParams), f_DeviceRegParams) != ERROR_SUCCESS)

  00888	e59f3634	 ldr         r3, [pc, #0x634]
  0088c	e3a02007	 mov         r2, #7
  00890	e59d10ac	 ldr         r1, [sp, #0xAC]
  00894	e5911000	 ldr         r1, [r1]
  00898	e59d00a8	 ldr         r0, [sp, #0xA8]
  0089c	eb000000	 bl          GetDeviceRegistryParams
  008a0	e58d004c	 str         r0, [sp, #0x4C]
  008a4	e59d304c	 ldr         r3, [sp, #0x4C]
  008a8	e3530000	 cmp         r3, #0
  008ac	0a000007	 beq         |$LN7@UfnPdd_Con|

; 571  :     {
; 572  :         ERRORMSG(TRUE, (L"ERROR: Failed read registry parameters\r\n"
; 573  :                      ));

  008b0	e3a02c02	 mov         r2, #2, 24
  008b4	e382203d	 orr         r2, r2, #0x3D
  008b8	e59f15dc	 ldr         r1, [pc, #0x5DC]
  008bc	e59f05d4	 ldr         r0, [pc, #0x5D4]
  008c0	eb000000	 bl          NKDbgPrintfW
  008c4	e59f05f4	 ldr         r0, [pc, #0x5F4]
  008c8	eb000000	 bl          NKDbgPrintfW

; 574  :         goto cleanUp;

  008cc	ea000151	 b           |$cleanUp$47740|
  008d0		 |$LN7@UfnPdd_Con|

; 575  :     }
; 576  : 
; 577  :     /* Open activity event */
; 578  :     if (wcslen((*ppPddContext)->szActivityEvent) > 0) {

  008d0	e59d30ac	 ldr         r3, [sp, #0xAC]
  008d4	e5933000	 ldr         r3, [r3]
  008d8	e283004c	 add         r0, r3, #0x4C
  008dc	eb000000	 bl          wcslen
  008e0	e58d0050	 str         r0, [sp, #0x50]
  008e4	e59d3050	 ldr         r3, [sp, #0x50]
  008e8	e3530000	 cmp         r3, #0
  008ec	9a00000c	 bls         |$LN6@UfnPdd_Con|

; 579  :         (*ppPddContext)->hActivityEvent =
; 580  :             OpenEvent(EVENT_ALL_ACCESS, FALSE, (*ppPddContext)->szActivityEvent);

  008f0	e59d30ac	 ldr         r3, [sp, #0xAC]
  008f4	e5933000	 ldr         r3, [r3]
  008f8	e283204c	 add         r2, r3, #0x4C
  008fc	e3a01000	 mov         r1, #0
  00900	e3a0081f	 mov         r0, #0x1F, 16
  00904	e3800003	 orr         r0, r0, #3
  00908	eb000000	 bl          OpenEventW
  0090c	e58d0054	 str         r0, [sp, #0x54]
  00910	e59d30ac	 ldr         r3, [sp, #0xAC]
  00914	e5933000	 ldr         r3, [r3]
  00918	e2832f95	 add         r2, r3, #0x95, 30
  0091c	e59d3054	 ldr         r3, [sp, #0x54]
  00920	e5823000	 str         r3, [r2]
  00924		 |$LN6@UfnPdd_Con|

; 581  :     }
; 582  : 
; 583  :     /* Start powered up */
; 584  :     (*ppPddContext)->currentPowerState = D0;

  00924	e59d30ac	 ldr         r3, [sp, #0xAC]
  00928	e5933000	 ldr         r3, [r3]
  0092c	e2832048	 add         r2, r3, #0x48
  00930	e3a03000	 mov         r3, #0
  00934	e5823000	 str         r3, [r2]

; 585  :     (*ppPddContext)->parentBus = CreateBusAccessHandle(szActiveKey);

  00938	e59d00a8	 ldr         r0, [sp, #0xA8]
  0093c	eb000000	 bl          CreateBusAccessHandle
  00940	e58d0058	 str         r0, [sp, #0x58]
  00944	e59d30ac	 ldr         r3, [sp, #0xAC]
  00948	e5933000	 ldr         r3, [r3]
  0094c	e2832018	 add         r2, r3, #0x18
  00950	e59d3058	 ldr         r3, [sp, #0x58]
  00954	e5823000	 str         r3, [r2]

; 586  : 
; 587  :     if ( (*ppPddContext)->parentBus == NULL )

  00958	e59d30ac	 ldr         r3, [sp, #0xAC]
  0095c	e5933000	 ldr         r3, [r3]
  00960	e2833018	 add         r3, r3, #0x18
  00964	e5933000	 ldr         r3, [r3]
  00968	e3530000	 cmp         r3, #0
  0096c	1a000007	 bne         |$LN5@UfnPdd_Con|

; 588  :     {
; 589  :         ERRORMSG (TRUE, (L"ERROR: Failed open bus driver\r\n"
; 590  :                       ));

  00970	e3a02c02	 mov         r2, #2, 24
  00974	e382204e	 orr         r2, r2, #0x4E
  00978	e59f151c	 ldr         r1, [pc, #0x51C]
  0097c	e59f0514	 ldr         r0, [pc, #0x514]
  00980	eb000000	 bl          NKDbgPrintfW
  00984	e59f0530	 ldr         r0, [pc, #0x530]
  00988	eb000000	 bl          NKDbgPrintfW

; 591  :         goto cleanUp;

  0098c	ea000121	 b           |$cleanUp$47740|
  00990		 |$LN5@UfnPdd_Con|

; 592  :     }
; 593  : 
; 594  :     PRINTMSG(ZONE_PDD_INIT, (
; 595  :                  L"UfnPdd_ContextSetup: Mapping Region 0x%08x Size 0x%x\r\n",
; 596  :                  AM3517_USB0_REGS_PA, sizeof(CSL_UsbRegs)));

  00990	e59f34f4	 ldr         r3, [pc, #0x4F4]
  00994	e5933440	 ldr         r3, [r3, #0x440]
  00998	e3130c01	 tst         r3, #1, 24
  0099c	0a000017	 beq         |$LN26@UfnPdd_Con|
  009a0	e59f34e4	 ldr         r3, [pc, #0x4E4]
  009a4	e5933440	 ldr         r3, [r3, #0x440]
  009a8	e3130801	 tst         r3, #1, 16
  009ac	0a000008	 beq         |$LN24@UfnPdd_Con|
  009b0	e3a02b02	 mov         r2, #2, 22
  009b4	e3822018	 orr         r2, r2, #0x18
  009b8	e3a01317	 mov         r1, #0x17, 6
  009bc	e3811701	 orr         r1, r1, #1, 14
  009c0	e59f04e8	 ldr         r0, [pc, #0x4E8]
  009c4	eb000000	 bl          CeLogMsg
  009c8	e3a03001	 mov         r3, #1
  009cc	e58d305c	 str         r3, [sp, #0x5C]
  009d0	ea000007	 b           |$LN25@UfnPdd_Con|
  009d4		 |$LN24@UfnPdd_Con|
  009d4	e3a02b02	 mov         r2, #2, 22
  009d8	e3822018	 orr         r2, r2, #0x18
  009dc	e3a01317	 mov         r1, #0x17, 6
  009e0	e3811701	 orr         r1, r1, #1, 14
  009e4	e59f04c4	 ldr         r0, [pc, #0x4C4]
  009e8	eb000000	 bl          NKDbgPrintfW
  009ec	e3a03000	 mov         r3, #0
  009f0	e58d305c	 str         r3, [sp, #0x5C]
  009f4		 |$LN25@UfnPdd_Con|
  009f4	e3a03001	 mov         r3, #1
  009f8	e58d3060	 str         r3, [sp, #0x60]
  009fc	ea000001	 b           |$LN27@UfnPdd_Con|
  00a00		 |$LN26@UfnPdd_Con|
  00a00	e3a03000	 mov         r3, #0
  00a04	e58d3060	 str         r3, [sp, #0x60]
  00a08		 |$LN27@UfnPdd_Con|

; 597  : 
; 598  :     /* Map the USBD registers */
; 599  :     pa.QuadPart = AM3517_USB0_REGS_PA;

  00a08	e3a03317	 mov         r3, #0x17, 6
  00a0c	e3833701	 orr         r3, r3, #1, 14
  00a10	e58d3010	 str         r3, [sp, #0x10]
  00a14	e3a03000	 mov         r3, #0
  00a18	e58d3014	 str         r3, [sp, #0x14]

; 600  :     pUsbdRegs = (CSL_UsbRegs *) MmMapIoSpace(pa, sizeof(CSL_UsbRegs), FALSE);

  00a1c	e3a03000	 mov         r3, #0
  00a20	e3a02b02	 mov         r2, #2, 22
  00a24	e3822018	 orr         r2, r2, #0x18
  00a28	e59d0010	 ldr         r0, [sp, #0x10]
  00a2c	e59d1014	 ldr         r1, [sp, #0x14]
  00a30	eb000000	 bl          MmMapIoSpace
  00a34	e58d0064	 str         r0, [sp, #0x64]
  00a38	e59d3064	 ldr         r3, [sp, #0x64]
  00a3c	e58d300c	 str         r3, [sp, #0xC]

; 601  :     if ( pUsbdRegs == NULL )

  00a40	e59d300c	 ldr         r3, [sp, #0xC]
  00a44	e3530000	 cmp         r3, #0
  00a48	1a000007	 bne         |$LN4@UfnPdd_Con|

; 602  :     {
; 603  :         ERRORMSG (TRUE, (L"ERROR: Controller registers mapping failed\r\n"));

  00a4c	e3a02c02	 mov         r2, #2, 24
  00a50	e382205b	 orr         r2, r2, #0x5B
  00a54	e59f1440	 ldr         r1, [pc, #0x440]
  00a58	e59f0438	 ldr         r0, [pc, #0x438]
  00a5c	eb000000	 bl          NKDbgPrintfW
  00a60	e59f0450	 ldr         r0, [pc, #0x450]
  00a64	eb000000	 bl          NKDbgPrintfW

; 604  :         goto cleanUp;

  00a68	ea0000ea	 b           |$cleanUp$47740|
  00a6c		 |$LN4@UfnPdd_Con|

; 605  :     }
; 606  :     (*ppPddContext)->pUsbdRegs = pUsbdRegs;

  00a6c	e59d30ac	 ldr         r3, [sp, #0xAC]
  00a70	e5933000	 ldr         r3, [r3]
  00a74	e283201c	 add         r2, r3, #0x1C
  00a78	e59d300c	 ldr         r3, [sp, #0xC]
  00a7c	e5823000	 str         r3, [r2]

; 607  : 
; 608  :     PRINTMSG(ZONE_PDD_INIT, (
; 609  :                  L"UfnPdd_ContextSetup: Mapping Region 0x%08x Size 0x%x\r\n",
; 610  :                  AM3517_CPPI_REGS_PA, sizeof (CSL_CppiRegs)));

  00a80	e59f3404	 ldr         r3, [pc, #0x404]
  00a84	e5933440	 ldr         r3, [r3, #0x440]
  00a88	e3130c01	 tst         r3, #1, 24
  00a8c	0a000015	 beq         |$LN30@UfnPdd_Con|
  00a90	e59f33f4	 ldr         r3, [pc, #0x3F4]
  00a94	e5933440	 ldr         r3, [r3, #0x440]
  00a98	e3130801	 tst         r3, #1, 16
  00a9c	0a000007	 beq         |$LN28@UfnPdd_Con|
  00aa0	e3a02c5e	 mov         r2, #0x5E, 24
  00aa4	e3a01317	 mov         r1, #0x17, 6
  00aa8	e3811a41	 orr         r1, r1, #0x41, 20
  00aac	e59f03fc	 ldr         r0, [pc, #0x3FC]
  00ab0	eb000000	 bl          CeLogMsg
  00ab4	e3a03001	 mov         r3, #1
  00ab8	e58d3068	 str         r3, [sp, #0x68]
  00abc	ea000006	 b           |$LN29@UfnPdd_Con|
  00ac0		 |$LN28@UfnPdd_Con|
  00ac0	e3a02c5e	 mov         r2, #0x5E, 24
  00ac4	e3a01317	 mov         r1, #0x17, 6
  00ac8	e3811a41	 orr         r1, r1, #0x41, 20
  00acc	e59f03dc	 ldr         r0, [pc, #0x3DC]
  00ad0	eb000000	 bl          NKDbgPrintfW
  00ad4	e3a03000	 mov         r3, #0
  00ad8	e58d3068	 str         r3, [sp, #0x68]
  00adc		 |$LN29@UfnPdd_Con|
  00adc	e3a03001	 mov         r3, #1
  00ae0	e58d306c	 str         r3, [sp, #0x6C]
  00ae4	ea000001	 b           |$LN31@UfnPdd_Con|
  00ae8		 |$LN30@UfnPdd_Con|
  00ae8	e3a03000	 mov         r3, #0
  00aec	e58d306c	 str         r3, [sp, #0x6C]
  00af0		 |$LN31@UfnPdd_Con|

; 611  : 
; 612  :     /* Map the CPPI registers */
; 613  :     pa.QuadPart = AM3517_CPPI_REGS_PA;

  00af0	e3a03317	 mov         r3, #0x17, 6
  00af4	e3833a41	 orr         r3, r3, #0x41, 20
  00af8	e58d3010	 str         r3, [sp, #0x10]
  00afc	e3a03000	 mov         r3, #0
  00b00	e58d3014	 str         r3, [sp, #0x14]

; 614  :     pCppiRegs = (CSL_CppiRegs *) MmMapIoSpace(pa, sizeof(CSL_CppiRegs), FALSE);

  00b04	e3a03000	 mov         r3, #0
  00b08	e3a02c5e	 mov         r2, #0x5E, 24
  00b0c	e59d0010	 ldr         r0, [sp, #0x10]
  00b10	e59d1014	 ldr         r1, [sp, #0x14]
  00b14	eb000000	 bl          MmMapIoSpace
  00b18	e58d0070	 str         r0, [sp, #0x70]
  00b1c	e59d3070	 ldr         r3, [sp, #0x70]
  00b20	e58d3008	 str         r3, [sp, #8]

; 615  :     if ( pCppiRegs == NULL )

  00b24	e59d3008	 ldr         r3, [sp, #8]
  00b28	e3530000	 cmp         r3, #0
  00b2c	1a000007	 bne         |$LN3@UfnPdd_Con|

; 616  :     {
; 617  :         ERRORMSG (TRUE, (L"ERROR: CPPI registers mapping failed\r\n"));

  00b30	e3a02c02	 mov         r2, #2, 24
  00b34	e3822069	 orr         r2, r2, #0x69
  00b38	e59f135c	 ldr         r1, [pc, #0x35C]
  00b3c	e59f0354	 ldr         r0, [pc, #0x354]
  00b40	eb000000	 bl          NKDbgPrintfW
  00b44	e59f0368	 ldr         r0, [pc, #0x368]
  00b48	eb000000	 bl          NKDbgPrintfW

; 618  :         goto cleanUp;

  00b4c	ea0000b1	 b           |$cleanUp$47740|
  00b50		 |$LN3@UfnPdd_Con|

; 619  :     }
; 620  :     (*ppPddContext)->pCppiRegs = pCppiRegs;

  00b50	e59d30ac	 ldr         r3, [sp, #0xAC]
  00b54	e5933000	 ldr         r3, [r3]
  00b58	e2832020	 add         r2, r3, #0x20
  00b5c	e59d3008	 ldr         r3, [sp, #8]
  00b60	e5823000	 str         r3, [r2]

; 621  : 
; 622  :     PRINTMSG(ZONE_PDD_INIT, (
; 623  :                  L"UfnPdd_ContextSetup: Mapping Region 0x%08x Size 0x%x\r\n",
; 624  :                  OMAP_SYSC_GENERAL_REGS_PA, sizeof (OMAP_SYSC_GENERAL_REGS)));

  00b64	e59f3320	 ldr         r3, [pc, #0x320]
  00b68	e5933440	 ldr         r3, [r3, #0x440]
  00b6c	e3130c01	 tst         r3, #1, 24
  00b70	0a000013	 beq         |$LN34@UfnPdd_Con|
  00b74	e59f3310	 ldr         r3, [pc, #0x310]
  00b78	e5933440	 ldr         r3, [r3, #0x440]
  00b7c	e3130801	 tst         r3, #1, 16
  00b80	0a000006	 beq         |$LN32@UfnPdd_Con|
  00b84	e3a02ea6	 mov         r2, #0xA6, 28
  00b88	e59f131c	 ldr         r1, [pc, #0x31C]
  00b8c	e59f031c	 ldr         r0, [pc, #0x31C]
  00b90	eb000000	 bl          CeLogMsg
  00b94	e3a03001	 mov         r3, #1
  00b98	e58d3074	 str         r3, [sp, #0x74]
  00b9c	ea000005	 b           |$LN33@UfnPdd_Con|
  00ba0		 |$LN32@UfnPdd_Con|
  00ba0	e3a02ea6	 mov         r2, #0xA6, 28
  00ba4	e59f1300	 ldr         r1, [pc, #0x300]
  00ba8	e59f0300	 ldr         r0, [pc, #0x300]
  00bac	eb000000	 bl          NKDbgPrintfW
  00bb0	e3a03000	 mov         r3, #0
  00bb4	e58d3074	 str         r3, [sp, #0x74]
  00bb8		 |$LN33@UfnPdd_Con|
  00bb8	e3a03001	 mov         r3, #1
  00bbc	e58d3078	 str         r3, [sp, #0x78]
  00bc0	ea000001	 b           |$LN35@UfnPdd_Con|
  00bc4		 |$LN34@UfnPdd_Con|
  00bc4	e3a03000	 mov         r3, #0
  00bc8	e58d3078	 str         r3, [sp, #0x78]
  00bcc		 |$LN35@UfnPdd_Con|

; 625  : 
; 626  :     /* Map the sys config registers */
; 627  :     pa.QuadPart = (LONGLONG)OMAP_SYSC_GENERAL_REGS_PA;

  00bcc	e59f32d8	 ldr         r3, [pc, #0x2D8]
  00bd0	e58d3010	 str         r3, [sp, #0x10]
  00bd4	e3a03000	 mov         r3, #0
  00bd8	e58d3014	 str         r3, [sp, #0x14]

; 628  :     (*ppPddContext)->pSysConfRegs = (OMAP_SYSC_GENERAL_REGS*) MmMapIoSpace(pa,
; 629  :                                                                 sizeof (OMAP_SYSC_GENERAL_REGS),
; 630  :                                                                 FALSE);

  00bdc	e3a03000	 mov         r3, #0
  00be0	e3a02ea6	 mov         r2, #0xA6, 28
  00be4	e59d0010	 ldr         r0, [sp, #0x10]
  00be8	e59d1014	 ldr         r1, [sp, #0x14]
  00bec	eb000000	 bl          MmMapIoSpace
  00bf0	e58d007c	 str         r0, [sp, #0x7C]
  00bf4	e59d30ac	 ldr         r3, [sp, #0xAC]
  00bf8	e5933000	 ldr         r3, [r3]
  00bfc	e2832028	 add         r2, r3, #0x28
  00c00	e59d307c	 ldr         r3, [sp, #0x7C]
  00c04	e5823000	 str         r3, [r2]

; 631  :     if ( (*ppPddContext)->pSysConfRegs == NULL )

  00c08	e59d30ac	 ldr         r3, [sp, #0xAC]
  00c0c	e5933000	 ldr         r3, [r3]
  00c10	e2833028	 add         r3, r3, #0x28
  00c14	e5933000	 ldr         r3, [r3]
  00c18	e3530000	 cmp         r3, #0
  00c1c	1a000007	 bne         |$LN2@UfnPdd_Con|

; 632  :     {
; 633  :         ERRORMSG (TRUE, (L"ERROR: SYSCONF registers mapping failed\r\n"
; 634  :                       ));

  00c20	e3a02c02	 mov         r2, #2, 24
  00c24	e382207a	 orr         r2, r2, #0x7A
  00c28	e59f126c	 ldr         r1, [pc, #0x26C]
  00c2c	e59f0264	 ldr         r0, [pc, #0x264]
  00c30	eb000000	 bl          NKDbgPrintfW
  00c34	e59f026c	 ldr         r0, [pc, #0x26C]
  00c38	eb000000	 bl          NKDbgPrintfW

; 635  :         goto cleanUp;

  00c3c	ea000075	 b           |$cleanUp$47740|
  00c40		 |$LN2@UfnPdd_Con|

; 636  :     }
; 637  : 
; 638  :     PRINTMSG(ZONE_PDD_INIT, (
; 639  :                  L"UfnPdd_ContextSetup: Allocated USB 0x%08x SYS_CONF 0x%08x\r\n",
; 640  :                  (*ppPddContext)->pUsbdRegs, (*ppPddContext)->pSysConfRegs));

  00c40	e59f3244	 ldr         r3, [pc, #0x244]
  00c44	e5933440	 ldr         r3, [r3, #0x440]
  00c48	e3130c01	 tst         r3, #1, 24
  00c4c	0a00001f	 beq         |$LN38@UfnPdd_Con|
  00c50	e59f3234	 ldr         r3, [pc, #0x234]
  00c54	e5933440	 ldr         r3, [r3, #0x440]
  00c58	e3130801	 tst         r3, #1, 16
  00c5c	0a00000c	 beq         |$LN36@UfnPdd_Con|
  00c60	e59d30ac	 ldr         r3, [sp, #0xAC]
  00c64	e5933000	 ldr         r3, [r3]
  00c68	e2833028	 add         r3, r3, #0x28
  00c6c	e5932000	 ldr         r2, [r3]
  00c70	e59d30ac	 ldr         r3, [sp, #0xAC]
  00c74	e5933000	 ldr         r3, [r3]
  00c78	e283301c	 add         r3, r3, #0x1C
  00c7c	e5931000	 ldr         r1, [r3]
  00c80	e59f021c	 ldr         r0, [pc, #0x21C]
  00c84	eb000000	 bl          CeLogMsg
  00c88	e3a03001	 mov         r3, #1
  00c8c	e58d3080	 str         r3, [sp, #0x80]
  00c90	ea00000b	 b           |$LN37@UfnPdd_Con|
  00c94		 |$LN36@UfnPdd_Con|
  00c94	e59d30ac	 ldr         r3, [sp, #0xAC]
  00c98	e5933000	 ldr         r3, [r3]
  00c9c	e2833028	 add         r3, r3, #0x28
  00ca0	e5932000	 ldr         r2, [r3]
  00ca4	e59d30ac	 ldr         r3, [sp, #0xAC]
  00ca8	e5933000	 ldr         r3, [r3]
  00cac	e283301c	 add         r3, r3, #0x1C
  00cb0	e5931000	 ldr         r1, [r3]
  00cb4	e59f01e8	 ldr         r0, [pc, #0x1E8]
  00cb8	eb000000	 bl          NKDbgPrintfW
  00cbc	e3a03000	 mov         r3, #0
  00cc0	e58d3080	 str         r3, [sp, #0x80]
  00cc4		 |$LN37@UfnPdd_Con|
  00cc4	e3a03001	 mov         r3, #1
  00cc8	e58d3084	 str         r3, [sp, #0x84]
  00ccc	ea000001	 b           |$LN39@UfnPdd_Con|
  00cd0		 |$LN38@UfnPdd_Con|
  00cd0	e3a03000	 mov         r3, #0
  00cd4	e58d3084	 str         r3, [sp, #0x84]
  00cd8		 |$LN39@UfnPdd_Con|

; 641  : 
; 642  :     /* Perform the USB Core Initialization */
; 643  :     USBPeripheralInit(*ppPddContext) ;

  00cd8	e59d30ac	 ldr         r3, [sp, #0xAC]
  00cdc	e5930000	 ldr         r0, [r3]
  00ce0	eb000000	 bl          USBPeripheralInit

; 644  : 
; 645  :     (*ppPddContext)->resetComplete  = FALSE;

  00ce4	e59d30ac	 ldr         r3, [sp, #0xAC]
  00ce8	e5933000	 ldr         r3, [r3]
  00cec	e2832038	 add         r2, r3, #0x38
  00cf0	e3a03000	 mov         r3, #0
  00cf4	e5823000	 str         r3, [r2]

; 646  : 
; 647  :     /* Create start event */
; 648  :     (*ppPddContext)->hStartEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  00cf8	e3a03000	 mov         r3, #0
  00cfc	e3a02000	 mov         r2, #0
  00d00	e3a01000	 mov         r1, #0
  00d04	e3a00000	 mov         r0, #0
  00d08	eb000000	 bl          CreateEventW
  00d0c	e58d0088	 str         r0, [sp, #0x88]
  00d10	e59d30ac	 ldr         r3, [sp, #0xAC]
  00d14	e5933000	 ldr         r3, [r3]
  00d18	e2832f9b	 add         r2, r3, #0x9B, 30
  00d1c	e59d3088	 ldr         r3, [sp, #0x88]
  00d20	e5823000	 str         r3, [r2]

; 649  : 
; 650  : 	usbIrqVal = (*ppPddContext)->irq;

  00d24	e59d30ac	 ldr         r3, [sp, #0xAC]
  00d28	e5933000	 ldr         r3, [r3]
  00d2c	e5933000	 ldr         r3, [r3]
  00d30	e58d3018	 str         r3, [sp, #0x18]

; 651  : 
; 652  :     if ( !KernelIoControl (IOCTL_HAL_REQUEST_SYSINTR,  &usbIrqVal,
; 653  :                            sizeof(DWORD), &(*ppPddContext)->sysIntr,
; 654  :                            sizeof((*ppPddContext)->sysIntr), NULL))

  00d34	e3a03000	 mov         r3, #0
  00d38	e58d3004	 str         r3, [sp, #4]
  00d3c	e3a03004	 mov         r3, #4
  00d40	e58d3000	 str         r3, [sp]
  00d44	e59d30ac	 ldr         r3, [sp, #0xAC]
  00d48	e5933000	 ldr         r3, [r3]
  00d4c	e283302c	 add         r3, r3, #0x2C
  00d50	e3a02004	 mov         r2, #4
  00d54	e28d1018	 add         r1, sp, #0x18
  00d58	e59f0140	 ldr         r0, [pc, #0x140]
  00d5c	eb000000	 bl          KernelIoControl
  00d60	e58d008c	 str         r0, [sp, #0x8C]
  00d64	e59d308c	 ldr         r3, [sp, #0x8C]
  00d68	e3530000	 cmp         r3, #0
  00d6c	1a000007	 bne         |$LN1@UfnPdd_Con|

; 655  :     {
; 656  :         ERRORMSG (TRUE, (L"ERROR: IOCTL_HAL_REQUEST_SYSTINR call failed\r\n"
; 657  :                       ));

  00d70	e3a02c02	 mov         r2, #2, 24
  00d74	e3822091	 orr         r2, r2, #0x91
  00d78	e59f111c	 ldr         r1, [pc, #0x11C]
  00d7c	e59f0114	 ldr         r0, [pc, #0x114]
  00d80	eb000000	 bl          NKDbgPrintfW
  00d84	e59f0108	 ldr         r0, [pc, #0x108]
  00d88	eb000000	 bl          NKDbgPrintfW

; 658  :         goto cleanUp;

  00d8c	ea000021	 b           |$cleanUp$47740|
  00d90		 |$LN1@UfnPdd_Con|

; 659  :     }
; 660  : 
; 661  :     PRINTMSG(ZONE_PDD_INIT, (
; 662  :                  L"UfnPdd_ContextSetup: USB Interrupt 0x%x SYSINTR 0x%x\r\n",
; 663  :                  usbIrqVal , (*ppPddContext)->sysIntr));

  00d90	e59f30f4	 ldr         r3, [pc, #0xF4]
  00d94	e5933440	 ldr         r3, [r3, #0x440]
  00d98	e3130c01	 tst         r3, #1, 24
  00d9c	0a000019	 beq         |$LN42@UfnPdd_Con|
  00da0	e59f30e4	 ldr         r3, [pc, #0xE4]
  00da4	e5933440	 ldr         r3, [r3, #0x440]
  00da8	e3130801	 tst         r3, #1, 16
  00dac	0a000009	 beq         |$LN40@UfnPdd_Con|
  00db0	e59d30ac	 ldr         r3, [sp, #0xAC]
  00db4	e5933000	 ldr         r3, [r3]
  00db8	e283302c	 add         r3, r3, #0x2C
  00dbc	e5932000	 ldr         r2, [r3]
  00dc0	e59d1018	 ldr         r1, [sp, #0x18]
  00dc4	e59f00c4	 ldr         r0, [pc, #0xC4]
  00dc8	eb000000	 bl          CeLogMsg
  00dcc	e3a03001	 mov         r3, #1
  00dd0	e58d3090	 str         r3, [sp, #0x90]
  00dd4	ea000008	 b           |$LN41@UfnPdd_Con|
  00dd8		 |$LN40@UfnPdd_Con|
  00dd8	e59d30ac	 ldr         r3, [sp, #0xAC]
  00ddc	e5933000	 ldr         r3, [r3]
  00de0	e283302c	 add         r3, r3, #0x2C
  00de4	e5932000	 ldr         r2, [r3]
  00de8	e59d1018	 ldr         r1, [sp, #0x18]
  00dec	e59f009c	 ldr         r0, [pc, #0x9C]
  00df0	eb000000	 bl          NKDbgPrintfW
  00df4	e3a03000	 mov         r3, #0
  00df8	e58d3090	 str         r3, [sp, #0x90]
  00dfc		 |$LN41@UfnPdd_Con|
  00dfc	e3a03001	 mov         r3, #1
  00e00	e58d3094	 str         r3, [sp, #0x94]
  00e04	ea000001	 b           |$LN43@UfnPdd_Con|
  00e08		 |$LN42@UfnPdd_Con|
  00e08	e3a03000	 mov         r3, #0
  00e0c	e58d3094	 str         r3, [sp, #0x94]
  00e10		 |$LN43@UfnPdd_Con|

; 664  : 
; 665  :     retValue = TRUE;

  00e10	e3a03001	 mov         r3, #1
  00e14	e58d301c	 str         r3, [sp, #0x1C]
  00e18		 |$cleanUp$47740|

; 666  : 
; 667  : cleanUp:
; 668  :     PRINTMSG(ZONE_FUNCTION, (L"-UfnPdd_ContextSetup\r\n"));

  00e18	e59f306c	 ldr         r3, [pc, #0x6C]
  00e1c	e5933440	 ldr         r3, [r3, #0x440]
  00e20	e3130a01	 tst         r3, #1, 20
  00e24	0a00000f	 beq         |$LN46@UfnPdd_Con|
  00e28	e59f305c	 ldr         r3, [pc, #0x5C]
  00e2c	e5933440	 ldr         r3, [r3, #0x440]
  00e30	e3130801	 tst         r3, #1, 16
  00e34	0a000004	 beq         |$LN44@UfnPdd_Con|
  00e38	e59f0048	 ldr         r0, [pc, #0x48]
  00e3c	eb000000	 bl          CeLogMsg
  00e40	e3a03001	 mov         r3, #1
  00e44	e58d3098	 str         r3, [sp, #0x98]
  00e48	ea000003	 b           |$LN45@UfnPdd_Con|
  00e4c		 |$LN44@UfnPdd_Con|
  00e4c	e59f0034	 ldr         r0, [pc, #0x34]
  00e50	eb000000	 bl          NKDbgPrintfW
  00e54	e3a03000	 mov         r3, #0
  00e58	e58d3098	 str         r3, [sp, #0x98]
  00e5c		 |$LN45@UfnPdd_Con|
  00e5c	e3a03001	 mov         r3, #1
  00e60	e58d309c	 str         r3, [sp, #0x9C]
  00e64	ea000001	 b           |$LN47@UfnPdd_Con|
  00e68		 |$LN46@UfnPdd_Con|
  00e68	e3a03000	 mov         r3, #0
  00e6c	e58d309c	 str         r3, [sp, #0x9C]
  00e70		 |$LN47@UfnPdd_Con|

; 669  : 
; 670  :     return retValue;

  00e70	e59d301c	 ldr         r3, [sp, #0x1C]
  00e74	e58d3028	 str         r3, [sp, #0x28]

; 671  : }

  00e78	e59d0028	 ldr         r0, [sp, #0x28]
  00e7c	e28dd0a0	 add         sp, sp, #0xA0
  00e80	e89d6000	 ldmia       sp, {sp, lr}
  00e84	e12fff1e	 bx          lr
  00e88		 |$LN51@UfnPdd_Con|
  00e88		 |$LN52@UfnPdd_Con|
  00e88	00000000	 DCD         |??_C@_1CO@KENNPJL@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  00e8c		 |$LN53@UfnPdd_Con|
  00e8c	00000000	 DCD         |dpCurSettings|
  00e90		 |$LN54@UfnPdd_Con|
  00e90	00000000	 DCD         |??_C@_1GO@HIIBBKPB@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@|
  00e94		 |$LN55@UfnPdd_Con|
  00e94	00000000	 DCD         |??_C@_1FO@IGBBBJEC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAH?$AAA?$AAL?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAY?$AAS?$AAT?$AAI?$AAN?$AAR@|
  00e98		 |$LN56@UfnPdd_Con|
  00e98	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00e9c		 |$LN57@UfnPdd_Con|
  00e9c	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00ea0		 |$LN58@UfnPdd_Con|
  00ea0	01010098	 DCD         0x1010098
  00ea4		 |$LN59@UfnPdd_Con|
  00ea4	00000000	 DCD         |??_C@_1HI@BHBLAGEJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAU@|
  00ea8		 |$LN60@UfnPdd_Con|
  00ea8	00000000	 DCD         |??_C@_1FE@FCLHPLHL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg@|
  00eac		 |$LN61@UfnPdd_Con|
  00eac	48002270	 DCD         0x48002270
  00eb0		 |$LN62@UfnPdd_Con|
  00eb0	00000000	 DCD         |??_C@_1GO@PGIBGLEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAg@|
  00eb4		 |$LN63@UfnPdd_Con|
  00eb4	00000000	 DCD         |??_C@_1EO@FDOPPAGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAP?$AAP?$AAI?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAa@|
  00eb8		 |$LN64@UfnPdd_Con|
  00eb8	00000000	 DCD         |??_C@_1FK@BAOADCDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAm?$AAa?$AAp?$AAp@|
  00ebc		 |$LN65@UfnPdd_Con|
  00ebc	00000000	 DCD         |??_C@_1EA@OEPLPLAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAb?$AAu?$AAs?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00ec0		 |$LN66@UfnPdd_Con|
  00ec0	00000000	 DCD         |??_C@_1FC@JDGAACEB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAp?$AAa?$AAr?$AAa@|
  00ec4		 |$LN67@UfnPdd_Con|
  00ec4	00000000	 DCD         |f_DeviceRegParams|
  00ec8		 |$LN68@UfnPdd_Con|
  00ec8	00000000	 DCD         |??_C@_1GI@MKAFOGGK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAg@|
  00ecc		 |$LN69@UfnPdd_Con|
  00ecc	00000000	 DCD         |??_C@_1EM@COOJIHLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAO?$AAb?$AAj?$AAe?$AAc@|
  00ed0		 |$LN70@UfnPdd_Con|
  00ed0	00000000	 DCD         |??_C@_1HO@LBGLCJKI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi@|
  00ed4		 |$LN71@UfnPdd_Con|
  00ed4	00000000	 DCD         |??_C@_1CO@NBIJIALA@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  00ed8		 |$M49397|

			 ENDP  ; |UfnPdd_ContextSetup|

	EXPORT	|??_C@_1DE@OEBGPOAP@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAT?$AAe?$AAa?$AAr?$AAd?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SetEvent|
	EXPORT	|??_C@_1DE@ELMNPAGA@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAT?$AAe?$AAa?$AAr?$AAd?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_ContextTeardown|
	IMPORT	|LocalFree|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|CloseHandle|
	IMPORT	|InterruptMask|

  00028			 AREA	 |.pdata|, PDATA
|$T49435| DCD	|$LN26@UfnPdd_Con@2|
	DCD	0x4000ba04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@OEBGPOAP@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAT?$AAe?$AAa?$AAr?$AAd?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, "T", 0x0, "e", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@ELMNPAGA@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAT?$AAe?$AAa?$AAr?$AAd?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, "T", 0x0, "e", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00ed8			 AREA	 |.text|, CODE, ARM

  00ed8		 |UfnPdd_ContextTeardown| PROC

; 686  : {

  00ed8		 |$LN26@UfnPdd_Con@2|
  00ed8	e1a0c00d	 mov         r12, sp
  00edc	e92d0001	 stmdb       sp!, {r0}
  00ee0	e92d5000	 stmdb       sp!, {r12, lr}
  00ee4	e24dd024	 sub         sp, sp, #0x24
  00ee8		 |$M49432|

; 687  :     PRINTMSG(ZONE_FUNCTION, (L"+UfnPdd_ContextTeardown\r\n"));

  00ee8	e59f32c4	 ldr         r3, [pc, #0x2C4]
  00eec	e5933440	 ldr         r3, [r3, #0x440]
  00ef0	e3130a01	 tst         r3, #1, 20
  00ef4	0a00000f	 beq         |$LN18@UfnPdd_Con@2|
  00ef8	e59f32b4	 ldr         r3, [pc, #0x2B4]
  00efc	e5933440	 ldr         r3, [r3, #0x440]
  00f00	e3130801	 tst         r3, #1, 16
  00f04	0a000004	 beq         |$LN16@UfnPdd_Con@2|
  00f08	e59f02ac	 ldr         r0, [pc, #0x2AC]
  00f0c	eb000000	 bl          CeLogMsg
  00f10	e3a03001	 mov         r3, #1
  00f14	e58d3014	 str         r3, [sp, #0x14]
  00f18	ea000003	 b           |$LN17@UfnPdd_Con@2|
  00f1c		 |$LN16@UfnPdd_Con@2|
  00f1c	e59f0298	 ldr         r0, [pc, #0x298]
  00f20	eb000000	 bl          NKDbgPrintfW
  00f24	e3a03000	 mov         r3, #0
  00f28	e58d3014	 str         r3, [sp, #0x14]
  00f2c		 |$LN17@UfnPdd_Con@2|
  00f2c	e3a03001	 mov         r3, #1
  00f30	e58d3018	 str         r3, [sp, #0x18]
  00f34	ea000001	 b           |$LN19@UfnPdd_Con@2|
  00f38		 |$LN18@UfnPdd_Con@2|
  00f38	e3a03000	 mov         r3, #0
  00f3c	e58d3018	 str         r3, [sp, #0x18]
  00f40		 |$LN19@UfnPdd_Con@2|

; 688  : 
; 689  :     /* Teardown Sequence will be from bottom to top order */
; 690  : 
; 691  :     if (pPddContext != NULL)

  00f40	e59d302c	 ldr         r3, [sp, #0x2C]
  00f44	e3530000	 cmp         r3, #0
  00f48	0a00007f	 beq         |$LN13@UfnPdd_Con@2|

; 692  :     {
; 693  :         if (pPddContext->sysIntr)

  00f4c	e59d302c	 ldr         r3, [sp, #0x2C]
  00f50	e283302c	 add         r3, r3, #0x2C
  00f54	e5933000	 ldr         r3, [r3]
  00f58	e3530000	 cmp         r3, #0
  00f5c	0a000016	 beq         |$LN12@UfnPdd_Con@2|

; 694  :         {
; 695  :             /* Mask the Interrupt */
; 696  :             InterruptMask (pPddContext->sysIntr, TRUE);

  00f60	e3a01001	 mov         r1, #1
  00f64	e59d302c	 ldr         r3, [sp, #0x2C]
  00f68	e283302c	 add         r3, r3, #0x2C
  00f6c	e5930000	 ldr         r0, [r3]
  00f70	eb000000	 bl          InterruptMask

; 697  : 
; 698  :             /* Signal the IST Thread to Stop Functioning */
; 699  : 
; 700  :             pPddContext->exitIntrThread = TRUE;

  00f74	e59d302c	 ldr         r3, [sp, #0x2C]
  00f78	e2832034	 add         r2, r3, #0x34
  00f7c	e3a03001	 mov         r3, #1
  00f80	e5823000	 str         r3, [r2]

; 701  :             SetEvent (pPddContext->hIntrEvent) ;

  00f84	e59d302c	 ldr         r3, [sp, #0x2C]
  00f88	e2833030	 add         r3, r3, #0x30
  00f8c	e5930000	 ldr         r0, [r3]
  00f90	eb000000	 bl          SetEvent

; 702  : 
; 703  :             /* Release the SYSINTR */
; 704  :             KernelIoControl (IOCTL_HAL_RELEASE_SYSINTR, &(pPddContext->sysIntr),
; 705  :                              sizeof(DWORD), NULL, 0, NULL);

  00f94	e3a03000	 mov         r3, #0
  00f98	e58d3004	 str         r3, [sp, #4]
  00f9c	e3a03000	 mov         r3, #0
  00fa0	e58d3000	 str         r3, [sp]
  00fa4	e3a03000	 mov         r3, #0
  00fa8	e3a02004	 mov         r2, #4
  00fac	e59d102c	 ldr         r1, [sp, #0x2C]
  00fb0	e281102c	 add         r1, r1, #0x2C
  00fb4	e59f01fc	 ldr         r0, [pc, #0x1FC]
  00fb8	eb000000	 bl          KernelIoControl
  00fbc		 |$LN12@UfnPdd_Con@2|

; 706  :         }
; 707  : 
; 708  :         if (pPddContext->hIntrEvent != NULL)

  00fbc	e59d302c	 ldr         r3, [sp, #0x2C]
  00fc0	e2833030	 add         r3, r3, #0x30
  00fc4	e5933000	 ldr         r3, [r3]
  00fc8	e3530000	 cmp         r3, #0
  00fcc	0a000003	 beq         |$LN11@UfnPdd_Con@2|

; 709  :         {
; 710  :             CloseHandle (pPddContext->hIntrEvent);

  00fd0	e59d302c	 ldr         r3, [sp, #0x2C]
  00fd4	e2833030	 add         r3, r3, #0x30
  00fd8	e5930000	 ldr         r0, [r3]
  00fdc	eb000000	 bl          CloseHandle
  00fe0		 |$LN11@UfnPdd_Con@2|

; 711  :         }
; 712  : 
; 713  :         {
; 714  :         DWORD epNum;
; 715  :         for (epNum = 0; epNum < USBD_EP_COUNT; epNum++)

  00fe0	e3a03000	 mov         r3, #0
  00fe4	e58d3008	 str         r3, [sp, #8]
  00fe8	ea000002	 b           |$LN10@UfnPdd_Con@2|
  00fec		 |$LN9@UfnPdd_Con@2|
  00fec	e59d3008	 ldr         r3, [sp, #8]
  00ff0	e2833001	 add         r3, r3, #1
  00ff4	e58d3008	 str         r3, [sp, #8]
  00ff8		 |$LN10@UfnPdd_Con@2|
  00ff8	e59d3008	 ldr         r3, [sp, #8]
  00ffc	e3530010	 cmp         r3, #0x10
  01000	2a00000d	 bcs         |$LN8@UfnPdd_Con@2|

; 716  :             if (pPddContext->ep[epNum].pDmaBuffer)

  01004	e59d302c	 ldr         r3, [sp, #0x2C]
  01008	e2831fa1	 add         r1, r3, #0xA1, 30
  0100c	e59d2008	 ldr         r2, [sp, #8]
  01010	e3a0303c	 mov         r3, #0x3C
  01014	e0030392	 mul         r3, r2, r3
  01018	e0813003	 add         r3, r1, r3
  0101c	e2833030	 add         r3, r3, #0x30
  01020	e5933000	 ldr         r3, [r3]
  01024	e3530000	 cmp         r3, #0
  01028	0a000002	 beq         |$LN7@UfnPdd_Con@2|

; 717  :                 DeinitEndpointDmaBuffer(pPddContext, epNum);

  0102c	e59d1008	 ldr         r1, [sp, #8]
  01030	e59d002c	 ldr         r0, [sp, #0x2C]
  01034	eb000000	 bl          DeinitEndpointDmaBuffer
  01038		 |$LN7@UfnPdd_Con@2|

; 718  :         }

  01038	eaffffeb	 b           |$LN9@UfnPdd_Con@2|
  0103c		 |$LN8@UfnPdd_Con@2|

; 719  : 
; 720  :         if (pPddContext->pSysConfRegs != NULL)

  0103c	e59d302c	 ldr         r3, [sp, #0x2C]
  01040	e2833028	 add         r3, r3, #0x28
  01044	e5933000	 ldr         r3, [r3]
  01048	e3530000	 cmp         r3, #0
  0104c	0a000004	 beq         |$LN6@UfnPdd_Con@2|

; 721  :         {
; 722  :             MmUnmapIoSpace ((PVOID)pPddContext->pSysConfRegs, sizeof(*(pPddContext->pSysConfRegs)));

  01050	e3a01ea6	 mov         r1, #0xA6, 28
  01054	e59d302c	 ldr         r3, [sp, #0x2C]
  01058	e2833028	 add         r3, r3, #0x28
  0105c	e5930000	 ldr         r0, [r3]
  01060	eb000000	 bl          MmUnmapIoSpace
  01064		 |$LN6@UfnPdd_Con@2|

; 723  :         }
; 724  : 
; 725  :         if (pPddContext->pUsbPhyReset != NULL)

  01064	e59d302c	 ldr         r3, [sp, #0x2C]
  01068	e2833024	 add         r3, r3, #0x24
  0106c	e5933000	 ldr         r3, [r3]
  01070	e3530000	 cmp         r3, #0
  01074	0a000004	 beq         |$LN5@UfnPdd_Con@2|

; 726  :         {
; 727  :             MmUnmapIoSpace ((PVOID)pPddContext->pUsbPhyReset, sizeof(pPddContext->pUsbPhyReset));

  01078	e3a01004	 mov         r1, #4
  0107c	e59d302c	 ldr         r3, [sp, #0x2C]
  01080	e2833024	 add         r3, r3, #0x24
  01084	e5930000	 ldr         r0, [r3]
  01088	eb000000	 bl          MmUnmapIoSpace
  0108c		 |$LN5@UfnPdd_Con@2|

; 728  :         }
; 729  : 
; 730  :         if (pPddContext->pCppiRegs != NULL)

  0108c	e59d302c	 ldr         r3, [sp, #0x2C]
  01090	e2833020	 add         r3, r3, #0x20
  01094	e5933000	 ldr         r3, [r3]
  01098	e3530000	 cmp         r3, #0
  0109c	0a000004	 beq         |$LN4@UfnPdd_Con@2|

; 731  :         {
; 732  :             MmUnmapIoSpace (pPddContext->pCppiRegs, sizeof(*(pPddContext->pCppiRegs)));

  010a0	e3a01c5e	 mov         r1, #0x5E, 24
  010a4	e59d302c	 ldr         r3, [sp, #0x2C]
  010a8	e2833020	 add         r3, r3, #0x20
  010ac	e5930000	 ldr         r0, [r3]
  010b0	eb000000	 bl          MmUnmapIoSpace
  010b4		 |$LN4@UfnPdd_Con@2|

; 733  :         }
; 734  : 
; 735  :         if (pPddContext->pUsbdRegs != NULL)

  010b4	e59d302c	 ldr         r3, [sp, #0x2C]
  010b8	e283301c	 add         r3, r3, #0x1C
  010bc	e5933000	 ldr         r3, [r3]
  010c0	e3530000	 cmp         r3, #0
  010c4	0a000005	 beq         |$LN3@UfnPdd_Con@2|

; 736  :         {
; 737  :             MmUnmapIoSpace (pPddContext->pUsbdRegs, sizeof(*(pPddContext->pUsbdRegs)));

  010c8	e3a01b02	 mov         r1, #2, 22
  010cc	e3811018	 orr         r1, r1, #0x18
  010d0	e59d302c	 ldr         r3, [sp, #0x2C]
  010d4	e283301c	 add         r3, r3, #0x1C
  010d8	e5930000	 ldr         r0, [r3]
  010dc	eb000000	 bl          MmUnmapIoSpace
  010e0		 |$LN3@UfnPdd_Con@2|

; 738  :         }
; 739  : 
; 740  :         if (pPddContext->parentBus != NULL)

  010e0	e59d302c	 ldr         r3, [sp, #0x2C]
  010e4	e2833018	 add         r3, r3, #0x18
  010e8	e5933000	 ldr         r3, [r3]
  010ec	e3530000	 cmp         r3, #0
  010f0	0a000003	 beq         |$LN2@UfnPdd_Con@2|

; 741  :         {
; 742  :             CloseBusAccessHandle (pPddContext->parentBus);

  010f4	e59d302c	 ldr         r3, [sp, #0x2C]
  010f8	e2833018	 add         r3, r3, #0x18
  010fc	e5930000	 ldr         r0, [r3]
  01100	eb000000	 bl          CloseBusAccessHandle
  01104		 |$LN2@UfnPdd_Con@2|

; 743  :         }
; 744  : 
; 745  :         if (pPddContext->hActivityEvent)

  01104	e59d302c	 ldr         r3, [sp, #0x2C]
  01108	e2833f95	 add         r3, r3, #0x95, 30
  0110c	e5933000	 ldr         r3, [r3]
  01110	e3530000	 cmp         r3, #0
  01114	0a000007	 beq         |$LN1@UfnPdd_Con@2|

; 746  :         {
; 747  :             CloseHandle(pPddContext->hActivityEvent);

  01118	e59d302c	 ldr         r3, [sp, #0x2C]
  0111c	e2833f95	 add         r3, r3, #0x95, 30
  01120	e5930000	 ldr         r0, [r3]
  01124	eb000000	 bl          CloseHandle

; 748  :             pPddContext->hActivityEvent = NULL;

  01128	e59d302c	 ldr         r3, [sp, #0x2C]
  0112c	e2832f95	 add         r2, r3, #0x95, 30
  01130	e3a03000	 mov         r3, #0
  01134	e5823000	 str         r3, [r2]
  01138		 |$LN1@UfnPdd_Con@2|

; 749  :         }
; 750  : 
; 751  :         /* Last one in the Sequence */
; 752  :         DeleteCriticalSection (&pPddContext->epCS);

  01138	e59d302c	 ldr         r3, [sp, #0x2C]
  0113c	e2830e27	 add         r0, r3, #0x27, 28
  01140	eb000000	 bl          DeleteCriticalSection

; 753  :         LocalFree (pPddContext);

  01144	e59d002c	 ldr         r0, [sp, #0x2C]
  01148	eb000000	 bl          LocalFree
  0114c		 |$LN13@UfnPdd_Con@2|

; 754  :     }
; 755  :     PRINTMSG(ZONE_FUNCTION, (L"-UfnPdd_ContextTeardown\r\n"));

  0114c	e59f3060	 ldr         r3, [pc, #0x60]
  01150	e5933440	 ldr         r3, [r3, #0x440]
  01154	e3130a01	 tst         r3, #1, 20
  01158	0a00000f	 beq         |$LN22@UfnPdd_Con@2|
  0115c	e59f3050	 ldr         r3, [pc, #0x50]
  01160	e5933440	 ldr         r3, [r3, #0x440]
  01164	e3130801	 tst         r3, #1, 16
  01168	0a000004	 beq         |$LN20@UfnPdd_Con@2|
  0116c	e59f003c	 ldr         r0, [pc, #0x3C]
  01170	eb000000	 bl          CeLogMsg
  01174	e3a03001	 mov         r3, #1
  01178	e58d301c	 str         r3, [sp, #0x1C]
  0117c	ea000003	 b           |$LN21@UfnPdd_Con@2|
  01180		 |$LN20@UfnPdd_Con@2|
  01180	e59f0028	 ldr         r0, [pc, #0x28]
  01184	eb000000	 bl          NKDbgPrintfW
  01188	e3a03000	 mov         r3, #0
  0118c	e58d301c	 str         r3, [sp, #0x1C]
  01190		 |$LN21@UfnPdd_Con@2|
  01190	e3a03001	 mov         r3, #1
  01194	e58d3020	 str         r3, [sp, #0x20]
  01198	ea000001	 b           |$LN23@UfnPdd_Con@2|
  0119c		 |$LN22@UfnPdd_Con@2|
  0119c	e3a03000	 mov         r3, #0
  011a0	e58d3020	 str         r3, [sp, #0x20]
  011a4		 |$LN23@UfnPdd_Con@2|

; 756  : }

  011a4	e28dd024	 add         sp, sp, #0x24
  011a8	e89d6000	 ldmia       sp, {sp, lr}
  011ac	e12fff1e	 bx          lr
  011b0		 |$LN27@UfnPdd_Con@2|
  011b0		 |$LN28@UfnPdd_Con@2|
  011b0	00000000	 DCD         |??_C@_1DE@OEBGPOAP@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAT?$AAe?$AAa?$AAr?$AAd?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  011b4		 |$LN29@UfnPdd_Con@2|
  011b4	00000000	 DCD         |dpCurSettings|
  011b8		 |$LN30@UfnPdd_Con@2|
  011b8	010100d8	 DCD         0x10100d8
  011bc		 |$LN31@UfnPdd_Con@2|
  011bc	00000000	 DCD         |??_C@_1DE@ELMNPAGA@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAT?$AAe?$AAa?$AAr?$AAd?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  011c0		 |$M49433|

			 ENDP  ; |UfnPdd_ContextTeardown|

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T49446| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M49443|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M49444|

			 ENDP  ; |SetEvent|

	EXPORT	|??_C@_1CG@MJIAMLBJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_PowerDown|

  00030			 AREA	 |.pdata|, PDATA
|$T49457| DCD	|$LN9@UfnPdd_Pow|
	DCD	0x40001f04
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbfn\usbfnpdd.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@MJIAMLBJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "D"
	DCB	0x0, "o", 0x0, "w", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  011c0			 AREA	 |.text|, CODE, ARM

  011c0		 |UfnPdd_PowerDown| PROC

; 791  : {

  011c0		 |$LN9@UfnPdd_Pow|
  011c0	e1a0c00d	 mov         r12, sp
  011c4	e92d0001	 stmdb       sp!, {r0}
  011c8	e92d5000	 stmdb       sp!, {r12, lr}
  011cc	e24dd008	 sub         sp, sp, #8
  011d0		 |$M49454|

; 792  : 	UNREFERENCED_PARAMETER(pPddContext);
; 793  : 
; 794  :     PRINTMSG(ZONE_FUNCTION, (L"UfnPdd_PowerDown\r\n"));

  011d0	e59f3060	 ldr         r3, [pc, #0x60]
  011d4	e5933440	 ldr         r3, [r3, #0x440]
  011d8	e3130a01	 tst         r3, #1, 20
  011dc	0a00000f	 beq         |$LN5@UfnPdd_Pow|
  011e0	e59f3050	 ldr         r3, [pc, #0x50]
  011e4	e5933440	 ldr         r3, [r3, #0x440]
  011e8	e3130801	 tst         r3, #1, 16
  011ec	0a000004	 beq         |$LN3@UfnPdd_Pow|
  011f0	e59f003c	 ldr         r0, [pc, #0x3C]
  011f4	eb000000	 bl          CeLogMsg
  011f8	e3a03001	 mov         r3, #1
  011fc	e58d3000	 str         r3, [sp]
  01200	ea000003	 b           |$LN4@UfnPdd_Pow|
  01204		 |$LN3@UfnPdd_Pow|
  01204	e59f0028	 ldr         r0, [pc, #0x28]
  01208	eb000000	 bl          NKDbgPrintfW
  0120c	e3a03000	 mov         r3, #0
  01210	e58d3000	 str         r3, [sp]
  01214		 |$LN4@UfnPdd_Pow|
  01214	e3a03001	 mov         r3, #1
  01218	e58d3004	 str         r3, [sp, #4]
  0121c	ea000001	 b           |$LN6@UfnPdd_Pow|
  01220		 |$LN5@UfnPdd_Pow|
  01220	e3a03000	 mov         r3, #0
  01224	e58d3004	 str         r3, [sp, #4]
  01228		 |$LN6@UfnPdd_Pow|

; 795  : }

  01228	e28dd008	 add         sp, sp, #8
  0122c	e89d6000	 ldmia       sp, {sp, lr}
  01230	e12fff1e	 bx          lr
  01234		 |$LN10@UfnPdd_Pow|
  01234		 |$LN11@UfnPdd_Pow|
  01234	00000000	 DCD         |??_C@_1CG@MJIAMLBJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  01238		 |$LN12@UfnPdd_Pow|
  01238	00000000	 DCD         |dpCurSettings|
  0123c		 |$M49455|

			 ENDP  ; |UfnPdd_PowerDown|

	EXPORT	|??_C@_1CC@OKBOJDMF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_PowerUp|

  00038			 AREA	 |.pdata|, PDATA
|$T49469| DCD	|$LN9@UfnPdd_Pow@2|
	DCD	0x40001f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@OKBOJDMF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "U"
	DCB	0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0123c			 AREA	 |.text|, CODE, ARM

  0123c		 |UfnPdd_PowerUp| PROC

; 808  : {

  0123c		 |$LN9@UfnPdd_Pow@2|
  0123c	e1a0c00d	 mov         r12, sp
  01240	e92d0001	 stmdb       sp!, {r0}
  01244	e92d5000	 stmdb       sp!, {r12, lr}
  01248	e24dd008	 sub         sp, sp, #8
  0124c		 |$M49466|

; 809  : 	UNREFERENCED_PARAMETER(pPddContext);
; 810  : 
; 811  :     PRINTMSG(ZONE_FUNCTION, (L"UfnPdd_PowerUp\r\n"));

  0124c	e59f3060	 ldr         r3, [pc, #0x60]
  01250	e5933440	 ldr         r3, [r3, #0x440]
  01254	e3130a01	 tst         r3, #1, 20
  01258	0a00000f	 beq         |$LN5@UfnPdd_Pow@2|
  0125c	e59f3050	 ldr         r3, [pc, #0x50]
  01260	e5933440	 ldr         r3, [r3, #0x440]
  01264	e3130801	 tst         r3, #1, 16
  01268	0a000004	 beq         |$LN3@UfnPdd_Pow@2|
  0126c	e59f003c	 ldr         r0, [pc, #0x3C]
  01270	eb000000	 bl          CeLogMsg
  01274	e3a03001	 mov         r3, #1
  01278	e58d3000	 str         r3, [sp]
  0127c	ea000003	 b           |$LN4@UfnPdd_Pow@2|
  01280		 |$LN3@UfnPdd_Pow@2|
  01280	e59f0028	 ldr         r0, [pc, #0x28]
  01284	eb000000	 bl          NKDbgPrintfW
  01288	e3a03000	 mov         r3, #0
  0128c	e58d3000	 str         r3, [sp]
  01290		 |$LN4@UfnPdd_Pow@2|
  01290	e3a03001	 mov         r3, #1
  01294	e58d3004	 str         r3, [sp, #4]
  01298	ea000001	 b           |$LN6@UfnPdd_Pow@2|
  0129c		 |$LN5@UfnPdd_Pow@2|
  0129c	e3a03000	 mov         r3, #0
  012a0	e58d3004	 str         r3, [sp, #4]
  012a4		 |$LN6@UfnPdd_Pow@2|

; 812  : 
; 813  :     // Handle power changes through bus power ioctls
; 814  :     //USBPeripheralPowerUp(pPddContext);
; 815  :     //USBPeripheralStart(pPddContext);
; 816  : }

  012a4	e28dd008	 add         sp, sp, #8
  012a8	e89d6000	 ldmia       sp, {sp, lr}
  012ac	e12fff1e	 bx          lr
  012b0		 |$LN10@UfnPdd_Pow@2|
  012b0		 |$LN11@UfnPdd_Pow@2|
  012b0	00000000	 DCD         |??_C@_1CC@OKBOJDMF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  012b4		 |$LN12@UfnPdd_Pow@2|
  012b4	00000000	 DCD         |dpCurSettings|
  012b8		 |$M49467|

			 ENDP  ; |UfnPdd_PowerUp|

	EXPORT	|??_C@_1JI@DBBJKFPC@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@DIHKIOJL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@KIOKMDN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@EFPMDAOF@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@PIGNFLGJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@PLBLDDGJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|ContinueEp0TxTransfer|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|
	IMPORT	|__C_specific_handler|

  00040			 AREA	 |.pdata|, PDATA
|$T49542| DCD	|$LN75@ContinueEp|
	DCD	0xc0021705
|$T49544| DCD	|$LN65@ContinueEp|
	DCD	0x40000e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@DBBJKFPC@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "T", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, "i", 0x0, "f", 0x0, "y", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@DIHKIOJL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "T", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "l"
	DCB	0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@KIOKMDN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "T", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@EFPMDAOF@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "T", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@PIGNFLGJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "T", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@PLBLDDGJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "T", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00004			 AREA	 |.xdata|, DATA
|$T49540| DCD	0x1
	DCD	|$LN69@ContinueEp|
	DCD	|$LN70@ContinueEp|
	DCD	|$LN65@ContinueEp|
	DCD	|$LN66@ContinueEp|
; Function compile flags: /Odtp

  012b8			 AREA	 |.text|, CODE, ARM

  012b8	00000000	 DCD         |__C_specific_handler|
  012bc	00000000	 DCD         |$T49540|

  012c0		 |ContinueEp0TxTransfer| PROC

; 890  : {

  012c0		 |$LN75@ContinueEp|
  012c0	e1a0c00d	 mov         r12, sp
  012c4	e92d0003	 stmdb       sp!, {r0, r1}
  012c8	e92d5800	 stmdb       sp!, {r11, r12, lr}
  012cc	e28db00c	 add         r11, sp, #0xC
  012d0	e24dd09c	 sub         sp, sp, #0x9C
  012d4		 |$LN73@ContinueEp|

; 891  :     CSL_UsbRegs *pUsbdRegs = pPdd->pUsbdRegs;

  012d4	e59b3000	 ldr         r3, [r11]
  012d8	e283301c	 add         r3, r3, #0x1C
  012dc	e5933000	 ldr         r3, [r3]
  012e0	e50b308c	 str         r3, [r11, #-0x8C]

; 892  :     UsbFnEp     *pEP = &pPdd->ep[0];

  012e4	e59b3000	 ldr         r3, [r11]
  012e8	e2833fa1	 add         r3, r3, #0xA1, 30
  012ec	e50b3088	 str         r3, [r11, #-0x88]

; 893  :     STransfer   *pTransfer = pEP->pTransfer;

  012f0	e51b3088	 ldr         r3, [r11, #-0x88]
  012f4	e2833020	 add         r3, r3, #0x20
  012f8	e5933000	 ldr         r3, [r3]
  012fc	e50b3090	 str         r3, [r11, #-0x90]

; 894  :     BOOL complete = FALSE;

  01300	e3a03000	 mov         r3, #0
  01304	e50b3084	 str         r3, [r11, #-0x84]

; 895  :     volatile UINT16 *pepCtrlReg;
; 896  :     UINT16  ep0CsrReg;
; 897  :     DWORD space = 0;

  01308	e3a03000	 mov         r3, #0
  0130c	e50b30a0	 str         r3, [r11, #-0xA0]

; 898  :     DWORD remain = 0;

  01310	e3a03000	 mov         r3, #0
  01314	e50b3098	 str         r3, [r11, #-0x98]

; 899  :     UCHAR *pBuffer = NULL;

  01318	e3a03000	 mov         r3, #0
  0131c	e50b30a4	 str         r3, [r11, #-0xA4]

; 900  : 
; 901  :     DEBUGCHK(endPoint == 0);

  01320	e59b3004	 ldr         r3, [r11, #4]
  01324	e3530000	 cmp         r3, #0
  01328	1a000002	 bne         |$LN14@ContinueEp|
  0132c	e3a03001	 mov         r3, #1
  01330	e50b3070	 str         r3, [r11, #-0x70]
  01334	ea000008	 b           |$LN15@ContinueEp|
  01338		 |$LN14@ContinueEp|
  01338	e3a03c03	 mov         r3, #3, 24
  0133c	e3833085	 orr         r3, r3, #0x85
  01340	e59f2808	 ldr         r2, [pc, #0x808]
  01344	e59f17e8	 ldr         r1, [pc, #0x7E8]
  01348	e59f07fc	 ldr         r0, [pc, #0x7FC]
  0134c	eb000000	 bl          NKDbgPrintfW
  01350	e6000010	 __debugbreak_ce
  01354	e3a03000	 mov         r3, #0
  01358	e50b3070	 str         r3, [r11, #-0x70]
  0135c		 |$LN15@ContinueEp|

; 902  : 
; 903  :     PRINTMSG(ZONE_PDD_EP0, (L"ContinueEp0TxTransfer: "
; 904  :                            L"pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 905  :                            pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 906  :                            pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 907  :                            pTransfer != NULL ? pTransfer->dwUsbError : -1));

  0135c	e59f37d0	 ldr         r3, [pc, #0x7D0]
  01360	e5933440	 ldr         r3, [r3, #0x440]
  01364	e3130c02	 tst         r3, #2, 24
  01368	0a000055	 beq         |$LN30@ContinueEp|
  0136c	e59f37c0	 ldr         r3, [pc, #0x7C0]
  01370	e5933440	 ldr         r3, [r3, #0x440]
  01374	e3130801	 tst         r3, #1, 16
  01378	0a000027	 beq         |$LN28@ContinueEp|
  0137c	e51b3090	 ldr         r3, [r11, #-0x90]
  01380	e3530000	 cmp         r3, #0
  01384	0a000004	 beq         |$LN16@ContinueEp|
  01388	e51b3090	 ldr         r3, [r11, #-0x90]
  0138c	e2833014	 add         r3, r3, #0x14
  01390	e5933000	 ldr         r3, [r3]
  01394	e50b306c	 str         r3, [r11, #-0x6C]
  01398	ea000001	 b           |$LN17@ContinueEp|
  0139c		 |$LN16@ContinueEp|
  0139c	e3e03000	 mvn         r3, #0
  013a0	e50b306c	 str         r3, [r11, #-0x6C]
  013a4		 |$LN17@ContinueEp|
  013a4	e51b3090	 ldr         r3, [r11, #-0x90]
  013a8	e3530000	 cmp         r3, #0
  013ac	0a000004	 beq         |$LN18@ContinueEp|
  013b0	e51b3090	 ldr         r3, [r11, #-0x90]
  013b4	e2833010	 add         r3, r3, #0x10
  013b8	e5933000	 ldr         r3, [r3]
  013bc	e50b3068	 str         r3, [r11, #-0x68]
  013c0	ea000001	 b           |$LN19@ContinueEp|
  013c4		 |$LN18@ContinueEp|
  013c4	e3a03000	 mov         r3, #0
  013c8	e50b3068	 str         r3, [r11, #-0x68]
  013cc		 |$LN19@ContinueEp|
  013cc	e51b3090	 ldr         r3, [r11, #-0x90]
  013d0	e3530000	 cmp         r3, #0
  013d4	0a000004	 beq         |$LN20@ContinueEp|
  013d8	e51b3090	 ldr         r3, [r11, #-0x90]
  013dc	e283300c	 add         r3, r3, #0xC
  013e0	e5933000	 ldr         r3, [r3]
  013e4	e50b3064	 str         r3, [r11, #-0x64]
  013e8	ea000001	 b           |$LN21@ContinueEp|
  013ec		 |$LN20@ContinueEp|
  013ec	e3a03000	 mov         r3, #0
  013f0	e50b3064	 str         r3, [r11, #-0x64]
  013f4		 |$LN21@ContinueEp|
  013f4	e51b306c	 ldr         r3, [r11, #-0x6C]
  013f8	e58d3000	 str         r3, [sp]
  013fc	e51b3068	 ldr         r3, [r11, #-0x68]
  01400	e51b2064	 ldr         r2, [r11, #-0x64]
  01404	e51b1090	 ldr         r1, [r11, #-0x90]
  01408	e59f0738	 ldr         r0, [pc, #0x738]
  0140c	eb000000	 bl          CeLogMsg
  01410	e3a03001	 mov         r3, #1
  01414	e50b3060	 str         r3, [r11, #-0x60]
  01418	ea000026	 b           |$LN29@ContinueEp|
  0141c		 |$LN28@ContinueEp|
  0141c	e51b3090	 ldr         r3, [r11, #-0x90]
  01420	e3530000	 cmp         r3, #0
  01424	0a000004	 beq         |$LN22@ContinueEp|
  01428	e51b3090	 ldr         r3, [r11, #-0x90]
  0142c	e2833014	 add         r3, r3, #0x14
  01430	e5933000	 ldr         r3, [r3]
  01434	e50b305c	 str         r3, [r11, #-0x5C]
  01438	ea000001	 b           |$LN23@ContinueEp|
  0143c		 |$LN22@ContinueEp|
  0143c	e3e03000	 mvn         r3, #0
  01440	e50b305c	 str         r3, [r11, #-0x5C]
  01444		 |$LN23@ContinueEp|
  01444	e51b3090	 ldr         r3, [r11, #-0x90]
  01448	e3530000	 cmp         r3, #0
  0144c	0a000004	 beq         |$LN24@ContinueEp|
  01450	e51b3090	 ldr         r3, [r11, #-0x90]
  01454	e2833010	 add         r3, r3, #0x10
  01458	e5933000	 ldr         r3, [r3]
  0145c	e50b3058	 str         r3, [r11, #-0x58]
  01460	ea000001	 b           |$LN25@ContinueEp|
  01464		 |$LN24@ContinueEp|
  01464	e3a03000	 mov         r3, #0
  01468	e50b3058	 str         r3, [r11, #-0x58]
  0146c		 |$LN25@ContinueEp|
  0146c	e51b3090	 ldr         r3, [r11, #-0x90]
  01470	e3530000	 cmp         r3, #0
  01474	0a000004	 beq         |$LN26@ContinueEp|
  01478	e51b3090	 ldr         r3, [r11, #-0x90]
  0147c	e283300c	 add         r3, r3, #0xC
  01480	e5933000	 ldr         r3, [r3]
  01484	e50b3054	 str         r3, [r11, #-0x54]
  01488	ea000001	 b           |$LN27@ContinueEp|
  0148c		 |$LN26@ContinueEp|
  0148c	e3a03000	 mov         r3, #0
  01490	e50b3054	 str         r3, [r11, #-0x54]
  01494		 |$LN27@ContinueEp|
  01494	e51b305c	 ldr         r3, [r11, #-0x5C]
  01498	e58d3000	 str         r3, [sp]
  0149c	e51b3058	 ldr         r3, [r11, #-0x58]
  014a0	e51b2054	 ldr         r2, [r11, #-0x54]
  014a4	e51b1090	 ldr         r1, [r11, #-0x90]
  014a8	e59f0698	 ldr         r0, [pc, #0x698]
  014ac	eb000000	 bl          NKDbgPrintfW
  014b0	e3a03000	 mov         r3, #0
  014b4	e50b3060	 str         r3, [r11, #-0x60]
  014b8		 |$LN29@ContinueEp|
  014b8	e3a03001	 mov         r3, #1
  014bc	e50b3050	 str         r3, [r11, #-0x50]
  014c0	ea000001	 b           |$LN31@ContinueEp|
  014c4		 |$LN30@ContinueEp|
  014c4	e3a03000	 mov         r3, #0
  014c8	e50b3050	 str         r3, [r11, #-0x50]
  014cc		 |$LN31@ContinueEp|

; 908  : 
; 909  :     if (pTransfer == NULL)

  014cc	e51b3090	 ldr         r3, [r11, #-0x90]
  014d0	e3530000	 cmp         r3, #0
  014d4	1a00001a	 bne         |$LN11@ContinueEp|

; 910  :     {
; 911  :         PRINTMSG(ZONE_ERROR, (L"ContinueEp0TxTransfer: Transfer NULL!\r\n"));

  014d8	e59f3654	 ldr         r3, [pc, #0x654]
  014dc	e5933440	 ldr         r3, [r3, #0x440]
  014e0	e3130001	 tst         r3, #1
  014e4	0a00000f	 beq         |$LN34@ContinueEp|
  014e8	e59f3644	 ldr         r3, [pc, #0x644]
  014ec	e5933440	 ldr         r3, [r3, #0x440]
  014f0	e3130801	 tst         r3, #1, 16
  014f4	0a000004	 beq         |$LN32@ContinueEp|
  014f8	e59f0644	 ldr         r0, [pc, #0x644]
  014fc	eb000000	 bl          CeLogMsg
  01500	e3a03001	 mov         r3, #1
  01504	e50b304c	 str         r3, [r11, #-0x4C]
  01508	ea000003	 b           |$LN33@ContinueEp|
  0150c		 |$LN32@ContinueEp|
  0150c	e59f0630	 ldr         r0, [pc, #0x630]
  01510	eb000000	 bl          NKDbgPrintfW
  01514	e3a03000	 mov         r3, #0
  01518	e50b304c	 str         r3, [r11, #-0x4C]
  0151c		 |$LN33@ContinueEp|
  0151c	e3a03001	 mov         r3, #1
  01520	e50b3048	 str         r3, [r11, #-0x48]
  01524	ea000001	 b           |$LN35@ContinueEp|
  01528		 |$LN34@ContinueEp|
  01528	e3a03000	 mov         r3, #0
  0152c	e50b3048	 str         r3, [r11, #-0x48]
  01530		 |$LN35@ContinueEp|

; 912  :         pEP->epStage = MGC_END0_START;

  01530	e51b3088	 ldr         r3, [r11, #-0x88]
  01534	e283201c	 add         r2, r3, #0x1C
  01538	e3a03001	 mov         r3, #1
  0153c	e5823000	 str         r3, [r2]

; 913  :         goto done;

  01540	ea000172	 b           |$done$47904|
  01544		 |$LN11@ContinueEp|

; 914  :     }
; 915  : 
; 916  :     /* Enter CriticalSection */
; 917  :     LOCK_ENDPOINT(pPdd);

  01544	e59b3000	 ldr         r3, [r11]
  01548	e2830e27	 add         r0, r3, #0x27, 28
  0154c	eb000000	 bl          EnterCriticalSection

; 918  : 
; 919  :     pepCtrlReg = &pUsbdRegs->EPCSR[ endPoint ].PERI_TXCSR;

  01550	e51b308c	 ldr         r3, [r11, #-0x8C]
  01554	e2831c05	 add         r1, r3, #5, 24
  01558	e59b2004	 ldr         r2, [r11, #4]
  0155c	e3a03010	 mov         r3, #0x10
  01560	e0030392	 mul         r3, r2, r3
  01564	e0813003	 add         r3, r1, r3
  01568	e2833002	 add         r3, r3, #2
  0156c	e50b309c	 str         r3, [r11, #-0x9C]

; 920  :     ep0CsrReg = (*pepCtrlReg);

  01570	e51b309c	 ldr         r3, [r11, #-0x9C]
  01574	e1d330b0	 ldrh        r3, [r3]
  01578	e14b39b4	 strh        r3, [r11, #-0x94]

; 921  : 
; 922  :     /* If the hardware has set the STALL Bits, clearing them before
; 923  :      * will ensure smooth USB Enumeration Process. In case we do
; 924  :      * not perform the same, the current reply being sent to
; 925  :      * the host can be interpreted as Stall or incomplete reply
; 926  :      * write into the EP FIFO and update the TxPktRdy Bits
; 927  :      */
; 928  :     if ((ep0CsrReg & MGC_M_CSR0_P_SENTSTALL) != 0)

  0157c	e15b39b4	 ldrh        r3, [r11, #-0x94]
  01580	e3130004	 tst         r3, #4
  01584	0a00000c	 beq         |$LN10@ContinueEp|

; 929  :     {
; 930  :         ep0CsrReg &= MGC_EP0_STALL_BITS;

  01588	e15b39b4	 ldrh        r3, [r11, #-0x94]
  0158c	e2033024	 and         r3, r3, #0x24
  01590	e1a03803	 mov         r3, r3, lsl #16
  01594	e1a03823	 mov         r3, r3, lsr #16
  01598	e14b39b4	 strh        r3, [r11, #-0x94]

; 931  :         ep0CsrReg |= MGC_M_CSR0_P_SVDRXPKTRDY;

  0159c	e15b39b4	 ldrh        r3, [r11, #-0x94]
  015a0	e3833040	 orr         r3, r3, #0x40
  015a4	e1a03803	 mov         r3, r3, lsl #16
  015a8	e1a03823	 mov         r3, r3, lsr #16
  015ac	e14b39b4	 strh        r3, [r11, #-0x94]

; 932  :         (*pepCtrlReg) = ep0CsrReg;

  015b0	e15b29b4	 ldrh        r2, [r11, #-0x94]
  015b4	e51b309c	 ldr         r3, [r11, #-0x9C]
  015b8	e1c320b0	 strh        r2, [r3]
  015bc		 |$LN10@ContinueEp|

; 933  :     }
; 934  : 
; 935  :     /* First time through, check if ZLP is required for this transfer */
; 936  :     if (pTransfer->cbTransferred == 0)

  015bc	e51b3090	 ldr         r3, [r11, #-0x90]
  015c0	e2833010	 add         r3, r3, #0x10
  015c4	e5933000	 ldr         r3, [r3]
  015c8	e3530000	 cmp         r3, #0
  015cc	1a000024	 bne         |$LN9@ContinueEp|

; 937  :     {
; 938  :         if (pTransfer->cbBuffer > 0 &&
; 939  :             pTransfer->cbBuffer < pPdd->setupRequest.wLength &&
; 940  :             (pTransfer->cbBuffer % pEP->maxPacketSize) == 0)

  015d0	e51b3090	 ldr         r3, [r11, #-0x90]
  015d4	e283300c	 add         r3, r3, #0xC
  015d8	e5933000	 ldr         r3, [r3]
  015dc	e3530000	 cmp         r3, #0
  015e0	9a00001b	 bls         |$LN8@ContinueEp|
  015e4	e51b3090	 ldr         r3, [r11, #-0x90]
  015e8	e283000c	 add         r0, r3, #0xC
  015ec	e59b3000	 ldr         r3, [r11]
  015f0	e2833c06	 add         r3, r3, #6, 24
  015f4	e283104a	 add         r1, r3, #0x4A
  015f8	e5d13001	 ldrb        r3, [r1, #1]
  015fc	e1a03403	 mov         r3, r3, lsl #8
  01600	e1a02803	 mov         r2, r3, lsl #16
  01604	e1a02822	 mov         r2, r2, lsr #16
  01608	e5d13000	 ldrb        r3, [r1]
  0160c	e1832002	 orr         r2, r3, r2
  01610	e5903000	 ldr         r3, [r0]
  01614	e1530002	 cmp         r3, r2
  01618	2a00000d	 bcs         |$LN8@ContinueEp|
  0161c	e51b3090	 ldr         r3, [r11, #-0x90]
  01620	e283200c	 add         r2, r3, #0xC
  01624	e51b3088	 ldr         r3, [r11, #-0x88]
  01628	e2833008	 add         r3, r3, #8
  0162c	e1d300b0	 ldrh        r0, [r3]
  01630	e5921000	 ldr         r1, [r2]
  01634	eb000000	 bl          __rt_udiv
  01638	e3510000	 cmp         r1, #0
  0163c	1a000004	 bne         |$LN8@ContinueEp|

; 941  :         {
; 942  :             pEP->zlpReq = TRUE;

  01640	e51b3088	 ldr         r3, [r11, #-0x88]
  01644	e2832024	 add         r2, r3, #0x24
  01648	e3a03001	 mov         r3, #1
  0164c	e5823000	 str         r3, [r2]

; 943  :         }
; 944  :         else

  01650	ea000003	 b           |$LN7@ContinueEp|
  01654		 |$LN8@ContinueEp|

; 945  :         {
; 946  :             pEP->zlpReq = FALSE;

  01654	e51b3088	 ldr         r3, [r11, #-0x88]
  01658	e2832024	 add         r2, r3, #0x24
  0165c	e3a03000	 mov         r3, #0
  01660	e5823000	 str         r3, [r2]
  01664		 |$LN7@ContinueEp|
  01664		 |$LN9@ContinueEp|

; 947  :         }
; 948  :     }
; 949  : 
; 950  :     /* Check if we have Transmitted Entire Packet */
; 951  :     if ((pTransfer->cbTransferred == pTransfer->cbBuffer) && !pEP->zlpReq)

  01664	e51b3090	 ldr         r3, [r11, #-0x90]
  01668	e2832010	 add         r2, r3, #0x10
  0166c	e51b3090	 ldr         r3, [r11, #-0x90]
  01670	e283300c	 add         r3, r3, #0xC
  01674	e5922000	 ldr         r2, [r2]
  01678	e5933000	 ldr         r3, [r3]
  0167c	e1520003	 cmp         r2, r3
  01680	1a000025	 bne         |$LN6@ContinueEp|
  01684	e51b3088	 ldr         r3, [r11, #-0x88]
  01688	e2833024	 add         r3, r3, #0x24
  0168c	e5933000	 ldr         r3, [r3]
  01690	e3530000	 cmp         r3, #0
  01694	1a000020	 bne         |$LN6@ContinueEp|

; 952  :     {
; 953  :         PRINTMSG(ZONE_PDD_EP0, (L"ContinueEp0TxTransfer: TX complete\r\n"));

  01698	e59f3494	 ldr         r3, [pc, #0x494]
  0169c	e5933440	 ldr         r3, [r3, #0x440]
  016a0	e3130c02	 tst         r3, #2, 24
  016a4	0a00000f	 beq         |$LN38@ContinueEp|
  016a8	e59f3484	 ldr         r3, [pc, #0x484]
  016ac	e5933440	 ldr         r3, [r3, #0x440]
  016b0	e3130801	 tst         r3, #1, 16
  016b4	0a000004	 beq         |$LN36@ContinueEp|
  016b8	e59f0480	 ldr         r0, [pc, #0x480]
  016bc	eb000000	 bl          CeLogMsg
  016c0	e3a03001	 mov         r3, #1
  016c4	e50b3044	 str         r3, [r11, #-0x44]
  016c8	ea000003	 b           |$LN37@ContinueEp|
  016cc		 |$LN36@ContinueEp|
  016cc	e59f046c	 ldr         r0, [pc, #0x46C]
  016d0	eb000000	 bl          NKDbgPrintfW
  016d4	e3a03000	 mov         r3, #0
  016d8	e50b3044	 str         r3, [r11, #-0x44]
  016dc		 |$LN37@ContinueEp|
  016dc	e3a03001	 mov         r3, #1
  016e0	e50b3040	 str         r3, [r11, #-0x40]
  016e4	ea000001	 b           |$LN39@ContinueEp|
  016e8		 |$LN38@ContinueEp|
  016e8	e3a03000	 mov         r3, #0
  016ec	e50b3040	 str         r3, [r11, #-0x40]
  016f0		 |$LN39@ContinueEp|

; 954  :         pTransfer->dwUsbError = UFN_NO_ERROR;

  016f0	e51b3090	 ldr         r3, [r11, #-0x90]
  016f4	e2832014	 add         r2, r3, #0x14
  016f8	e3a03000	 mov         r3, #0
  016fc	e5823000	 str         r3, [r2]

; 955  :         complete       = TRUE;

  01700	e3a03001	 mov         r3, #1
  01704	e50b3084	 str         r3, [r11, #-0x84]

; 956  :         pEP->epStage   = MGC_END0_START;

  01708	e51b3088	 ldr         r3, [r11, #-0x88]
  0170c	e283201c	 add         r2, r3, #0x1C
  01710	e3a03001	 mov         r3, #1
  01714	e5823000	 str         r3, [r2]

; 957  :         goto cleanUp;

  01718	ea000089	 b           |$cleanUp$47912|
  0171c		 |$LN6@ContinueEp|
  0171c		 |$LN69@ContinueEp|

; 958  :     }
; 959  : 
; 960  :     __try
; 961  :     {
; 962  :         pBuffer = (UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  0171c	e51b3090	 ldr         r3, [r11, #-0x90]
  01720	e2832004	 add         r2, r3, #4
  01724	e51b3090	 ldr         r3, [r11, #-0x90]
  01728	e2833010	 add         r3, r3, #0x10
  0172c	e5922000	 ldr         r2, [r2]
  01730	e5933000	 ldr         r3, [r3]
  01734	e0823003	 add         r3, r2, r3
  01738	e50b30a4	 str         r3, [r11, #-0xA4]

; 963  :         space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  0173c	e51b3090	 ldr         r3, [r11, #-0x90]
  01740	e283200c	 add         r2, r3, #0xC
  01744	e51b3090	 ldr         r3, [r11, #-0x90]
  01748	e2833010	 add         r3, r3, #0x10
  0174c	e5922000	 ldr         r2, [r2]
  01750	e5933000	 ldr         r3, [r3]
  01754	e0423003	 sub         r3, r2, r3
  01758	e50b30a0	 str         r3, [r11, #-0xA0]

; 964  : 
; 965  :         /* How many bytes we can send just now? */
; 966  :         remain = pEP->maxPacketSize;

  0175c	e51b3088	 ldr         r3, [r11, #-0x88]
  01760	e2833008	 add         r3, r3, #8
  01764	e1d330b0	 ldrh        r3, [r3]
  01768	e50b3098	 str         r3, [r11, #-0x98]

; 967  :         if (remain > space) remain = space;

  0176c	e51b2098	 ldr         r2, [r11, #-0x98]
  01770	e51b30a0	 ldr         r3, [r11, #-0xA0]
  01774	e1520003	 cmp         r2, r3
  01778	9a000001	 bls         |$LN4@ContinueEp|
  0177c	e51b30a0	 ldr         r3, [r11, #-0xA0]
  01780	e50b3098	 str         r3, [r11, #-0x98]
  01784		 |$LN4@ContinueEp|

; 968  : 
; 969  :         /* Final ZLP? */
; 970  :         if (remain == 0 && pEP->zlpReq)

  01784	e51b3098	 ldr         r3, [r11, #-0x98]
  01788	e3530000	 cmp         r3, #0
  0178c	1a000008	 bne         |$LN3@ContinueEp|
  01790	e51b3088	 ldr         r3, [r11, #-0x88]
  01794	e2833024	 add         r3, r3, #0x24
  01798	e5933000	 ldr         r3, [r3]
  0179c	e3530000	 cmp         r3, #0
  017a0	0a000003	 beq         |$LN3@ContinueEp|

; 971  :             pEP->zlpReq = FALSE;

  017a4	e51b3088	 ldr         r3, [r11, #-0x88]
  017a8	e2832024	 add         r2, r3, #0x24
  017ac	e3a03000	 mov         r3, #0
  017b0	e5823000	 str         r3, [r2]
  017b4		 |$LN3@ContinueEp|

; 972  : 
; 973  : 		/* Write data to FIFO */
; 974  :         PRINTMSG(ZONE_PDD_EP0, (L"ContinueEp0TxTransfer: Writing %d bytes to FIFO\r\n", remain));

  017b4	e59f3378	 ldr         r3, [pc, #0x378]
  017b8	e5933440	 ldr         r3, [r3, #0x440]
  017bc	e3130c02	 tst         r3, #2, 24
  017c0	0a000011	 beq         |$LN42@ContinueEp|
  017c4	e59f3368	 ldr         r3, [pc, #0x368]
  017c8	e5933440	 ldr         r3, [r3, #0x440]
  017cc	e3130801	 tst         r3, #1, 16
  017d0	0a000005	 beq         |$LN40@ContinueEp|
  017d4	e51b1098	 ldr         r1, [r11, #-0x98]
  017d8	e59f035c	 ldr         r0, [pc, #0x35C]
  017dc	eb000000	 bl          CeLogMsg
  017e0	e3a03001	 mov         r3, #1
  017e4	e50b303c	 str         r3, [r11, #-0x3C]
  017e8	ea000004	 b           |$LN41@ContinueEp|
  017ec		 |$LN40@ContinueEp|
  017ec	e51b1098	 ldr         r1, [r11, #-0x98]
  017f0	e59f0344	 ldr         r0, [pc, #0x344]
  017f4	eb000000	 bl          NKDbgPrintfW
  017f8	e3a03000	 mov         r3, #0
  017fc	e50b303c	 str         r3, [r11, #-0x3C]
  01800		 |$LN41@ContinueEp|
  01800	e3a03001	 mov         r3, #1
  01804	e50b3038	 str         r3, [r11, #-0x38]
  01808	ea000001	 b           |$LN43@ContinueEp|
  0180c		 |$LN42@ContinueEp|
  0180c	e3a03000	 mov         r3, #0
  01810	e50b3038	 str         r3, [r11, #-0x38]
  01814		 |$LN43@ContinueEp|

; 975  : 		WriteFIFO(pPdd, (UCHAR)endPoint, pBuffer, remain);

  01814	e51b3098	 ldr         r3, [r11, #-0x98]
  01818	e51b20a4	 ldr         r2, [r11, #-0xA4]
  0181c	e59b1004	 ldr         r1, [r11, #4]
  01820	e20110ff	 and         r1, r1, #0xFF
  01824	e59b0000	 ldr         r0, [r11]
  01828	eb000000	 bl          WriteFIFO

; 976  : 
; 977  : 		/* We transfered some data */
; 978  :         //pTransfer->cbTransferred = pTransfer->cbBuffer - space;
; 979  :         pTransfer->cbTransferred += remain;

  0182c	e51b3090	 ldr         r3, [r11, #-0x90]
  01830	e2833010	 add         r3, r3, #0x10
  01834	e5932000	 ldr         r2, [r3]
  01838	e51b3098	 ldr         r3, [r11, #-0x98]
  0183c	e0822003	 add         r2, r2, r3
  01840	e51b3090	 ldr         r3, [r11, #-0x90]
  01844	e2833010	 add         r3, r3, #0x10
  01848	e5832000	 str         r2, [r3]
  0184c		 |$LN70@ContinueEp|

; 980  :     }

  0184c	ea00001c	 b           |$LN71@ContinueEp|
  01850		 |$LN66@ContinueEp|

; 982  :     {
; 983  :         pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  01850	e51b3090	 ldr         r3, [r11, #-0x90]
  01854	e2832014	 add         r2, r3, #0x14
  01858	e3a03f41	 mov         r3, #0x41, 30
  0185c	e5823000	 str         r3, [r2]

; 984  :         complete = TRUE;

  01860	e3a03001	 mov         r3, #1
  01864	e50b3084	 str         r3, [r11, #-0x84]

; 985  :         PRINTMSG(ZONE_ERROR, (L"ContinueEp0TxTransfer: Client buffer exception!\r\n"));

  01868	e59f32c4	 ldr         r3, [pc, #0x2C4]
  0186c	e5933440	 ldr         r3, [r3, #0x440]
  01870	e3130001	 tst         r3, #1
  01874	0a00000f	 beq         |$LN46@ContinueEp|
  01878	e59f32b4	 ldr         r3, [pc, #0x2B4]
  0187c	e5933440	 ldr         r3, [r3, #0x440]
  01880	e3130801	 tst         r3, #1, 16
  01884	0a000004	 beq         |$LN44@ContinueEp|
  01888	e59f02a8	 ldr         r0, [pc, #0x2A8]
  0188c	eb000000	 bl          CeLogMsg
  01890	e3a03001	 mov         r3, #1
  01894	e50b3034	 str         r3, [r11, #-0x34]
  01898	ea000003	 b           |$LN45@ContinueEp|
  0189c		 |$LN44@ContinueEp|
  0189c	e59f0294	 ldr         r0, [pc, #0x294]
  018a0	eb000000	 bl          NKDbgPrintfW
  018a4	e3a03000	 mov         r3, #0
  018a8	e50b3034	 str         r3, [r11, #-0x34]
  018ac		 |$LN45@ContinueEp|
  018ac	e3a03001	 mov         r3, #1
  018b0	e50b3030	 str         r3, [r11, #-0x30]
  018b4	ea000001	 b           |$LN47@ContinueEp|
  018b8		 |$LN46@ContinueEp|
  018b8	e3a03000	 mov         r3, #0
  018bc	e50b3030	 str         r3, [r11, #-0x30]
  018c0		 |$LN47@ContinueEp|
  018c0	eaffffff	 b           |$LN71@ContinueEp|
  018c4		 |$LN71@ContinueEp|

; 986  :     }
; 987  : 
; 988  :     /* Inform the USB Core that There is data in the FIFO */
; 989  :     ep0CsrReg &= MGC_EP0_STALL_BITS;

  018c4	e15b39b4	 ldrh        r3, [r11, #-0x94]
  018c8	e2033024	 and         r3, r3, #0x24
  018cc	e1a03803	 mov         r3, r3, lsl #16
  018d0	e1a03823	 mov         r3, r3, lsr #16
  018d4	e14b39b4	 strh        r3, [r11, #-0x94]

; 990  :     ep0CsrReg |= MGC_M_CSR0_TXPKTRDY;

  018d8	e15b39b4	 ldrh        r3, [r11, #-0x94]
  018dc	e3833002	 orr         r3, r3, #2
  018e0	e1a03803	 mov         r3, r3, lsl #16
  018e4	e1a03823	 mov         r3, r3, lsr #16
  018e8	e14b39b4	 strh        r3, [r11, #-0x94]

; 991  : 
; 992  :     /* Check if we have Transmitted Entire Packet */
; 993  :     if (pTransfer->cbTransferred == pTransfer->cbBuffer && !pEP->zlpReq)

  018ec	e51b3090	 ldr         r3, [r11, #-0x90]
  018f0	e2832010	 add         r2, r3, #0x10
  018f4	e51b3090	 ldr         r3, [r11, #-0x90]
  018f8	e283300c	 add         r3, r3, #0xC
  018fc	e5922000	 ldr         r2, [r2]
  01900	e5933000	 ldr         r3, [r3]
  01904	e1520003	 cmp         r2, r3
  01908	1a00000d	 bne         |$LN2@ContinueEp|
  0190c	e51b3088	 ldr         r3, [r11, #-0x88]
  01910	e2833024	 add         r3, r3, #0x24
  01914	e5933000	 ldr         r3, [r3]
  01918	e3530000	 cmp         r3, #0
  0191c	1a000008	 bne         |$LN2@ContinueEp|

; 994  :     {
; 995  :         ep0CsrReg |= MGC_M_CSR0_P_DATAEND;

  01920	e15b39b4	 ldrh        r3, [r11, #-0x94]
  01924	e3833008	 orr         r3, r3, #8
  01928	e1a03803	 mov         r3, r3, lsl #16
  0192c	e1a03823	 mov         r3, r3, lsr #16
  01930	e14b39b4	 strh        r3, [r11, #-0x94]

; 996  : 
; 997  :         /* Now wait for final interrupt before completing TX */
; 998  :         pEP->epStage = MGC_END0_STAGE_STATUSOUT;

  01934	e51b3088	 ldr         r3, [r11, #-0x88]
  01938	e283201c	 add         r2, r3, #0x1C
  0193c	e3a03005	 mov         r3, #5
  01940	e5823000	 str         r3, [r2]
  01944		 |$LN2@ContinueEp|
  01944		 |$cleanUp$47912|

; 999  :     }
; 1000 : 
; 1001 : cleanUp:
; 1002 :     (*pepCtrlReg) = ep0CsrReg;

  01944	e15b29b4	 ldrh        r2, [r11, #-0x94]
  01948	e51b309c	 ldr         r3, [r11, #-0x9C]
  0194c	e1c320b0	 strh        r2, [r3]

; 1003 : 
; 1004 :     /* Leave CriticalSection */
; 1005 :     UNLOCK_ENDPOINT(pPdd);

  01950	e59b3000	 ldr         r3, [r11]
  01954	e2830e27	 add         r0, r3, #0x27, 28
  01958	eb000000	 bl          LeaveCriticalSection

; 1006 : 
; 1007 :     PRINTMSG(FALSE, /*TRUE, ZONE_SEND*/
; 1008 :         (L"Wrote 0x%02x into EP%u_CSR_REG\r\n", ep0CsrReg, endPoint));
; 1009 : 
; 1010 :     /* If transaction is complete we should tell MDD */
; 1011 :     if (complete == TRUE)

  0195c	e51b3084	 ldr         r3, [r11, #-0x84]
  01960	e3530001	 cmp         r3, #1
  01964	1a000069	 bne         |$LN1@ContinueEp|

; 1012 :     {
; 1013 :         PRINTMSG(ZONE_PDD_EP0,
; 1014 :                  (L"ContinueEp0TxTransfer: "
; 1015 :                   L"pTransfer 0x%08x (%d, %d, 0x%0x) - notify complete\r\n",
; 1016 :                   pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1017 :                   pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1018 :                   pTransfer != NULL ? pTransfer->dwUsbError : -1));

  01968	e59f31c4	 ldr         r3, [pc, #0x1C4]
  0196c	e5933440	 ldr         r3, [r3, #0x440]
  01970	e3130c02	 tst         r3, #2, 24
  01974	0a000055	 beq         |$LN62@ContinueEp|
  01978	e59f31b4	 ldr         r3, [pc, #0x1B4]
  0197c	e5933440	 ldr         r3, [r3, #0x440]
  01980	e3130801	 tst         r3, #1, 16
  01984	0a000027	 beq         |$LN60@ContinueEp|
  01988	e51b3090	 ldr         r3, [r11, #-0x90]
  0198c	e3530000	 cmp         r3, #0
  01990	0a000004	 beq         |$LN48@ContinueEp|
  01994	e51b3090	 ldr         r3, [r11, #-0x90]
  01998	e2833014	 add         r3, r3, #0x14
  0199c	e5933000	 ldr         r3, [r3]
  019a0	e50b302c	 str         r3, [r11, #-0x2C]
  019a4	ea000001	 b           |$LN49@ContinueEp|
  019a8		 |$LN48@ContinueEp|
  019a8	e3e03000	 mvn         r3, #0
  019ac	e50b302c	 str         r3, [r11, #-0x2C]
  019b0		 |$LN49@ContinueEp|
  019b0	e51b3090	 ldr         r3, [r11, #-0x90]
  019b4	e3530000	 cmp         r3, #0
  019b8	0a000004	 beq         |$LN50@ContinueEp|
  019bc	e51b3090	 ldr         r3, [r11, #-0x90]
  019c0	e2833010	 add         r3, r3, #0x10
  019c4	e5933000	 ldr         r3, [r3]
  019c8	e50b3028	 str         r3, [r11, #-0x28]
  019cc	ea000001	 b           |$LN51@ContinueEp|
  019d0		 |$LN50@ContinueEp|
  019d0	e3a03000	 mov         r3, #0
  019d4	e50b3028	 str         r3, [r11, #-0x28]
  019d8		 |$LN51@ContinueEp|
  019d8	e51b3090	 ldr         r3, [r11, #-0x90]
  019dc	e3530000	 cmp         r3, #0
  019e0	0a000004	 beq         |$LN52@ContinueEp|
  019e4	e51b3090	 ldr         r3, [r11, #-0x90]
  019e8	e283300c	 add         r3, r3, #0xC
  019ec	e5933000	 ldr         r3, [r3]
  019f0	e50b3024	 str         r3, [r11, #-0x24]
  019f4	ea000001	 b           |$LN53@ContinueEp|
  019f8		 |$LN52@ContinueEp|
  019f8	e3a03000	 mov         r3, #0
  019fc	e50b3024	 str         r3, [r11, #-0x24]
  01a00		 |$LN53@ContinueEp|
  01a00	e51b302c	 ldr         r3, [r11, #-0x2C]
  01a04	e58d3000	 str         r3, [sp]
  01a08	e51b3028	 ldr         r3, [r11, #-0x28]
  01a0c	e51b2024	 ldr         r2, [r11, #-0x24]
  01a10	e51b1090	 ldr         r1, [r11, #-0x90]
  01a14	e59f0114	 ldr         r0, [pc, #0x114]
  01a18	eb000000	 bl          CeLogMsg
  01a1c	e3a03001	 mov         r3, #1
  01a20	e50b3020	 str         r3, [r11, #-0x20]
  01a24	ea000026	 b           |$LN61@ContinueEp|
  01a28		 |$LN60@ContinueEp|
  01a28	e51b3090	 ldr         r3, [r11, #-0x90]
  01a2c	e3530000	 cmp         r3, #0
  01a30	0a000004	 beq         |$LN54@ContinueEp|
  01a34	e51b3090	 ldr         r3, [r11, #-0x90]
  01a38	e2833014	 add         r3, r3, #0x14
  01a3c	e5933000	 ldr         r3, [r3]
  01a40	e50b301c	 str         r3, [r11, #-0x1C]
  01a44	ea000001	 b           |$LN55@ContinueEp|
  01a48		 |$LN54@ContinueEp|
  01a48	e3e03000	 mvn         r3, #0
  01a4c	e50b301c	 str         r3, [r11, #-0x1C]
  01a50		 |$LN55@ContinueEp|
  01a50	e51b3090	 ldr         r3, [r11, #-0x90]
  01a54	e3530000	 cmp         r3, #0
  01a58	0a000004	 beq         |$LN56@ContinueEp|
  01a5c	e51b3090	 ldr         r3, [r11, #-0x90]
  01a60	e2833010	 add         r3, r3, #0x10
  01a64	e5933000	 ldr         r3, [r3]
  01a68	e50b3018	 str         r3, [r11, #-0x18]
  01a6c	ea000001	 b           |$LN57@ContinueEp|
  01a70		 |$LN56@ContinueEp|
  01a70	e3a03000	 mov         r3, #0
  01a74	e50b3018	 str         r3, [r11, #-0x18]
  01a78		 |$LN57@ContinueEp|
  01a78	e51b3090	 ldr         r3, [r11, #-0x90]
  01a7c	e3530000	 cmp         r3, #0
  01a80	0a000004	 beq         |$LN58@ContinueEp|
  01a84	e51b3090	 ldr         r3, [r11, #-0x90]
  01a88	e283300c	 add         r3, r3, #0xC
  01a8c	e5933000	 ldr         r3, [r3]
  01a90	e50b3014	 str         r3, [r11, #-0x14]
  01a94	ea000001	 b           |$LN59@ContinueEp|
  01a98		 |$LN58@ContinueEp|
  01a98	e3a03000	 mov         r3, #0
  01a9c	e50b3014	 str         r3, [r11, #-0x14]
  01aa0		 |$LN59@ContinueEp|
  01aa0	e51b301c	 ldr         r3, [r11, #-0x1C]
  01aa4	e58d3000	 str         r3, [sp]
  01aa8	e51b3018	 ldr         r3, [r11, #-0x18]
  01aac	e51b2014	 ldr         r2, [r11, #-0x14]
  01ab0	e51b1090	 ldr         r1, [r11, #-0x90]
  01ab4	e59f0074	 ldr         r0, [pc, #0x74]
  01ab8	eb000000	 bl          NKDbgPrintfW
  01abc	e3a03000	 mov         r3, #0
  01ac0	e50b3020	 str         r3, [r11, #-0x20]
  01ac4		 |$LN61@ContinueEp|
  01ac4	e3a03001	 mov         r3, #1
  01ac8	e50b3010	 str         r3, [r11, #-0x10]
  01acc	ea000001	 b           |$LN63@ContinueEp|
  01ad0		 |$LN62@ContinueEp|
  01ad0	e3a03000	 mov         r3, #0
  01ad4	e50b3010	 str         r3, [r11, #-0x10]
  01ad8		 |$LN63@ContinueEp|

; 1019 : 
; 1020 :         pEP->pTransfer = NULL;

  01ad8	e51b3088	 ldr         r3, [r11, #-0x88]
  01adc	e2832020	 add         r2, r3, #0x20
  01ae0	e3a03000	 mov         r3, #0
  01ae4	e5823000	 str         r3, [r2]

; 1021 :         pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE,
; 1022 :                          (DWORD)pTransfer);

  01ae8	e51b2090	 ldr         r2, [r11, #-0x90]
  01aec	e3a01064	 mov         r1, #0x64
  01af0	e59b3000	 ldr         r3, [r11]
  01af4	e2833010	 add         r3, r3, #0x10
  01af8	e5930000	 ldr         r0, [r3]
  01afc	e59b3000	 ldr         r3, [r11]
  01b00	e2833014	 add         r3, r3, #0x14
  01b04	e5933000	 ldr         r3, [r3]
  01b08	e1a0e00f	 mov         lr, pc
  01b0c	e12fff13	 bx          r3
  01b10		 |$LN1@ContinueEp|
  01b10		 |$done$47904|
  01b10		 |$LN64@ContinueEp|

; 1023 :     }
; 1024 : 
; 1025 : done:
; 1026 :     return ;
; 1027 : }

  01b10	e24bd00c	 sub         sp, r11, #0xC
  01b14	e89d6800	 ldmia       sp, {r11, sp, lr}
  01b18	e12fff1e	 bx          lr

			 ENDP  ; |ContinueEp0TxTransfer|

  01b1c		 |$LN65@ContinueEp|
  01b1c		 |$LN74@ContinueEp|

; 981  :     __except(EXCEPTION_EXECUTE_HANDLER)

  01b1c	e52de004	 str         lr, [sp, #-4]!
  01b20	e24dd004	 sub         sp, sp, #4
  01b24		 |$LN68@ContinueEp|
  01b24		 |$LN77@ContinueEp|
  01b24	e3a00001	 mov         r0, #1
  01b28		 |$LN67@ContinueEp|
  01b28	e28dd004	 add         sp, sp, #4
  01b2c	e49df004	 ldr         pc, [sp], #4
  01b30		 |$LN79@ContinueEp|
  01b30		 |$LN80@ContinueEp|
  01b30	00000000	 DCD         |??_C@_1JI@DBBJKFPC@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@|
  01b34		 |$LN81@ContinueEp|
  01b34	00000000	 DCD         |dpCurSettings|
  01b38		 |$LN82@ContinueEp|
  01b38	00000000	 DCD         |??_C@_1GE@DIHKIOJL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@|
  01b3c		 |$LN83@ContinueEp|
  01b3c	00000000	 DCD         |??_C@_1GE@KIOKMDN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF@|
  01b40		 |$LN84@ContinueEp|
  01b40	00000000	 DCD         |??_C@_1EK@EFPMDAOF@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe@|
  01b44		 |$LN85@ContinueEp|
  01b44	00000000	 DCD         |??_C@_1FA@PIGNFLGJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5@|
  01b48		 |$LN86@ContinueEp|
  01b48	00000000	 DCD         |??_C@_1HE@PLBLDDGJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@|
  01b4c		 |$LN87@ContinueEp|
  01b4c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01b50		 |$LN88@ContinueEp|
  01b50	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01b54		 |$LN78@ContinueEp|
  01b54		 |$LN76@ContinueEp|
	EXPORT	|??_C@_1KA@FGPAKDNB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@HGHNNFMK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@LDKCJJJF@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@IFHOFDOO@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@PMGODKCP@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@GLEDEEDN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@HNJALGAC@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@PDNNCAHI@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|ContinueTxTransfer|

  00050			 AREA	 |.pdata|, PDATA
|$T49639| DCD	|$LN79@ContinueTx|
	DCD	0xc0024805
|$T49641| DCD	|$LN69@ContinueTx|
	DCD	0x40001002

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@FGPAKDNB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "y", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@HGHNNFMK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAb@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, " "
	DCB	0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "t", 0x0, "e"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@LDKCJJJF@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "0", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "l", 0x0, "i", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@IFHOFDOO@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAi@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "x", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "f", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@PMGODKCP@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, ",", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "c"
	DCB	0x0, "k", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@GLEDEEDN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "T", 0x0, "X", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@HNJALGAC@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@PDNNCAHI@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00018			 AREA	 |.xdata|, DATA
|$T49637| DCD	0x1
	DCD	|$LN73@ContinueTx|
	DCD	|$LN74@ContinueTx|
	DCD	|$LN69@ContinueTx|
	DCD	|$LN70@ContinueTx|
; Function compile flags: /Odtp

  01b54			 AREA	 |.text|, CODE, ARM

  01b54	00000000	 DCD         |__C_specific_handler|
  01b58	00000000	 DCD         |$T49637|

  01b5c		 |ContinueTxTransfer| PROC

; 1043 : {

  01b5c		 |$LN79@ContinueTx|
  01b5c	e1a0c00d	 mov         r12, sp
  01b60	e92d0003	 stmdb       sp!, {r0, r1}
  01b64	e92d5800	 stmdb       sp!, {r11, r12, lr}
  01b68	e28db00c	 add         r11, sp, #0xC
  01b6c	e24dd0c8	 sub         sp, sp, #0xC8
  01b70		 |$LN77@ContinueTx|

; 1044 :     CSL_UsbRegs *pUsbdRegs = pPdd->pUsbdRegs;

  01b70	e59b3000	 ldr         r3, [r11]
  01b74	e283301c	 add         r3, r3, #0x1C
  01b78	e5933000	 ldr         r3, [r3]
  01b7c	e50b30b8	 str         r3, [r11, #-0xB8]

; 1045 :     UsbFnEp     *pEP = &pPdd->ep[endPoint];

  01b80	e59b3000	 ldr         r3, [r11]
  01b84	e2831fa1	 add         r1, r3, #0xA1, 30
  01b88	e59b2004	 ldr         r2, [r11, #4]
  01b8c	e3a0303c	 mov         r3, #0x3C
  01b90	e0030392	 mul         r3, r2, r3
  01b94	e0813003	 add         r3, r1, r3
  01b98	e50b30b4	 str         r3, [r11, #-0xB4]

; 1046 :     STransfer   *pTransfer = pEP->pTransfer;

  01b9c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  01ba0	e2833020	 add         r3, r3, #0x20
  01ba4	e5933000	 ldr         r3, [r3]
  01ba8	e50b30bc	 str         r3, [r11, #-0xBC]

; 1047 :     BOOL complete = FALSE;

  01bac	e3a03000	 mov         r3, #0
  01bb0	e50b30ac	 str         r3, [r11, #-0xAC]

; 1048 :     volatile UINT16 *pepCtrlReg;
; 1049 :     UINT16  epCsrReg;
; 1050 : 	DWORD space = 0;

  01bb4	e3a03000	 mov         r3, #0
  01bb8	e50b30c4	 str         r3, [r11, #-0xC4]

; 1051 :     DWORD count = 0;

  01bbc	e3a03000	 mov         r3, #0
  01bc0	e50b30c8	 str         r3, [r11, #-0xC8]

; 1052 :     UCHAR *pBuffer = NULL;

  01bc4	e3a03000	 mov         r3, #0
  01bc8	e50b30cc	 str         r3, [r11, #-0xCC]

; 1053 : 
; 1054 :     /* EP0 has its own TX handler */
; 1055 :     DEBUGCHK(endPoint != 0);

  01bcc	e59b3004	 ldr         r3, [r11, #4]
  01bd0	e3530000	 cmp         r3, #0
  01bd4	0a000002	 beq         |$LN10@ContinueTx|
  01bd8	e3a03001	 mov         r3, #1
  01bdc	e50b3080	 str         r3, [r11, #-0x80]
  01be0	ea000008	 b           |$LN11@ContinueTx|
  01be4		 |$LN10@ContinueTx|
  01be4	e3a03b01	 mov         r3, #1, 22
  01be8	e383301f	 orr         r3, r3, #0x1F
  01bec	e59f28b4	 ldr         r2, [pc, #0x8B4]
  01bf0	e59f189c	 ldr         r1, [pc, #0x89C]
  01bf4	e59f08a8	 ldr         r0, [pc, #0x8A8]
  01bf8	eb000000	 bl          NKDbgPrintfW
  01bfc	e6000010	 __debugbreak_ce
  01c00	e3a03000	 mov         r3, #0
  01c04	e50b3080	 str         r3, [r11, #-0x80]
  01c08		 |$LN11@ContinueTx|

; 1056 : 
; 1057 :     PRINTMSG(ZONE_PDD_TX,
; 1058 :              (L"ContinueTxTransfer: EP %d, pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 1059 :               endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1060 :               pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1061 :               pTransfer != NULL ? pTransfer->dwUsbError : -1));

  01c08	e59f3884	 ldr         r3, [pc, #0x884]
  01c0c	e5933440	 ldr         r3, [r3, #0x440]
  01c10	e3130b02	 tst         r3, #2, 22
  01c14	0a000059	 beq         |$LN26@ContinueTx|
  01c18	e59f3874	 ldr         r3, [pc, #0x874]
  01c1c	e5933440	 ldr         r3, [r3, #0x440]
  01c20	e3130801	 tst         r3, #1, 16
  01c24	0a000029	 beq         |$LN24@ContinueTx|
  01c28	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01c2c	e3530000	 cmp         r3, #0
  01c30	0a000004	 beq         |$LN12@ContinueTx|
  01c34	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01c38	e2833014	 add         r3, r3, #0x14
  01c3c	e5933000	 ldr         r3, [r3]
  01c40	e50b307c	 str         r3, [r11, #-0x7C]
  01c44	ea000001	 b           |$LN13@ContinueTx|
  01c48		 |$LN12@ContinueTx|
  01c48	e3e03000	 mvn         r3, #0
  01c4c	e50b307c	 str         r3, [r11, #-0x7C]
  01c50		 |$LN13@ContinueTx|
  01c50	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01c54	e3530000	 cmp         r3, #0
  01c58	0a000004	 beq         |$LN14@ContinueTx|
  01c5c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01c60	e2833010	 add         r3, r3, #0x10
  01c64	e5933000	 ldr         r3, [r3]
  01c68	e50b3078	 str         r3, [r11, #-0x78]
  01c6c	ea000001	 b           |$LN15@ContinueTx|
  01c70		 |$LN14@ContinueTx|
  01c70	e3a03000	 mov         r3, #0
  01c74	e50b3078	 str         r3, [r11, #-0x78]
  01c78		 |$LN15@ContinueTx|
  01c78	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01c7c	e3530000	 cmp         r3, #0
  01c80	0a000004	 beq         |$LN16@ContinueTx|
  01c84	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01c88	e283300c	 add         r3, r3, #0xC
  01c8c	e5933000	 ldr         r3, [r3]
  01c90	e50b3074	 str         r3, [r11, #-0x74]
  01c94	ea000001	 b           |$LN17@ContinueTx|
  01c98		 |$LN16@ContinueTx|
  01c98	e3a03000	 mov         r3, #0
  01c9c	e50b3074	 str         r3, [r11, #-0x74]
  01ca0		 |$LN17@ContinueTx|
  01ca0	e51b307c	 ldr         r3, [r11, #-0x7C]
  01ca4	e58d3004	 str         r3, [sp, #4]
  01ca8	e51b3078	 ldr         r3, [r11, #-0x78]
  01cac	e58d3000	 str         r3, [sp]
  01cb0	e51b3074	 ldr         r3, [r11, #-0x74]
  01cb4	e51b20bc	 ldr         r2, [r11, #-0xBC]
  01cb8	e59b1004	 ldr         r1, [r11, #4]
  01cbc	e59f07f4	 ldr         r0, [pc, #0x7F4]
  01cc0	eb000000	 bl          CeLogMsg
  01cc4	e3a03001	 mov         r3, #1
  01cc8	e50b3070	 str         r3, [r11, #-0x70]
  01ccc	ea000028	 b           |$LN25@ContinueTx|
  01cd0		 |$LN24@ContinueTx|
  01cd0	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01cd4	e3530000	 cmp         r3, #0
  01cd8	0a000004	 beq         |$LN18@ContinueTx|
  01cdc	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01ce0	e2833014	 add         r3, r3, #0x14
  01ce4	e5933000	 ldr         r3, [r3]
  01ce8	e50b306c	 str         r3, [r11, #-0x6C]
  01cec	ea000001	 b           |$LN19@ContinueTx|
  01cf0		 |$LN18@ContinueTx|
  01cf0	e3e03000	 mvn         r3, #0
  01cf4	e50b306c	 str         r3, [r11, #-0x6C]
  01cf8		 |$LN19@ContinueTx|
  01cf8	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01cfc	e3530000	 cmp         r3, #0
  01d00	0a000004	 beq         |$LN20@ContinueTx|
  01d04	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01d08	e2833010	 add         r3, r3, #0x10
  01d0c	e5933000	 ldr         r3, [r3]
  01d10	e50b3068	 str         r3, [r11, #-0x68]
  01d14	ea000001	 b           |$LN21@ContinueTx|
  01d18		 |$LN20@ContinueTx|
  01d18	e3a03000	 mov         r3, #0
  01d1c	e50b3068	 str         r3, [r11, #-0x68]
  01d20		 |$LN21@ContinueTx|
  01d20	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01d24	e3530000	 cmp         r3, #0
  01d28	0a000004	 beq         |$LN22@ContinueTx|
  01d2c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01d30	e283300c	 add         r3, r3, #0xC
  01d34	e5933000	 ldr         r3, [r3]
  01d38	e50b3064	 str         r3, [r11, #-0x64]
  01d3c	ea000001	 b           |$LN23@ContinueTx|
  01d40		 |$LN22@ContinueTx|
  01d40	e3a03000	 mov         r3, #0
  01d44	e50b3064	 str         r3, [r11, #-0x64]
  01d48		 |$LN23@ContinueTx|
  01d48	e51b306c	 ldr         r3, [r11, #-0x6C]
  01d4c	e58d3004	 str         r3, [sp, #4]
  01d50	e51b3068	 ldr         r3, [r11, #-0x68]
  01d54	e58d3000	 str         r3, [sp]
  01d58	e51b3064	 ldr         r3, [r11, #-0x64]
  01d5c	e51b20bc	 ldr         r2, [r11, #-0xBC]
  01d60	e59b1004	 ldr         r1, [r11, #4]
  01d64	e59f074c	 ldr         r0, [pc, #0x74C]
  01d68	eb000000	 bl          NKDbgPrintfW
  01d6c	e3a03000	 mov         r3, #0
  01d70	e50b3070	 str         r3, [r11, #-0x70]
  01d74		 |$LN25@ContinueTx|
  01d74	e3a03001	 mov         r3, #1
  01d78	e50b3060	 str         r3, [r11, #-0x60]
  01d7c	ea000001	 b           |$LN27@ContinueTx|
  01d80		 |$LN26@ContinueTx|
  01d80	e3a03000	 mov         r3, #0
  01d84	e50b3060	 str         r3, [r11, #-0x60]
  01d88		 |$LN27@ContinueTx|

; 1062 : 
; 1063 :     if (pTransfer == NULL)

  01d88	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01d8c	e3530000	 cmp         r3, #0
  01d90	1a00001c	 bne         |$LN7@ContinueTx|

; 1064 :     {
; 1065 :         PRINTMSG(ZONE_ERROR, (L"ContinueTxTransfer: EP %d, Transfer NULL!\r\n", endPoint));

  01d94	e59f36f8	 ldr         r3, [pc, #0x6F8]
  01d98	e5933440	 ldr         r3, [r3, #0x440]
  01d9c	e3130001	 tst         r3, #1
  01da0	0a000011	 beq         |$LN30@ContinueTx|
  01da4	e59f36e8	 ldr         r3, [pc, #0x6E8]
  01da8	e5933440	 ldr         r3, [r3, #0x440]
  01dac	e3130801	 tst         r3, #1, 16
  01db0	0a000005	 beq         |$LN28@ContinueTx|
  01db4	e59b1004	 ldr         r1, [r11, #4]
  01db8	e59f06f4	 ldr         r0, [pc, #0x6F4]
  01dbc	eb000000	 bl          CeLogMsg
  01dc0	e3a03001	 mov         r3, #1
  01dc4	e50b305c	 str         r3, [r11, #-0x5C]
  01dc8	ea000004	 b           |$LN29@ContinueTx|
  01dcc		 |$LN28@ContinueTx|
  01dcc	e59b1004	 ldr         r1, [r11, #4]
  01dd0	e59f06dc	 ldr         r0, [pc, #0x6DC]
  01dd4	eb000000	 bl          NKDbgPrintfW
  01dd8	e3a03000	 mov         r3, #0
  01ddc	e50b305c	 str         r3, [r11, #-0x5C]
  01de0		 |$LN29@ContinueTx|
  01de0	e3a03001	 mov         r3, #1
  01de4	e50b3058	 str         r3, [r11, #-0x58]
  01de8	ea000001	 b           |$LN31@ContinueTx|
  01dec		 |$LN30@ContinueTx|
  01dec	e3a03000	 mov         r3, #0
  01df0	e50b3058	 str         r3, [r11, #-0x58]
  01df4		 |$LN31@ContinueTx|

; 1066 :         pEP->epStage = MGC_END0_START;

  01df4	e51b30b4	 ldr         r3, [r11, #-0xB4]
  01df8	e283201c	 add         r2, r3, #0x1C
  01dfc	e3a03001	 mov         r3, #1
  01e00	e5823000	 str         r3, [r2]

; 1067 :         goto done;

  01e04	ea000199	 b           |$done$47964|
  01e08		 |$LN7@ContinueTx|

; 1068 :     }
; 1069 : 
; 1070 :     /* Enter CriticalSection */
; 1071 :     LOCK_ENDPOINT(pPdd);

  01e08	e59b3000	 ldr         r3, [r11]
  01e0c	e2830e27	 add         r0, r3, #0x27, 28
  01e10	eb000000	 bl          EnterCriticalSection

; 1072 : 
; 1073 :     pEP->usingDma = FALSE;

  01e14	e51b30b4	 ldr         r3, [r11, #-0xB4]
  01e18	e2832028	 add         r2, r3, #0x28
  01e1c	e3a03000	 mov         r3, #0
  01e20	e5823000	 str         r3, [r2]

; 1074 : 
; 1075 :     pepCtrlReg = &pUsbdRegs->EPCSR[ endPoint ].PERI_TXCSR;

  01e24	e51b30b8	 ldr         r3, [r11, #-0xB8]
  01e28	e2831c05	 add         r1, r3, #5, 24
  01e2c	e59b2004	 ldr         r2, [r11, #4]
  01e30	e3a03010	 mov         r3, #0x10
  01e34	e0030392	 mul         r3, r2, r3
  01e38	e0813003	 add         r3, r1, r3
  01e3c	e2833002	 add         r3, r3, #2
  01e40	e50b30c0	 str         r3, [r11, #-0xC0]

; 1076 :     epCsrReg = (*pepCtrlReg);

  01e44	e51b30c0	 ldr         r3, [r11, #-0xC0]
  01e48	e1d330b0	 ldrh        r3, [r3]
  01e4c	e14b3bb0	 strh        r3, [r11, #-0xB0]

; 1077 : 
; 1078 :     /* Is this final interrupt of transfer? */
; 1079 :     if ((pTransfer->cbTransferred == pTransfer->cbBuffer) &&
; 1080 :         (pEP->zeroLength == FALSE))

  01e50	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01e54	e2832010	 add         r2, r3, #0x10
  01e58	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01e5c	e283300c	 add         r3, r3, #0xC
  01e60	e5922000	 ldr         r2, [r2]
  01e64	e5933000	 ldr         r3, [r3]
  01e68	e1520003	 cmp         r2, r3
  01e6c	1a000034	 bne         |$LN6@ContinueTx|
  01e70	e51b30b4	 ldr         r3, [r11, #-0xB4]
  01e74	e2833014	 add         r3, r3, #0x14
  01e78	e5933000	 ldr         r3, [r3]
  01e7c	e3530000	 cmp         r3, #0
  01e80	1a00002f	 bne         |$LN6@ContinueTx|

; 1081 :     {
; 1082 :         PRINTMSG(ZONE_PDD_TX, (L"ContinueTxTransfer: EP %d, TX complete\r\n", endPoint));

  01e84	e59f3608	 ldr         r3, [pc, #0x608]
  01e88	e5933440	 ldr         r3, [r3, #0x440]
  01e8c	e3130b02	 tst         r3, #2, 22
  01e90	0a000011	 beq         |$LN34@ContinueTx|
  01e94	e59f35f8	 ldr         r3, [pc, #0x5F8]
  01e98	e5933440	 ldr         r3, [r3, #0x440]
  01e9c	e3130801	 tst         r3, #1, 16
  01ea0	0a000005	 beq         |$LN32@ContinueTx|
  01ea4	e59b1004	 ldr         r1, [r11, #4]
  01ea8	e59f0600	 ldr         r0, [pc, #0x600]
  01eac	eb000000	 bl          CeLogMsg
  01eb0	e3a03001	 mov         r3, #1
  01eb4	e50b3054	 str         r3, [r11, #-0x54]
  01eb8	ea000004	 b           |$LN33@ContinueTx|
  01ebc		 |$LN32@ContinueTx|
  01ebc	e59b1004	 ldr         r1, [r11, #4]
  01ec0	e59f05e8	 ldr         r0, [pc, #0x5E8]
  01ec4	eb000000	 bl          NKDbgPrintfW
  01ec8	e3a03000	 mov         r3, #0
  01ecc	e50b3054	 str         r3, [r11, #-0x54]
  01ed0		 |$LN33@ContinueTx|
  01ed0	e3a03001	 mov         r3, #1
  01ed4	e50b3050	 str         r3, [r11, #-0x50]
  01ed8	ea000001	 b           |$LN35@ContinueTx|
  01edc		 |$LN34@ContinueTx|
  01edc	e3a03000	 mov         r3, #0
  01ee0	e50b3050	 str         r3, [r11, #-0x50]
  01ee4		 |$LN35@ContinueTx|

; 1083 :         pTransfer->dwUsbError = UFN_NO_ERROR;

  01ee4	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01ee8	e2832014	 add         r2, r3, #0x14
  01eec	e3a03000	 mov         r3, #0
  01ef0	e5823000	 str         r3, [r2]

; 1084 :         complete = TRUE;

  01ef4	e3a03001	 mov         r3, #1
  01ef8	e50b30ac	 str         r3, [r11, #-0xAC]

; 1085 :         pEP->epStage = MGC_END0_START;

  01efc	e51b30b4	 ldr         r3, [r11, #-0xB4]
  01f00	e283201c	 add         r2, r3, #0x1C
  01f04	e3a03001	 mov         r3, #1
  01f08	e5823000	 str         r3, [r2]

; 1086 :         epCsrReg &= ~(MGC_M_TXCSR_FIFONOTEMPTY | MGC_M_TXCSR_P_UNDERRUN);

  01f0c	e15b3bb0	 ldrh        r3, [r11, #-0xB0]
  01f10	e1a02003	 mov         r2, r3
  01f14	e3e03006	 mvn         r3, #6
  01f18	e0023003	 and         r3, r2, r3
  01f1c	e1a03803	 mov         r3, r3, lsl #16
  01f20	e1a03823	 mov         r3, r3, lsr #16
  01f24	e14b3bb0	 strh        r3, [r11, #-0xB0]

; 1087 : 
; 1088 : #ifdef CPPI_DMA_SUPPORT
; 1089 :         /* For DMA case, TX interrupt only enabled when required */
; 1090 : 		pUsbdRegs->EP_INTMSKCLRR = (1 << endPoint) << USB_OTG_TXINT_SHIFT;

  01f28	e59b2004	 ldr         r2, [r11, #4]
  01f2c	e3a03001	 mov         r3, #1
  01f30	e1a02213	 mov         r2, r3, lsl r2
  01f34	e51b30b8	 ldr         r3, [r11, #-0xB8]
  01f38	e2833034	 add         r3, r3, #0x34
  01f3c	e5832000	 str         r2, [r3]

; 1091 : #endif
; 1092 : 
; 1093 :         /* NOTE: Class driver is responsible for sending zero len packet if
; 1094 :          * the transfer was a multiple of the FIFO Size.
; 1095 :          */
; 1096 :         goto cleanUp;

  01f40	ea0000d3	 b           |$cleanUp$47968|
  01f44		 |$LN6@ContinueTx|

; 1097 :     }
; 1098 : 
; 1099 :     /* Packet TX should always have completed */
; 1100 :     if ((epCsrReg & MGC_M_TXCSR_TXPKTRDY) != 0)

  01f44	e15b3bb0	 ldrh        r3, [r11, #-0xB0]
  01f48	e3130001	 tst         r3, #1
  01f4c	0a000022	 beq         |$LN5@ContinueTx|

; 1101 :     {
; 1102 :         PRINTMSG(ZONE_ERROR, (L"ContinueTxTransfer: EP %d, Error, packet TX not complete!\r\n", endPoint));

  01f50	e59f353c	 ldr         r3, [pc, #0x53C]
  01f54	e5933440	 ldr         r3, [r3, #0x440]
  01f58	e3130001	 tst         r3, #1
  01f5c	0a000011	 beq         |$LN38@ContinueTx|
  01f60	e59f352c	 ldr         r3, [pc, #0x52C]
  01f64	e5933440	 ldr         r3, [r3, #0x440]
  01f68	e3130801	 tst         r3, #1, 16
  01f6c	0a000005	 beq         |$LN36@ContinueTx|
  01f70	e59b1004	 ldr         r1, [r11, #4]
  01f74	e59f0530	 ldr         r0, [pc, #0x530]
  01f78	eb000000	 bl          CeLogMsg
  01f7c	e3a03001	 mov         r3, #1
  01f80	e50b304c	 str         r3, [r11, #-0x4C]
  01f84	ea000004	 b           |$LN37@ContinueTx|
  01f88		 |$LN36@ContinueTx|
  01f88	e59b1004	 ldr         r1, [r11, #4]
  01f8c	e59f0518	 ldr         r0, [pc, #0x518]
  01f90	eb000000	 bl          NKDbgPrintfW
  01f94	e3a03000	 mov         r3, #0
  01f98	e50b304c	 str         r3, [r11, #-0x4C]
  01f9c		 |$LN37@ContinueTx|
  01f9c	e3a03001	 mov         r3, #1
  01fa0	e50b3048	 str         r3, [r11, #-0x48]
  01fa4	ea000001	 b           |$LN39@ContinueTx|
  01fa8		 |$LN38@ContinueTx|
  01fa8	e3a03000	 mov         r3, #0
  01fac	e50b3048	 str         r3, [r11, #-0x48]
  01fb0		 |$LN39@ContinueTx|

; 1103 :         DEBUGCHK(0);

  01fb0	e3a03b01	 mov         r3, #1, 22
  01fb4	e383304f	 orr         r3, r3, #0x4F
  01fb8	e59f24e8	 ldr         r2, [pc, #0x4E8]
  01fbc	e59f14d0	 ldr         r1, [pc, #0x4D0]
  01fc0	e59f04dc	 ldr         r0, [pc, #0x4DC]
  01fc4	eb000000	 bl          NKDbgPrintfW
  01fc8	e6000010	 __debugbreak_ce

; 1104 :         UNLOCK_ENDPOINT (pPdd);

  01fcc	e59b3000	 ldr         r3, [r11]
  01fd0	e2830e27	 add         r0, r3, #0x27, 28
  01fd4	eb000000	 bl          LeaveCriticalSection

; 1105 :         goto done;

  01fd8	ea000124	 b           |$done$47964|
  01fdc		 |$LN5@ContinueTx|

; 1106 :     }
; 1107 : 
; 1108 :     /* This EP has entered the TX State wherein it Transmits
; 1109 :      * data to the Host. Depending on whether the Size fits
; 1110 :      * the FIFO in one single write or multiple writes, the EP
; 1111 :      * will return back to IDLE in this iteration itself or
; 1112 :      * further iterations
; 1113 :      */
; 1114 :     pEP->epStage = MGC_END0_STAGE_TX;

  01fdc	e51b30b4	 ldr         r3, [r11, #-0xB4]
  01fe0	e283201c	 add         r2, r3, #0x1C
  01fe4	e3a03002	 mov         r3, #2
  01fe8	e5823000	 str         r3, [r2]
  01fec		 |$LN73@ContinueTx|

; 1115 : 
; 1116 :     __try
; 1117 :     {
; 1118 :         pBuffer = (UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  01fec	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01ff0	e2832004	 add         r2, r3, #4
  01ff4	e51b30bc	 ldr         r3, [r11, #-0xBC]
  01ff8	e2833010	 add         r3, r3, #0x10
  01ffc	e5922000	 ldr         r2, [r2]
  02000	e5933000	 ldr         r3, [r3]
  02004	e0823003	 add         r3, r2, r3
  02008	e50b30cc	 str         r3, [r11, #-0xCC]

; 1119 :         space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  0200c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02010	e283200c	 add         r2, r3, #0xC
  02014	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02018	e2833010	 add         r3, r3, #0x10
  0201c	e5922000	 ldr         r2, [r2]
  02020	e5933000	 ldr         r3, [r3]
  02024	e0423003	 sub         r3, r2, r3
  02028	e50b30c4	 str         r3, [r11, #-0xC4]

; 1120 : 
; 1121 :         /* Non Zero Endpoint: No zero length padding needed. */
; 1122 :         pEP->zeroLength = FALSE;

  0202c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02030	e2832014	 add         r2, r3, #0x14
  02034	e3a03000	 mov         r3, #0
  02038	e5823000	 str         r3, [r2]

; 1123 : 
; 1124 :         /* How many bytes we can send just now? */
; 1125 :         count = pEP->maxPacketSize;

  0203c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02040	e2833008	 add         r3, r3, #8
  02044	e1d330b0	 ldrh        r3, [r3]
  02048	e50b30c8	 str         r3, [r11, #-0xC8]

; 1126 :         if (count > space) count = space;

  0204c	e51b20c8	 ldr         r2, [r11, #-0xC8]
  02050	e51b30c4	 ldr         r3, [r11, #-0xC4]
  02054	e1520003	 cmp         r2, r3
  02058	9a000001	 bls         |$LN3@ContinueTx|
  0205c	e51b30c4	 ldr         r3, [r11, #-0xC4]
  02060	e50b30c8	 str         r3, [r11, #-0xC8]
  02064		 |$LN3@ContinueTx|

; 1127 : 
; 1128 :         PRINTMSG(ZONE_PDD_TX,
; 1129 :                  (L"ContinueTxTransfer: EP %d, Writing %d bytes, maxSize %d, left %d\r\n",
; 1130 :                   endPoint, count, pEP->maxPacketSize, space));

  02064	e59f3428	 ldr         r3, [pc, #0x428]
  02068	e5933440	 ldr         r3, [r3, #0x440]
  0206c	e3130b02	 tst         r3, #2, 22
  02070	0a00001d	 beq         |$LN42@ContinueTx|
  02074	e59f3418	 ldr         r3, [pc, #0x418]
  02078	e5933440	 ldr         r3, [r3, #0x440]
  0207c	e3130801	 tst         r3, #1, 16
  02080	0a00000b	 beq         |$LN40@ContinueTx|
  02084	e51b30c4	 ldr         r3, [r11, #-0xC4]
  02088	e58d3000	 str         r3, [sp]
  0208c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02090	e2833008	 add         r3, r3, #8
  02094	e1d330b0	 ldrh        r3, [r3]
  02098	e51b20c8	 ldr         r2, [r11, #-0xC8]
  0209c	e59b1004	 ldr         r1, [r11, #4]
  020a0	e59f03f8	 ldr         r0, [pc, #0x3F8]
  020a4	eb000000	 bl          CeLogMsg
  020a8	e3a03001	 mov         r3, #1
  020ac	e50b3044	 str         r3, [r11, #-0x44]
  020b0	ea00000a	 b           |$LN41@ContinueTx|
  020b4		 |$LN40@ContinueTx|
  020b4	e51b30c4	 ldr         r3, [r11, #-0xC4]
  020b8	e58d3000	 str         r3, [sp]
  020bc	e51b30b4	 ldr         r3, [r11, #-0xB4]
  020c0	e2833008	 add         r3, r3, #8
  020c4	e1d330b0	 ldrh        r3, [r3]
  020c8	e51b20c8	 ldr         r2, [r11, #-0xC8]
  020cc	e59b1004	 ldr         r1, [r11, #4]
  020d0	e59f03c8	 ldr         r0, [pc, #0x3C8]
  020d4	eb000000	 bl          NKDbgPrintfW
  020d8	e3a03000	 mov         r3, #0
  020dc	e50b3044	 str         r3, [r11, #-0x44]
  020e0		 |$LN41@ContinueTx|
  020e0	e3a03001	 mov         r3, #1
  020e4	e50b3040	 str         r3, [r11, #-0x40]
  020e8	ea000001	 b           |$LN43@ContinueTx|
  020ec		 |$LN42@ContinueTx|
  020ec	e3a03000	 mov         r3, #0
  020f0	e50b3040	 str         r3, [r11, #-0x40]
  020f4		 |$LN43@ContinueTx|

; 1131 : 
; 1132 :         /* Write data to FIFO */
; 1133 : 		WriteFIFO(pPdd, (UCHAR)endPoint, pBuffer, count);

  020f4	e51b30c8	 ldr         r3, [r11, #-0xC8]
  020f8	e51b20cc	 ldr         r2, [r11, #-0xCC]
  020fc	e59b1004	 ldr         r1, [r11, #4]
  02100	e20110ff	 and         r1, r1, #0xFF
  02104	e59b0000	 ldr         r0, [r11]
  02108	eb000000	 bl          WriteFIFO

; 1134 : 
; 1135 : 		/*
; 1136 :           * We will update the pTransfer->cbTransferred here
; 1137 :           * because we would like to receive an ACK from the Host
; 1138 :           * before declaring that the data was sent successfully
; 1139 :           * to the Host. It results in a one interrupt cycle
; 1140 :           * delay
; 1141 :         */
; 1142 :         //pTransfer->cbTransferred = pTransfer->cbBuffer - space;
; 1143 :         pTransfer->cbTransferred += count;

  0210c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02110	e2833010	 add         r3, r3, #0x10
  02114	e5932000	 ldr         r2, [r3]
  02118	e51b30c8	 ldr         r3, [r11, #-0xC8]
  0211c	e0822003	 add         r2, r2, r3
  02120	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02124	e2833010	 add         r3, r3, #0x10
  02128	e5832000	 str         r2, [r3]

; 1144 : 
; 1145 : #ifdef CPPI_DMA_SUPPORT
; 1146 :         /* For DMA case, TX interrupt only enabled when required */
; 1147 : 		pUsbdRegs->EP_INTMSKSETR = (1 << endPoint) << USB_OTG_TXINT_SHIFT;

  0212c	e59b2004	 ldr         r2, [r11, #4]
  02130	e3a03001	 mov         r3, #1
  02134	e1a02213	 mov         r2, r3, lsl r2
  02138	e51b30b8	 ldr         r3, [r11, #-0xB8]
  0213c	e2833030	 add         r3, r3, #0x30
  02140	e5832000	 str         r2, [r3]
  02144		 |$LN74@ContinueTx|

; 1148 : #endif
; 1149 :     }

  02144	ea00001c	 b           |$LN75@ContinueTx|
  02148		 |$LN70@ContinueTx|

; 1151 :     {
; 1152 :         pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  02148	e51b30bc	 ldr         r3, [r11, #-0xBC]
  0214c	e2832014	 add         r2, r3, #0x14
  02150	e3a03f41	 mov         r3, #0x41, 30
  02154	e5823000	 str         r3, [r2]

; 1153 :         complete = TRUE;

  02158	e3a03001	 mov         r3, #1
  0215c	e50b30ac	 str         r3, [r11, #-0xAC]

; 1154 :         PRINTMSG(ZONE_ERROR, (L"Continue0TxTransfer: Client buffer exception!\r\n"));

  02160	e59f332c	 ldr         r3, [pc, #0x32C]
  02164	e5933440	 ldr         r3, [r3, #0x440]
  02168	e3130001	 tst         r3, #1
  0216c	0a00000f	 beq         |$LN46@ContinueTx|
  02170	e59f331c	 ldr         r3, [pc, #0x31C]
  02174	e5933440	 ldr         r3, [r3, #0x440]
  02178	e3130801	 tst         r3, #1, 16
  0217c	0a000004	 beq         |$LN44@ContinueTx|
  02180	e59f0314	 ldr         r0, [pc, #0x314]
  02184	eb000000	 bl          CeLogMsg
  02188	e3a03001	 mov         r3, #1
  0218c	e50b303c	 str         r3, [r11, #-0x3C]
  02190	ea000003	 b           |$LN45@ContinueTx|
  02194		 |$LN44@ContinueTx|
  02194	e59f0300	 ldr         r0, [pc, #0x300]
  02198	eb000000	 bl          NKDbgPrintfW
  0219c	e3a03000	 mov         r3, #0
  021a0	e50b303c	 str         r3, [r11, #-0x3C]
  021a4		 |$LN45@ContinueTx|
  021a4	e3a03001	 mov         r3, #1
  021a8	e50b3038	 str         r3, [r11, #-0x38]
  021ac	ea000001	 b           |$LN47@ContinueTx|
  021b0		 |$LN46@ContinueTx|
  021b0	e3a03000	 mov         r3, #0
  021b4	e50b3038	 str         r3, [r11, #-0x38]
  021b8		 |$LN47@ContinueTx|
  021b8	eaffffff	 b           |$LN75@ContinueTx|
  021bc		 |$LN75@ContinueTx|

; 1155 :     }
; 1156 : 
; 1157 :     epCsrReg &= ~(MGC_M_TXCSR_AUTOSET | MGC_M_TXCSR_DMAENAB);

  021bc	e15b3bb0	 ldrh        r3, [r11, #-0xB0]
  021c0	e1a02003	 mov         r2, r3
  021c4	e3e03a09	 mvn         r3, #9, 20
  021c8	e0023003	 and         r3, r2, r3
  021cc	e1a03803	 mov         r3, r3, lsl #16
  021d0	e1a03823	 mov         r3, r3, lsr #16
  021d4	e14b3bb0	 strh        r3, [r11, #-0xB0]

; 1158 :     epCsrReg &= ~(MGC_M_TXCSR_FIFONOTEMPTY | MGC_M_TXCSR_P_UNDERRUN);

  021d8	e15b3bb0	 ldrh        r3, [r11, #-0xB0]
  021dc	e1a02003	 mov         r2, r3
  021e0	e3e03006	 mvn         r3, #6
  021e4	e0023003	 and         r3, r2, r3
  021e8	e1a03803	 mov         r3, r3, lsl #16
  021ec	e1a03823	 mov         r3, r3, lsr #16
  021f0	e14b3bb0	 strh        r3, [r11, #-0xB0]

; 1159 :     epCsrReg |= (MGC_M_TXCSR_MODE | MGC_M_TXCSR_TXPKTRDY);

  021f4	e15b3bb0	 ldrh        r3, [r11, #-0xB0]
  021f8	e1a02003	 mov         r2, r3
  021fc	e3a03a02	 mov         r3, #2, 20
  02200	e3833001	 orr         r3, r3, #1
  02204	e1823003	 orr         r3, r2, r3
  02208	e1a03803	 mov         r3, r3, lsl #16
  0220c	e1a03823	 mov         r3, r3, lsr #16
  02210	e14b3bb0	 strh        r3, [r11, #-0xB0]

; 1160 : 
; 1161 :     /* Check for the current transfer Size. For all small sized pkts < 64
; 1162 :      * this condition will become TRUE for the first iteration itself.
; 1163 :      * However, when the MDD Tries to send 512 bytes of data,
; 1164 :      * this logic will become TRUE only for the last chunk.
; 1165 :      */
; 1166 : 
; 1167 :     /* Check if we have Transmitted Entire Packet */
; 1168 :     if (pTransfer->cbTransferred == pTransfer->cbBuffer)

  02214	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02218	e2832010	 add         r2, r3, #0x10
  0221c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02220	e283300c	 add         r3, r3, #0xC
  02224	e5922000	 ldr         r2, [r2]
  02228	e5933000	 ldr         r3, [r3]
  0222c	e1520003	 cmp         r2, r3
  02230	1a000017	 bne         |$LN2@ContinueTx|

; 1169 :     {
; 1170 :         /* Now wait for final interrupt before completing TX */
; 1171 :         PRINTMSG(ZONE_PDD_TX, (L"ContinueTxTransfer: EP %d, all bytes written\r\n", endPoint));

  02234	e59f3258	 ldr         r3, [pc, #0x258]
  02238	e5933440	 ldr         r3, [r3, #0x440]
  0223c	e3130b02	 tst         r3, #2, 22
  02240	0a000011	 beq         |$LN50@ContinueTx|
  02244	e59f3248	 ldr         r3, [pc, #0x248]
  02248	e5933440	 ldr         r3, [r3, #0x440]
  0224c	e3130801	 tst         r3, #1, 16
  02250	0a000005	 beq         |$LN48@ContinueTx|
  02254	e59b1004	 ldr         r1, [r11, #4]
  02258	e59f0238	 ldr         r0, [pc, #0x238]
  0225c	eb000000	 bl          CeLogMsg
  02260	e3a03001	 mov         r3, #1
  02264	e50b3034	 str         r3, [r11, #-0x34]
  02268	ea000004	 b           |$LN49@ContinueTx|
  0226c		 |$LN48@ContinueTx|
  0226c	e59b1004	 ldr         r1, [r11, #4]
  02270	e59f0220	 ldr         r0, [pc, #0x220]
  02274	eb000000	 bl          NKDbgPrintfW
  02278	e3a03000	 mov         r3, #0
  0227c	e50b3034	 str         r3, [r11, #-0x34]
  02280		 |$LN49@ContinueTx|
  02280	e3a03001	 mov         r3, #1
  02284	e50b3030	 str         r3, [r11, #-0x30]
  02288	ea000001	 b           |$LN51@ContinueTx|
  0228c		 |$LN50@ContinueTx|
  0228c	e3a03000	 mov         r3, #0
  02290	e50b3030	 str         r3, [r11, #-0x30]
  02294		 |$LN51@ContinueTx|
  02294		 |$LN2@ContinueTx|
  02294		 |$cleanUp$47968|

; 1172 :     }
; 1173 : 
; 1174 : cleanUp:
; 1175 : 
; 1176 :     (*pepCtrlReg) = epCsrReg;

  02294	e15b2bb0	 ldrh        r2, [r11, #-0xB0]
  02298	e51b30c0	 ldr         r3, [r11, #-0xC0]
  0229c	e1c320b0	 strh        r2, [r3]

; 1177 : 
; 1178 :     /* Leave CriticalSection */
; 1179 :     UNLOCK_ENDPOINT(pPdd);

  022a0	e59b3000	 ldr         r3, [r11]
  022a4	e2830e27	 add         r0, r3, #0x27, 28
  022a8	eb000000	 bl          LeaveCriticalSection

; 1180 : 
; 1181 :     PRINTMSG(FALSE, /*TRUE ZONE_SEND, (endPoint !=0)*/
; 1182 :         (L"Wrote 0x%02x into EP%u_CSR\r\n", epCsrReg, endPoint));
; 1183 : 
; 1184 :     /* If transaction is complete we should tell MDD */
; 1185 :     if (complete == TRUE)

  022ac	e51b30ac	 ldr         r3, [r11, #-0xAC]
  022b0	e3530001	 cmp         r3, #1
  022b4	1a00006d	 bne         |$LN1@ContinueTx|

; 1186 :     {
; 1187 :         PRINTMSG(ZONE_PDD_TX,
; 1188 :                  (L"ContinueTxTransfer: "
; 1189 :                   L"EP %d, pTransfer 0x%08x (%d, %d, 0x%0x) - notify complete\r\n",
; 1190 :                   endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1191 :                   pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1192 :                   pTransfer != NULL ? pTransfer->dwUsbError : -1));

  022b8	e59f31d4	 ldr         r3, [pc, #0x1D4]
  022bc	e5933440	 ldr         r3, [r3, #0x440]
  022c0	e3130b02	 tst         r3, #2, 22
  022c4	0a000059	 beq         |$LN66@ContinueTx|
  022c8	e59f31c4	 ldr         r3, [pc, #0x1C4]
  022cc	e5933440	 ldr         r3, [r3, #0x440]
  022d0	e3130801	 tst         r3, #1, 16
  022d4	0a000029	 beq         |$LN64@ContinueTx|
  022d8	e51b30bc	 ldr         r3, [r11, #-0xBC]
  022dc	e3530000	 cmp         r3, #0
  022e0	0a000004	 beq         |$LN52@ContinueTx|
  022e4	e51b30bc	 ldr         r3, [r11, #-0xBC]
  022e8	e2833014	 add         r3, r3, #0x14
  022ec	e5933000	 ldr         r3, [r3]
  022f0	e50b302c	 str         r3, [r11, #-0x2C]
  022f4	ea000001	 b           |$LN53@ContinueTx|
  022f8		 |$LN52@ContinueTx|
  022f8	e3e03000	 mvn         r3, #0
  022fc	e50b302c	 str         r3, [r11, #-0x2C]
  02300		 |$LN53@ContinueTx|
  02300	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02304	e3530000	 cmp         r3, #0
  02308	0a000004	 beq         |$LN54@ContinueTx|
  0230c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02310	e2833010	 add         r3, r3, #0x10
  02314	e5933000	 ldr         r3, [r3]
  02318	e50b3028	 str         r3, [r11, #-0x28]
  0231c	ea000001	 b           |$LN55@ContinueTx|
  02320		 |$LN54@ContinueTx|
  02320	e3a03000	 mov         r3, #0
  02324	e50b3028	 str         r3, [r11, #-0x28]
  02328		 |$LN55@ContinueTx|
  02328	e51b30bc	 ldr         r3, [r11, #-0xBC]
  0232c	e3530000	 cmp         r3, #0
  02330	0a000004	 beq         |$LN56@ContinueTx|
  02334	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02338	e283300c	 add         r3, r3, #0xC
  0233c	e5933000	 ldr         r3, [r3]
  02340	e50b3024	 str         r3, [r11, #-0x24]
  02344	ea000001	 b           |$LN57@ContinueTx|
  02348		 |$LN56@ContinueTx|
  02348	e3a03000	 mov         r3, #0
  0234c	e50b3024	 str         r3, [r11, #-0x24]
  02350		 |$LN57@ContinueTx|
  02350	e51b302c	 ldr         r3, [r11, #-0x2C]
  02354	e58d3004	 str         r3, [sp, #4]
  02358	e51b3028	 ldr         r3, [r11, #-0x28]
  0235c	e58d3000	 str         r3, [sp]
  02360	e51b3024	 ldr         r3, [r11, #-0x24]
  02364	e51b20bc	 ldr         r2, [r11, #-0xBC]
  02368	e59b1004	 ldr         r1, [r11, #4]
  0236c	e59f011c	 ldr         r0, [pc, #0x11C]
  02370	eb000000	 bl          CeLogMsg
  02374	e3a03001	 mov         r3, #1
  02378	e50b3020	 str         r3, [r11, #-0x20]
  0237c	ea000028	 b           |$LN65@ContinueTx|
  02380		 |$LN64@ContinueTx|
  02380	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02384	e3530000	 cmp         r3, #0
  02388	0a000004	 beq         |$LN58@ContinueTx|
  0238c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  02390	e2833014	 add         r3, r3, #0x14
  02394	e5933000	 ldr         r3, [r3]
  02398	e50b301c	 str         r3, [r11, #-0x1C]
  0239c	ea000001	 b           |$LN59@ContinueTx|
  023a0		 |$LN58@ContinueTx|
  023a0	e3e03000	 mvn         r3, #0
  023a4	e50b301c	 str         r3, [r11, #-0x1C]
  023a8		 |$LN59@ContinueTx|
  023a8	e51b30bc	 ldr         r3, [r11, #-0xBC]
  023ac	e3530000	 cmp         r3, #0
  023b0	0a000004	 beq         |$LN60@ContinueTx|
  023b4	e51b30bc	 ldr         r3, [r11, #-0xBC]
  023b8	e2833010	 add         r3, r3, #0x10
  023bc	e5933000	 ldr         r3, [r3]
  023c0	e50b3018	 str         r3, [r11, #-0x18]
  023c4	ea000001	 b           |$LN61@ContinueTx|
  023c8		 |$LN60@ContinueTx|
  023c8	e3a03000	 mov         r3, #0
  023cc	e50b3018	 str         r3, [r11, #-0x18]
  023d0		 |$LN61@ContinueTx|
  023d0	e51b30bc	 ldr         r3, [r11, #-0xBC]
  023d4	e3530000	 cmp         r3, #0
  023d8	0a000004	 beq         |$LN62@ContinueTx|
  023dc	e51b30bc	 ldr         r3, [r11, #-0xBC]
  023e0	e283300c	 add         r3, r3, #0xC
  023e4	e5933000	 ldr         r3, [r3]
  023e8	e50b3014	 str         r3, [r11, #-0x14]
  023ec	ea000001	 b           |$LN63@ContinueTx|
  023f0		 |$LN62@ContinueTx|
  023f0	e3a03000	 mov         r3, #0
  023f4	e50b3014	 str         r3, [r11, #-0x14]
  023f8		 |$LN63@ContinueTx|
  023f8	e51b301c	 ldr         r3, [r11, #-0x1C]
  023fc	e58d3004	 str         r3, [sp, #4]
  02400	e51b3018	 ldr         r3, [r11, #-0x18]
  02404	e58d3000	 str         r3, [sp]
  02408	e51b3014	 ldr         r3, [r11, #-0x14]
  0240c	e51b20bc	 ldr         r2, [r11, #-0xBC]
  02410	e59b1004	 ldr         r1, [r11, #4]
  02414	e59f0074	 ldr         r0, [pc, #0x74]
  02418	eb000000	 bl          NKDbgPrintfW
  0241c	e3a03000	 mov         r3, #0
  02420	e50b3020	 str         r3, [r11, #-0x20]
  02424		 |$LN65@ContinueTx|
  02424	e3a03001	 mov         r3, #1
  02428	e50b3010	 str         r3, [r11, #-0x10]
  0242c	ea000001	 b           |$LN67@ContinueTx|
  02430		 |$LN66@ContinueTx|
  02430	e3a03000	 mov         r3, #0
  02434	e50b3010	 str         r3, [r11, #-0x10]
  02438		 |$LN67@ContinueTx|

; 1193 :         pEP->pTransfer = NULL;

  02438	e51b30b4	 ldr         r3, [r11, #-0xB4]
  0243c	e2832020	 add         r2, r3, #0x20
  02440	e3a03000	 mov         r3, #0
  02444	e5823000	 str         r3, [r2]

; 1194 :         pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE,
; 1195 :                          (DWORD)pTransfer);

  02448	e51b20bc	 ldr         r2, [r11, #-0xBC]
  0244c	e3a01064	 mov         r1, #0x64
  02450	e59b3000	 ldr         r3, [r11]
  02454	e2833010	 add         r3, r3, #0x10
  02458	e5930000	 ldr         r0, [r3]
  0245c	e59b3000	 ldr         r3, [r11]
  02460	e2833014	 add         r3, r3, #0x14
  02464	e5933000	 ldr         r3, [r3]
  02468	e1a0e00f	 mov         lr, pc
  0246c	e12fff13	 bx          r3
  02470		 |$LN1@ContinueTx|
  02470		 |$done$47964|
  02470		 |$LN68@ContinueTx|

; 1196 :     }
; 1197 : 
; 1198 : done:
; 1199 :     return;
; 1200 : }

  02470	e24bd00c	 sub         sp, r11, #0xC
  02474	e89d6800	 ldmia       sp, {r11, sp, lr}
  02478	e12fff1e	 bx          lr

			 ENDP  ; |ContinueTxTransfer|

  0247c		 |$LN69@ContinueTx|
  0247c		 |$LN78@ContinueTx|

; 1150 :     __except(EXCEPTION_EXECUTE_HANDLER)

  0247c	e52de004	 str         lr, [sp, #-4]!
  02480	e24dd008	 sub         sp, sp, #8
  02484		 |$LN72@ContinueTx|
  02484		 |$LN81@ContinueTx|
  02484	e3a00001	 mov         r0, #1
  02488		 |$LN71@ContinueTx|
  02488	e28dd008	 add         sp, sp, #8
  0248c	e49df004	 ldr         pc, [sp], #4
  02490		 |$LN83@ContinueTx|
  02490		 |$LN84@ContinueTx|
  02490	00000000	 DCD         |??_C@_1KA@FGPAKDNB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@|
  02494		 |$LN85@ContinueTx|
  02494	00000000	 DCD         |dpCurSettings|
  02498		 |$LN86@ContinueTx|
  02498	00000000	 DCD         |??_C@_1FO@HGHNNFMK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAb@|
  0249c		 |$LN87@ContinueTx|
  0249c	00000000	 DCD         |??_C@_1GA@LDKCJJJF@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA0?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf@|
  024a0		 |$LN88@ContinueTx|
  024a0	00000000	 DCD         |??_C@_1IG@IFHOFDOO@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAi@|
  024a4		 |$LN89@ContinueTx|
  024a4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  024a8		 |$LN90@ContinueTx|
  024a8	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  024ac		 |$LN91@ContinueTx|
  024ac	00000000	 DCD         |??_C@_1HI@PMGODKCP@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  024b0		 |$LN92@ContinueTx|
  024b0	00000000	 DCD         |??_C@_1FC@GLEDEEDN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo@|
  024b4		 |$LN93@ContinueTx|
  024b4	00000000	 DCD         |??_C@_1FI@HNJALGAC@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs@|
  024b8		 |$LN94@ContinueTx|
  024b8	00000000	 DCD         |??_C@_1HM@PDNNCAHI@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@|
  024bc		 |$LN82@ContinueTx|
  024bc		 |$LN80@ContinueTx|
	EXPORT	|??_C@_1JI@KEJAEEDK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@FICDPAIG@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@EOMLGIFE@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@FBDBDIJL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@OPJLDAME@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@KJKMHCGN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@HIPHGDPE@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|ContinueEp0RxTransfer|

  00060			 AREA	 |.pdata|, PDATA
|$T49728| DCD	|$LN76@ContinueEp@2|
	DCD	0xc001f305
|$T49730| DCD	|$LN66@ContinueEp@2|
	DCD	0x40000d02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@KEJAEEDK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, "i", 0x0, "f", 0x0, "y", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@FICDPAIG@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "l"
	DCB	0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@EOMLGIFE@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@FBDBDIJL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?$CF@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, ",", 0x0, " ", 0x0, "m", 0x0, "a"
	DCB	0x0, "x", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "f", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@OPJLDAME@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "X"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@KJKMHCGN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "o"
	DCB	0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "y", 0x0, "e"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@HIPHGDPE@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "p", 0x0, "0", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  0002c			 AREA	 |.xdata|, DATA
|$T49726| DCD	0x1
	DCD	|$LN70@ContinueEp@2|
	DCD	|$LN71@ContinueEp@2|
	DCD	|$LN66@ContinueEp@2|
	DCD	|$LN67@ContinueEp@2|
; Function compile flags: /Odtp

  024bc			 AREA	 |.text|, CODE, ARM

  024bc	00000000	 DCD         |__C_specific_handler|
  024c0	00000000	 DCD         |$T49726|

  024c4		 |ContinueEp0RxTransfer| PROC

; 1260 : {

  024c4		 |$LN76@ContinueEp@2|
  024c4	e1a0c00d	 mov         r12, sp
  024c8	e92d0003	 stmdb       sp!, {r0, r1}
  024cc	e92d5800	 stmdb       sp!, {r11, r12, lr}
  024d0	e28db00c	 add         r11, sp, #0xC
  024d4	e24dd0ac	 sub         sp, sp, #0xAC
  024d8		 |$LN74@ContinueEp@2|

; 1261 :     CSL_UsbRegs    *pUsbRegs     = pPdd->pUsbdRegs;

  024d8	e59b3000	 ldr         r3, [r11]
  024dc	e283301c	 add         r3, r3, #0x1C
  024e0	e5933000	 ldr         r3, [r3]
  024e4	e50b3090	 str         r3, [r11, #-0x90]

; 1262 :     UsbFnEp        *pEP           = &pPdd->ep[endPoint];

  024e8	e59b3000	 ldr         r3, [r11]
  024ec	e2831fa1	 add         r1, r3, #0xA1, 30
  024f0	e59b2004	 ldr         r2, [r11, #4]
  024f4	e3a0303c	 mov         r3, #0x3C
  024f8	e0030392	 mul         r3, r2, r3
  024fc	e0813003	 add         r3, r1, r3
  02500	e50b3098	 str         r3, [r11, #-0x98]

; 1263 :     STransfer *pTransfer = pEP->pTransfer;

  02504	e51b3098	 ldr         r3, [r11, #-0x98]
  02508	e2833020	 add         r3, r3, #0x20
  0250c	e5933000	 ldr         r3, [r3]
  02510	e50b309c	 str         r3, [r11, #-0x9C]

; 1264 :     BOOL complete = FALSE;

  02514	e3a03000	 mov         r3, #0
  02518	e50b308c	 str         r3, [r11, #-0x8C]

; 1265 :     volatile UINT16 *pepCtrlReg;
; 1266 :     UINT16  epCsrReg;
; 1267 :     UINT16  rcvSize = 0;

  0251c	e3a03000	 mov         r3, #0
  02520	e14b3ab8	 strh        r3, [r11, #-0xA8]

; 1268 :     DWORD space;
; 1269 :     DWORD count;
; 1270 :     UCHAR *pBuffer = NULL;

  02524	e3a03000	 mov         r3, #0
  02528	e50b30b0	 str         r3, [r11, #-0xB0]

; 1271 : 	WORD maxSize;
; 1272 : 
; 1273 :     PRINTMSG(ZONE_PDD_EP0,
; 1274 :              (L"ContinueEp0RxTransfer: pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 1275 :               pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1276 :               pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1277 :               pTransfer != NULL ? pTransfer->dwUsbError : -1));

  0252c	e59f3774	 ldr         r3, [pc, #0x774]
  02530	e5933440	 ldr         r3, [r3, #0x440]
  02534	e3130c02	 tst         r3, #2, 24
  02538	0a000055	 beq         |$LN25@ContinueEp@2|
  0253c	e59f3764	 ldr         r3, [pc, #0x764]
  02540	e5933440	 ldr         r3, [r3, #0x440]
  02544	e3130801	 tst         r3, #1, 16
  02548	0a000027	 beq         |$LN23@ContinueEp@2|
  0254c	e51b309c	 ldr         r3, [r11, #-0x9C]
  02550	e3530000	 cmp         r3, #0
  02554	0a000004	 beq         |$LN11@ContinueEp@2|
  02558	e51b309c	 ldr         r3, [r11, #-0x9C]
  0255c	e2833014	 add         r3, r3, #0x14
  02560	e5933000	 ldr         r3, [r3]
  02564	e50b3078	 str         r3, [r11, #-0x78]
  02568	ea000001	 b           |$LN12@ContinueEp@2|
  0256c		 |$LN11@ContinueEp@2|
  0256c	e3e03000	 mvn         r3, #0
  02570	e50b3078	 str         r3, [r11, #-0x78]
  02574		 |$LN12@ContinueEp@2|
  02574	e51b309c	 ldr         r3, [r11, #-0x9C]
  02578	e3530000	 cmp         r3, #0
  0257c	0a000004	 beq         |$LN13@ContinueEp@2|
  02580	e51b309c	 ldr         r3, [r11, #-0x9C]
  02584	e2833010	 add         r3, r3, #0x10
  02588	e5933000	 ldr         r3, [r3]
  0258c	e50b3074	 str         r3, [r11, #-0x74]
  02590	ea000001	 b           |$LN14@ContinueEp@2|
  02594		 |$LN13@ContinueEp@2|
  02594	e3a03000	 mov         r3, #0
  02598	e50b3074	 str         r3, [r11, #-0x74]
  0259c		 |$LN14@ContinueEp@2|
  0259c	e51b309c	 ldr         r3, [r11, #-0x9C]
  025a0	e3530000	 cmp         r3, #0
  025a4	0a000004	 beq         |$LN15@ContinueEp@2|
  025a8	e51b309c	 ldr         r3, [r11, #-0x9C]
  025ac	e283300c	 add         r3, r3, #0xC
  025b0	e5933000	 ldr         r3, [r3]
  025b4	e50b3070	 str         r3, [r11, #-0x70]
  025b8	ea000001	 b           |$LN16@ContinueEp@2|
  025bc		 |$LN15@ContinueEp@2|
  025bc	e3a03000	 mov         r3, #0
  025c0	e50b3070	 str         r3, [r11, #-0x70]
  025c4		 |$LN16@ContinueEp@2|
  025c4	e51b3078	 ldr         r3, [r11, #-0x78]
  025c8	e58d3000	 str         r3, [sp]
  025cc	e51b3074	 ldr         r3, [r11, #-0x74]
  025d0	e51b2070	 ldr         r2, [r11, #-0x70]
  025d4	e51b109c	 ldr         r1, [r11, #-0x9C]
  025d8	e59f06e0	 ldr         r0, [pc, #0x6E0]
  025dc	eb000000	 bl          CeLogMsg
  025e0	e3a03001	 mov         r3, #1
  025e4	e50b306c	 str         r3, [r11, #-0x6C]
  025e8	ea000026	 b           |$LN24@ContinueEp@2|
  025ec		 |$LN23@ContinueEp@2|
  025ec	e51b309c	 ldr         r3, [r11, #-0x9C]
  025f0	e3530000	 cmp         r3, #0
  025f4	0a000004	 beq         |$LN17@ContinueEp@2|
  025f8	e51b309c	 ldr         r3, [r11, #-0x9C]
  025fc	e2833014	 add         r3, r3, #0x14
  02600	e5933000	 ldr         r3, [r3]
  02604	e50b3068	 str         r3, [r11, #-0x68]
  02608	ea000001	 b           |$LN18@ContinueEp@2|
  0260c		 |$LN17@ContinueEp@2|
  0260c	e3e03000	 mvn         r3, #0
  02610	e50b3068	 str         r3, [r11, #-0x68]
  02614		 |$LN18@ContinueEp@2|
  02614	e51b309c	 ldr         r3, [r11, #-0x9C]
  02618	e3530000	 cmp         r3, #0
  0261c	0a000004	 beq         |$LN19@ContinueEp@2|
  02620	e51b309c	 ldr         r3, [r11, #-0x9C]
  02624	e2833010	 add         r3, r3, #0x10
  02628	e5933000	 ldr         r3, [r3]
  0262c	e50b3064	 str         r3, [r11, #-0x64]
  02630	ea000001	 b           |$LN20@ContinueEp@2|
  02634		 |$LN19@ContinueEp@2|
  02634	e3a03000	 mov         r3, #0
  02638	e50b3064	 str         r3, [r11, #-0x64]
  0263c		 |$LN20@ContinueEp@2|
  0263c	e51b309c	 ldr         r3, [r11, #-0x9C]
  02640	e3530000	 cmp         r3, #0
  02644	0a000004	 beq         |$LN21@ContinueEp@2|
  02648	e51b309c	 ldr         r3, [r11, #-0x9C]
  0264c	e283300c	 add         r3, r3, #0xC
  02650	e5933000	 ldr         r3, [r3]
  02654	e50b3060	 str         r3, [r11, #-0x60]
  02658	ea000001	 b           |$LN22@ContinueEp@2|
  0265c		 |$LN21@ContinueEp@2|
  0265c	e3a03000	 mov         r3, #0
  02660	e50b3060	 str         r3, [r11, #-0x60]
  02664		 |$LN22@ContinueEp@2|
  02664	e51b3068	 ldr         r3, [r11, #-0x68]
  02668	e58d3000	 str         r3, [sp]
  0266c	e51b3064	 ldr         r3, [r11, #-0x64]
  02670	e51b2060	 ldr         r2, [r11, #-0x60]
  02674	e51b109c	 ldr         r1, [r11, #-0x9C]
  02678	e59f0640	 ldr         r0, [pc, #0x640]
  0267c	eb000000	 bl          NKDbgPrintfW
  02680	e3a03000	 mov         r3, #0
  02684	e50b306c	 str         r3, [r11, #-0x6C]
  02688		 |$LN24@ContinueEp@2|
  02688	e3a03001	 mov         r3, #1
  0268c	e50b305c	 str         r3, [r11, #-0x5C]
  02690	ea000001	 b           |$LN26@ContinueEp@2|
  02694		 |$LN25@ContinueEp@2|
  02694	e3a03000	 mov         r3, #0
  02698	e50b305c	 str         r3, [r11, #-0x5C]
  0269c		 |$LN26@ContinueEp@2|

; 1278 : 
; 1279 :     /* Enter CriticalSection */
; 1280 :     LOCK_ENDPOINT(pPdd);

  0269c	e59b3000	 ldr         r3, [r11]
  026a0	e2830e27	 add         r0, r3, #0x27, 28
  026a4	eb000000	 bl          EnterCriticalSection

; 1281 : 
; 1282 :     pepCtrlReg = &pUsbRegs->EPCSR[ endPoint ].PERI_TXCSR;

  026a8	e51b3090	 ldr         r3, [r11, #-0x90]
  026ac	e2831c05	 add         r1, r3, #5, 24
  026b0	e59b2004	 ldr         r2, [r11, #4]
  026b4	e3a03010	 mov         r3, #0x10
  026b8	e0030392	 mul         r3, r2, r3
  026bc	e0813003	 add         r3, r1, r3
  026c0	e2833002	 add         r3, r3, #2
  026c4	e50b30a0	 str         r3, [r11, #-0xA0]

; 1283 : 
; 1284 :     epCsrReg = (*pepCtrlReg);

  026c8	e51b30a0	 ldr         r3, [r11, #-0xA0]
  026cc	e1d330b0	 ldrh        r3, [r3]
  026d0	e14b39b4	 strh        r3, [r11, #-0x94]

; 1285 : 
; 1286 :     /* Got EP 0 interrupt before MDD issued transfer? */
; 1287 :     if (pTransfer == NULL)

  026d4	e51b309c	 ldr         r3, [r11, #-0x9C]
  026d8	e3530000	 cmp         r3, #0
  026dc	1a000016	 bne         |$LN8@ContinueEp@2|

; 1288 :     {
; 1289 :         PRINTMSG(ZONE_PDD_EP0, (L"ContinueEp0RxTransfer: No transfer yet"));

  026e0	e59f35c0	 ldr         r3, [pc, #0x5C0]
  026e4	e5933440	 ldr         r3, [r3, #0x440]
  026e8	e3130c02	 tst         r3, #2, 24
  026ec	0a00000f	 beq         |$LN29@ContinueEp@2|
  026f0	e59f35b0	 ldr         r3, [pc, #0x5B0]
  026f4	e5933440	 ldr         r3, [r3, #0x440]
  026f8	e3130801	 tst         r3, #1, 16
  026fc	0a000004	 beq         |$LN27@ContinueEp@2|
  02700	e59f05b4	 ldr         r0, [pc, #0x5B4]
  02704	eb000000	 bl          CeLogMsg
  02708	e3a03001	 mov         r3, #1
  0270c	e50b3058	 str         r3, [r11, #-0x58]
  02710	ea000003	 b           |$LN28@ContinueEp@2|
  02714		 |$LN27@ContinueEp@2|
  02714	e59f05a0	 ldr         r0, [pc, #0x5A0]
  02718	eb000000	 bl          NKDbgPrintfW
  0271c	e3a03000	 mov         r3, #0
  02720	e50b3058	 str         r3, [r11, #-0x58]
  02724		 |$LN28@ContinueEp@2|
  02724	e3a03001	 mov         r3, #1
  02728	e50b3054	 str         r3, [r11, #-0x54]
  0272c	ea000001	 b           |$LN30@ContinueEp@2|
  02730		 |$LN29@ContinueEp@2|
  02730	e3a03000	 mov         r3, #0
  02734	e50b3054	 str         r3, [r11, #-0x54]
  02738		 |$LN30@ContinueEp@2|

; 1290 :         goto cleanUp;

  02738	ea0000e1	 b           |$cleanUp$48044|
  0273c		 |$LN8@ContinueEp@2|

; 1291 :     }
; 1292 : 
; 1293 :     /* Is this a status phase (IN) interrupt for EP 0? */
; 1294 :     if (pEP->epStage == MGC_END0_STAGE_STATUSIN)

  0273c	e51b3098	 ldr         r3, [r11, #-0x98]
  02740	e283301c	 add         r3, r3, #0x1C
  02744	e5933000	 ldr         r3, [r3]
  02748	e3530004	 cmp         r3, #4
  0274c	1a00001a	 bne         |$LN7@ContinueEp@2|

; 1295 :     {
; 1296 :         PRINTMSG(ZONE_PDD_EP0, (L"ContinueEp0RxTransfer: RX complete\r\n"));

  02750	e59f3550	 ldr         r3, [pc, #0x550]
  02754	e5933440	 ldr         r3, [r3, #0x440]
  02758	e3130c02	 tst         r3, #2, 24
  0275c	0a00000f	 beq         |$LN33@ContinueEp@2|
  02760	e59f3540	 ldr         r3, [pc, #0x540]
  02764	e5933440	 ldr         r3, [r3, #0x440]
  02768	e3130801	 tst         r3, #1, 16
  0276c	0a000004	 beq         |$LN31@ContinueEp@2|
  02770	e59f0540	 ldr         r0, [pc, #0x540]
  02774	eb000000	 bl          CeLogMsg
  02778	e3a03001	 mov         r3, #1
  0277c	e50b3050	 str         r3, [r11, #-0x50]
  02780	ea000003	 b           |$LN32@ContinueEp@2|
  02784		 |$LN31@ContinueEp@2|
  02784	e59f052c	 ldr         r0, [pc, #0x52C]
  02788	eb000000	 bl          NKDbgPrintfW
  0278c	e3a03000	 mov         r3, #0
  02790	e50b3050	 str         r3, [r11, #-0x50]
  02794		 |$LN32@ContinueEp@2|
  02794	e3a03001	 mov         r3, #1
  02798	e50b304c	 str         r3, [r11, #-0x4C]
  0279c	ea000001	 b           |$LN34@ContinueEp@2|
  027a0		 |$LN33@ContinueEp@2|
  027a0	e3a03000	 mov         r3, #0
  027a4	e50b304c	 str         r3, [r11, #-0x4C]
  027a8		 |$LN34@ContinueEp@2|

; 1297 :         pEP->epStage = MGC_END0_START;

  027a8	e51b3098	 ldr         r3, [r11, #-0x98]
  027ac	e283201c	 add         r2, r3, #0x1C
  027b0	e3a03001	 mov         r3, #1
  027b4	e5823000	 str         r3, [r2]

; 1298 :         goto cleanUp;

  027b8	ea0000c1	 b           |$cleanUp$48044|
  027bc		 |$LN7@ContinueEp@2|

; 1299 :     }
; 1300 : 
; 1301 :     rcvSize = pUsbRegs->EPCSR[ endPoint ].RXCOUNT;

  027bc	e51b3090	 ldr         r3, [r11, #-0x90]
  027c0	e2831c05	 add         r1, r3, #5, 24
  027c4	e59b2004	 ldr         r2, [r11, #4]
  027c8	e3a03010	 mov         r3, #0x10
  027cc	e0030392	 mul         r3, r2, r3
  027d0	e0813003	 add         r3, r1, r3
  027d4	e2833008	 add         r3, r3, #8
  027d8	e1d330b0	 ldrh        r3, [r3]
  027dc	e14b3ab8	 strh        r3, [r11, #-0xA8]

; 1302 :     maxSize = pEP->maxPacketSize;

  027e0	e51b3098	 ldr         r3, [r11, #-0x98]
  027e4	e2833008	 add         r3, r3, #8
  027e8	e1d330b0	 ldrh        r3, [r3]
  027ec	e14b3bb4	 strh        r3, [r11, #-0xB4]

; 1303 : 
; 1304 :     /* If controller NAKs the host we can get an interrupt before the whole
; 1305 :        packet is received - just ignore and wait for whole packet to arrive. */
; 1306 :     if (rcvSize != maxSize && rcvSize != (pTransfer->cbBuffer - pTransfer->cbTransferred))

  027f0	e15b3ab8	 ldrh        r3, [r11, #-0xA8]
  027f4	e1a02003	 mov         r2, r3
  027f8	e15b3bb4	 ldrh        r3, [r11, #-0xB4]
  027fc	e1520003	 cmp         r2, r3
  02800	0a00000a	 beq         |$LN6@ContinueEp@2|
  02804	e15b1ab8	 ldrh        r1, [r11, #-0xA8]
  02808	e51b309c	 ldr         r3, [r11, #-0x9C]
  0280c	e283200c	 add         r2, r3, #0xC
  02810	e51b309c	 ldr         r3, [r11, #-0x9C]
  02814	e2833010	 add         r3, r3, #0x10
  02818	e5922000	 ldr         r2, [r2]
  0281c	e5933000	 ldr         r3, [r3]
  02820	e0423003	 sub         r3, r2, r3
  02824	e1510003	 cmp         r1, r3
  02828	0a000000	 beq         |$LN6@ContinueEp@2|

; 1307 :         goto cleanUp;

  0282c	ea0000a4	 b           |$cleanUp$48044|
  02830		 |$LN6@ContinueEp@2|

; 1308 : 
; 1309 :     /* Update the State of this EP */
; 1310 :     pEP->epStage = MGC_END0_STAGE_RX;

  02830	e51b3098	 ldr         r3, [r11, #-0x98]
  02834	e283201c	 add         r2, r3, #0x1C
  02838	e3a03003	 mov         r3, #3
  0283c	e5823000	 str         r3, [r2]
  02840		 |$LN70@ContinueEp@2|

; 1311 :     __try
; 1312 :     {
; 1313 :         pBuffer = (UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  02840	e51b309c	 ldr         r3, [r11, #-0x9C]
  02844	e2832004	 add         r2, r3, #4
  02848	e51b309c	 ldr         r3, [r11, #-0x9C]
  0284c	e2833010	 add         r3, r3, #0x10
  02850	e5922000	 ldr         r2, [r2]
  02854	e5933000	 ldr         r3, [r3]
  02858	e0823003	 add         r3, r2, r3
  0285c	e50b30b0	 str         r3, [r11, #-0xB0]

; 1314 :         space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  02860	e51b309c	 ldr         r3, [r11, #-0x9C]
  02864	e283200c	 add         r2, r3, #0xC
  02868	e51b309c	 ldr         r3, [r11, #-0x9C]
  0286c	e2833010	 add         r3, r3, #0x10
  02870	e5922000	 ldr         r2, [r2]
  02874	e5933000	 ldr         r3, [r3]
  02878	e0423003	 sub         r3, r2, r3
  0287c	e50b30a4	 str         r3, [r11, #-0xA4]

; 1315 : 
; 1316 :         /* Get number of bytes to be unloaded from FIFO
; 1317 :          * Check the FIFO's Max Pkt Size against the Size
; 1318 :          * available in the pTransfer Buffer
; 1319 :          */
; 1320 : 
; 1321 :         /* First Check what amount of space is available in the pTransfer
; 1322 :          * Buffer and also the amount of data sent by the Host. The
; 1323 :          * minimum of these two needs to be considered
; 1324 :          */
; 1325 :         count = (rcvSize > space) ? space : rcvSize;

  02880	e15b2ab8	 ldrh        r2, [r11, #-0xA8]
  02884	e51b30a4	 ldr         r3, [r11, #-0xA4]
  02888	e1520003	 cmp         r2, r3
  0288c	9a000002	 bls         |$LN35@ContinueEp@2|
  02890	e51b30a4	 ldr         r3, [r11, #-0xA4]
  02894	e50b3048	 str         r3, [r11, #-0x48]
  02898	ea000001	 b           |$LN36@ContinueEp@2|
  0289c		 |$LN35@ContinueEp@2|
  0289c	e15b3ab8	 ldrh        r3, [r11, #-0xA8]
  028a0	e50b3048	 str         r3, [r11, #-0x48]
  028a4		 |$LN36@ContinueEp@2|
  028a4	e51b3048	 ldr         r3, [r11, #-0x48]
  028a8	e50b30ac	 str         r3, [r11, #-0xAC]

; 1326 : 
; 1327 :         PRINTMSG(ZONE_PDD_EP0,
; 1328 :                  (L"ContinueEp0RxTransfer: Reading %d bytes, maxSize %d, left %d\r\n",
; 1329 :                   count, maxSize, space));

  028ac	e59f33f4	 ldr         r3, [pc, #0x3F4]
  028b0	e5933440	 ldr         r3, [r3, #0x440]
  028b4	e3130c02	 tst         r3, #2, 24
  028b8	0a000015	 beq         |$LN39@ContinueEp@2|
  028bc	e59f33e4	 ldr         r3, [pc, #0x3E4]
  028c0	e5933440	 ldr         r3, [r3, #0x440]
  028c4	e3130801	 tst         r3, #1, 16
  028c8	0a000007	 beq         |$LN37@ContinueEp@2|
  028cc	e51b30a4	 ldr         r3, [r11, #-0xA4]
  028d0	e15b2bb4	 ldrh        r2, [r11, #-0xB4]
  028d4	e51b10ac	 ldr         r1, [r11, #-0xAC]
  028d8	e59f03d4	 ldr         r0, [pc, #0x3D4]
  028dc	eb000000	 bl          CeLogMsg
  028e0	e3a03001	 mov         r3, #1
  028e4	e50b3044	 str         r3, [r11, #-0x44]
  028e8	ea000006	 b           |$LN38@ContinueEp@2|
  028ec		 |$LN37@ContinueEp@2|
  028ec	e51b30a4	 ldr         r3, [r11, #-0xA4]
  028f0	e15b2bb4	 ldrh        r2, [r11, #-0xB4]
  028f4	e51b10ac	 ldr         r1, [r11, #-0xAC]
  028f8	e59f03b4	 ldr         r0, [pc, #0x3B4]
  028fc	eb000000	 bl          NKDbgPrintfW
  02900	e3a03000	 mov         r3, #0
  02904	e50b3044	 str         r3, [r11, #-0x44]
  02908		 |$LN38@ContinueEp@2|
  02908	e3a03001	 mov         r3, #1
  0290c	e50b3040	 str         r3, [r11, #-0x40]
  02910	ea000001	 b           |$LN40@ContinueEp@2|
  02914		 |$LN39@ContinueEp@2|
  02914	e3a03000	 mov         r3, #0
  02918	e50b3040	 str         r3, [r11, #-0x40]
  0291c		 |$LN40@ContinueEp@2|

; 1330 :         
; 1331 : 		/* Read data */
; 1332 : 		ReadFIFO(pPdd, (UCHAR)endPoint, pBuffer, count);

  0291c	e51b30ac	 ldr         r3, [r11, #-0xAC]
  02920	e51b20b0	 ldr         r2, [r11, #-0xB0]
  02924	e59b1004	 ldr         r1, [r11, #4]
  02928	e20110ff	 and         r1, r1, #0xFF
  0292c	e59b0000	 ldr         r0, [r11]
  02930	eb000000	 bl          ReadFIFO

; 1333 : 
; 1334 : 		/* We transfered some data */
; 1335 :         pTransfer->cbTransferred += count ;

  02934	e51b309c	 ldr         r3, [r11, #-0x9C]
  02938	e2833010	 add         r3, r3, #0x10
  0293c	e5932000	 ldr         r2, [r3]
  02940	e51b30ac	 ldr         r3, [r11, #-0xAC]
  02944	e0822003	 add         r2, r2, r3
  02948	e51b309c	 ldr         r3, [r11, #-0x9C]
  0294c	e2833010	 add         r3, r3, #0x10
  02950	e5832000	 str         r2, [r3]

; 1336 : 
; 1337 :         /* Is this end of transfer? We will determine this
; 1338 :          * situation based on two conditions.
; 1339 :          * 1. The Buffer Size inside the pTransfer is filled up
; 1340 :          * 2. The Received pkt Size is lesser than the maximum
; 1341 :          * size of the RxFIFO. The Spec says that if huge number
; 1342 :          * of data needs to be sent to the Controller, it will
; 1343 :          * send it in multiples of the wMaxPacketSize field
; 1344 :          * of the EndPoint Descriptor. The last residue data is
; 1345 :          * sent in a packet which has length lesser than wMaxPacketSize
; 1346 :          */
; 1347 :         if ((pTransfer->cbTransferred == pTransfer->cbBuffer) ||
; 1348 :             (count < maxSize))

  02954	e51b309c	 ldr         r3, [r11, #-0x9C]
  02958	e2832010	 add         r2, r3, #0x10
  0295c	e51b309c	 ldr         r3, [r11, #-0x9C]
  02960	e283300c	 add         r3, r3, #0xC
  02964	e5922000	 ldr         r2, [r2]
  02968	e5933000	 ldr         r3, [r3]
  0296c	e1520003	 cmp         r2, r3
  02970	0a000003	 beq         |$LN3@ContinueEp@2|
  02974	e15b2bb4	 ldrh        r2, [r11, #-0xB4]
  02978	e51b30ac	 ldr         r3, [r11, #-0xAC]
  0297c	e1530002	 cmp         r3, r2
  02980	2a00001f	 bcs         |$LN4@ContinueEp@2|
  02984		 |$LN3@ContinueEp@2|

; 1349 :         {
; 1350 :             PRINTMSG(ZONE_PDD_EP0, (L"ContinueEp0RxTransfer: All bytes received\r\n"));

  02984	e59f331c	 ldr         r3, [pc, #0x31C]
  02988	e5933440	 ldr         r3, [r3, #0x440]
  0298c	e3130c02	 tst         r3, #2, 24
  02990	0a00000f	 beq         |$LN43@ContinueEp@2|
  02994	e59f330c	 ldr         r3, [pc, #0x30C]
  02998	e5933440	 ldr         r3, [r3, #0x440]
  0299c	e3130801	 tst         r3, #1, 16
  029a0	0a000004	 beq         |$LN41@ContinueEp@2|
  029a4	e59f0304	 ldr         r0, [pc, #0x304]
  029a8	eb000000	 bl          CeLogMsg
  029ac	e3a03001	 mov         r3, #1
  029b0	e50b303c	 str         r3, [r11, #-0x3C]
  029b4	ea000003	 b           |$LN42@ContinueEp@2|
  029b8		 |$LN41@ContinueEp@2|
  029b8	e59f02f0	 ldr         r0, [pc, #0x2F0]
  029bc	eb000000	 bl          NKDbgPrintfW
  029c0	e3a03000	 mov         r3, #0
  029c4	e50b303c	 str         r3, [r11, #-0x3C]
  029c8		 |$LN42@ContinueEp@2|
  029c8	e3a03001	 mov         r3, #1
  029cc	e50b3038	 str         r3, [r11, #-0x38]
  029d0	ea000001	 b           |$LN44@ContinueEp@2|
  029d4		 |$LN43@ContinueEp@2|
  029d4	e3a03000	 mov         r3, #0
  029d8	e50b3038	 str         r3, [r11, #-0x38]
  029dc		 |$LN44@ContinueEp@2|

; 1351 : 
; 1352 :             /* Hand the packet to MDD at this point */
; 1353 :             pTransfer->dwUsbError = UFN_NO_ERROR;

  029dc	e51b309c	 ldr         r3, [r11, #-0x9C]
  029e0	e2832014	 add         r2, r3, #0x14
  029e4	e3a03000	 mov         r3, #0
  029e8	e5823000	 str         r3, [r2]

; 1354 :             complete = TRUE;

  029ec	e3a03001	 mov         r3, #1
  029f0	e50b308c	 str         r3, [r11, #-0x8C]

; 1355 : 
; 1356 :             /* Wait for the status in phase to complete */
; 1357 :             pEP->epStage = MGC_END0_STAGE_STATUSIN;

  029f4	e51b3098	 ldr         r3, [r11, #-0x98]
  029f8	e283201c	 add         r2, r3, #0x1C
  029fc	e3a03004	 mov         r3, #4
  02a00	e5823000	 str         r3, [r2]
  02a04		 |$LN4@ContinueEp@2|

; 1358 : 
; 1359 :             /* Note: We do not ACK the final packet until UfnPdd_SendControlStatusHandshake(). */
; 1360 :             // epCsrReg |= MGC_M_CSR0_P_DATAEND;
; 1361 :         }
; 1362 : 
; 1363 :         /* Note: We do not ACK the final packet until UfnPdd_SendControlStatusHandshake(). */
; 1364 :         if (!complete)

  02a04	e51b308c	 ldr         r3, [r11, #-0x8C]
  02a08	e3530000	 cmp         r3, #0
  02a0c	1a00000e	 bne         |$LN2@ContinueEp@2|

; 1365 :         {
; 1366 :             epCsrReg &= ~MGC_M_RXCSR_RXPKTRDY;

  02a10	e15b39b4	 ldrh        r3, [r11, #-0x94]
  02a14	e1a02003	 mov         r2, r3
  02a18	e3e03001	 mvn         r3, #1
  02a1c	e0023003	 and         r3, r2, r3
  02a20	e1a03803	 mov         r3, r3, lsl #16
  02a24	e1a03823	 mov         r3, r3, lsr #16
  02a28	e14b39b4	 strh        r3, [r11, #-0x94]

; 1367 :             epCsrReg |= MGC_M_CSR0_P_SVDRXPKTRDY;

  02a2c	e15b39b4	 ldrh        r3, [r11, #-0x94]
  02a30	e3833040	 orr         r3, r3, #0x40
  02a34	e1a03803	 mov         r3, r3, lsl #16
  02a38	e1a03823	 mov         r3, r3, lsr #16
  02a3c	e14b39b4	 strh        r3, [r11, #-0x94]

; 1368 :             (*pepCtrlReg) = epCsrReg;

  02a40	e15b29b4	 ldrh        r2, [r11, #-0x94]
  02a44	e51b30a0	 ldr         r3, [r11, #-0xA0]
  02a48	e1c320b0	 strh        r2, [r3]
  02a4c		 |$LN2@ContinueEp@2|
  02a4c		 |$LN71@ContinueEp@2|

; 1369 :         }
; 1370 :     }

  02a4c	ea00001c	 b           |$LN72@ContinueEp@2|
  02a50		 |$LN67@ContinueEp@2|

; 1372 :     {
; 1373 :         pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  02a50	e51b309c	 ldr         r3, [r11, #-0x9C]
  02a54	e2832014	 add         r2, r3, #0x14
  02a58	e3a03f41	 mov         r3, #0x41, 30
  02a5c	e5823000	 str         r3, [r2]

; 1374 :         complete = TRUE;

  02a60	e3a03001	 mov         r3, #1
  02a64	e50b308c	 str         r3, [r11, #-0x8C]

; 1375 :         PRINTMSG(ZONE_ERROR, (L"ContinueEp0RxTransfer: Client buffer exception!\r\n"));

  02a68	e59f3238	 ldr         r3, [pc, #0x238]
  02a6c	e5933440	 ldr         r3, [r3, #0x440]
  02a70	e3130001	 tst         r3, #1
  02a74	0a00000f	 beq         |$LN47@ContinueEp@2|
  02a78	e59f3228	 ldr         r3, [pc, #0x228]
  02a7c	e5933440	 ldr         r3, [r3, #0x440]
  02a80	e3130801	 tst         r3, #1, 16
  02a84	0a000004	 beq         |$LN45@ContinueEp@2|
  02a88	e59f021c	 ldr         r0, [pc, #0x21C]
  02a8c	eb000000	 bl          CeLogMsg
  02a90	e3a03001	 mov         r3, #1
  02a94	e50b3034	 str         r3, [r11, #-0x34]
  02a98	ea000003	 b           |$LN46@ContinueEp@2|
  02a9c		 |$LN45@ContinueEp@2|
  02a9c	e59f0208	 ldr         r0, [pc, #0x208]
  02aa0	eb000000	 bl          NKDbgPrintfW
  02aa4	e3a03000	 mov         r3, #0
  02aa8	e50b3034	 str         r3, [r11, #-0x34]
  02aac		 |$LN46@ContinueEp@2|
  02aac	e3a03001	 mov         r3, #1
  02ab0	e50b3030	 str         r3, [r11, #-0x30]
  02ab4	ea000001	 b           |$LN48@ContinueEp@2|
  02ab8		 |$LN47@ContinueEp@2|
  02ab8	e3a03000	 mov         r3, #0
  02abc	e50b3030	 str         r3, [r11, #-0x30]
  02ac0		 |$LN48@ContinueEp@2|
  02ac0	eaffffff	 b           |$LN72@ContinueEp@2|
  02ac4		 |$LN72@ContinueEp@2|
  02ac4		 |$cleanUp$48044|

; 1376 :     }
; 1377 : 
; 1378 : cleanUp:
; 1379 : 
; 1380 :     /* Leave CriticalSection */
; 1381 :     UNLOCK_ENDPOINT(pPdd);

  02ac4	e59b3000	 ldr         r3, [r11]
  02ac8	e2830e27	 add         r0, r3, #0x27, 28
  02acc	eb000000	 bl          LeaveCriticalSection

; 1382 : 
; 1383 :     /* If transaction is complete we should tell MDD */
; 1384 :     if (complete == TRUE)

  02ad0	e51b308c	 ldr         r3, [r11, #-0x8C]
  02ad4	e3530001	 cmp         r3, #1
  02ad8	1a000069	 bne         |$LN1@ContinueEp@2|

; 1385 :     {
; 1386 :         PRINTMSG(ZONE_PDD_EP0, (L"ContinueEp0RxTransfer: "
; 1387 :                  L"pTransfer 0x%08x (%d, %d, 0x%0x) - notify complete\r\n",
; 1388 :                  pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1389 :                  pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1390 :                  pTransfer != NULL ? pTransfer->dwUsbError : -1));

  02adc	e59f31c4	 ldr         r3, [pc, #0x1C4]
  02ae0	e5933440	 ldr         r3, [r3, #0x440]
  02ae4	e3130c02	 tst         r3, #2, 24
  02ae8	0a000055	 beq         |$LN63@ContinueEp@2|
  02aec	e59f31b4	 ldr         r3, [pc, #0x1B4]
  02af0	e5933440	 ldr         r3, [r3, #0x440]
  02af4	e3130801	 tst         r3, #1, 16
  02af8	0a000027	 beq         |$LN61@ContinueEp@2|
  02afc	e51b309c	 ldr         r3, [r11, #-0x9C]
  02b00	e3530000	 cmp         r3, #0
  02b04	0a000004	 beq         |$LN49@ContinueEp@2|
  02b08	e51b309c	 ldr         r3, [r11, #-0x9C]
  02b0c	e2833014	 add         r3, r3, #0x14
  02b10	e5933000	 ldr         r3, [r3]
  02b14	e50b302c	 str         r3, [r11, #-0x2C]
  02b18	ea000001	 b           |$LN50@ContinueEp@2|
  02b1c		 |$LN49@ContinueEp@2|
  02b1c	e3e03000	 mvn         r3, #0
  02b20	e50b302c	 str         r3, [r11, #-0x2C]
  02b24		 |$LN50@ContinueEp@2|
  02b24	e51b309c	 ldr         r3, [r11, #-0x9C]
  02b28	e3530000	 cmp         r3, #0
  02b2c	0a000004	 beq         |$LN51@ContinueEp@2|
  02b30	e51b309c	 ldr         r3, [r11, #-0x9C]
  02b34	e2833010	 add         r3, r3, #0x10
  02b38	e5933000	 ldr         r3, [r3]
  02b3c	e50b3028	 str         r3, [r11, #-0x28]
  02b40	ea000001	 b           |$LN52@ContinueEp@2|
  02b44		 |$LN51@ContinueEp@2|
  02b44	e3a03000	 mov         r3, #0
  02b48	e50b3028	 str         r3, [r11, #-0x28]
  02b4c		 |$LN52@ContinueEp@2|
  02b4c	e51b309c	 ldr         r3, [r11, #-0x9C]
  02b50	e3530000	 cmp         r3, #0
  02b54	0a000004	 beq         |$LN53@ContinueEp@2|
  02b58	e51b309c	 ldr         r3, [r11, #-0x9C]
  02b5c	e283300c	 add         r3, r3, #0xC
  02b60	e5933000	 ldr         r3, [r3]
  02b64	e50b3024	 str         r3, [r11, #-0x24]
  02b68	ea000001	 b           |$LN54@ContinueEp@2|
  02b6c		 |$LN53@ContinueEp@2|
  02b6c	e3a03000	 mov         r3, #0
  02b70	e50b3024	 str         r3, [r11, #-0x24]
  02b74		 |$LN54@ContinueEp@2|
  02b74	e51b302c	 ldr         r3, [r11, #-0x2C]
  02b78	e58d3000	 str         r3, [sp]
  02b7c	e51b3028	 ldr         r3, [r11, #-0x28]
  02b80	e51b2024	 ldr         r2, [r11, #-0x24]
  02b84	e51b109c	 ldr         r1, [r11, #-0x9C]
  02b88	e59f0114	 ldr         r0, [pc, #0x114]
  02b8c	eb000000	 bl          CeLogMsg
  02b90	e3a03001	 mov         r3, #1
  02b94	e50b3020	 str         r3, [r11, #-0x20]
  02b98	ea000026	 b           |$LN62@ContinueEp@2|
  02b9c		 |$LN61@ContinueEp@2|
  02b9c	e51b309c	 ldr         r3, [r11, #-0x9C]
  02ba0	e3530000	 cmp         r3, #0
  02ba4	0a000004	 beq         |$LN55@ContinueEp@2|
  02ba8	e51b309c	 ldr         r3, [r11, #-0x9C]
  02bac	e2833014	 add         r3, r3, #0x14
  02bb0	e5933000	 ldr         r3, [r3]
  02bb4	e50b301c	 str         r3, [r11, #-0x1C]
  02bb8	ea000001	 b           |$LN56@ContinueEp@2|
  02bbc		 |$LN55@ContinueEp@2|
  02bbc	e3e03000	 mvn         r3, #0
  02bc0	e50b301c	 str         r3, [r11, #-0x1C]
  02bc4		 |$LN56@ContinueEp@2|
  02bc4	e51b309c	 ldr         r3, [r11, #-0x9C]
  02bc8	e3530000	 cmp         r3, #0
  02bcc	0a000004	 beq         |$LN57@ContinueEp@2|
  02bd0	e51b309c	 ldr         r3, [r11, #-0x9C]
  02bd4	e2833010	 add         r3, r3, #0x10
  02bd8	e5933000	 ldr         r3, [r3]
  02bdc	e50b3018	 str         r3, [r11, #-0x18]
  02be0	ea000001	 b           |$LN58@ContinueEp@2|
  02be4		 |$LN57@ContinueEp@2|
  02be4	e3a03000	 mov         r3, #0
  02be8	e50b3018	 str         r3, [r11, #-0x18]
  02bec		 |$LN58@ContinueEp@2|
  02bec	e51b309c	 ldr         r3, [r11, #-0x9C]
  02bf0	e3530000	 cmp         r3, #0
  02bf4	0a000004	 beq         |$LN59@ContinueEp@2|
  02bf8	e51b309c	 ldr         r3, [r11, #-0x9C]
  02bfc	e283300c	 add         r3, r3, #0xC
  02c00	e5933000	 ldr         r3, [r3]
  02c04	e50b3014	 str         r3, [r11, #-0x14]
  02c08	ea000001	 b           |$LN60@ContinueEp@2|
  02c0c		 |$LN59@ContinueEp@2|
  02c0c	e3a03000	 mov         r3, #0
  02c10	e50b3014	 str         r3, [r11, #-0x14]
  02c14		 |$LN60@ContinueEp@2|
  02c14	e51b301c	 ldr         r3, [r11, #-0x1C]
  02c18	e58d3000	 str         r3, [sp]
  02c1c	e51b3018	 ldr         r3, [r11, #-0x18]
  02c20	e51b2014	 ldr         r2, [r11, #-0x14]
  02c24	e51b109c	 ldr         r1, [r11, #-0x9C]
  02c28	e59f0074	 ldr         r0, [pc, #0x74]
  02c2c	eb000000	 bl          NKDbgPrintfW
  02c30	e3a03000	 mov         r3, #0
  02c34	e50b3020	 str         r3, [r11, #-0x20]
  02c38		 |$LN62@ContinueEp@2|
  02c38	e3a03001	 mov         r3, #1
  02c3c	e50b3010	 str         r3, [r11, #-0x10]
  02c40	ea000001	 b           |$LN64@ContinueEp@2|
  02c44		 |$LN63@ContinueEp@2|
  02c44	e3a03000	 mov         r3, #0
  02c48	e50b3010	 str         r3, [r11, #-0x10]
  02c4c		 |$LN64@ContinueEp@2|

; 1391 :         pEP->pTransfer = NULL;

  02c4c	e51b3098	 ldr         r3, [r11, #-0x98]
  02c50	e2832020	 add         r2, r3, #0x20
  02c54	e3a03000	 mov         r3, #0
  02c58	e5823000	 str         r3, [r2]

; 1392 :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  02c5c	e51b209c	 ldr         r2, [r11, #-0x9C]
  02c60	e3a01064	 mov         r1, #0x64
  02c64	e59b3000	 ldr         r3, [r11]
  02c68	e2833010	 add         r3, r3, #0x10
  02c6c	e5930000	 ldr         r0, [r3]
  02c70	e59b3000	 ldr         r3, [r11]
  02c74	e2833014	 add         r3, r3, #0x14
  02c78	e5933000	 ldr         r3, [r3]
  02c7c	e1a0e00f	 mov         lr, pc
  02c80	e12fff13	 bx          r3
  02c84		 |$LN1@ContinueEp@2|
  02c84		 |$LN65@ContinueEp@2|

; 1393 :     }
; 1394 : 
; 1395 :     return;
; 1396 : }

  02c84	e24bd00c	 sub         sp, r11, #0xC
  02c88	e89d6800	 ldmia       sp, {r11, sp, lr}
  02c8c	e12fff1e	 bx          lr

			 ENDP  ; |ContinueEp0RxTransfer|

  02c90		 |$LN66@ContinueEp@2|
  02c90		 |$LN75@ContinueEp@2|

; 1371 :     __except(EXCEPTION_EXECUTE_HANDLER)

  02c90	e52de004	 str         lr, [sp, #-4]!
  02c94	e24dd004	 sub         sp, sp, #4
  02c98		 |$LN69@ContinueEp@2|
  02c98		 |$LN78@ContinueEp@2|
  02c98	e3a00001	 mov         r0, #1
  02c9c		 |$LN68@ContinueEp@2|
  02c9c	e28dd004	 add         sp, sp, #4
  02ca0	e49df004	 ldr         pc, [sp], #4
  02ca4		 |$LN80@ContinueEp@2|
  02ca4		 |$LN81@ContinueEp@2|
  02ca4	00000000	 DCD         |??_C@_1JI@KEJAEEDK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@|
  02ca8		 |$LN82@ContinueEp@2|
  02ca8	00000000	 DCD         |dpCurSettings|
  02cac		 |$LN83@ContinueEp@2|
  02cac	00000000	 DCD         |??_C@_1GE@FICDPAIG@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@|
  02cb0		 |$LN84@ContinueEp@2|
  02cb0	00000000	 DCD         |??_C@_1FI@EOMLGIFE@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs@|
  02cb4		 |$LN85@ContinueEp@2|
  02cb4	00000000	 DCD         |??_C@_1HO@FBDBDIJL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?$CF@|
  02cb8		 |$LN86@ContinueEp@2|
  02cb8	00000000	 DCD         |??_C@_1EK@OPJLDAME@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe@|
  02cbc		 |$LN87@ContinueEp@2|
  02cbc	00000000	 DCD         |??_C@_1EO@KJKMHCGN@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf@|
  02cc0		 |$LN88@ContinueEp@2|
  02cc0	00000000	 DCD         |??_C@_1HE@HIPHGDPE@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAE?$AAp?$AA0?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@|
  02cc4		 |$LN79@ContinueEp@2|
  02cc4		 |$LN77@ContinueEp@2|
	EXPORT	|??_C@_1KA@IBECILFP@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@PLBPNCAK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@BPLKCHA@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@FIHKGCG@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@FJAPDPOJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAN?$AAo?$AA?5?$AAp?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@OPFCFOFH@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@LPAKJCL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|ContinueRxTransfer|

  00070			 AREA	 |.pdata|, PDATA
|$T49820| DCD	|$LN74@ContinueRx|
	DCD	0xc001f205
|$T49822| DCD	|$LN64@ContinueRx|
	DCD	0x40000d02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@IBECILFP@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "y", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@PLBPNCAK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "C", 0x0, "l", 0x0, "i", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@BPLKCHA@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "R", 0x0, "X", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@FIHKGCG@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "x", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "f", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@FJAPDPOJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAN?$AAo?$AA?5?$AAp?$AAa@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@OPFCFOFH@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, ",", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ",", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "R", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@LPAKJCL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00040			 AREA	 |.xdata|, DATA
|$T49818| DCD	0x1
	DCD	|$LN68@ContinueRx|
	DCD	|$LN69@ContinueRx|
	DCD	|$LN64@ContinueRx|
	DCD	|$LN65@ContinueRx|
; Function compile flags: /Odtp

  02cc4			 AREA	 |.text|, CODE, ARM

  02cc4	00000000	 DCD         |__C_specific_handler|
  02cc8	00000000	 DCD         |$T49818|

  02ccc		 |ContinueRxTransfer| PROC

; 1421 : {

  02ccc		 |$LN74@ContinueRx|
  02ccc	e1a0c00d	 mov         r12, sp
  02cd0	e92d0003	 stmdb       sp!, {r0, r1}
  02cd4	e92d5800	 stmdb       sp!, {r11, r12, lr}
  02cd8	e28db00c	 add         r11, sp, #0xC
  02cdc	e24dd0c8	 sub         sp, sp, #0xC8
  02ce0		 |$LN72@ContinueRx|

; 1422 :     CSL_UsbRegs    *pUsbRegs     = pPdd->pUsbdRegs;

  02ce0	e59b3000	 ldr         r3, [r11]
  02ce4	e283301c	 add         r3, r3, #0x1C
  02ce8	e5933000	 ldr         r3, [r3]
  02cec	e50b30a8	 str         r3, [r11, #-0xA8]

; 1423 :     UsbFnEp        *pEP           = &pPdd->ep[endPoint];

  02cf0	e59b3000	 ldr         r3, [r11]
  02cf4	e2831fa1	 add         r1, r3, #0xA1, 30
  02cf8	e59b2004	 ldr         r2, [r11, #4]
  02cfc	e3a0303c	 mov         r3, #0x3C
  02d00	e0030392	 mul         r3, r2, r3
  02d04	e0813003	 add         r3, r1, r3
  02d08	e50b30b0	 str         r3, [r11, #-0xB0]

; 1424 :     STransfer *pTransfer = pEP->pTransfer;

  02d0c	e51b30b0	 ldr         r3, [r11, #-0xB0]
  02d10	e2833020	 add         r3, r3, #0x20
  02d14	e5933000	 ldr         r3, [r3]
  02d18	e50b30b4	 str         r3, [r11, #-0xB4]

; 1425 :     BOOL complete = FALSE;

  02d1c	e3a03000	 mov         r3, #0
  02d20	e50b30a4	 str         r3, [r11, #-0xA4]

; 1426 :     volatile UINT16 *pepCtrlReg;
; 1427 :     UINT16  epCsrReg;
; 1428 :     UINT16  rcvSize = 0;

  02d24	e3a03000	 mov         r3, #0
  02d28	e14b3cb0	 strh        r3, [r11, #-0xC0]

; 1429 :     DWORD space;
; 1430 :     DWORD count;
; 1431 :     UCHAR *pBuffer = NULL;

  02d2c	e3a03000	 mov         r3, #0
  02d30	e50b30c8	 str         r3, [r11, #-0xC8]

; 1432 : 	WORD maxSize;
; 1433 : 
; 1434 :     PRINTMSG(ZONE_PDD_RX,
; 1435 :              (L"ContinueRxTransfer: EP %d, pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 1436 :               endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1437 :               pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1438 :               pTransfer != NULL ? pTransfer->dwUsbError : -1));

  02d34	e59f3770	 ldr         r3, [pc, #0x770]
  02d38	e5933440	 ldr         r3, [r3, #0x440]
  02d3c	e3130b01	 tst         r3, #1, 22
  02d40	0a000059	 beq         |$LN23@ContinueRx|
  02d44	e59f3760	 ldr         r3, [pc, #0x760]
  02d48	e5933440	 ldr         r3, [r3, #0x440]
  02d4c	e3130801	 tst         r3, #1, 16
  02d50	0a000029	 beq         |$LN21@ContinueRx|
  02d54	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02d58	e3530000	 cmp         r3, #0
  02d5c	0a000004	 beq         |$LN9@ContinueRx|
  02d60	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02d64	e2833014	 add         r3, r3, #0x14
  02d68	e5933000	 ldr         r3, [r3]
  02d6c	e50b3078	 str         r3, [r11, #-0x78]
  02d70	ea000001	 b           |$LN10@ContinueRx|
  02d74		 |$LN9@ContinueRx|
  02d74	e3e03000	 mvn         r3, #0
  02d78	e50b3078	 str         r3, [r11, #-0x78]
  02d7c		 |$LN10@ContinueRx|
  02d7c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02d80	e3530000	 cmp         r3, #0
  02d84	0a000004	 beq         |$LN11@ContinueRx|
  02d88	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02d8c	e2833010	 add         r3, r3, #0x10
  02d90	e5933000	 ldr         r3, [r3]
  02d94	e50b3074	 str         r3, [r11, #-0x74]
  02d98	ea000001	 b           |$LN12@ContinueRx|
  02d9c		 |$LN11@ContinueRx|
  02d9c	e3a03000	 mov         r3, #0
  02da0	e50b3074	 str         r3, [r11, #-0x74]
  02da4		 |$LN12@ContinueRx|
  02da4	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02da8	e3530000	 cmp         r3, #0
  02dac	0a000004	 beq         |$LN13@ContinueRx|
  02db0	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02db4	e283300c	 add         r3, r3, #0xC
  02db8	e5933000	 ldr         r3, [r3]
  02dbc	e50b3070	 str         r3, [r11, #-0x70]
  02dc0	ea000001	 b           |$LN14@ContinueRx|
  02dc4		 |$LN13@ContinueRx|
  02dc4	e3a03000	 mov         r3, #0
  02dc8	e50b3070	 str         r3, [r11, #-0x70]
  02dcc		 |$LN14@ContinueRx|
  02dcc	e51b3078	 ldr         r3, [r11, #-0x78]
  02dd0	e58d3004	 str         r3, [sp, #4]
  02dd4	e51b3074	 ldr         r3, [r11, #-0x74]
  02dd8	e58d3000	 str         r3, [sp]
  02ddc	e51b3070	 ldr         r3, [r11, #-0x70]
  02de0	e51b20b4	 ldr         r2, [r11, #-0xB4]
  02de4	e59b1004	 ldr         r1, [r11, #4]
  02de8	e59f06d4	 ldr         r0, [pc, #0x6D4]
  02dec	eb000000	 bl          CeLogMsg
  02df0	e3a03001	 mov         r3, #1
  02df4	e50b306c	 str         r3, [r11, #-0x6C]
  02df8	ea000028	 b           |$LN22@ContinueRx|
  02dfc		 |$LN21@ContinueRx|
  02dfc	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02e00	e3530000	 cmp         r3, #0
  02e04	0a000004	 beq         |$LN15@ContinueRx|
  02e08	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02e0c	e2833014	 add         r3, r3, #0x14
  02e10	e5933000	 ldr         r3, [r3]
  02e14	e50b3068	 str         r3, [r11, #-0x68]
  02e18	ea000001	 b           |$LN16@ContinueRx|
  02e1c		 |$LN15@ContinueRx|
  02e1c	e3e03000	 mvn         r3, #0
  02e20	e50b3068	 str         r3, [r11, #-0x68]
  02e24		 |$LN16@ContinueRx|
  02e24	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02e28	e3530000	 cmp         r3, #0
  02e2c	0a000004	 beq         |$LN17@ContinueRx|
  02e30	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02e34	e2833010	 add         r3, r3, #0x10
  02e38	e5933000	 ldr         r3, [r3]
  02e3c	e50b3064	 str         r3, [r11, #-0x64]
  02e40	ea000001	 b           |$LN18@ContinueRx|
  02e44		 |$LN17@ContinueRx|
  02e44	e3a03000	 mov         r3, #0
  02e48	e50b3064	 str         r3, [r11, #-0x64]
  02e4c		 |$LN18@ContinueRx|
  02e4c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02e50	e3530000	 cmp         r3, #0
  02e54	0a000004	 beq         |$LN19@ContinueRx|
  02e58	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02e5c	e283300c	 add         r3, r3, #0xC
  02e60	e5933000	 ldr         r3, [r3]
  02e64	e50b3060	 str         r3, [r11, #-0x60]
  02e68	ea000001	 b           |$LN20@ContinueRx|
  02e6c		 |$LN19@ContinueRx|
  02e6c	e3a03000	 mov         r3, #0
  02e70	e50b3060	 str         r3, [r11, #-0x60]
  02e74		 |$LN20@ContinueRx|
  02e74	e51b3068	 ldr         r3, [r11, #-0x68]
  02e78	e58d3004	 str         r3, [sp, #4]
  02e7c	e51b3064	 ldr         r3, [r11, #-0x64]
  02e80	e58d3000	 str         r3, [sp]
  02e84	e51b3060	 ldr         r3, [r11, #-0x60]
  02e88	e51b20b4	 ldr         r2, [r11, #-0xB4]
  02e8c	e59b1004	 ldr         r1, [r11, #4]
  02e90	e59f062c	 ldr         r0, [pc, #0x62C]
  02e94	eb000000	 bl          NKDbgPrintfW
  02e98	e3a03000	 mov         r3, #0
  02e9c	e50b306c	 str         r3, [r11, #-0x6C]
  02ea0		 |$LN22@ContinueRx|
  02ea0	e3a03001	 mov         r3, #1
  02ea4	e50b305c	 str         r3, [r11, #-0x5C]
  02ea8	ea000001	 b           |$LN24@ContinueRx|
  02eac		 |$LN23@ContinueRx|
  02eac	e3a03000	 mov         r3, #0
  02eb0	e50b305c	 str         r3, [r11, #-0x5C]
  02eb4		 |$LN24@ContinueRx|

; 1439 : 
; 1440 :     /* Enter CriticalSection */
; 1441 :     LOCK_ENDPOINT(pPdd);

  02eb4	e59b3000	 ldr         r3, [r11]
  02eb8	e2830e27	 add         r0, r3, #0x27, 28
  02ebc	eb000000	 bl          EnterCriticalSection

; 1442 : 
; 1443 :     pepCtrlReg = &pUsbRegs->EPCSR[ endPoint ].PERI_RXCSR;

  02ec0	e51b30a8	 ldr         r3, [r11, #-0xA8]
  02ec4	e2831c05	 add         r1, r3, #5, 24
  02ec8	e59b2004	 ldr         r2, [r11, #4]
  02ecc	e3a03010	 mov         r3, #0x10
  02ed0	e0030392	 mul         r3, r2, r3
  02ed4	e0813003	 add         r3, r1, r3
  02ed8	e2833006	 add         r3, r3, #6
  02edc	e50b30b8	 str         r3, [r11, #-0xB8]

; 1444 :     epCsrReg = (*pepCtrlReg);

  02ee0	e51b30b8	 ldr         r3, [r11, #-0xB8]
  02ee4	e1d330b0	 ldrh        r3, [r3]
  02ee8	e14b3abc	 strh        r3, [r11, #-0xAC]

; 1445 : 
; 1446 :     /* Should always have a transfer */
; 1447 :     if (pTransfer == NULL)

  02eec	e51b30b4	 ldr         r3, [r11, #-0xB4]
  02ef0	e3530000	 cmp         r3, #0
  02ef4	1a00001a	 bne         |$LN6@ContinueRx|

; 1448 :     {
; 1449 :         PRINTMSG(ZONE_ERROR, (L"ContinueRxTransfer: EP %d, Error, NULL transfer, CSR 0x%x",
; 1450 :                               endPoint, epCsrReg));

  02ef8	e59f35ac	 ldr         r3, [pc, #0x5AC]
  02efc	e5933440	 ldr         r3, [r3, #0x440]
  02f00	e3130001	 tst         r3, #1
  02f04	0a000013	 beq         |$LN27@ContinueRx|
  02f08	e59f359c	 ldr         r3, [pc, #0x59C]
  02f0c	e5933440	 ldr         r3, [r3, #0x440]
  02f10	e3130801	 tst         r3, #1, 16
  02f14	0a000006	 beq         |$LN25@ContinueRx|
  02f18	e15b2abc	 ldrh        r2, [r11, #-0xAC]
  02f1c	e59b1004	 ldr         r1, [r11, #4]
  02f20	e59f0598	 ldr         r0, [pc, #0x598]
  02f24	eb000000	 bl          CeLogMsg
  02f28	e3a03001	 mov         r3, #1
  02f2c	e50b3058	 str         r3, [r11, #-0x58]
  02f30	ea000005	 b           |$LN26@ContinueRx|
  02f34		 |$LN25@ContinueRx|
  02f34	e15b2abc	 ldrh        r2, [r11, #-0xAC]
  02f38	e59b1004	 ldr         r1, [r11, #4]
  02f3c	e59f057c	 ldr         r0, [pc, #0x57C]
  02f40	eb000000	 bl          NKDbgPrintfW
  02f44	e3a03000	 mov         r3, #0
  02f48	e50b3058	 str         r3, [r11, #-0x58]
  02f4c		 |$LN26@ContinueRx|
  02f4c	e3a03001	 mov         r3, #1
  02f50	e50b3054	 str         r3, [r11, #-0x54]
  02f54	ea000001	 b           |$LN28@ContinueRx|
  02f58		 |$LN27@ContinueRx|
  02f58	e3a03000	 mov         r3, #0
  02f5c	e50b3054	 str         r3, [r11, #-0x54]
  02f60		 |$LN28@ContinueRx|

; 1451 :         goto cleanUp;

  02f60	ea0000d4	 b           |$cleanUp$48101|
  02f64		 |$LN6@ContinueRx|

; 1452 :     }
; 1453 : 
; 1454 :     /* Arrived here before pkt received (probably after a NAK)? */
; 1455 :     if ((epCsrReg & MGC_M_RXCSR_RXPKTRDY) == 0)

  02f64	e15b3abc	 ldrh        r3, [r11, #-0xAC]
  02f68	e3130001	 tst         r3, #1
  02f6c	1a00001a	 bne         |$LN5@ContinueRx|

; 1456 :     {
; 1457 :         PRINTMSG(ZONE_PDD_RX, (L"ContinueRxTransfer: EP %d, No packet received, CSR 0x%x",
; 1458 :                                endPoint, epCsrReg));

  02f70	e59f3534	 ldr         r3, [pc, #0x534]
  02f74	e5933440	 ldr         r3, [r3, #0x440]
  02f78	e3130b01	 tst         r3, #1, 22
  02f7c	0a000013	 beq         |$LN31@ContinueRx|
  02f80	e59f3524	 ldr         r3, [pc, #0x524]
  02f84	e5933440	 ldr         r3, [r3, #0x440]
  02f88	e3130801	 tst         r3, #1, 16
  02f8c	0a000006	 beq         |$LN29@ContinueRx|
  02f90	e15b2abc	 ldrh        r2, [r11, #-0xAC]
  02f94	e59b1004	 ldr         r1, [r11, #4]
  02f98	e59f051c	 ldr         r0, [pc, #0x51C]
  02f9c	eb000000	 bl          CeLogMsg
  02fa0	e3a03001	 mov         r3, #1
  02fa4	e50b3050	 str         r3, [r11, #-0x50]
  02fa8	ea000005	 b           |$LN30@ContinueRx|
  02fac		 |$LN29@ContinueRx|
  02fac	e15b2abc	 ldrh        r2, [r11, #-0xAC]
  02fb0	e59b1004	 ldr         r1, [r11, #4]
  02fb4	e59f0500	 ldr         r0, [pc, #0x500]
  02fb8	eb000000	 bl          NKDbgPrintfW
  02fbc	e3a03000	 mov         r3, #0
  02fc0	e50b3050	 str         r3, [r11, #-0x50]
  02fc4		 |$LN30@ContinueRx|
  02fc4	e3a03001	 mov         r3, #1
  02fc8	e50b304c	 str         r3, [r11, #-0x4C]
  02fcc	ea000001	 b           |$LN32@ContinueRx|
  02fd0		 |$LN31@ContinueRx|
  02fd0	e3a03000	 mov         r3, #0
  02fd4	e50b304c	 str         r3, [r11, #-0x4C]
  02fd8		 |$LN32@ContinueRx|

; 1459 :         goto cleanUp;

  02fd8	ea0000b6	 b           |$cleanUp$48101|
  02fdc		 |$LN5@ContinueRx|

; 1460 :     }
; 1461 : 
; 1462 :     rcvSize = pUsbRegs->EPCSR[ endPoint ].RXCOUNT;

  02fdc	e51b30a8	 ldr         r3, [r11, #-0xA8]
  02fe0	e2831c05	 add         r1, r3, #5, 24
  02fe4	e59b2004	 ldr         r2, [r11, #4]
  02fe8	e3a03010	 mov         r3, #0x10
  02fec	e0030392	 mul         r3, r2, r3
  02ff0	e0813003	 add         r3, r1, r3
  02ff4	e2833008	 add         r3, r3, #8
  02ff8	e1d330b0	 ldrh        r3, [r3]
  02ffc	e14b3cb0	 strh        r3, [r11, #-0xC0]

; 1463 :     maxSize = pEP->maxPacketSize;

  03000	e51b30b0	 ldr         r3, [r11, #-0xB0]
  03004	e2833008	 add         r3, r3, #8
  03008	e1d330b0	 ldrh        r3, [r3]
  0300c	e14b3cbc	 strh        r3, [r11, #-0xCC]

; 1464 : 
; 1465 :     /* Update the State of this EP */
; 1466 :     pEP->epStage = MGC_END0_STAGE_RX;

  03010	e51b30b0	 ldr         r3, [r11, #-0xB0]
  03014	e283201c	 add         r2, r3, #0x1C
  03018	e3a03003	 mov         r3, #3
  0301c	e5823000	 str         r3, [r2]
  03020		 |$LN68@ContinueRx|

; 1467 :     __try
; 1468 :     {
; 1469 :         pBuffer = (UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  03020	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03024	e2832004	 add         r2, r3, #4
  03028	e51b30b4	 ldr         r3, [r11, #-0xB4]
  0302c	e2833010	 add         r3, r3, #0x10
  03030	e5922000	 ldr         r2, [r2]
  03034	e5933000	 ldr         r3, [r3]
  03038	e0823003	 add         r3, r2, r3
  0303c	e50b30c8	 str         r3, [r11, #-0xC8]

; 1470 :         space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  03040	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03044	e283200c	 add         r2, r3, #0xC
  03048	e51b30b4	 ldr         r3, [r11, #-0xB4]
  0304c	e2833010	 add         r3, r3, #0x10
  03050	e5922000	 ldr         r2, [r2]
  03054	e5933000	 ldr         r3, [r3]
  03058	e0423003	 sub         r3, r2, r3
  0305c	e50b30bc	 str         r3, [r11, #-0xBC]

; 1471 : 
; 1472 :         /* Get number of bytes to be unloaded from FIFO
; 1473 :          * Check the FIFO's Max Pkt Size against the Size
; 1474 :          * available in the pTransfer Buffer
; 1475 :          */
; 1476 : 
; 1477 :         /* First Check what amount of space is available in the pTransfer
; 1478 :          * Buffer and also the amount of data sent by the Host. The
; 1479 :          * minimum of these two needs to be considered
; 1480 :          */
; 1481 :         count = (rcvSize > space) ? space : rcvSize;

  03060	e15b2cb0	 ldrh        r2, [r11, #-0xC0]
  03064	e51b30bc	 ldr         r3, [r11, #-0xBC]
  03068	e1520003	 cmp         r2, r3
  0306c	9a000002	 bls         |$LN33@ContinueRx|
  03070	e51b30bc	 ldr         r3, [r11, #-0xBC]
  03074	e50b3048	 str         r3, [r11, #-0x48]
  03078	ea000001	 b           |$LN34@ContinueRx|
  0307c		 |$LN33@ContinueRx|
  0307c	e15b3cb0	 ldrh        r3, [r11, #-0xC0]
  03080	e50b3048	 str         r3, [r11, #-0x48]
  03084		 |$LN34@ContinueRx|
  03084	e51b3048	 ldr         r3, [r11, #-0x48]
  03088	e50b30c4	 str         r3, [r11, #-0xC4]

; 1482 : 
; 1483 :         PRINTMSG(ZONE_PDD_RX,
; 1484 :                  (L"ContinueRxTransfer: EP %d, Reading %d bytes, maxSize %d, left %d\r\n",
; 1485 :                   endPoint, count, maxSize, space));

  0308c	e59f3418	 ldr         r3, [pc, #0x418]
  03090	e5933440	 ldr         r3, [r3, #0x440]
  03094	e3130b01	 tst         r3, #1, 22
  03098	0a000019	 beq         |$LN37@ContinueRx|
  0309c	e59f3408	 ldr         r3, [pc, #0x408]
  030a0	e5933440	 ldr         r3, [r3, #0x440]
  030a4	e3130801	 tst         r3, #1, 16
  030a8	0a000009	 beq         |$LN35@ContinueRx|
  030ac	e51b30bc	 ldr         r3, [r11, #-0xBC]
  030b0	e58d3000	 str         r3, [sp]
  030b4	e15b3cbc	 ldrh        r3, [r11, #-0xCC]
  030b8	e51b20c4	 ldr         r2, [r11, #-0xC4]
  030bc	e59b1004	 ldr         r1, [r11, #4]
  030c0	e59f03f0	 ldr         r0, [pc, #0x3F0]
  030c4	eb000000	 bl          CeLogMsg
  030c8	e3a03001	 mov         r3, #1
  030cc	e50b3044	 str         r3, [r11, #-0x44]
  030d0	ea000008	 b           |$LN36@ContinueRx|
  030d4		 |$LN35@ContinueRx|
  030d4	e51b30bc	 ldr         r3, [r11, #-0xBC]
  030d8	e58d3000	 str         r3, [sp]
  030dc	e15b3cbc	 ldrh        r3, [r11, #-0xCC]
  030e0	e51b20c4	 ldr         r2, [r11, #-0xC4]
  030e4	e59b1004	 ldr         r1, [r11, #4]
  030e8	e59f03c8	 ldr         r0, [pc, #0x3C8]
  030ec	eb000000	 bl          NKDbgPrintfW
  030f0	e3a03000	 mov         r3, #0
  030f4	e50b3044	 str         r3, [r11, #-0x44]
  030f8		 |$LN36@ContinueRx|
  030f8	e3a03001	 mov         r3, #1
  030fc	e50b3040	 str         r3, [r11, #-0x40]
  03100	ea000001	 b           |$LN38@ContinueRx|
  03104		 |$LN37@ContinueRx|
  03104	e3a03000	 mov         r3, #0
  03108	e50b3040	 str         r3, [r11, #-0x40]
  0310c		 |$LN38@ContinueRx|

; 1486 : 
; 1487 : 		/* Read data */
; 1488 : 		ReadFIFO(pPdd, (UCHAR)endPoint, pBuffer, count);

  0310c	e51b30c4	 ldr         r3, [r11, #-0xC4]
  03110	e51b20c8	 ldr         r2, [r11, #-0xC8]
  03114	e59b1004	 ldr         r1, [r11, #4]
  03118	e20110ff	 and         r1, r1, #0xFF
  0311c	e59b0000	 ldr         r0, [r11]
  03120	eb000000	 bl          ReadFIFO

; 1489 : 
; 1490 :         /* We transfered some data */
; 1491 :         pTransfer->cbTransferred += count ;

  03124	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03128	e2833010	 add         r3, r3, #0x10
  0312c	e5932000	 ldr         r2, [r3]
  03130	e51b30c4	 ldr         r3, [r11, #-0xC4]
  03134	e0822003	 add         r2, r2, r3
  03138	e51b30b4	 ldr         r3, [r11, #-0xB4]
  0313c	e2833010	 add         r3, r3, #0x10
  03140	e5832000	 str         r2, [r3]

; 1492 : 
; 1493 :         /* Is this end of transfer? We will determine this
; 1494 :          * situation based on two conditions.
; 1495 :          * 1. The Buffer Size inside the pTransfer is filled up
; 1496 :          * 2. The Received pkt Size is lesser than the maximum
; 1497 :          * size of the RxFIFO. The Spec says that if huge number
; 1498 :          * of data needs to be sent to the Controller, it will
; 1499 :          * send it in multiples of the wMaxPacketSize field
; 1500 :          * of the EndPoint Descriptor. The last residue data is
; 1501 :          * sent in a packet which has length lesser than wMaxPacketSize
; 1502 :          */
; 1503 :         if ((pTransfer->cbTransferred == pTransfer->cbBuffer) ||
; 1504 :             (count < maxSize))

  03144	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03148	e2832010	 add         r2, r3, #0x10
  0314c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03150	e283300c	 add         r3, r3, #0xC
  03154	e5922000	 ldr         r2, [r2]
  03158	e5933000	 ldr         r3, [r3]
  0315c	e1520003	 cmp         r2, r3
  03160	0a000003	 beq         |$LN2@ContinueRx|
  03164	e15b2cbc	 ldrh        r2, [r11, #-0xCC]
  03168	e51b30c4	 ldr         r3, [r11, #-0xC4]
  0316c	e1530002	 cmp         r3, r2
  03170	2a000028	 bcs         |$LN3@ContinueRx|
  03174		 |$LN2@ContinueRx|

; 1505 :         {
; 1506 :             /* Done */
; 1507 :             PRINTMSG(ZONE_PDD_RX, (L"ContinueRxTransfer: EP %d, RX complete\r\n", endPoint));

  03174	e59f3330	 ldr         r3, [pc, #0x330]
  03178	e5933440	 ldr         r3, [r3, #0x440]
  0317c	e3130b01	 tst         r3, #1, 22
  03180	0a000011	 beq         |$LN41@ContinueRx|
  03184	e59f3320	 ldr         r3, [pc, #0x320]
  03188	e5933440	 ldr         r3, [r3, #0x440]
  0318c	e3130801	 tst         r3, #1, 16
  03190	0a000005	 beq         |$LN39@ContinueRx|
  03194	e59b1004	 ldr         r1, [r11, #4]
  03198	e59f0314	 ldr         r0, [pc, #0x314]
  0319c	eb000000	 bl          CeLogMsg
  031a0	e3a03001	 mov         r3, #1
  031a4	e50b303c	 str         r3, [r11, #-0x3C]
  031a8	ea000004	 b           |$LN40@ContinueRx|
  031ac		 |$LN39@ContinueRx|
  031ac	e59b1004	 ldr         r1, [r11, #4]
  031b0	e59f02fc	 ldr         r0, [pc, #0x2FC]
  031b4	eb000000	 bl          NKDbgPrintfW
  031b8	e3a03000	 mov         r3, #0
  031bc	e50b303c	 str         r3, [r11, #-0x3C]
  031c0		 |$LN40@ContinueRx|
  031c0	e3a03001	 mov         r3, #1
  031c4	e50b3038	 str         r3, [r11, #-0x38]
  031c8	ea000001	 b           |$LN42@ContinueRx|
  031cc		 |$LN41@ContinueRx|
  031cc	e3a03000	 mov         r3, #0
  031d0	e50b3038	 str         r3, [r11, #-0x38]
  031d4		 |$LN42@ContinueRx|

; 1508 :             pTransfer->dwUsbError = UFN_NO_ERROR;

  031d4	e51b30b4	 ldr         r3, [r11, #-0xB4]
  031d8	e2832014	 add         r2, r3, #0x14
  031dc	e3a03000	 mov         r3, #0
  031e0	e5823000	 str         r3, [r2]

; 1509 :             pEP->epStage   = MGC_END0_START;

  031e4	e51b30b0	 ldr         r3, [r11, #-0xB0]
  031e8	e283201c	 add         r2, r3, #0x1C
  031ec	e3a03001	 mov         r3, #1
  031f0	e5823000	 str         r3, [r2]

; 1510 :             complete       = TRUE;

  031f4	e3a03001	 mov         r3, #1
  031f8	e50b30a4	 str         r3, [r11, #-0xA4]

; 1511 : 
; 1512 :             /* Disable RX interrupt */
; 1513 : 			pUsbRegs->EP_INTMSKCLRR = (1 << endPoint) << USB_OTG_RXINT_SHIFT;

  031fc	e59b2004	 ldr         r2, [r11, #4]
  03200	e3a03001	 mov         r3, #1
  03204	e1a03213	 mov         r3, r3, lsl r2
  03208	e1a02803	 mov         r2, r3, lsl #16
  0320c	e51b30a8	 ldr         r3, [r11, #-0xA8]
  03210	e2833034	 add         r3, r3, #0x34
  03214	e5832000	 str         r2, [r3]
  03218		 |$LN3@ContinueRx|

; 1514 :         }
; 1515 : 
; 1516 :         /* Packet Unloaded from RX FIFO, clear RxPktRDY */
; 1517 :         epCsrReg &= ~MGC_M_RXCSR_RXPKTRDY;

  03218	e15b3abc	 ldrh        r3, [r11, #-0xAC]
  0321c	e1a02003	 mov         r2, r3
  03220	e3e03001	 mvn         r3, #1
  03224	e0023003	 and         r3, r2, r3
  03228	e1a03803	 mov         r3, r3, lsl #16
  0322c	e1a03823	 mov         r3, r3, lsr #16
  03230	e14b3abc	 strh        r3, [r11, #-0xAC]

; 1518 :         (*pepCtrlReg) = epCsrReg;

  03234	e15b2abc	 ldrh        r2, [r11, #-0xAC]
  03238	e51b30b8	 ldr         r3, [r11, #-0xB8]
  0323c	e1c320b0	 strh        r2, [r3]
  03240		 |$LN69@ContinueRx|

; 1519 :     }

  03240	ea00001c	 b           |$LN70@ContinueRx|
  03244		 |$LN65@ContinueRx|

; 1521 :     {
; 1522 :         pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  03244	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03248	e2832014	 add         r2, r3, #0x14
  0324c	e3a03f41	 mov         r3, #0x41, 30
  03250	e5823000	 str         r3, [r2]

; 1523 :         complete = TRUE;

  03254	e3a03001	 mov         r3, #1
  03258	e50b30a4	 str         r3, [r11, #-0xA4]

; 1524 :         PRINTMSG(ZONE_ERROR, (L"ContinueRxTransfer: Client buffer exception!\r\n"));

  0325c	e59f3248	 ldr         r3, [pc, #0x248]
  03260	e5933440	 ldr         r3, [r3, #0x440]
  03264	e3130001	 tst         r3, #1
  03268	0a00000f	 beq         |$LN45@ContinueRx|
  0326c	e59f3238	 ldr         r3, [pc, #0x238]
  03270	e5933440	 ldr         r3, [r3, #0x440]
  03274	e3130801	 tst         r3, #1, 16
  03278	0a000004	 beq         |$LN43@ContinueRx|
  0327c	e59f022c	 ldr         r0, [pc, #0x22C]
  03280	eb000000	 bl          CeLogMsg
  03284	e3a03001	 mov         r3, #1
  03288	e50b3034	 str         r3, [r11, #-0x34]
  0328c	ea000003	 b           |$LN44@ContinueRx|
  03290		 |$LN43@ContinueRx|
  03290	e59f0218	 ldr         r0, [pc, #0x218]
  03294	eb000000	 bl          NKDbgPrintfW
  03298	e3a03000	 mov         r3, #0
  0329c	e50b3034	 str         r3, [r11, #-0x34]
  032a0		 |$LN44@ContinueRx|
  032a0	e3a03001	 mov         r3, #1
  032a4	e50b3030	 str         r3, [r11, #-0x30]
  032a8	ea000001	 b           |$LN46@ContinueRx|
  032ac		 |$LN45@ContinueRx|
  032ac	e3a03000	 mov         r3, #0
  032b0	e50b3030	 str         r3, [r11, #-0x30]
  032b4		 |$LN46@ContinueRx|
  032b4	eaffffff	 b           |$LN70@ContinueRx|
  032b8		 |$LN70@ContinueRx|
  032b8		 |$cleanUp$48101|

; 1525 :     }
; 1526 : 
; 1527 : cleanUp:
; 1528 : 
; 1529 :     /* Leave CriticalSection */
; 1530 :     UNLOCK_ENDPOINT(pPdd);

  032b8	e59b3000	 ldr         r3, [r11]
  032bc	e2830e27	 add         r0, r3, #0x27, 28
  032c0	eb000000	 bl          LeaveCriticalSection

; 1531 : 
; 1532 :     /* If transaction is complete we should tell MDD */
; 1533 :     if (complete == TRUE)

  032c4	e51b30a4	 ldr         r3, [r11, #-0xA4]
  032c8	e3530001	 cmp         r3, #1
  032cc	1a00006d	 bne         |$LN1@ContinueRx|

; 1534 :     {
; 1535 :         PRINTMSG(ZONE_PDD_RX, (L"ContinueRxTransfer: "
; 1536 :                  L"EP %d, pTransfer 0x%08x (%d, %d, 0x%0x) - notify complete\r\n",
; 1537 :                  endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1538 :                  pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1539 :                  pTransfer != NULL ? pTransfer->dwUsbError : -1));

  032d0	e59f31d4	 ldr         r3, [pc, #0x1D4]
  032d4	e5933440	 ldr         r3, [r3, #0x440]
  032d8	e3130b01	 tst         r3, #1, 22
  032dc	0a000059	 beq         |$LN61@ContinueRx|
  032e0	e59f31c4	 ldr         r3, [pc, #0x1C4]
  032e4	e5933440	 ldr         r3, [r3, #0x440]
  032e8	e3130801	 tst         r3, #1, 16
  032ec	0a000029	 beq         |$LN59@ContinueRx|
  032f0	e51b30b4	 ldr         r3, [r11, #-0xB4]
  032f4	e3530000	 cmp         r3, #0
  032f8	0a000004	 beq         |$LN47@ContinueRx|
  032fc	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03300	e2833014	 add         r3, r3, #0x14
  03304	e5933000	 ldr         r3, [r3]
  03308	e50b302c	 str         r3, [r11, #-0x2C]
  0330c	ea000001	 b           |$LN48@ContinueRx|
  03310		 |$LN47@ContinueRx|
  03310	e3e03000	 mvn         r3, #0
  03314	e50b302c	 str         r3, [r11, #-0x2C]
  03318		 |$LN48@ContinueRx|
  03318	e51b30b4	 ldr         r3, [r11, #-0xB4]
  0331c	e3530000	 cmp         r3, #0
  03320	0a000004	 beq         |$LN49@ContinueRx|
  03324	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03328	e2833010	 add         r3, r3, #0x10
  0332c	e5933000	 ldr         r3, [r3]
  03330	e50b3028	 str         r3, [r11, #-0x28]
  03334	ea000001	 b           |$LN50@ContinueRx|
  03338		 |$LN49@ContinueRx|
  03338	e3a03000	 mov         r3, #0
  0333c	e50b3028	 str         r3, [r11, #-0x28]
  03340		 |$LN50@ContinueRx|
  03340	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03344	e3530000	 cmp         r3, #0
  03348	0a000004	 beq         |$LN51@ContinueRx|
  0334c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  03350	e283300c	 add         r3, r3, #0xC
  03354	e5933000	 ldr         r3, [r3]
  03358	e50b3024	 str         r3, [r11, #-0x24]
  0335c	ea000001	 b           |$LN52@ContinueRx|
  03360		 |$LN51@ContinueRx|
  03360	e3a03000	 mov         r3, #0
  03364	e50b3024	 str         r3, [r11, #-0x24]
  03368		 |$LN52@ContinueRx|
  03368	e51b302c	 ldr         r3, [r11, #-0x2C]
  0336c	e58d3004	 str         r3, [sp, #4]
  03370	e51b3028	 ldr         r3, [r11, #-0x28]
  03374	e58d3000	 str         r3, [sp]
  03378	e51b3024	 ldr         r3, [r11, #-0x24]
  0337c	e51b20b4	 ldr         r2, [r11, #-0xB4]
  03380	e59b1004	 ldr         r1, [r11, #4]
  03384	e59f011c	 ldr         r0, [pc, #0x11C]
  03388	eb000000	 bl          CeLogMsg
  0338c	e3a03001	 mov         r3, #1
  03390	e50b3020	 str         r3, [r11, #-0x20]
  03394	ea000028	 b           |$LN60@ContinueRx|
  03398		 |$LN59@ContinueRx|
  03398	e51b30b4	 ldr         r3, [r11, #-0xB4]
  0339c	e3530000	 cmp         r3, #0
  033a0	0a000004	 beq         |$LN53@ContinueRx|
  033a4	e51b30b4	 ldr         r3, [r11, #-0xB4]
  033a8	e2833014	 add         r3, r3, #0x14
  033ac	e5933000	 ldr         r3, [r3]
  033b0	e50b301c	 str         r3, [r11, #-0x1C]
  033b4	ea000001	 b           |$LN54@ContinueRx|
  033b8		 |$LN53@ContinueRx|
  033b8	e3e03000	 mvn         r3, #0
  033bc	e50b301c	 str         r3, [r11, #-0x1C]
  033c0		 |$LN54@ContinueRx|
  033c0	e51b30b4	 ldr         r3, [r11, #-0xB4]
  033c4	e3530000	 cmp         r3, #0
  033c8	0a000004	 beq         |$LN55@ContinueRx|
  033cc	e51b30b4	 ldr         r3, [r11, #-0xB4]
  033d0	e2833010	 add         r3, r3, #0x10
  033d4	e5933000	 ldr         r3, [r3]
  033d8	e50b3018	 str         r3, [r11, #-0x18]
  033dc	ea000001	 b           |$LN56@ContinueRx|
  033e0		 |$LN55@ContinueRx|
  033e0	e3a03000	 mov         r3, #0
  033e4	e50b3018	 str         r3, [r11, #-0x18]
  033e8		 |$LN56@ContinueRx|
  033e8	e51b30b4	 ldr         r3, [r11, #-0xB4]
  033ec	e3530000	 cmp         r3, #0
  033f0	0a000004	 beq         |$LN57@ContinueRx|
  033f4	e51b30b4	 ldr         r3, [r11, #-0xB4]
  033f8	e283300c	 add         r3, r3, #0xC
  033fc	e5933000	 ldr         r3, [r3]
  03400	e50b3014	 str         r3, [r11, #-0x14]
  03404	ea000001	 b           |$LN58@ContinueRx|
  03408		 |$LN57@ContinueRx|
  03408	e3a03000	 mov         r3, #0
  0340c	e50b3014	 str         r3, [r11, #-0x14]
  03410		 |$LN58@ContinueRx|
  03410	e51b301c	 ldr         r3, [r11, #-0x1C]
  03414	e58d3004	 str         r3, [sp, #4]
  03418	e51b3018	 ldr         r3, [r11, #-0x18]
  0341c	e58d3000	 str         r3, [sp]
  03420	e51b3014	 ldr         r3, [r11, #-0x14]
  03424	e51b20b4	 ldr         r2, [r11, #-0xB4]
  03428	e59b1004	 ldr         r1, [r11, #4]
  0342c	e59f0074	 ldr         r0, [pc, #0x74]
  03430	eb000000	 bl          NKDbgPrintfW
  03434	e3a03000	 mov         r3, #0
  03438	e50b3020	 str         r3, [r11, #-0x20]
  0343c		 |$LN60@ContinueRx|
  0343c	e3a03001	 mov         r3, #1
  03440	e50b3010	 str         r3, [r11, #-0x10]
  03444	ea000001	 b           |$LN62@ContinueRx|
  03448		 |$LN61@ContinueRx|
  03448	e3a03000	 mov         r3, #0
  0344c	e50b3010	 str         r3, [r11, #-0x10]
  03450		 |$LN62@ContinueRx|

; 1540 :         pEP->pTransfer = NULL;

  03450	e51b30b0	 ldr         r3, [r11, #-0xB0]
  03454	e2832020	 add         r2, r3, #0x20
  03458	e3a03000	 mov         r3, #0
  0345c	e5823000	 str         r3, [r2]

; 1541 :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  03460	e51b20b4	 ldr         r2, [r11, #-0xB4]
  03464	e3a01064	 mov         r1, #0x64
  03468	e59b3000	 ldr         r3, [r11]
  0346c	e2833010	 add         r3, r3, #0x10
  03470	e5930000	 ldr         r0, [r3]
  03474	e59b3000	 ldr         r3, [r11]
  03478	e2833014	 add         r3, r3, #0x14
  0347c	e5933000	 ldr         r3, [r3]
  03480	e1a0e00f	 mov         lr, pc
  03484	e12fff13	 bx          r3
  03488		 |$LN1@ContinueRx|
  03488		 |$LN63@ContinueRx|

; 1542 :     }
; 1543 : 
; 1544 :     return;
; 1545 : }

  03488	e24bd00c	 sub         sp, r11, #0xC
  0348c	e89d6800	 ldmia       sp, {r11, sp, lr}
  03490	e12fff1e	 bx          lr

			 ENDP  ; |ContinueRxTransfer|

  03494		 |$LN64@ContinueRx|
  03494		 |$LN73@ContinueRx|

; 1520 :     __except(EXCEPTION_EXECUTE_HANDLER)

  03494	e52de004	 str         lr, [sp, #-4]!
  03498	e24dd008	 sub         sp, sp, #8
  0349c		 |$LN67@ContinueRx|
  0349c		 |$LN76@ContinueRx|
  0349c	e3a00001	 mov         r0, #1
  034a0		 |$LN66@ContinueRx|
  034a0	e28dd008	 add         sp, sp, #8
  034a4	e49df004	 ldr         pc, [sp], #4
  034a8		 |$LN78@ContinueRx|
  034a8		 |$LN79@ContinueRx|
  034a8	00000000	 DCD         |??_C@_1KA@IBECILFP@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@|
  034ac		 |$LN80@ContinueRx|
  034ac	00000000	 DCD         |dpCurSettings|
  034b0		 |$LN81@ContinueRx|
  034b0	00000000	 DCD         |??_C@_1FO@PLBPNCAK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@|
  034b4		 |$LN82@ContinueRx|
  034b4	00000000	 DCD         |??_C@_1FC@BPLKCHA@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo@|
  034b8		 |$LN83@ContinueRx|
  034b8	00000000	 DCD         |??_C@_1IG@FIHKGCG@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAi@|
  034bc		 |$LN84@ContinueRx|
  034bc	00000000	 DCD         |??_C@_1HA@FJAPDPOJ@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAN?$AAo?$AA?5?$AAp?$AAa@|
  034c0		 |$LN85@ContinueRx|
  034c0	00000000	 DCD         |??_C@_1HE@OPFCFOFH@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  034c4		 |$LN86@ContinueRx|
  034c4	00000000	 DCD         |??_C@_1HM@LPAKJCL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@|
  034c8		 |$LN77@ContinueRx|
  034c8		 |$LN75@ContinueRx|
	EXPORT	|??_C@_1KG@NGBILFEN@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@MCKOGFIA@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@MIHBGHGK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@LLLCNIKG@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@| [ DATA ] ; `string'
	EXPORT	|TxDmaTransferComplete|

  00080			 AREA	 |.pdata|, PDATA
|$T49883| DCD	|$LN50@TxDmaTrans|
	DCD	0x40018f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@NGBILFEN@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@| DCB "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@MCKOGFIA@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAa@| DCB "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "W"
	DCB	0x0, "a", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MIHBGHGK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@LLLCNIKG@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@| DCB "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  034c8			 AREA	 |.text|, CODE, ARM

  034c8		 |TxDmaTransferComplete| PROC

; 1752 : {

  034c8		 |$LN50@TxDmaTrans|
  034c8	e1a0c00d	 mov         r12, sp
  034cc	e92d0007	 stmdb       sp!, {r0 - r2}
  034d0	e92d5000	 stmdb       sp!, {r12, lr}
  034d4	e24dd094	 sub         sp, sp, #0x94
  034d8		 |$M49880|

; 1753 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pDriverContext;

  034d8	e59d309c	 ldr         r3, [sp, #0x9C]
  034dc	e58d3020	 str         r3, [sp, #0x20]

; 1754 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  034e0	e59d3020	 ldr         r3, [sp, #0x20]
  034e4	e283301c	 add         r3, r3, #0x1C
  034e8	e5933000	 ldr         r3, [r3]
  034ec	e58d3010	 str         r3, [sp, #0x10]

; 1755 :     UsbFnEp         *pEP = &pPdd->ep[endPoint];

  034f0	e59d3020	 ldr         r3, [sp, #0x20]
  034f4	e2831fa1	 add         r1, r3, #0xA1, 30
  034f8	e59d20a4	 ldr         r2, [sp, #0xA4]
  034fc	e3a0303c	 mov         r3, #0x3C
  03500	e0030392	 mul         r3, r2, r3
  03504	e0813003	 add         r3, r1, r3
  03508	e58d3014	 str         r3, [sp, #0x14]

; 1756 :     STransfer       *pTransfer = pEP->pTransfer;

  0350c	e59d3014	 ldr         r3, [sp, #0x14]
  03510	e2833020	 add         r3, r3, #0x20
  03514	e5933000	 ldr         r3, [r3]
  03518	e58d300c	 str         r3, [sp, #0xC]

; 1757 :     BOOL            complete = FALSE;

  0351c	e3a03000	 mov         r3, #0
  03520	e58d3024	 str         r3, [sp, #0x24]

; 1758 :     volatile UINT16 *pepCtrlReg;
; 1759 :     UINT16          epCsrReg;
; 1760 : 
; 1761 : #ifdef CPPI_DMA_SUPPORT
; 1762 :     struct cppi_channel *pDmaChan = (struct cppi_channel *)
; 1763 :                                     pPdd->ep[endPoint].pDmaChan;

  03524	e59d3020	 ldr         r3, [sp, #0x20]
  03528	e2831fa1	 add         r1, r3, #0xA1, 30
  0352c	e59d20a4	 ldr         r2, [sp, #0xA4]
  03530	e3a0303c	 mov         r3, #0x3C
  03534	e0030392	 mul         r3, r2, r3
  03538	e0813003	 add         r3, r1, r3
  0353c	e283302c	 add         r3, r3, #0x2C
  03540	e5933000	 ldr         r3, [r3]
  03544	e58d3018	 str         r3, [sp, #0x18]

; 1764 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 1765 : 
; 1766 : 	UNREFERENCED_PARAMETER(chanNumber);
; 1767 : 
; 1768 :     PRINTMSG(ZONE_PDD_TX,
; 1769 :              (L"TxDmaTransferComplete: "
; 1770 :               L"EP %d, pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 1771 :               endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1772 :               pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1773 :               pTransfer != NULL ? pTransfer->dwUsbError : -1));

  03548	e59f359c	 ldr         r3, [pc, #0x59C]
  0354c	e5933440	 ldr         r3, [r3, #0x440]
  03550	e3130b02	 tst         r3, #2, 22
  03554	0a000059	 beq         |$LN26@TxDmaTrans|
  03558	e59f358c	 ldr         r3, [pc, #0x58C]
  0355c	e5933440	 ldr         r3, [r3, #0x440]
  03560	e3130801	 tst         r3, #1, 16
  03564	0a000029	 beq         |$LN24@TxDmaTrans|
  03568	e59d300c	 ldr         r3, [sp, #0xC]
  0356c	e3530000	 cmp         r3, #0
  03570	0a000004	 beq         |$LN12@TxDmaTrans|
  03574	e59d300c	 ldr         r3, [sp, #0xC]
  03578	e2833014	 add         r3, r3, #0x14
  0357c	e5933000	 ldr         r3, [r3]
  03580	e58d304c	 str         r3, [sp, #0x4C]
  03584	ea000001	 b           |$LN13@TxDmaTrans|
  03588		 |$LN12@TxDmaTrans|
  03588	e3e03000	 mvn         r3, #0
  0358c	e58d304c	 str         r3, [sp, #0x4C]
  03590		 |$LN13@TxDmaTrans|
  03590	e59d300c	 ldr         r3, [sp, #0xC]
  03594	e3530000	 cmp         r3, #0
  03598	0a000004	 beq         |$LN14@TxDmaTrans|
  0359c	e59d300c	 ldr         r3, [sp, #0xC]
  035a0	e2833010	 add         r3, r3, #0x10
  035a4	e5933000	 ldr         r3, [r3]
  035a8	e58d3050	 str         r3, [sp, #0x50]
  035ac	ea000001	 b           |$LN15@TxDmaTrans|
  035b0		 |$LN14@TxDmaTrans|
  035b0	e3a03000	 mov         r3, #0
  035b4	e58d3050	 str         r3, [sp, #0x50]
  035b8		 |$LN15@TxDmaTrans|
  035b8	e59d300c	 ldr         r3, [sp, #0xC]
  035bc	e3530000	 cmp         r3, #0
  035c0	0a000004	 beq         |$LN16@TxDmaTrans|
  035c4	e59d300c	 ldr         r3, [sp, #0xC]
  035c8	e283300c	 add         r3, r3, #0xC
  035cc	e5933000	 ldr         r3, [r3]
  035d0	e58d3054	 str         r3, [sp, #0x54]
  035d4	ea000001	 b           |$LN17@TxDmaTrans|
  035d8		 |$LN16@TxDmaTrans|
  035d8	e3a03000	 mov         r3, #0
  035dc	e58d3054	 str         r3, [sp, #0x54]
  035e0		 |$LN17@TxDmaTrans|
  035e0	e59d304c	 ldr         r3, [sp, #0x4C]
  035e4	e58d3004	 str         r3, [sp, #4]
  035e8	e59d3050	 ldr         r3, [sp, #0x50]
  035ec	e58d3000	 str         r3, [sp]
  035f0	e59d3054	 ldr         r3, [sp, #0x54]
  035f4	e59d200c	 ldr         r2, [sp, #0xC]
  035f8	e59d10a4	 ldr         r1, [sp, #0xA4]
  035fc	e59f04fc	 ldr         r0, [pc, #0x4FC]
  03600	eb000000	 bl          CeLogMsg
  03604	e3a03001	 mov         r3, #1
  03608	e58d3058	 str         r3, [sp, #0x58]
  0360c	ea000028	 b           |$LN25@TxDmaTrans|
  03610		 |$LN24@TxDmaTrans|
  03610	e59d300c	 ldr         r3, [sp, #0xC]
  03614	e3530000	 cmp         r3, #0
  03618	0a000004	 beq         |$LN18@TxDmaTrans|
  0361c	e59d300c	 ldr         r3, [sp, #0xC]
  03620	e2833014	 add         r3, r3, #0x14
  03624	e5933000	 ldr         r3, [r3]
  03628	e58d305c	 str         r3, [sp, #0x5C]
  0362c	ea000001	 b           |$LN19@TxDmaTrans|
  03630		 |$LN18@TxDmaTrans|
  03630	e3e03000	 mvn         r3, #0
  03634	e58d305c	 str         r3, [sp, #0x5C]
  03638		 |$LN19@TxDmaTrans|
  03638	e59d300c	 ldr         r3, [sp, #0xC]
  0363c	e3530000	 cmp         r3, #0
  03640	0a000004	 beq         |$LN20@TxDmaTrans|
  03644	e59d300c	 ldr         r3, [sp, #0xC]
  03648	e2833010	 add         r3, r3, #0x10
  0364c	e5933000	 ldr         r3, [r3]
  03650	e58d3060	 str         r3, [sp, #0x60]
  03654	ea000001	 b           |$LN21@TxDmaTrans|
  03658		 |$LN20@TxDmaTrans|
  03658	e3a03000	 mov         r3, #0
  0365c	e58d3060	 str         r3, [sp, #0x60]
  03660		 |$LN21@TxDmaTrans|
  03660	e59d300c	 ldr         r3, [sp, #0xC]
  03664	e3530000	 cmp         r3, #0
  03668	0a000004	 beq         |$LN22@TxDmaTrans|
  0366c	e59d300c	 ldr         r3, [sp, #0xC]
  03670	e283300c	 add         r3, r3, #0xC
  03674	e5933000	 ldr         r3, [r3]
  03678	e58d3064	 str         r3, [sp, #0x64]
  0367c	ea000001	 b           |$LN23@TxDmaTrans|
  03680		 |$LN22@TxDmaTrans|
  03680	e3a03000	 mov         r3, #0
  03684	e58d3064	 str         r3, [sp, #0x64]
  03688		 |$LN23@TxDmaTrans|
  03688	e59d305c	 ldr         r3, [sp, #0x5C]
  0368c	e58d3004	 str         r3, [sp, #4]
  03690	e59d3060	 ldr         r3, [sp, #0x60]
  03694	e58d3000	 str         r3, [sp]
  03698	e59d3064	 ldr         r3, [sp, #0x64]
  0369c	e59d200c	 ldr         r2, [sp, #0xC]
  036a0	e59d10a4	 ldr         r1, [sp, #0xA4]
  036a4	e59f0454	 ldr         r0, [pc, #0x454]
  036a8	eb000000	 bl          NKDbgPrintfW
  036ac	e3a03000	 mov         r3, #0
  036b0	e58d3058	 str         r3, [sp, #0x58]
  036b4		 |$LN25@TxDmaTrans|
  036b4	e3a03001	 mov         r3, #1
  036b8	e58d3068	 str         r3, [sp, #0x68]
  036bc	ea000001	 b           |$LN27@TxDmaTrans|
  036c0		 |$LN26@TxDmaTrans|
  036c0	e3a03000	 mov         r3, #0
  036c4	e58d3068	 str         r3, [sp, #0x68]
  036c8		 |$LN27@TxDmaTrans|

; 1774 : 
; 1775 :     /* Sanity Check */
; 1776 :     if (pTransfer == NULL)

  036c8	e59d300c	 ldr         r3, [sp, #0xC]
  036cc	e3530000	 cmp         r3, #0
  036d0	1a00000f	 bne         |$LN9@TxDmaTrans|

; 1777 :     {
; 1778 :         /* Not an error if transfer was aborted */
; 1779 :         if (pEP->epStage != MGC_END0_START)

  036d4	e59d3014	 ldr         r3, [sp, #0x14]
  036d8	e283301c	 add         r3, r3, #0x1C
  036dc	e5933000	 ldr         r3, [r3]
  036e0	e3530001	 cmp         r3, #1
  036e4	0a000007	 beq         |$LN8@TxDmaTrans|

; 1780 :             ERRORMSG(TRUE,
; 1781 :                 (L"EP %u Invalid DMA Completion\r\n", endPoint));

  036e8	e3a02c06	 mov         r2, #6, 24
  036ec	e38220f5	 orr         r2, r2, #0xF5
  036f0	e59f1404	 ldr         r1, [pc, #0x404]
  036f4	e59f03fc	 ldr         r0, [pc, #0x3FC]
  036f8	eb000000	 bl          NKDbgPrintfW
  036fc	e59d10a4	 ldr         r1, [sp, #0xA4]
  03700	e59f03ec	 ldr         r0, [pc, #0x3EC]
  03704	eb000000	 bl          NKDbgPrintfW
  03708		 |$LN8@TxDmaTrans|

; 1782 :         return 1;

  03708	e3a03001	 mov         r3, #1
  0370c	e58d3038	 str         r3, [sp, #0x38]
  03710	ea0000f0	 b           |$LN10@TxDmaTrans|
  03714		 |$LN9@TxDmaTrans|

; 1783 :     }
; 1784 :     /* Enter CriticalSection */
; 1785 :     LOCK_ENDPOINT(pPdd);

  03714	e59d3020	 ldr         r3, [sp, #0x20]
  03718	e2830e27	 add         r0, r3, #0x27, 28
  0371c	eb000000	 bl          EnterCriticalSection

; 1786 : 
; 1787 :     /* Update the cbTransferred member based on the DMA Transfer Count */
; 1788 : #ifdef CPPI_DMA_SUPPORT
; 1789 :     pTransfer->cbTransferred += pDmaChan->actualLen;

  03720	e59d300c	 ldr         r3, [sp, #0xC]
  03724	e2832010	 add         r2, r3, #0x10
  03728	e59d3018	 ldr         r3, [sp, #0x18]
  0372c	e2833030	 add         r3, r3, #0x30
  03730	e5922000	 ldr         r2, [r2]
  03734	e5933000	 ldr         r3, [r3]
  03738	e0822003	 add         r2, r2, r3
  0373c	e59d300c	 ldr         r3, [sp, #0xC]
  03740	e2833010	 add         r3, r3, #0x10
  03744	e5832000	 str         r2, [r3]

; 1790 : #endif
; 1791 : 
; 1792 :     /* For overlapped transfers we only get callback when transfer is complete and
; 1793 :        bytes transferred may be less than the buffer size. */
; 1794 :     if ((pTransfer->cbTransferred >= pTransfer->cbBuffer) ||
; 1795 :         (pEP->pOverlappedInfo != NULL))

  03748	e59d300c	 ldr         r3, [sp, #0xC]
  0374c	e2832010	 add         r2, r3, #0x10
  03750	e59d300c	 ldr         r3, [sp, #0xC]
  03754	e283300c	 add         r3, r3, #0xC
  03758	e5922000	 ldr         r2, [r2]
  0375c	e5933000	 ldr         r3, [r3]
  03760	e1520003	 cmp         r2, r3
  03764	2a000004	 bcs         |$LN6@TxDmaTrans|
  03768	e59d3014	 ldr         r3, [sp, #0x14]
  0376c	e2833038	 add         r3, r3, #0x38
  03770	e5933000	 ldr         r3, [r3]
  03774	e3530000	 cmp         r3, #0
  03778	0a00005d	 beq         |$LN7@TxDmaTrans|
  0377c		 |$LN6@TxDmaTrans|

; 1796 :     {
; 1797 :         /* DMA of packet into FIFO is complete.  Check if packet has gone out on bus. */
; 1798 :         pepCtrlReg = &pUsbdRegs->EPCSR[ endPoint ].PERI_TXCSR;

  0377c	e59d3010	 ldr         r3, [sp, #0x10]
  03780	e2831c05	 add         r1, r3, #5, 24
  03784	e59d20a4	 ldr         r2, [sp, #0xA4]
  03788	e3a03010	 mov         r3, #0x10
  0378c	e0030392	 mul         r3, r2, r3
  03790	e0813003	 add         r3, r1, r3
  03794	e2833002	 add         r3, r3, #2
  03798	e58d3008	 str         r3, [sp, #8]

; 1799 :         epCsrReg = *pepCtrlReg;

  0379c	e59d3008	 ldr         r3, [sp, #8]
  037a0	e1d330b0	 ldrh        r3, [r3]
  037a4	e1cd31bc	 strh        r3, [sp, #0x1C]

; 1800 :         if ((epCsrReg & MGC_M_TXCSR_TXPKTRDY) != 0)

  037a8	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  037ac	e3130001	 tst         r3, #1
  037b0	0a000044	 beq         |$LN5@TxDmaTrans|

; 1801 :         {
; 1802 :             /* Need to wait for packet to go out onto bus. */
; 1803 :             PRINTMSG(ZONE_PDD_TX,
; 1804 :                      (L"TxDmaTransferComplete: EP %d, Wait for bus write\r\n", endPoint));

  037b4	e59f3330	 ldr         r3, [pc, #0x330]
  037b8	e5933440	 ldr         r3, [r3, #0x440]
  037bc	e3130b02	 tst         r3, #2, 22
  037c0	0a000011	 beq         |$LN30@TxDmaTrans|
  037c4	e59f3320	 ldr         r3, [pc, #0x320]
  037c8	e5933440	 ldr         r3, [r3, #0x440]
  037cc	e3130801	 tst         r3, #1, 16
  037d0	0a000005	 beq         |$LN28@TxDmaTrans|
  037d4	e59d10a4	 ldr         r1, [sp, #0xA4]
  037d8	e59f0310	 ldr         r0, [pc, #0x310]
  037dc	eb000000	 bl          CeLogMsg
  037e0	e3a03001	 mov         r3, #1
  037e4	e58d306c	 str         r3, [sp, #0x6C]
  037e8	ea000004	 b           |$LN29@TxDmaTrans|
  037ec		 |$LN28@TxDmaTrans|
  037ec	e59d10a4	 ldr         r1, [sp, #0xA4]
  037f0	e59f02f8	 ldr         r0, [pc, #0x2F8]
  037f4	eb000000	 bl          NKDbgPrintfW
  037f8	e3a03000	 mov         r3, #0
  037fc	e58d306c	 str         r3, [sp, #0x6C]
  03800		 |$LN29@TxDmaTrans|
  03800	e3a03001	 mov         r3, #1
  03804	e58d3070	 str         r3, [sp, #0x70]
  03808	ea000001	 b           |$LN31@TxDmaTrans|
  0380c		 |$LN30@TxDmaTrans|
  0380c	e3a03000	 mov         r3, #0
  03810	e58d3070	 str         r3, [sp, #0x70]
  03814		 |$LN31@TxDmaTrans|

; 1805 : 
; 1806 :             /* Update stage to indicate fifo wait */
; 1807 :             pEP->epStage = MGC_END0_STAGE_ACKWAIT;

  03814	e59d3014	 ldr         r3, [sp, #0x14]
  03818	e283201c	 add         r2, r3, #0x1C
  0381c	e3a03006	 mov         r3, #6
  03820	e5823000	 str         r3, [r2]

; 1808 : 
; 1809 :             /* Clear any pending EP interrupt */
; 1810 :             pUsbdRegs->EP_INTCLRR = (1 << endPoint) << USB_OTG_TXINT_SHIFT;

  03824	e59d20a4	 ldr         r2, [sp, #0xA4]
  03828	e3a03001	 mov         r3, #1
  0382c	e1a02213	 mov         r2, r3, lsl r2
  03830	e59d3010	 ldr         r3, [sp, #0x10]
  03834	e2833028	 add         r3, r3, #0x28
  03838	e5832000	 str         r2, [r3]

; 1811 : 
; 1812 :             /* Enable TX interrupt */
; 1813 :             pUsbdRegs->EP_INTMSKSETR = (1 << endPoint) << USB_OTG_TXINT_SHIFT;

  0383c	e59d20a4	 ldr         r2, [sp, #0xA4]
  03840	e3a03001	 mov         r3, #1
  03844	e1a02213	 mov         r2, r3, lsl r2
  03848	e59d3010	 ldr         r3, [sp, #0x10]
  0384c	e2833030	 add         r3, r3, #0x30
  03850	e5832000	 str         r2, [r3]

; 1814 : 
; 1815 :             /* Race condition - check if packet TX just completed */
; 1816 :             epCsrReg = *pepCtrlReg;

  03854	e59d3008	 ldr         r3, [sp, #8]
  03858	e1d330b0	 ldrh        r3, [r3]
  0385c	e1cd31bc	 strh        r3, [sp, #0x1C]

; 1817 :             if ((epCsrReg & MGC_M_TXCSR_TXPKTRDY) == 0)

  03860	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  03864	e3130001	 tst         r3, #1
  03868	1a000015	 bne         |$LN4@TxDmaTrans|

; 1818 :             {
; 1819 :                 pEP->epStage = MGC_END0_START;

  0386c	e59d3014	 ldr         r3, [sp, #0x14]
  03870	e283201c	 add         r2, r3, #0x1C
  03874	e3a03001	 mov         r3, #1
  03878	e5823000	 str         r3, [r2]

; 1820 :                 pTransfer->dwUsbError = UFN_NO_ERROR;

  0387c	e59d300c	 ldr         r3, [sp, #0xC]
  03880	e2832014	 add         r2, r3, #0x14
  03884	e3a03000	 mov         r3, #0
  03888	e5823000	 str         r3, [r2]

; 1821 :                 complete = TRUE;

  0388c	e3a03001	 mov         r3, #1
  03890	e58d3024	 str         r3, [sp, #0x24]

; 1822 : 
; 1823 :                 /* Disable TX interrupt */
; 1824 :                 pUsbdRegs->EP_INTMSKCLRR = (1 << endPoint) << USB_OTG_TXINT_SHIFT;

  03894	e59d20a4	 ldr         r2, [sp, #0xA4]
  03898	e3a03001	 mov         r3, #1
  0389c	e1a02213	 mov         r2, r3, lsl r2
  038a0	e59d3010	 ldr         r3, [sp, #0x10]
  038a4	e2833034	 add         r3, r3, #0x34
  038a8	e5832000	 str         r2, [r3]

; 1825 :                 pUsbdRegs->EP_INTCLRR = (1 << endPoint) << USB_OTG_TXINT_SHIFT;

  038ac	e59d20a4	 ldr         r2, [sp, #0xA4]
  038b0	e3a03001	 mov         r3, #1
  038b4	e1a02213	 mov         r2, r3, lsl r2
  038b8	e59d3010	 ldr         r3, [sp, #0x10]
  038bc	e2833028	 add         r3, r3, #0x28
  038c0	e5832000	 str         r2, [r3]
  038c4		 |$LN4@TxDmaTrans|

; 1826 :             }
; 1827 :         }
; 1828 :         else

  038c4	ea000009	 b           |$LN3@TxDmaTrans|
  038c8		 |$LN5@TxDmaTrans|

; 1829 :         {
; 1830 :             /* Now that the Transfer is complete, return back to IDLE State */
; 1831 :             pEP->epStage = MGC_END0_START;

  038c8	e59d3014	 ldr         r3, [sp, #0x14]
  038cc	e283201c	 add         r2, r3, #0x1C
  038d0	e3a03001	 mov         r3, #1
  038d4	e5823000	 str         r3, [r2]

; 1832 :             pTransfer->dwUsbError = UFN_NO_ERROR;

  038d8	e59d300c	 ldr         r3, [sp, #0xC]
  038dc	e2832014	 add         r2, r3, #0x14
  038e0	e3a03000	 mov         r3, #0
  038e4	e5823000	 str         r3, [r2]

; 1833 :             complete = TRUE;

  038e8	e3a03001	 mov         r3, #1
  038ec	e58d3024	 str         r3, [sp, #0x24]
  038f0		 |$LN3@TxDmaTrans|

; 1834 :         }
; 1835 :     }
; 1836 :     else

  038f0	ea000002	 b           |$LN2@TxDmaTrans|
  038f4		 |$LN7@TxDmaTrans|

; 1837 :     {
; 1838 :         /* Transfer is not complete, only one chunk was completed.
; 1839 :          * Need to start another Chunk of DMA Transfer.
; 1840 :          */
; 1841 :         ContinueTxDmaTransfer(pPdd, endPoint);

  038f4	e59d10a4	 ldr         r1, [sp, #0xA4]
  038f8	e59d0020	 ldr         r0, [sp, #0x20]
  038fc	eb000000	 bl          ContinueTxDmaTransfer
  03900		 |$LN2@TxDmaTrans|

; 1842 :     }
; 1843 : 
; 1844 :     /* Leave CriticalSection */
; 1845 :     UNLOCK_ENDPOINT(pPdd);

  03900	e59d3020	 ldr         r3, [sp, #0x20]
  03904	e2830e27	 add         r0, r3, #0x27, 28
  03908	eb000000	 bl          LeaveCriticalSection

; 1846 : 
; 1847 :     if (complete == TRUE)

  0390c	e59d3024	 ldr         r3, [sp, #0x24]
  03910	e3530001	 cmp         r3, #1
  03914	1a00006d	 bne         |$LN1@TxDmaTrans|

; 1848 :     {
; 1849 :         /* If transaction is complete we should tell MDD */
; 1850 :         PRINTMSG(ZONE_PDD_TX,
; 1851 :             (L"TxDmaTransferComplete: "
; 1852 :              L"EP %d, pTransfer 0x%08x (%d, %d, 0x%0x) - notify complete\r\n",
; 1853 :              endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1854 :              pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1855 :              pTransfer != NULL ? pTransfer->dwUsbError : -1));

  03918	e59f31cc	 ldr         r3, [pc, #0x1CC]
  0391c	e5933440	 ldr         r3, [r3, #0x440]
  03920	e3130b02	 tst         r3, #2, 22
  03924	0a000059	 beq         |$LN46@TxDmaTrans|
  03928	e59f31bc	 ldr         r3, [pc, #0x1BC]
  0392c	e5933440	 ldr         r3, [r3, #0x440]
  03930	e3130801	 tst         r3, #1, 16
  03934	0a000029	 beq         |$LN44@TxDmaTrans|
  03938	e59d300c	 ldr         r3, [sp, #0xC]
  0393c	e3530000	 cmp         r3, #0
  03940	0a000004	 beq         |$LN32@TxDmaTrans|
  03944	e59d300c	 ldr         r3, [sp, #0xC]
  03948	e2833014	 add         r3, r3, #0x14
  0394c	e5933000	 ldr         r3, [r3]
  03950	e58d3074	 str         r3, [sp, #0x74]
  03954	ea000001	 b           |$LN33@TxDmaTrans|
  03958		 |$LN32@TxDmaTrans|
  03958	e3e03000	 mvn         r3, #0
  0395c	e58d3074	 str         r3, [sp, #0x74]
  03960		 |$LN33@TxDmaTrans|
  03960	e59d300c	 ldr         r3, [sp, #0xC]
  03964	e3530000	 cmp         r3, #0
  03968	0a000004	 beq         |$LN34@TxDmaTrans|
  0396c	e59d300c	 ldr         r3, [sp, #0xC]
  03970	e2833010	 add         r3, r3, #0x10
  03974	e5933000	 ldr         r3, [r3]
  03978	e58d3078	 str         r3, [sp, #0x78]
  0397c	ea000001	 b           |$LN35@TxDmaTrans|
  03980		 |$LN34@TxDmaTrans|
  03980	e3a03000	 mov         r3, #0
  03984	e58d3078	 str         r3, [sp, #0x78]
  03988		 |$LN35@TxDmaTrans|
  03988	e59d300c	 ldr         r3, [sp, #0xC]
  0398c	e3530000	 cmp         r3, #0
  03990	0a000004	 beq         |$LN36@TxDmaTrans|
  03994	e59d300c	 ldr         r3, [sp, #0xC]
  03998	e283300c	 add         r3, r3, #0xC
  0399c	e5933000	 ldr         r3, [r3]
  039a0	e58d307c	 str         r3, [sp, #0x7C]
  039a4	ea000001	 b           |$LN37@TxDmaTrans|
  039a8		 |$LN36@TxDmaTrans|
  039a8	e3a03000	 mov         r3, #0
  039ac	e58d307c	 str         r3, [sp, #0x7C]
  039b0		 |$LN37@TxDmaTrans|
  039b0	e59d3074	 ldr         r3, [sp, #0x74]
  039b4	e58d3004	 str         r3, [sp, #4]
  039b8	e59d3078	 ldr         r3, [sp, #0x78]
  039bc	e58d3000	 str         r3, [sp]
  039c0	e59d307c	 ldr         r3, [sp, #0x7C]
  039c4	e59d200c	 ldr         r2, [sp, #0xC]
  039c8	e59d10a4	 ldr         r1, [sp, #0xA4]
  039cc	e59f0114	 ldr         r0, [pc, #0x114]
  039d0	eb000000	 bl          CeLogMsg
  039d4	e3a03001	 mov         r3, #1
  039d8	e58d3080	 str         r3, [sp, #0x80]
  039dc	ea000028	 b           |$LN45@TxDmaTrans|
  039e0		 |$LN44@TxDmaTrans|
  039e0	e59d300c	 ldr         r3, [sp, #0xC]
  039e4	e3530000	 cmp         r3, #0
  039e8	0a000004	 beq         |$LN38@TxDmaTrans|
  039ec	e59d300c	 ldr         r3, [sp, #0xC]
  039f0	e2833014	 add         r3, r3, #0x14
  039f4	e5933000	 ldr         r3, [r3]
  039f8	e58d3084	 str         r3, [sp, #0x84]
  039fc	ea000001	 b           |$LN39@TxDmaTrans|
  03a00		 |$LN38@TxDmaTrans|
  03a00	e3e03000	 mvn         r3, #0
  03a04	e58d3084	 str         r3, [sp, #0x84]
  03a08		 |$LN39@TxDmaTrans|
  03a08	e59d300c	 ldr         r3, [sp, #0xC]
  03a0c	e3530000	 cmp         r3, #0
  03a10	0a000004	 beq         |$LN40@TxDmaTrans|
  03a14	e59d300c	 ldr         r3, [sp, #0xC]
  03a18	e2833010	 add         r3, r3, #0x10
  03a1c	e5933000	 ldr         r3, [r3]
  03a20	e58d3088	 str         r3, [sp, #0x88]
  03a24	ea000001	 b           |$LN41@TxDmaTrans|
  03a28		 |$LN40@TxDmaTrans|
  03a28	e3a03000	 mov         r3, #0
  03a2c	e58d3088	 str         r3, [sp, #0x88]
  03a30		 |$LN41@TxDmaTrans|
  03a30	e59d300c	 ldr         r3, [sp, #0xC]
  03a34	e3530000	 cmp         r3, #0
  03a38	0a000004	 beq         |$LN42@TxDmaTrans|
  03a3c	e59d300c	 ldr         r3, [sp, #0xC]
  03a40	e283300c	 add         r3, r3, #0xC
  03a44	e5933000	 ldr         r3, [r3]
  03a48	e58d308c	 str         r3, [sp, #0x8C]
  03a4c	ea000001	 b           |$LN43@TxDmaTrans|
  03a50		 |$LN42@TxDmaTrans|
  03a50	e3a03000	 mov         r3, #0
  03a54	e58d308c	 str         r3, [sp, #0x8C]
  03a58		 |$LN43@TxDmaTrans|
  03a58	e59d3084	 ldr         r3, [sp, #0x84]
  03a5c	e58d3004	 str         r3, [sp, #4]
  03a60	e59d3088	 ldr         r3, [sp, #0x88]
  03a64	e58d3000	 str         r3, [sp]
  03a68	e59d308c	 ldr         r3, [sp, #0x8C]
  03a6c	e59d200c	 ldr         r2, [sp, #0xC]
  03a70	e59d10a4	 ldr         r1, [sp, #0xA4]
  03a74	e59f006c	 ldr         r0, [pc, #0x6C]
  03a78	eb000000	 bl          NKDbgPrintfW
  03a7c	e3a03000	 mov         r3, #0
  03a80	e58d3080	 str         r3, [sp, #0x80]
  03a84		 |$LN45@TxDmaTrans|
  03a84	e3a03001	 mov         r3, #1
  03a88	e58d3090	 str         r3, [sp, #0x90]
  03a8c	ea000001	 b           |$LN47@TxDmaTrans|
  03a90		 |$LN46@TxDmaTrans|
  03a90	e3a03000	 mov         r3, #0
  03a94	e58d3090	 str         r3, [sp, #0x90]
  03a98		 |$LN47@TxDmaTrans|

; 1856 :         pEP->pTransfer = NULL;

  03a98	e59d3014	 ldr         r3, [sp, #0x14]
  03a9c	e2832020	 add         r2, r3, #0x20
  03aa0	e3a03000	 mov         r3, #0
  03aa4	e5823000	 str         r3, [r2]

; 1857 :         pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE,
; 1858 :                             (DWORD)pTransfer);

  03aa8	e59d200c	 ldr         r2, [sp, #0xC]
  03aac	e3a01064	 mov         r1, #0x64
  03ab0	e59d3020	 ldr         r3, [sp, #0x20]
  03ab4	e2833010	 add         r3, r3, #0x10
  03ab8	e5930000	 ldr         r0, [r3]
  03abc	e59d3020	 ldr         r3, [sp, #0x20]
  03ac0	e2833014	 add         r3, r3, #0x14
  03ac4	e5933000	 ldr         r3, [r3]
  03ac8	e1a0e00f	 mov         lr, pc
  03acc	e12fff13	 bx          r3
  03ad0		 |$LN1@TxDmaTrans|

; 1859 :     }
; 1860 :     return 0;

  03ad0	e3a03000	 mov         r3, #0
  03ad4	e58d3038	 str         r3, [sp, #0x38]
  03ad8		 |$LN10@TxDmaTrans|

; 1861 : }

  03ad8	e59d0038	 ldr         r0, [sp, #0x38]
  03adc	e28dd094	 add         sp, sp, #0x94
  03ae0	e89d6000	 ldmia       sp, {sp, lr}
  03ae4	e12fff1e	 bx          lr
  03ae8		 |$LN51@TxDmaTrans|
  03ae8		 |$LN52@TxDmaTrans|
  03ae8	00000000	 DCD         |??_C@_1KG@NGBILFEN@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@|
  03aec		 |$LN53@TxDmaTrans|
  03aec	00000000	 DCD         |dpCurSettings|
  03af0		 |$LN54@TxDmaTrans|
  03af0	00000000	 DCD         |??_C@_1GG@MCKOGFIA@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAa@|
  03af4		 |$LN55@TxDmaTrans|
  03af4	00000000	 DCD         |??_C@_1DO@MIHBGHGK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  03af8		 |$LN56@TxDmaTrans|
  03af8	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  03afc		 |$LN57@TxDmaTrans|
  03afc	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03b00		 |$LN58@TxDmaTrans|
  03b00	00000000	 DCD         |??_C@_1IC@LLLCNIKG@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@|
  03b04		 |$M49881|

			 ENDP  ; |TxDmaTransferComplete|

	EXPORT	|??_C@_1HM@CMNAJPIB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAD?$AAM@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@GHDKIAKL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@ELGAOAPL@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAD?$AAM?$AAA?$AAB?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LI@BHLEPIFM@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAI?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@IDOBDDBH@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@| [ DATA ] ; `string'
	IMPORT	|memcpy|

  00088			 AREA	 |.pdata|, PDATA
|$T49942| DCD	|$LN56@ContinueTx@2|
	DCD	0xc001ba05
|$T49944| DCD	|$LN46@ContinueTx@2|
	DCD	0x40000b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@CMNAJPIB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAD?$AAM@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o"
	DCB	0x0, "m", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "i", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@GHDKIAKL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "l"
	DCB	0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@ELGAOAPL@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAD?$AAM?$AAA?$AAB?$AAu@| DCB "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@BHLEPIFM@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAI?$AAS@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "I"
	DCB	0x0, "S", 0x0, "O", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, " ", 0x0, "o", 0x0, "n", 0x0, "l", 0x0, "y", 0x0, " "
	DCB	0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "p", 0x0, "h", 0x0, "y"
	DCB	0x0, "s", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@IDOBDDBH@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00054			 AREA	 |.xdata|, DATA
|$T49940| DCD	0x1
	DCD	|$LN50@ContinueTx@2|
	DCD	|$LN51@ContinueTx@2|
	DCD	|$LN46@ContinueTx@2|
	DCD	|$LN47@ContinueTx@2|
; Function compile flags: /Odtp

  03b04			 AREA	 |.text|, CODE, ARM

  03b04	00000000	 DCD         |__C_specific_handler|
  03b08	00000000	 DCD         |$T49940|

  03b0c		 |ContinueTxDmaTransfer| PROC

; 1568 : {

  03b0c		 |$LN56@ContinueTx@2|
  03b0c	e1a0c00d	 mov         r12, sp
  03b10	e92d0003	 stmdb       sp!, {r0, r1}
  03b14	e92d5810	 stmdb       sp!, {r4, r11, r12, lr}
  03b18	e28db010	 add         r11, sp, #0x10
  03b1c	e24dd084	 sub         sp, sp, #0x84
  03b20		 |$LN54@ContinueTx@2|

; 1569 :     CSL_UsbRegs    *pUsbdRegs     = pPdd->pUsbdRegs;

  03b20	e59b3000	 ldr         r3, [r11]
  03b24	e283301c	 add         r3, r3, #0x1C
  03b28	e5933000	 ldr         r3, [r3]
  03b2c	e50b307c	 str         r3, [r11, #-0x7C]

; 1570 :     UsbFnEp        *pEP           = &pPdd->ep[endPoint];

  03b30	e59b3000	 ldr         r3, [r11]
  03b34	e2831fa1	 add         r1, r3, #0xA1, 30
  03b38	e59b2004	 ldr         r2, [r11, #4]
  03b3c	e3a0303c	 mov         r3, #0x3C
  03b40	e0030392	 mul         r3, r2, r3
  03b44	e0813003	 add         r3, r1, r3
  03b48	e50b3078	 str         r3, [r11, #-0x78]

; 1571 :     STransfer      *pTransfer     = pEP->pTransfer;

  03b4c	e51b3078	 ldr         r3, [r11, #-0x78]
  03b50	e2833020	 add         r3, r3, #0x20
  03b54	e5933000	 ldr         r3, [r3]
  03b58	e50b3080	 str         r3, [r11, #-0x80]

; 1572 :     BOOL complete = FALSE;

  03b5c	e3a03000	 mov         r3, #0
  03b60	e50b3064	 str         r3, [r11, #-0x64]

; 1573 :     UCHAR *pBuffer = NULL;

  03b64	e3a03000	 mov         r3, #0
  03b68	e50b308c	 str         r3, [r11, #-0x8C]

; 1574 :     UINT16      epCsrReg;
; 1575 : 
; 1576 : #ifdef CPPI_DMA_SUPPORT
; 1577 :     struct dma_controller * pDmaCntrl =
; 1578 :                 (struct dma_controller *)pPdd->pDmaCntrl;

  03b6c	e59b3000	 ldr         r3, [r11]
  03b70	e2833c06	 add         r3, r3, #6, 24
  03b74	e283305c	 add         r3, r3, #0x5C
  03b78	e5933000	 ldr         r3, [r3]
  03b7c	e50b3068	 str         r3, [r11, #-0x68]

; 1579 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 1580 : 
; 1581 :     DWORD size = 0;

  03b80	e3a03000	 mov         r3, #0
  03b84	e50b3074	 str         r3, [r11, #-0x74]

; 1582 :     DWORD fullPackets;
; 1583 :     DWORD lastPacketSize;
; 1584 :     UINT32 paBuffer;
; 1585 : 
; 1586 : 
; 1587 :     PRINTMSG(ZONE_PDD_TX, (L"ContinueTxDmaTransfer: "
; 1588 :                            L"EP %d, pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 1589 :                            endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1590 :                            pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1591 :                            pTransfer != NULL ? pTransfer->dwUsbError : -1));

  03b88	e59f367c	 ldr         r3, [pc, #0x67C]
  03b8c	e5933440	 ldr         r3, [r3, #0x440]
  03b90	e3130b02	 tst         r3, #2, 22
  03b94	0a000059	 beq         |$LN27@ContinueTx@2|
  03b98	e59f366c	 ldr         r3, [pc, #0x66C]
  03b9c	e5933440	 ldr         r3, [r3, #0x440]
  03ba0	e3130801	 tst         r3, #1, 16
  03ba4	0a000029	 beq         |$LN25@ContinueTx@2|
  03ba8	e51b3080	 ldr         r3, [r11, #-0x80]
  03bac	e3530000	 cmp         r3, #0
  03bb0	0a000004	 beq         |$LN13@ContinueTx@2|
  03bb4	e51b3080	 ldr         r3, [r11, #-0x80]
  03bb8	e2833014	 add         r3, r3, #0x14
  03bbc	e5933000	 ldr         r3, [r3]
  03bc0	e50b3050	 str         r3, [r11, #-0x50]
  03bc4	ea000001	 b           |$LN14@ContinueTx@2|
  03bc8		 |$LN13@ContinueTx@2|
  03bc8	e3e03000	 mvn         r3, #0
  03bcc	e50b3050	 str         r3, [r11, #-0x50]
  03bd0		 |$LN14@ContinueTx@2|
  03bd0	e51b3080	 ldr         r3, [r11, #-0x80]
  03bd4	e3530000	 cmp         r3, #0
  03bd8	0a000004	 beq         |$LN15@ContinueTx@2|
  03bdc	e51b3080	 ldr         r3, [r11, #-0x80]
  03be0	e2833010	 add         r3, r3, #0x10
  03be4	e5933000	 ldr         r3, [r3]
  03be8	e50b304c	 str         r3, [r11, #-0x4C]
  03bec	ea000001	 b           |$LN16@ContinueTx@2|
  03bf0		 |$LN15@ContinueTx@2|
  03bf0	e3a03000	 mov         r3, #0
  03bf4	e50b304c	 str         r3, [r11, #-0x4C]
  03bf8		 |$LN16@ContinueTx@2|
  03bf8	e51b3080	 ldr         r3, [r11, #-0x80]
  03bfc	e3530000	 cmp         r3, #0
  03c00	0a000004	 beq         |$LN17@ContinueTx@2|
  03c04	e51b3080	 ldr         r3, [r11, #-0x80]
  03c08	e283300c	 add         r3, r3, #0xC
  03c0c	e5933000	 ldr         r3, [r3]
  03c10	e50b3048	 str         r3, [r11, #-0x48]
  03c14	ea000001	 b           |$LN18@ContinueTx@2|
  03c18		 |$LN17@ContinueTx@2|
  03c18	e3a03000	 mov         r3, #0
  03c1c	e50b3048	 str         r3, [r11, #-0x48]
  03c20		 |$LN18@ContinueTx@2|
  03c20	e51b3050	 ldr         r3, [r11, #-0x50]
  03c24	e58d3004	 str         r3, [sp, #4]
  03c28	e51b304c	 ldr         r3, [r11, #-0x4C]
  03c2c	e58d3000	 str         r3, [sp]
  03c30	e51b3048	 ldr         r3, [r11, #-0x48]
  03c34	e51b2080	 ldr         r2, [r11, #-0x80]
  03c38	e59b1004	 ldr         r1, [r11, #4]
  03c3c	e59f05d8	 ldr         r0, [pc, #0x5D8]
  03c40	eb000000	 bl          CeLogMsg
  03c44	e3a03001	 mov         r3, #1
  03c48	e50b3044	 str         r3, [r11, #-0x44]
  03c4c	ea000028	 b           |$LN26@ContinueTx@2|
  03c50		 |$LN25@ContinueTx@2|
  03c50	e51b3080	 ldr         r3, [r11, #-0x80]
  03c54	e3530000	 cmp         r3, #0
  03c58	0a000004	 beq         |$LN19@ContinueTx@2|
  03c5c	e51b3080	 ldr         r3, [r11, #-0x80]
  03c60	e2833014	 add         r3, r3, #0x14
  03c64	e5933000	 ldr         r3, [r3]
  03c68	e50b3040	 str         r3, [r11, #-0x40]
  03c6c	ea000001	 b           |$LN20@ContinueTx@2|
  03c70		 |$LN19@ContinueTx@2|
  03c70	e3e03000	 mvn         r3, #0
  03c74	e50b3040	 str         r3, [r11, #-0x40]
  03c78		 |$LN20@ContinueTx@2|
  03c78	e51b3080	 ldr         r3, [r11, #-0x80]
  03c7c	e3530000	 cmp         r3, #0
  03c80	0a000004	 beq         |$LN21@ContinueTx@2|
  03c84	e51b3080	 ldr         r3, [r11, #-0x80]
  03c88	e2833010	 add         r3, r3, #0x10
  03c8c	e5933000	 ldr         r3, [r3]
  03c90	e50b303c	 str         r3, [r11, #-0x3C]
  03c94	ea000001	 b           |$LN22@ContinueTx@2|
  03c98		 |$LN21@ContinueTx@2|
  03c98	e3a03000	 mov         r3, #0
  03c9c	e50b303c	 str         r3, [r11, #-0x3C]
  03ca0		 |$LN22@ContinueTx@2|
  03ca0	e51b3080	 ldr         r3, [r11, #-0x80]
  03ca4	e3530000	 cmp         r3, #0
  03ca8	0a000004	 beq         |$LN23@ContinueTx@2|
  03cac	e51b3080	 ldr         r3, [r11, #-0x80]
  03cb0	e283300c	 add         r3, r3, #0xC
  03cb4	e5933000	 ldr         r3, [r3]
  03cb8	e50b3038	 str         r3, [r11, #-0x38]
  03cbc	ea000001	 b           |$LN24@ContinueTx@2|
  03cc0		 |$LN23@ContinueTx@2|
  03cc0	e3a03000	 mov         r3, #0
  03cc4	e50b3038	 str         r3, [r11, #-0x38]
  03cc8		 |$LN24@ContinueTx@2|
  03cc8	e51b3040	 ldr         r3, [r11, #-0x40]
  03ccc	e58d3004	 str         r3, [sp, #4]
  03cd0	e51b303c	 ldr         r3, [r11, #-0x3C]
  03cd4	e58d3000	 str         r3, [sp]
  03cd8	e51b3038	 ldr         r3, [r11, #-0x38]
  03cdc	e51b2080	 ldr         r2, [r11, #-0x80]
  03ce0	e59b1004	 ldr         r1, [r11, #4]
  03ce4	e59f0530	 ldr         r0, [pc, #0x530]
  03ce8	eb000000	 bl          NKDbgPrintfW
  03cec	e3a03000	 mov         r3, #0
  03cf0	e50b3044	 str         r3, [r11, #-0x44]
  03cf4		 |$LN26@ContinueTx@2|
  03cf4	e3a03001	 mov         r3, #1
  03cf8	e50b3034	 str         r3, [r11, #-0x34]
  03cfc	ea000001	 b           |$LN28@ContinueTx@2|
  03d00		 |$LN27@ContinueTx@2|
  03d00	e3a03000	 mov         r3, #0
  03d04	e50b3034	 str         r3, [r11, #-0x34]
  03d08		 |$LN28@ContinueTx@2|

; 1592 : 
; 1593 :     /* Enter CriticalSection */
; 1594 :     LOCK_ENDPOINT(pPdd);

  03d08	e59b3000	 ldr         r3, [r11]
  03d0c	e2830e27	 add         r0, r3, #0x27, 28
  03d10	eb000000	 bl          EnterCriticalSection

; 1595 : 
; 1596 :     if (pTransfer == NULL) goto cleanUp;

  03d14	e51b3080	 ldr         r3, [r11, #-0x80]
  03d18	e3530000	 cmp         r3, #0
  03d1c	1a000000	 bne         |$LN10@ContinueTx@2|
  03d20	ea00012d	 b           |$cleanUp$48156|
  03d24		 |$LN10@ContinueTx@2|

; 1597 : 
; 1598 :     pEP->usingDma = TRUE;

  03d24	e51b3078	 ldr         r3, [r11, #-0x78]
  03d28	e2832028	 add         r2, r3, #0x28
  03d2c	e3a03001	 mov         r3, #1
  03d30	e5823000	 str         r3, [r2]

; 1599 : 
; 1600 :     /* Currently only support phyisical buffer addresses with overlapped ISO */
; 1601 :     if (pEP->endpointType == USB_ENDPOINT_TYPE_ISOCHRONOUS &&
; 1602 :         (pTransfer->dwFlags & USB_OVERLAPPED) &&
; 1603 :         pTransfer->dwBufferPhysicalAddress == 0)

  03d34	e51b3078	 ldr         r3, [r11, #-0x78]
  03d38	e283300c	 add         r3, r3, #0xC
  03d3c	e5d33000	 ldrb        r3, [r3]
  03d40	e3530001	 cmp         r3, #1
  03d44	1a000021	 bne         |$LN9@ContinueTx@2|
  03d48	e51b3080	 ldr         r3, [r11, #-0x80]
  03d4c	e5933000	 ldr         r3, [r3]
  03d50	e3130001	 tst         r3, #1
  03d54	0a00001d	 beq         |$LN9@ContinueTx@2|
  03d58	e51b3080	 ldr         r3, [r11, #-0x80]
  03d5c	e2833008	 add         r3, r3, #8
  03d60	e5933000	 ldr         r3, [r3]
  03d64	e3530000	 cmp         r3, #0
  03d68	1a000018	 bne         |$LN9@ContinueTx@2|

; 1604 :     {
; 1605 :         PRINTMSG(ZONE_ERROR,
; 1606 :                  (L"ContinueTxDmaTransfer: EP %d, ISO transfers only supported with physical buffer addresses\r\n",
; 1607 :                   endPoint));

  03d6c	e59f3498	 ldr         r3, [pc, #0x498]
  03d70	e5933440	 ldr         r3, [r3, #0x440]
  03d74	e3130001	 tst         r3, #1
  03d78	0a000011	 beq         |$LN31@ContinueTx@2|
  03d7c	e59f3488	 ldr         r3, [pc, #0x488]
  03d80	e5933440	 ldr         r3, [r3, #0x440]
  03d84	e3130801	 tst         r3, #1, 16
  03d88	0a000005	 beq         |$LN29@ContinueTx@2|
  03d8c	e59b1004	 ldr         r1, [r11, #4]
  03d90	e59f0480	 ldr         r0, [pc, #0x480]
  03d94	eb000000	 bl          CeLogMsg
  03d98	e3a03001	 mov         r3, #1
  03d9c	e50b3030	 str         r3, [r11, #-0x30]
  03da0	ea000004	 b           |$LN30@ContinueTx@2|
  03da4		 |$LN29@ContinueTx@2|
  03da4	e59b1004	 ldr         r1, [r11, #4]
  03da8	e59f0468	 ldr         r0, [pc, #0x468]
  03dac	eb000000	 bl          NKDbgPrintfW
  03db0	e3a03000	 mov         r3, #0
  03db4	e50b3030	 str         r3, [r11, #-0x30]
  03db8		 |$LN30@ContinueTx@2|
  03db8	e3a03001	 mov         r3, #1
  03dbc	e50b302c	 str         r3, [r11, #-0x2C]
  03dc0	ea000001	 b           |$LN32@ContinueTx@2|
  03dc4		 |$LN31@ContinueTx@2|
  03dc4	e3a03000	 mov         r3, #0
  03dc8	e50b302c	 str         r3, [r11, #-0x2C]
  03dcc		 |$LN32@ContinueTx@2|

; 1608 :         goto cleanUp;

  03dcc	ea000102	 b           |$cleanUp$48156|
  03dd0		 |$LN9@ContinueTx@2|

; 1609 :     }
; 1610 : 
; 1611 :     /* Is this final interrupt of transfer? */
; 1612 :     if ((pTransfer->cbTransferred == pTransfer->cbBuffer) && !pEP->zeroLength)

  03dd0	e51b3080	 ldr         r3, [r11, #-0x80]
  03dd4	e2832010	 add         r2, r3, #0x10
  03dd8	e51b3080	 ldr         r3, [r11, #-0x80]
  03ddc	e283300c	 add         r3, r3, #0xC
  03de0	e5922000	 ldr         r2, [r2]
  03de4	e5933000	 ldr         r3, [r3]
  03de8	e1520003	 cmp         r2, r3
  03dec	1a00000b	 bne         |$LN8@ContinueTx@2|
  03df0	e51b3078	 ldr         r3, [r11, #-0x78]
  03df4	e2833014	 add         r3, r3, #0x14
  03df8	e5933000	 ldr         r3, [r3]
  03dfc	e3530000	 cmp         r3, #0
  03e00	1a000006	 bne         |$LN8@ContinueTx@2|

; 1613 :     {
; 1614 :         pTransfer->dwUsbError = UFN_NO_ERROR;

  03e04	e51b3080	 ldr         r3, [r11, #-0x80]
  03e08	e2832014	 add         r2, r3, #0x14
  03e0c	e3a03000	 mov         r3, #0
  03e10	e5823000	 str         r3, [r2]

; 1615 :         complete = TRUE;

  03e14	e3a03001	 mov         r3, #1
  03e18	e50b3064	 str         r3, [r11, #-0x64]

; 1616 :         goto cleanUp;

  03e1c	ea0000ee	 b           |$cleanUp$48156|
  03e20		 |$LN8@ContinueTx@2|

; 1617 :     }
; 1618 : 
; 1619 :     /* Enter TX stage */
; 1620 :     pEP->epStage = MGC_END0_STAGE_TX;

  03e20	e51b3078	 ldr         r3, [r11, #-0x78]
  03e24	e283201c	 add         r2, r3, #0x1C
  03e28	e3a03002	 mov         r3, #2
  03e2c	e5823000	 str         r3, [r2]

; 1621 : 
; 1622 :     /* Get size and buffer position */
; 1623 :     size = pTransfer->cbBuffer - pTransfer->cbTransferred;

  03e30	e51b3080	 ldr         r3, [r11, #-0x80]
  03e34	e283200c	 add         r2, r3, #0xC
  03e38	e51b3080	 ldr         r3, [r11, #-0x80]
  03e3c	e2833010	 add         r3, r3, #0x10
  03e40	e5922000	 ldr         r2, [r2]
  03e44	e5933000	 ldr         r3, [r3]
  03e48	e0423003	 sub         r3, r2, r3
  03e4c	e50b3074	 str         r3, [r11, #-0x74]

; 1624 : 
; 1625 :     /* If we are using PDD buffer we must check for maximal size
; 1626 :      * Note that we cannot transfer sizes greater than our DMA
; 1627 :      * Buffer Sizes. In case the total transfer requested by the
; 1628 :      * MDD layer is greater than our DMA Buffer Sizes, then the
; 1629 :      * whole Transfer needs to be stage managed by breaking into
; 1630 :      * chunks.
; 1631 :      */
; 1632 :     if ((pTransfer->dwBufferPhysicalAddress == 0) &&
; 1633 :         (size > pPdd->dmaBufferSize))

  03e50	e51b3080	 ldr         r3, [r11, #-0x80]
  03e54	e2833008	 add         r3, r3, #8
  03e58	e5933000	 ldr         r3, [r3]
  03e5c	e3530000	 cmp         r3, #0
  03e60	1a000029	 bne         |$LN7@ContinueTx@2|
  03e64	e59b3000	 ldr         r3, [r11]
  03e68	e2833008	 add         r3, r3, #8
  03e6c	e51b2074	 ldr         r2, [r11, #-0x74]
  03e70	e5933000	 ldr         r3, [r3]
  03e74	e1520003	 cmp         r2, r3
  03e78	9a000023	 bls         |$LN7@ContinueTx@2|

; 1634 :     {
; 1635 :         /* check for the Size below */
; 1636 :         PRINTMSG(ZONE_PDD_TX, (L"EP %u Transfer Size 0x%08x DMABufSize  0x%x\r\n",
; 1637 :                                endPoint, size, pPdd->dmaBufferSize));

  03e7c	e59f3388	 ldr         r3, [pc, #0x388]
  03e80	e5933440	 ldr         r3, [r3, #0x440]
  03e84	e3130b02	 tst         r3, #2, 22
  03e88	0a000019	 beq         |$LN35@ContinueTx@2|
  03e8c	e59f3378	 ldr         r3, [pc, #0x378]
  03e90	e5933440	 ldr         r3, [r3, #0x440]
  03e94	e3130801	 tst         r3, #1, 16
  03e98	0a000009	 beq         |$LN33@ContinueTx@2|
  03e9c	e59b3000	 ldr         r3, [r11]
  03ea0	e2833008	 add         r3, r3, #8
  03ea4	e5933000	 ldr         r3, [r3]
  03ea8	e51b2074	 ldr         r2, [r11, #-0x74]
  03eac	e59b1004	 ldr         r1, [r11, #4]
  03eb0	e59f035c	 ldr         r0, [pc, #0x35C]
  03eb4	eb000000	 bl          CeLogMsg
  03eb8	e3a03001	 mov         r3, #1
  03ebc	e50b3028	 str         r3, [r11, #-0x28]
  03ec0	ea000008	 b           |$LN34@ContinueTx@2|
  03ec4		 |$LN33@ContinueTx@2|
  03ec4	e59b3000	 ldr         r3, [r11]
  03ec8	e2833008	 add         r3, r3, #8
  03ecc	e5933000	 ldr         r3, [r3]
  03ed0	e51b2074	 ldr         r2, [r11, #-0x74]
  03ed4	e59b1004	 ldr         r1, [r11, #4]
  03ed8	e59f0334	 ldr         r0, [pc, #0x334]
  03edc	eb000000	 bl          NKDbgPrintfW
  03ee0	e3a03000	 mov         r3, #0
  03ee4	e50b3028	 str         r3, [r11, #-0x28]
  03ee8		 |$LN34@ContinueTx@2|
  03ee8	e3a03001	 mov         r3, #1
  03eec	e50b3024	 str         r3, [r11, #-0x24]
  03ef0	ea000001	 b           |$LN36@ContinueTx@2|
  03ef4		 |$LN35@ContinueTx@2|
  03ef4	e3a03000	 mov         r3, #0
  03ef8	e50b3024	 str         r3, [r11, #-0x24]
  03efc		 |$LN36@ContinueTx@2|

; 1638 :         size = pPdd->dmaBufferSize;

  03efc	e59b3000	 ldr         r3, [r11]
  03f00	e2833008	 add         r3, r3, #8
  03f04	e5933000	 ldr         r3, [r3]
  03f08	e50b3074	 str         r3, [r11, #-0x74]
  03f0c		 |$LN7@ContinueTx@2|

; 1639 :     }
; 1640 : 
; 1641 :     /*
; 1642 :      * Depending on size we should use different DMA mode, we should
; 1643 :      * process packet aligned transfer in separate way to avoid
; 1644 :      * zero length packet at end of transfer.
; 1645 :      */
; 1646 :     fullPackets = size / pEP->maxPacketSize;

  03f0c	e51b3078	 ldr         r3, [r11, #-0x78]
  03f10	e2833008	 add         r3, r3, #8
  03f14	e1d300b0	 ldrh        r0, [r3]
  03f18	e51b1074	 ldr         r1, [r11, #-0x74]
  03f1c	eb000000	 bl          __rt_udiv
  03f20	e50b0088	 str         r0, [r11, #-0x88]

; 1647 :     lastPacketSize = size - fullPackets * pEP->maxPacketSize;

  03f24	e51b3078	 ldr         r3, [r11, #-0x78]
  03f28	e2833008	 add         r3, r3, #8
  03f2c	e1d320b0	 ldrh        r2, [r3]
  03f30	e51b3088	 ldr         r3, [r11, #-0x88]
  03f34	e0020293	 mul         r2, r3, r2
  03f38	e51b3074	 ldr         r3, [r11, #-0x74]
  03f3c	e0433002	 sub         r3, r3, r2
  03f40	e50b3084	 str         r3, [r11, #-0x84]

; 1648 : 
; 1649 :     if (pTransfer->dwBufferPhysicalAddress == 0)

  03f44	e51b3080	 ldr         r3, [r11, #-0x80]
  03f48	e2833008	 add         r3, r3, #8
  03f4c	e5933000	 ldr         r3, [r3]
  03f50	e3530000	 cmp         r3, #0
  03f54	1a000035	 bne         |$LN6@ContinueTx@2|

; 1650 :     {
; 1651 :         /* Point to the appropriate offset in the PDD Buffer that
; 1652 :          * needs to be copied into the Driver's DMA Buffer.
; 1653 :          */
; 1654 :         pBuffer  = pTransfer->pvBuffer;

  03f58	e51b3080	 ldr         r3, [r11, #-0x80]
  03f5c	e2833004	 add         r3, r3, #4
  03f60	e5933000	 ldr         r3, [r3]
  03f64	e50b308c	 str         r3, [r11, #-0x8C]

; 1655 :         pBuffer += pTransfer->cbTransferred;

  03f68	e51b3080	 ldr         r3, [r11, #-0x80]
  03f6c	e2833010	 add         r3, r3, #0x10
  03f70	e51b208c	 ldr         r2, [r11, #-0x8C]
  03f74	e5933000	 ldr         r3, [r3]
  03f78	e0823003	 add         r3, r2, r3
  03f7c	e50b308c	 str         r3, [r11, #-0x8C]

; 1656 :         paBuffer = pEP->paDmaBuffer;

  03f80	e51b3078	 ldr         r3, [r11, #-0x78]
  03f84	e2833034	 add         r3, r3, #0x34
  03f88	e5933000	 ldr         r3, [r3]
  03f8c	e50b306c	 str         r3, [r11, #-0x6C]
  03f90		 |$LN50@ContinueTx@2|

; 1657 : 
; 1658 :         __try
; 1659 :         {
; 1660 :             if (size > 0) memcpy(pEP->pDmaBuffer, pBuffer, size);

  03f90	e51b3074	 ldr         r3, [r11, #-0x74]
  03f94	e3530000	 cmp         r3, #0
  03f98	9a000005	 bls         |$LN4@ContinueTx@2|
  03f9c	e51b2074	 ldr         r2, [r11, #-0x74]
  03fa0	e51b108c	 ldr         r1, [r11, #-0x8C]
  03fa4	e51b3078	 ldr         r3, [r11, #-0x78]
  03fa8	e2833030	 add         r3, r3, #0x30
  03fac	e5930000	 ldr         r0, [r3]
  03fb0	eb000000	 bl          memcpy
  03fb4		 |$LN4@ContinueTx@2|
  03fb4		 |$LN51@ContinueTx@2|

; 1661 :         }

  03fb4	ea00001c	 b           |$LN52@ContinueTx@2|
  03fb8		 |$LN47@ContinueTx@2|

; 1663 :         {
; 1664 :             pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  03fb8	e51b3080	 ldr         r3, [r11, #-0x80]
  03fbc	e2832014	 add         r2, r3, #0x14
  03fc0	e3a03f41	 mov         r3, #0x41, 30
  03fc4	e5823000	 str         r3, [r2]

; 1665 :             complete = TRUE;

  03fc8	e3a03001	 mov         r3, #1
  03fcc	e50b3064	 str         r3, [r11, #-0x64]

; 1666 :             PRINTMSG(ZONE_ERROR, (L"ContinueTxDmaTransfer: Client buffer exception!\r\n"));

  03fd0	e59f3234	 ldr         r3, [pc, #0x234]
  03fd4	e5933440	 ldr         r3, [r3, #0x440]
  03fd8	e3130001	 tst         r3, #1
  03fdc	0a00000f	 beq         |$LN39@ContinueTx@2|
  03fe0	e59f3224	 ldr         r3, [pc, #0x224]
  03fe4	e5933440	 ldr         r3, [r3, #0x440]
  03fe8	e3130801	 tst         r3, #1, 16
  03fec	0a000004	 beq         |$LN37@ContinueTx@2|
  03ff0	e59f0218	 ldr         r0, [pc, #0x218]
  03ff4	eb000000	 bl          CeLogMsg
  03ff8	e3a03001	 mov         r3, #1
  03ffc	e50b3020	 str         r3, [r11, #-0x20]
  04000	ea000003	 b           |$LN38@ContinueTx@2|
  04004		 |$LN37@ContinueTx@2|
  04004	e59f0204	 ldr         r0, [pc, #0x204]
  04008	eb000000	 bl          NKDbgPrintfW
  0400c	e3a03000	 mov         r3, #0
  04010	e50b3020	 str         r3, [r11, #-0x20]
  04014		 |$LN38@ContinueTx@2|
  04014	e3a03001	 mov         r3, #1
  04018	e50b301c	 str         r3, [r11, #-0x1C]
  0401c	ea000001	 b           |$LN40@ContinueTx@2|
  04020		 |$LN39@ContinueTx@2|
  04020	e3a03000	 mov         r3, #0
  04024	e50b301c	 str         r3, [r11, #-0x1C]
  04028		 |$LN40@ContinueTx@2|
  04028	eaffffff	 b           |$LN52@ContinueTx@2|
  0402c		 |$LN52@ContinueTx@2|

; 1667 :         }
; 1668 :     }
; 1669 :     else

  0402c	ea000023	 b           |$LN3@ContinueTx@2|
  04030		 |$LN6@ContinueTx@2|

; 1670 :     {
; 1671 :         paBuffer  = pTransfer->dwBufferPhysicalAddress;

  04030	e51b3080	 ldr         r3, [r11, #-0x80]
  04034	e2833008	 add         r3, r3, #8
  04038	e5933000	 ldr         r3, [r3]
  0403c	e50b306c	 str         r3, [r11, #-0x6C]

; 1672 :         paBuffer += pTransfer->cbTransferred;

  04040	e51b3080	 ldr         r3, [r11, #-0x80]
  04044	e2833010	 add         r3, r3, #0x10
  04048	e51b206c	 ldr         r2, [r11, #-0x6C]
  0404c	e5933000	 ldr         r3, [r3]
  04050	e0823003	 add         r3, r2, r3
  04054	e50b306c	 str         r3, [r11, #-0x6C]

; 1673 :         DEBUGMSG(ZONE_PDD_TX,
; 1674 :                  (L"ContinueTxDmaTransfer: EP %d, DMA from client buffer 0x%08x\r\n",
; 1675 :                   endPoint, paBuffer));

  04058	e59f31ac	 ldr         r3, [pc, #0x1AC]
  0405c	e5933440	 ldr         r3, [r3, #0x440]
  04060	e3130b02	 tst         r3, #2, 22
  04064	0a000013	 beq         |$LN43@ContinueTx@2|
  04068	e59f319c	 ldr         r3, [pc, #0x19C]
  0406c	e5933440	 ldr         r3, [r3, #0x440]
  04070	e3130801	 tst         r3, #1, 16
  04074	0a000006	 beq         |$LN41@ContinueTx@2|
  04078	e51b206c	 ldr         r2, [r11, #-0x6C]
  0407c	e59b1004	 ldr         r1, [r11, #4]
  04080	e59f0180	 ldr         r0, [pc, #0x180]
  04084	eb000000	 bl          CeLogMsg
  04088	e3a03001	 mov         r3, #1
  0408c	e50b3018	 str         r3, [r11, #-0x18]
  04090	ea000005	 b           |$LN42@ContinueTx@2|
  04094		 |$LN41@ContinueTx@2|
  04094	e51b206c	 ldr         r2, [r11, #-0x6C]
  04098	e59b1004	 ldr         r1, [r11, #4]
  0409c	e59f0164	 ldr         r0, [pc, #0x164]
  040a0	eb000000	 bl          NKDbgPrintfW
  040a4	e3a03000	 mov         r3, #0
  040a8	e50b3018	 str         r3, [r11, #-0x18]
  040ac		 |$LN42@ContinueTx@2|
  040ac	e3a03001	 mov         r3, #1
  040b0	e50b3014	 str         r3, [r11, #-0x14]
  040b4	ea000001	 b           |$LN44@ContinueTx@2|
  040b8		 |$LN43@ContinueTx@2|
  040b8	e3a03000	 mov         r3, #0
  040bc	e50b3014	 str         r3, [r11, #-0x14]
  040c0		 |$LN44@ContinueTx@2|
  040c0		 |$LN3@ContinueTx@2|

; 1676 :     }
; 1677 : 
; 1678 :     epCsrReg = pUsbdRegs->EPCSR[ endPoint ].PERI_TXCSR;

  040c0	e51b307c	 ldr         r3, [r11, #-0x7C]
  040c4	e2831c05	 add         r1, r3, #5, 24
  040c8	e59b2004	 ldr         r2, [r11, #4]
  040cc	e3a03010	 mov         r3, #0x10
  040d0	e0030392	 mul         r3, r2, r3
  040d4	e0813003	 add         r3, r1, r3
  040d8	e2833002	 add         r3, r3, #2
  040dc	e1d330b0	 ldrh        r3, [r3]
  040e0	e14b37b0	 strh        r3, [r11, #-0x70]

; 1679 :     epCsrReg &= ~(MGC_M_TXCSR_AUTOSET);

  040e4	e15b37b0	 ldrh        r3, [r11, #-0x70]
  040e8	e1a02003	 mov         r2, r3
  040ec	e3e03902	 mvn         r3, #2, 18
  040f0	e0023003	 and         r3, r2, r3
  040f4	e1a03803	 mov         r3, r3, lsl #16
  040f8	e1a03823	 mov         r3, r3, lsr #16
  040fc	e14b37b0	 strh        r3, [r11, #-0x70]

; 1680 :     epCsrReg |=  (MGC_M_TXCSR_DMAENAB | MGC_M_TXCSR_MODE);

  04100	e15b37b0	 ldrh        r3, [r11, #-0x70]
  04104	e3833a03	 orr         r3, r3, #3, 20
  04108	e1a03803	 mov         r3, r3, lsl #16
  0410c	e1a03823	 mov         r3, r3, lsr #16
  04110	e14b37b0	 strh        r3, [r11, #-0x70]

; 1681 :     pUsbdRegs->EPCSR[ endPoint ].PERI_TXCSR = epCsrReg;

  04114	e51b307c	 ldr         r3, [r11, #-0x7C]
  04118	e2831c05	 add         r1, r3, #5, 24
  0411c	e59b2004	 ldr         r2, [r11, #4]
  04120	e3a03010	 mov         r3, #0x10
  04124	e0030392	 mul         r3, r2, r3
  04128	e0813003	 add         r3, r1, r3
  0412c	e2832002	 add         r2, r3, #2
  04130	e15b37b0	 ldrh        r3, [r11, #-0x70]
  04134	e1c230b0	 strh        r3, [r2]

; 1682 : 
; 1683 :     if (complete) goto cleanUp;

  04138	e51b3064	 ldr         r3, [r11, #-0x64]
  0413c	e3530000	 cmp         r3, #0
  04140	0a000000	 beq         |$LN2@ContinueTx@2|
  04144	ea000024	 b           |$cleanUp$48156|
  04148		 |$LN2@ContinueTx@2|

; 1684 : 
; 1685 : #ifdef CPPI_DMA_SUPPORT
; 1686 :     // Overlapped transfer?
; 1687 :     pEP->pOverlappedInfo = NULL;

  04148	e51b3078	 ldr         r3, [r11, #-0x78]
  0414c	e2832038	 add         r2, r3, #0x38
  04150	e3a03000	 mov         r3, #0
  04154	e5823000	 str         r3, [r2]

; 1688 :     if (pTransfer->dwFlags & USB_OVERLAPPED)

  04158	e51b3080	 ldr         r3, [r11, #-0x80]
  0415c	e5933000	 ldr         r3, [r3]
  04160	e3130001	 tst         r3, #1
  04164	0a000005	 beq         |$LN1@ContinueTx@2|

; 1689 :     {
; 1690 :         pEP->pOverlappedInfo = (PUSB_OVERLAPPED_INFO)pTransfer->pvPddTransferInfo;

  04168	e51b3080	 ldr         r3, [r11, #-0x80]
  0416c	e283101c	 add         r1, r3, #0x1C
  04170	e51b3078	 ldr         r3, [r11, #-0x78]
  04174	e2832038	 add         r2, r3, #0x38
  04178	e5913000	 ldr         r3, [r1]
  0417c	e5823000	 str         r3, [r2]
  04180		 |$LN1@ContinueTx@2|

; 1691 :     }
; 1692 : 
; 1693 : //#define OVERLAPPED_TEST
; 1694 : #ifdef OVERLAPPED_TEST
; 1695 :     {
; 1696 :         static USB_OVERLAPPED_INFO ov;
; 1697 :         ov.lpUserData = NULL;
; 1698 :         ov.dwBytesToIssueCallback = pTransfer->cbBuffer * 3 / 4;
; 1699 :         pEP->pOverlappedInfo = &ov;
; 1700 :     }
; 1701 : #endif
; 1702 : 
; 1703 :     /* Configure the DMA Controller now */
; 1704 : 
; 1705 :     /* Note:
; 1706 :      * 1. The maxPacketSize specifies the EP Max Fifo Size. paDmaTx0Buffer
; 1707 :      *    points to the physical Address of the Driver's Tx Buffer.
; 1708 :      *    Size specifies the transfer count.
; 1709 :      *
; 1710 :      * 2. The Transfer count is set to the minimum of the Driver's
; 1711 :      *    DMA Tx Buffer Size and pTransfer->cbBuffer.
; 1712 :      * In case the transfer size is greater than the Tx Buffer size,
; 1713 :      * then this routine will be invoked again from the Interrupt
; 1714 :      * Context also.
; 1715 :      */
; 1716 :     pDmaCntrl->channelProgram (pPdd->ep[endPoint].pDmaChan,
; 1717 :                                 pPdd->ep[endPoint].maxPacketSize,
; 1718 :                                 paBuffer,
; 1719 :                                 size);

  04180	e51b3074	 ldr         r3, [r11, #-0x74]
  04184	e51b206c	 ldr         r2, [r11, #-0x6C]
  04188	e59b1000	 ldr         r1, [r11]
  0418c	e281efa1	 add         lr, r1, #0xA1, 30
  04190	e59b0004	 ldr         r0, [r11, #4]
  04194	e3a0103c	 mov         r1, #0x3C
  04198	e0010190	 mul         r1, r0, r1
  0419c	e08e1001	 add         r1, lr, r1
  041a0	e2811008	 add         r1, r1, #8
  041a4	e1d110b0	 ldrh        r1, [r1]
  041a8	e59b0000	 ldr         r0, [r11]
  041ac	e2804fa1	 add         r4, r0, #0xA1, 30
  041b0	e59be004	 ldr         lr, [r11, #4]
  041b4	e3a0003c	 mov         r0, #0x3C
  041b8	e000009e	 mul         r0, lr, r0
  041bc	e0840000	 add         r0, r4, r0
  041c0	e280002c	 add         r0, r0, #0x2C
  041c4	e5900000	 ldr         r0, [r0]
  041c8	e51be068	 ldr         lr, [r11, #-0x68]
  041cc	e28ee010	 add         lr, lr, #0x10
  041d0	e59e4000	 ldr         r4, [lr]
  041d4	e1a0e00f	 mov         lr, pc
  041d8	e12fff14	 bx          r4
  041dc		 |$cleanUp$48156|

; 1720 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 1721 : 
; 1722 : cleanUp:
; 1723 :     UNLOCK_ENDPOINT (pPdd);

  041dc	e59b3000	 ldr         r3, [r11]
  041e0	e2830e27	 add         r0, r3, #0x27, 28
  041e4	eb000000	 bl          LeaveCriticalSection
  041e8		 |$LN45@ContinueTx@2|

; 1724 : 
; 1725 :     return;
; 1726 : }

  041e8	e24bd010	 sub         sp, r11, #0x10
  041ec	e89d6810	 ldmia       sp, {r4, r11, sp, lr}
  041f0	e12fff1e	 bx          lr

			 ENDP  ; |ContinueTxDmaTransfer|

  041f4		 |$LN46@ContinueTx@2|
  041f4		 |$LN55@ContinueTx@2|

; 1662 :         __except(EXCEPTION_EXECUTE_HANDLER)

  041f4	e52de004	 str         lr, [sp, #-4]!
  041f8	e24dd008	 sub         sp, sp, #8
  041fc		 |$LN49@ContinueTx@2|
  041fc		 |$LN58@ContinueTx@2|
  041fc	e3a00001	 mov         r0, #1
  04200		 |$LN48@ContinueTx@2|
  04200	e28dd008	 add         sp, sp, #8
  04204	e49df004	 ldr         pc, [sp], #4
  04208		 |$LN60@ContinueTx@2|
  04208		 |$LN61@ContinueTx@2|
  04208	00000000	 DCD         |??_C@_1HM@CMNAJPIB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAD?$AAM@|
  0420c		 |$LN62@ContinueTx@2|
  0420c	00000000	 DCD         |dpCurSettings|
  04210		 |$LN63@ContinueTx@2|
  04210	00000000	 DCD         |??_C@_1GE@GHDKIAKL@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@|
  04214		 |$LN64@ContinueTx@2|
  04214	00000000	 DCD         |??_C@_1FM@ELGAOAPL@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAD?$AAM?$AAA?$AAB?$AAu@|
  04218		 |$LN65@ContinueTx@2|
  04218	00000000	 DCD         |??_C@_1LI@BHLEPIFM@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAI?$AAS@|
  0421c		 |$LN66@ContinueTx@2|
  0421c	00000000	 DCD         |??_C@_1IC@IDOBDDBH@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@|
  04220		 |$LN59@ContinueTx@2|
  04220		 |$LN57@ContinueTx@2|
	EXPORT	|??_C@_1JO@JOEPNPIB@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@IHAPOPKB@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@GNHCCEJD@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@NCACKJFF@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@| [ DATA ] ; `string'
	EXPORT	|TxDmaFifoComplete|

  00098			 AREA	 |.pdata|, PDATA
|$T50007| DCD	|$LN51@TxDmaFifoC|
	DCD	0x40017804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@JOEPNPIB@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@| DCB "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "F", 0x0, "i"
	DCB	0x0, "f", 0x0, "o", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " "
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@IHAPOPKB@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf@| DCB "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "F", 0x0, "i"
	DCB	0x0, "f", 0x0, "o", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@GNHCCEJD@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAi?$AAn@| DCB "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "F", 0x0, "i"
	DCB	0x0, "f", 0x0, "o", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "f", 0x0, "o"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, ","
	DCB	0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "l"
	DCB	0x0, "e", 0x0, "n", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@NCACKJFF@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@| DCB "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "F", 0x0, "i"
	DCB	0x0, "f", 0x0, "o", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " "
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  04220			 AREA	 |.text|, CODE, ARM

  04220		 |TxDmaFifoComplete| PROC

; 1877 : {

  04220		 |$LN51@TxDmaFifoC|
  04220	e1a0c00d	 mov         r12, sp
  04224	e92d0003	 stmdb       sp!, {r0, r1}
  04228	e92d5000	 stmdb       sp!, {r12, lr}
  0422c	e24dd098	 sub         sp, sp, #0x98
  04230		 |$M50004|

; 1878 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pDriverContext;

  04230	e59d30a0	 ldr         r3, [sp, #0xA0]
  04234	e58d301c	 str         r3, [sp, #0x1C]

; 1879 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  04238	e59d301c	 ldr         r3, [sp, #0x1C]
  0423c	e283301c	 add         r3, r3, #0x1C
  04240	e5933000	 ldr         r3, [r3]
  04244	e58d3010	 str         r3, [sp, #0x10]

; 1880 :     UsbFnEp         *pEP = &pPdd->ep[endPoint];

  04248	e59d301c	 ldr         r3, [sp, #0x1C]
  0424c	e2831fa1	 add         r1, r3, #0xA1, 30
  04250	e59d20a4	 ldr         r2, [sp, #0xA4]
  04254	e3a0303c	 mov         r3, #0x3C
  04258	e0030392	 mul         r3, r2, r3
  0425c	e0813003	 add         r3, r1, r3
  04260	e58d3014	 str         r3, [sp, #0x14]

; 1881 :     STransfer       *pTransfer = pEP->pTransfer;

  04264	e59d3014	 ldr         r3, [sp, #0x14]
  04268	e2833020	 add         r3, r3, #0x20
  0426c	e5933000	 ldr         r3, [r3]
  04270	e58d300c	 str         r3, [sp, #0xC]

; 1882 :     BOOL            complete = FALSE;

  04274	e3a03000	 mov         r3, #0
  04278	e58d3020	 str         r3, [sp, #0x20]

; 1883 :     volatile UINT16 *pepCtrlReg;
; 1884 :     UINT16          epCsrReg;
; 1885 : 
; 1886 :     PRINTMSG(ZONE_PDD_TX,
; 1887 :              (L"TxDmaFifoComplete: "
; 1888 :               L"EP %d, pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 1889 :               endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1890 :               pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1891 :               pTransfer != NULL ? pTransfer->dwUsbError : -1));

  0427c	e59f3560	 ldr         r3, [pc, #0x560]
  04280	e5933440	 ldr         r3, [r3, #0x440]
  04284	e3130b02	 tst         r3, #2, 22
  04288	0a000059	 beq         |$LN23@TxDmaFifoC|
  0428c	e59f3550	 ldr         r3, [pc, #0x550]
  04290	e5933440	 ldr         r3, [r3, #0x440]
  04294	e3130801	 tst         r3, #1, 16
  04298	0a000029	 beq         |$LN21@TxDmaFifoC|
  0429c	e59d300c	 ldr         r3, [sp, #0xC]
  042a0	e3530000	 cmp         r3, #0
  042a4	0a000004	 beq         |$LN9@TxDmaFifoC|
  042a8	e59d300c	 ldr         r3, [sp, #0xC]
  042ac	e2833014	 add         r3, r3, #0x14
  042b0	e5933000	 ldr         r3, [r3]
  042b4	e58d3048	 str         r3, [sp, #0x48]
  042b8	ea000001	 b           |$LN10@TxDmaFifoC|
  042bc		 |$LN9@TxDmaFifoC|
  042bc	e3e03000	 mvn         r3, #0
  042c0	e58d3048	 str         r3, [sp, #0x48]
  042c4		 |$LN10@TxDmaFifoC|
  042c4	e59d300c	 ldr         r3, [sp, #0xC]
  042c8	e3530000	 cmp         r3, #0
  042cc	0a000004	 beq         |$LN11@TxDmaFifoC|
  042d0	e59d300c	 ldr         r3, [sp, #0xC]
  042d4	e2833010	 add         r3, r3, #0x10
  042d8	e5933000	 ldr         r3, [r3]
  042dc	e58d304c	 str         r3, [sp, #0x4C]
  042e0	ea000001	 b           |$LN12@TxDmaFifoC|
  042e4		 |$LN11@TxDmaFifoC|
  042e4	e3a03000	 mov         r3, #0
  042e8	e58d304c	 str         r3, [sp, #0x4C]
  042ec		 |$LN12@TxDmaFifoC|
  042ec	e59d300c	 ldr         r3, [sp, #0xC]
  042f0	e3530000	 cmp         r3, #0
  042f4	0a000004	 beq         |$LN13@TxDmaFifoC|
  042f8	e59d300c	 ldr         r3, [sp, #0xC]
  042fc	e283300c	 add         r3, r3, #0xC
  04300	e5933000	 ldr         r3, [r3]
  04304	e58d3050	 str         r3, [sp, #0x50]
  04308	ea000001	 b           |$LN14@TxDmaFifoC|
  0430c		 |$LN13@TxDmaFifoC|
  0430c	e3a03000	 mov         r3, #0
  04310	e58d3050	 str         r3, [sp, #0x50]
  04314		 |$LN14@TxDmaFifoC|
  04314	e59d3048	 ldr         r3, [sp, #0x48]
  04318	e58d3004	 str         r3, [sp, #4]
  0431c	e59d304c	 ldr         r3, [sp, #0x4C]
  04320	e58d3000	 str         r3, [sp]
  04324	e59d3050	 ldr         r3, [sp, #0x50]
  04328	e59d200c	 ldr         r2, [sp, #0xC]
  0432c	e59d10a4	 ldr         r1, [sp, #0xA4]
  04330	e59f04c4	 ldr         r0, [pc, #0x4C4]
  04334	eb000000	 bl          CeLogMsg
  04338	e3a03001	 mov         r3, #1
  0433c	e58d3054	 str         r3, [sp, #0x54]
  04340	ea000028	 b           |$LN22@TxDmaFifoC|
  04344		 |$LN21@TxDmaFifoC|
  04344	e59d300c	 ldr         r3, [sp, #0xC]
  04348	e3530000	 cmp         r3, #0
  0434c	0a000004	 beq         |$LN15@TxDmaFifoC|
  04350	e59d300c	 ldr         r3, [sp, #0xC]
  04354	e2833014	 add         r3, r3, #0x14
  04358	e5933000	 ldr         r3, [r3]
  0435c	e58d3058	 str         r3, [sp, #0x58]
  04360	ea000001	 b           |$LN16@TxDmaFifoC|
  04364		 |$LN15@TxDmaFifoC|
  04364	e3e03000	 mvn         r3, #0
  04368	e58d3058	 str         r3, [sp, #0x58]
  0436c		 |$LN16@TxDmaFifoC|
  0436c	e59d300c	 ldr         r3, [sp, #0xC]
  04370	e3530000	 cmp         r3, #0
  04374	0a000004	 beq         |$LN17@TxDmaFifoC|
  04378	e59d300c	 ldr         r3, [sp, #0xC]
  0437c	e2833010	 add         r3, r3, #0x10
  04380	e5933000	 ldr         r3, [r3]
  04384	e58d305c	 str         r3, [sp, #0x5C]
  04388	ea000001	 b           |$LN18@TxDmaFifoC|
  0438c		 |$LN17@TxDmaFifoC|
  0438c	e3a03000	 mov         r3, #0
  04390	e58d305c	 str         r3, [sp, #0x5C]
  04394		 |$LN18@TxDmaFifoC|
  04394	e59d300c	 ldr         r3, [sp, #0xC]
  04398	e3530000	 cmp         r3, #0
  0439c	0a000004	 beq         |$LN19@TxDmaFifoC|
  043a0	e59d300c	 ldr         r3, [sp, #0xC]
  043a4	e283300c	 add         r3, r3, #0xC
  043a8	e5933000	 ldr         r3, [r3]
  043ac	e58d3060	 str         r3, [sp, #0x60]
  043b0	ea000001	 b           |$LN20@TxDmaFifoC|
  043b4		 |$LN19@TxDmaFifoC|
  043b4	e3a03000	 mov         r3, #0
  043b8	e58d3060	 str         r3, [sp, #0x60]
  043bc		 |$LN20@TxDmaFifoC|
  043bc	e59d3058	 ldr         r3, [sp, #0x58]
  043c0	e58d3004	 str         r3, [sp, #4]
  043c4	e59d305c	 ldr         r3, [sp, #0x5C]
  043c8	e58d3000	 str         r3, [sp]
  043cc	e59d3060	 ldr         r3, [sp, #0x60]
  043d0	e59d200c	 ldr         r2, [sp, #0xC]
  043d4	e59d10a4	 ldr         r1, [sp, #0xA4]
  043d8	e59f041c	 ldr         r0, [pc, #0x41C]
  043dc	eb000000	 bl          NKDbgPrintfW
  043e0	e3a03000	 mov         r3, #0
  043e4	e58d3054	 str         r3, [sp, #0x54]
  043e8		 |$LN22@TxDmaFifoC|
  043e8	e3a03001	 mov         r3, #1
  043ec	e58d3064	 str         r3, [sp, #0x64]
  043f0	ea000001	 b           |$LN24@TxDmaFifoC|
  043f4		 |$LN23@TxDmaFifoC|
  043f4	e3a03000	 mov         r3, #0
  043f8	e58d3064	 str         r3, [sp, #0x64]
  043fc		 |$LN24@TxDmaFifoC|

; 1892 : 
; 1893 :     /* Sanity Check */
; 1894 :     if (pTransfer == NULL)

  043fc	e59d300c	 ldr         r3, [sp, #0xC]
  04400	e3530000	 cmp         r3, #0
  04404	1a00000f	 bne         |$LN6@TxDmaFifoC|

; 1895 :     {
; 1896 :         if (pEP->epStage != MGC_END0_START)

  04408	e59d3014	 ldr         r3, [sp, #0x14]
  0440c	e283301c	 add         r3, r3, #0x1C
  04410	e5933000	 ldr         r3, [r3]
  04414	e3530001	 cmp         r3, #1
  04418	0a000007	 beq         |$LN5@TxDmaFifoC|

; 1897 :             ERRORMSG(TRUE, (L"EP %u Invalid DMA Completion\r\n", endPoint));

  0441c	e3a02c07	 mov         r2, #7, 24
  04420	e3822069	 orr         r2, r2, #0x69
  04424	e59f13cc	 ldr         r1, [pc, #0x3CC]
  04428	e59f03c4	 ldr         r0, [pc, #0x3C4]
  0442c	eb000000	 bl          NKDbgPrintfW
  04430	e59d10a4	 ldr         r1, [sp, #0xA4]
  04434	e59f03b4	 ldr         r0, [pc, #0x3B4]
  04438	eb000000	 bl          NKDbgPrintfW
  0443c		 |$LN5@TxDmaFifoC|

; 1898 :         return 1;

  0443c	e3a03001	 mov         r3, #1
  04440	e58d3034	 str         r3, [sp, #0x34]
  04444	ea0000e1	 b           |$LN7@TxDmaFifoC|
  04448		 |$LN6@TxDmaFifoC|

; 1899 :     }
; 1900 : 
; 1901 :     /* Check we were waiting for the final ACK interrupt */
; 1902 :     if (pEP->epStage != MGC_END0_STAGE_ACKWAIT)

  04448	e59d3014	 ldr         r3, [sp, #0x14]
  0444c	e283301c	 add         r3, r3, #0x1C
  04450	e5933000	 ldr         r3, [r3]
  04454	e3530006	 cmp         r3, #6
  04458	0a000026	 beq         |$LN4@TxDmaFifoC|

; 1903 :     {
; 1904 :         PRINTMSG(ZONE_PDD_TX,
; 1905 :                  (L"TxDmaFifoComplete: EP %d, Not in fifo wait, transferred %d, len %d\r\n",
; 1906 :                   endPoint, pTransfer->cbTransferred, pTransfer->cbBuffer));

  0445c	e59f3380	 ldr         r3, [pc, #0x380]
  04460	e5933440	 ldr         r3, [r3, #0x440]
  04464	e3130b02	 tst         r3, #2, 22
  04468	0a00001d	 beq         |$LN27@TxDmaFifoC|
  0446c	e59f3370	 ldr         r3, [pc, #0x370]
  04470	e5933440	 ldr         r3, [r3, #0x440]
  04474	e3130801	 tst         r3, #1, 16
  04478	0a00000b	 beq         |$LN25@TxDmaFifoC|
  0447c	e59d300c	 ldr         r3, [sp, #0xC]
  04480	e283300c	 add         r3, r3, #0xC
  04484	e5933000	 ldr         r3, [r3]
  04488	e59d200c	 ldr         r2, [sp, #0xC]
  0448c	e2822010	 add         r2, r2, #0x10
  04490	e5922000	 ldr         r2, [r2]
  04494	e59d10a4	 ldr         r1, [sp, #0xA4]
  04498	e59f034c	 ldr         r0, [pc, #0x34C]
  0449c	eb000000	 bl          CeLogMsg
  044a0	e3a03001	 mov         r3, #1
  044a4	e58d3068	 str         r3, [sp, #0x68]
  044a8	ea00000a	 b           |$LN26@TxDmaFifoC|
  044ac		 |$LN25@TxDmaFifoC|
  044ac	e59d300c	 ldr         r3, [sp, #0xC]
  044b0	e283300c	 add         r3, r3, #0xC
  044b4	e5933000	 ldr         r3, [r3]
  044b8	e59d200c	 ldr         r2, [sp, #0xC]
  044bc	e2822010	 add         r2, r2, #0x10
  044c0	e5922000	 ldr         r2, [r2]
  044c4	e59d10a4	 ldr         r1, [sp, #0xA4]
  044c8	e59f031c	 ldr         r0, [pc, #0x31C]
  044cc	eb000000	 bl          NKDbgPrintfW
  044d0	e3a03000	 mov         r3, #0
  044d4	e58d3068	 str         r3, [sp, #0x68]
  044d8		 |$LN26@TxDmaFifoC|
  044d8	e3a03001	 mov         r3, #1
  044dc	e58d306c	 str         r3, [sp, #0x6C]
  044e0	ea000001	 b           |$LN28@TxDmaFifoC|
  044e4		 |$LN27@TxDmaFifoC|
  044e4	e3a03000	 mov         r3, #0
  044e8	e58d306c	 str         r3, [sp, #0x6C]
  044ec		 |$LN28@TxDmaFifoC|

; 1907 :         return 0;

  044ec	e3a03000	 mov         r3, #0
  044f0	e58d3034	 str         r3, [sp, #0x34]
  044f4	ea0000b5	 b           |$LN7@TxDmaFifoC|
  044f8		 |$LN4@TxDmaFifoC|

; 1908 :     }
; 1909 : 
; 1910 :     /* Enter CriticalSection */
; 1911 :     LOCK_ENDPOINT(pPdd);

  044f8	e59d301c	 ldr         r3, [sp, #0x1C]
  044fc	e2830e27	 add         r0, r3, #0x27, 28
  04500	eb000000	 bl          EnterCriticalSection

; 1912 : 
; 1913 :     /* Check that packet has gone out on bus. */
; 1914 :     pepCtrlReg = &pUsbdRegs->EPCSR[ endPoint ].PERI_TXCSR;

  04504	e59d3010	 ldr         r3, [sp, #0x10]
  04508	e2831c05	 add         r1, r3, #5, 24
  0450c	e59d20a4	 ldr         r2, [sp, #0xA4]
  04510	e3a03010	 mov         r3, #0x10
  04514	e0030392	 mul         r3, r2, r3
  04518	e0813003	 add         r3, r1, r3
  0451c	e2833002	 add         r3, r3, #2
  04520	e58d3008	 str         r3, [sp, #8]

; 1915 :     epCsrReg = *pepCtrlReg;

  04524	e59d3008	 ldr         r3, [sp, #8]
  04528	e1d330b0	 ldrh        r3, [r3]
  0452c	e1cd31b8	 strh        r3, [sp, #0x18]

; 1916 :     if ((epCsrReg & MGC_M_TXCSR_TXPKTRDY) != 0)

  04530	e1dd31b8	 ldrh        r3, [sp, #0x18]
  04534	e3130001	 tst         r3, #1
  04538	0a000018	 beq         |$LN3@TxDmaFifoC|

; 1917 :     {
; 1918 :         /* Need to keep waiting */
; 1919 :         PRINTMSG(ZONE_PDD_TX,
; 1920 :                  (L"TxDmaFifoComplete: EP %d, Wait for bus write\r\n", endPoint));

  0453c	e59f32a0	 ldr         r3, [pc, #0x2A0]
  04540	e5933440	 ldr         r3, [r3, #0x440]
  04544	e3130b02	 tst         r3, #2, 22
  04548	0a000011	 beq         |$LN31@TxDmaFifoC|
  0454c	e59f3290	 ldr         r3, [pc, #0x290]
  04550	e5933440	 ldr         r3, [r3, #0x440]
  04554	e3130801	 tst         r3, #1, 16
  04558	0a000005	 beq         |$LN29@TxDmaFifoC|
  0455c	e59d10a4	 ldr         r1, [sp, #0xA4]
  04560	e59f0280	 ldr         r0, [pc, #0x280]
  04564	eb000000	 bl          CeLogMsg
  04568	e3a03001	 mov         r3, #1
  0456c	e58d3070	 str         r3, [sp, #0x70]
  04570	ea000004	 b           |$LN30@TxDmaFifoC|
  04574		 |$LN29@TxDmaFifoC|
  04574	e59d10a4	 ldr         r1, [sp, #0xA4]
  04578	e59f0268	 ldr         r0, [pc, #0x268]
  0457c	eb000000	 bl          NKDbgPrintfW
  04580	e3a03000	 mov         r3, #0
  04584	e58d3070	 str         r3, [sp, #0x70]
  04588		 |$LN30@TxDmaFifoC|
  04588	e3a03001	 mov         r3, #1
  0458c	e58d3074	 str         r3, [sp, #0x74]
  04590	ea000001	 b           |$LN32@TxDmaFifoC|
  04594		 |$LN31@TxDmaFifoC|
  04594	e3a03000	 mov         r3, #0
  04598	e58d3074	 str         r3, [sp, #0x74]
  0459c		 |$LN32@TxDmaFifoC|

; 1921 :     }
; 1922 :     else

  0459c	ea000015	 b           |$LN2@TxDmaFifoC|
  045a0		 |$LN3@TxDmaFifoC|

; 1923 :     {
; 1924 :         /* Now that the Transfer is complete, return back to IDLE State */
; 1925 :         pEP->epStage = MGC_END0_START;

  045a0	e59d3014	 ldr         r3, [sp, #0x14]
  045a4	e283201c	 add         r2, r3, #0x1C
  045a8	e3a03001	 mov         r3, #1
  045ac	e5823000	 str         r3, [r2]

; 1926 :         pTransfer->dwUsbError = UFN_NO_ERROR;

  045b0	e59d300c	 ldr         r3, [sp, #0xC]
  045b4	e2832014	 add         r2, r3, #0x14
  045b8	e3a03000	 mov         r3, #0
  045bc	e5823000	 str         r3, [r2]

; 1927 :         complete = TRUE;

  045c0	e3a03001	 mov         r3, #1
  045c4	e58d3020	 str         r3, [sp, #0x20]

; 1928 :         
; 1929 :         /* Disable TX interrupt */
; 1930 :         pUsbdRegs->EP_INTMSKCLRR = (1 << endPoint) << USB_OTG_TXINT_SHIFT;

  045c8	e59d20a4	 ldr         r2, [sp, #0xA4]
  045cc	e3a03001	 mov         r3, #1
  045d0	e1a02213	 mov         r2, r3, lsl r2
  045d4	e59d3010	 ldr         r3, [sp, #0x10]
  045d8	e2833034	 add         r3, r3, #0x34
  045dc	e5832000	 str         r2, [r3]

; 1931 :         pUsbdRegs->EP_INTCLRR = (1 << endPoint) << USB_OTG_TXINT_SHIFT;

  045e0	e59d20a4	 ldr         r2, [sp, #0xA4]
  045e4	e3a03001	 mov         r3, #1
  045e8	e1a02213	 mov         r2, r3, lsl r2
  045ec	e59d3010	 ldr         r3, [sp, #0x10]
  045f0	e2833028	 add         r3, r3, #0x28
  045f4	e5832000	 str         r2, [r3]
  045f8		 |$LN2@TxDmaFifoC|

; 1932 :     }
; 1933 : 
; 1934 :     /* Leave CriticalSection */
; 1935 :     UNLOCK_ENDPOINT(pPdd);

  045f8	e59d301c	 ldr         r3, [sp, #0x1C]
  045fc	e2830e27	 add         r0, r3, #0x27, 28
  04600	eb000000	 bl          LeaveCriticalSection

; 1936 : 
; 1937 :     if (complete == TRUE)

  04604	e59d3020	 ldr         r3, [sp, #0x20]
  04608	e3530001	 cmp         r3, #1
  0460c	1a00006d	 bne         |$LN1@TxDmaFifoC|

; 1938 :     {
; 1939 :         /* If transaction is complete we should tell MDD */
; 1940 :         PRINTMSG(ZONE_PDD_TX,
; 1941 :                  (L"TxDmaFifoComplete: "
; 1942 :              L"EP %d, pTransfer 0x%08x (%d, %d, 0x%0x) - notify complete\r\n",
; 1943 :              endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1944 :              pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1945 :              pTransfer != NULL ? pTransfer->dwUsbError : -1));

  04610	e59f31cc	 ldr         r3, [pc, #0x1CC]
  04614	e5933440	 ldr         r3, [r3, #0x440]
  04618	e3130b02	 tst         r3, #2, 22
  0461c	0a000059	 beq         |$LN47@TxDmaFifoC|
  04620	e59f31bc	 ldr         r3, [pc, #0x1BC]
  04624	e5933440	 ldr         r3, [r3, #0x440]
  04628	e3130801	 tst         r3, #1, 16
  0462c	0a000029	 beq         |$LN45@TxDmaFifoC|
  04630	e59d300c	 ldr         r3, [sp, #0xC]
  04634	e3530000	 cmp         r3, #0
  04638	0a000004	 beq         |$LN33@TxDmaFifoC|
  0463c	e59d300c	 ldr         r3, [sp, #0xC]
  04640	e2833014	 add         r3, r3, #0x14
  04644	e5933000	 ldr         r3, [r3]
  04648	e58d3078	 str         r3, [sp, #0x78]
  0464c	ea000001	 b           |$LN34@TxDmaFifoC|
  04650		 |$LN33@TxDmaFifoC|
  04650	e3e03000	 mvn         r3, #0
  04654	e58d3078	 str         r3, [sp, #0x78]
  04658		 |$LN34@TxDmaFifoC|
  04658	e59d300c	 ldr         r3, [sp, #0xC]
  0465c	e3530000	 cmp         r3, #0
  04660	0a000004	 beq         |$LN35@TxDmaFifoC|
  04664	e59d300c	 ldr         r3, [sp, #0xC]
  04668	e2833010	 add         r3, r3, #0x10
  0466c	e5933000	 ldr         r3, [r3]
  04670	e58d307c	 str         r3, [sp, #0x7C]
  04674	ea000001	 b           |$LN36@TxDmaFifoC|
  04678		 |$LN35@TxDmaFifoC|
  04678	e3a03000	 mov         r3, #0
  0467c	e58d307c	 str         r3, [sp, #0x7C]
  04680		 |$LN36@TxDmaFifoC|
  04680	e59d300c	 ldr         r3, [sp, #0xC]
  04684	e3530000	 cmp         r3, #0
  04688	0a000004	 beq         |$LN37@TxDmaFifoC|
  0468c	e59d300c	 ldr         r3, [sp, #0xC]
  04690	e283300c	 add         r3, r3, #0xC
  04694	e5933000	 ldr         r3, [r3]
  04698	e58d3080	 str         r3, [sp, #0x80]
  0469c	ea000001	 b           |$LN38@TxDmaFifoC|
  046a0		 |$LN37@TxDmaFifoC|
  046a0	e3a03000	 mov         r3, #0
  046a4	e58d3080	 str         r3, [sp, #0x80]
  046a8		 |$LN38@TxDmaFifoC|
  046a8	e59d3078	 ldr         r3, [sp, #0x78]
  046ac	e58d3004	 str         r3, [sp, #4]
  046b0	e59d307c	 ldr         r3, [sp, #0x7C]
  046b4	e58d3000	 str         r3, [sp]
  046b8	e59d3080	 ldr         r3, [sp, #0x80]
  046bc	e59d200c	 ldr         r2, [sp, #0xC]
  046c0	e59d10a4	 ldr         r1, [sp, #0xA4]
  046c4	e59f0114	 ldr         r0, [pc, #0x114]
  046c8	eb000000	 bl          CeLogMsg
  046cc	e3a03001	 mov         r3, #1
  046d0	e58d3084	 str         r3, [sp, #0x84]
  046d4	ea000028	 b           |$LN46@TxDmaFifoC|
  046d8		 |$LN45@TxDmaFifoC|
  046d8	e59d300c	 ldr         r3, [sp, #0xC]
  046dc	e3530000	 cmp         r3, #0
  046e0	0a000004	 beq         |$LN39@TxDmaFifoC|
  046e4	e59d300c	 ldr         r3, [sp, #0xC]
  046e8	e2833014	 add         r3, r3, #0x14
  046ec	e5933000	 ldr         r3, [r3]
  046f0	e58d3088	 str         r3, [sp, #0x88]
  046f4	ea000001	 b           |$LN40@TxDmaFifoC|
  046f8		 |$LN39@TxDmaFifoC|
  046f8	e3e03000	 mvn         r3, #0
  046fc	e58d3088	 str         r3, [sp, #0x88]
  04700		 |$LN40@TxDmaFifoC|
  04700	e59d300c	 ldr         r3, [sp, #0xC]
  04704	e3530000	 cmp         r3, #0
  04708	0a000004	 beq         |$LN41@TxDmaFifoC|
  0470c	e59d300c	 ldr         r3, [sp, #0xC]
  04710	e2833010	 add         r3, r3, #0x10
  04714	e5933000	 ldr         r3, [r3]
  04718	e58d308c	 str         r3, [sp, #0x8C]
  0471c	ea000001	 b           |$LN42@TxDmaFifoC|
  04720		 |$LN41@TxDmaFifoC|
  04720	e3a03000	 mov         r3, #0
  04724	e58d308c	 str         r3, [sp, #0x8C]
  04728		 |$LN42@TxDmaFifoC|
  04728	e59d300c	 ldr         r3, [sp, #0xC]
  0472c	e3530000	 cmp         r3, #0
  04730	0a000004	 beq         |$LN43@TxDmaFifoC|
  04734	e59d300c	 ldr         r3, [sp, #0xC]
  04738	e283300c	 add         r3, r3, #0xC
  0473c	e5933000	 ldr         r3, [r3]
  04740	e58d3090	 str         r3, [sp, #0x90]
  04744	ea000001	 b           |$LN44@TxDmaFifoC|
  04748		 |$LN43@TxDmaFifoC|
  04748	e3a03000	 mov         r3, #0
  0474c	e58d3090	 str         r3, [sp, #0x90]
  04750		 |$LN44@TxDmaFifoC|
  04750	e59d3088	 ldr         r3, [sp, #0x88]
  04754	e58d3004	 str         r3, [sp, #4]
  04758	e59d308c	 ldr         r3, [sp, #0x8C]
  0475c	e58d3000	 str         r3, [sp]
  04760	e59d3090	 ldr         r3, [sp, #0x90]
  04764	e59d200c	 ldr         r2, [sp, #0xC]
  04768	e59d10a4	 ldr         r1, [sp, #0xA4]
  0476c	e59f006c	 ldr         r0, [pc, #0x6C]
  04770	eb000000	 bl          NKDbgPrintfW
  04774	e3a03000	 mov         r3, #0
  04778	e58d3084	 str         r3, [sp, #0x84]
  0477c		 |$LN46@TxDmaFifoC|
  0477c	e3a03001	 mov         r3, #1
  04780	e58d3094	 str         r3, [sp, #0x94]
  04784	ea000001	 b           |$LN48@TxDmaFifoC|
  04788		 |$LN47@TxDmaFifoC|
  04788	e3a03000	 mov         r3, #0
  0478c	e58d3094	 str         r3, [sp, #0x94]
  04790		 |$LN48@TxDmaFifoC|

; 1946 :         pEP->pTransfer = NULL;

  04790	e59d3014	 ldr         r3, [sp, #0x14]
  04794	e2832020	 add         r2, r3, #0x20
  04798	e3a03000	 mov         r3, #0
  0479c	e5823000	 str         r3, [r2]

; 1947 :         pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE,
; 1948 :                          (DWORD)pTransfer);

  047a0	e59d200c	 ldr         r2, [sp, #0xC]
  047a4	e3a01064	 mov         r1, #0x64
  047a8	e59d301c	 ldr         r3, [sp, #0x1C]
  047ac	e2833010	 add         r3, r3, #0x10
  047b0	e5930000	 ldr         r0, [r3]
  047b4	e59d301c	 ldr         r3, [sp, #0x1C]
  047b8	e2833014	 add         r3, r3, #0x14
  047bc	e5933000	 ldr         r3, [r3]
  047c0	e1a0e00f	 mov         lr, pc
  047c4	e12fff13	 bx          r3
  047c8		 |$LN1@TxDmaFifoC|

; 1949 :     }
; 1950 : 
; 1951 :     return 0;

  047c8	e3a03000	 mov         r3, #0
  047cc	e58d3034	 str         r3, [sp, #0x34]
  047d0		 |$LN7@TxDmaFifoC|

; 1952 : }

  047d0	e59d0034	 ldr         r0, [sp, #0x34]
  047d4	e28dd098	 add         sp, sp, #0x98
  047d8	e89d6000	 ldmia       sp, {sp, lr}
  047dc	e12fff1e	 bx          lr
  047e0		 |$LN52@TxDmaFifoC|
  047e0		 |$LN53@TxDmaFifoC|
  047e0	00000000	 DCD         |??_C@_1JO@JOEPNPIB@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@|
  047e4		 |$LN54@TxDmaFifoC|
  047e4	00000000	 DCD         |dpCurSettings|
  047e8		 |$LN55@TxDmaFifoC|
  047e8	00000000	 DCD         |??_C@_1FO@IHAPOPKB@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf@|
  047ec		 |$LN56@TxDmaFifoC|
  047ec	00000000	 DCD         |??_C@_1IK@GNHCCEJD@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAi?$AAn@|
  047f0		 |$LN57@TxDmaFifoC|
  047f0	00000000	 DCD         |??_C@_1DO@MIHBGHGK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  047f4		 |$LN58@TxDmaFifoC|
  047f4	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  047f8		 |$LN59@TxDmaFifoC|
  047f8	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  047fc		 |$LN60@TxDmaFifoC|
  047fc	00000000	 DCD         |??_C@_1HK@NCACKJFF@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAF?$AAi?$AAf?$AAo?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@|
  04800		 |$M50005|

			 ENDP  ; |TxDmaFifoComplete|

	EXPORT	|??_C@_1KG@DFBNONBL@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@DBKHBDHF@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@FELCEFFK@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@CJGPLGPN@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAp?$AAT@| [ DATA ] ; `string'
	EXPORT	|RxDmaTransferComplete|

  000a0			 AREA	 |.pdata|, PDATA
|$T50080| DCD	|$LN66@RxDmaTrans|
	DCD	0xc001d705
|$T50082| DCD	|$LN56@RxDmaTrans|
	DCD	0x40000d02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@DFBNONBL@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@| DCB "R"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@DBKHBDHF@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| DCB "R"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "l"
	DCB	0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@FELCEFFK@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAr@| DCB "R"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " ", 0x0, "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, ",", 0x0, " "
	DCB	0x0, "a", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "a", 0x0, "l"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "l"
	DCB	0x0, "e", 0x0, "n", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "f", 0x0, "t", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@CJGPLGPN@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAp?$AAT@| DCB "R"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00068			 AREA	 |.xdata|, DATA
|$T50078| DCD	0x1
	DCD	|$LN60@RxDmaTrans|
	DCD	|$LN61@RxDmaTrans|
	DCD	|$LN56@RxDmaTrans|
	DCD	|$LN57@RxDmaTrans|
; Function compile flags: /Odtp

  04800			 AREA	 |.text|, CODE, ARM

  04800	00000000	 DCD         |__C_specific_handler|
  04804	00000000	 DCD         |$T50078|

  04808		 |RxDmaTransferComplete| PROC

; 2123 : {

  04808		 |$LN66@RxDmaTrans|
  04808	e1a0c00d	 mov         r12, sp
  0480c	e92d0007	 stmdb       sp!, {r0 - r2}
  04810	e92d5800	 stmdb       sp!, {r11, r12, lr}
  04814	e28db00c	 add         r11, sp, #0xC
  04818	e24dd0a4	 sub         sp, sp, #0xA4
  0481c		 |$LN64@RxDmaTrans|

; 2124 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pDriverContext;

  0481c	e59b3000	 ldr         r3, [r11]
  04820	e50b308c	 str         r3, [r11, #-0x8C]

; 2125 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  04824	e51b308c	 ldr         r3, [r11, #-0x8C]
  04828	e283301c	 add         r3, r3, #0x1C
  0482c	e5933000	 ldr         r3, [r3]
  04830	e50b30a0	 str         r3, [r11, #-0xA0]

; 2126 :     UsbFnEp         *pEP = &pPdd->ep[endPoint];

  04834	e51b308c	 ldr         r3, [r11, #-0x8C]
  04838	e2831fa1	 add         r1, r3, #0xA1, 30
  0483c	e59b2008	 ldr         r2, [r11, #8]
  04840	e3a0303c	 mov         r3, #0x3C
  04844	e0030392	 mul         r3, r2, r3
  04848	e0813003	 add         r3, r1, r3
  0484c	e50b309c	 str         r3, [r11, #-0x9C]

; 2127 :     STransfer       *pTransfer = pEP->pTransfer;

  04850	e51b309c	 ldr         r3, [r11, #-0x9C]
  04854	e2833020	 add         r3, r3, #0x20
  04858	e5933000	 ldr         r3, [r3]
  0485c	e50b30a4	 str         r3, [r11, #-0xA4]

; 2128 :     UCHAR *pBuffer = NULL;

  04860	e3a03000	 mov         r3, #0
  04864	e50b30a8	 str         r3, [r11, #-0xA8]

; 2129 :     DWORD size;
; 2130 :     BOOL complete = FALSE;

  04868	e3a03000	 mov         r3, #0
  0486c	e50b3084	 str         r3, [r11, #-0x84]

; 2131 :     DWORD   bytesCopied = 0;

  04870	e3a03000	 mov         r3, #0
  04874	e50b3088	 str         r3, [r11, #-0x88]

; 2132 :     UINT16 rxCsrVal = 0;

  04878	e3a03000	 mov         r3, #0
  0487c	e14b39b0	 strh        r3, [r11, #-0x90]

; 2133 : 
; 2134 : #ifdef CPPI_DMA_SUPPORT
; 2135 :     struct cppi_channel *pDmaChan = (struct cppi_channel *)
; 2136 :                                     pPdd->ep[endPoint].pDmaChan;

  04880	e51b308c	 ldr         r3, [r11, #-0x8C]
  04884	e2831fa1	 add         r1, r3, #0xA1, 30
  04888	e59b2008	 ldr         r2, [r11, #8]
  0488c	e3a0303c	 mov         r3, #0x3C
  04890	e0030392	 mul         r3, r2, r3
  04894	e0813003	 add         r3, r1, r3
  04898	e283302c	 add         r3, r3, #0x2C
  0489c	e5933000	 ldr         r3, [r3]
  048a0	e50b3098	 str         r3, [r11, #-0x98]

; 2137 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 2138 : 
; 2139 : 	UNREFERENCED_PARAMETER(chanNumber);
; 2140 : 
; 2141 :     PRINTMSG(ZONE_PDD_RX,
; 2142 :              (L"RxDmaTransferComplete: EP %u, pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 2143 :               endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 2144 :               pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 2145 :               pTransfer != NULL ? pTransfer->dwUsbError : -1));

  048a4	e59f36d0	 ldr         r3, [pc, #0x6D0]
  048a8	e5933440	 ldr         r3, [r3, #0x440]
  048ac	e3130b01	 tst         r3, #1, 22
  048b0	0a000059	 beq         |$LN29@RxDmaTrans|
  048b4	e59f36c0	 ldr         r3, [pc, #0x6C0]
  048b8	e5933440	 ldr         r3, [r3, #0x440]
  048bc	e3130801	 tst         r3, #1, 16
  048c0	0a000029	 beq         |$LN27@RxDmaTrans|
  048c4	e51b30a4	 ldr         r3, [r11, #-0xA4]
  048c8	e3530000	 cmp         r3, #0
  048cc	0a000004	 beq         |$LN15@RxDmaTrans|
  048d0	e51b30a4	 ldr         r3, [r11, #-0xA4]
  048d4	e2833014	 add         r3, r3, #0x14
  048d8	e5933000	 ldr         r3, [r3]
  048dc	e50b305c	 str         r3, [r11, #-0x5C]
  048e0	ea000001	 b           |$LN16@RxDmaTrans|
  048e4		 |$LN15@RxDmaTrans|
  048e4	e3e03000	 mvn         r3, #0
  048e8	e50b305c	 str         r3, [r11, #-0x5C]
  048ec		 |$LN16@RxDmaTrans|
  048ec	e51b30a4	 ldr         r3, [r11, #-0xA4]
  048f0	e3530000	 cmp         r3, #0
  048f4	0a000004	 beq         |$LN17@RxDmaTrans|
  048f8	e51b30a4	 ldr         r3, [r11, #-0xA4]
  048fc	e2833010	 add         r3, r3, #0x10
  04900	e5933000	 ldr         r3, [r3]
  04904	e50b3058	 str         r3, [r11, #-0x58]
  04908	ea000001	 b           |$LN18@RxDmaTrans|
  0490c		 |$LN17@RxDmaTrans|
  0490c	e3a03000	 mov         r3, #0
  04910	e50b3058	 str         r3, [r11, #-0x58]
  04914		 |$LN18@RxDmaTrans|
  04914	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04918	e3530000	 cmp         r3, #0
  0491c	0a000004	 beq         |$LN19@RxDmaTrans|
  04920	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04924	e283300c	 add         r3, r3, #0xC
  04928	e5933000	 ldr         r3, [r3]
  0492c	e50b3054	 str         r3, [r11, #-0x54]
  04930	ea000001	 b           |$LN20@RxDmaTrans|
  04934		 |$LN19@RxDmaTrans|
  04934	e3a03000	 mov         r3, #0
  04938	e50b3054	 str         r3, [r11, #-0x54]
  0493c		 |$LN20@RxDmaTrans|
  0493c	e51b305c	 ldr         r3, [r11, #-0x5C]
  04940	e58d3004	 str         r3, [sp, #4]
  04944	e51b3058	 ldr         r3, [r11, #-0x58]
  04948	e58d3000	 str         r3, [sp]
  0494c	e51b3054	 ldr         r3, [r11, #-0x54]
  04950	e51b20a4	 ldr         r2, [r11, #-0xA4]
  04954	e59b1008	 ldr         r1, [r11, #8]
  04958	e59f0634	 ldr         r0, [pc, #0x634]
  0495c	eb000000	 bl          CeLogMsg
  04960	e3a03001	 mov         r3, #1
  04964	e50b3050	 str         r3, [r11, #-0x50]
  04968	ea000028	 b           |$LN28@RxDmaTrans|
  0496c		 |$LN27@RxDmaTrans|
  0496c	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04970	e3530000	 cmp         r3, #0
  04974	0a000004	 beq         |$LN21@RxDmaTrans|
  04978	e51b30a4	 ldr         r3, [r11, #-0xA4]
  0497c	e2833014	 add         r3, r3, #0x14
  04980	e5933000	 ldr         r3, [r3]
  04984	e50b304c	 str         r3, [r11, #-0x4C]
  04988	ea000001	 b           |$LN22@RxDmaTrans|
  0498c		 |$LN21@RxDmaTrans|
  0498c	e3e03000	 mvn         r3, #0
  04990	e50b304c	 str         r3, [r11, #-0x4C]
  04994		 |$LN22@RxDmaTrans|
  04994	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04998	e3530000	 cmp         r3, #0
  0499c	0a000004	 beq         |$LN23@RxDmaTrans|
  049a0	e51b30a4	 ldr         r3, [r11, #-0xA4]
  049a4	e2833010	 add         r3, r3, #0x10
  049a8	e5933000	 ldr         r3, [r3]
  049ac	e50b3048	 str         r3, [r11, #-0x48]
  049b0	ea000001	 b           |$LN24@RxDmaTrans|
  049b4		 |$LN23@RxDmaTrans|
  049b4	e3a03000	 mov         r3, #0
  049b8	e50b3048	 str         r3, [r11, #-0x48]
  049bc		 |$LN24@RxDmaTrans|
  049bc	e51b30a4	 ldr         r3, [r11, #-0xA4]
  049c0	e3530000	 cmp         r3, #0
  049c4	0a000004	 beq         |$LN25@RxDmaTrans|
  049c8	e51b30a4	 ldr         r3, [r11, #-0xA4]
  049cc	e283300c	 add         r3, r3, #0xC
  049d0	e5933000	 ldr         r3, [r3]
  049d4	e50b3044	 str         r3, [r11, #-0x44]
  049d8	ea000001	 b           |$LN26@RxDmaTrans|
  049dc		 |$LN25@RxDmaTrans|
  049dc	e3a03000	 mov         r3, #0
  049e0	e50b3044	 str         r3, [r11, #-0x44]
  049e4		 |$LN26@RxDmaTrans|
  049e4	e51b304c	 ldr         r3, [r11, #-0x4C]
  049e8	e58d3004	 str         r3, [sp, #4]
  049ec	e51b3048	 ldr         r3, [r11, #-0x48]
  049f0	e58d3000	 str         r3, [sp]
  049f4	e51b3044	 ldr         r3, [r11, #-0x44]
  049f8	e51b20a4	 ldr         r2, [r11, #-0xA4]
  049fc	e59b1008	 ldr         r1, [r11, #8]
  04a00	e59f058c	 ldr         r0, [pc, #0x58C]
  04a04	eb000000	 bl          NKDbgPrintfW
  04a08	e3a03000	 mov         r3, #0
  04a0c	e50b3050	 str         r3, [r11, #-0x50]
  04a10		 |$LN28@RxDmaTrans|
  04a10	e3a03001	 mov         r3, #1
  04a14	e50b3040	 str         r3, [r11, #-0x40]
  04a18	ea000001	 b           |$LN30@RxDmaTrans|
  04a1c		 |$LN29@RxDmaTrans|
  04a1c	e3a03000	 mov         r3, #0
  04a20	e50b3040	 str         r3, [r11, #-0x40]
  04a24		 |$LN30@RxDmaTrans|

; 2146 : 
; 2147 :     /* Sanity Check */
; 2148 :     if (pTransfer == NULL)

  04a24	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04a28	e3530000	 cmp         r3, #0
  04a2c	1a00000f	 bne         |$LN12@RxDmaTrans|

; 2149 :     {
; 2150 :         /* Not an error if transfer was aborted */
; 2151 :         if (pEP->epStage != MGC_END0_START)

  04a30	e51b309c	 ldr         r3, [r11, #-0x9C]
  04a34	e283301c	 add         r3, r3, #0x1C
  04a38	e5933000	 ldr         r3, [r3]
  04a3c	e3530001	 cmp         r3, #1
  04a40	0a000007	 beq         |$LN11@RxDmaTrans|

; 2152 :             ERRORMSG(TRUE,
; 2153 :                      (L"EP %u Invalid DMA Completion\r\n", endPoint));

  04a44	e3a02b02	 mov         r2, #2, 22
  04a48	e3822069	 orr         r2, r2, #0x69
  04a4c	e59f153c	 ldr         r1, [pc, #0x53C]
  04a50	e59f0534	 ldr         r0, [pc, #0x534]
  04a54	eb000000	 bl          NKDbgPrintfW
  04a58	e59b1008	 ldr         r1, [r11, #8]
  04a5c	e59f0524	 ldr         r0, [pc, #0x524]
  04a60	eb000000	 bl          NKDbgPrintfW
  04a64		 |$LN11@RxDmaTrans|

; 2154 :         return (1);

  04a64	e3a03001	 mov         r3, #1
  04a68	e50b3070	 str         r3, [r11, #-0x70]
  04a6c	ea000138	 b           |$LN13@RxDmaTrans|
  04a70		 |$LN12@RxDmaTrans|

; 2155 :     }
; 2156 :     /* Enter CriticalSection */
; 2157 :     LOCK_ENDPOINT(pPdd);

  04a70	e51b308c	 ldr         r3, [r11, #-0x8C]
  04a74	e2830e27	 add         r0, r3, #0x27, 28
  04a78	eb000000	 bl          EnterCriticalSection

; 2158 : 
; 2159 :     if (pTransfer->dwBufferPhysicalAddress == 0)

  04a7c	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04a80	e2833008	 add         r3, r3, #8
  04a84	e5933000	 ldr         r3, [r3]
  04a88	e3530000	 cmp         r3, #0
  04a8c	1a000085	 bne         |$LN10@RxDmaTrans|

; 2160 :     {
; 2161 :         /* Copy Data back from DMA Buffer to Driver Buffer */
; 2162 :         pBuffer = (UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  04a90	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04a94	e2832004	 add         r2, r3, #4
  04a98	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04a9c	e2833010	 add         r3, r3, #0x10
  04aa0	e5922000	 ldr         r2, [r2]
  04aa4	e5933000	 ldr         r3, [r3]
  04aa8	e0823003	 add         r3, r2, r3
  04aac	e50b30a8	 str         r3, [r11, #-0xA8]

; 2163 : 
; 2164 :         /* Get size and buffer position */
; 2165 :         size = pTransfer->cbBuffer - pTransfer->cbTransferred;

  04ab0	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04ab4	e283200c	 add         r2, r3, #0xC
  04ab8	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04abc	e2833010	 add         r3, r3, #0x10
  04ac0	e5922000	 ldr         r2, [r2]
  04ac4	e5933000	 ldr         r3, [r3]
  04ac8	e0423003	 sub         r3, r2, r3
  04acc	e50b3094	 str         r3, [r11, #-0x94]

; 2166 : 
; 2167 : #ifdef CPPI_DMA_SUPPORT
; 2168 :         bytesCopied = pDmaChan->actualLen;

  04ad0	e51b3098	 ldr         r3, [r11, #-0x98]
  04ad4	e2833030	 add         r3, r3, #0x30
  04ad8	e5933000	 ldr         r3, [r3]
  04adc	e50b3088	 str         r3, [r11, #-0x88]

; 2169 : 
; 2170 :         if (bytesCopied > size)

  04ae0	e51b2088	 ldr         r2, [r11, #-0x88]
  04ae4	e51b3094	 ldr         r3, [r11, #-0x94]
  04ae8	e1520003	 cmp         r2, r3
  04aec	9a000021	 bls         |$LN9@RxDmaTrans|

; 2171 :         {
; 2172 :             PRINTMSG(ZONE_ERROR,
; 2173 :                      (L"RxDmaTransferComplete: EP %u, Error, actual DMA len 0x%x, buffer left 0x%X\r\n",
; 2174 :                       endPoint, pDmaChan->actualLen, pBuffer));

  04af0	e59f3484	 ldr         r3, [pc, #0x484]
  04af4	e5933440	 ldr         r3, [r3, #0x440]
  04af8	e3130001	 tst         r3, #1
  04afc	0a000019	 beq         |$LN33@RxDmaTrans|
  04b00	e59f3474	 ldr         r3, [pc, #0x474]
  04b04	e5933440	 ldr         r3, [r3, #0x440]
  04b08	e3130801	 tst         r3, #1, 16
  04b0c	0a000009	 beq         |$LN31@RxDmaTrans|
  04b10	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04b14	e51b2098	 ldr         r2, [r11, #-0x98]
  04b18	e2822030	 add         r2, r2, #0x30
  04b1c	e5922000	 ldr         r2, [r2]
  04b20	e59b1008	 ldr         r1, [r11, #8]
  04b24	e59f0458	 ldr         r0, [pc, #0x458]
  04b28	eb000000	 bl          CeLogMsg
  04b2c	e3a03001	 mov         r3, #1
  04b30	e50b303c	 str         r3, [r11, #-0x3C]
  04b34	ea000008	 b           |$LN32@RxDmaTrans|
  04b38		 |$LN31@RxDmaTrans|
  04b38	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04b3c	e51b2098	 ldr         r2, [r11, #-0x98]
  04b40	e2822030	 add         r2, r2, #0x30
  04b44	e5922000	 ldr         r2, [r2]
  04b48	e59b1008	 ldr         r1, [r11, #8]
  04b4c	e59f0430	 ldr         r0, [pc, #0x430]
  04b50	eb000000	 bl          NKDbgPrintfW
  04b54	e3a03000	 mov         r3, #0
  04b58	e50b303c	 str         r3, [r11, #-0x3C]
  04b5c		 |$LN32@RxDmaTrans|
  04b5c	e3a03001	 mov         r3, #1
  04b60	e50b3038	 str         r3, [r11, #-0x38]
  04b64	ea000001	 b           |$LN34@RxDmaTrans|
  04b68		 |$LN33@RxDmaTrans|
  04b68	e3a03000	 mov         r3, #0
  04b6c	e50b3038	 str         r3, [r11, #-0x38]
  04b70		 |$LN34@RxDmaTrans|

; 2175 :             bytesCopied = size;

  04b70	e51b3094	 ldr         r3, [r11, #-0x94]
  04b74	e50b3088	 str         r3, [r11, #-0x88]
  04b78		 |$LN9@RxDmaTrans|
  04b78		 |$LN60@RxDmaTrans|

; 2176 :         }
; 2177 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 2178 : 
; 2179 :         __try
; 2180 :         {
; 2181 :             /* Copy into MDD Buffer from DMA Buffer */
; 2182 :             if (bytesCopied > 0)

  04b78	e51b3088	 ldr         r3, [r11, #-0x88]
  04b7c	e3530000	 cmp         r3, #0
  04b80	9a000005	 bls         |$LN7@RxDmaTrans|

; 2183 :                 memcpy(pBuffer, pEP->pDmaBuffer, bytesCopied);

  04b84	e51b2088	 ldr         r2, [r11, #-0x88]
  04b88	e51b309c	 ldr         r3, [r11, #-0x9C]
  04b8c	e2833030	 add         r3, r3, #0x30
  04b90	e5931000	 ldr         r1, [r3]
  04b94	e51b00a8	 ldr         r0, [r11, #-0xA8]
  04b98	eb000000	 bl          memcpy
  04b9c		 |$LN7@RxDmaTrans|
  04b9c		 |$LN61@RxDmaTrans|

; 2184 :         }

  04b9c	ea00001c	 b           |$LN62@RxDmaTrans|
  04ba0		 |$LN57@RxDmaTrans|

; 2186 :         {
; 2187 :             pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  04ba0	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04ba4	e2832014	 add         r2, r3, #0x14
  04ba8	e3a03f41	 mov         r3, #0x41, 30
  04bac	e5823000	 str         r3, [r2]

; 2188 :             complete = TRUE;

  04bb0	e3a03001	 mov         r3, #1
  04bb4	e50b3084	 str         r3, [r11, #-0x84]

; 2189 :             PRINTMSG(ZONE_ERROR, (L"RxDmaTransferComplete: Client buffer exception!\r\n"));

  04bb8	e59f33bc	 ldr         r3, [pc, #0x3BC]
  04bbc	e5933440	 ldr         r3, [r3, #0x440]
  04bc0	e3130001	 tst         r3, #1
  04bc4	0a00000f	 beq         |$LN37@RxDmaTrans|
  04bc8	e59f33ac	 ldr         r3, [pc, #0x3AC]
  04bcc	e5933440	 ldr         r3, [r3, #0x440]
  04bd0	e3130801	 tst         r3, #1, 16
  04bd4	0a000004	 beq         |$LN35@RxDmaTrans|
  04bd8	e59f03a0	 ldr         r0, [pc, #0x3A0]
  04bdc	eb000000	 bl          CeLogMsg
  04be0	e3a03001	 mov         r3, #1
  04be4	e50b3034	 str         r3, [r11, #-0x34]
  04be8	ea000003	 b           |$LN36@RxDmaTrans|
  04bec		 |$LN35@RxDmaTrans|
  04bec	e59f038c	 ldr         r0, [pc, #0x38C]
  04bf0	eb000000	 bl          NKDbgPrintfW
  04bf4	e3a03000	 mov         r3, #0
  04bf8	e50b3034	 str         r3, [r11, #-0x34]
  04bfc		 |$LN36@RxDmaTrans|
  04bfc	e3a03001	 mov         r3, #1
  04c00	e50b3030	 str         r3, [r11, #-0x30]
  04c04	ea000001	 b           |$LN38@RxDmaTrans|
  04c08		 |$LN37@RxDmaTrans|
  04c08	e3a03000	 mov         r3, #0
  04c0c	e50b3030	 str         r3, [r11, #-0x30]
  04c10		 |$LN38@RxDmaTrans|
  04c10	eaffffff	 b           |$LN62@RxDmaTrans|
  04c14		 |$LN62@RxDmaTrans|

; 2190 :         }
; 2191 : 
; 2192 :         pTransfer->cbTransferred += bytesCopied;

  04c14	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04c18	e2833010	 add         r3, r3, #0x10
  04c1c	e5932000	 ldr         r2, [r3]
  04c20	e51b3088	 ldr         r3, [r11, #-0x88]
  04c24	e0822003	 add         r2, r2, r3
  04c28	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04c2c	e2833010	 add         r3, r3, #0x10
  04c30	e5832000	 str         r2, [r3]

; 2193 : 
; 2194 :         /* Now Perform a check if the complete chunk is over or not */
; 2195 : 
; 2196 :         /* When we get less than buffer size or transaction buffer
; 2197 :          * is full transfer finished.
; 2198 :          */
; 2199 :         if ((bytesCopied < pPdd->dmaBufferSize) ||
; 2200 :             (pTransfer->cbTransferred >= pTransfer->cbBuffer))

  04c34	e51b308c	 ldr         r3, [r11, #-0x8C]
  04c38	e2833008	 add         r3, r3, #8
  04c3c	e51b2088	 ldr         r2, [r11, #-0x88]
  04c40	e5933000	 ldr         r3, [r3]
  04c44	e1520003	 cmp         r2, r3
  04c48	3a000007	 bcc         |$LN5@RxDmaTrans|
  04c4c	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04c50	e2832010	 add         r2, r3, #0x10
  04c54	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04c58	e283300c	 add         r3, r3, #0xC
  04c5c	e5922000	 ldr         r2, [r2]
  04c60	e5933000	 ldr         r3, [r3]
  04c64	e1520003	 cmp         r2, r3
  04c68	3a00000a	 bcc         |$LN6@RxDmaTrans|
  04c6c		 |$LN5@RxDmaTrans|

; 2201 :         {
; 2202 :             /* Now that the Transfer is complete, return back to IDLE State */
; 2203 :             pTransfer->dwUsbError = UFN_NO_ERROR;

  04c6c	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04c70	e2832014	 add         r2, r3, #0x14
  04c74	e3a03000	 mov         r3, #0
  04c78	e5823000	 str         r3, [r2]

; 2204 :             pEP->epStage   = MGC_END0_START;

  04c7c	e51b309c	 ldr         r3, [r11, #-0x9C]
  04c80	e283201c	 add         r2, r3, #0x1C
  04c84	e3a03001	 mov         r3, #1
  04c88	e5823000	 str         r3, [r2]

; 2205 :             complete = TRUE;

  04c8c	e3a03001	 mov         r3, #1
  04c90	e50b3084	 str         r3, [r11, #-0x84]

; 2206 :         }
; 2207 :         else

  04c94	ea000002	 b           |$LN4@RxDmaTrans|
  04c98		 |$LN6@RxDmaTrans|

; 2208 :         {
; 2209 :             /* Start another transfer */
; 2210 :             StartRxDmaTransfer(pPdd, endPoint);

  04c98	e59b1008	 ldr         r1, [r11, #8]
  04c9c	e51b008c	 ldr         r0, [r11, #-0x8C]
  04ca0	eb000000	 bl          StartRxDmaTransfer
  04ca4		 |$LN4@RxDmaTrans|

; 2211 :         }
; 2212 :     }
; 2213 :     else

  04ca4	ea000013	 b           |$LN3@RxDmaTrans|
  04ca8		 |$LN10@RxDmaTrans|

; 2214 :     {
; 2215 : #ifdef CPPI_DMA_SUPPORT
; 2216 :         /* Data copied direct to client buffer */
; 2217 :         pTransfer->cbTransferred += pDmaChan->actualLen;

  04ca8	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04cac	e2832010	 add         r2, r3, #0x10
  04cb0	e51b3098	 ldr         r3, [r11, #-0x98]
  04cb4	e2833030	 add         r3, r3, #0x30
  04cb8	e5922000	 ldr         r2, [r2]
  04cbc	e5933000	 ldr         r3, [r3]
  04cc0	e0822003	 add         r2, r2, r3
  04cc4	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04cc8	e2833010	 add         r3, r3, #0x10
  04ccc	e5832000	 str         r2, [r3]

; 2218 :         pTransfer->dwUsbError = UFN_NO_ERROR;

  04cd0	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04cd4	e2832014	 add         r2, r3, #0x14
  04cd8	e3a03000	 mov         r3, #0
  04cdc	e5823000	 str         r3, [r2]

; 2219 :         pEP->epStage = MGC_END0_START;

  04ce0	e51b309c	 ldr         r3, [r11, #-0x9C]
  04ce4	e283201c	 add         r2, r3, #0x1C
  04ce8	e3a03001	 mov         r3, #1
  04cec	e5823000	 str         r3, [r2]

; 2220 :         complete = TRUE;

  04cf0	e3a03001	 mov         r3, #1
  04cf4	e50b3084	 str         r3, [r11, #-0x84]
  04cf8		 |$LN3@RxDmaTrans|

; 2221 : #endif
; 2222 :     }
; 2223 : 
; 2224 :     if (complete == TRUE)

  04cf8	e51b3084	 ldr         r3, [r11, #-0x84]
  04cfc	e3530001	 cmp         r3, #1
  04d00	1a00001d	 bne         |$LN2@RxDmaTrans|

; 2225 :     {
; 2226 :         /* Disable DMA */
; 2227 :         rxCsrVal = pUsbdRegs->EPCSR[ endPoint ].PERI_RXCSR;

  04d04	e51b30a0	 ldr         r3, [r11, #-0xA0]
  04d08	e2831c05	 add         r1, r3, #5, 24
  04d0c	e59b2008	 ldr         r2, [r11, #8]
  04d10	e3a03010	 mov         r3, #0x10
  04d14	e0030392	 mul         r3, r2, r3
  04d18	e0813003	 add         r3, r1, r3
  04d1c	e2833006	 add         r3, r3, #6
  04d20	e1d330b0	 ldrh        r3, [r3]
  04d24	e14b39b0	 strh        r3, [r11, #-0x90]

; 2228 :         rxCsrVal &= ~(MGC_M_RXCSR_DMAENAB);

  04d28	e15b39b0	 ldrh        r3, [r11, #-0x90]
  04d2c	e1a02003	 mov         r2, r3
  04d30	e3e03a02	 mvn         r3, #2, 20
  04d34	e0023003	 and         r3, r2, r3
  04d38	e1a03803	 mov         r3, r3, lsl #16
  04d3c	e1a03823	 mov         r3, r3, lsr #16
  04d40	e14b39b0	 strh        r3, [r11, #-0x90]

; 2229 :         rxCsrVal |= MGC_M_RXCSR_P_WZC_BITS;

  04d44	e15b39b0	 ldrh        r3, [r11, #-0x90]
  04d48	e3833045	 orr         r3, r3, #0x45
  04d4c	e1a03803	 mov         r3, r3, lsl #16
  04d50	e1a03823	 mov         r3, r3, lsr #16
  04d54	e14b39b0	 strh        r3, [r11, #-0x90]

; 2230 :         pUsbdRegs->EPCSR[ endPoint ].PERI_RXCSR = rxCsrVal;

  04d58	e51b30a0	 ldr         r3, [r11, #-0xA0]
  04d5c	e2831c05	 add         r1, r3, #5, 24
  04d60	e59b2008	 ldr         r2, [r11, #8]
  04d64	e3a03010	 mov         r3, #0x10
  04d68	e0030392	 mul         r3, r2, r3
  04d6c	e0813003	 add         r3, r1, r3
  04d70	e2832006	 add         r2, r3, #6
  04d74	e15b39b0	 ldrh        r3, [r11, #-0x90]
  04d78	e1c230b0	 strh        r3, [r2]
  04d7c		 |$LN2@RxDmaTrans|

; 2231 :     }
; 2232 : 
; 2233 :     /* Leave CriticalSection */
; 2234 :     UNLOCK_ENDPOINT(pPdd);

  04d7c	e51b308c	 ldr         r3, [r11, #-0x8C]
  04d80	e2830e27	 add         r0, r3, #0x27, 28
  04d84	eb000000	 bl          LeaveCriticalSection

; 2235 : 
; 2236 :     if (complete == TRUE)

  04d88	e51b3084	 ldr         r3, [r11, #-0x84]
  04d8c	e3530001	 cmp         r3, #1
  04d90	1a00006d	 bne         |$LN1@RxDmaTrans|

; 2237 :     {
; 2238 :         /* If transaction is complete we should tell MDD */
; 2239 :         PRINTMSG(ZONE_PDD_RX,
; 2240 :             (L"RxDmaTransferComplete: "
; 2241 :              L"EP %d, pTransfer 0x%08x (%d, %d, 0x%0x) - notify complete\r\n",
; 2242 :              endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 2243 :              pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 2244 :              pTransfer != NULL ? pTransfer->dwUsbError : -1));

  04d94	e59f31e0	 ldr         r3, [pc, #0x1E0]
  04d98	e5933440	 ldr         r3, [r3, #0x440]
  04d9c	e3130b01	 tst         r3, #1, 22
  04da0	0a000059	 beq         |$LN53@RxDmaTrans|
  04da4	e59f31d0	 ldr         r3, [pc, #0x1D0]
  04da8	e5933440	 ldr         r3, [r3, #0x440]
  04dac	e3130801	 tst         r3, #1, 16
  04db0	0a000029	 beq         |$LN51@RxDmaTrans|
  04db4	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04db8	e3530000	 cmp         r3, #0
  04dbc	0a000004	 beq         |$LN39@RxDmaTrans|
  04dc0	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04dc4	e2833014	 add         r3, r3, #0x14
  04dc8	e5933000	 ldr         r3, [r3]
  04dcc	e50b302c	 str         r3, [r11, #-0x2C]
  04dd0	ea000001	 b           |$LN40@RxDmaTrans|
  04dd4		 |$LN39@RxDmaTrans|
  04dd4	e3e03000	 mvn         r3, #0
  04dd8	e50b302c	 str         r3, [r11, #-0x2C]
  04ddc		 |$LN40@RxDmaTrans|
  04ddc	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04de0	e3530000	 cmp         r3, #0
  04de4	0a000004	 beq         |$LN41@RxDmaTrans|
  04de8	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04dec	e2833010	 add         r3, r3, #0x10
  04df0	e5933000	 ldr         r3, [r3]
  04df4	e50b3028	 str         r3, [r11, #-0x28]
  04df8	ea000001	 b           |$LN42@RxDmaTrans|
  04dfc		 |$LN41@RxDmaTrans|
  04dfc	e3a03000	 mov         r3, #0
  04e00	e50b3028	 str         r3, [r11, #-0x28]
  04e04		 |$LN42@RxDmaTrans|
  04e04	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04e08	e3530000	 cmp         r3, #0
  04e0c	0a000004	 beq         |$LN43@RxDmaTrans|
  04e10	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04e14	e283300c	 add         r3, r3, #0xC
  04e18	e5933000	 ldr         r3, [r3]
  04e1c	e50b3024	 str         r3, [r11, #-0x24]
  04e20	ea000001	 b           |$LN44@RxDmaTrans|
  04e24		 |$LN43@RxDmaTrans|
  04e24	e3a03000	 mov         r3, #0
  04e28	e50b3024	 str         r3, [r11, #-0x24]
  04e2c		 |$LN44@RxDmaTrans|
  04e2c	e51b302c	 ldr         r3, [r11, #-0x2C]
  04e30	e58d3004	 str         r3, [sp, #4]
  04e34	e51b3028	 ldr         r3, [r11, #-0x28]
  04e38	e58d3000	 str         r3, [sp]
  04e3c	e51b3024	 ldr         r3, [r11, #-0x24]
  04e40	e51b20a4	 ldr         r2, [r11, #-0xA4]
  04e44	e59b1008	 ldr         r1, [r11, #8]
  04e48	e59f0128	 ldr         r0, [pc, #0x128]
  04e4c	eb000000	 bl          CeLogMsg
  04e50	e3a03001	 mov         r3, #1
  04e54	e50b3020	 str         r3, [r11, #-0x20]
  04e58	ea000028	 b           |$LN52@RxDmaTrans|
  04e5c		 |$LN51@RxDmaTrans|
  04e5c	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04e60	e3530000	 cmp         r3, #0
  04e64	0a000004	 beq         |$LN45@RxDmaTrans|
  04e68	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04e6c	e2833014	 add         r3, r3, #0x14
  04e70	e5933000	 ldr         r3, [r3]
  04e74	e50b301c	 str         r3, [r11, #-0x1C]
  04e78	ea000001	 b           |$LN46@RxDmaTrans|
  04e7c		 |$LN45@RxDmaTrans|
  04e7c	e3e03000	 mvn         r3, #0
  04e80	e50b301c	 str         r3, [r11, #-0x1C]
  04e84		 |$LN46@RxDmaTrans|
  04e84	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04e88	e3530000	 cmp         r3, #0
  04e8c	0a000004	 beq         |$LN47@RxDmaTrans|
  04e90	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04e94	e2833010	 add         r3, r3, #0x10
  04e98	e5933000	 ldr         r3, [r3]
  04e9c	e50b3018	 str         r3, [r11, #-0x18]
  04ea0	ea000001	 b           |$LN48@RxDmaTrans|
  04ea4		 |$LN47@RxDmaTrans|
  04ea4	e3a03000	 mov         r3, #0
  04ea8	e50b3018	 str         r3, [r11, #-0x18]
  04eac		 |$LN48@RxDmaTrans|
  04eac	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04eb0	e3530000	 cmp         r3, #0
  04eb4	0a000004	 beq         |$LN49@RxDmaTrans|
  04eb8	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04ebc	e283300c	 add         r3, r3, #0xC
  04ec0	e5933000	 ldr         r3, [r3]
  04ec4	e50b3014	 str         r3, [r11, #-0x14]
  04ec8	ea000001	 b           |$LN50@RxDmaTrans|
  04ecc		 |$LN49@RxDmaTrans|
  04ecc	e3a03000	 mov         r3, #0
  04ed0	e50b3014	 str         r3, [r11, #-0x14]
  04ed4		 |$LN50@RxDmaTrans|
  04ed4	e51b301c	 ldr         r3, [r11, #-0x1C]
  04ed8	e58d3004	 str         r3, [sp, #4]
  04edc	e51b3018	 ldr         r3, [r11, #-0x18]
  04ee0	e58d3000	 str         r3, [sp]
  04ee4	e51b3014	 ldr         r3, [r11, #-0x14]
  04ee8	e51b20a4	 ldr         r2, [r11, #-0xA4]
  04eec	e59b1008	 ldr         r1, [r11, #8]
  04ef0	e59f0080	 ldr         r0, [pc, #0x80]
  04ef4	eb000000	 bl          NKDbgPrintfW
  04ef8	e3a03000	 mov         r3, #0
  04efc	e50b3020	 str         r3, [r11, #-0x20]
  04f00		 |$LN52@RxDmaTrans|
  04f00	e3a03001	 mov         r3, #1
  04f04	e50b3010	 str         r3, [r11, #-0x10]
  04f08	ea000001	 b           |$LN54@RxDmaTrans|
  04f0c		 |$LN53@RxDmaTrans|
  04f0c	e3a03000	 mov         r3, #0
  04f10	e50b3010	 str         r3, [r11, #-0x10]
  04f14		 |$LN54@RxDmaTrans|

; 2245 :         pEP->pTransfer = NULL;

  04f14	e51b309c	 ldr         r3, [r11, #-0x9C]
  04f18	e2832020	 add         r2, r3, #0x20
  04f1c	e3a03000	 mov         r3, #0
  04f20	e5823000	 str         r3, [r2]

; 2246 :         pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE,
; 2247 :                         (DWORD)pTransfer);

  04f24	e51b20a4	 ldr         r2, [r11, #-0xA4]
  04f28	e3a01064	 mov         r1, #0x64
  04f2c	e51b308c	 ldr         r3, [r11, #-0x8C]
  04f30	e2833010	 add         r3, r3, #0x10
  04f34	e5930000	 ldr         r0, [r3]
  04f38	e51b308c	 ldr         r3, [r11, #-0x8C]
  04f3c	e2833014	 add         r3, r3, #0x14
  04f40	e5933000	 ldr         r3, [r3]
  04f44	e1a0e00f	 mov         lr, pc
  04f48	e12fff13	 bx          r3
  04f4c		 |$LN1@RxDmaTrans|

; 2248 :     }
; 2249 : 
; 2250 :     return (0);

  04f4c	e3a03000	 mov         r3, #0
  04f50	e50b3070	 str         r3, [r11, #-0x70]
  04f54		 |$LN13@RxDmaTrans|
  04f54		 |$LN55@RxDmaTrans|

; 2251 : }

  04f54	e51b0070	 ldr         r0, [r11, #-0x70]
  04f58	e24bd00c	 sub         sp, r11, #0xC
  04f5c	e89d6800	 ldmia       sp, {r11, sp, lr}
  04f60	e12fff1e	 bx          lr

			 ENDP  ; |RxDmaTransferComplete|

  04f64		 |$LN56@RxDmaTrans|
  04f64		 |$LN65@RxDmaTrans|

; 2185 :         __except(EXCEPTION_EXECUTE_HANDLER)

  04f64	e52de004	 str         lr, [sp, #-4]!
  04f68	e24dd008	 sub         sp, sp, #8
  04f6c		 |$LN59@RxDmaTrans|
  04f6c		 |$LN68@RxDmaTrans|
  04f6c	e3a00001	 mov         r0, #1
  04f70		 |$LN58@RxDmaTrans|
  04f70	e28dd008	 add         sp, sp, #8
  04f74	e49df004	 ldr         pc, [sp], #4
  04f78		 |$LN70@RxDmaTrans|
  04f78		 |$LN71@RxDmaTrans|
  04f78	00000000	 DCD         |??_C@_1KG@DFBNONBL@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT@|
  04f7c		 |$LN72@RxDmaTrans|
  04f7c	00000000	 DCD         |dpCurSettings|
  04f80		 |$LN73@RxDmaTrans|
  04f80	00000000	 DCD         |??_C@_1GE@DBKHBDHF@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@|
  04f84		 |$LN74@RxDmaTrans|
  04f84	00000000	 DCD         |??_C@_1JK@FELCEFFK@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAr@|
  04f88		 |$LN75@RxDmaTrans|
  04f88	00000000	 DCD         |??_C@_1DO@MIHBGHGK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  04f8c		 |$LN76@RxDmaTrans|
  04f8c	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  04f90		 |$LN77@RxDmaTrans|
  04f90	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  04f94		 |$LN78@RxDmaTrans|
  04f94	00000000	 DCD         |??_C@_1IC@CJGPLGPN@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAp?$AAT@|
  04f98		 |$LN69@RxDmaTrans|
  04f98		 |$LN67@RxDmaTrans|
	EXPORT	|??_C@_1HC@GPDKKFEL@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JI@FDFIDMMO@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LC@FLMHBHEN@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAI?$AAS?$AAO?$AA?5?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@PAFNAGJB@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'

  000b0			 AREA	 |.pdata|, PDATA
|$T50130| DCD	|$LN39@StartRxDma|
	DCD	0x40016e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@GPDKKFEL@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAt@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "i"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@FDFIDMMO@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "l", 0x0, "a", 0x0, "r"
	DCB	0x0, "g", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, "B", 0x0, "u", 0x0, "f", 0x0, "S", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LC@FLMHBHEN@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAI?$AAS?$AAO?$AA?5?$AAt@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "I", 0x0, "S", 0x0, "O", 0x0, " "
	DCB	0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, " ", 0x0, "o", 0x0, "n"
	DCB	0x0, "l", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "a", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "e"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@PAFNAGJB@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  04f98			 AREA	 |.text|, CODE, ARM

  04f98		 |StartRxDmaTransfer| PROC

; 1974 : {

  04f98		 |$LN39@StartRxDma|
  04f98	e1a0c00d	 mov         r12, sp
  04f9c	e92d0003	 stmdb       sp!, {r0, r1}
  04fa0	e92d5010	 stmdb       sp!, {r4, r12, lr}
  04fa4	e24dd06c	 sub         sp, sp, #0x6C
  04fa8		 |$M50127|

; 1975 :     CSL_UsbRegs    *pUsbdRegs = pPdd->pUsbdRegs;

  04fa8	e59d3078	 ldr         r3, [sp, #0x78]
  04fac	e283301c	 add         r3, r3, #0x1C
  04fb0	e5933000	 ldr         r3, [r3]
  04fb4	e58d3010	 str         r3, [sp, #0x10]

; 1976 :     UsbFnEp        *pEP = &pPdd->ep[endPoint];

  04fb8	e59d3078	 ldr         r3, [sp, #0x78]
  04fbc	e2831fa1	 add         r1, r3, #0xA1, 30
  04fc0	e59d207c	 ldr         r2, [sp, #0x7C]
  04fc4	e3a0303c	 mov         r3, #0x3C
  04fc8	e0030392	 mul         r3, r2, r3
  04fcc	e0813003	 add         r3, r1, r3
  04fd0	e58d3014	 str         r3, [sp, #0x14]

; 1977 :     STransfer      *pTransfer = pEP->pTransfer;

  04fd4	e59d3014	 ldr         r3, [sp, #0x14]
  04fd8	e2833020	 add         r3, r3, #0x20
  04fdc	e5933000	 ldr         r3, [r3]
  04fe0	e58d300c	 str         r3, [sp, #0xC]

; 1978 : 
; 1979 :     DWORD size;
; 1980 :     USHORT cfn;
; 1981 :     UINT16 rxCsrVal;
; 1982 : 
; 1983 : #ifdef CPPI_DMA_SUPPORT
; 1984 :     UINT32  dmaAddress;
; 1985 : 
; 1986 :     struct dma_controller * pDmaCntrl =
; 1987 :                 (struct dma_controller *)pPdd->pDmaCntrl;

  04fe4	e59d3078	 ldr         r3, [sp, #0x78]
  04fe8	e2833c06	 add         r3, r3, #6, 24
  04fec	e283305c	 add         r3, r3, #0x5C
  04ff0	e5933000	 ldr         r3, [r3]
  04ff4	e58d3020	 str         r3, [sp, #0x20]

; 1988 : 
; 1989 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 1990 : 
; 1991 :     PRINTMSG(ZONE_PDD_RX,
; 1992 :              (L"StartRxDmaTransfer: EP %d, pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 1993 :               endPoint, pTransfer,
; 1994 :               pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1995 :               pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1996 :               pTransfer != NULL ? pTransfer->dwUsbError : -1));

  04ff8	e59f3540	 ldr         r3, [pc, #0x540]
  04ffc	e5933440	 ldr         r3, [r3, #0x440]
  05000	e3130b01	 tst         r3, #1, 22
  05004	0a000059	 beq         |$LN23@StartRxDma|
  05008	e59f3530	 ldr         r3, [pc, #0x530]
  0500c	e5933440	 ldr         r3, [r3, #0x440]
  05010	e3130801	 tst         r3, #1, 16
  05014	0a000029	 beq         |$LN21@StartRxDma|
  05018	e59d300c	 ldr         r3, [sp, #0xC]
  0501c	e3530000	 cmp         r3, #0
  05020	0a000004	 beq         |$LN9@StartRxDma|
  05024	e59d300c	 ldr         r3, [sp, #0xC]
  05028	e2833014	 add         r3, r3, #0x14
  0502c	e5933000	 ldr         r3, [r3]
  05030	e58d3034	 str         r3, [sp, #0x34]
  05034	ea000001	 b           |$LN10@StartRxDma|
  05038		 |$LN9@StartRxDma|
  05038	e3e03000	 mvn         r3, #0
  0503c	e58d3034	 str         r3, [sp, #0x34]
  05040		 |$LN10@StartRxDma|
  05040	e59d300c	 ldr         r3, [sp, #0xC]
  05044	e3530000	 cmp         r3, #0
  05048	0a000004	 beq         |$LN11@StartRxDma|
  0504c	e59d300c	 ldr         r3, [sp, #0xC]
  05050	e2833010	 add         r3, r3, #0x10
  05054	e5933000	 ldr         r3, [r3]
  05058	e58d3038	 str         r3, [sp, #0x38]
  0505c	ea000001	 b           |$LN12@StartRxDma|
  05060		 |$LN11@StartRxDma|
  05060	e3a03000	 mov         r3, #0
  05064	e58d3038	 str         r3, [sp, #0x38]
  05068		 |$LN12@StartRxDma|
  05068	e59d300c	 ldr         r3, [sp, #0xC]
  0506c	e3530000	 cmp         r3, #0
  05070	0a000004	 beq         |$LN13@StartRxDma|
  05074	e59d300c	 ldr         r3, [sp, #0xC]
  05078	e283300c	 add         r3, r3, #0xC
  0507c	e5933000	 ldr         r3, [r3]
  05080	e58d303c	 str         r3, [sp, #0x3C]
  05084	ea000001	 b           |$LN14@StartRxDma|
  05088		 |$LN13@StartRxDma|
  05088	e3a03000	 mov         r3, #0
  0508c	e58d303c	 str         r3, [sp, #0x3C]
  05090		 |$LN14@StartRxDma|
  05090	e59d3034	 ldr         r3, [sp, #0x34]
  05094	e58d3004	 str         r3, [sp, #4]
  05098	e59d3038	 ldr         r3, [sp, #0x38]
  0509c	e58d3000	 str         r3, [sp]
  050a0	e59d303c	 ldr         r3, [sp, #0x3C]
  050a4	e59d200c	 ldr         r2, [sp, #0xC]
  050a8	e59d107c	 ldr         r1, [sp, #0x7C]
  050ac	e59f0498	 ldr         r0, [pc, #0x498]
  050b0	eb000000	 bl          CeLogMsg
  050b4	e3a03001	 mov         r3, #1
  050b8	e58d3040	 str         r3, [sp, #0x40]
  050bc	ea000028	 b           |$LN22@StartRxDma|
  050c0		 |$LN21@StartRxDma|
  050c0	e59d300c	 ldr         r3, [sp, #0xC]
  050c4	e3530000	 cmp         r3, #0
  050c8	0a000004	 beq         |$LN15@StartRxDma|
  050cc	e59d300c	 ldr         r3, [sp, #0xC]
  050d0	e2833014	 add         r3, r3, #0x14
  050d4	e5933000	 ldr         r3, [r3]
  050d8	e58d3044	 str         r3, [sp, #0x44]
  050dc	ea000001	 b           |$LN16@StartRxDma|
  050e0		 |$LN15@StartRxDma|
  050e0	e3e03000	 mvn         r3, #0
  050e4	e58d3044	 str         r3, [sp, #0x44]
  050e8		 |$LN16@StartRxDma|
  050e8	e59d300c	 ldr         r3, [sp, #0xC]
  050ec	e3530000	 cmp         r3, #0
  050f0	0a000004	 beq         |$LN17@StartRxDma|
  050f4	e59d300c	 ldr         r3, [sp, #0xC]
  050f8	e2833010	 add         r3, r3, #0x10
  050fc	e5933000	 ldr         r3, [r3]
  05100	e58d3048	 str         r3, [sp, #0x48]
  05104	ea000001	 b           |$LN18@StartRxDma|
  05108		 |$LN17@StartRxDma|
  05108	e3a03000	 mov         r3, #0
  0510c	e58d3048	 str         r3, [sp, #0x48]
  05110		 |$LN18@StartRxDma|
  05110	e59d300c	 ldr         r3, [sp, #0xC]
  05114	e3530000	 cmp         r3, #0
  05118	0a000004	 beq         |$LN19@StartRxDma|
  0511c	e59d300c	 ldr         r3, [sp, #0xC]
  05120	e283300c	 add         r3, r3, #0xC
  05124	e5933000	 ldr         r3, [r3]
  05128	e58d304c	 str         r3, [sp, #0x4C]
  0512c	ea000001	 b           |$LN20@StartRxDma|
  05130		 |$LN19@StartRxDma|
  05130	e3a03000	 mov         r3, #0
  05134	e58d304c	 str         r3, [sp, #0x4C]
  05138		 |$LN20@StartRxDma|
  05138	e59d3044	 ldr         r3, [sp, #0x44]
  0513c	e58d3004	 str         r3, [sp, #4]
  05140	e59d3048	 ldr         r3, [sp, #0x48]
  05144	e58d3000	 str         r3, [sp]
  05148	e59d304c	 ldr         r3, [sp, #0x4C]
  0514c	e59d200c	 ldr         r2, [sp, #0xC]
  05150	e59d107c	 ldr         r1, [sp, #0x7C]
  05154	e59f03f0	 ldr         r0, [pc, #0x3F0]
  05158	eb000000	 bl          NKDbgPrintfW
  0515c	e3a03000	 mov         r3, #0
  05160	e58d3040	 str         r3, [sp, #0x40]
  05164		 |$LN22@StartRxDma|
  05164	e3a03001	 mov         r3, #1
  05168	e58d3050	 str         r3, [sp, #0x50]
  0516c	ea000001	 b           |$LN24@StartRxDma|
  05170		 |$LN23@StartRxDma|
  05170	e3a03000	 mov         r3, #0
  05174	e58d3050	 str         r3, [sp, #0x50]
  05178		 |$LN24@StartRxDma|

; 1997 : 
; 1998 :     /* Lock the EndPoint */
; 1999 :     LOCK_ENDPOINT (pPdd);

  05178	e59d3078	 ldr         r3, [sp, #0x78]
  0517c	e2830e27	 add         r0, r3, #0x27, 28
  05180	eb000000	 bl          EnterCriticalSection

; 2000 : 
; 2001 :     if (pTransfer == NULL) goto cleanUp;

  05184	e59d300c	 ldr         r3, [sp, #0xC]
  05188	e3530000	 cmp         r3, #0
  0518c	1a000000	 bne         |$LN6@StartRxDma|
  05190	ea0000e3	 b           |$cleanUp$48293|
  05194		 |$LN6@StartRxDma|

; 2002 : 
; 2003 :     pEP->usingDma = TRUE;

  05194	e59d3014	 ldr         r3, [sp, #0x14]
  05198	e2832028	 add         r2, r3, #0x28
  0519c	e3a03001	 mov         r3, #1
  051a0	e5823000	 str         r3, [r2]

; 2004 : 
; 2005 :     /* Currently only support phyisical buffer addresses with overlapped ISO */
; 2006 :     if (pEP->endpointType == USB_ENDPOINT_TYPE_ISOCHRONOUS &&
; 2007 :         (pTransfer->dwFlags & USB_OVERLAPPED) &&
; 2008 :         pTransfer->dwBufferPhysicalAddress == 0)

  051a4	e59d3014	 ldr         r3, [sp, #0x14]
  051a8	e283300c	 add         r3, r3, #0xC
  051ac	e5d33000	 ldrb        r3, [r3]
  051b0	e3530001	 cmp         r3, #1
  051b4	1a000021	 bne         |$LN5@StartRxDma|
  051b8	e59d300c	 ldr         r3, [sp, #0xC]
  051bc	e5933000	 ldr         r3, [r3]
  051c0	e3130001	 tst         r3, #1
  051c4	0a00001d	 beq         |$LN5@StartRxDma|
  051c8	e59d300c	 ldr         r3, [sp, #0xC]
  051cc	e2833008	 add         r3, r3, #8
  051d0	e5933000	 ldr         r3, [r3]
  051d4	e3530000	 cmp         r3, #0
  051d8	1a000018	 bne         |$LN5@StartRxDma|

; 2009 :     {
; 2010 :         PRINTMSG(ZONE_ERROR,
; 2011 :                  (L"StartRxDmaTransfer: EP %d, ISO transfers only supported with physical buffer addresses\r\n",
; 2012 :                   endPoint));

  051dc	e59f335c	 ldr         r3, [pc, #0x35C]
  051e0	e5933440	 ldr         r3, [r3, #0x440]
  051e4	e3130001	 tst         r3, #1
  051e8	0a000011	 beq         |$LN27@StartRxDma|
  051ec	e59f334c	 ldr         r3, [pc, #0x34C]
  051f0	e5933440	 ldr         r3, [r3, #0x440]
  051f4	e3130801	 tst         r3, #1, 16
  051f8	0a000005	 beq         |$LN25@StartRxDma|
  051fc	e59d107c	 ldr         r1, [sp, #0x7C]
  05200	e59f0340	 ldr         r0, [pc, #0x340]
  05204	eb000000	 bl          CeLogMsg
  05208	e3a03001	 mov         r3, #1
  0520c	e58d3054	 str         r3, [sp, #0x54]
  05210	ea000004	 b           |$LN26@StartRxDma|
  05214		 |$LN25@StartRxDma|
  05214	e59d107c	 ldr         r1, [sp, #0x7C]
  05218	e59f0328	 ldr         r0, [pc, #0x328]
  0521c	eb000000	 bl          NKDbgPrintfW
  05220	e3a03000	 mov         r3, #0
  05224	e58d3054	 str         r3, [sp, #0x54]
  05228		 |$LN26@StartRxDma|
  05228	e3a03001	 mov         r3, #1
  0522c	e58d3058	 str         r3, [sp, #0x58]
  05230	ea000001	 b           |$LN28@StartRxDma|
  05234		 |$LN27@StartRxDma|
  05234	e3a03000	 mov         r3, #0
  05238	e58d3058	 str         r3, [sp, #0x58]
  0523c		 |$LN28@StartRxDma|

; 2013 :         goto cleanUp;

  0523c	ea0000b8	 b           |$cleanUp$48293|
  05240		 |$LN5@StartRxDma|

; 2014 :     }
; 2015 : 
; 2016 :     /* Get size of Data to be received */
; 2017 :     size = pTransfer->cbBuffer - pTransfer->cbTransferred;

  05240	e59d300c	 ldr         r3, [sp, #0xC]
  05244	e283200c	 add         r2, r3, #0xC
  05248	e59d300c	 ldr         r3, [sp, #0xC]
  0524c	e2833010	 add         r3, r3, #0x10
  05250	e5922000	 ldr         r2, [r2]
  05254	e5933000	 ldr         r3, [r3]
  05258	e0423003	 sub         r3, r2, r3
  0525c	e58d3018	 str         r3, [sp, #0x18]

; 2018 : 
; 2019 :     /* If we are using PDD buffer we must check for maximal size
; 2020 :      * Our DMA Buffer Sizes are limited. Hence, we will have to
; 2021 :      * chunk up the entire DMA Transfer in multiple blocks
; 2022 :      * wherein each block is equal to the Total DMA Buffer
; 2023 :      * Size
; 2024 :      */
; 2025 :     if ((pTransfer->dwBufferPhysicalAddress == 0) &&
; 2026 :         (size > pPdd->dmaBufferSize))

  05260	e59d300c	 ldr         r3, [sp, #0xC]
  05264	e2833008	 add         r3, r3, #8
  05268	e5933000	 ldr         r3, [r3]
  0526c	e3530000	 cmp         r3, #0
  05270	1a000029	 bne         |$LN4@StartRxDma|
  05274	e59d3078	 ldr         r3, [sp, #0x78]
  05278	e2833008	 add         r3, r3, #8
  0527c	e59d2018	 ldr         r2, [sp, #0x18]
  05280	e5933000	 ldr         r3, [r3]
  05284	e1520003	 cmp         r2, r3
  05288	9a000023	 bls         |$LN4@StartRxDma|

; 2027 :     {
; 2028 :         /* check for the Size below */
; 2029 :         PRINTMSG(ZONE_PDD_RX,
; 2030 :                  (L"StartRxDmaTransfer: EP %d, transfer size 0x%x larger than DMABufSize 0x%x\r\n",
; 2031 :                   endPoint, size, pPdd->dmaBufferSize));

  0528c	e59f32ac	 ldr         r3, [pc, #0x2AC]
  05290	e5933440	 ldr         r3, [r3, #0x440]
  05294	e3130b01	 tst         r3, #1, 22
  05298	0a000019	 beq         |$LN31@StartRxDma|
  0529c	e59f329c	 ldr         r3, [pc, #0x29C]
  052a0	e5933440	 ldr         r3, [r3, #0x440]
  052a4	e3130801	 tst         r3, #1, 16
  052a8	0a000009	 beq         |$LN29@StartRxDma|
  052ac	e59d3078	 ldr         r3, [sp, #0x78]
  052b0	e2833008	 add         r3, r3, #8
  052b4	e5933000	 ldr         r3, [r3]
  052b8	e59d2018	 ldr         r2, [sp, #0x18]
  052bc	e59d107c	 ldr         r1, [sp, #0x7C]
  052c0	e59f027c	 ldr         r0, [pc, #0x27C]
  052c4	eb000000	 bl          CeLogMsg
  052c8	e3a03001	 mov         r3, #1
  052cc	e58d305c	 str         r3, [sp, #0x5C]
  052d0	ea000008	 b           |$LN30@StartRxDma|
  052d4		 |$LN29@StartRxDma|
  052d4	e59d3078	 ldr         r3, [sp, #0x78]
  052d8	e2833008	 add         r3, r3, #8
  052dc	e5933000	 ldr         r3, [r3]
  052e0	e59d2018	 ldr         r2, [sp, #0x18]
  052e4	e59d107c	 ldr         r1, [sp, #0x7C]
  052e8	e59f0254	 ldr         r0, [pc, #0x254]
  052ec	eb000000	 bl          NKDbgPrintfW
  052f0	e3a03000	 mov         r3, #0
  052f4	e58d305c	 str         r3, [sp, #0x5C]
  052f8		 |$LN30@StartRxDma|
  052f8	e3a03001	 mov         r3, #1
  052fc	e58d3060	 str         r3, [sp, #0x60]
  05300	ea000001	 b           |$LN32@StartRxDma|
  05304		 |$LN31@StartRxDma|
  05304	e3a03000	 mov         r3, #0
  05308	e58d3060	 str         r3, [sp, #0x60]
  0530c		 |$LN32@StartRxDma|

; 2032 :         size = pPdd->dmaBufferSize;

  0530c	e59d3078	 ldr         r3, [sp, #0x78]
  05310	e2833008	 add         r3, r3, #8
  05314	e5933000	 ldr         r3, [r3]
  05318	e58d3018	 str         r3, [sp, #0x18]
  0531c		 |$LN4@StartRxDma|

; 2033 :     }
; 2034 : 
; 2035 :     /* Calculate number of USB packets (aka frames) */
; 2036 :     cfn = (USHORT)((size + pEP->maxPacketSize - 1)/pEP->maxPacketSize);

  0531c	e59d3014	 ldr         r3, [sp, #0x14]
  05320	e2833008	 add         r3, r3, #8
  05324	e1d320b0	 ldrh        r2, [r3]
  05328	e59d3018	 ldr         r3, [sp, #0x18]
  0532c	e0833002	 add         r3, r3, r2
  05330	e2431001	 sub         r1, r3, #1
  05334	e59d3014	 ldr         r3, [sp, #0x14]
  05338	e2833008	 add         r3, r3, #8
  0533c	e1d300b0	 ldrh        r0, [r3]
  05340	eb000000	 bl          __rt_udiv
  05344	e1a03800	 mov         r3, r0, lsl #16
  05348	e1a03823	 mov         r3, r3, lsr #16
  0534c	e1cd31be	 strh        r3, [sp, #0x1E]

; 2037 : 
; 2038 :     /* Configure the RxCSR in DMA Mode */
; 2039 : 
; 2040 :     rxCsrVal = pUsbdRegs->EPCSR[ endPoint ].PERI_RXCSR;

  05350	e59d3010	 ldr         r3, [sp, #0x10]
  05354	e2831c05	 add         r1, r3, #5, 24
  05358	e59d207c	 ldr         r2, [sp, #0x7C]
  0535c	e3a03010	 mov         r3, #0x10
  05360	e0030392	 mul         r3, r2, r3
  05364	e0813003	 add         r3, r1, r3
  05368	e2833006	 add         r3, r3, #6
  0536c	e1d330b0	 ldrh        r3, [r3]
  05370	e1cd31bc	 strh        r3, [sp, #0x1C]

; 2041 :     rxCsrVal &= ~(MGC_M_RXCSR_AUTOCLEAR | MGC_M_RXCSR_DMAMODE);

  05374	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  05378	e1a02003	 mov         r2, r3
  0537c	e3e03b22	 mvn         r3, #0x22, 22
  05380	e0023003	 and         r3, r2, r3
  05384	e1a03803	 mov         r3, r3, lsl #16
  05388	e1a03823	 mov         r3, r3, lsr #16
  0538c	e1cd31bc	 strh        r3, [sp, #0x1C]

; 2042 :     /* Note: Must ensure that no bits are cleared here, particularly RXPKTRDY,
; 2043 :        which could be set between reading and writing the register. */
; 2044 :     rxCsrVal |= MGC_M_RXCSR_DMAENAB | MGC_M_RXCSR_P_WZC_BITS;

  05390	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  05394	e1a02003	 mov         r2, r3
  05398	e3a03a02	 mov         r3, #2, 20
  0539c	e3833045	 orr         r3, r3, #0x45
  053a0	e1823003	 orr         r3, r2, r3
  053a4	e1a03803	 mov         r3, r3, lsl #16
  053a8	e1a03823	 mov         r3, r3, lsr #16
  053ac	e1cd31bc	 strh        r3, [sp, #0x1C]

; 2045 :     pUsbdRegs->EPCSR[ endPoint ].PERI_RXCSR = rxCsrVal;

  053b0	e59d3010	 ldr         r3, [sp, #0x10]
  053b4	e2831c05	 add         r1, r3, #5, 24
  053b8	e59d207c	 ldr         r2, [sp, #0x7C]
  053bc	e3a03010	 mov         r3, #0x10
  053c0	e0030392	 mul         r3, r2, r3
  053c4	e0813003	 add         r3, r1, r3
  053c8	e2832006	 add         r2, r3, #6
  053cc	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  053d0	e1c230b0	 strh        r3, [r2]

; 2046 : 
; 2047 : #ifdef CPPI_DMA_SUPPORT
; 2048 :     /* Disable the Rx interrupts for this EndPoint */
; 2049 :     pUsbdRegs->EP_INTMSKCLRR = (1 << endPoint) << USB_OTG_RXINT_SHIFT;

  053d4	e59d207c	 ldr         r2, [sp, #0x7C]
  053d8	e3a03001	 mov         r3, #1
  053dc	e1a03213	 mov         r3, r3, lsl r2
  053e0	e1a02803	 mov         r2, r3, lsl #16
  053e4	e59d3010	 ldr         r3, [sp, #0x10]
  053e8	e2833034	 add         r3, r3, #0x34
  053ec	e5832000	 str         r2, [r3]

; 2050 : 
; 2051 :     if (pTransfer->dwBufferPhysicalAddress == 0)

  053f0	e59d300c	 ldr         r3, [sp, #0xC]
  053f4	e2833008	 add         r3, r3, #8
  053f8	e5933000	 ldr         r3, [r3]
  053fc	e3530000	 cmp         r3, #0
  05400	1a000004	 bne         |$LN3@StartRxDma|

; 2052 :     {
; 2053 :         dmaAddress = pEP->paDmaBuffer;

  05404	e59d3014	 ldr         r3, [sp, #0x14]
  05408	e2833034	 add         r3, r3, #0x34
  0540c	e5933000	 ldr         r3, [r3]
  05410	e58d3008	 str         r3, [sp, #8]

; 2054 :     }
; 2055 :     else

  05414	ea00001d	 b           |$LN2@StartRxDma|
  05418		 |$LN3@StartRxDma|

; 2056 :     {
; 2057 :         dmaAddress = (UINT32)pTransfer->dwBufferPhysicalAddress;

  05418	e59d300c	 ldr         r3, [sp, #0xC]
  0541c	e2833008	 add         r3, r3, #8
  05420	e5933000	 ldr         r3, [r3]
  05424	e58d3008	 str         r3, [sp, #8]

; 2058 :         PRINTMSG(ZONE_PDD_RX,
; 2059 :                  (L"StartRxDmaTransfer: EP %d, DMA to client buffer 0x%08x\r\n",
; 2060 :                   endPoint, dmaAddress));

  05428	e59f3110	 ldr         r3, [pc, #0x110]
  0542c	e5933440	 ldr         r3, [r3, #0x440]
  05430	e3130b01	 tst         r3, #1, 22
  05434	0a000013	 beq         |$LN35@StartRxDma|
  05438	e59f3100	 ldr         r3, [pc, #0x100]
  0543c	e5933440	 ldr         r3, [r3, #0x440]
  05440	e3130801	 tst         r3, #1, 16
  05444	0a000006	 beq         |$LN33@StartRxDma|
  05448	e59d2008	 ldr         r2, [sp, #8]
  0544c	e59d107c	 ldr         r1, [sp, #0x7C]
  05450	e59f00e4	 ldr         r0, [pc, #0xE4]
  05454	eb000000	 bl          CeLogMsg
  05458	e3a03001	 mov         r3, #1
  0545c	e58d3064	 str         r3, [sp, #0x64]
  05460	ea000005	 b           |$LN34@StartRxDma|
  05464		 |$LN33@StartRxDma|
  05464	e59d2008	 ldr         r2, [sp, #8]
  05468	e59d107c	 ldr         r1, [sp, #0x7C]
  0546c	e59f00c8	 ldr         r0, [pc, #0xC8]
  05470	eb000000	 bl          NKDbgPrintfW
  05474	e3a03000	 mov         r3, #0
  05478	e58d3064	 str         r3, [sp, #0x64]
  0547c		 |$LN34@StartRxDma|
  0547c	e3a03001	 mov         r3, #1
  05480	e58d3068	 str         r3, [sp, #0x68]
  05484	ea000001	 b           |$LN36@StartRxDma|
  05488		 |$LN35@StartRxDma|
  05488	e3a03000	 mov         r3, #0
  0548c	e58d3068	 str         r3, [sp, #0x68]
  05490		 |$LN36@StartRxDma|
  05490		 |$LN2@StartRxDma|

; 2061 :     }
; 2062 : 
; 2063 :     // Overlapped transfer?
; 2064 :     pEP->pOverlappedInfo = NULL;

  05490	e59d3014	 ldr         r3, [sp, #0x14]
  05494	e2832038	 add         r2, r3, #0x38
  05498	e3a03000	 mov         r3, #0
  0549c	e5823000	 str         r3, [r2]

; 2065 :     if (pTransfer->dwFlags & USB_OVERLAPPED)

  054a0	e59d300c	 ldr         r3, [sp, #0xC]
  054a4	e5933000	 ldr         r3, [r3]
  054a8	e3130001	 tst         r3, #1
  054ac	0a000005	 beq         |$LN1@StartRxDma|

; 2066 :     {
; 2067 :         pEP->pOverlappedInfo = (PUSB_OVERLAPPED_INFO)pTransfer->pvPddTransferInfo;

  054b0	e59d300c	 ldr         r3, [sp, #0xC]
  054b4	e283101c	 add         r1, r3, #0x1C
  054b8	e59d3014	 ldr         r3, [sp, #0x14]
  054bc	e2832038	 add         r2, r3, #0x38
  054c0	e5913000	 ldr         r3, [r1]
  054c4	e5823000	 str         r3, [r2]
  054c8		 |$LN1@StartRxDma|

; 2068 :     }
; 2069 : 
; 2070 : #ifdef OVERLAPPED_TEST
; 2071 :     {
; 2072 :         static USB_OVERLAPPED_INFO ov;
; 2073 :         ov.lpUserData = NULL;
; 2074 :         ov.dwBytesToIssueCallback = pTransfer->cbBuffer * 3 / 4;
; 2075 :         pEP->pOverlappedInfo = &ov;
; 2076 :     }
; 2077 : #endif
; 2078 : 
; 2079 :     /* Verify the Rx DMA Channel Condition Once
; 2080 :      * The Third argument is a bool which checks whether we
; 2081 :      * require multiple BDs or the entire request can be
; 2082 :      * serviced in one single BD. If the requested Packet
; 2083 :      * size is greater than the EpFifoMaxSize, then we
; 2084 :      * require multiple BDs to service this request
; 2085 :      */
; 2086 :     pDmaCntrl->channelProgram(
; 2087 :         pPdd->ep[endPoint].pDmaChan,
; 2088 :         pPdd->ep[endPoint].maxPacketSize,
; 2089 :         dmaAddress,
; 2090 :         size);

  054c8	e59d3018	 ldr         r3, [sp, #0x18]
  054cc	e59d2008	 ldr         r2, [sp, #8]
  054d0	e59d1078	 ldr         r1, [sp, #0x78]
  054d4	e281efa1	 add         lr, r1, #0xA1, 30
  054d8	e59d007c	 ldr         r0, [sp, #0x7C]
  054dc	e3a0103c	 mov         r1, #0x3C
  054e0	e0010190	 mul         r1, r0, r1
  054e4	e08e1001	 add         r1, lr, r1
  054e8	e2811008	 add         r1, r1, #8
  054ec	e1d110b0	 ldrh        r1, [r1]
  054f0	e59d0078	 ldr         r0, [sp, #0x78]
  054f4	e2804fa1	 add         r4, r0, #0xA1, 30
  054f8	e59de07c	 ldr         lr, [sp, #0x7C]
  054fc	e3a0003c	 mov         r0, #0x3C
  05500	e000009e	 mul         r0, lr, r0
  05504	e0840000	 add         r0, r4, r0
  05508	e280002c	 add         r0, r0, #0x2C
  0550c	e5900000	 ldr         r0, [r0]
  05510	e59de020	 ldr         lr, [sp, #0x20]
  05514	e28ee010	 add         lr, lr, #0x10
  05518	e59e4000	 ldr         r4, [lr]
  0551c	e1a0e00f	 mov         lr, pc
  05520	e12fff14	 bx          r4
  05524		 |$cleanUp$48293|

; 2091 : 
; 2092 : #endif  /* CPPI_DMA_SUPPORT */
; 2093 : 
; 2094 : cleanUp:
; 2095 :     /* Unlock the EndPoint */
; 2096 :     UNLOCK_ENDPOINT (pPdd);

  05524	e59d3078	 ldr         r3, [sp, #0x78]
  05528	e2830e27	 add         r0, r3, #0x27, 28
  0552c	eb000000	 bl          LeaveCriticalSection

; 2097 : 
; 2098 :     return;
; 2099 : }

  05530	e28dd06c	 add         sp, sp, #0x6C
  05534	e89d6010	 ldmia       sp, {r4, sp, lr}
  05538	e12fff1e	 bx          lr
  0553c		 |$LN40@StartRxDma|
  0553c		 |$LN41@StartRxDma|
  0553c	00000000	 DCD         |??_C@_1HC@GPDKKFEL@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAt@|
  05540		 |$LN42@StartRxDma|
  05540	00000000	 DCD         |dpCurSettings|
  05544		 |$LN43@StartRxDma|
  05544	00000000	 DCD         |??_C@_1JI@FDFIDMMO@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs@|
  05548		 |$LN44@StartRxDma|
  05548	00000000	 DCD         |??_C@_1LC@FLMHBHEN@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAI?$AAS?$AAO?$AA?5?$AAt@|
  0554c		 |$LN45@StartRxDma|
  0554c	00000000	 DCD         |??_C@_1HM@PAFNAGJB@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@|
  05550		 |$M50128|

			 ENDP  ; |StartRxDmaTransfer|

	EXPORT	|??_C@_1HK@LMIAFHNK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@GAGCJLNK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAX?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@FPLMEGGL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAX?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@NODPMGAA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?0?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_15BMCNAON@?$AAR?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15NHJLDDPA@?$AAT?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IssueTransfer|

  000b8			 AREA	 |.pdata|, PDATA
|$T50164| DCD	|$LN42@UfnPdd_Iss|
	DCD	0x40013004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@LMIAFHNK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, ",", 0x0, " ", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "s", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@GAGCJLNK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAX?$AA?0@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "R", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@FPLMEGGL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAX?$AA?0@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@NODPMGAA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?0?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "0", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15BMCNAON@?$AAR?$AAX?$AA?$AA@| DCB "R", 0x0, "X", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15NHJLDDPA@?$AAT?$AAX?$AA?$AA@| DCB "T", 0x0, "X", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  05550			 AREA	 |.text|, CODE, ARM

  05550		 |UfnPdd_IssueTransfer| PROC

; 2275 : {

  05550		 |$LN42@UfnPdd_Iss|
  05550	e1a0c00d	 mov         r12, sp
  05554	e92d0007	 stmdb       sp!, {r0 - r2}
  05558	e92d5000	 stmdb       sp!, {r12, lr}
  0555c	e24dd038	 sub         sp, sp, #0x38
  05560		 |$M50161|

; 2276 :     DWORD rc = ERROR_SUCCESS;

  05560	e3a03000	 mov         r3, #0
  05564	e58d3000	 str         r3, [sp]

; 2277 : 
; 2278 :     USBFNPDDCONTEXT *pPdd       = (USBFNPDDCONTEXT *)pvPddContext;

  05568	e59d3040	 ldr         r3, [sp, #0x40]
  0556c	e58d3004	 str         r3, [sp, #4]

; 2279 : 
; 2280 :     if (endpoint == 0)

  05570	e59d3044	 ldr         r3, [sp, #0x44]
  05574	e3530000	 cmp         r3, #0
  05578	1a000030	 bne         |$LN15@UfnPdd_Iss|

; 2281 :     {
; 2282 :         PRINTMSG(ZONE_PDD_EP0, (L"UfnPdd_IssueTransfer: EP 0, %s, len %d\r\n",
; 2283 :                                 TRANSFER_IS_IN(pTransfer) ? L"TX" : L"RX", pTransfer->cbBuffer));

  0557c	e59f3468	 ldr         r3, [pc, #0x468]
  05580	e5933440	 ldr         r3, [r3, #0x440]
  05584	e3130c02	 tst         r3, #2, 24
  05588	0a000029	 beq         |$LN24@UfnPdd_Iss|
  0558c	e59f3458	 ldr         r3, [pc, #0x458]
  05590	e5933440	 ldr         r3, [r3, #0x440]
  05594	e3130801	 tst         r3, #1, 16
  05598	0a000011	 beq         |$LN22@UfnPdd_Iss|
  0559c	e59d3048	 ldr         r3, [sp, #0x48]
  055a0	e5933000	 ldr         r3, [r3]
  055a4	e3130080	 tst         r3, #0x80
  055a8	0a000002	 beq         |$LN18@UfnPdd_Iss|
  055ac	e59f3458	 ldr         r3, [pc, #0x458]
  055b0	e58d300c	 str         r3, [sp, #0xC]
  055b4	ea000001	 b           |$LN19@UfnPdd_Iss|
  055b8		 |$LN18@UfnPdd_Iss|
  055b8	e59f3448	 ldr         r3, [pc, #0x448]
  055bc	e58d300c	 str         r3, [sp, #0xC]
  055c0		 |$LN19@UfnPdd_Iss|
  055c0	e59d3048	 ldr         r3, [sp, #0x48]
  055c4	e283300c	 add         r3, r3, #0xC
  055c8	e5932000	 ldr         r2, [r3]
  055cc	e59d100c	 ldr         r1, [sp, #0xC]
  055d0	e59f042c	 ldr         r0, [pc, #0x42C]
  055d4	eb000000	 bl          CeLogMsg
  055d8	e3a03001	 mov         r3, #1
  055dc	e58d3010	 str         r3, [sp, #0x10]
  055e0	ea000010	 b           |$LN23@UfnPdd_Iss|
  055e4		 |$LN22@UfnPdd_Iss|
  055e4	e59d3048	 ldr         r3, [sp, #0x48]
  055e8	e5933000	 ldr         r3, [r3]
  055ec	e3130080	 tst         r3, #0x80
  055f0	0a000002	 beq         |$LN20@UfnPdd_Iss|
  055f4	e59f3410	 ldr         r3, [pc, #0x410]
  055f8	e58d3014	 str         r3, [sp, #0x14]
  055fc	ea000001	 b           |$LN21@UfnPdd_Iss|
  05600		 |$LN20@UfnPdd_Iss|
  05600	e59f3400	 ldr         r3, [pc, #0x400]
  05604	e58d3014	 str         r3, [sp, #0x14]
  05608		 |$LN21@UfnPdd_Iss|
  05608	e59d3048	 ldr         r3, [sp, #0x48]
  0560c	e283300c	 add         r3, r3, #0xC
  05610	e5932000	 ldr         r2, [r3]
  05614	e59d1014	 ldr         r1, [sp, #0x14]
  05618	e59f03e4	 ldr         r0, [pc, #0x3E4]
  0561c	eb000000	 bl          NKDbgPrintfW
  05620	e3a03000	 mov         r3, #0
  05624	e58d3010	 str         r3, [sp, #0x10]
  05628		 |$LN23@UfnPdd_Iss|
  05628	e3a03001	 mov         r3, #1
  0562c	e58d3018	 str         r3, [sp, #0x18]
  05630	ea000001	 b           |$LN25@UfnPdd_Iss|
  05634		 |$LN24@UfnPdd_Iss|
  05634	e3a03000	 mov         r3, #0
  05638	e58d3018	 str         r3, [sp, #0x18]
  0563c		 |$LN25@UfnPdd_Iss|

; 2284 :     }
; 2285 :     else if (TRANSFER_IS_IN(pTransfer))

  0563c	ea000040	 b           |$LN14@UfnPdd_Iss|
  05640		 |$LN15@UfnPdd_Iss|
  05640	e59d3048	 ldr         r3, [sp, #0x48]
  05644	e5933000	 ldr         r3, [r3]
  05648	e3130080	 tst         r3, #0x80
  0564c	0a00001e	 beq         |$LN13@UfnPdd_Iss|

; 2286 :     {
; 2287 :         PRINTMSG(ZONE_PDD_TX, (L"UfnPdd_IssueTransfer: EP %d, TX, len %d\r\n",
; 2288 :                                endpoint, pTransfer->cbBuffer));

  05650	e59f3394	 ldr         r3, [pc, #0x394]
  05654	e5933440	 ldr         r3, [r3, #0x440]
  05658	e3130b02	 tst         r3, #2, 22
  0565c	0a000017	 beq         |$LN28@UfnPdd_Iss|
  05660	e59f3384	 ldr         r3, [pc, #0x384]
  05664	e5933440	 ldr         r3, [r3, #0x440]
  05668	e3130801	 tst         r3, #1, 16
  0566c	0a000008	 beq         |$LN26@UfnPdd_Iss|
  05670	e59d3048	 ldr         r3, [sp, #0x48]
  05674	e283300c	 add         r3, r3, #0xC
  05678	e5932000	 ldr         r2, [r3]
  0567c	e59d1044	 ldr         r1, [sp, #0x44]
  05680	e59f0378	 ldr         r0, [pc, #0x378]
  05684	eb000000	 bl          CeLogMsg
  05688	e3a03001	 mov         r3, #1
  0568c	e58d301c	 str         r3, [sp, #0x1C]
  05690	ea000007	 b           |$LN27@UfnPdd_Iss|
  05694		 |$LN26@UfnPdd_Iss|
  05694	e59d3048	 ldr         r3, [sp, #0x48]
  05698	e283300c	 add         r3, r3, #0xC
  0569c	e5932000	 ldr         r2, [r3]
  056a0	e59d1044	 ldr         r1, [sp, #0x44]
  056a4	e59f0354	 ldr         r0, [pc, #0x354]
  056a8	eb000000	 bl          NKDbgPrintfW
  056ac	e3a03000	 mov         r3, #0
  056b0	e58d301c	 str         r3, [sp, #0x1C]
  056b4		 |$LN27@UfnPdd_Iss|
  056b4	e3a03001	 mov         r3, #1
  056b8	e58d3020	 str         r3, [sp, #0x20]
  056bc	ea000001	 b           |$LN29@UfnPdd_Iss|
  056c0		 |$LN28@UfnPdd_Iss|
  056c0	e3a03000	 mov         r3, #0
  056c4	e58d3020	 str         r3, [sp, #0x20]
  056c8		 |$LN29@UfnPdd_Iss|

; 2289 :     }
; 2290 :     else

  056c8	ea00001d	 b           |$LN12@UfnPdd_Iss|
  056cc		 |$LN13@UfnPdd_Iss|

; 2291 :     {
; 2292 :         PRINTMSG(ZONE_PDD_RX, (L"UfnPdd_IssueTransfer: EP %d, RX, len %d\r\n",
; 2293 :                                endpoint, pTransfer->cbBuffer));

  056cc	e59f3318	 ldr         r3, [pc, #0x318]
  056d0	e5933440	 ldr         r3, [r3, #0x440]
  056d4	e3130b01	 tst         r3, #1, 22
  056d8	0a000017	 beq         |$LN32@UfnPdd_Iss|
  056dc	e59f3308	 ldr         r3, [pc, #0x308]
  056e0	e5933440	 ldr         r3, [r3, #0x440]
  056e4	e3130801	 tst         r3, #1, 16
  056e8	0a000008	 beq         |$LN30@UfnPdd_Iss|
  056ec	e59d3048	 ldr         r3, [sp, #0x48]
  056f0	e283300c	 add         r3, r3, #0xC
  056f4	e5932000	 ldr         r2, [r3]
  056f8	e59d1044	 ldr         r1, [sp, #0x44]
  056fc	e59f02f8	 ldr         r0, [pc, #0x2F8]
  05700	eb000000	 bl          CeLogMsg
  05704	e3a03001	 mov         r3, #1
  05708	e58d3024	 str         r3, [sp, #0x24]
  0570c	ea000007	 b           |$LN31@UfnPdd_Iss|
  05710		 |$LN30@UfnPdd_Iss|
  05710	e59d3048	 ldr         r3, [sp, #0x48]
  05714	e283300c	 add         r3, r3, #0xC
  05718	e5932000	 ldr         r2, [r3]
  0571c	e59d1044	 ldr         r1, [sp, #0x44]
  05720	e59f02d4	 ldr         r0, [pc, #0x2D4]
  05724	eb000000	 bl          NKDbgPrintfW
  05728	e3a03000	 mov         r3, #0
  0572c	e58d3024	 str         r3, [sp, #0x24]
  05730		 |$LN31@UfnPdd_Iss|
  05730	e3a03001	 mov         r3, #1
  05734	e58d3028	 str         r3, [sp, #0x28]
  05738	ea000001	 b           |$LN33@UfnPdd_Iss|
  0573c		 |$LN32@UfnPdd_Iss|
  0573c	e3a03000	 mov         r3, #0
  05740	e58d3028	 str         r3, [sp, #0x28]
  05744		 |$LN33@UfnPdd_Iss|
  05744		 |$LN12@UfnPdd_Iss|
  05744		 |$LN14@UfnPdd_Iss|

; 2294 :     }
; 2295 : 
; 2296 :     /* Check that EP is initialised */
; 2297 :     if (!pPdd->ep[endpoint].epInitialised)

  05744	e59d3004	 ldr         r3, [sp, #4]
  05748	e2831fa1	 add         r1, r3, #0xA1, 30
  0574c	e59d2044	 ldr         r2, [sp, #0x44]
  05750	e3a0303c	 mov         r3, #0x3C
  05754	e0030392	 mul         r3, r2, r3
  05758	e0813003	 add         r3, r1, r3
  0575c	e2833004	 add         r3, r3, #4
  05760	e5933000	 ldr         r3, [r3]
  05764	e3530000	 cmp         r3, #0
  05768	1a00000a	 bne         |$LN11@UfnPdd_Iss|

; 2298 :     {
; 2299 :         ERRORMSG(TRUE, (L"UfnPdd_IssueTransfer: EP%u Error, Endpoint not initialised\r\n",
; 2300 :                         endpoint));

  0576c	e3a02b02	 mov         r2, #2, 22
  05770	e38220fc	 orr         r2, r2, #0xFC
  05774	e59f1274	 ldr         r1, [pc, #0x274]
  05778	e59f0278	 ldr         r0, [pc, #0x278]
  0577c	eb000000	 bl          NKDbgPrintfW
  05780	e59d1044	 ldr         r1, [sp, #0x44]
  05784	e59f0268	 ldr         r0, [pc, #0x268]
  05788	eb000000	 bl          NKDbgPrintfW

; 2301 :         rc = ERROR_INVALID_PARAMETER;

  0578c	e3a03057	 mov         r3, #0x57
  05790	e58d3000	 str         r3, [sp]

; 2302 :         goto Exit;

  05794	ea00008d	 b           |$Exit$48391|
  05798		 |$LN11@UfnPdd_Iss|

; 2303 :     }
; 2304 : 
; 2305 :     LOCK_ENDPOINT (pPdd);

  05798	e59d3004	 ldr         r3, [sp, #4]
  0579c	e2830e27	 add         r0, r3, #0x27, 28
  057a0	eb000000	 bl          EnterCriticalSection

; 2306 : 
; 2307 :     /* Save transfer for interrupt thread */
; 2308 :     DEBUGCHK(pPdd->ep[endpoint].pTransfer == NULL);

  057a4	e59d3004	 ldr         r3, [sp, #4]
  057a8	e2831fa1	 add         r1, r3, #0xA1, 30
  057ac	e59d2044	 ldr         r2, [sp, #0x44]
  057b0	e3a0303c	 mov         r3, #0x3C
  057b4	e0030392	 mul         r3, r2, r3
  057b8	e0813003	 add         r3, r1, r3
  057bc	e2833020	 add         r3, r3, #0x20
  057c0	e5933000	 ldr         r3, [r3]
  057c4	e3530000	 cmp         r3, #0
  057c8	1a000002	 bne         |$LN34@UfnPdd_Iss|
  057cc	e3a03001	 mov         r3, #1
  057d0	e58d302c	 str         r3, [sp, #0x2C]
  057d4	ea000008	 b           |$LN35@UfnPdd_Iss|
  057d8		 |$LN34@UfnPdd_Iss|
  057d8	e3a03c09	 mov         r3, #9, 24
  057dc	e3833004	 orr         r3, r3, #4
  057e0	e59f2208	 ldr         r2, [pc, #0x208]
  057e4	e59f1200	 ldr         r1, [pc, #0x200]
  057e8	e59f01f8	 ldr         r0, [pc, #0x1F8]
  057ec	eb000000	 bl          NKDbgPrintfW
  057f0	e6000010	 __debugbreak_ce
  057f4	e3a03000	 mov         r3, #0
  057f8	e58d302c	 str         r3, [sp, #0x2C]
  057fc		 |$LN35@UfnPdd_Iss|

; 2309 :     pPdd->ep[endpoint].pTransfer = pTransfer;

  057fc	e59d3004	 ldr         r3, [sp, #4]
  05800	e2831fa1	 add         r1, r3, #0xA1, 30
  05804	e59d2044	 ldr         r2, [sp, #0x44]
  05808	e3a0303c	 mov         r3, #0x3C
  0580c	e0030392	 mul         r3, r2, r3
  05810	e0813003	 add         r3, r1, r3
  05814	e2832020	 add         r2, r3, #0x20
  05818	e59d3048	 ldr         r3, [sp, #0x48]
  0581c	e5823000	 str         r3, [r2]

; 2310 : 
; 2311 :     /* If transfer buffer is NULL length must be zero */
; 2312 :     if (pTransfer->pvBuffer == NULL)

  05820	e59d3048	 ldr         r3, [sp, #0x48]
  05824	e2833004	 add         r3, r3, #4
  05828	e5933000	 ldr         r3, [r3]
  0582c	e3530000	 cmp         r3, #0
  05830	1a000003	 bne         |$LN10@UfnPdd_Iss|

; 2313 :     {
; 2314 :         pTransfer->cbBuffer = 0 ;

  05834	e59d3048	 ldr         r3, [sp, #0x48]
  05838	e283200c	 add         r2, r3, #0xC
  0583c	e3a03000	 mov         r3, #0
  05840	e5823000	 str         r3, [r2]
  05844		 |$LN10@UfnPdd_Iss|

; 2315 :     }
; 2316 : 
; 2317 :     DEBUGCHK(pTransfer->dwUsbError == UFN_NOT_COMPLETE_ERROR);

  05844	e59d3048	 ldr         r3, [sp, #0x48]
  05848	e2833014	 add         r3, r3, #0x14
  0584c	e5932000	 ldr         r2, [r3]
  05850	e3a03c01	 mov         r3, #1, 24
  05854	e3833003	 orr         r3, r3, #3
  05858	e1520003	 cmp         r2, r3
  0585c	1a000002	 bne         |$LN36@UfnPdd_Iss|
  05860	e3a03001	 mov         r3, #1
  05864	e58d3030	 str         r3, [sp, #0x30]
  05868	ea000008	 b           |$LN37@UfnPdd_Iss|
  0586c		 |$LN36@UfnPdd_Iss|
  0586c	e3a03c09	 mov         r3, #9, 24
  05870	e383300d	 orr         r3, r3, #0xD
  05874	e59f2174	 ldr         r2, [pc, #0x174]
  05878	e59f116c	 ldr         r1, [pc, #0x16C]
  0587c	e59f0164	 ldr         r0, [pc, #0x164]
  05880	eb000000	 bl          NKDbgPrintfW
  05884	e6000010	 __debugbreak_ce
  05888	e3a03000	 mov         r3, #0
  0588c	e58d3030	 str         r3, [sp, #0x30]
  05890		 |$LN37@UfnPdd_Iss|

; 2318 : 
; 2319 :     UNLOCK_ENDPOINT (pPdd);

  05890	e59d3004	 ldr         r3, [sp, #4]
  05894	e2830e27	 add         r0, r3, #0x27, 28
  05898	eb000000	 bl          LeaveCriticalSection

; 2320 : 
; 2321 :     /* Depending on direction */
; 2322 :     if (TRANSFER_IS_IN(pTransfer))

  0589c	e59d3048	 ldr         r3, [sp, #0x48]
  058a0	e5933000	 ldr         r3, [r3]
  058a4	e3130080	 tst         r3, #0x80
  058a8	0a00001d	 beq         |$LN9@UfnPdd_Iss|

; 2323 :     {
; 2324 :         pPdd->ep[endpoint].zeroLength = (pTransfer->cbBuffer == 0);

  058ac	e59d3048	 ldr         r3, [sp, #0x48]
  058b0	e283300c	 add         r3, r3, #0xC
  058b4	e5933000	 ldr         r3, [r3]
  058b8	e3530000	 cmp         r3, #0
  058bc	1a000002	 bne         |$LN38@UfnPdd_Iss|
  058c0	e3a03001	 mov         r3, #1
  058c4	e58d3034	 str         r3, [sp, #0x34]
  058c8	ea000001	 b           |$LN39@UfnPdd_Iss|
  058cc		 |$LN38@UfnPdd_Iss|
  058cc	e3a03000	 mov         r3, #0
  058d0	e58d3034	 str         r3, [sp, #0x34]
  058d4		 |$LN39@UfnPdd_Iss|
  058d4	e59d3004	 ldr         r3, [sp, #4]
  058d8	e2831fa1	 add         r1, r3, #0xA1, 30
  058dc	e59d2044	 ldr         r2, [sp, #0x44]
  058e0	e3a0303c	 mov         r3, #0x3C
  058e4	e0030392	 mul         r3, r2, r3
  058e8	e0813003	 add         r3, r1, r3
  058ec	e2832014	 add         r2, r3, #0x14
  058f0	e59d3034	 ldr         r3, [sp, #0x34]
  058f4	e5823000	 str         r3, [r2]

; 2325 : 
; 2326 :         if (endpoint == 0)

  058f8	e59d3044	 ldr         r3, [sp, #0x44]
  058fc	e3530000	 cmp         r3, #0
  05900	1a000003	 bne         |$LN8@UfnPdd_Iss|

; 2327 :         {
; 2328 :             ContinueEp0TxTransfer(pPdd, endpoint);

  05904	e59d1044	 ldr         r1, [sp, #0x44]
  05908	e59d0004	 ldr         r0, [sp, #4]
  0590c	eb000000	 bl          ContinueEp0TxTransfer

; 2329 :         }
; 2330 :         else

  05910	ea000002	 b           |$LN7@UfnPdd_Iss|
  05914		 |$LN8@UfnPdd_Iss|

; 2331 :         {
; 2332 : #ifdef CPPI_DMA_SUPPORT
; 2333 :             ContinueTxDmaTransfer(pPdd, endpoint);

  05914	e59d1044	 ldr         r1, [sp, #0x44]
  05918	e59d0004	 ldr         r0, [sp, #4]
  0591c	eb000000	 bl          ContinueTxDmaTransfer
  05920		 |$LN7@UfnPdd_Iss|

; 2334 : #else
; 2335 :             ContinueTxTransfer(pPdd, endpoint);
; 2336 : #endif
; 2337 :         }
; 2338 :     }
; 2339 :     else

  05920	ea000021	 b           |$LN6@UfnPdd_Iss|
  05924		 |$LN9@UfnPdd_Iss|

; 2340 :     {
; 2341 :         pPdd->ep[endpoint].zeroLength = FALSE;

  05924	e59d3004	 ldr         r3, [sp, #4]
  05928	e2831fa1	 add         r1, r3, #0xA1, 30
  0592c	e59d2044	 ldr         r2, [sp, #0x44]
  05930	e3a0303c	 mov         r3, #0x3C
  05934	e0030392	 mul         r3, r2, r3
  05938	e0813003	 add         r3, r1, r3
  0593c	e2832014	 add         r2, r3, #0x14
  05940	e3a03000	 mov         r3, #0
  05944	e5823000	 str         r3, [r2]

; 2342 :         pPdd->ep[endpoint].epStage = MGC_END0_STAGE_RX;

  05948	e59d3004	 ldr         r3, [sp, #4]
  0594c	e2831fa1	 add         r1, r3, #0xA1, 30
  05950	e59d2044	 ldr         r2, [sp, #0x44]
  05954	e3a0303c	 mov         r3, #0x3C
  05958	e0030392	 mul         r3, r2, r3
  0595c	e0813003	 add         r3, r1, r3
  05960	e283201c	 add         r2, r3, #0x1C
  05964	e3a03003	 mov         r3, #3
  05968	e5823000	 str         r3, [r2]

; 2343 : 
; 2344 :         if (endpoint == 0)

  0596c	e59d3044	 ldr         r3, [sp, #0x44]
  05970	e3530000	 cmp         r3, #0
  05974	1a000000	 bne         |$LN5@UfnPdd_Iss|

; 2345 :         {
; 2346 :             // MDD does not support synchronous completion callbacks so always 
; 2347 :             // wait for RX interrupt before processing an EP0 RX transfer.
; 2348 :             //ContinueEp0RxTransfer (pPdd, endpoint);
; 2349 :         }
; 2350 :         else

  05978	ea00000b	 b           |$LN4@UfnPdd_Iss|
  0597c		 |$LN5@UfnPdd_Iss|

; 2351 :         {
; 2352 : #ifdef CPPI_DMA_SUPPORT
; 2353 :             /* Do not use DMA for zero length packets */
; 2354 :             if (pTransfer->cbBuffer != 0)

  0597c	e59d3048	 ldr         r3, [sp, #0x48]
  05980	e283300c	 add         r3, r3, #0xC
  05984	e5933000	 ldr         r3, [r3]
  05988	e3530000	 cmp         r3, #0
  0598c	0a000003	 beq         |$LN3@UfnPdd_Iss|

; 2355 :             { 
; 2356 :                 StartRxDmaTransfer(pPdd, endpoint);

  05990	e59d1044	 ldr         r1, [sp, #0x44]
  05994	e59d0004	 ldr         r0, [sp, #4]
  05998	eb000000	 bl          StartRxDmaTransfer

; 2357 :             }
; 2358 :             else

  0599c	ea000002	 b           |$LN2@UfnPdd_Iss|
  059a0		 |$LN3@UfnPdd_Iss|

; 2359 : #endif
; 2360 :             {
; 2361 :                 StartRxTransfer (pPdd, endpoint);

  059a0	e59d1044	 ldr         r1, [sp, #0x44]
  059a4	e59d0004	 ldr         r0, [sp, #4]
  059a8	eb000000	 bl          StartRxTransfer
  059ac		 |$LN2@UfnPdd_Iss|
  059ac		 |$LN4@UfnPdd_Iss|
  059ac		 |$LN6@UfnPdd_Iss|

; 2362 :             }
; 2363 :         }
; 2364 :     }
; 2365 : 
; 2366 :     // Signal activity
; 2367 :     if (pPdd->hActivityEvent)

  059ac	e59d3004	 ldr         r3, [sp, #4]
  059b0	e2833f95	 add         r3, r3, #0x95, 30
  059b4	e5933000	 ldr         r3, [r3]
  059b8	e3530000	 cmp         r3, #0
  059bc	0a000003	 beq         |$LN1@UfnPdd_Iss|

; 2368 :         SetEvent(pPdd->hActivityEvent);

  059c0	e59d3004	 ldr         r3, [sp, #4]
  059c4	e2833f95	 add         r3, r3, #0x95, 30
  059c8	e5930000	 ldr         r0, [r3]
  059cc	eb000000	 bl          SetEvent
  059d0		 |$LN1@UfnPdd_Iss|
  059d0		 |$Exit$48391|

; 2369 : 
; 2370 : Exit:
; 2371 :     return (rc);

  059d0	e59d3000	 ldr         r3, [sp]
  059d4	e58d3008	 str         r3, [sp, #8]

; 2372 : }

  059d8	e59d0008	 ldr         r0, [sp, #8]
  059dc	e28dd038	 add         sp, sp, #0x38
  059e0	e89d6000	 ldmia       sp, {sp, lr}
  059e4	e12fff1e	 bx          lr
  059e8		 |$LN43@UfnPdd_Iss|
  059e8		 |$LN44@UfnPdd_Iss|
  059e8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  059ec		 |$LN45@UfnPdd_Iss|
  059ec	00000000	 DCD         |dpCurSettings|
  059f0		 |$LN46@UfnPdd_Iss|
  059f0	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  059f4		 |$LN47@UfnPdd_Iss|
  059f4	00000000	 DCD         |??_C@_1HK@LMIAFHNK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  059f8		 |$LN48@UfnPdd_Iss|
  059f8	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  059fc		 |$LN49@UfnPdd_Iss|
  059fc	00000000	 DCD         |??_C@_1FE@GAGCJLNK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAX?$AA?0@|
  05a00		 |$LN50@UfnPdd_Iss|
  05a00	00000000	 DCD         |??_C@_1FE@FPLMEGGL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAT?$AAX?$AA?0@|
  05a04		 |$LN51@UfnPdd_Iss|
  05a04	00000000	 DCD         |??_C@_1FC@NODPMGAA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?0?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5@|
  05a08		 |$LN52@UfnPdd_Iss|
  05a08	00000000	 DCD         |??_C@_15BMCNAON@?$AAR?$AAX?$AA?$AA@|
  05a0c		 |$LN53@UfnPdd_Iss|
  05a0c	00000000	 DCD         |??_C@_15NHJLDDPA@?$AAT?$AAX?$AA?$AA@|
  05a10		 |$M50162|

			 ENDP  ; |UfnPdd_IssueTransfer|

	EXPORT	|??_C@_1HG@LDGIHLCD@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'

  000c0			 AREA	 |.pdata|, PDATA
|$T50200| DCD	|$LN22@StartRxTra|
	DCD	0x40008604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@LDGIHLCD@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  05a10			 AREA	 |.text|, CODE, ARM

  05a10		 |StartRxTransfer| PROC

; 1219 : {

  05a10		 |$LN22@StartRxTra|
  05a10	e1a0c00d	 mov         r12, sp
  05a14	e92d0003	 stmdb       sp!, {r0, r1}
  05a18	e92d5000	 stmdb       sp!, {r12, lr}
  05a1c	e24dd044	 sub         sp, sp, #0x44
  05a20		 |$M50197|

; 1220 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  05a20	e59d304c	 ldr         r3, [sp, #0x4C]
  05a24	e283301c	 add         r3, r3, #0x1C
  05a28	e5933000	 ldr         r3, [r3]
  05a2c	e58d300c	 str         r3, [sp, #0xC]

; 1221 :     UsbFnEp         *pEP       = &pPdd->ep[endPoint];

  05a30	e59d304c	 ldr         r3, [sp, #0x4C]
  05a34	e2831fa1	 add         r1, r3, #0xA1, 30
  05a38	e59d2050	 ldr         r2, [sp, #0x50]
  05a3c	e3a0303c	 mov         r3, #0x3C
  05a40	e0030392	 mul         r3, r2, r3
  05a44	e0813003	 add         r3, r1, r3
  05a48	e58d3010	 str         r3, [sp, #0x10]

; 1222 : 
; 1223 : #ifdef DEBUG
; 1224 : 	STransfer		*pTransfer = pEP->pTransfer;

  05a4c	e59d3010	 ldr         r3, [sp, #0x10]
  05a50	e2833020	 add         r3, r3, #0x20
  05a54	e5933000	 ldr         r3, [r3]
  05a58	e58d3008	 str         r3, [sp, #8]

; 1225 : 
; 1226 :     PRINTMSG(ZONE_PDD_RX,
; 1227 :              (L"StartRxTransfer: EP %d, pTransfer 0x%08x (%d, %d, 0x%0x)\r\n",
; 1228 :               endPoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1229 :               pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1230 :               pTransfer != NULL ? pTransfer->dwUsbError : -1));

  05a5c	e59f31c0	 ldr         r3, [pc, #0x1C0]
  05a60	e5933440	 ldr         r3, [r3, #0x440]
  05a64	e3130b01	 tst         r3, #1, 22
  05a68	0a000059	 beq         |$LN18@StartRxTra|
  05a6c	e59f31b0	 ldr         r3, [pc, #0x1B0]
  05a70	e5933440	 ldr         r3, [r3, #0x440]
  05a74	e3130801	 tst         r3, #1, 16
  05a78	0a000029	 beq         |$LN16@StartRxTra|
  05a7c	e59d3008	 ldr         r3, [sp, #8]
  05a80	e3530000	 cmp         r3, #0
  05a84	0a000004	 beq         |$LN4@StartRxTra|
  05a88	e59d3008	 ldr         r3, [sp, #8]
  05a8c	e2833014	 add         r3, r3, #0x14
  05a90	e5933000	 ldr         r3, [r3]
  05a94	e58d3024	 str         r3, [sp, #0x24]
  05a98	ea000001	 b           |$LN5@StartRxTra|
  05a9c		 |$LN4@StartRxTra|
  05a9c	e3e03000	 mvn         r3, #0
  05aa0	e58d3024	 str         r3, [sp, #0x24]
  05aa4		 |$LN5@StartRxTra|
  05aa4	e59d3008	 ldr         r3, [sp, #8]
  05aa8	e3530000	 cmp         r3, #0
  05aac	0a000004	 beq         |$LN6@StartRxTra|
  05ab0	e59d3008	 ldr         r3, [sp, #8]
  05ab4	e2833010	 add         r3, r3, #0x10
  05ab8	e5933000	 ldr         r3, [r3]
  05abc	e58d3028	 str         r3, [sp, #0x28]
  05ac0	ea000001	 b           |$LN7@StartRxTra|
  05ac4		 |$LN6@StartRxTra|
  05ac4	e3a03000	 mov         r3, #0
  05ac8	e58d3028	 str         r3, [sp, #0x28]
  05acc		 |$LN7@StartRxTra|
  05acc	e59d3008	 ldr         r3, [sp, #8]
  05ad0	e3530000	 cmp         r3, #0
  05ad4	0a000004	 beq         |$LN8@StartRxTra|
  05ad8	e59d3008	 ldr         r3, [sp, #8]
  05adc	e283300c	 add         r3, r3, #0xC
  05ae0	e5933000	 ldr         r3, [r3]
  05ae4	e58d302c	 str         r3, [sp, #0x2C]
  05ae8	ea000001	 b           |$LN9@StartRxTra|
  05aec		 |$LN8@StartRxTra|
  05aec	e3a03000	 mov         r3, #0
  05af0	e58d302c	 str         r3, [sp, #0x2C]
  05af4		 |$LN9@StartRxTra|
  05af4	e59d3024	 ldr         r3, [sp, #0x24]
  05af8	e58d3004	 str         r3, [sp, #4]
  05afc	e59d3028	 ldr         r3, [sp, #0x28]
  05b00	e58d3000	 str         r3, [sp]
  05b04	e59d302c	 ldr         r3, [sp, #0x2C]
  05b08	e59d2008	 ldr         r2, [sp, #8]
  05b0c	e59d1050	 ldr         r1, [sp, #0x50]
  05b10	e59f0108	 ldr         r0, [pc, #0x108]
  05b14	eb000000	 bl          CeLogMsg
  05b18	e3a03001	 mov         r3, #1
  05b1c	e58d3030	 str         r3, [sp, #0x30]
  05b20	ea000028	 b           |$LN17@StartRxTra|
  05b24		 |$LN16@StartRxTra|
  05b24	e59d3008	 ldr         r3, [sp, #8]
  05b28	e3530000	 cmp         r3, #0
  05b2c	0a000004	 beq         |$LN10@StartRxTra|
  05b30	e59d3008	 ldr         r3, [sp, #8]
  05b34	e2833014	 add         r3, r3, #0x14
  05b38	e5933000	 ldr         r3, [r3]
  05b3c	e58d3034	 str         r3, [sp, #0x34]
  05b40	ea000001	 b           |$LN11@StartRxTra|
  05b44		 |$LN10@StartRxTra|
  05b44	e3e03000	 mvn         r3, #0
  05b48	e58d3034	 str         r3, [sp, #0x34]
  05b4c		 |$LN11@StartRxTra|
  05b4c	e59d3008	 ldr         r3, [sp, #8]
  05b50	e3530000	 cmp         r3, #0
  05b54	0a000004	 beq         |$LN12@StartRxTra|
  05b58	e59d3008	 ldr         r3, [sp, #8]
  05b5c	e2833010	 add         r3, r3, #0x10
  05b60	e5933000	 ldr         r3, [r3]
  05b64	e58d3038	 str         r3, [sp, #0x38]
  05b68	ea000001	 b           |$LN13@StartRxTra|
  05b6c		 |$LN12@StartRxTra|
  05b6c	e3a03000	 mov         r3, #0
  05b70	e58d3038	 str         r3, [sp, #0x38]
  05b74		 |$LN13@StartRxTra|
  05b74	e59d3008	 ldr         r3, [sp, #8]
  05b78	e3530000	 cmp         r3, #0
  05b7c	0a000004	 beq         |$LN14@StartRxTra|
  05b80	e59d3008	 ldr         r3, [sp, #8]
  05b84	e283300c	 add         r3, r3, #0xC
  05b88	e5933000	 ldr         r3, [r3]
  05b8c	e58d303c	 str         r3, [sp, #0x3C]
  05b90	ea000001	 b           |$LN15@StartRxTra|
  05b94		 |$LN14@StartRxTra|
  05b94	e3a03000	 mov         r3, #0
  05b98	e58d303c	 str         r3, [sp, #0x3C]
  05b9c		 |$LN15@StartRxTra|
  05b9c	e59d3034	 ldr         r3, [sp, #0x34]
  05ba0	e58d3004	 str         r3, [sp, #4]
  05ba4	e59d3038	 ldr         r3, [sp, #0x38]
  05ba8	e58d3000	 str         r3, [sp]
  05bac	e59d303c	 ldr         r3, [sp, #0x3C]
  05bb0	e59d2008	 ldr         r2, [sp, #8]
  05bb4	e59d1050	 ldr         r1, [sp, #0x50]
  05bb8	e59f0060	 ldr         r0, [pc, #0x60]
  05bbc	eb000000	 bl          NKDbgPrintfW
  05bc0	e3a03000	 mov         r3, #0
  05bc4	e58d3030	 str         r3, [sp, #0x30]
  05bc8		 |$LN17@StartRxTra|
  05bc8	e3a03001	 mov         r3, #1
  05bcc	e58d3040	 str         r3, [sp, #0x40]
  05bd0	ea000001	 b           |$LN19@StartRxTra|
  05bd4		 |$LN18@StartRxTra|
  05bd4	e3a03000	 mov         r3, #0
  05bd8	e58d3040	 str         r3, [sp, #0x40]
  05bdc		 |$LN19@StartRxTra|

; 1231 : #endif
; 1232 : 
; 1233 :     if (endPoint != 0)

  05bdc	e59d3050	 ldr         r3, [sp, #0x50]
  05be0	e3530000	 cmp         r3, #0
  05be4	0a00000a	 beq         |$LN1@StartRxTra|

; 1234 :     {
; 1235 :         pEP->usingDma = FALSE;

  05be8	e59d3010	 ldr         r3, [sp, #0x10]
  05bec	e2832028	 add         r2, r3, #0x28
  05bf0	e3a03000	 mov         r3, #0
  05bf4	e5823000	 str         r3, [r2]

; 1236 : 
; 1237 :         /* Enable RX interrupt now we have a transfer for this EP */
; 1238 :         pUsbdRegs->EP_INTMSKSETR = (1 << endPoint) << USB_OTG_RXINT_SHIFT;

  05bf8	e59d2050	 ldr         r2, [sp, #0x50]
  05bfc	e3a03001	 mov         r3, #1
  05c00	e1a03213	 mov         r3, r3, lsl r2
  05c04	e1a02803	 mov         r2, r3, lsl #16
  05c08	e59d300c	 ldr         r3, [sp, #0xC]
  05c0c	e2833030	 add         r3, r3, #0x30
  05c10	e5832000	 str         r2, [r3]
  05c14		 |$LN1@StartRxTra|

; 1239 :     }
; 1240 : }

  05c14	e28dd044	 add         sp, sp, #0x44
  05c18	e89d6000	 ldmia       sp, {sp, lr}
  05c1c	e12fff1e	 bx          lr
  05c20		 |$LN23@StartRxTra|
  05c20		 |$LN24@StartRxTra|
  05c20	00000000	 DCD         |??_C@_1HG@LDGIHLCD@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  05c24		 |$LN25@StartRxTra|
  05c24	00000000	 DCD         |dpCurSettings|
  05c28		 |$M50198|

			 ENDP  ; |StartRxTransfer|

	EXPORT	|??_C@_1GI@DFCKPMLF@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?9?$AA?5?$AAi?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@MBPJKGDM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_AbortTransfer|

  000c8			 AREA	 |.pdata|, PDATA
|$T50219| DCD	|$LN16@UfnPdd_Abo|
	DCD	0x4000bf04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@DFCKPMLF@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?9?$AA?5?$AAi?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAi?$AAn@| DCB "A"
	DCB	0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "M", 0x0, "D", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@MBPJKGDM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "A", 0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  05c28			 AREA	 |.text|, CODE, ARM

  05c28		 |UfnPdd_AbortTransfer| PROC

; 2396 : {

  05c28		 |$LN16@UfnPdd_Abo|
  05c28	e1a0c00d	 mov         r12, sp
  05c2c	e92d0007	 stmdb       sp!, {r0 - r2}
  05c30	e92d5000	 stmdb       sp!, {r12, lr}
  05c34	e24dd02c	 sub         sp, sp, #0x2C
  05c38		 |$M50216|

; 2397 :     DWORD rc = ERROR_SUCCESS;

  05c38	e3a03000	 mov         r3, #0
  05c3c	e58d3004	 str         r3, [sp, #4]

; 2398 :     USBFNPDDCONTEXT *pPdd      = (USBFNPDDCONTEXT *)pvPddContext;

  05c40	e59d3034	 ldr         r3, [sp, #0x34]
  05c44	e58d3010	 str         r3, [sp, #0x10]

; 2399 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  05c48	e59d3010	 ldr         r3, [sp, #0x10]
  05c4c	e283301c	 add         r3, r3, #0x1C
  05c50	e5933000	 ldr         r3, [r3]
  05c54	e58d3008	 str         r3, [sp, #8]

; 2400 :     UINT16 epCtrlReg;
; 2401 : 
; 2402 : #ifdef CPPI_DMA_SUPPORT
; 2403 :     struct dma_controller * pDmaCntrl =
; 2404 :                 (struct dma_controller *)pPdd->pDmaCntrl;

  05c58	e59d3010	 ldr         r3, [sp, #0x10]
  05c5c	e2833c06	 add         r3, r3, #6, 24
  05c60	e283305c	 add         r3, r3, #0x5C
  05c64	e5933000	 ldr         r3, [r3]
  05c68	e58d300c	 str         r3, [sp, #0xC]

; 2405 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 2406 : 
; 2407 :     DEBUGCHK (endpoint < USBD_EP_COUNT);

  05c6c	e59d3038	 ldr         r3, [sp, #0x38]
  05c70	e3530010	 cmp         r3, #0x10
  05c74	2a000002	 bcs         |$LN4@UfnPdd_Abo|
  05c78	e3a03001	 mov         r3, #1
  05c7c	e58d3018	 str         r3, [sp, #0x18]
  05c80	ea000008	 b           |$LN5@UfnPdd_Abo|
  05c84		 |$LN4@UfnPdd_Abo|
  05c84	e3a03c09	 mov         r3, #9, 24
  05c88	e3833067	 orr         r3, r3, #0x67
  05c8c	e59f228c	 ldr         r2, [pc, #0x28C]
  05c90	e59f127c	 ldr         r1, [pc, #0x27C]
  05c94	e59f0280	 ldr         r0, [pc, #0x280]
  05c98	eb000000	 bl          NKDbgPrintfW
  05c9c	e6000010	 __debugbreak_ce
  05ca0	e3a03000	 mov         r3, #0
  05ca4	e58d3018	 str         r3, [sp, #0x18]
  05ca8		 |$LN5@UfnPdd_Abo|

; 2408 :     PRINTMSG(ZONE_PDD_TX|ZONE_PDD_RX|ZONE_PDD_EP0,
; 2409 :             (L"UfnPdd_AbortTransfer: EP %u\r\n", endpoint));

  05ca8	e59f3264	 ldr         r3, [pc, #0x264]
  05cac	e5933440	 ldr         r3, [r3, #0x440]
  05cb0	e2032b02	 and         r2, r3, #2, 22
  05cb4	e59f3258	 ldr         r3, [pc, #0x258]
  05cb8	e5933440	 ldr         r3, [r3, #0x440]
  05cbc	e2033b01	 and         r3, r3, #1, 22
  05cc0	e1822003	 orr         r2, r2, r3
  05cc4	e59f3248	 ldr         r3, [pc, #0x248]
  05cc8	e5933440	 ldr         r3, [r3, #0x440]
  05ccc	e2033c02	 and         r3, r3, #2, 24
  05cd0	e1923003	 orrs        r3, r2, r3
  05cd4	0a000011	 beq         |$LN8@UfnPdd_Abo|
  05cd8	e59f3234	 ldr         r3, [pc, #0x234]
  05cdc	e5933440	 ldr         r3, [r3, #0x440]
  05ce0	e3130801	 tst         r3, #1, 16
  05ce4	0a000005	 beq         |$LN6@UfnPdd_Abo|
  05ce8	e59d1038	 ldr         r1, [sp, #0x38]
  05cec	e59f0224	 ldr         r0, [pc, #0x224]
  05cf0	eb000000	 bl          CeLogMsg
  05cf4	e3a03001	 mov         r3, #1
  05cf8	e58d301c	 str         r3, [sp, #0x1C]
  05cfc	ea000004	 b           |$LN7@UfnPdd_Abo|
  05d00		 |$LN6@UfnPdd_Abo|
  05d00	e59d1038	 ldr         r1, [sp, #0x38]
  05d04	e59f020c	 ldr         r0, [pc, #0x20C]
  05d08	eb000000	 bl          NKDbgPrintfW
  05d0c	e3a03000	 mov         r3, #0
  05d10	e58d301c	 str         r3, [sp, #0x1C]
  05d14		 |$LN7@UfnPdd_Abo|
  05d14	e3a03001	 mov         r3, #1
  05d18	e58d3020	 str         r3, [sp, #0x20]
  05d1c	ea000001	 b           |$LN9@UfnPdd_Abo|
  05d20		 |$LN8@UfnPdd_Abo|
  05d20	e3a03000	 mov         r3, #0
  05d24	e58d3020	 str         r3, [sp, #0x20]
  05d28		 |$LN9@UfnPdd_Abo|

; 2410 : 
; 2411 :     /* Abort the Transfer by Setting the DataEnd Bit */
; 2412 :     LOCK_ENDPOINT (pPdd);

  05d28	e59d3010	 ldr         r3, [sp, #0x10]
  05d2c	e2830e27	 add         r0, r3, #0x27, 28
  05d30	eb000000	 bl          EnterCriticalSection

; 2413 :     epCtrlReg = pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR;

  05d34	e59d3008	 ldr         r3, [sp, #8]
  05d38	e2831c05	 add         r1, r3, #5, 24
  05d3c	e59d2038	 ldr         r2, [sp, #0x38]
  05d40	e3a03010	 mov         r3, #0x10
  05d44	e0030392	 mul         r3, r2, r3
  05d48	e0813003	 add         r3, r1, r3
  05d4c	e2833002	 add         r3, r3, #2
  05d50	e1d330b0	 ldrh        r3, [r3]
  05d54	e1cd30b0	 strh        r3, [sp]

; 2414 :     epCtrlReg |= MGC_M_CSR0_P_DATAEND;

  05d58	e1dd30b0	 ldrh        r3, [sp]
  05d5c	e3833008	 orr         r3, r3, #8
  05d60	e1a03803	 mov         r3, r3, lsl #16
  05d64	e1a03823	 mov         r3, r3, lsr #16
  05d68	e1cd30b0	 strh        r3, [sp]

; 2415 :     pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR = epCtrlReg;

  05d6c	e59d3008	 ldr         r3, [sp, #8]
  05d70	e2831c05	 add         r1, r3, #5, 24
  05d74	e59d2038	 ldr         r2, [sp, #0x38]
  05d78	e3a03010	 mov         r3, #0x10
  05d7c	e0030392	 mul         r3, r2, r3
  05d80	e0813003	 add         r3, r1, r3
  05d84	e2832002	 add         r2, r3, #2
  05d88	e1dd30b0	 ldrh        r3, [sp]
  05d8c	e1c230b0	 strh        r3, [r2]

; 2416 :     UNLOCK_ENDPOINT (pPdd);

  05d90	e59d3010	 ldr         r3, [sp, #0x10]
  05d94	e2830e27	 add         r0, r3, #0x27, 28
  05d98	eb000000	 bl          LeaveCriticalSection

; 2417 : 
; 2418 : #ifdef CPPI_DMA_SUPPORT
; 2419 :     if (endpoint != 0)

  05d9c	e59d3038	 ldr         r3, [sp, #0x38]
  05da0	e3530000	 cmp         r3, #0
  05da4	0a00000c	 beq         |$LN1@UfnPdd_Abo|

; 2420 :         pDmaCntrl->pfnChannelAbort (pPdd->ep[endpoint].pDmaChan);

  05da8	e59d3010	 ldr         r3, [sp, #0x10]
  05dac	e2831fa1	 add         r1, r3, #0xA1, 30
  05db0	e59d2038	 ldr         r2, [sp, #0x38]
  05db4	e3a0303c	 mov         r3, #0x3C
  05db8	e0030392	 mul         r3, r2, r3
  05dbc	e0813003	 add         r3, r1, r3
  05dc0	e283302c	 add         r3, r3, #0x2C
  05dc4	e5930000	 ldr         r0, [r3]
  05dc8	e59d300c	 ldr         r3, [sp, #0xC]
  05dcc	e2833014	 add         r3, r3, #0x14
  05dd0	e5933000	 ldr         r3, [r3]
  05dd4	e1a0e00f	 mov         lr, pc
  05dd8	e12fff13	 bx          r3
  05ddc		 |$LN1@UfnPdd_Abo|

; 2421 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 2422 : 
; 2423 :     /* Finish transfer */
; 2424 :     LOCK_ENDPOINT (pPdd);

  05ddc	e59d3010	 ldr         r3, [sp, #0x10]
  05de0	e2830e27	 add         r0, r3, #0x27, 28
  05de4	eb000000	 bl          EnterCriticalSection

; 2425 :     pPdd->ep[endpoint].pTransfer = NULL;

  05de8	e59d3010	 ldr         r3, [sp, #0x10]
  05dec	e2831fa1	 add         r1, r3, #0xA1, 30
  05df0	e59d2038	 ldr         r2, [sp, #0x38]
  05df4	e3a0303c	 mov         r3, #0x3C
  05df8	e0030392	 mul         r3, r2, r3
  05dfc	e0813003	 add         r3, r1, r3
  05e00	e2832020	 add         r2, r3, #0x20
  05e04	e3a03000	 mov         r3, #0
  05e08	e5823000	 str         r3, [r2]

; 2426 :     pTransfer->dwUsbError = UFN_CANCELED_ERROR;

  05e0c	e59d303c	 ldr         r3, [sp, #0x3C]
  05e10	e2832014	 add         r2, r3, #0x14
  05e14	e3a03c01	 mov         r3, #1, 24
  05e18	e3833001	 orr         r3, r3, #1
  05e1c	e5823000	 str         r3, [r2]

; 2427 :     pPdd->ep[endpoint].epStage = MGC_END0_START;

  05e20	e59d3010	 ldr         r3, [sp, #0x10]
  05e24	e2831fa1	 add         r1, r3, #0xA1, 30
  05e28	e59d2038	 ldr         r2, [sp, #0x38]
  05e2c	e3a0303c	 mov         r3, #0x3C
  05e30	e0030392	 mul         r3, r2, r3
  05e34	e0813003	 add         r3, r1, r3
  05e38	e283201c	 add         r2, r3, #0x1C
  05e3c	e3a03001	 mov         r3, #1
  05e40	e5823000	 str         r3, [r2]

; 2428 :     UNLOCK_ENDPOINT (pPdd);

  05e44	e59d3010	 ldr         r3, [sp, #0x10]
  05e48	e2830e27	 add         r0, r3, #0x27, 28
  05e4c	eb000000	 bl          LeaveCriticalSection

; 2429 : 
; 2430 :     /* Inform MDD that the Current Transfer is Completed */
; 2431 :     PRINTMSG(ZONE_PDD_TX|ZONE_PDD_RX|ZONE_PDD_EP0,
; 2432 :              (L"AbortTransfer: EP %x - indicating complete to MDD\r\n", endpoint));

  05e50	e59f30bc	 ldr         r3, [pc, #0xBC]
  05e54	e5933440	 ldr         r3, [r3, #0x440]
  05e58	e2032b02	 and         r2, r3, #2, 22
  05e5c	e59f30b0	 ldr         r3, [pc, #0xB0]
  05e60	e5933440	 ldr         r3, [r3, #0x440]
  05e64	e2033b01	 and         r3, r3, #1, 22
  05e68	e1822003	 orr         r2, r2, r3
  05e6c	e59f30a0	 ldr         r3, [pc, #0xA0]
  05e70	e5933440	 ldr         r3, [r3, #0x440]
  05e74	e2033c02	 and         r3, r3, #2, 24
  05e78	e1923003	 orrs        r3, r2, r3
  05e7c	0a000011	 beq         |$LN12@UfnPdd_Abo|
  05e80	e59f308c	 ldr         r3, [pc, #0x8C]
  05e84	e5933440	 ldr         r3, [r3, #0x440]
  05e88	e3130801	 tst         r3, #1, 16
  05e8c	0a000005	 beq         |$LN10@UfnPdd_Abo|
  05e90	e59d1038	 ldr         r1, [sp, #0x38]
  05e94	e59f0074	 ldr         r0, [pc, #0x74]
  05e98	eb000000	 bl          CeLogMsg
  05e9c	e3a03001	 mov         r3, #1
  05ea0	e58d3024	 str         r3, [sp, #0x24]
  05ea4	ea000004	 b           |$LN11@UfnPdd_Abo|
  05ea8		 |$LN10@UfnPdd_Abo|
  05ea8	e59d1038	 ldr         r1, [sp, #0x38]
  05eac	e59f005c	 ldr         r0, [pc, #0x5C]
  05eb0	eb000000	 bl          NKDbgPrintfW
  05eb4	e3a03000	 mov         r3, #0
  05eb8	e58d3024	 str         r3, [sp, #0x24]
  05ebc		 |$LN11@UfnPdd_Abo|
  05ebc	e3a03001	 mov         r3, #1
  05ec0	e58d3028	 str         r3, [sp, #0x28]
  05ec4	ea000001	 b           |$LN13@UfnPdd_Abo|
  05ec8		 |$LN12@UfnPdd_Abo|
  05ec8	e3a03000	 mov         r3, #0
  05ecc	e58d3028	 str         r3, [sp, #0x28]
  05ed0		 |$LN13@UfnPdd_Abo|

; 2433 :     pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE,
; 2434 :                         (DWORD)pTransfer);

  05ed0	e59d203c	 ldr         r2, [sp, #0x3C]
  05ed4	e3a01064	 mov         r1, #0x64
  05ed8	e59d3010	 ldr         r3, [sp, #0x10]
  05edc	e2833010	 add         r3, r3, #0x10
  05ee0	e5930000	 ldr         r0, [r3]
  05ee4	e59d3010	 ldr         r3, [sp, #0x10]
  05ee8	e2833014	 add         r3, r3, #0x14
  05eec	e5933000	 ldr         r3, [r3]
  05ef0	e1a0e00f	 mov         lr, pc
  05ef4	e12fff13	 bx          r3

; 2435 : 
; 2436 :     return (rc);

  05ef8	e59d3004	 ldr         r3, [sp, #4]
  05efc	e58d3014	 str         r3, [sp, #0x14]

; 2437 : }

  05f00	e59d0014	 ldr         r0, [sp, #0x14]
  05f04	e28dd02c	 add         sp, sp, #0x2C
  05f08	e89d6000	 ldmia       sp, {sp, lr}
  05f0c	e12fff1e	 bx          lr
  05f10		 |$LN17@UfnPdd_Abo|
  05f10		 |$LN18@UfnPdd_Abo|
  05f10	00000000	 DCD         |??_C@_1GI@DFCKPMLF@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?9?$AA?5?$AAi?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAi?$AAn@|
  05f14		 |$LN19@UfnPdd_Abo|
  05f14	00000000	 DCD         |dpCurSettings|
  05f18		 |$LN20@UfnPdd_Abo|
  05f18	00000000	 DCD         |??_C@_1DM@MBPJKGDM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@|
  05f1c		 |$LN21@UfnPdd_Abo|
  05f1c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  05f20		 |$LN22@UfnPdd_Abo|
  05f20	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  05f24		 |$M50217|

			 ENDP  ; |UfnPdd_AbortTransfer|

	EXPORT	|??_C@_1DM@JEFOJCLP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_StallEndpoint|

  000d0			 AREA	 |.pdata|, PDATA
|$T50237| DCD	|$LN15@UfnPdd_Sta|
	DCD	0x40009204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@JEFOJCLP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  05f24			 AREA	 |.text|, CODE, ARM

  05f24		 |UfnPdd_StallEndpoint| PROC

; 2457 : {

  05f24		 |$LN15@UfnPdd_Sta|
  05f24	e1a0c00d	 mov         r12, sp
  05f28	e92d0003	 stmdb       sp!, {r0, r1}
  05f2c	e92d5000	 stmdb       sp!, {r12, lr}
  05f30	e24dd024	 sub         sp, sp, #0x24
  05f34		 |$M50234|

; 2458 :     DWORD rc = ERROR_SUCCESS;

  05f34	e3a03000	 mov         r3, #0
  05f38	e58d3000	 str         r3, [sp]

; 2459 : 
; 2460 :     USBFNPDDCONTEXT *pPdd      = (USBFNPDDCONTEXT *)pvPddContext;

  05f3c	e59d302c	 ldr         r3, [sp, #0x2C]
  05f40	e58d3010	 str         r3, [sp, #0x10]

; 2461 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  05f44	e59d3010	 ldr         r3, [sp, #0x10]
  05f48	e283301c	 add         r3, r3, #0x1C
  05f4c	e5933000	 ldr         r3, [r3]
  05f50	e58d3008	 str         r3, [sp, #8]

; 2462 :     volatile UINT16 *pepCtrlReg;
; 2463 :     UINT16  epCtrlVal;
; 2464 :     UINT16  epStallBit;
; 2465 : 
; 2466 :     DEBUGCHK (endpoint < USBD_EP_COUNT);

  05f54	e59d3030	 ldr         r3, [sp, #0x30]
  05f58	e3530010	 cmp         r3, #0x10
  05f5c	2a000002	 bcs         |$LN7@UfnPdd_Sta|
  05f60	e3a03001	 mov         r3, #1
  05f64	e58d3018	 str         r3, [sp, #0x18]
  05f68	ea000008	 b           |$LN8@UfnPdd_Sta|
  05f6c		 |$LN7@UfnPdd_Sta|
  05f6c	e3a03c09	 mov         r3, #9, 24
  05f70	e38330a2	 orr         r3, r3, #0xA2
  05f74	e59f21ec	 ldr         r2, [pc, #0x1EC]
  05f78	e59f11e0	 ldr         r1, [pc, #0x1E0]
  05f7c	e59f01e0	 ldr         r0, [pc, #0x1E0]
  05f80	eb000000	 bl          NKDbgPrintfW
  05f84	e6000010	 __debugbreak_ce
  05f88	e3a03000	 mov         r3, #0
  05f8c	e58d3018	 str         r3, [sp, #0x18]
  05f90		 |$LN8@UfnPdd_Sta|

; 2467 : 
; 2468 :     PRINTMSG(ZONE_PDD_TX|ZONE_PDD_RX|ZONE_PDD_EP0,
; 2469 :         (L"UfnPdd_StallEndpoint: EP %d\r\n", endpoint));

  05f90	e59f31c8	 ldr         r3, [pc, #0x1C8]
  05f94	e5933440	 ldr         r3, [r3, #0x440]
  05f98	e2032b02	 and         r2, r3, #2, 22
  05f9c	e59f31bc	 ldr         r3, [pc, #0x1BC]
  05fa0	e5933440	 ldr         r3, [r3, #0x440]
  05fa4	e2033b01	 and         r3, r3, #1, 22
  05fa8	e1822003	 orr         r2, r2, r3
  05fac	e59f31ac	 ldr         r3, [pc, #0x1AC]
  05fb0	e5933440	 ldr         r3, [r3, #0x440]
  05fb4	e2033c02	 and         r3, r3, #2, 24
  05fb8	e1923003	 orrs        r3, r2, r3
  05fbc	0a000011	 beq         |$LN11@UfnPdd_Sta|
  05fc0	e59f3198	 ldr         r3, [pc, #0x198]
  05fc4	e5933440	 ldr         r3, [r3, #0x440]
  05fc8	e3130801	 tst         r3, #1, 16
  05fcc	0a000005	 beq         |$LN9@UfnPdd_Sta|
  05fd0	e59d1030	 ldr         r1, [sp, #0x30]
  05fd4	e59f0180	 ldr         r0, [pc, #0x180]
  05fd8	eb000000	 bl          CeLogMsg
  05fdc	e3a03001	 mov         r3, #1
  05fe0	e58d301c	 str         r3, [sp, #0x1C]
  05fe4	ea000004	 b           |$LN10@UfnPdd_Sta|
  05fe8		 |$LN9@UfnPdd_Sta|
  05fe8	e59d1030	 ldr         r1, [sp, #0x30]
  05fec	e59f0168	 ldr         r0, [pc, #0x168]
  05ff0	eb000000	 bl          NKDbgPrintfW
  05ff4	e3a03000	 mov         r3, #0
  05ff8	e58d301c	 str         r3, [sp, #0x1C]
  05ffc		 |$LN10@UfnPdd_Sta|
  05ffc	e3a03001	 mov         r3, #1
  06000	e58d3020	 str         r3, [sp, #0x20]
  06004	ea000001	 b           |$LN12@UfnPdd_Sta|
  06008		 |$LN11@UfnPdd_Sta|
  06008	e3a03000	 mov         r3, #0
  0600c	e58d3020	 str         r3, [sp, #0x20]
  06010		 |$LN12@UfnPdd_Sta|

; 2470 : 
; 2471 :     /* Critical Section Support */
; 2472 :     LOCK_ENDPOINT (pPdd);

  06010	e59d3010	 ldr         r3, [sp, #0x10]
  06014	e2830e27	 add         r0, r3, #0x27, 28
  06018	eb000000	 bl          EnterCriticalSection

; 2473 : 
; 2474 :     /* First check which Register is to be Read */
; 2475 :     if (endpoint == 0)

  0601c	e59d3030	 ldr         r3, [sp, #0x30]
  06020	e3530000	 cmp         r3, #0
  06024	1a00000e	 bne         |$LN4@UfnPdd_Sta|

; 2476 :     {
; 2477 :         pepCtrlReg = &pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR;

  06028	e59d3008	 ldr         r3, [sp, #8]
  0602c	e2831c05	 add         r1, r3, #5, 24
  06030	e59d2030	 ldr         r2, [sp, #0x30]
  06034	e3a03010	 mov         r3, #0x10
  06038	e0030392	 mul         r3, r2, r3
  0603c	e0813003	 add         r3, r1, r3
  06040	e2833002	 add         r3, r3, #2
  06044	e58d3004	 str         r3, [sp, #4]

; 2478 :         epStallBit = MGC_M_CSR0_P_SENDSTALL;

  06048	e3a03020	 mov         r3, #0x20
  0604c	e1cd30bc	 strh        r3, [sp, #0xC]

; 2479 :         pPdd->ep[0].epStage = MGC_END0_START;

  06050	e59d3010	 ldr         r3, [sp, #0x10]
  06054	e2832e2a	 add         r2, r3, #0x2A, 28
  06058	e3a03001	 mov         r3, #1
  0605c	e5823000	 str         r3, [r2]

; 2480 :     }
; 2481 :     else

  06060	ea00001e	 b           |$LN3@UfnPdd_Sta|
  06064		 |$LN4@UfnPdd_Sta|

; 2482 :     {
; 2483 :         if (pPdd->ep[endpoint].dirRx == TRUE)

  06064	e59d3010	 ldr         r3, [sp, #0x10]
  06068	e2831fa1	 add         r1, r3, #0xA1, 30
  0606c	e59d2030	 ldr         r2, [sp, #0x30]
  06070	e3a0303c	 mov         r3, #0x3C
  06074	e0030392	 mul         r3, r2, r3
  06078	e0813003	 add         r3, r1, r3
  0607c	e2833010	 add         r3, r3, #0x10
  06080	e5933000	 ldr         r3, [r3]
  06084	e3530001	 cmp         r3, #1
  06088	1a00000a	 bne         |$LN2@UfnPdd_Sta|

; 2484 :         {
; 2485 :             pepCtrlReg = &pUsbdRegs->EPCSR[ endpoint ].PERI_RXCSR;

  0608c	e59d3008	 ldr         r3, [sp, #8]
  06090	e2831c05	 add         r1, r3, #5, 24
  06094	e59d2030	 ldr         r2, [sp, #0x30]
  06098	e3a03010	 mov         r3, #0x10
  0609c	e0030392	 mul         r3, r2, r3
  060a0	e0813003	 add         r3, r1, r3
  060a4	e2833006	 add         r3, r3, #6
  060a8	e58d3004	 str         r3, [sp, #4]

; 2486 :             epStallBit = MGC_M_RXCSR_P_SENDSTALL;

  060ac	e3a03020	 mov         r3, #0x20
  060b0	e1cd30bc	 strh        r3, [sp, #0xC]

; 2487 :         }
; 2488 :         else

  060b4	ea000009	 b           |$LN1@UfnPdd_Sta|
  060b8		 |$LN2@UfnPdd_Sta|

; 2489 :         {
; 2490 :             pepCtrlReg = &pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR;

  060b8	e59d3008	 ldr         r3, [sp, #8]
  060bc	e2831c05	 add         r1, r3, #5, 24
  060c0	e59d2030	 ldr         r2, [sp, #0x30]
  060c4	e3a03010	 mov         r3, #0x10
  060c8	e0030392	 mul         r3, r2, r3
  060cc	e0813003	 add         r3, r1, r3
  060d0	e2833002	 add         r3, r3, #2
  060d4	e58d3004	 str         r3, [sp, #4]

; 2491 :             epStallBit = MGC_M_TXCSR_P_SENDSTALL;

  060d8	e3a03010	 mov         r3, #0x10
  060dc	e1cd30bc	 strh        r3, [sp, #0xC]
  060e0		 |$LN1@UfnPdd_Sta|
  060e0		 |$LN3@UfnPdd_Sta|

; 2492 :         }
; 2493 :     }
; 2494 : 
; 2495 :     epCtrlVal = (*pepCtrlReg);

  060e0	e59d3004	 ldr         r3, [sp, #4]
  060e4	e1d330b0	 ldrh        r3, [r3]
  060e8	e1cd30be	 strh        r3, [sp, #0xE]

; 2496 : 
; 2497 :     /* Stall the EndPoint by Setting the SENDSTALL Bit */
; 2498 :     epCtrlVal |= epStallBit;

  060ec	e1dd30bc	 ldrh        r3, [sp, #0xC]
  060f0	e1a02003	 mov         r2, r3
  060f4	e1dd30be	 ldrh        r3, [sp, #0xE]
  060f8	e1833002	 orr         r3, r3, r2
  060fc	e1a03803	 mov         r3, r3, lsl #16
  06100	e1a03823	 mov         r3, r3, lsr #16
  06104	e1cd30be	 strh        r3, [sp, #0xE]

; 2499 : 
; 2500 :     /* Write back */
; 2501 :     (*pepCtrlReg) = epCtrlVal;

  06108	e1dd20be	 ldrh        r2, [sp, #0xE]
  0610c	e59d3004	 ldr         r3, [sp, #4]
  06110	e1c320b0	 strh        r2, [r3]

; 2502 : 
; 2503 :     pPdd->ep[endpoint].stalled = TRUE;

  06114	e59d3010	 ldr         r3, [sp, #0x10]
  06118	e2831fa1	 add         r1, r3, #0xA1, 30
  0611c	e59d2030	 ldr         r2, [sp, #0x30]
  06120	e3a0303c	 mov         r3, #0x3C
  06124	e0030392	 mul         r3, r2, r3
  06128	e0813003	 add         r3, r1, r3
  0612c	e2832018	 add         r2, r3, #0x18
  06130	e3a03001	 mov         r3, #1
  06134	e5823000	 str         r3, [r2]

; 2504 : 
; 2505 :     UNLOCK_ENDPOINT (pPdd);

  06138	e59d3010	 ldr         r3, [sp, #0x10]
  0613c	e2830e27	 add         r0, r3, #0x27, 28
  06140	eb000000	 bl          LeaveCriticalSection

; 2506 : 
; 2507 :     return (rc);

  06144	e59d3000	 ldr         r3, [sp]
  06148	e58d3014	 str         r3, [sp, #0x14]

; 2508 : }

  0614c	e59d0014	 ldr         r0, [sp, #0x14]
  06150	e28dd024	 add         sp, sp, #0x24
  06154	e89d6000	 ldmia       sp, {sp, lr}
  06158	e12fff1e	 bx          lr
  0615c		 |$LN16@UfnPdd_Sta|
  0615c		 |$LN17@UfnPdd_Sta|
  0615c	00000000	 DCD         |??_C@_1DM@JEFOJCLP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  06160		 |$LN18@UfnPdd_Sta|
  06160	00000000	 DCD         |dpCurSettings|
  06164		 |$LN19@UfnPdd_Sta|
  06164	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  06168		 |$LN20@UfnPdd_Sta|
  06168	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0616c		 |$M50235|

			 ENDP  ; |UfnPdd_StallEndpoint|

	EXPORT	|??_C@_1EG@ECJGIOMN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_ClearEndpointStall|

  000d8			 AREA	 |.pdata|, PDATA
|$T50254| DCD	|$LN15@UfnPdd_Cle|
	DCD	0x4000b404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@ECJGIOMN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "C", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0616c			 AREA	 |.text|, CODE, ARM

  0616c		 |UfnPdd_ClearEndpointStall| PROC

; 2528 : {

  0616c		 |$LN15@UfnPdd_Cle|
  0616c	e1a0c00d	 mov         r12, sp
  06170	e92d0003	 stmdb       sp!, {r0, r1}
  06174	e92d5000	 stmdb       sp!, {r12, lr}
  06178	e24dd024	 sub         sp, sp, #0x24
  0617c		 |$M50251|

; 2529 :     DWORD rc = ERROR_SUCCESS;

  0617c	e3a03000	 mov         r3, #0
  06180	e58d3000	 str         r3, [sp]

; 2530 :     USBFNPDDCONTEXT *pPdd      = (USBFNPDDCONTEXT *)pvPddContext;

  06184	e59d302c	 ldr         r3, [sp, #0x2C]
  06188	e58d3010	 str         r3, [sp, #0x10]

; 2531 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  0618c	e59d3010	 ldr         r3, [sp, #0x10]
  06190	e283301c	 add         r3, r3, #0x1C
  06194	e5933000	 ldr         r3, [r3]
  06198	e58d3004	 str         r3, [sp, #4]

; 2532 : 
; 2533 :     volatile UINT16 *pepReg;
; 2534 :     UINT16  epCtrlVal;
; 2535 : 
; 2536 :     DEBUGCHK (endpoint < USBD_EP_COUNT);

  0619c	e59d3030	 ldr         r3, [sp, #0x30]
  061a0	e3530010	 cmp         r3, #0x10
  061a4	2a000002	 bcs         |$LN7@UfnPdd_Cle|
  061a8	e3a03001	 mov         r3, #1
  061ac	e58d3018	 str         r3, [sp, #0x18]
  061b0	ea000008	 b           |$LN8@UfnPdd_Cle|
  061b4		 |$LN7@UfnPdd_Cle|
  061b4	e3a03c09	 mov         r3, #9, 24
  061b8	e38330e8	 orr         r3, r3, #0xE8
  061bc	e59f2274	 ldr         r2, [pc, #0x274]
  061c0	e59f1268	 ldr         r1, [pc, #0x268]
  061c4	e59f0268	 ldr         r0, [pc, #0x268]
  061c8	eb000000	 bl          NKDbgPrintfW
  061cc	e6000010	 __debugbreak_ce
  061d0	e3a03000	 mov         r3, #0
  061d4	e58d3018	 str         r3, [sp, #0x18]
  061d8		 |$LN8@UfnPdd_Cle|

; 2537 : 
; 2538 :     PRINTMSG(ZONE_PDD_TX|ZONE_PDD_RX|ZONE_PDD_EP0,
; 2539 :         (L"UfnPdd_ClearEndpointStall: EP %u\r\n", endpoint));

  061d8	e59f3250	 ldr         r3, [pc, #0x250]
  061dc	e5933440	 ldr         r3, [r3, #0x440]
  061e0	e2032b02	 and         r2, r3, #2, 22
  061e4	e59f3244	 ldr         r3, [pc, #0x244]
  061e8	e5933440	 ldr         r3, [r3, #0x440]
  061ec	e2033b01	 and         r3, r3, #1, 22
  061f0	e1822003	 orr         r2, r2, r3
  061f4	e59f3234	 ldr         r3, [pc, #0x234]
  061f8	e5933440	 ldr         r3, [r3, #0x440]
  061fc	e2033c02	 and         r3, r3, #2, 24
  06200	e1923003	 orrs        r3, r2, r3
  06204	0a000011	 beq         |$LN11@UfnPdd_Cle|
  06208	e59f3220	 ldr         r3, [pc, #0x220]
  0620c	e5933440	 ldr         r3, [r3, #0x440]
  06210	e3130801	 tst         r3, #1, 16
  06214	0a000005	 beq         |$LN9@UfnPdd_Cle|
  06218	e59d1030	 ldr         r1, [sp, #0x30]
  0621c	e59f0208	 ldr         r0, [pc, #0x208]
  06220	eb000000	 bl          CeLogMsg
  06224	e3a03001	 mov         r3, #1
  06228	e58d301c	 str         r3, [sp, #0x1C]
  0622c	ea000004	 b           |$LN10@UfnPdd_Cle|
  06230		 |$LN9@UfnPdd_Cle|
  06230	e59d1030	 ldr         r1, [sp, #0x30]
  06234	e59f01f0	 ldr         r0, [pc, #0x1F0]
  06238	eb000000	 bl          NKDbgPrintfW
  0623c	e3a03000	 mov         r3, #0
  06240	e58d301c	 str         r3, [sp, #0x1C]
  06244		 |$LN10@UfnPdd_Cle|
  06244	e3a03001	 mov         r3, #1
  06248	e58d3020	 str         r3, [sp, #0x20]
  0624c	ea000001	 b           |$LN12@UfnPdd_Cle|
  06250		 |$LN11@UfnPdd_Cle|
  06250	e3a03000	 mov         r3, #0
  06254	e58d3020	 str         r3, [sp, #0x20]
  06258		 |$LN12@UfnPdd_Cle|

; 2540 : 
; 2541 :     /* Critical Section Support */
; 2542 :     LOCK_ENDPOINT (pPdd);

  06258	e59d3010	 ldr         r3, [sp, #0x10]
  0625c	e2830e27	 add         r0, r3, #0x27, 28
  06260	eb000000	 bl          EnterCriticalSection

; 2543 : 
; 2544 :     /* First check which Register is to be Read */
; 2545 :     if (endpoint == 0)

  06264	e59d3030	 ldr         r3, [sp, #0x30]
  06268	e3530000	 cmp         r3, #0
  0626c	1a000012	 bne         |$LN4@UfnPdd_Cle|

; 2546 :     {
; 2547 :         pepReg = &pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR;

  06270	e59d3004	 ldr         r3, [sp, #4]
  06274	e2831c05	 add         r1, r3, #5, 24
  06278	e59d2030	 ldr         r2, [sp, #0x30]
  0627c	e3a03010	 mov         r3, #0x10
  06280	e0030392	 mul         r3, r2, r3
  06284	e0813003	 add         r3, r1, r3
  06288	e2833002	 add         r3, r3, #2
  0628c	e58d300c	 str         r3, [sp, #0xC]

; 2548 :         epCtrlVal = (*pepReg);

  06290	e59d300c	 ldr         r3, [sp, #0xC]
  06294	e1d330b0	 ldrh        r3, [r3]
  06298	e1cd30b8	 strh        r3, [sp, #8]

; 2549 :         epCtrlVal &= ~(MGC_M_CSR0_P_SENDSTALL | MGC_M_CSR0_P_SENTSTALL);

  0629c	e1dd30b8	 ldrh        r3, [sp, #8]
  062a0	e1a02003	 mov         r2, r3
  062a4	e3e03024	 mvn         r3, #0x24
  062a8	e0023003	 and         r3, r2, r3
  062ac	e1a03803	 mov         r3, r3, lsl #16
  062b0	e1a03823	 mov         r3, r3, lsr #16
  062b4	e1cd30b8	 strh        r3, [sp, #8]

; 2550 :     }
; 2551 :     else

  062b8	ea000046	 b           |$LN3@UfnPdd_Cle|
  062bc		 |$LN4@UfnPdd_Cle|

; 2552 :     {
; 2553 :         /* USB Class Drivers likes to use this EndPoint
; 2554 :          * as Receive EndPoint. For Receive EndPoints, configure
; 2555 :          * the RXCSR Register of the USB Controller, bits
; 2556 :          * */
; 2557 :         if (pPdd->ep[endpoint].dirRx == TRUE)

  062bc	e59d3010	 ldr         r3, [sp, #0x10]
  062c0	e2831fa1	 add         r1, r3, #0xA1, 30
  062c4	e59d2030	 ldr         r2, [sp, #0x30]
  062c8	e3a0303c	 mov         r3, #0x3C
  062cc	e0030392	 mul         r3, r2, r3
  062d0	e0813003	 add         r3, r1, r3
  062d4	e2833010	 add         r3, r3, #0x10
  062d8	e5933000	 ldr         r3, [r3]
  062dc	e3530001	 cmp         r3, #1
  062e0	1a00001e	 bne         |$LN2@UfnPdd_Cle|

; 2558 :         {
; 2559 :             pepReg = &pUsbdRegs->EPCSR[ endpoint ].PERI_RXCSR;

  062e4	e59d3004	 ldr         r3, [sp, #4]
  062e8	e2831c05	 add         r1, r3, #5, 24
  062ec	e59d2030	 ldr         r2, [sp, #0x30]
  062f0	e3a03010	 mov         r3, #0x10
  062f4	e0030392	 mul         r3, r2, r3
  062f8	e0813003	 add         r3, r1, r3
  062fc	e2833006	 add         r3, r3, #6
  06300	e58d300c	 str         r3, [sp, #0xC]

; 2560 :             epCtrlVal = (*pepReg);

  06304	e59d300c	 ldr         r3, [sp, #0xC]
  06308	e1d330b0	 ldrh        r3, [r3]
  0630c	e1cd30b8	 strh        r3, [sp, #8]

; 2561 :             epCtrlVal &= ~(MGC_M_RXCSR_P_SENDSTALL | MGC_M_RXCSR_P_SENTSTALL);

  06310	e1dd30b8	 ldrh        r3, [sp, #8]
  06314	e1a02003	 mov         r2, r3
  06318	e3e03060	 mvn         r3, #0x60
  0631c	e0023003	 and         r3, r2, r3
  06320	e1a03803	 mov         r3, r3, lsl #16
  06324	e1a03823	 mov         r3, r3, lsr #16
  06328	e1cd30b8	 strh        r3, [sp, #8]

; 2562 :             epCtrlVal &= ~MGC_M_RXCSR_P_WZC_BITS;

  0632c	e1dd30b8	 ldrh        r3, [sp, #8]
  06330	e1a02003	 mov         r2, r3
  06334	e3e03045	 mvn         r3, #0x45
  06338	e0023003	 and         r3, r2, r3
  0633c	e1a03803	 mov         r3, r3, lsl #16
  06340	e1a03823	 mov         r3, r3, lsr #16
  06344	e1cd30b8	 strh        r3, [sp, #8]

; 2563 :             epCtrlVal |= MGC_M_RXCSR_CLRDATATOG;

  06348	e1dd30b8	 ldrh        r3, [sp, #8]
  0634c	e3833080	 orr         r3, r3, #0x80
  06350	e1a03803	 mov         r3, r3, lsl #16
  06354	e1a03823	 mov         r3, r3, lsr #16
  06358	e1cd30b8	 strh        r3, [sp, #8]

; 2564 :         }
; 2565 :         else

  0635c	ea00001d	 b           |$LN1@UfnPdd_Cle|
  06360		 |$LN2@UfnPdd_Cle|

; 2566 :         {
; 2567 :             pepReg = &pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR;

  06360	e59d3004	 ldr         r3, [sp, #4]
  06364	e2831c05	 add         r1, r3, #5, 24
  06368	e59d2030	 ldr         r2, [sp, #0x30]
  0636c	e3a03010	 mov         r3, #0x10
  06370	e0030392	 mul         r3, r2, r3
  06374	e0813003	 add         r3, r1, r3
  06378	e2833002	 add         r3, r3, #2
  0637c	e58d300c	 str         r3, [sp, #0xC]

; 2568 :             epCtrlVal = (*pepReg);

  06380	e59d300c	 ldr         r3, [sp, #0xC]
  06384	e1d330b0	 ldrh        r3, [r3]
  06388	e1cd30b8	 strh        r3, [sp, #8]

; 2569 :             epCtrlVal &= ~(MGC_M_TXCSR_P_SENDSTALL | MGC_M_TXCSR_P_SENTSTALL);

  0638c	e1dd30b8	 ldrh        r3, [sp, #8]
  06390	e1a02003	 mov         r2, r3
  06394	e3e03030	 mvn         r3, #0x30
  06398	e0023003	 and         r3, r2, r3
  0639c	e1a03803	 mov         r3, r3, lsl #16
  063a0	e1a03823	 mov         r3, r3, lsr #16
  063a4	e1cd30b8	 strh        r3, [sp, #8]

; 2570 :             epCtrlVal &= ~MGC_M_TXCSR_P_WZC_BITS;

  063a8	e1dd30b8	 ldrh        r3, [sp, #8]
  063ac	e1a02003	 mov         r2, r3
  063b0	e3e030a6	 mvn         r3, #0xA6
  063b4	e0023003	 and         r3, r2, r3
  063b8	e1a03803	 mov         r3, r3, lsl #16
  063bc	e1a03823	 mov         r3, r3, lsr #16
  063c0	e1cd30b8	 strh        r3, [sp, #8]

; 2571 :             epCtrlVal |= MGC_M_TXCSR_CLRDATATOG;

  063c4	e1dd30b8	 ldrh        r3, [sp, #8]
  063c8	e3833040	 orr         r3, r3, #0x40
  063cc	e1a03803	 mov         r3, r3, lsl #16
  063d0	e1a03823	 mov         r3, r3, lsr #16
  063d4	e1cd30b8	 strh        r3, [sp, #8]
  063d8		 |$LN1@UfnPdd_Cle|
  063d8		 |$LN3@UfnPdd_Cle|

; 2572 :         }
; 2573 :     }
; 2574 : 
; 2575 :     /* Clear SENDSTALL and SENTSTALL to bring the EP out of Stall Condition */
; 2576 :     (*pepReg) = epCtrlVal;

  063d8	e1dd20b8	 ldrh        r2, [sp, #8]
  063dc	e59d300c	 ldr         r3, [sp, #0xC]
  063e0	e1c320b0	 strh        r2, [r3]

; 2577 : 
; 2578 :     pPdd->ep[endpoint].stalled = FALSE;

  063e4	e59d3010	 ldr         r3, [sp, #0x10]
  063e8	e2831fa1	 add         r1, r3, #0xA1, 30
  063ec	e59d2030	 ldr         r2, [sp, #0x30]
  063f0	e3a0303c	 mov         r3, #0x3C
  063f4	e0030392	 mul         r3, r2, r3
  063f8	e0813003	 add         r3, r1, r3
  063fc	e2832018	 add         r2, r3, #0x18
  06400	e3a03000	 mov         r3, #0
  06404	e5823000	 str         r3, [r2]

; 2579 : 
; 2580 :     /* leave CriticalSection */
; 2581 :     UNLOCK_ENDPOINT (pPdd);

  06408	e59d3010	 ldr         r3, [sp, #0x10]
  0640c	e2830e27	 add         r0, r3, #0x27, 28
  06410	eb000000	 bl          LeaveCriticalSection

; 2582 : 
; 2583 :     return (rc);

  06414	e59d3000	 ldr         r3, [sp]
  06418	e58d3014	 str         r3, [sp, #0x14]

; 2584 : }

  0641c	e59d0014	 ldr         r0, [sp, #0x14]
  06420	e28dd024	 add         sp, sp, #0x24
  06424	e89d6000	 ldmia       sp, {sp, lr}
  06428	e12fff1e	 bx          lr
  0642c		 |$LN16@UfnPdd_Cle|
  0642c		 |$LN17@UfnPdd_Cle|
  0642c	00000000	 DCD         |??_C@_1EG@ECJGIOMN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu@|
  06430		 |$LN18@UfnPdd_Cle|
  06430	00000000	 DCD         |dpCurSettings|
  06434		 |$LN19@UfnPdd_Cle|
  06434	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  06438		 |$LN20@UfnPdd_Cle|
  06438	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0643c		 |$M50252|

			 ENDP  ; |UfnPdd_ClearEndpointStall|

	EXPORT	|??_C@_1EC@ONLNDFJA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IsEndpointHalted|

  000e0			 AREA	 |.pdata|, PDATA
|$T50273| DCD	|$LN13@UfnPdd_IsE|
	DCD	0x40006004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@ONLNDFJA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "l", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0643c			 AREA	 |.text|, CODE, ARM

  0643c		 |UfnPdd_IsEndpointHalted| PROC

; 2606 : {

  0643c		 |$LN13@UfnPdd_IsE|
  0643c	e1a0c00d	 mov         r12, sp
  06440	e92d0007	 stmdb       sp!, {r0 - r2}
  06444	e92d5000	 stmdb       sp!, {r12, lr}
  06448	e24dd01c	 sub         sp, sp, #0x1C
  0644c		 |$M50270|

; 2607 :     DWORD rc = ERROR_SUCCESS;

  0644c	e3a03000	 mov         r3, #0
  06450	e58d3000	 str         r3, [sp]

; 2608 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pvPddContext;

  06454	e59d3024	 ldr         r3, [sp, #0x24]
  06458	e58d3004	 str         r3, [sp, #4]

; 2609 : 
; 2610 :     PRINTMSG(ZONE_PDD_TX|ZONE_PDD_RX|ZONE_PDD_EP0,
; 2611 :              (L"UfnPdd_IsEndpointHalted: EP %u\r\n", endpoint));

  0645c	e59f314c	 ldr         r3, [pc, #0x14C]
  06460	e5933440	 ldr         r3, [r3, #0x440]
  06464	e2032b02	 and         r2, r3, #2, 22
  06468	e59f3140	 ldr         r3, [pc, #0x140]
  0646c	e5933440	 ldr         r3, [r3, #0x440]
  06470	e2033b01	 and         r3, r3, #1, 22
  06474	e1822003	 orr         r2, r2, r3
  06478	e59f3130	 ldr         r3, [pc, #0x130]
  0647c	e5933440	 ldr         r3, [r3, #0x440]
  06480	e2033c02	 and         r3, r3, #2, 24
  06484	e1923003	 orrs        r3, r2, r3
  06488	0a000011	 beq         |$LN5@UfnPdd_IsE|
  0648c	e59f311c	 ldr         r3, [pc, #0x11C]
  06490	e5933440	 ldr         r3, [r3, #0x440]
  06494	e3130801	 tst         r3, #1, 16
  06498	0a000005	 beq         |$LN3@UfnPdd_IsE|
  0649c	e59d1028	 ldr         r1, [sp, #0x28]
  064a0	e59f0110	 ldr         r0, [pc, #0x110]
  064a4	eb000000	 bl          CeLogMsg
  064a8	e3a03001	 mov         r3, #1
  064ac	e58d300c	 str         r3, [sp, #0xC]
  064b0	ea000004	 b           |$LN4@UfnPdd_IsE|
  064b4		 |$LN3@UfnPdd_IsE|
  064b4	e59d1028	 ldr         r1, [sp, #0x28]
  064b8	e59f00f8	 ldr         r0, [pc, #0xF8]
  064bc	eb000000	 bl          NKDbgPrintfW
  064c0	e3a03000	 mov         r3, #0
  064c4	e58d300c	 str         r3, [sp, #0xC]
  064c8		 |$LN4@UfnPdd_IsE|
  064c8	e3a03001	 mov         r3, #1
  064cc	e58d3010	 str         r3, [sp, #0x10]
  064d0	ea000001	 b           |$LN6@UfnPdd_IsE|
  064d4		 |$LN5@UfnPdd_IsE|
  064d4	e3a03000	 mov         r3, #0
  064d8	e58d3010	 str         r3, [sp, #0x10]
  064dc		 |$LN6@UfnPdd_IsE|

; 2612 : 
; 2613 :     DEBUGCHK (endpoint < USBD_EP_COUNT);

  064dc	e59d3028	 ldr         r3, [sp, #0x28]
  064e0	e3530010	 cmp         r3, #0x10
  064e4	2a000002	 bcs         |$LN7@UfnPdd_IsE|
  064e8	e3a03001	 mov         r3, #1
  064ec	e58d3014	 str         r3, [sp, #0x14]
  064f0	ea000008	 b           |$LN8@UfnPdd_IsE|
  064f4		 |$LN7@UfnPdd_IsE|
  064f4	e3a03c0a	 mov         r3, #0xA, 24
  064f8	e3833035	 orr         r3, r3, #0x35
  064fc	e59f20b0	 ldr         r2, [pc, #0xB0]
  06500	e59f10a8	 ldr         r1, [pc, #0xA8]
  06504	e59f00a0	 ldr         r0, [pc, #0xA0]
  06508	eb000000	 bl          NKDbgPrintfW
  0650c	e6000010	 __debugbreak_ce
  06510	e3a03000	 mov         r3, #0
  06514	e58d3014	 str         r3, [sp, #0x14]
  06518		 |$LN8@UfnPdd_IsE|

; 2614 :     DEBUGCHK (pHalted != NULL);

  06518	e59d302c	 ldr         r3, [sp, #0x2C]
  0651c	e3530000	 cmp         r3, #0
  06520	0a000002	 beq         |$LN9@UfnPdd_IsE|
  06524	e3a03001	 mov         r3, #1
  06528	e58d3018	 str         r3, [sp, #0x18]
  0652c	ea000008	 b           |$LN10@UfnPdd_IsE|
  06530		 |$LN9@UfnPdd_IsE|
  06530	e3a03c0a	 mov         r3, #0xA, 24
  06534	e3833036	 orr         r3, r3, #0x36
  06538	e59f2074	 ldr         r2, [pc, #0x74]
  0653c	e59f106c	 ldr         r1, [pc, #0x6C]
  06540	e59f0064	 ldr         r0, [pc, #0x64]
  06544	eb000000	 bl          NKDbgPrintfW
  06548	e6000010	 __debugbreak_ce
  0654c	e3a03000	 mov         r3, #0
  06550	e58d3018	 str         r3, [sp, #0x18]
  06554		 |$LN10@UfnPdd_IsE|

; 2615 : 
; 2616 :     LOCK_ENDPOINT (pPdd);

  06554	e59d3004	 ldr         r3, [sp, #4]
  06558	e2830e27	 add         r0, r3, #0x27, 28
  0655c	eb000000	 bl          EnterCriticalSection

; 2617 : 
; 2618 :     /* There is no HALT Bit in the USB Controller EP Status Registers
; 2619 :      * in the SOC. However, the driver tries to maintain the
; 2620 :      * Stall status for each EndPoint that it operates upon. We
; 2621 :      * will use this status flag to detect whether the EndPoint
; 2622 :      * is currently Active or Halted.
; 2623 :      */
; 2624 :     *pHalted = pPdd->ep[endpoint].stalled ;

  06560	e59d3004	 ldr         r3, [sp, #4]
  06564	e2831fa1	 add         r1, r3, #0xA1, 30
  06568	e59d2028	 ldr         r2, [sp, #0x28]
  0656c	e3a0303c	 mov         r3, #0x3C
  06570	e0030392	 mul         r3, r2, r3
  06574	e0813003	 add         r3, r1, r3
  06578	e2833018	 add         r3, r3, #0x18
  0657c	e5932000	 ldr         r2, [r3]
  06580	e59d302c	 ldr         r3, [sp, #0x2C]
  06584	e5832000	 str         r2, [r3]

; 2625 :     UNLOCK_ENDPOINT (pPdd);

  06588	e59d3004	 ldr         r3, [sp, #4]
  0658c	e2830e27	 add         r0, r3, #0x27, 28
  06590	eb000000	 bl          LeaveCriticalSection

; 2626 : 
; 2627 :     return (rc);

  06594	e59d3000	 ldr         r3, [sp]
  06598	e58d3008	 str         r3, [sp, #8]

; 2628 : 
; 2629 : }

  0659c	e59d0008	 ldr         r0, [sp, #8]
  065a0	e28dd01c	 add         sp, sp, #0x1C
  065a4	e89d6000	 ldmia       sp, {sp, lr}
  065a8	e12fff1e	 bx          lr
  065ac		 |$LN14@UfnPdd_IsE|
  065ac		 |$LN15@UfnPdd_IsE|
  065ac	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  065b0		 |$LN16@UfnPdd_IsE|
  065b0	00000000	 DCD         |dpCurSettings|
  065b4		 |$LN17@UfnPdd_IsE|
  065b4	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  065b8		 |$LN18@UfnPdd_IsE|
  065b8	00000000	 DCD         |??_C@_1EC@ONLNDFJA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6@|
  065bc		 |$M50271|

			 ENDP  ; |UfnPdd_IsEndpointHalted|

	EXPORT	|??_C@_1IK@PPDOGEGL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@JGELNEBN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_SendControlStatusHandshake|
	IMPORT	|UsbPddEp0IntrHandler|

  000e8			 AREA	 |.pdata|, PDATA
|$T50294| DCD	|$LN25@UfnPdd_Sen|
	DCD	0x4000eb04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@PPDOGEGL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "p", 0x0, " ", 0x0, "p", 0x0, "k"
	DCB	0x0, "t", 0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "M", 0x0, "D", 0x0, "D", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@JGELNEBN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  065bc			 AREA	 |.text|, CODE, ARM

  065bc		 |UfnPdd_SendControlStatusHandshake| PROC

; 2651 : {

  065bc		 |$LN25@UfnPdd_Sen|
  065bc	e1a0c00d	 mov         r12, sp
  065c0	e92d0003	 stmdb       sp!, {r0, r1}
  065c4	e92d5000	 stmdb       sp!, {r12, lr}
  065c8	e24dd030	 sub         sp, sp, #0x30
  065cc		 |$M50291|

; 2652 :     DWORD rc = ERROR_SUCCESS;

  065cc	e3a03000	 mov         r3, #0
  065d0	e58d3000	 str         r3, [sp]

; 2653 : 
; 2654 :     USBFNPDDCONTEXT *pPdd       = (USBFNPDDCONTEXT *)pvPddContext;

  065d4	e59d3038	 ldr         r3, [sp, #0x38]
  065d8	e58d3014	 str         r3, [sp, #0x14]

; 2655 :     CSL_UsbRegs     *pUsbdRegs  = pPdd->pUsbdRegs;

  065dc	e59d3014	 ldr         r3, [sp, #0x14]
  065e0	e283301c	 add         r3, r3, #0x1C
  065e4	e5933000	 ldr         r3, [r3]
  065e8	e58d300c	 str         r3, [sp, #0xC]

; 2656 :     UsbFnEp         *pEP        = &pPdd->ep[endpoint];

  065ec	e59d3014	 ldr         r3, [sp, #0x14]
  065f0	e2831fa1	 add         r1, r3, #0xA1, 30
  065f4	e59d203c	 ldr         r2, [sp, #0x3C]
  065f8	e3a0303c	 mov         r3, #0x3C
  065fc	e0030392	 mul         r3, r2, r3
  06600	e0813003	 add         r3, r1, r3
  06604	e58d3010	 str         r3, [sp, #0x10]

; 2657 :     UINT16  ep0CsrReg;
; 2658 :     volatile UINT16 *pepCtrlReg;
; 2659 : 
; 2660 :     /* Handshake control for EP0 RX transfers is implemented.  Class drivers
; 2661 :        can perform EP stall, deinit and init calls between receiving the 
; 2662 :        setup packet and calling this handshake fn so the EP0 setup RX transfer
; 2663 :        is not completed until this handshake is performed.  This prevents the 
; 2664 :        host from sending packets on the other endpoints.
; 2665 :        The EP0 RX handshake is performed by delaying setting of the SVDRXPKTRDY 
; 2666 :        and DATAEND bits in the CSR.  This delays the STATUS IN part of the the 
; 2667 :        transfer and causes the controller to NAK the host until we are ready.
; 2668 :        Note: Delaying setting of just DATAEND causes a SETUPEND error.
; 2669 :      */
; 2670 : 
; 2671 :     PRINTMSG(ZONE_PDD_EP0,
; 2672 :              (L"UfnPdd_SendControlStatusHandshake: EP %d\r\n", endpoint));

  06608	e59f3348	 ldr         r3, [pc, #0x348]
  0660c	e5933440	 ldr         r3, [r3, #0x440]
  06610	e3130c02	 tst         r3, #2, 24
  06614	0a000011	 beq         |$LN15@UfnPdd_Sen|
  06618	e59f3338	 ldr         r3, [pc, #0x338]
  0661c	e5933440	 ldr         r3, [r3, #0x440]
  06620	e3130801	 tst         r3, #1, 16
  06624	0a000005	 beq         |$LN13@UfnPdd_Sen|
  06628	e59d103c	 ldr         r1, [sp, #0x3C]
  0662c	e59f0330	 ldr         r0, [pc, #0x330]
  06630	eb000000	 bl          CeLogMsg
  06634	e3a03001	 mov         r3, #1
  06638	e58d301c	 str         r3, [sp, #0x1C]
  0663c	ea000004	 b           |$LN14@UfnPdd_Sen|
  06640		 |$LN13@UfnPdd_Sen|
  06640	e59d103c	 ldr         r1, [sp, #0x3C]
  06644	e59f0318	 ldr         r0, [pc, #0x318]
  06648	eb000000	 bl          NKDbgPrintfW
  0664c	e3a03000	 mov         r3, #0
  06650	e58d301c	 str         r3, [sp, #0x1C]
  06654		 |$LN14@UfnPdd_Sen|
  06654	e3a03001	 mov         r3, #1
  06658	e58d3020	 str         r3, [sp, #0x20]
  0665c	ea000001	 b           |$LN16@UfnPdd_Sen|
  06660		 |$LN15@UfnPdd_Sen|
  06660	e3a03000	 mov         r3, #0
  06664	e58d3020	 str         r3, [sp, #0x20]
  06668		 |$LN16@UfnPdd_Sen|

; 2673 : 
; 2674 :     LOCK_ENDPOINT (pPdd);

  06668	e59d3014	 ldr         r3, [sp, #0x14]
  0666c	e2830e27	 add         r0, r3, #0x27, 28
  06670	eb000000	 bl          EnterCriticalSection

; 2675 : 
; 2676 :     /* May have just received a new setup so check EP 0 stage */
; 2677 :     if (pEP->epStage == MGC_END0_START)

  06674	e59d3010	 ldr         r3, [sp, #0x10]
  06678	e283301c	 add         r3, r3, #0x1C
  0667c	e5933000	 ldr         r3, [r3]
  06680	e3530001	 cmp         r3, #1
  06684	1a00006b	 bne         |$LN10@UfnPdd_Sen|

; 2678 :     {
; 2679 :         /* Deliver a queued setup packet */
; 2680 :         if (pPdd->fHasQueuedSetupRequest)

  06688	e59d3014	 ldr         r3, [sp, #0x14]
  0668c	e2833e65	 add         r3, r3, #0x65, 28
  06690	e5933000	 ldr         r3, [r3]
  06694	e3530000	 cmp         r3, #0
  06698	0a00005d	 beq         |$LN9@UfnPdd_Sen|

; 2681 :         {
; 2682 :             pPdd->fHasQueuedSetupRequest = FALSE;

  0669c	e59d3014	 ldr         r3, [sp, #0x14]
  066a0	e2832e65	 add         r2, r3, #0x65, 28
  066a4	e3a03000	 mov         r3, #0
  066a8	e5823000	 str         r3, [r2]

; 2683 : 
; 2684 :             if (pPdd->queuedSetupRequest.wLength == 0)

  066ac	e59d3014	 ldr         r3, [sp, #0x14]
  066b0	e2833c06	 add         r3, r3, #6, 24
  066b4	e283105a	 add         r1, r3, #0x5A
  066b8	e5d13001	 ldrb        r3, [r1, #1]
  066bc	e1a03403	 mov         r3, r3, lsl #8
  066c0	e1a02803	 mov         r2, r3, lsl #16
  066c4	e1a02822	 mov         r2, r2, lsr #16
  066c8	e5d13000	 ldrb        r3, [r1]
  066cc	e1833002	 orr         r3, r3, r2
  066d0	e3530000	 cmp         r3, #0
  066d4	1a000000	 bne         |$LN8@UfnPdd_Sen|
  066d8	ea00000e	 b           |$LN7@UfnPdd_Sen|
  066dc		 |$LN8@UfnPdd_Sen|

; 2685 :             {
; 2686 :                 /* Already done DATAEND when setup received */
; 2687 :             }
; 2688 :             else if ((pPdd->queuedSetupRequest.bmRequestType & USB_ENDPOINT_DIRECTION_MASK) != 0)

  066dc	e59d3014	 ldr         r3, [sp, #0x14]
  066e0	e2833c06	 add         r3, r3, #6, 24
  066e4	e2833054	 add         r3, r3, #0x54
  066e8	e5d33000	 ldrb        r3, [r3]
  066ec	e3130080	 tst         r3, #0x80
  066f0	0a000004	 beq         |$LN6@UfnPdd_Sen|

; 2689 :             {
; 2690 :                 pEP->epStage = MGC_END0_STAGE_TX;

  066f4	e59d3010	 ldr         r3, [sp, #0x10]
  066f8	e283201c	 add         r2, r3, #0x1C
  066fc	e3a03002	 mov         r3, #2
  06700	e5823000	 str         r3, [r2]

; 2691 :             }
; 2692 :             else

  06704	ea000003	 b           |$LN5@UfnPdd_Sen|
  06708		 |$LN6@UfnPdd_Sen|

; 2693 :             {
; 2694 :                 pEP->epStage = MGC_END0_STAGE_RX;

  06708	e59d3010	 ldr         r3, [sp, #0x10]
  0670c	e283201c	 add         r2, r3, #0x1C
  06710	e3a03003	 mov         r3, #3
  06714	e5823000	 str         r3, [r2]
  06718		 |$LN5@UfnPdd_Sen|
  06718		 |$LN7@UfnPdd_Sen|

; 2695 :             }
; 2696 : 
; 2697 :             /* Will need another handshake call */
; 2698 :             pPdd->fWaitingForHandshake = TRUE;

  06718	e59d3014	 ldr         r3, [sp, #0x14]
  0671c	e2833c06	 add         r3, r3, #6, 24
  06720	e283204c	 add         r2, r3, #0x4C
  06724	e3a03001	 mov         r3, #1
  06728	e5823000	 str         r3, [r2]

; 2699 : 
; 2700 :             UNLOCK_ENDPOINT (pPdd);

  0672c	e59d3014	 ldr         r3, [sp, #0x14]
  06730	e2830e27	 add         r0, r3, #0x27, 28
  06734	eb000000	 bl          LeaveCriticalSection

; 2701 : 
; 2702 :             PRINTMSG(ZONE_PDD_EP0,
; 2703 :                      (L"UfnPdd_SendControlStatusHandshake: Setup pkt, len %d - sent to MDD\r\n",
; 2704 :                       pPdd->queuedSetupRequest.wLength));

  06738	e59f3218	 ldr         r3, [pc, #0x218]
  0673c	e5933440	 ldr         r3, [r3, #0x440]
  06740	e3130c02	 tst         r3, #2, 24
  06744	0a000021	 beq         |$LN19@UfnPdd_Sen|
  06748	e59f3208	 ldr         r3, [pc, #0x208]
  0674c	e5933440	 ldr         r3, [r3, #0x440]
  06750	e3130801	 tst         r3, #1, 16
  06754	0a00000d	 beq         |$LN17@UfnPdd_Sen|
  06758	e59d3014	 ldr         r3, [sp, #0x14]
  0675c	e2833c06	 add         r3, r3, #6, 24
  06760	e283105a	 add         r1, r3, #0x5A
  06764	e5d13001	 ldrb        r3, [r1, #1]
  06768	e1a03403	 mov         r3, r3, lsl #8
  0676c	e1a02803	 mov         r2, r3, lsl #16
  06770	e1a02822	 mov         r2, r2, lsr #16
  06774	e5d13000	 ldrb        r3, [r1]
  06778	e1831002	 orr         r1, r3, r2
  0677c	e59f01dc	 ldr         r0, [pc, #0x1DC]
  06780	eb000000	 bl          CeLogMsg
  06784	e3a03001	 mov         r3, #1
  06788	e58d3024	 str         r3, [sp, #0x24]
  0678c	ea00000c	 b           |$LN18@UfnPdd_Sen|
  06790		 |$LN17@UfnPdd_Sen|
  06790	e59d3014	 ldr         r3, [sp, #0x14]
  06794	e2833c06	 add         r3, r3, #6, 24
  06798	e283105a	 add         r1, r3, #0x5A
  0679c	e5d13001	 ldrb        r3, [r1, #1]
  067a0	e1a03403	 mov         r3, r3, lsl #8
  067a4	e1a02803	 mov         r2, r3, lsl #16
  067a8	e1a02822	 mov         r2, r2, lsr #16
  067ac	e5d13000	 ldrb        r3, [r1]
  067b0	e1831002	 orr         r1, r3, r2
  067b4	e59f01a4	 ldr         r0, [pc, #0x1A4]
  067b8	eb000000	 bl          NKDbgPrintfW
  067bc	e3a03000	 mov         r3, #0
  067c0	e58d3024	 str         r3, [sp, #0x24]
  067c4		 |$LN18@UfnPdd_Sen|
  067c4	e3a03001	 mov         r3, #1
  067c8	e58d3028	 str         r3, [sp, #0x28]
  067cc	ea000001	 b           |$LN20@UfnPdd_Sen|
  067d0		 |$LN19@UfnPdd_Sen|
  067d0	e3a03000	 mov         r3, #0
  067d4	e58d3028	 str         r3, [sp, #0x28]
  067d8		 |$LN20@UfnPdd_Sen|

; 2705 : 
; 2706 :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SETUP_PACKET, (DWORD)&pPdd->queuedSetupRequest);

  067d8	e59d3014	 ldr         r3, [sp, #0x14]
  067dc	e2833c06	 add         r3, r3, #6, 24
  067e0	e2832054	 add         r2, r3, #0x54
  067e4	e3a01004	 mov         r1, #4
  067e8	e59d3014	 ldr         r3, [sp, #0x14]
  067ec	e2833010	 add         r3, r3, #0x10
  067f0	e5930000	 ldr         r0, [r3]
  067f4	e59d3014	 ldr         r3, [sp, #0x14]
  067f8	e2833014	 add         r3, r3, #0x14
  067fc	e5933000	 ldr         r3, [r3]
  06800	e1a0e00f	 mov         lr, pc
  06804	e12fff13	 bx          r3

; 2707 : 
; 2708 :             // Call Ep0 interrupt handler to check if datas were received in fifo but was not handled 
; 2709 :             // beceause interrupt was skipped due to an already queuing setup packet.
; 2710 :             UsbPddEp0IntrHandler(pPdd);

  06808	e59d0014	 ldr         r0, [sp, #0x14]
  0680c	eb000000	 bl          UsbPddEp0IntrHandler

; 2711 :         }
; 2712 :         else

  06810	ea000007	 b           |$LN4@UfnPdd_Sen|
  06814		 |$LN9@UfnPdd_Sen|

; 2713 :         {
; 2714 :             /* No longer waiting */
; 2715 :             pPdd->fWaitingForHandshake = FALSE;

  06814	e59d3014	 ldr         r3, [sp, #0x14]
  06818	e2833c06	 add         r3, r3, #6, 24
  0681c	e283204c	 add         r2, r3, #0x4C
  06820	e3a03000	 mov         r3, #0
  06824	e5823000	 str         r3, [r2]

; 2716 : 
; 2717 :             UNLOCK_ENDPOINT (pPdd);

  06828	e59d3014	 ldr         r3, [sp, #0x14]
  0682c	e2830e27	 add         r0, r3, #0x27, 28
  06830	eb000000	 bl          LeaveCriticalSection
  06834		 |$LN4@UfnPdd_Sen|

; 2718 :         }

  06834	ea000040	 b           |$LN3@UfnPdd_Sen|
  06838		 |$LN10@UfnPdd_Sen|

; 2719 :     }
; 2720 :     else if (pEP->epStage == MGC_END0_STAGE_STATUSIN)

  06838	e59d3010	 ldr         r3, [sp, #0x10]
  0683c	e283301c	 add         r3, r3, #0x1C
  06840	e5933000	 ldr         r3, [r3]
  06844	e3530004	 cmp         r3, #4
  06848	1a000027	 bne         |$LN2@UfnPdd_Sen|

; 2721 :     {
; 2722 :         /* Complete the RX transfer */
; 2723 :         pepCtrlReg = &pUsbdRegs->EPCSR[0].PERI_TXCSR;

  0684c	e59d300c	 ldr         r3, [sp, #0xC]
  06850	e2833c05	 add         r3, r3, #5, 24
  06854	e2833002	 add         r3, r3, #2
  06858	e58d3004	 str         r3, [sp, #4]

; 2724 :         ep0CsrReg = (*pepCtrlReg);

  0685c	e59d3004	 ldr         r3, [sp, #4]
  06860	e1d330b0	 ldrh        r3, [r3]
  06864	e1cd30b8	 strh        r3, [sp, #8]

; 2725 :         ep0CsrReg |= MGC_M_CSR0_P_DATAEND;

  06868	e1dd30b8	 ldrh        r3, [sp, #8]
  0686c	e3833008	 orr         r3, r3, #8
  06870	e1a03803	 mov         r3, r3, lsl #16
  06874	e1a03823	 mov         r3, r3, lsr #16
  06878	e1cd30b8	 strh        r3, [sp, #8]

; 2726 :         ep0CsrReg &= ~MGC_M_RXCSR_RXPKTRDY;

  0687c	e1dd30b8	 ldrh        r3, [sp, #8]
  06880	e1a02003	 mov         r2, r3
  06884	e3e03001	 mvn         r3, #1
  06888	e0023003	 and         r3, r2, r3
  0688c	e1a03803	 mov         r3, r3, lsl #16
  06890	e1a03823	 mov         r3, r3, lsr #16
  06894	e1cd30b8	 strh        r3, [sp, #8]

; 2727 :         ep0CsrReg |= MGC_M_CSR0_P_SVDRXPKTRDY;

  06898	e1dd30b8	 ldrh        r3, [sp, #8]
  0689c	e3833040	 orr         r3, r3, #0x40
  068a0	e1a03803	 mov         r3, r3, lsl #16
  068a4	e1a03823	 mov         r3, r3, lsr #16
  068a8	e1cd30b8	 strh        r3, [sp, #8]

; 2728 :         (*pepCtrlReg) = ep0CsrReg;

  068ac	e1dd20b8	 ldrh        r2, [sp, #8]
  068b0	e59d3004	 ldr         r3, [sp, #4]
  068b4	e1c320b0	 strh        r2, [r3]

; 2729 : 
; 2730 :         pEP->epStage = MGC_END0_START;

  068b8	e59d3010	 ldr         r3, [sp, #0x10]
  068bc	e283201c	 add         r2, r3, #0x1C
  068c0	e3a03001	 mov         r3, #1
  068c4	e5823000	 str         r3, [r2]

; 2731 : 
; 2732 :         /* No longer waiting */
; 2733 :         pPdd->fWaitingForHandshake = FALSE;

  068c8	e59d3014	 ldr         r3, [sp, #0x14]
  068cc	e2833c06	 add         r3, r3, #6, 24
  068d0	e283204c	 add         r2, r3, #0x4C
  068d4	e3a03000	 mov         r3, #0
  068d8	e5823000	 str         r3, [r2]

; 2734 : 
; 2735 :         UNLOCK_ENDPOINT (pPdd);

  068dc	e59d3014	 ldr         r3, [sp, #0x14]
  068e0	e2830e27	 add         r0, r3, #0x27, 28
  068e4	eb000000	 bl          LeaveCriticalSection

; 2736 :     }
; 2737 :     else

  068e8	ea000013	 b           |$LN1@UfnPdd_Sen|
  068ec		 |$LN2@UfnPdd_Sen|

; 2738 :     {
; 2739 :         DEBUGCHK(pPdd->fHasQueuedSetupRequest == FALSE);

  068ec	e59d3014	 ldr         r3, [sp, #0x14]
  068f0	e2833e65	 add         r3, r3, #0x65, 28
  068f4	e5933000	 ldr         r3, [r3]
  068f8	e3530000	 cmp         r3, #0
  068fc	1a000002	 bne         |$LN21@UfnPdd_Sen|
  06900	e3a03001	 mov         r3, #1
  06904	e58d302c	 str         r3, [sp, #0x2C]
  06908	ea000008	 b           |$LN22@UfnPdd_Sen|
  0690c		 |$LN21@UfnPdd_Sen|
  0690c	e3a03c0a	 mov         r3, #0xA, 24
  06910	e38330b3	 orr         r3, r3, #0xB3
  06914	e59f2040	 ldr         r2, [pc, #0x40]
  06918	e59f1038	 ldr         r1, [pc, #0x38]
  0691c	e59f0030	 ldr         r0, [pc, #0x30]
  06920	eb000000	 bl          NKDbgPrintfW
  06924	e6000010	 __debugbreak_ce
  06928	e3a03000	 mov         r3, #0
  0692c	e58d302c	 str         r3, [sp, #0x2C]
  06930		 |$LN22@UfnPdd_Sen|

; 2740 : 
; 2741 :         UNLOCK_ENDPOINT (pPdd);

  06930	e59d3014	 ldr         r3, [sp, #0x14]
  06934	e2830e27	 add         r0, r3, #0x27, 28
  06938	eb000000	 bl          LeaveCriticalSection
  0693c		 |$LN1@UfnPdd_Sen|
  0693c		 |$LN3@UfnPdd_Sen|

; 2742 :     }
; 2743 : 
; 2744 :     return (rc);

  0693c	e59d3000	 ldr         r3, [sp]
  06940	e58d3018	 str         r3, [sp, #0x18]

; 2745 : }

  06944	e59d0018	 ldr         r0, [sp, #0x18]
  06948	e28dd030	 add         sp, sp, #0x30
  0694c	e89d6000	 ldmia       sp, {sp, lr}
  06950	e12fff1e	 bx          lr
  06954		 |$LN26@UfnPdd_Sen|
  06954		 |$LN27@UfnPdd_Sen|
  06954	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  06958		 |$LN28@UfnPdd_Sen|
  06958	00000000	 DCD         |dpCurSettings|
  0695c		 |$LN29@UfnPdd_Sen|
  0695c	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  06960		 |$LN30@UfnPdd_Sen|
  06960	00000000	 DCD         |??_C@_1IK@PPDOGEGL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@|
  06964		 |$LN31@UfnPdd_Sen|
  06964	00000000	 DCD         |??_C@_1FG@JGELNEBN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@|
  06968		 |$M50292|

			 ENDP  ; |UfnPdd_SendControlStatusHandshake|

	EXPORT	|??_C@_1DO@NOEECNHH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_InitiateRemoteWakeup|

  000f0			 AREA	 |.pdata|, PDATA
|$T50310| DCD	|$LN9@UfnPdd_Ini|
	DCD	0x40003e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@NOEECNHH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "R", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "t", 0x0, "e", 0x0, "W", 0x0, "a", 0x0, "k", 0x0, "e"
	DCB	0x0, "u", 0x0, "p", 0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  06968			 AREA	 |.text|, CODE, ARM

  06968		 |UfnPdd_InitiateRemoteWakeup| PROC

; 2758 : {

  06968		 |$LN9@UfnPdd_Ini|
  06968	e1a0c00d	 mov         r12, sp
  0696c	e92d0001	 stmdb       sp!, {r0}
  06970	e92d5000	 stmdb       sp!, {r12, lr}
  06974	e24dd018	 sub         sp, sp, #0x18
  06978		 |$M50307|

; 2759 :     DWORD rc = ERROR_SUCCESS;

  06978	e3a03000	 mov         r3, #0
  0697c	e58d3000	 str         r3, [sp]

; 2760 :     USBFNPDDCONTEXT *pPdd       = (USBFNPDDCONTEXT *)pvPddContext;

  06980	e59d3020	 ldr         r3, [sp, #0x20]
  06984	e58d3004	 str         r3, [sp, #4]

; 2761 :     UINT8      powerRegVal;
; 2762 :     PRINTMSG(ZONE_FUNCTION, /*TRUE */
; 2763 :             (L"UfnPdd_InitiateRemoteWakeup:\r\n"));

  06988	e59f30cc	 ldr         r3, [pc, #0xCC]
  0698c	e5933440	 ldr         r3, [r3, #0x440]
  06990	e3130a01	 tst         r3, #1, 20
  06994	0a00000f	 beq         |$LN5@UfnPdd_Ini|
  06998	e59f30bc	 ldr         r3, [pc, #0xBC]
  0699c	e5933440	 ldr         r3, [r3, #0x440]
  069a0	e3130801	 tst         r3, #1, 16
  069a4	0a000004	 beq         |$LN3@UfnPdd_Ini|
  069a8	e59f00a8	 ldr         r0, [pc, #0xA8]
  069ac	eb000000	 bl          CeLogMsg
  069b0	e3a03001	 mov         r3, #1
  069b4	e58d3010	 str         r3, [sp, #0x10]
  069b8	ea000003	 b           |$LN4@UfnPdd_Ini|
  069bc		 |$LN3@UfnPdd_Ini|
  069bc	e59f0094	 ldr         r0, [pc, #0x94]
  069c0	eb000000	 bl          NKDbgPrintfW
  069c4	e3a03000	 mov         r3, #0
  069c8	e58d3010	 str         r3, [sp, #0x10]
  069cc		 |$LN4@UfnPdd_Ini|
  069cc	e3a03001	 mov         r3, #1
  069d0	e58d3014	 str         r3, [sp, #0x14]
  069d4	ea000001	 b           |$LN6@UfnPdd_Ini|
  069d8		 |$LN5@UfnPdd_Ini|
  069d8	e3a03000	 mov         r3, #0
  069dc	e58d3014	 str         r3, [sp, #0x14]
  069e0		 |$LN6@UfnPdd_Ini|

; 2764 : 
; 2765 :     LOCK_ENDPOINT (pPdd);

  069e0	e59d3004	 ldr         r3, [sp, #4]
  069e4	e2830e27	 add         r0, r3, #0x27, 28
  069e8	eb000000	 bl          EnterCriticalSection

; 2766 : 
; 2767 :     /* Write into the Power Registers RESUME Bit to initiate
; 2768 :      * REMOTE WAKEUP from the Suspended State
; 2769 :      */
; 2770 : 
; 2771 :     powerRegVal = pPdd->pUsbdRegs->POWER;

  069ec	e59d3004	 ldr         r3, [sp, #4]
  069f0	e283301c	 add         r3, r3, #0x1C
  069f4	e5933000	 ldr         r3, [r3]
  069f8	e2833b01	 add         r3, r3, #1, 22
  069fc	e2833001	 add         r3, r3, #1
  06a00	e5d33000	 ldrb        r3, [r3]
  06a04	e5cd3008	 strb        r3, [sp, #8]

; 2772 :     powerRegVal |= MGC_M_POWER_RESUME;

  06a08	e5dd3008	 ldrb        r3, [sp, #8]
  06a0c	e3833004	 orr         r3, r3, #4
  06a10	e20330ff	 and         r3, r3, #0xFF
  06a14	e5cd3008	 strb        r3, [sp, #8]

; 2773 :     pPdd->pUsbdRegs->POWER = powerRegVal;

  06a18	e59d3004	 ldr         r3, [sp, #4]
  06a1c	e283301c	 add         r3, r3, #0x1C
  06a20	e5933000	 ldr         r3, [r3]
  06a24	e2833b01	 add         r3, r3, #1, 22
  06a28	e2832001	 add         r2, r3, #1
  06a2c	e5dd3008	 ldrb        r3, [sp, #8]
  06a30	e5c23000	 strb        r3, [r2]

; 2774 : 
; 2775 :     UNLOCK_ENDPOINT (pPdd);

  06a34	e59d3004	 ldr         r3, [sp, #4]
  06a38	e2830e27	 add         r0, r3, #0x27, 28
  06a3c	eb000000	 bl          LeaveCriticalSection

; 2776 : 
; 2777 :     return (rc);

  06a40	e59d3000	 ldr         r3, [sp]
  06a44	e58d300c	 str         r3, [sp, #0xC]

; 2778 : 
; 2779 : }

  06a48	e59d000c	 ldr         r0, [sp, #0xC]
  06a4c	e28dd018	 add         sp, sp, #0x18
  06a50	e89d6000	 ldmia       sp, {sp, lr}
  06a54	e12fff1e	 bx          lr
  06a58		 |$LN10@UfnPdd_Ini|
  06a58		 |$LN11@UfnPdd_Ini|
  06a58	00000000	 DCD         |??_C@_1DO@NOEECNHH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  06a5c		 |$LN12@UfnPdd_Ini|
  06a5c	00000000	 DCD         |dpCurSettings|
  06a60		 |$M50308|

			 ENDP  ; |UfnPdd_InitiateRemoteWakeup|

	EXPORT	|??_C@_1CI@EMDGONAG@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FANEDLKI@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FPMKONCL@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@NBMBKNHJ@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@DPMDKDFP@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAG?$AAE?$AAT?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@ELDDGPMN@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAF?$AAN?$AA_?$AAP?$AAD?$AAD?$AA_?$AAS?$AAE?$AAT?$AA_?$AAI?$AAN?$AAT?$AAE?$AAR?$AAF?$AAA?$AAC?$AAE?$AA?3?$AA?5?$AAv?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@GFEGOIEM@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAF?$AAN?$AA_?$AAP?$AAD?$AAD?$AA_?$AAS?$AAE?$AAT?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AAU?$AAR?$AAA?$AAT?$AAI?$AAO?$AAN?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@LKIBFDHE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IOControl|

  000f8			 AREA	 |.pdata|, PDATA
|$T50356| DCD	|$LN57@UfnPdd_IOC|
	DCD	0x40013e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@EMDGONAG@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FANEDLKI@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FPMKONCL@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@NBMBKNHJ@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "B"
	DCB	0x0, "U", 0x0, "S", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "E"
	DCB	0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@DPMDKDFP@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAG?$AAE?$AAT?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "B"
	DCB	0x0, "U", 0x0, "S", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "E"
	DCB	0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@ELDDGPMN@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAF?$AAN?$AA_?$AAP?$AAD?$AAD?$AA_?$AAS?$AAE?$AAT?$AA_?$AAI?$AAN?$AAT?$AAE?$AAR?$AAF?$AAA?$AAC?$AAE?$AA?3?$AA?5?$AAv?$AAa?$AAl@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "U"
	DCB	0x0, "F", 0x0, "N", 0x0, "_", 0x0, "P", 0x0, "D", 0x0, "D"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, "F", 0x0, "A"
	DCB	0x0, "C", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@GFEGOIEM@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAF?$AAN?$AA_?$AAP?$AAD?$AAD?$AA_?$AAS?$AAE?$AAT?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AAU?$AAR?$AAA?$AAT?$AAI?$AAO?$AAN?$AA?3@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "U"
	DCB	0x0, "F", 0x0, "N", 0x0, "_", 0x0, "P", 0x0, "D", 0x0, "D"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, "U"
	DCB	0x0, "R", 0x0, "A", 0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N"
	DCB	0x0, ":", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LKIBFDHE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  06a60			 AREA	 |.text|, CODE, ARM

  06a60		 |UfnPdd_IOControl| PROC

; 2817 : {

  06a60		 |$LN57@UfnPdd_IOC|
  06a60	e1a0c00d	 mov         r12, sp
  06a64	e92d000f	 stmdb       sp!, {r0 - r3}
  06a68	e92d5000	 stmdb       sp!, {r12, lr}
  06a6c	e24dd060	 sub         sp, sp, #0x60
  06a70		 |$M50353|

; 2818 :     DWORD rc = ERROR_INVALID_PARAMETER;

  06a70	e3a03057	 mov         r3, #0x57
  06a74	e58d3000	 str         r3, [sp]

; 2819 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pPddContext;

  06a78	e59d3068	 ldr         r3, [sp, #0x68]
  06a7c	e58d300c	 str         r3, [sp, #0xC]

; 2820 : 
; 2821 :     CE_BUS_POWER_STATE *pBusPowerState;
; 2822 :     CEDEVICE_POWER_STATE devicePowerState;
; 2823 : 
; 2824 : 	UNREFERENCED_PARAMETER(pOutBuffer);
; 2825 : 	UNREFERENCED_PARAMETER(pOutSize);
; 2826 : 	UNREFERENCED_PARAMETER(outSize);
; 2827 : 
; 2828 :     PRINTMSG(ZONE_FUNCTION, (L"UfnPdd_IOControl:\r\n"));

  06a80	e59f34a8	 ldr         r3, [pc, #0x4A8]
  06a84	e5933440	 ldr         r3, [r3, #0x440]
  06a88	e3130a01	 tst         r3, #1, 20
  06a8c	0a00000f	 beq         |$LN20@UfnPdd_IOC|
  06a90	e59f3498	 ldr         r3, [pc, #0x498]
  06a94	e5933440	 ldr         r3, [r3, #0x440]
  06a98	e3130801	 tst         r3, #1, 16
  06a9c	0a000004	 beq         |$LN18@UfnPdd_IOC|
  06aa0	e59f04ac	 ldr         r0, [pc, #0x4AC]
  06aa4	eb000000	 bl          CeLogMsg
  06aa8	e3a03001	 mov         r3, #1
  06aac	e58d3014	 str         r3, [sp, #0x14]
  06ab0	ea000003	 b           |$LN19@UfnPdd_IOC|
  06ab4		 |$LN18@UfnPdd_IOC|
  06ab4	e59f0498	 ldr         r0, [pc, #0x498]
  06ab8	eb000000	 bl          NKDbgPrintfW
  06abc	e3a03000	 mov         r3, #0
  06ac0	e58d3014	 str         r3, [sp, #0x14]
  06ac4		 |$LN19@UfnPdd_IOC|
  06ac4	e3a03001	 mov         r3, #1
  06ac8	e58d3018	 str         r3, [sp, #0x18]
  06acc	ea000001	 b           |$LN21@UfnPdd_IOC|
  06ad0		 |$LN20@UfnPdd_IOC|
  06ad0	e3a03000	 mov         r3, #0
  06ad4	e58d3018	 str         r3, [sp, #0x18]
  06ad8		 |$LN21@UfnPdd_IOC|

; 2829 : 
; 2830 :     switch (code)

  06ad8	e59d3070	 ldr         r3, [sp, #0x70]
  06adc	e58d301c	 str         r3, [sp, #0x1C]
  06ae0	e59d201c	 ldr         r2, [sp, #0x1C]
  06ae4	e3a0382a	 mov         r3, #0x2A, 16
  06ae8	e3833010	 orr         r3, r3, #0x10
  06aec	e1520003	 cmp         r2, r3
  06af0	8a000010	 bhi         |$LN54@UfnPdd_IOC|
  06af4	e59d201c	 ldr         r2, [sp, #0x1C]
  06af8	e3a0382a	 mov         r3, #0x2A, 16
  06afc	e3833010	 orr         r3, r3, #0x10
  06b00	e1520003	 cmp         r2, r3
  06b04	0a000077	 beq         |$LN7@UfnPdd_IOC|
  06b08	e59d301c	 ldr         r3, [sp, #0x1C]
  06b0c	e3530001	 cmp         r3, #1
  06b10	0a000011	 beq         |$LN13@UfnPdd_IOC|
  06b14	e59d301c	 ldr         r3, [sp, #0x1C]
  06b18	e3530002	 cmp         r3, #2
  06b1c	0a000029	 beq         |$LN12@UfnPdd_IOC|
  06b20	e59d201c	 ldr         r2, [sp, #0x1C]
  06b24	e3a0382a	 mov         r3, #0x2A, 16
  06b28	e383300c	 orr         r3, r3, #0xC
  06b2c	e1520003	 cmp         r2, r3
  06b30	0a00003f	 beq         |$LN11@UfnPdd_IOC|
  06b34	ea0000de	 b           |$LN1@UfnPdd_IOC|
  06b38		 |$LN54@UfnPdd_IOC|
  06b38	e59d201c	 ldr         r2, [sp, #0x1C]
  06b3c	e59f340c	 ldr         r3, [pc, #0x40C]
  06b40	e1520003	 cmp         r2, r3
  06b44	0a0000c3	 beq         |$LN2@UfnPdd_IOC|
  06b48	e59d201c	 ldr         r2, [sp, #0x1C]
  06b4c	e59f33f8	 ldr         r3, [pc, #0x3F8]
  06b50	e1520003	 cmp         r2, r3
  06b54	0a0000a8	 beq         |$LN3@UfnPdd_IOC|
  06b58	ea0000d5	 b           |$LN1@UfnPdd_IOC|
  06b5c		 |$LN13@UfnPdd_IOC|

; 2831 :     {
; 2832 : 
; 2833 :         case IOCTL_UFN_PDD_SET_CONFIGURATION:
; 2834 :             PRINTMSG(ZONE_PDD_INIT,
; 2835 :                      (L"IOCTL_UFN_PDD_SET_CONFIGURATION: value 0x%x\r\n", *((DWORD*)pInBuffer)));

  06b5c	e59f33cc	 ldr         r3, [pc, #0x3CC]
  06b60	e5933440	 ldr         r3, [r3, #0x440]
  06b64	e3130c01	 tst         r3, #1, 24
  06b68	0a000013	 beq         |$LN24@UfnPdd_IOC|
  06b6c	e59f33bc	 ldr         r3, [pc, #0x3BC]
  06b70	e5933440	 ldr         r3, [r3, #0x440]
  06b74	e3130801	 tst         r3, #1, 16
  06b78	0a000006	 beq         |$LN22@UfnPdd_IOC|
  06b7c	e59d3074	 ldr         r3, [sp, #0x74]
  06b80	e5931000	 ldr         r1, [r3]
  06b84	e59f03bc	 ldr         r0, [pc, #0x3BC]
  06b88	eb000000	 bl          CeLogMsg
  06b8c	e3a03001	 mov         r3, #1
  06b90	e58d3020	 str         r3, [sp, #0x20]
  06b94	ea000005	 b           |$LN23@UfnPdd_IOC|
  06b98		 |$LN22@UfnPdd_IOC|
  06b98	e59d3074	 ldr         r3, [sp, #0x74]
  06b9c	e5931000	 ldr         r1, [r3]
  06ba0	e59f03a0	 ldr         r0, [pc, #0x3A0]
  06ba4	eb000000	 bl          NKDbgPrintfW
  06ba8	e3a03000	 mov         r3, #0
  06bac	e58d3020	 str         r3, [sp, #0x20]
  06bb0		 |$LN23@UfnPdd_IOC|
  06bb0	e3a03001	 mov         r3, #1
  06bb4	e58d3024	 str         r3, [sp, #0x24]
  06bb8	ea000001	 b           |$LN25@UfnPdd_IOC|
  06bbc		 |$LN24@UfnPdd_IOC|
  06bbc	e3a03000	 mov         r3, #0
  06bc0	e58d3024	 str         r3, [sp, #0x24]
  06bc4		 |$LN25@UfnPdd_IOC|

; 2836 :             /* MDD will handle this request */
; 2837 : 
; 2838 :             /* When testing RNDIS with one particular PC a delay was needed here */
; 2839 : #ifdef UFN_SET_CONFIG_DELAY_REQUIRED
; 2840 :             Sleep(100);
; 2841 : #endif
; 2842 :             break;

  06bc4	ea0000d2	 b           |$LN14@UfnPdd_IOC|
  06bc8		 |$LN12@UfnPdd_IOC|

; 2843 : 
; 2844 :         case IOCTL_UFN_PDD_SET_INTERFACE:
; 2845 :             PRINTMSG(ZONE_PDD_INIT,
; 2846 :                      (L"IOCTL_UFN_PDD_SET_INTERFACE: value 0x%x\r\n", *((DWORD*)pInBuffer)));

  06bc8	e59f3360	 ldr         r3, [pc, #0x360]
  06bcc	e5933440	 ldr         r3, [r3, #0x440]
  06bd0	e3130c01	 tst         r3, #1, 24
  06bd4	0a000013	 beq         |$LN28@UfnPdd_IOC|
  06bd8	e59f3350	 ldr         r3, [pc, #0x350]
  06bdc	e5933440	 ldr         r3, [r3, #0x440]
  06be0	e3130801	 tst         r3, #1, 16
  06be4	0a000006	 beq         |$LN26@UfnPdd_IOC|
  06be8	e59d3074	 ldr         r3, [sp, #0x74]
  06bec	e5931000	 ldr         r1, [r3]
  06bf0	e59f034c	 ldr         r0, [pc, #0x34C]
  06bf4	eb000000	 bl          CeLogMsg
  06bf8	e3a03001	 mov         r3, #1
  06bfc	e58d3028	 str         r3, [sp, #0x28]
  06c00	ea000005	 b           |$LN27@UfnPdd_IOC|
  06c04		 |$LN26@UfnPdd_IOC|
  06c04	e59d3074	 ldr         r3, [sp, #0x74]
  06c08	e5931000	 ldr         r1, [r3]
  06c0c	e59f0330	 ldr         r0, [pc, #0x330]
  06c10	eb000000	 bl          NKDbgPrintfW
  06c14	e3a03000	 mov         r3, #0
  06c18	e58d3028	 str         r3, [sp, #0x28]
  06c1c		 |$LN27@UfnPdd_IOC|
  06c1c	e3a03001	 mov         r3, #1
  06c20	e58d302c	 str         r3, [sp, #0x2C]
  06c24	ea000001	 b           |$LN29@UfnPdd_IOC|
  06c28		 |$LN28@UfnPdd_IOC|
  06c28	e3a03000	 mov         r3, #0
  06c2c	e58d302c	 str         r3, [sp, #0x2C]
  06c30		 |$LN29@UfnPdd_IOC|

; 2847 :             /* MDD will handle this request */
; 2848 :             break;

  06c30	ea0000b7	 b           |$LN14@UfnPdd_IOC|
  06c34		 |$LN11@UfnPdd_IOC|

; 2849 : 
; 2850 :             /* In a debug build we get a DEBUGCHK from VirtualCopy due
; 2851 :              * to the way the RNDIS client driver allocates its DMA
; 2852 :              * buffers.  Prevent the RNDIS client driver from allocating
; 2853 :              * DMA buffers by disabling this IOCTL.
; 2854 :              */
; 2855 : #ifndef DEBUG
; 2856 :         case IOCTL_UFN_GET_PDD_INFO:
; 2857 :         {
; 2858 :             UFN_PDD_INFO info;
; 2859 : 
; 2860 :             PRINTMSG(ZONE_PDD_INIT, (L"IOCTL_UFN_GET_PDD_INFO:\r\n"));
; 2861 :             if (source != BUS_IOCTL)
; 2862 :                 break;
; 2863 :             if ((pOutBuffer == NULL) ||
; 2864 :                 (outSize < sizeof(UFN_PDD_INFO)))
; 2865 :                 break;
; 2866 :             info.InterfaceType = Internal;
; 2867 :             info.BusNumber = 0;
; 2868 :             info.dwAlignment = sizeof(DWORD);
; 2869 : 
; 2870 :             memcpy (pOutBuffer, &info, sizeof(UFN_PDD_INFO));
; 2871 :             rc = ERROR_SUCCESS;
; 2872 :             break;
; 2873 :         }
; 2874 : #endif
; 2875 : 
; 2876 :         case IOCTL_BUS_GET_POWER_STATE:
; 2877 :             PRINTMSG(ZONE_PDD_INIT, (L"IOCTL_BUS_GET_POWER_STATE:\r\n"));

  06c34	e59f32f4	 ldr         r3, [pc, #0x2F4]
  06c38	e5933440	 ldr         r3, [r3, #0x440]
  06c3c	e3130c01	 tst         r3, #1, 24
  06c40	0a00000f	 beq         |$LN32@UfnPdd_IOC|
  06c44	e59f32e4	 ldr         r3, [pc, #0x2E4]
  06c48	e5933440	 ldr         r3, [r3, #0x440]
  06c4c	e3130801	 tst         r3, #1, 16
  06c50	0a000004	 beq         |$LN30@UfnPdd_IOC|
  06c54	e59f02e4	 ldr         r0, [pc, #0x2E4]
  06c58	eb000000	 bl          CeLogMsg
  06c5c	e3a03001	 mov         r3, #1
  06c60	e58d3030	 str         r3, [sp, #0x30]
  06c64	ea000003	 b           |$LN31@UfnPdd_IOC|
  06c68		 |$LN30@UfnPdd_IOC|
  06c68	e59f02d0	 ldr         r0, [pc, #0x2D0]
  06c6c	eb000000	 bl          NKDbgPrintfW
  06c70	e3a03000	 mov         r3, #0
  06c74	e58d3030	 str         r3, [sp, #0x30]
  06c78		 |$LN31@UfnPdd_IOC|
  06c78	e3a03001	 mov         r3, #1
  06c7c	e58d3034	 str         r3, [sp, #0x34]
  06c80	ea000001	 b           |$LN33@UfnPdd_IOC|
  06c84		 |$LN32@UfnPdd_IOC|
  06c84	e3a03000	 mov         r3, #0
  06c88	e58d3034	 str         r3, [sp, #0x34]
  06c8c		 |$LN33@UfnPdd_IOC|

; 2878 :             if (source != MDD_IOCTL)

  06c8c	e59d306c	 ldr         r3, [sp, #0x6C]
  06c90	e3530002	 cmp         r3, #2
  06c94	0a000000	 beq         |$LN10@UfnPdd_IOC|

; 2879 :                 break;

  06c98	ea00009d	 b           |$LN14@UfnPdd_IOC|
  06c9c		 |$LN10@UfnPdd_IOC|

; 2880 :             if ((pInBuffer == NULL) ||
; 2881 :                 (inSize < sizeof(CE_BUS_POWER_STATE)))

  06c9c	e59d3074	 ldr         r3, [sp, #0x74]
  06ca0	e3530000	 cmp         r3, #0
  06ca4	0a000002	 beq         |$LN8@UfnPdd_IOC|
  06ca8	e59d3078	 ldr         r3, [sp, #0x78]
  06cac	e353000c	 cmp         r3, #0xC
  06cb0	2a000000	 bcs         |$LN9@UfnPdd_IOC|
  06cb4		 |$LN8@UfnPdd_IOC|

; 2882 :                 break;

  06cb4	ea000096	 b           |$LN14@UfnPdd_IOC|
  06cb8		 |$LN9@UfnPdd_IOC|

; 2883 :             pBusPowerState = (CE_BUS_POWER_STATE*)pInBuffer;

  06cb8	e59d3074	 ldr         r3, [sp, #0x74]
  06cbc	e58d3008	 str         r3, [sp, #8]

; 2884 : 
; 2885 :             memcpy (pBusPowerState->lpceDevicePowerState, &pPdd->currentPowerState,
; 2886 :                     sizeof(CEDEVICE_POWER_STATE));

  06cc0	e3a02004	 mov         r2, #4
  06cc4	e59d300c	 ldr         r3, [sp, #0xC]
  06cc8	e2831048	 add         r1, r3, #0x48
  06ccc	e59d3008	 ldr         r3, [sp, #8]
  06cd0	e2833004	 add         r3, r3, #4
  06cd4	e5930000	 ldr         r0, [r3]
  06cd8	eb000000	 bl          memcpy

; 2887 :             rc = ERROR_SUCCESS;

  06cdc	e3a03000	 mov         r3, #0
  06ce0	e58d3000	 str         r3, [sp]

; 2888 :             break;

  06ce4	ea00008a	 b           |$LN14@UfnPdd_IOC|
  06ce8		 |$LN7@UfnPdd_IOC|

; 2889 :         case IOCTL_BUS_SET_POWER_STATE:
; 2890 :             PRINTMSG(ZONE_PDD_INIT, (L"IOCTL_BUS_SET_POWER_STATE:\r\n"));

  06ce8	e59f3240	 ldr         r3, [pc, #0x240]
  06cec	e5933440	 ldr         r3, [r3, #0x440]
  06cf0	e3130c01	 tst         r3, #1, 24
  06cf4	0a00000f	 beq         |$LN36@UfnPdd_IOC|
  06cf8	e59f3230	 ldr         r3, [pc, #0x230]
  06cfc	e5933440	 ldr         r3, [r3, #0x440]
  06d00	e3130801	 tst         r3, #1, 16
  06d04	0a000004	 beq         |$LN34@UfnPdd_IOC|
  06d08	e59f022c	 ldr         r0, [pc, #0x22C]
  06d0c	eb000000	 bl          CeLogMsg
  06d10	e3a03001	 mov         r3, #1
  06d14	e58d3038	 str         r3, [sp, #0x38]
  06d18	ea000003	 b           |$LN35@UfnPdd_IOC|
  06d1c		 |$LN34@UfnPdd_IOC|
  06d1c	e59f0218	 ldr         r0, [pc, #0x218]
  06d20	eb000000	 bl          NKDbgPrintfW
  06d24	e3a03000	 mov         r3, #0
  06d28	e58d3038	 str         r3, [sp, #0x38]
  06d2c		 |$LN35@UfnPdd_IOC|
  06d2c	e3a03001	 mov         r3, #1
  06d30	e58d303c	 str         r3, [sp, #0x3C]
  06d34	ea000001	 b           |$LN37@UfnPdd_IOC|
  06d38		 |$LN36@UfnPdd_IOC|
  06d38	e3a03000	 mov         r3, #0
  06d3c	e58d303c	 str         r3, [sp, #0x3C]
  06d40		 |$LN37@UfnPdd_IOC|

; 2891 :             if (source != MDD_IOCTL)

  06d40	e59d306c	 ldr         r3, [sp, #0x6C]
  06d44	e3530002	 cmp         r3, #2
  06d48	0a000000	 beq         |$LN6@UfnPdd_IOC|

; 2892 :                 break;

  06d4c	ea000070	 b           |$LN14@UfnPdd_IOC|
  06d50		 |$LN6@UfnPdd_IOC|

; 2893 :             if ((pInBuffer == NULL) ||
; 2894 :                 (inSize < sizeof(CE_BUS_POWER_STATE)))

  06d50	e59d3074	 ldr         r3, [sp, #0x74]
  06d54	e3530000	 cmp         r3, #0
  06d58	0a000002	 beq         |$LN4@UfnPdd_IOC|
  06d5c	e59d3078	 ldr         r3, [sp, #0x78]
  06d60	e353000c	 cmp         r3, #0xC
  06d64	2a000000	 bcs         |$LN5@UfnPdd_IOC|
  06d68		 |$LN4@UfnPdd_IOC|

; 2895 :                 break;

  06d68	ea000069	 b           |$LN14@UfnPdd_IOC|
  06d6c		 |$LN5@UfnPdd_IOC|

; 2896 :             pBusPowerState = (CE_BUS_POWER_STATE*)pInBuffer;

  06d6c	e59d3074	 ldr         r3, [sp, #0x74]
  06d70	e58d3008	 str         r3, [sp, #8]

; 2897 : 
; 2898 :             memcpy (&devicePowerState, pBusPowerState->lpceDevicePowerState,
; 2899 :                     sizeof(CEDEVICE_POWER_STATE));

  06d74	e3a02004	 mov         r2, #4
  06d78	e59d3008	 ldr         r3, [sp, #8]
  06d7c	e2833004	 add         r3, r3, #4
  06d80	e5931000	 ldr         r1, [r3]
  06d84	e28d0004	 add         r0, sp, #4
  06d88	eb000000	 bl          memcpy

; 2900 : 
; 2901 :             PRINTMSG(ZONE_PDD_INIT, (L"IOCTL_BUS_SET_POWER_STATE:\r\n"));

  06d8c	e59f319c	 ldr         r3, [pc, #0x19C]
  06d90	e5933440	 ldr         r3, [r3, #0x440]
  06d94	e3130c01	 tst         r3, #1, 24
  06d98	0a00000f	 beq         |$LN40@UfnPdd_IOC|
  06d9c	e59f318c	 ldr         r3, [pc, #0x18C]
  06da0	e5933440	 ldr         r3, [r3, #0x440]
  06da4	e3130801	 tst         r3, #1, 16
  06da8	0a000004	 beq         |$LN38@UfnPdd_IOC|
  06dac	e59f0188	 ldr         r0, [pc, #0x188]
  06db0	eb000000	 bl          CeLogMsg
  06db4	e3a03001	 mov         r3, #1
  06db8	e58d3040	 str         r3, [sp, #0x40]
  06dbc	ea000003	 b           |$LN39@UfnPdd_IOC|
  06dc0		 |$LN38@UfnPdd_IOC|
  06dc0	e59f0174	 ldr         r0, [pc, #0x174]
  06dc4	eb000000	 bl          NKDbgPrintfW
  06dc8	e3a03000	 mov         r3, #0
  06dcc	e58d3040	 str         r3, [sp, #0x40]
  06dd0		 |$LN39@UfnPdd_IOC|
  06dd0	e3a03001	 mov         r3, #1
  06dd4	e58d3044	 str         r3, [sp, #0x44]
  06dd8	ea000001	 b           |$LN41@UfnPdd_IOC|
  06ddc		 |$LN40@UfnPdd_IOC|
  06ddc	e3a03000	 mov         r3, #0
  06de0	e58d3044	 str         r3, [sp, #0x44]
  06de4		 |$LN41@UfnPdd_IOC|

; 2902 :             SetPowerState(pPdd , devicePowerState);

  06de4	e59d1004	 ldr         r1, [sp, #4]
  06de8	e59d000c	 ldr         r0, [sp, #0xC]
  06dec	eb000000	 bl          SetPowerState

; 2903 :             rc = ERROR_SUCCESS;

  06df0	e3a03000	 mov         r3, #0
  06df4	e58d3000	 str         r3, [sp]

; 2904 :             break;

  06df8	ea000045	 b           |$LN14@UfnPdd_IOC|
  06dfc		 |$LN3@UfnPdd_IOC|

; 2905 :         case IOCTL_POWER_SET:
; 2906 :             PRINTMSG(ZONE_PDD_INIT, (L"IOCTL_POWER_SET\r\n"));

  06dfc	e59f312c	 ldr         r3, [pc, #0x12C]
  06e00	e5933440	 ldr         r3, [r3, #0x440]
  06e04	e3130c01	 tst         r3, #1, 24
  06e08	0a00000f	 beq         |$LN44@UfnPdd_IOC|
  06e0c	e59f311c	 ldr         r3, [pc, #0x11C]
  06e10	e5933440	 ldr         r3, [r3, #0x440]
  06e14	e3130801	 tst         r3, #1, 16
  06e18	0a000004	 beq         |$LN42@UfnPdd_IOC|
  06e1c	e59f0114	 ldr         r0, [pc, #0x114]
  06e20	eb000000	 bl          CeLogMsg
  06e24	e3a03001	 mov         r3, #1
  06e28	e58d3048	 str         r3, [sp, #0x48]
  06e2c	ea000003	 b           |$LN43@UfnPdd_IOC|
  06e30		 |$LN42@UfnPdd_IOC|
  06e30	e59f0100	 ldr         r0, [pc, #0x100]
  06e34	eb000000	 bl          NKDbgPrintfW
  06e38	e3a03000	 mov         r3, #0
  06e3c	e58d3048	 str         r3, [sp, #0x48]
  06e40		 |$LN43@UfnPdd_IOC|
  06e40	e3a03001	 mov         r3, #1
  06e44	e58d304c	 str         r3, [sp, #0x4C]
  06e48	ea000001	 b           |$LN45@UfnPdd_IOC|
  06e4c		 |$LN44@UfnPdd_IOC|
  06e4c	e3a03000	 mov         r3, #0
  06e50	e58d304c	 str         r3, [sp, #0x4C]
  06e54		 |$LN45@UfnPdd_IOC|

; 2907 :             break;

  06e54	ea00002e	 b           |$LN14@UfnPdd_IOC|
  06e58		 |$LN2@UfnPdd_IOC|

; 2908 :         case IOCTL_POWER_GET:
; 2909 :             PRINTMSG(ZONE_PDD_INIT, (L"IOCTL_POWER_GET\r\n"));

  06e58	e59f30d0	 ldr         r3, [pc, #0xD0]
  06e5c	e5933440	 ldr         r3, [r3, #0x440]
  06e60	e3130c01	 tst         r3, #1, 24
  06e64	0a00000f	 beq         |$LN48@UfnPdd_IOC|
  06e68	e59f30c0	 ldr         r3, [pc, #0xC0]
  06e6c	e5933440	 ldr         r3, [r3, #0x440]
  06e70	e3130801	 tst         r3, #1, 16
  06e74	0a000004	 beq         |$LN46@UfnPdd_IOC|
  06e78	e59f00b4	 ldr         r0, [pc, #0xB4]
  06e7c	eb000000	 bl          CeLogMsg
  06e80	e3a03001	 mov         r3, #1
  06e84	e58d3050	 str         r3, [sp, #0x50]
  06e88	ea000003	 b           |$LN47@UfnPdd_IOC|
  06e8c		 |$LN46@UfnPdd_IOC|
  06e8c	e59f00a0	 ldr         r0, [pc, #0xA0]
  06e90	eb000000	 bl          NKDbgPrintfW
  06e94	e3a03000	 mov         r3, #0
  06e98	e58d3050	 str         r3, [sp, #0x50]
  06e9c		 |$LN47@UfnPdd_IOC|
  06e9c	e3a03001	 mov         r3, #1
  06ea0	e58d3054	 str         r3, [sp, #0x54]
  06ea4	ea000001	 b           |$LN49@UfnPdd_IOC|
  06ea8		 |$LN48@UfnPdd_IOC|
  06ea8	e3a03000	 mov         r3, #0
  06eac	e58d3054	 str         r3, [sp, #0x54]
  06eb0		 |$LN49@UfnPdd_IOC|

; 2910 :             break;

  06eb0	ea000017	 b           |$LN14@UfnPdd_IOC|
  06eb4		 |$LN1@UfnPdd_IOC|

; 2911 :         default:
; 2912 :             PRINTMSG(ZONE_PDD_INIT, (L"Unknown IOCTL: %d\r\n", code));

  06eb4	e59f3074	 ldr         r3, [pc, #0x74]
  06eb8	e5933440	 ldr         r3, [r3, #0x440]
  06ebc	e3130c01	 tst         r3, #1, 24
  06ec0	0a000011	 beq         |$LN52@UfnPdd_IOC|
  06ec4	e59f3064	 ldr         r3, [pc, #0x64]
  06ec8	e5933440	 ldr         r3, [r3, #0x440]
  06ecc	e3130801	 tst         r3, #1, 16
  06ed0	0a000005	 beq         |$LN50@UfnPdd_IOC|
  06ed4	e59d1070	 ldr         r1, [sp, #0x70]
  06ed8	e59f004c	 ldr         r0, [pc, #0x4C]
  06edc	eb000000	 bl          CeLogMsg
  06ee0	e3a03001	 mov         r3, #1
  06ee4	e58d3058	 str         r3, [sp, #0x58]
  06ee8	ea000004	 b           |$LN51@UfnPdd_IOC|
  06eec		 |$LN50@UfnPdd_IOC|
  06eec	e59d1070	 ldr         r1, [sp, #0x70]
  06ef0	e59f0034	 ldr         r0, [pc, #0x34]
  06ef4	eb000000	 bl          NKDbgPrintfW
  06ef8	e3a03000	 mov         r3, #0
  06efc	e58d3058	 str         r3, [sp, #0x58]
  06f00		 |$LN51@UfnPdd_IOC|
  06f00	e3a03001	 mov         r3, #1
  06f04	e58d305c	 str         r3, [sp, #0x5C]
  06f08	ea000001	 b           |$LN53@UfnPdd_IOC|
  06f0c		 |$LN52@UfnPdd_IOC|
  06f0c	e3a03000	 mov         r3, #0
  06f10	e58d305c	 str         r3, [sp, #0x5C]
  06f14		 |$LN53@UfnPdd_IOC|
  06f14		 |$LN14@UfnPdd_IOC|

; 2913 :         }
; 2914 :     return rc;

  06f14	e59d3000	 ldr         r3, [sp]
  06f18	e58d3010	 str         r3, [sp, #0x10]

; 2915 : }

  06f1c	e59d0010	 ldr         r0, [sp, #0x10]
  06f20	e28dd060	 add         sp, sp, #0x60
  06f24	e89d6000	 ldmia       sp, {sp, lr}
  06f28	e12fff1e	 bx          lr
  06f2c		 |$LN58@UfnPdd_IOC|
  06f2c		 |$LN59@UfnPdd_IOC|
  06f2c	00000000	 DCD         |??_C@_1CI@EMDGONAG@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  06f30		 |$LN60@UfnPdd_IOC|
  06f30	00000000	 DCD         |dpCurSettings|
  06f34		 |$LN61@UfnPdd_IOC|
  06f34	00000000	 DCD         |??_C@_1CE@FANEDLKI@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  06f38		 |$LN62@UfnPdd_IOC|
  06f38	00000000	 DCD         |??_C@_1CE@FPMKONCL@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  06f3c		 |$LN63@UfnPdd_IOC|
  06f3c	00000000	 DCD         |??_C@_1DK@NBMBKNHJ@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  06f40		 |$LN64@UfnPdd_IOC|
  06f40	00000000	 DCD         |??_C@_1DK@DPMDKDFP@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAG?$AAE?$AAT?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  06f44		 |$LN65@UfnPdd_IOC|
  06f44	00000000	 DCD         |??_C@_1FE@ELDDGPMN@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAF?$AAN?$AA_?$AAP?$AAD?$AAD?$AA_?$AAS?$AAE?$AAT?$AA_?$AAI?$AAN?$AAT?$AAE?$AAR?$AAF?$AAA?$AAC?$AAE?$AA?3?$AA?5?$AAv?$AAa?$AAl@|
  06f48		 |$LN66@UfnPdd_IOC|
  06f48	00000000	 DCD         |??_C@_1FM@GFEGOIEM@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAF?$AAN?$AA_?$AAP?$AAD?$AAD?$AA_?$AAS?$AAE?$AAT?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AAU?$AAR?$AAA?$AAT?$AAI?$AAO?$AAN?$AA?3@|
  06f4c		 |$LN67@UfnPdd_IOC|
  06f4c	00321008	 DCD         0x321008
  06f50		 |$LN68@UfnPdd_IOC|
  06f50	00321004	 DCD         0x321004
  06f54		 |$LN69@UfnPdd_IOC|
  06f54	00000000	 DCD         |??_C@_1CI@LKIBFDHE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  06f58		 |$M50354|

			 ENDP  ; |UfnPdd_IOControl|

	EXPORT	|??_C@_1EI@ILEMKPGC@?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAD?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|USBPeripheralPowerDown|
	IMPORT	|USBPeripheralEndSession|
	IMPORT	|USBPeripheralStart|
	IMPORT	|USBPeripheralPowerUp|
	IMPORT	|SetDevicePowerState|

  00100			 AREA	 |.pdata|, PDATA
|$T50379| DCD	|$LN21@SetPowerSt|
	DCD	0x40009704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@ILEMKPGC@?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAD?$AA?$CF@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F"
	DCB	0x0, "N", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D"
	DCB	0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Odtp

  06f58			 AREA	 |.text|, CODE, ARM

  06f58		 |SetPowerState| PROC

; 830  : {

  06f58		 |$LN21@SetPowerSt|
  06f58	e1a0c00d	 mov         r12, sp
  06f5c	e92d0003	 stmdb       sp!, {r0, r1}
  06f60	e92d5000	 stmdb       sp!, {r12, lr}
  06f64	e24dd014	 sub         sp, sp, #0x14
  06f68		 |$M50376|

; 831  :     PREFAST_ASSERT(pPdd != NULL);

  06f68	e59d301c	 ldr         r3, [sp, #0x1C]
  06f6c	e3530000	 cmp         r3, #0
  06f70	0a000002	 beq         |$LN13@SetPowerSt|
  06f74	e3a03001	 mov         r3, #1
  06f78	e58d3000	 str         r3, [sp]
  06f7c	ea000008	 b           |$LN14@SetPowerSt|
  06f80		 |$LN13@SetPowerSt|
  06f80	e3a03c03	 mov         r3, #3, 24
  06f84	e383303f	 orr         r3, r3, #0x3F
  06f88	e59f2220	 ldr         r2, [pc, #0x220]
  06f8c	e59f1218	 ldr         r1, [pc, #0x218]
  06f90	e59f0210	 ldr         r0, [pc, #0x210]
  06f94	eb000000	 bl          NKDbgPrintfW
  06f98	e6000010	 __debugbreak_ce
  06f9c	e3a03000	 mov         r3, #0
  06fa0	e58d3000	 str         r3, [sp]
  06fa4		 |$LN14@SetPowerSt|

; 832  : 
; 833  :     PRINTMSG(ZONE_FUNCTION, (L"SetPowerState: USBFN entering D%u\r\n", newPowerState));

  06fa4	e59f31f8	 ldr         r3, [pc, #0x1F8]
  06fa8	e5933440	 ldr         r3, [r3, #0x440]
  06fac	e3130a01	 tst         r3, #1, 20
  06fb0	0a000011	 beq         |$LN17@SetPowerSt|
  06fb4	e59f31e8	 ldr         r3, [pc, #0x1E8]
  06fb8	e5933440	 ldr         r3, [r3, #0x440]
  06fbc	e3130801	 tst         r3, #1, 16
  06fc0	0a000005	 beq         |$LN15@SetPowerSt|
  06fc4	e59d1020	 ldr         r1, [sp, #0x20]
  06fc8	e59f01d0	 ldr         r0, [pc, #0x1D0]
  06fcc	eb000000	 bl          CeLogMsg
  06fd0	e3a03001	 mov         r3, #1
  06fd4	e58d3004	 str         r3, [sp, #4]
  06fd8	ea000004	 b           |$LN16@SetPowerSt|
  06fdc		 |$LN15@SetPowerSt|
  06fdc	e59d1020	 ldr         r1, [sp, #0x20]
  06fe0	e59f01b8	 ldr         r0, [pc, #0x1B8]
  06fe4	eb000000	 bl          NKDbgPrintfW
  06fe8	e3a03000	 mov         r3, #0
  06fec	e58d3004	 str         r3, [sp, #4]
  06ff0		 |$LN16@SetPowerSt|
  06ff0	e3a03001	 mov         r3, #1
  06ff4	e58d3008	 str         r3, [sp, #8]
  06ff8	ea000001	 b           |$LN18@SetPowerSt|
  06ffc		 |$LN17@SetPowerSt|
  06ffc	e3a03000	 mov         r3, #0
  07000	e58d3008	 str         r3, [sp, #8]
  07004		 |$LN18@SetPowerSt|

; 834  : 
; 835  : 	if (newPowerState != pPdd->currentPowerState)

  07004	e59d301c	 ldr         r3, [sp, #0x1C]
  07008	e2833048	 add         r3, r3, #0x48
  0700c	e59d2020	 ldr         r2, [sp, #0x20]
  07010	e5933000	 ldr         r3, [r3]
  07014	e1520003	 cmp         r2, r3
  07018	0a000007	 beq         |$LN10@SetPowerSt|

; 836  :     {
; 837  :         if (newPowerState == D1 || newPowerState == D2)

  0701c	e59d3020	 ldr         r3, [sp, #0x20]
  07020	e3530001	 cmp         r3, #1
  07024	0a000002	 beq         |$LN8@SetPowerSt|
  07028	e59d3020	 ldr         r3, [sp, #0x20]
  0702c	e3530002	 cmp         r3, #2
  07030	1a000001	 bne         |$LN9@SetPowerSt|
  07034		 |$LN8@SetPowerSt|

; 838  :         {
; 839  :             newPowerState = D0;

  07034	e3a03000	 mov         r3, #0
  07038	e58d3020	 str         r3, [sp, #0x20]
  0703c		 |$LN9@SetPowerSt|
  0703c		 |$LN10@SetPowerSt|

; 840  :         }
; 841  :     }
; 842  : 
; 843  :     if (newPowerState != pPdd->currentPowerState)

  0703c	e59d301c	 ldr         r3, [sp, #0x1C]
  07040	e2833048	 add         r3, r3, #0x48
  07044	e59d2020	 ldr         r2, [sp, #0x20]
  07048	e5933000	 ldr         r3, [r3]
  0704c	e1520003	 cmp         r2, r3
  07050	0a00004f	 beq         |$LN7@SetPowerSt|

; 844  :     {
; 845  :         if ((newPowerState < pPdd->currentPowerState) && (pPdd->parentBus != NULL))

  07054	e59d301c	 ldr         r3, [sp, #0x1C]
  07058	e2833048	 add         r3, r3, #0x48
  0705c	e59d2020	 ldr         r2, [sp, #0x20]
  07060	e5933000	 ldr         r3, [r3]
  07064	e1520003	 cmp         r2, r3
  07068	aa00001f	 bge         |$LN6@SetPowerSt|
  0706c	e59d301c	 ldr         r3, [sp, #0x1C]
  07070	e2833018	 add         r3, r3, #0x18
  07074	e5933000	 ldr         r3, [r3]
  07078	e3530000	 cmp         r3, #0
  0707c	0a00001a	 beq         |$LN6@SetPowerSt|

; 846  :         {
; 847  :             if (SetDevicePowerState(pPdd->parentBus, newPowerState, NULL) &&
; 848  :                 (newPowerState < D3) && (pPdd->currentPowerState >= D3))

  07080	e3a02000	 mov         r2, #0
  07084	e59d1020	 ldr         r1, [sp, #0x20]
  07088	e59d301c	 ldr         r3, [sp, #0x1C]
  0708c	e2833018	 add         r3, r3, #0x18
  07090	e5930000	 ldr         r0, [r3]
  07094	eb000000	 bl          SetDevicePowerState
  07098	e58d000c	 str         r0, [sp, #0xC]
  0709c	e59d300c	 ldr         r3, [sp, #0xC]
  070a0	e3530000	 cmp         r3, #0
  070a4	0a000010	 beq         |$LN5@SetPowerSt|
  070a8	e59d3020	 ldr         r3, [sp, #0x20]
  070ac	e3530003	 cmp         r3, #3
  070b0	aa00000d	 bge         |$LN5@SetPowerSt|
  070b4	e59d301c	 ldr         r3, [sp, #0x1C]
  070b8	e2833048	 add         r3, r3, #0x48
  070bc	e5933000	 ldr         r3, [r3]
  070c0	e3530003	 cmp         r3, #3
  070c4	ba000008	 blt         |$LN5@SetPowerSt|

; 849  :             {
; 850  :                 if(pPdd->disablePowerManagement == 0)

  070c8	e59d301c	 ldr         r3, [sp, #0x1C]
  070cc	e283300c	 add         r3, r3, #0xC
  070d0	e5933000	 ldr         r3, [r3]
  070d4	e3530000	 cmp         r3, #0
  070d8	1a000003	 bne         |$LN4@SetPowerSt|

; 851  :                 {
; 852  :                     USBPeripheralPowerUp(pPdd);

  070dc	e59d001c	 ldr         r0, [sp, #0x1C]
  070e0	eb000000	 bl          USBPeripheralPowerUp

; 853  :                     USBPeripheralStart(pPdd);

  070e4	e59d001c	 ldr         r0, [sp, #0x1C]
  070e8	eb000000	 bl          USBPeripheralStart
  070ec		 |$LN4@SetPowerSt|
  070ec		 |$LN5@SetPowerSt|
  070ec		 |$LN6@SetPowerSt|

; 854  :                 }
; 855  :             }
; 856  :         }
; 857  : 
; 858  :         if ((newPowerState > pPdd->currentPowerState) && (pPdd->parentBus != NULL))

  070ec	e59d301c	 ldr         r3, [sp, #0x1C]
  070f0	e2833048	 add         r3, r3, #0x48
  070f4	e59d2020	 ldr         r2, [sp, #0x20]
  070f8	e5933000	 ldr         r3, [r3]
  070fc	e1520003	 cmp         r2, r3
  07100	da00001f	 ble         |$LN3@SetPowerSt|
  07104	e59d301c	 ldr         r3, [sp, #0x1C]
  07108	e2833018	 add         r3, r3, #0x18
  0710c	e5933000	 ldr         r3, [r3]
  07110	e3530000	 cmp         r3, #0
  07114	0a00001a	 beq         |$LN3@SetPowerSt|

; 859  :         {
; 860  :             if (SetDevicePowerState(pPdd->parentBus, newPowerState, NULL) &&
; 861  :                 (newPowerState >= D3) && (pPdd->currentPowerState < D3))

  07118	e3a02000	 mov         r2, #0
  0711c	e59d1020	 ldr         r1, [sp, #0x20]
  07120	e59d301c	 ldr         r3, [sp, #0x1C]
  07124	e2833018	 add         r3, r3, #0x18
  07128	e5930000	 ldr         r0, [r3]
  0712c	eb000000	 bl          SetDevicePowerState
  07130	e58d0010	 str         r0, [sp, #0x10]
  07134	e59d3010	 ldr         r3, [sp, #0x10]
  07138	e3530000	 cmp         r3, #0
  0713c	0a000010	 beq         |$LN2@SetPowerSt|
  07140	e59d3020	 ldr         r3, [sp, #0x20]
  07144	e3530003	 cmp         r3, #3
  07148	ba00000d	 blt         |$LN2@SetPowerSt|
  0714c	e59d301c	 ldr         r3, [sp, #0x1C]
  07150	e2833048	 add         r3, r3, #0x48
  07154	e5933000	 ldr         r3, [r3]
  07158	e3530003	 cmp         r3, #3
  0715c	aa000008	 bge         |$LN2@SetPowerSt|

; 862  :             {
; 863  : 				USBPeripheralEndSession(pPdd);

  07160	e59d001c	 ldr         r0, [sp, #0x1C]
  07164	eb000000	 bl          USBPeripheralEndSession

; 864  : 
; 865  :                 if(pPdd->disablePowerManagement == 0)

  07168	e59d301c	 ldr         r3, [sp, #0x1C]
  0716c	e283300c	 add         r3, r3, #0xC
  07170	e5933000	 ldr         r3, [r3]
  07174	e3530000	 cmp         r3, #0
  07178	1a000001	 bne         |$LN1@SetPowerSt|

; 866  :                 {
; 867  :                     USBPeripheralPowerDown(pPdd);

  0717c	e59d001c	 ldr         r0, [sp, #0x1C]
  07180	eb000000	 bl          USBPeripheralPowerDown
  07184		 |$LN1@SetPowerSt|
  07184		 |$LN2@SetPowerSt|
  07184		 |$LN3@SetPowerSt|

; 868  :                 }
; 869  :             }
; 870  :         }
; 871  : 
; 872  :         pPdd->currentPowerState = newPowerState;

  07184	e59d301c	 ldr         r3, [sp, #0x1C]
  07188	e2832048	 add         r2, r3, #0x48
  0718c	e59d3020	 ldr         r3, [sp, #0x20]
  07190	e5823000	 str         r3, [r2]
  07194		 |$LN7@SetPowerSt|

; 873  :     }
; 874  : }

  07194	e28dd014	 add         sp, sp, #0x14
  07198	e89d6000	 ldmia       sp, {sp, lr}
  0719c	e12fff1e	 bx          lr
  071a0		 |$LN22@SetPowerSt|
  071a0		 |$LN23@SetPowerSt|
  071a0	00000000	 DCD         |??_C@_1EI@ILEMKPGC@?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAD?$AA?$CF@|
  071a4		 |$LN24@SetPowerSt|
  071a4	00000000	 DCD         |dpCurSettings|
  071a8		 |$LN25@SetPowerSt|
  071a8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  071ac		 |$LN26@SetPowerSt|
  071ac	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  071b0		 |$LN27@SetPowerSt|
  071b0	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  071b4		 |$M50377|

			 ENDP  ; |SetPowerState|

	EXPORT	|??_C@_1CC@LKGFBKNH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@KGLFLGAN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAd?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@CIJDLBBF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@FKGDCDHH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Deinit|
	IMPORT	|cppiControllerDeinit|
	IMPORT	|Sleep|
	IMPORT	|GetTickCount|

  00108			 AREA	 |.pdata|, PDATA
|$T50409| DCD	|$LN30@UfnPdd_Dei|
	DCD	0x4000d104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LKGFBKNH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@KGLFLGAN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAd?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "s", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "g", 0x0, "o", 0x0, " ", 0x0, "i", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@CIJDLBBF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAs?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "!"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@FKGDCDHH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "o", 0x0, " "
	DCB	0x0, "i", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  071b4			 AREA	 |.text|, CODE, ARM

  071b4		 |UfnPdd_Deinit| PROC

; 2931 : {

  071b4		 |$LN30@UfnPdd_Dei|
  071b4	e1a0c00d	 mov         r12, sp
  071b8	e92d0001	 stmdb       sp!, {r0}
  071bc	e92d5000	 stmdb       sp!, {r12, lr}
  071c0	e24dd044	 sub         sp, sp, #0x44
  071c4		 |$M50406|

; 2932 :     DWORD rc = ERROR_SUCCESS;

  071c4	e3a03000	 mov         r3, #0
  071c8	e58d3000	 str         r3, [sp]

; 2933 :     BOOL endpointsNotIdle = TRUE;

  071cc	e3a03001	 mov         r3, #1
  071d0	e58d3004	 str         r3, [sp, #4]

; 2934 :     DWORD tc0 = GetTickCount();

  071d4	eb000000	 bl          GetTickCount
  071d8	e58d0018	 str         r0, [sp, #0x18]
  071dc	e59d3018	 ldr         r3, [sp, #0x18]
  071e0	e58d300c	 str         r3, [sp, #0xC]

; 2935 :     DWORD endpoint;
; 2936 : 
; 2937 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pPddContext;

  071e4	e59d304c	 ldr         r3, [sp, #0x4C]
  071e8	e58d3010	 str         r3, [sp, #0x10]

; 2938 : 
; 2939 :     DEBUGCHK(pPddContext != NULL);

  071ec	e59d304c	 ldr         r3, [sp, #0x4C]
  071f0	e3530000	 cmp         r3, #0
  071f4	0a000002	 beq         |$LN10@UfnPdd_Dei|
  071f8	e3a03001	 mov         r3, #1
  071fc	e58d301c	 str         r3, [sp, #0x1C]
  07200	ea000008	 b           |$LN11@UfnPdd_Dei|
  07204		 |$LN10@UfnPdd_Dei|
  07204	e3a03c0b	 mov         r3, #0xB, 24
  07208	e383307b	 orr         r3, r3, #0x7B
  0720c	e59f22e0	 ldr         r2, [pc, #0x2E0]
  07210	e59f12c8	 ldr         r1, [pc, #0x2C8]
  07214	e59f02d4	 ldr         r0, [pc, #0x2D4]
  07218	eb000000	 bl          NKDbgPrintfW
  0721c	e6000010	 __debugbreak_ce
  07220	e3a03000	 mov         r3, #0
  07224	e58d301c	 str         r3, [sp, #0x1C]
  07228		 |$LN11@UfnPdd_Dei|

; 2940 : 
; 2941 :     // Wait for endpoints to go into idle state before completing Deinit
; 2942 :     PRINTMSG(ZONE_FUNCTION, (L"UfnPdd_Deinit: waiting for endpoints to go idle\r\n"));

  07228	e59f32b0	 ldr         r3, [pc, #0x2B0]
  0722c	e5933440	 ldr         r3, [r3, #0x440]
  07230	e3130a01	 tst         r3, #1, 20
  07234	0a00000f	 beq         |$LN14@UfnPdd_Dei|
  07238	e59f32a0	 ldr         r3, [pc, #0x2A0]
  0723c	e5933440	 ldr         r3, [r3, #0x440]
  07240	e3130801	 tst         r3, #1, 16
  07244	0a000004	 beq         |$LN12@UfnPdd_Dei|
  07248	e59f029c	 ldr         r0, [pc, #0x29C]
  0724c	eb000000	 bl          CeLogMsg
  07250	e3a03001	 mov         r3, #1
  07254	e58d3020	 str         r3, [sp, #0x20]
  07258	ea000003	 b           |$LN13@UfnPdd_Dei|
  0725c		 |$LN12@UfnPdd_Dei|
  0725c	e59f0288	 ldr         r0, [pc, #0x288]
  07260	eb000000	 bl          NKDbgPrintfW
  07264	e3a03000	 mov         r3, #0
  07268	e58d3020	 str         r3, [sp, #0x20]
  0726c		 |$LN13@UfnPdd_Dei|
  0726c	e3a03001	 mov         r3, #1
  07270	e58d3024	 str         r3, [sp, #0x24]
  07274	ea000001	 b           |$LN15@UfnPdd_Dei|
  07278		 |$LN14@UfnPdd_Dei|
  07278	e3a03000	 mov         r3, #0
  0727c	e58d3024	 str         r3, [sp, #0x24]
  07280		 |$LN15@UfnPdd_Dei|
  07280		 |$LN7@UfnPdd_Dei|

; 2943 :     while((endpointsNotIdle && ((GetTickCount() - tc0) < 5000)))

  07280	e59d3004	 ldr         r3, [sp, #4]
  07284	e3530000	 cmp         r3, #0
  07288	0a000055	 beq         |$LN6@UfnPdd_Dei|
  0728c	eb000000	 bl          GetTickCount
  07290	e58d0028	 str         r0, [sp, #0x28]
  07294	e59d2028	 ldr         r2, [sp, #0x28]
  07298	e59d300c	 ldr         r3, [sp, #0xC]
  0729c	e0422003	 sub         r2, r2, r3
  072a0	e3a03c13	 mov         r3, #0x13, 24
  072a4	e3833088	 orr         r3, r3, #0x88
  072a8	e1520003	 cmp         r2, r3
  072ac	2a00004c	 bcs         |$LN6@UfnPdd_Dei|

; 2944 :     {
; 2945 :         // reset flag
; 2946 :         endpointsNotIdle = FALSE;

  072b0	e3a03000	 mov         r3, #0
  072b4	e58d3004	 str         r3, [sp, #4]

; 2947 : 
; 2948 :         // look for endpoint status
; 2949 :         for(endpoint = 0; endpoint < USBD_EP_COUNT; endpoint++)

  072b8	e3a03000	 mov         r3, #0
  072bc	e58d3008	 str         r3, [sp, #8]
  072c0	ea000002	 b           |$LN5@UfnPdd_Dei|
  072c4		 |$LN4@UfnPdd_Dei|
  072c4	e59d3008	 ldr         r3, [sp, #8]
  072c8	e2833001	 add         r3, r3, #1
  072cc	e58d3008	 str         r3, [sp, #8]
  072d0		 |$LN5@UfnPdd_Dei|
  072d0	e59d3008	 ldr         r3, [sp, #8]
  072d4	e3530010	 cmp         r3, #0x10
  072d8	2a00003e	 bcs         |$LN3@UfnPdd_Dei|

; 2950 :         {
; 2951 :             // only poll endpoints that have been initialised
; 2952 :             if((pPdd->ep[endpoint].epInitialised)&&
; 2953 :                (pPdd->ep[endpoint].epStage != MGC_END0_START))

  072dc	e59d3010	 ldr         r3, [sp, #0x10]
  072e0	e2831fa1	 add         r1, r3, #0xA1, 30
  072e4	e59d2008	 ldr         r2, [sp, #8]
  072e8	e3a0303c	 mov         r3, #0x3C
  072ec	e0030392	 mul         r3, r2, r3
  072f0	e0813003	 add         r3, r1, r3
  072f4	e2833004	 add         r3, r3, #4
  072f8	e5933000	 ldr         r3, [r3]
  072fc	e3530000	 cmp         r3, #0
  07300	0a000033	 beq         |$LN2@UfnPdd_Dei|
  07304	e59d3010	 ldr         r3, [sp, #0x10]
  07308	e2831fa1	 add         r1, r3, #0xA1, 30
  0730c	e59d2008	 ldr         r2, [sp, #8]
  07310	e3a0303c	 mov         r3, #0x3C
  07314	e0030392	 mul         r3, r2, r3
  07318	e0813003	 add         r3, r1, r3
  0731c	e283301c	 add         r3, r3, #0x1C
  07320	e5933000	 ldr         r3, [r3]
  07324	e3530001	 cmp         r3, #1
  07328	0a000029	 beq         |$LN2@UfnPdd_Dei|

; 2954 :             {
; 2955 :                 PRINTMSG(ZONE_FUNCTION, (L"UfnPdd_Deinit: endpoint %d in state %d (not idle!)\r\n",
; 2956 :                     endpoint, pPdd->ep[endpoint].epStage));

  0732c	e59f31ac	 ldr         r3, [pc, #0x1AC]
  07330	e5933440	 ldr         r3, [r3, #0x440]
  07334	e3130a01	 tst         r3, #1, 20
  07338	0a000021	 beq         |$LN18@UfnPdd_Dei|
  0733c	e59f319c	 ldr         r3, [pc, #0x19C]
  07340	e5933440	 ldr         r3, [r3, #0x440]
  07344	e3130801	 tst         r3, #1, 16
  07348	0a00000d	 beq         |$LN16@UfnPdd_Dei|
  0734c	e59d3010	 ldr         r3, [sp, #0x10]
  07350	e2831fa1	 add         r1, r3, #0xA1, 30
  07354	e59d2008	 ldr         r2, [sp, #8]
  07358	e3a0303c	 mov         r3, #0x3C
  0735c	e0030392	 mul         r3, r2, r3
  07360	e0813003	 add         r3, r1, r3
  07364	e283301c	 add         r3, r3, #0x1C
  07368	e5932000	 ldr         r2, [r3]
  0736c	e59d1008	 ldr         r1, [sp, #8]
  07370	e59f0170	 ldr         r0, [pc, #0x170]
  07374	eb000000	 bl          CeLogMsg
  07378	e3a03001	 mov         r3, #1
  0737c	e58d302c	 str         r3, [sp, #0x2C]
  07380	ea00000c	 b           |$LN17@UfnPdd_Dei|
  07384		 |$LN16@UfnPdd_Dei|
  07384	e59d3010	 ldr         r3, [sp, #0x10]
  07388	e2831fa1	 add         r1, r3, #0xA1, 30
  0738c	e59d2008	 ldr         r2, [sp, #8]
  07390	e3a0303c	 mov         r3, #0x3C
  07394	e0030392	 mul         r3, r2, r3
  07398	e0813003	 add         r3, r1, r3
  0739c	e283301c	 add         r3, r3, #0x1C
  073a0	e5932000	 ldr         r2, [r3]
  073a4	e59d1008	 ldr         r1, [sp, #8]
  073a8	e59f0138	 ldr         r0, [pc, #0x138]
  073ac	eb000000	 bl          NKDbgPrintfW
  073b0	e3a03000	 mov         r3, #0
  073b4	e58d302c	 str         r3, [sp, #0x2C]
  073b8		 |$LN17@UfnPdd_Dei|
  073b8	e3a03001	 mov         r3, #1
  073bc	e58d3030	 str         r3, [sp, #0x30]
  073c0	ea000001	 b           |$LN19@UfnPdd_Dei|
  073c4		 |$LN18@UfnPdd_Dei|
  073c4	e3a03000	 mov         r3, #0
  073c8	e58d3030	 str         r3, [sp, #0x30]
  073cc		 |$LN19@UfnPdd_Dei|

; 2957 :                 endpointsNotIdle = TRUE;

  073cc	e3a03001	 mov         r3, #1
  073d0	e58d3004	 str         r3, [sp, #4]
  073d4		 |$LN2@UfnPdd_Dei|

; 2958 :             }
; 2959 :         }

  073d4	eaffffba	 b           |$LN4@UfnPdd_Dei|
  073d8		 |$LN3@UfnPdd_Dei|

; 2960 : 
; 2961 :         // wait before polling again
; 2962 :         Sleep(10);

  073d8	e3a0000a	 mov         r0, #0xA
  073dc	eb000000	 bl          Sleep

; 2963 :     }

  073e0	eaffffa6	 b           |$LN7@UfnPdd_Dei|
  073e4		 |$LN6@UfnPdd_Dei|

; 2964 : 
; 2965 :     if(endpointsNotIdle)

  073e4	e59d3004	 ldr         r3, [sp, #4]
  073e8	e3530000	 cmp         r3, #0
  073ec	0a000015	 beq         |$LN1@UfnPdd_Dei|

; 2966 :     {
; 2967 :         // timed out waiting for endpoints to go idle
; 2968 :         PRINTMSG(ZONE_ERROR, (L"UfnPdd_Deinit: timed out waiting for endpoints to go idle\r\n"));

  073f0	e59f30e8	 ldr         r3, [pc, #0xE8]
  073f4	e5933440	 ldr         r3, [r3, #0x440]
  073f8	e3130001	 tst         r3, #1
  073fc	0a00000f	 beq         |$LN22@UfnPdd_Dei|
  07400	e59f30d8	 ldr         r3, [pc, #0xD8]
  07404	e5933440	 ldr         r3, [r3, #0x440]
  07408	e3130801	 tst         r3, #1, 16
  0740c	0a000004	 beq         |$LN20@UfnPdd_Dei|
  07410	e59f00cc	 ldr         r0, [pc, #0xCC]
  07414	eb000000	 bl          CeLogMsg
  07418	e3a03001	 mov         r3, #1
  0741c	e58d3034	 str         r3, [sp, #0x34]
  07420	ea000003	 b           |$LN21@UfnPdd_Dei|
  07424		 |$LN20@UfnPdd_Dei|
  07424	e59f00b8	 ldr         r0, [pc, #0xB8]
  07428	eb000000	 bl          NKDbgPrintfW
  0742c	e3a03000	 mov         r3, #0
  07430	e58d3034	 str         r3, [sp, #0x34]
  07434		 |$LN21@UfnPdd_Dei|
  07434	e3a03001	 mov         r3, #1
  07438	e58d3038	 str         r3, [sp, #0x38]
  0743c	ea000001	 b           |$LN23@UfnPdd_Dei|
  07440		 |$LN22@UfnPdd_Dei|
  07440	e3a03000	 mov         r3, #0
  07444	e58d3038	 str         r3, [sp, #0x38]
  07448		 |$LN23@UfnPdd_Dei|
  07448		 |$LN1@UfnPdd_Dei|

; 2969 :     }
; 2970 : 
; 2971 : #ifdef CPPI_DMA_SUPPORT
; 2972 : 
; 2973 :     /* Deinitialize the DMA Controller Object */
; 2974 :     cppiControllerDeinit(pPdd);

  07448	e59d0010	 ldr         r0, [sp, #0x10]
  0744c	eb000000	 bl          cppiControllerDeinit

; 2975 :     pPdd->pDmaCntrl = NULL;

  07450	e59d3010	 ldr         r3, [sp, #0x10]
  07454	e2833c06	 add         r3, r3, #6, 24
  07458	e283205c	 add         r2, r3, #0x5C
  0745c	e3a03000	 mov         r3, #0
  07460	e5823000	 str         r3, [r2]

; 2976 : 
; 2977 : #endif /* #ifdef CPPI_DMA_SUPPORT *
; 2978 : 
; 2979 :     /* Perform the De-initialization */
; 2980 :     UfnPdd_ContextTeardown(pPdd);

  07464	e59d0010	 ldr         r0, [sp, #0x10]
  07468	eb000000	 bl          UfnPdd_ContextTeardown

; 2981 : 
; 2982 :     PRINTMSG(ZONE_FUNCTION, (L"UfnPdd_Deinit:\r\n"));

  0746c	e59f306c	 ldr         r3, [pc, #0x6C]
  07470	e5933440	 ldr         r3, [r3, #0x440]
  07474	e3130a01	 tst         r3, #1, 20
  07478	0a00000f	 beq         |$LN26@UfnPdd_Dei|
  0747c	e59f305c	 ldr         r3, [pc, #0x5C]
  07480	e5933440	 ldr         r3, [r3, #0x440]
  07484	e3130801	 tst         r3, #1, 16
  07488	0a000004	 beq         |$LN24@UfnPdd_Dei|
  0748c	e59f0048	 ldr         r0, [pc, #0x48]
  07490	eb000000	 bl          CeLogMsg
  07494	e3a03001	 mov         r3, #1
  07498	e58d303c	 str         r3, [sp, #0x3C]
  0749c	ea000003	 b           |$LN25@UfnPdd_Dei|
  074a0		 |$LN24@UfnPdd_Dei|
  074a0	e59f0034	 ldr         r0, [pc, #0x34]
  074a4	eb000000	 bl          NKDbgPrintfW
  074a8	e3a03000	 mov         r3, #0
  074ac	e58d303c	 str         r3, [sp, #0x3C]
  074b0		 |$LN25@UfnPdd_Dei|
  074b0	e3a03001	 mov         r3, #1
  074b4	e58d3040	 str         r3, [sp, #0x40]
  074b8	ea000001	 b           |$LN27@UfnPdd_Dei|
  074bc		 |$LN26@UfnPdd_Dei|
  074bc	e3a03000	 mov         r3, #0
  074c0	e58d3040	 str         r3, [sp, #0x40]
  074c4		 |$LN27@UfnPdd_Dei|

; 2983 : 
; 2984 :     return rc;

  074c4	e59d3000	 ldr         r3, [sp]
  074c8	e58d3014	 str         r3, [sp, #0x14]

; 2985 : 
; 2986 : }

  074cc	e59d0014	 ldr         r0, [sp, #0x14]
  074d0	e28dd044	 add         sp, sp, #0x44
  074d4	e89d6000	 ldmia       sp, {sp, lr}
  074d8	e12fff1e	 bx          lr
  074dc		 |$LN31@UfnPdd_Dei|
  074dc		 |$LN32@UfnPdd_Dei|
  074dc	00000000	 DCD         |??_C@_1CC@LKGFBKNH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  074e0		 |$LN33@UfnPdd_Dei|
  074e0	00000000	 DCD         |dpCurSettings|
  074e4		 |$LN34@UfnPdd_Dei|
  074e4	00000000	 DCD         |??_C@_1HI@KGLFLGAN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAd?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg@|
  074e8		 |$LN35@UfnPdd_Dei|
  074e8	00000000	 DCD         |??_C@_1GK@CIJDLBBF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAs?$AAt@|
  074ec		 |$LN36@UfnPdd_Dei|
  074ec	00000000	 DCD         |??_C@_1GE@FKGDCDHH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo@|
  074f0		 |$LN37@UfnPdd_Dei|
  074f0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  074f4		 |$LN38@UfnPdd_Dei|
  074f4	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  074f8		 |$M50407|

			 ENDP  ; |UfnPdd_Deinit|

	EXPORT	|??_C@_1DG@HOGIIMAM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_DeregisterDevice|

  00110			 AREA	 |.pdata|, PDATA
|$T50427| DCD	|$LN14@UfnPdd_Der|
	DCD	0x4000b904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@HOGIIMAM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, ":", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  074f8			 AREA	 |.text|, CODE, ARM

  074f8		 |UfnPdd_DeregisterDevice| PROC

; 3002 : {

  074f8		 |$LN14@UfnPdd_Der|
  074f8	e1a0c00d	 mov         r12, sp
  074fc	e92d0001	 stmdb       sp!, {r0}
  07500	e92d5000	 stmdb       sp!, {r12, lr}
  07504	e24dd020	 sub         sp, sp, #0x20
  07508		 |$M50424|

; 3003 :     DWORD rc = ERROR_SUCCESS;

  07508	e3a03000	 mov         r3, #0
  0750c	e58d3000	 str         r3, [sp]

; 3004 :     UINT16      epCsrReg = 0;

  07510	e3a03000	 mov         r3, #0
  07514	e1cd30ba	 strh        r3, [sp, #0xA]

; 3005 :     UINT16      epCount  = 0;

  07518	e3a03000	 mov         r3, #0
  0751c	e1cd30b8	 strh        r3, [sp, #8]

; 3006 :     UINT8       powerRegVal;
; 3007 : 
; 3008 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pPddContext;

  07520	e59d3028	 ldr         r3, [sp, #0x28]
  07524	e58d300c	 str         r3, [sp, #0xC]

; 3009 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  07528	e59d300c	 ldr         r3, [sp, #0xC]
  0752c	e283301c	 add         r3, r3, #0x1C
  07530	e5933000	 ldr         r3, [r3]
  07534	e58d3004	 str         r3, [sp, #4]

; 3010 : 
; 3011 :     PRINTMSG(ZONE_FUNCTION, /*TRUE, */
; 3012 :             (L"UfnPdd_DeregisterDevice:\r\n"));

  07538	e59f3298	 ldr         r3, [pc, #0x298]
  0753c	e5933440	 ldr         r3, [r3, #0x440]
  07540	e3130a01	 tst         r3, #1, 20
  07544	0a00000f	 beq         |$LN10@UfnPdd_Der|
  07548	e59f3288	 ldr         r3, [pc, #0x288]
  0754c	e5933440	 ldr         r3, [r3, #0x440]
  07550	e3130801	 tst         r3, #1, 16
  07554	0a000004	 beq         |$LN8@UfnPdd_Der|
  07558	e59f0274	 ldr         r0, [pc, #0x274]
  0755c	eb000000	 bl          CeLogMsg
  07560	e3a03001	 mov         r3, #1
  07564	e58d3018	 str         r3, [sp, #0x18]
  07568	ea000003	 b           |$LN9@UfnPdd_Der|
  0756c		 |$LN8@UfnPdd_Der|
  0756c	e59f0260	 ldr         r0, [pc, #0x260]
  07570	eb000000	 bl          NKDbgPrintfW
  07574	e3a03000	 mov         r3, #0
  07578	e58d3018	 str         r3, [sp, #0x18]
  0757c		 |$LN9@UfnPdd_Der|
  0757c	e3a03001	 mov         r3, #1
  07580	e58d301c	 str         r3, [sp, #0x1C]
  07584	ea000001	 b           |$LN11@UfnPdd_Der|
  07588		 |$LN10@UfnPdd_Der|
  07588	e3a03000	 mov         r3, #0
  0758c	e58d301c	 str         r3, [sp, #0x1C]
  07590		 |$LN11@UfnPdd_Der|

; 3013 : 
; 3014 :     LOCK_ENDPOINT (pPdd);

  07590	e59d300c	 ldr         r3, [sp, #0xC]
  07594	e2830e27	 add         r0, r3, #0x27, 28
  07598	eb000000	 bl          EnterCriticalSection

; 3015 : 
; 3016 :     /* Flush the FIFO of EndPoint 0 */
; 3017 :     epCsrReg = pUsbdRegs->EPCSR[ 0 ].PERI_TXCSR;

  0759c	e59d3004	 ldr         r3, [sp, #4]
  075a0	e2833c05	 add         r3, r3, #5, 24
  075a4	e2833002	 add         r3, r3, #2
  075a8	e1d330b0	 ldrh        r3, [r3]
  075ac	e1cd30ba	 strh        r3, [sp, #0xA]

; 3018 :     epCsrReg |= (MGC_M_CSR0_FLUSHFIFO);

  075b0	e1dd30ba	 ldrh        r3, [sp, #0xA]
  075b4	e3833c01	 orr         r3, r3, #1, 24
  075b8	e1a03803	 mov         r3, r3, lsl #16
  075bc	e1a03823	 mov         r3, r3, lsr #16
  075c0	e1cd30ba	 strh        r3, [sp, #0xA]

; 3019 :     pUsbdRegs->EPCSR[ 0 ].PERI_TXCSR = epCsrReg;

  075c4	e59d3004	 ldr         r3, [sp, #4]
  075c8	e2833c05	 add         r3, r3, #5, 24
  075cc	e2832002	 add         r2, r3, #2
  075d0	e1dd30ba	 ldrh        r3, [sp, #0xA]
  075d4	e1c230b0	 strh        r3, [r2]

; 3020 : 
; 3021 :     /* Flush the FIFOs of all the Data EndPoints */
; 3022 :     for(epCount = 1; epCount < USBD_EP_COUNT; epCount++)

  075d8	e3a03001	 mov         r3, #1
  075dc	e1cd30b8	 strh        r3, [sp, #8]
  075e0	ea000004	 b           |$LN5@UfnPdd_Der|
  075e4		 |$LN4@UfnPdd_Der|
  075e4	e1dd30b8	 ldrh        r3, [sp, #8]
  075e8	e2833001	 add         r3, r3, #1
  075ec	e1a03803	 mov         r3, r3, lsl #16
  075f0	e1a03823	 mov         r3, r3, lsr #16
  075f4	e1cd30b8	 strh        r3, [sp, #8]
  075f8		 |$LN5@UfnPdd_Der|
  075f8	e1dd30b8	 ldrh        r3, [sp, #8]
  075fc	e3530010	 cmp         r3, #0x10
  07600	aa00005c	 bge         |$LN3@UfnPdd_Der|

; 3023 :     {
; 3024 :         if (pPdd->ep[epCount].dirRx == TRUE)

  07604	e59d300c	 ldr         r3, [sp, #0xC]
  07608	e2831fa1	 add         r1, r3, #0xA1, 30
  0760c	e1dd30b8	 ldrh        r3, [sp, #8]
  07610	e1a02003	 mov         r2, r3
  07614	e3a0303c	 mov         r3, #0x3C
  07618	e0030392	 mul         r3, r2, r3
  0761c	e0813003	 add         r3, r1, r3
  07620	e2833010	 add         r3, r3, #0x10
  07624	e5933000	 ldr         r3, [r3]
  07628	e3530001	 cmp         r3, #1
  0762c	1a000019	 bne         |$LN2@UfnPdd_Der|

; 3025 :         {
; 3026 :             epCsrReg = pUsbdRegs->EPCSR[ epCount ].PERI_RXCSR;

  07630	e59d3004	 ldr         r3, [sp, #4]
  07634	e2831c05	 add         r1, r3, #5, 24
  07638	e1dd30b8	 ldrh        r3, [sp, #8]
  0763c	e1a02003	 mov         r2, r3
  07640	e3a03010	 mov         r3, #0x10
  07644	e0030392	 mul         r3, r2, r3
  07648	e0813003	 add         r3, r1, r3
  0764c	e2833006	 add         r3, r3, #6
  07650	e1d330b0	 ldrh        r3, [r3]
  07654	e1cd30ba	 strh        r3, [sp, #0xA]

; 3027 :             epCsrReg |= MGC_M_RXCSR_FLUSHFIFO;

  07658	e1dd30ba	 ldrh        r3, [sp, #0xA]
  0765c	e3833010	 orr         r3, r3, #0x10
  07660	e1a03803	 mov         r3, r3, lsl #16
  07664	e1a03823	 mov         r3, r3, lsr #16
  07668	e1cd30ba	 strh        r3, [sp, #0xA]

; 3028 :             pUsbdRegs->EPCSR[ epCount ].PERI_RXCSR = epCsrReg;

  0766c	e59d3004	 ldr         r3, [sp, #4]
  07670	e2831c05	 add         r1, r3, #5, 24
  07674	e1dd30b8	 ldrh        r3, [sp, #8]
  07678	e1a02003	 mov         r2, r3
  0767c	e3a03010	 mov         r3, #0x10
  07680	e0030392	 mul         r3, r2, r3
  07684	e0813003	 add         r3, r1, r3
  07688	e2832006	 add         r2, r3, #6
  0768c	e1dd30ba	 ldrh        r3, [sp, #0xA]
  07690	e1c230b0	 strh        r3, [r2]

; 3029 :         }
; 3030 :         else

  07694	ea000018	 b           |$LN1@UfnPdd_Der|
  07698		 |$LN2@UfnPdd_Der|

; 3031 :         {
; 3032 :             epCsrReg = pUsbdRegs->EPCSR[ epCount ].PERI_TXCSR;

  07698	e59d3004	 ldr         r3, [sp, #4]
  0769c	e2831c05	 add         r1, r3, #5, 24
  076a0	e1dd30b8	 ldrh        r3, [sp, #8]
  076a4	e1a02003	 mov         r2, r3
  076a8	e3a03010	 mov         r3, #0x10
  076ac	e0030392	 mul         r3, r2, r3
  076b0	e0813003	 add         r3, r1, r3
  076b4	e2833002	 add         r3, r3, #2
  076b8	e1d330b0	 ldrh        r3, [r3]
  076bc	e1cd30ba	 strh        r3, [sp, #0xA]

; 3033 :             epCsrReg |= MGC_M_TXCSR_FLUSHFIFO;

  076c0	e1dd30ba	 ldrh        r3, [sp, #0xA]
  076c4	e3833008	 orr         r3, r3, #8
  076c8	e1a03803	 mov         r3, r3, lsl #16
  076cc	e1a03823	 mov         r3, r3, lsr #16
  076d0	e1cd30ba	 strh        r3, [sp, #0xA]

; 3034 :             pUsbdRegs->EPCSR[ epCount ].PERI_TXCSR = epCsrReg;

  076d4	e59d3004	 ldr         r3, [sp, #4]
  076d8	e2831c05	 add         r1, r3, #5, 24
  076dc	e1dd30b8	 ldrh        r3, [sp, #8]
  076e0	e1a02003	 mov         r2, r3
  076e4	e3a03010	 mov         r3, #0x10
  076e8	e0030392	 mul         r3, r2, r3
  076ec	e0813003	 add         r3, r1, r3
  076f0	e2832002	 add         r2, r3, #2
  076f4	e1dd30ba	 ldrh        r3, [sp, #0xA]
  076f8	e1c230b0	 strh        r3, [r2]
  076fc		 |$LN1@UfnPdd_Der|

; 3035 :         }
; 3036 : 
; 3037 :         /* Clear config */
; 3038 :         pPdd->ep[epCount].maxPacketSize = 0;

  076fc	e59d300c	 ldr         r3, [sp, #0xC]
  07700	e2831fa1	 add         r1, r3, #0xA1, 30
  07704	e1dd30b8	 ldrh        r3, [sp, #8]
  07708	e1a02003	 mov         r2, r3
  0770c	e3a0303c	 mov         r3, #0x3C
  07710	e0030392	 mul         r3, r2, r3
  07714	e0813003	 add         r3, r1, r3
  07718	e2832008	 add         r2, r3, #8
  0771c	e3a03000	 mov         r3, #0
  07720	e1c230b0	 strh        r3, [r2]

; 3039 :         pPdd->ep[epCount].fifoOffset = 0;

  07724	e59d300c	 ldr         r3, [sp, #0xC]
  07728	e2831fa1	 add         r1, r3, #0xA1, 30
  0772c	e1dd30b8	 ldrh        r3, [sp, #8]
  07730	e1a02003	 mov         r2, r3
  07734	e3a0303c	 mov         r3, #0x3C
  07738	e0030392	 mul         r3, r2, r3
  0773c	e0813003	 add         r3, r1, r3
  07740	e283200a	 add         r2, r3, #0xA
  07744	e3a03000	 mov         r3, #0
  07748	e1c230b0	 strh        r3, [r2]

; 3040 :         pPdd->ep[epCount].epInitialised = FALSE;

  0774c	e59d300c	 ldr         r3, [sp, #0xC]
  07750	e2831fa1	 add         r1, r3, #0xA1, 30
  07754	e1dd30b8	 ldrh        r3, [sp, #8]
  07758	e1a02003	 mov         r2, r3
  0775c	e3a0303c	 mov         r3, #0x3C
  07760	e0030392	 mul         r3, r2, r3
  07764	e0813003	 add         r3, r1, r3
  07768	e2832004	 add         r2, r3, #4
  0776c	e3a03000	 mov         r3, #0
  07770	e5823000	 str         r3, [r2]

; 3041 :     }

  07774	eaffff9a	 b           |$LN4@UfnPdd_Der|
  07778		 |$LN3@UfnPdd_Der|

; 3042 : 
; 3043 :     /* Put the Controller in SUSPEND State */
; 3044 : 
; 3045 :     /* Write into the Power Register's Enable SUSPEND Bit to initiate
; 3046 :      * the SUSPENDM Signal.
; 3047 :      */
; 3048 :     powerRegVal = pUsbdRegs->POWER;

  07778	e59d3004	 ldr         r3, [sp, #4]
  0777c	e2833b01	 add         r3, r3, #1, 22
  07780	e2833001	 add         r3, r3, #1
  07784	e5d33000	 ldrb        r3, [r3]
  07788	e5cd3010	 strb        r3, [sp, #0x10]

; 3049 :     powerRegVal |= MGC_M_POWER_ENSUSPEND;

  0778c	e5dd3010	 ldrb        r3, [sp, #0x10]
  07790	e3833001	 orr         r3, r3, #1
  07794	e20330ff	 and         r3, r3, #0xFF
  07798	e5cd3010	 strb        r3, [sp, #0x10]

; 3050 :     pUsbdRegs->POWER = powerRegVal;

  0779c	e59d3004	 ldr         r3, [sp, #4]
  077a0	e2833b01	 add         r3, r3, #1, 22
  077a4	e2832001	 add         r2, r3, #1
  077a8	e5dd3010	 ldrb        r3, [sp, #0x10]
  077ac	e5c23000	 strb        r3, [r2]

; 3051 : 
; 3052 :     UNLOCK_ENDPOINT (pPdd);

  077b0	e59d300c	 ldr         r3, [sp, #0xC]
  077b4	e2830e27	 add         r0, r3, #0x27, 28
  077b8	eb000000	 bl          LeaveCriticalSection

; 3053 : 
; 3054 :     return (rc);

  077bc	e59d3000	 ldr         r3, [sp]
  077c0	e58d3014	 str         r3, [sp, #0x14]

; 3055 : 
; 3056 : }

  077c4	e59d0014	 ldr         r0, [sp, #0x14]
  077c8	e28dd020	 add         sp, sp, #0x20
  077cc	e89d6000	 ldmia       sp, {sp, lr}
  077d0	e12fff1e	 bx          lr
  077d4		 |$LN15@UfnPdd_Der|
  077d4		 |$LN16@UfnPdd_Der|
  077d4	00000000	 DCD         |??_C@_1DG@HOGIIMAM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  077d8		 |$LN17@UfnPdd_Der|
  077d8	00000000	 DCD         |dpCurSettings|
  077dc		 |$M50425|

			 ENDP  ; |UfnPdd_DeregisterDevice|

	EXPORT	|??_C@_1BO@BIDNBHOG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Stop|
	IMPORT	|WaitForSingleObject|
	IMPORT	|InterruptDisable|

  00118			 AREA	 |.pdata|, PDATA
|$T50440| DCD	|$LN11@UfnPdd_Sto|
	DCD	0x40006204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BIDNBHOG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "o", 0x0, "p", 0x0, ":", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  077dc			 AREA	 |.text|, CODE, ARM

  077dc		 |UfnPdd_Stop| PROC

; 3074 : {

  077dc		 |$LN11@UfnPdd_Sto|
  077dc	e1a0c00d	 mov         r12, sp
  077e0	e92d0001	 stmdb       sp!, {r0}
  077e4	e92d5000	 stmdb       sp!, {r12, lr}
  077e8	e24dd018	 sub         sp, sp, #0x18
  077ec		 |$M50437|

; 3075 :     DWORD rc = ERROR_SUCCESS;

  077ec	e3a03000	 mov         r3, #0
  077f0	e58d3000	 str         r3, [sp]

; 3076 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pPddContext;

  077f4	e59d3020	 ldr         r3, [sp, #0x20]
  077f8	e58d3008	 str         r3, [sp, #8]

; 3077 : #ifdef CPPI_DMA_SUPPORT
; 3078 :     struct dma_controller * pDmaCntrl =
; 3079 :                 (struct dma_controller *)pPdd->pDmaCntrl;

  077fc	e59d3008	 ldr         r3, [sp, #8]
  07800	e2833c06	 add         r3, r3, #6, 24
  07804	e283305c	 add         r3, r3, #0x5C
  07808	e5933000	 ldr         r3, [r3]
  0780c	e58d3004	 str         r3, [sp, #4]

; 3080 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 3081 : 
; 3082 :     PRINTMSG(ZONE_FUNCTION, (L"UfnPdd_Stop:\r\n"));

  07810	e59f3148	 ldr         r3, [pc, #0x148]
  07814	e5933440	 ldr         r3, [r3, #0x440]
  07818	e3130a01	 tst         r3, #1, 20
  0781c	0a00000f	 beq         |$LN7@UfnPdd_Sto|
  07820	e59f3138	 ldr         r3, [pc, #0x138]
  07824	e5933440	 ldr         r3, [r3, #0x440]
  07828	e3130801	 tst         r3, #1, 16
  0782c	0a000004	 beq         |$LN5@UfnPdd_Sto|
  07830	e59f0124	 ldr         r0, [pc, #0x124]
  07834	eb000000	 bl          CeLogMsg
  07838	e3a03001	 mov         r3, #1
  0783c	e58d3010	 str         r3, [sp, #0x10]
  07840	ea000003	 b           |$LN6@UfnPdd_Sto|
  07844		 |$LN5@UfnPdd_Sto|
  07844	e59f0110	 ldr         r0, [pc, #0x110]
  07848	eb000000	 bl          NKDbgPrintfW
  0784c	e3a03000	 mov         r3, #0
  07850	e58d3010	 str         r3, [sp, #0x10]
  07854		 |$LN6@UfnPdd_Sto|
  07854	e3a03001	 mov         r3, #1
  07858	e58d3014	 str         r3, [sp, #0x14]
  0785c	ea000001	 b           |$LN8@UfnPdd_Sto|
  07860		 |$LN7@UfnPdd_Sto|
  07860	e3a03000	 mov         r3, #0
  07864	e58d3014	 str         r3, [sp, #0x14]
  07868		 |$LN8@UfnPdd_Sto|

; 3083 : 
; 3084 : #ifdef CPPI_DMA_SUPPORT
; 3085 :     /* Stop the DMA Controller Object */
; 3086 :     if (pDmaCntrl != NULL)

  07868	e59d3004	 ldr         r3, [sp, #4]
  0786c	e3530000	 cmp         r3, #0
  07870	0a000008	 beq         |$LN2@UfnPdd_Sto|

; 3087 :     {
; 3088 :         pDmaCntrl->pfnStop(pPdd->pDmaCntrl);

  07874	e59d3008	 ldr         r3, [sp, #8]
  07878	e2833c06	 add         r3, r3, #6, 24
  0787c	e283305c	 add         r3, r3, #0x5C
  07880	e5930000	 ldr         r0, [r3]
  07884	e59d3004	 ldr         r3, [sp, #4]
  07888	e2833004	 add         r3, r3, #4
  0788c	e5933000	 ldr         r3, [r3]
  07890	e1a0e00f	 mov         lr, pc
  07894	e12fff13	 bx          r3
  07898		 |$LN2@UfnPdd_Sto|

; 3089 :     }
; 3090 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 3091 : 
; 3092 :     /* Stop the IST */
; 3093 :     pPdd->exitIntrThread = TRUE;

  07898	e59d3008	 ldr         r3, [sp, #8]
  0789c	e2832034	 add         r2, r3, #0x34
  078a0	e3a03001	 mov         r3, #1
  078a4	e5823000	 str         r3, [r2]

; 3094 : 
; 3095 :     if (pPdd->hIntrThread && pPdd->hIntrEvent)

  078a8	e59d3008	 ldr         r3, [sp, #8]
  078ac	e2833044	 add         r3, r3, #0x44
  078b0	e5933000	 ldr         r3, [r3]
  078b4	e3530000	 cmp         r3, #0
  078b8	0a000011	 beq         |$LN1@UfnPdd_Sto|
  078bc	e59d3008	 ldr         r3, [sp, #8]
  078c0	e2833030	 add         r3, r3, #0x30
  078c4	e5933000	 ldr         r3, [r3]
  078c8	e3530000	 cmp         r3, #0
  078cc	0a00000c	 beq         |$LN1@UfnPdd_Sto|

; 3096 :     {
; 3097 :         InterruptDisable(pPdd->sysIntr);

  078d0	e59d3008	 ldr         r3, [sp, #8]
  078d4	e283302c	 add         r3, r3, #0x2C
  078d8	e5930000	 ldr         r0, [r3]
  078dc	eb000000	 bl          InterruptDisable

; 3098 :         SetEvent(pPdd->hIntrEvent);

  078e0	e59d3008	 ldr         r3, [sp, #8]
  078e4	e2833030	 add         r3, r3, #0x30
  078e8	e5930000	 ldr         r0, [r3]
  078ec	eb000000	 bl          SetEvent

; 3099 :         WaitForSingleObject(pPdd->hIntrThread, INFINITE);

  078f0	e3e01000	 mvn         r1, #0
  078f4	e59d3008	 ldr         r3, [sp, #8]
  078f8	e2833044	 add         r3, r3, #0x44
  078fc	e5930000	 ldr         r0, [r3]
  07900	eb000000	 bl          WaitForSingleObject
  07904		 |$LN1@UfnPdd_Sto|

; 3100 :     }
; 3101 : 
; 3102 :     CloseHandle(pPdd->hIntrThread);

  07904	e59d3008	 ldr         r3, [sp, #8]
  07908	e2833044	 add         r3, r3, #0x44
  0790c	e5930000	 ldr         r0, [r3]
  07910	eb000000	 bl          CloseHandle

; 3103 :     CloseHandle(pPdd->hIntrEvent);

  07914	e59d3008	 ldr         r3, [sp, #8]
  07918	e2833030	 add         r3, r3, #0x30
  0791c	e5930000	 ldr         r0, [r3]
  07920	eb000000	 bl          CloseHandle

; 3104 : 
; 3105 :     pPdd->hIntrThread = NULL;

  07924	e59d3008	 ldr         r3, [sp, #8]
  07928	e2832044	 add         r2, r3, #0x44
  0792c	e3a03000	 mov         r3, #0
  07930	e5823000	 str         r3, [r2]

; 3106 :     pPdd->hIntrEvent  = NULL;

  07934	e59d3008	 ldr         r3, [sp, #8]
  07938	e2832030	 add         r2, r3, #0x30
  0793c	e3a03000	 mov         r3, #0
  07940	e5823000	 str         r3, [r2]

; 3107 : 
; 3108 : 	return (rc);

  07944	e59d3000	 ldr         r3, [sp]
  07948	e58d300c	 str         r3, [sp, #0xC]

; 3109 : }

  0794c	e59d000c	 ldr         r0, [sp, #0xC]
  07950	e28dd018	 add         sp, sp, #0x18
  07954	e89d6000	 ldmia       sp, {sp, lr}
  07958	e12fff1e	 bx          lr
  0795c		 |$LN12@UfnPdd_Sto|
  0795c		 |$LN13@UfnPdd_Sto|
  0795c	00000000	 DCD         |??_C@_1BO@BIDNBHOG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  07960		 |$LN14@UfnPdd_Sto|
  07960	00000000	 DCD         |dpCurSettings|
  07964		 |$M50438|

			 ENDP  ; |UfnPdd_Stop|

	EXPORT	|??_C@_1DI@DNFBFJFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_DeinitEndpoint|

  00120			 AREA	 |.pdata|, PDATA
|$T50455| DCD	|$LN16@UfnPdd_Dei@2|
	DCD	0x4000fa04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@DNFBFJFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  07964			 AREA	 |.text|, CODE, ARM

  07964		 |UfnPdd_DeinitEndpoint| PROC

; 3129 : {

  07964		 |$LN16@UfnPdd_Dei@2|
  07964	e1a0c00d	 mov         r12, sp
  07968	e92d0003	 stmdb       sp!, {r0, r1}
  0796c	e92d5000	 stmdb       sp!, {r12, lr}
  07970	e24dd02c	 sub         sp, sp, #0x2C
  07974		 |$M50452|

; 3130 :     DWORD rc = ERROR_SUCCESS;

  07974	e3a03000	 mov         r3, #0
  07978	e58d3000	 str         r3, [sp]

; 3131 :     DWORD intrRegVal = 0;

  0797c	e3a03000	 mov         r3, #0
  07980	e58d3004	 str         r3, [sp, #4]

; 3132 : 
; 3133 :     UINT16      epCsrReg = 0;

  07984	e3a03000	 mov         r3, #0
  07988	e1cd31b4	 strh        r3, [sp, #0x14]

; 3134 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pvPddContext;

  0798c	e59d3034	 ldr         r3, [sp, #0x34]
  07990	e58d3018	 str         r3, [sp, #0x18]

; 3135 :     CSL_UsbRegs     *pUsbdRegs = pPdd->pUsbdRegs;

  07994	e59d3018	 ldr         r3, [sp, #0x18]
  07998	e283301c	 add         r3, r3, #0x1C
  0799c	e5933000	 ldr         r3, [r3]
  079a0	e58d300c	 str         r3, [sp, #0xC]

; 3136 : 
; 3137 : #ifdef CPPI_DMA_SUPPORT
; 3138 :     struct dma_controller *pDma   = (struct dma_controller *)pPdd->pDmaCntrl;

  079a4	e59d3018	 ldr         r3, [sp, #0x18]
  079a8	e2833c06	 add         r3, r3, #6, 24
  079ac	e283305c	 add         r3, r3, #0x5C
  079b0	e5933000	 ldr         r3, [r3]
  079b4	e58d3008	 str         r3, [sp, #8]

; 3139 :     struct cppi_channel *pDmaChan = (struct cppi_channel *)
; 3140 :                                     pPdd->ep[endpoint].pDmaChan;

  079b8	e59d3018	 ldr         r3, [sp, #0x18]
  079bc	e2831fa1	 add         r1, r3, #0xA1, 30
  079c0	e59d2038	 ldr         r2, [sp, #0x38]
  079c4	e3a0303c	 mov         r3, #0x3C
  079c8	e0030392	 mul         r3, r2, r3
  079cc	e0813003	 add         r3, r1, r3
  079d0	e283302c	 add         r3, r3, #0x2C
  079d4	e5933000	 ldr         r3, [r3]
  079d8	e58d3010	 str         r3, [sp, #0x10]

; 3141 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 3142 : 
; 3143 :     PRINTMSG(ZONE_FUNCTION, /*TRUE, */
; 3144 :             (L"UfnPdd_DeinitEndpoint: %d\r\n", endpoint));

  079dc	e59f335c	 ldr         r3, [pc, #0x35C]
  079e0	e5933440	 ldr         r3, [r3, #0x440]
  079e4	e3130a01	 tst         r3, #1, 20
  079e8	0a000011	 beq         |$LN10@UfnPdd_Dei@2|
  079ec	e59f334c	 ldr         r3, [pc, #0x34C]
  079f0	e5933440	 ldr         r3, [r3, #0x440]
  079f4	e3130801	 tst         r3, #1, 16
  079f8	0a000005	 beq         |$LN8@UfnPdd_Dei@2|
  079fc	e59d1038	 ldr         r1, [sp, #0x38]
  07a00	e59f0340	 ldr         r0, [pc, #0x340]
  07a04	eb000000	 bl          CeLogMsg
  07a08	e3a03001	 mov         r3, #1
  07a0c	e58d3020	 str         r3, [sp, #0x20]
  07a10	ea000004	 b           |$LN9@UfnPdd_Dei@2|
  07a14		 |$LN8@UfnPdd_Dei@2|
  07a14	e59d1038	 ldr         r1, [sp, #0x38]
  07a18	e59f0328	 ldr         r0, [pc, #0x328]
  07a1c	eb000000	 bl          NKDbgPrintfW
  07a20	e3a03000	 mov         r3, #0
  07a24	e58d3020	 str         r3, [sp, #0x20]
  07a28		 |$LN9@UfnPdd_Dei@2|
  07a28	e3a03001	 mov         r3, #1
  07a2c	e58d3024	 str         r3, [sp, #0x24]
  07a30	ea000001	 b           |$LN11@UfnPdd_Dei@2|
  07a34		 |$LN10@UfnPdd_Dei@2|
  07a34	e3a03000	 mov         r3, #0
  07a38	e58d3024	 str         r3, [sp, #0x24]
  07a3c		 |$LN11@UfnPdd_Dei@2|

; 3145 : 
; 3146 :     DEBUGCHK(endpoint < USBD_EP_COUNT);

  07a3c	e59d3038	 ldr         r3, [sp, #0x38]
  07a40	e3530010	 cmp         r3, #0x10
  07a44	2a000002	 bcs         |$LN12@UfnPdd_Dei@2|
  07a48	e3a03001	 mov         r3, #1
  07a4c	e58d3028	 str         r3, [sp, #0x28]
  07a50	ea000008	 b           |$LN13@UfnPdd_Dei@2|
  07a54		 |$LN12@UfnPdd_Dei@2|
  07a54	e3a03b03	 mov         r3, #3, 22
  07a58	e383304a	 orr         r3, r3, #0x4A
  07a5c	e59f22e0	 ldr         r2, [pc, #0x2E0]
  07a60	e59f12d8	 ldr         r1, [pc, #0x2D8]
  07a64	e59f02d0	 ldr         r0, [pc, #0x2D0]
  07a68	eb000000	 bl          NKDbgPrintfW
  07a6c	e6000010	 __debugbreak_ce
  07a70	e3a03000	 mov         r3, #0
  07a74	e58d3028	 str         r3, [sp, #0x28]
  07a78		 |$LN13@UfnPdd_Dei@2|

; 3147 : 
; 3148 :     LOCK_ENDPOINT (pPdd);

  07a78	e59d3018	 ldr         r3, [sp, #0x18]
  07a7c	e2830e27	 add         r0, r3, #0x27, 28
  07a80	eb000000	 bl          EnterCriticalSection

; 3149 : 
; 3150 :     /* Check which EndPoint is it */
; 3151 :     if (endpoint == 0)

  07a84	e59d3038	 ldr         r3, [sp, #0x38]
  07a88	e3530000	 cmp         r3, #0
  07a8c	1a000022	 bne         |$LN5@UfnPdd_Dei@2|

; 3152 :     {
; 3153 :         /* For EndPoint Zero, Abort the Current Transfer by setting
; 3154 :          * up the ServRxPktRdy and the SetupEnd Bits
; 3155 :          */
; 3156 :         epCsrReg = pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR;

  07a90	e59d300c	 ldr         r3, [sp, #0xC]
  07a94	e2831c05	 add         r1, r3, #5, 24
  07a98	e59d2038	 ldr         r2, [sp, #0x38]
  07a9c	e3a03010	 mov         r3, #0x10
  07aa0	e0030392	 mul         r3, r2, r3
  07aa4	e0813003	 add         r3, r1, r3
  07aa8	e2833002	 add         r3, r3, #2
  07aac	e1d330b0	 ldrh        r3, [r3]
  07ab0	e1cd31b4	 strh        r3, [sp, #0x14]

; 3157 :         epCsrReg |= (MGC_M_CSR0_P_SVDSETUPEND | MGC_M_CSR0_P_SVDRXPKTRDY);

  07ab4	e1dd31b4	 ldrh        r3, [sp, #0x14]
  07ab8	e38330c0	 orr         r3, r3, #0xC0
  07abc	e1a03803	 mov         r3, r3, lsl #16
  07ac0	e1a03823	 mov         r3, r3, lsr #16
  07ac4	e1cd31b4	 strh        r3, [sp, #0x14]

; 3158 :         pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR = epCsrReg;

  07ac8	e59d300c	 ldr         r3, [sp, #0xC]
  07acc	e2831c05	 add         r1, r3, #5, 24
  07ad0	e59d2038	 ldr         r2, [sp, #0x38]
  07ad4	e3a03010	 mov         r3, #0x10
  07ad8	e0030392	 mul         r3, r2, r3
  07adc	e0813003	 add         r3, r1, r3
  07ae0	e2832002	 add         r2, r3, #2
  07ae4	e1dd31b4	 ldrh        r3, [sp, #0x14]
  07ae8	e1c230b0	 strh        r3, [r2]

; 3159 :         intrRegVal |= (1 << endpoint) << USB_OTG_TXINT_SHIFT;

  07aec	e59d2038	 ldr         r2, [sp, #0x38]
  07af0	e3a03001	 mov         r3, #1
  07af4	e1a02213	 mov         r2, r3, lsl r2
  07af8	e59d3004	 ldr         r3, [sp, #4]
  07afc	e1833002	 orr         r3, r3, r2
  07b00	e58d3004	 str         r3, [sp, #4]

; 3160 :         pPdd->fWaitingForHandshake = FALSE;

  07b04	e59d3018	 ldr         r3, [sp, #0x18]
  07b08	e2833c06	 add         r3, r3, #6, 24
  07b0c	e283204c	 add         r2, r3, #0x4C
  07b10	e3a03000	 mov         r3, #0
  07b14	e5823000	 str         r3, [r2]

; 3161 :     }
; 3162 :     else

  07b18	ea00005d	 b           |$LN4@UfnPdd_Dei@2|
  07b1c		 |$LN5@UfnPdd_Dei@2|

; 3163 :     {
; 3164 : #ifdef CPPI_DMA_SUPPORT
; 3165 :         DeinitEndpointDmaBuffer(pPdd, endpoint);

  07b1c	e59d1038	 ldr         r1, [sp, #0x38]
  07b20	e59d0018	 ldr         r0, [sp, #0x18]
  07b24	eb000000	 bl          DeinitEndpointDmaBuffer

; 3166 : #endif
; 3167 : 
; 3168 :         if (pPdd->ep[endpoint].dirRx == FALSE)

  07b28	e59d3018	 ldr         r3, [sp, #0x18]
  07b2c	e2831fa1	 add         r1, r3, #0xA1, 30
  07b30	e59d2038	 ldr         r2, [sp, #0x38]
  07b34	e3a0303c	 mov         r3, #0x3C
  07b38	e0030392	 mul         r3, r2, r3
  07b3c	e0813003	 add         r3, r1, r3
  07b40	e2833010	 add         r3, r3, #0x10
  07b44	e5933000	 ldr         r3, [r3]
  07b48	e3530000	 cmp         r3, #0
  07b4c	1a00001d	 bne         |$LN3@UfnPdd_Dei@2|

; 3169 :         {
; 3170 :             epCsrReg = pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR;

  07b50	e59d300c	 ldr         r3, [sp, #0xC]
  07b54	e2831c05	 add         r1, r3, #5, 24
  07b58	e59d2038	 ldr         r2, [sp, #0x38]
  07b5c	e3a03010	 mov         r3, #0x10
  07b60	e0030392	 mul         r3, r2, r3
  07b64	e0813003	 add         r3, r1, r3
  07b68	e2833002	 add         r3, r3, #2
  07b6c	e1d330b0	 ldrh        r3, [r3]
  07b70	e1cd31b4	 strh        r3, [sp, #0x14]

; 3171 :             epCsrReg |= MGC_M_TXCSR_FLUSHFIFO;

  07b74	e1dd31b4	 ldrh        r3, [sp, #0x14]
  07b78	e3833008	 orr         r3, r3, #8
  07b7c	e1a03803	 mov         r3, r3, lsl #16
  07b80	e1a03823	 mov         r3, r3, lsr #16
  07b84	e1cd31b4	 strh        r3, [sp, #0x14]

; 3172 :             pUsbdRegs->EPCSR[ endpoint ].PERI_TXCSR = epCsrReg;

  07b88	e59d300c	 ldr         r3, [sp, #0xC]
  07b8c	e2831c05	 add         r1, r3, #5, 24
  07b90	e59d2038	 ldr         r2, [sp, #0x38]
  07b94	e3a03010	 mov         r3, #0x10
  07b98	e0030392	 mul         r3, r2, r3
  07b9c	e0813003	 add         r3, r1, r3
  07ba0	e2832002	 add         r2, r3, #2
  07ba4	e1dd31b4	 ldrh        r3, [sp, #0x14]
  07ba8	e1c230b0	 strh        r3, [r2]

; 3173 :             intrRegVal |= (1 << endpoint) << USB_OTG_TXINT_SHIFT;

  07bac	e59d2038	 ldr         r2, [sp, #0x38]
  07bb0	e3a03001	 mov         r3, #1
  07bb4	e1a02213	 mov         r2, r3, lsl r2
  07bb8	e59d3004	 ldr         r3, [sp, #4]
  07bbc	e1833002	 orr         r3, r3, r2
  07bc0	e58d3004	 str         r3, [sp, #4]

; 3174 :         }
; 3175 :         else

  07bc4	ea00001d	 b           |$LN2@UfnPdd_Dei@2|
  07bc8		 |$LN3@UfnPdd_Dei@2|

; 3176 :         {
; 3177 :             epCsrReg = pUsbdRegs->EPCSR[ endpoint ].PERI_RXCSR;

  07bc8	e59d300c	 ldr         r3, [sp, #0xC]
  07bcc	e2831c05	 add         r1, r3, #5, 24
  07bd0	e59d2038	 ldr         r2, [sp, #0x38]
  07bd4	e3a03010	 mov         r3, #0x10
  07bd8	e0030392	 mul         r3, r2, r3
  07bdc	e0813003	 add         r3, r1, r3
  07be0	e2833006	 add         r3, r3, #6
  07be4	e1d330b0	 ldrh        r3, [r3]
  07be8	e1cd31b4	 strh        r3, [sp, #0x14]

; 3178 :             epCsrReg |= MGC_M_RXCSR_FLUSHFIFO;

  07bec	e1dd31b4	 ldrh        r3, [sp, #0x14]
  07bf0	e3833010	 orr         r3, r3, #0x10
  07bf4	e1a03803	 mov         r3, r3, lsl #16
  07bf8	e1a03823	 mov         r3, r3, lsr #16
  07bfc	e1cd31b4	 strh        r3, [sp, #0x14]

; 3179 :             pUsbdRegs->EPCSR[ endpoint ].PERI_RXCSR = epCsrReg;

  07c00	e59d300c	 ldr         r3, [sp, #0xC]
  07c04	e2831c05	 add         r1, r3, #5, 24
  07c08	e59d2038	 ldr         r2, [sp, #0x38]
  07c0c	e3a03010	 mov         r3, #0x10
  07c10	e0030392	 mul         r3, r2, r3
  07c14	e0813003	 add         r3, r1, r3
  07c18	e2832006	 add         r2, r3, #6
  07c1c	e1dd31b4	 ldrh        r3, [sp, #0x14]
  07c20	e1c230b0	 strh        r3, [r2]

; 3180 :             intrRegVal |= (1 << endpoint) << USB_OTG_RXINT_SHIFT;

  07c24	e59d2038	 ldr         r2, [sp, #0x38]
  07c28	e3a03001	 mov         r3, #1
  07c2c	e1a03213	 mov         r3, r3, lsl r2
  07c30	e1a02803	 mov         r2, r3, lsl #16
  07c34	e59d3004	 ldr         r3, [sp, #4]
  07c38	e1833002	 orr         r3, r3, r2
  07c3c	e58d3004	 str         r3, [sp, #4]
  07c40		 |$LN2@UfnPdd_Dei@2|

; 3181 :         }
; 3182 : 
; 3183 : #ifdef CPPI_DMA_SUPPORT
; 3184 :         /* Try Releasing the Allocated CPPI DMA Channel */
; 3185 :         if ((endpoint != 0) && (pDmaChan != NULL))

  07c40	e59d3038	 ldr         r3, [sp, #0x38]
  07c44	e3530000	 cmp         r3, #0
  07c48	0a000011	 beq         |$LN1@UfnPdd_Dei@2|
  07c4c	e59d3010	 ldr         r3, [sp, #0x10]
  07c50	e3530000	 cmp         r3, #0
  07c54	0a00000e	 beq         |$LN1@UfnPdd_Dei@2|

; 3186 :         {
; 3187 :             pDma->pfnChannelRelease ((struct dma_channel *)pDmaChan);

  07c58	e59d0010	 ldr         r0, [sp, #0x10]
  07c5c	e59d3008	 ldr         r3, [sp, #8]
  07c60	e283300c	 add         r3, r3, #0xC
  07c64	e5933000	 ldr         r3, [r3]
  07c68	e1a0e00f	 mov         lr, pc
  07c6c	e12fff13	 bx          r3

; 3188 :             pPdd->ep[endpoint].pDmaChan = NULL;

  07c70	e59d3018	 ldr         r3, [sp, #0x18]
  07c74	e2831fa1	 add         r1, r3, #0xA1, 30
  07c78	e59d2038	 ldr         r2, [sp, #0x38]
  07c7c	e3a0303c	 mov         r3, #0x3C
  07c80	e0030392	 mul         r3, r2, r3
  07c84	e0813003	 add         r3, r1, r3
  07c88	e283202c	 add         r2, r3, #0x2C
  07c8c	e3a03000	 mov         r3, #0
  07c90	e5823000	 str         r3, [r2]
  07c94		 |$LN1@UfnPdd_Dei@2|
  07c94		 |$LN4@UfnPdd_Dei@2|

; 3189 :         }
; 3190 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 3191 :     }
; 3192 : 
; 3193 :     /* Disable the interrupts for this EndPoint */
; 3194 :     pUsbdRegs->EP_INTMSKCLRR = intrRegVal;

  07c94	e59d300c	 ldr         r3, [sp, #0xC]
  07c98	e2832034	 add         r2, r3, #0x34
  07c9c	e59d3004	 ldr         r3, [sp, #4]
  07ca0	e5823000	 str         r3, [r2]

; 3195 : 
; 3196 :     /* Now Update the Status Vars of this EP */
; 3197 :     pPdd->ep[endpoint].epStage   = MGC_END0_START;

  07ca4	e59d3018	 ldr         r3, [sp, #0x18]
  07ca8	e2831fa1	 add         r1, r3, #0xA1, 30
  07cac	e59d2038	 ldr         r2, [sp, #0x38]
  07cb0	e3a0303c	 mov         r3, #0x3C
  07cb4	e0030392	 mul         r3, r2, r3
  07cb8	e0813003	 add         r3, r1, r3
  07cbc	e283201c	 add         r2, r3, #0x1C
  07cc0	e3a03001	 mov         r3, #1
  07cc4	e5823000	 str         r3, [r2]

; 3198 :     pPdd->ep[endpoint].pTransfer = NULL;

  07cc8	e59d3018	 ldr         r3, [sp, #0x18]
  07ccc	e2831fa1	 add         r1, r3, #0xA1, 30
  07cd0	e59d2038	 ldr         r2, [sp, #0x38]
  07cd4	e3a0303c	 mov         r3, #0x3C
  07cd8	e0030392	 mul         r3, r2, r3
  07cdc	e0813003	 add         r3, r1, r3
  07ce0	e2832020	 add         r2, r3, #0x20
  07ce4	e3a03000	 mov         r3, #0
  07ce8	e5823000	 str         r3, [r2]

; 3199 :     pPdd->ep[endpoint].epInitialised = FALSE;

  07cec	e59d3018	 ldr         r3, [sp, #0x18]
  07cf0	e2831fa1	 add         r1, r3, #0xA1, 30
  07cf4	e59d2038	 ldr         r2, [sp, #0x38]
  07cf8	e3a0303c	 mov         r3, #0x3C
  07cfc	e0030392	 mul         r3, r2, r3
  07d00	e0813003	 add         r3, r1, r3
  07d04	e2832004	 add         r2, r3, #4
  07d08	e3a03000	 mov         r3, #0
  07d0c	e5823000	 str         r3, [r2]

; 3200 : 
; 3201 :     UNLOCK_ENDPOINT (pPdd);

  07d10	e59d3018	 ldr         r3, [sp, #0x18]
  07d14	e2830e27	 add         r0, r3, #0x27, 28
  07d18	eb000000	 bl          LeaveCriticalSection

; 3202 : 
; 3203 :     /* Allow things to settle before EP is re-initialised */
; 3204 :     Sleep(20);

  07d1c	e3a00014	 mov         r0, #0x14
  07d20	eb000000	 bl          Sleep

; 3205 : 
; 3206 :     return (rc);

  07d24	e59d3000	 ldr         r3, [sp]
  07d28	e58d301c	 str         r3, [sp, #0x1C]

; 3207 : }

  07d2c	e59d001c	 ldr         r0, [sp, #0x1C]
  07d30	e28dd02c	 add         sp, sp, #0x2C
  07d34	e89d6000	 ldmia       sp, {sp, lr}
  07d38	e12fff1e	 bx          lr
  07d3c		 |$LN17@UfnPdd_Dei@2|
  07d3c		 |$LN18@UfnPdd_Dei@2|
  07d3c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  07d40		 |$LN19@UfnPdd_Dei@2|
  07d40	00000000	 DCD         |dpCurSettings|
  07d44		 |$LN20@UfnPdd_Dei@2|
  07d44	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  07d48		 |$LN21@UfnPdd_Dei@2|
  07d48	00000000	 DCD         |??_C@_1DI@DNFBFJFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  07d4c		 |$M50453|

			 ENDP  ; |UfnPdd_DeinitEndpoint|

	EXPORT	|??_C@_1BA@PLOOFDPK@?$AA?$CF?$AAs?$AA?5?$AA?9?$AA?9?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@OAFMEOOK@?$AAI?$AAN?$AAT?$AAM?$AAS?$AAK?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@BCICKFGE@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAF?$AAI?$AAF?$AAO?$AAS?$AAZ?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAC?$AAS?$AAR?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@BENODFNJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@ILIKPLGK@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DAJPCKDK@?$AA?$CF?$AAs?$AA?5?$AA?$CL?$AA?$CL?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@ECKIBBDI@?$AAA?$AAM?$AA3?$AA5?$AA1?$AA7?$AAU?$AAs?$AAb?$AAF?$AAn?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_InitEndpoint|

  00128			 AREA	 |.pdata|, PDATA
|$T50502| DCD	|$LN50@UfnPdd_Ini@2|
	DCD	0x4002ab04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@PLOOFDPK@?$AA?$CF?$AAs?$AA?5?$AA?9?$AA?9?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "-", 0x0, "-", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@OAFMEOOK@?$AAI?$AAN?$AAT?$AAM?$AAS?$AAK?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "N", 0x0, "T", 0x0, "M", 0x0, "S", 0x0, "K", 0x0, "R"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@BCICKFGE@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAF?$AAI?$AAF?$AAO?$AAS?$AAZ?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAC?$AAS?$AAR?$AA?5@| DCB "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "F"
	DCB	0x0, "I", 0x0, "F", 0x0, "O", 0x0, "S", 0x0, "Z", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "F"
	DCB	0x0, "I", 0x0, "F", 0x0, "O", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "R"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@BENODFNJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?0@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "%", 0x0, "u"
	DCB	0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ",", 0x0, " ", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, "f", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "m"
	DCB	0x0, "i", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@ILIKPLGK@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "%", 0x0, "u"
	DCB	0x0, " ", 0x0, "P", 0x0, "k", 0x0, "t", 0x0, "S", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "S"
	DCB	0x0, "p", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DAJPCKDK@?$AA?$CF?$AAs?$AA?5?$AA?$CL?$AA?$CL?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "+", 0x0, "+", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@ECKIBBDI@?$AAA?$AAM?$AA3?$AA5?$AA1?$AA7?$AAU?$AAs?$AAb?$AAF?$AAn?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?$AA@| DCB "A"
	DCB	0x0, "M", 0x0, "3", 0x0, "5", 0x0, "1", 0x0, "7", 0x0, "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "U", 0x0, "f"
	DCB	0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, ":"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  07d4c			 AREA	 |.text|, CODE, ARM

  07d4c		 |UfnPdd_InitEndpoint| PROC

; 3251 : {

  07d4c		 |$LN50@UfnPdd_Ini@2|
  07d4c	e1a0c00d	 mov         r12, sp
  07d50	e92d000f	 stmdb       sp!, {r0 - r3}
  07d54	e92d5010	 stmdb       sp!, {r4, r12, lr}
  07d58	e24dd094	 sub         sp, sp, #0x94
  07d5c		 |$M50499|

; 3252 :     DWORD rc                      = ERROR_SUCCESS;

  07d5c	e3a03000	 mov         r3, #0
  07d60	e58d300c	 str         r3, [sp, #0xC]

; 3253 :     USBFNPDDCONTEXT *pPdd         = (USBFNPDDCONTEXT *)pvPddContext;

  07d64	e59d30a0	 ldr         r3, [sp, #0xA0]
  07d68	e58d3028	 str         r3, [sp, #0x28]

; 3254 :     CSL_UsbRegs     *pUsbdRegs    = pPdd->pUsbdRegs;

  07d6c	e59d3028	 ldr         r3, [sp, #0x28]
  07d70	e283301c	 add         r3, r3, #0x1C
  07d74	e5933000	 ldr         r3, [r3]
  07d78	e58d3014	 str         r3, [sp, #0x14]

; 3255 :     UINT8           fifoSz        = 0;

  07d7c	e3a03000	 mov         r3, #0
  07d80	e5cd3026	 strb        r3, [sp, #0x26]

; 3256 :     UINT8           epAddress     = 0;

  07d84	e3a03000	 mov         r3, #0
  07d88	e5cd3027	 strb        r3, [sp, #0x27]

; 3257 :     USHORT          epMaxPktSize  = 0;

  07d8c	e3a03000	 mov         r3, #0
  07d90	e1cd32b4	 strh        r3, [sp, #0x24]

; 3258 :     UINT16          epRegVal      = 0;

  07d94	e3a03000	 mov         r3, #0
  07d98	e1cd30b8	 strh        r3, [sp, #8]

; 3259 :     volatile UINT16 *pepCsrReg    = NULL;

  07d9c	e3a03000	 mov         r3, #0
  07da0	e58d302c	 str         r3, [sp, #0x2C]

; 3260 :     BYTE            transferType  = 0;

  07da4	e3a03000	 mov         r3, #0
  07da8	e5cd301c	 strb        r3, [sp, #0x1C]

; 3261 :     BOOL            modeOut		  = FALSE;

  07dac	e3a03000	 mov         r3, #0
  07db0	e58d3018	 str         r3, [sp, #0x18]

; 3262 :     DWORD           intrRegVal    = 0;

  07db4	e3a03000	 mov         r3, #0
  07db8	e58d3010	 str         r3, [sp, #0x10]

; 3263 : 
; 3264 : #ifdef DEBUG
; 3265 : 	SETFNAME();

  07dbc	e59f3a30	 ldr         r3, [pc, #0xA30]
  07dc0	e58d3020	 str         r3, [sp, #0x20]

; 3266 :     FUNCTION_ENTER_MSG();

  07dc4	e59f39fc	 ldr         r3, [pc, #0x9FC]
  07dc8	e5933440	 ldr         r3, [r3, #0x440]
  07dcc	e3130a01	 tst         r3, #1, 20
  07dd0	0a000011	 beq         |$LN20@UfnPdd_Ini@2|
  07dd4	e59f39ec	 ldr         r3, [pc, #0x9EC]
  07dd8	e5933440	 ldr         r3, [r3, #0x440]
  07ddc	e3130801	 tst         r3, #1, 16
  07de0	0a000005	 beq         |$LN18@UfnPdd_Ini@2|
  07de4	e59d1020	 ldr         r1, [sp, #0x20]
  07de8	e59f0a00	 ldr         r0, [pc, #0xA00]
  07dec	eb000000	 bl          CeLogMsg
  07df0	e3a03001	 mov         r3, #1
  07df4	e58d3050	 str         r3, [sp, #0x50]
  07df8	ea000004	 b           |$LN19@UfnPdd_Ini@2|
  07dfc		 |$LN18@UfnPdd_Ini@2|
  07dfc	e59d1020	 ldr         r1, [sp, #0x20]
  07e00	e59f09e8	 ldr         r0, [pc, #0x9E8]
  07e04	eb000000	 bl          NKDbgPrintfW
  07e08	e3a03000	 mov         r3, #0
  07e0c	e58d3050	 str         r3, [sp, #0x50]
  07e10		 |$LN19@UfnPdd_Ini@2|
  07e10	e3a03001	 mov         r3, #1
  07e14	e58d3054	 str         r3, [sp, #0x54]
  07e18	ea000001	 b           |$LN21@UfnPdd_Ini@2|
  07e1c		 |$LN20@UfnPdd_Ini@2|
  07e1c	e3a03000	 mov         r3, #0
  07e20	e58d3054	 str         r3, [sp, #0x54]
  07e24		 |$LN21@UfnPdd_Ini@2|

; 3267 : #endif
; 3268 : 
; 3269 : 	UNREFERENCED_PARAMETER(alternateSetting);
; 3270 : 	UNREFERENCED_PARAMETER(interfaceNumber);
; 3271 : 	UNREFERENCED_PARAMETER(configurationValue);
; 3272 : 	UNREFERENCED_PARAMETER(pvReserved);
; 3273 : 	UNREFERENCED_PARAMETER(speed);
; 3274 : 
; 3275 :     /* Get Information from the given EndPoint Descriptor Struct */
; 3276 :     epAddress    = pEndpointDesc->bEndpointAddress;

  07e24	e59d30ac	 ldr         r3, [sp, #0xAC]
  07e28	e2833002	 add         r3, r3, #2
  07e2c	e5d33000	 ldrb        r3, [r3]
  07e30	e5cd3027	 strb        r3, [sp, #0x27]

; 3277 :     epMaxPktSize = (pEndpointDesc->wMaxPacketSize &
; 3278 :                     USB_ENDPOINT_MAX_PACKET_SIZE_MASK);

  07e34	e59d30ac	 ldr         r3, [sp, #0xAC]
  07e38	e2831004	 add         r1, r3, #4
  07e3c	e5d13001	 ldrb        r3, [r1, #1]
  07e40	e1a03403	 mov         r3, r3, lsl #8
  07e44	e1a02803	 mov         r2, r3, lsl #16
  07e48	e1a02822	 mov         r2, r2, lsr #16
  07e4c	e5d13000	 ldrb        r3, [r1]
  07e50	e1833002	 orr         r3, r3, r2
  07e54	e1a02003	 mov         r2, r3
  07e58	e3a03c07	 mov         r3, #7, 24
  07e5c	e38330ff	 orr         r3, r3, #0xFF
  07e60	e0023003	 and         r3, r2, r3
  07e64	e1a03803	 mov         r3, r3, lsl #16
  07e68	e1a03823	 mov         r3, r3, lsr #16
  07e6c	e1cd32b4	 strh        r3, [sp, #0x24]

; 3279 :     transferType = pEndpointDesc->bmAttributes & USB_ENDPOINT_TYPE_MASK;

  07e70	e59d30ac	 ldr         r3, [sp, #0xAC]
  07e74	e2833003	 add         r3, r3, #3
  07e78	e5d33000	 ldrb        r3, [r3]
  07e7c	e2033003	 and         r3, r3, #3
  07e80	e20330ff	 and         r3, r3, #0xFF
  07e84	e5cd301c	 strb        r3, [sp, #0x1C]

; 3280 :     intrRegVal = 0;

  07e88	e3a03000	 mov         r3, #0
  07e8c	e58d3010	 str         r3, [sp, #0x10]

; 3281 : 
; 3282 :     PRINTMSG(ZONE_PDD_INIT,
; 3283 :              (L"+UfnPdd_InitEndpoint EP%u PktSize 0x%x Type 0x%x ADDR 0x%x, Speed 0x%x\r\n",
; 3284 :               endpoint, epMaxPktSize, transferType, epAddress, speed));

  07e90	e59f3930	 ldr         r3, [pc, #0x930]
  07e94	e5933440	 ldr         r3, [r3, #0x440]
  07e98	e3130c01	 tst         r3, #1, 24
  07e9c	0a00001d	 beq         |$LN24@UfnPdd_Ini@2|
  07ea0	e59f3920	 ldr         r3, [pc, #0x920]
  07ea4	e5933440	 ldr         r3, [r3, #0x440]
  07ea8	e3130801	 tst         r3, #1, 16
  07eac	0a00000b	 beq         |$LN22@UfnPdd_Ini@2|
  07eb0	e59d30a8	 ldr         r3, [sp, #0xA8]
  07eb4	e58d3004	 str         r3, [sp, #4]
  07eb8	e5dd3027	 ldrb        r3, [sp, #0x27]
  07ebc	e58d3000	 str         r3, [sp]
  07ec0	e5dd301c	 ldrb        r3, [sp, #0x1C]
  07ec4	e1dd22b4	 ldrh        r2, [sp, #0x24]
  07ec8	e59d10a4	 ldr         r1, [sp, #0xA4]
  07ecc	e59f0918	 ldr         r0, [pc, #0x918]
  07ed0	eb000000	 bl          CeLogMsg
  07ed4	e3a03001	 mov         r3, #1
  07ed8	e58d3058	 str         r3, [sp, #0x58]
  07edc	ea00000a	 b           |$LN23@UfnPdd_Ini@2|
  07ee0		 |$LN22@UfnPdd_Ini@2|
  07ee0	e59d30a8	 ldr         r3, [sp, #0xA8]
  07ee4	e58d3004	 str         r3, [sp, #4]
  07ee8	e5dd3027	 ldrb        r3, [sp, #0x27]
  07eec	e58d3000	 str         r3, [sp]
  07ef0	e5dd301c	 ldrb        r3, [sp, #0x1C]
  07ef4	e1dd22b4	 ldrh        r2, [sp, #0x24]
  07ef8	e59d10a4	 ldr         r1, [sp, #0xA4]
  07efc	e59f08e8	 ldr         r0, [pc, #0x8E8]
  07f00	eb000000	 bl          NKDbgPrintfW
  07f04	e3a03000	 mov         r3, #0
  07f08	e58d3058	 str         r3, [sp, #0x58]
  07f0c		 |$LN23@UfnPdd_Ini@2|
  07f0c	e3a03001	 mov         r3, #1
  07f10	e58d305c	 str         r3, [sp, #0x5C]
  07f14	ea000001	 b           |$LN25@UfnPdd_Ini@2|
  07f18		 |$LN24@UfnPdd_Ini@2|
  07f18	e3a03000	 mov         r3, #0
  07f1c	e58d305c	 str         r3, [sp, #0x5C]
  07f20		 |$LN25@UfnPdd_Ini@2|

; 3285 : 
; 3286 :     /* Must power up when an EP is initialised */
; 3287 :     if ((pPdd->currentPowerState == D3) || (pPdd->currentPowerState == D4))

  07f20	e59d3028	 ldr         r3, [sp, #0x28]
  07f24	e2833048	 add         r3, r3, #0x48
  07f28	e5933000	 ldr         r3, [r3]
  07f2c	e3530003	 cmp         r3, #3
  07f30	0a000004	 beq         |$LN14@UfnPdd_Ini@2|
  07f34	e59d3028	 ldr         r3, [sp, #0x28]
  07f38	e2833048	 add         r3, r3, #0x48
  07f3c	e5933000	 ldr         r3, [r3]
  07f40	e3530004	 cmp         r3, #4
  07f44	1a000002	 bne         |$LN15@UfnPdd_Ini@2|
  07f48		 |$LN14@UfnPdd_Ini@2|

; 3288 :     {
; 3289 :         SetPowerState(pPdd, D0);

  07f48	e3a01000	 mov         r1, #0
  07f4c	e59d0028	 ldr         r0, [sp, #0x28]
  07f50	eb000000	 bl          SetPowerState
  07f54		 |$LN15@UfnPdd_Ini@2|

; 3290 :     }
; 3291 : 
; 3292 :     /* Convert the MaxPktSize to the USB Controller Convention
; 3293 :      * Maximum packet size to be allowed (before any splitting within the
; 3294 :      * FIFO of Bulk packets prior to transmission). If m = SZ[3:0], the
; 3295 :      * FIFO size is calculated as 2^(m+3) for single packet buffering and
; 3296 :      * 2^(m+4) for dual packet buffering.
; 3297 :      */
; 3298 :     fifoSz = (UINT8) Log2(epMaxPktSize) - 3;

  07f54	e1dd02b4	 ldrh        r0, [sp, #0x24]
  07f58	eb000000	 bl          Log2
  07f5c	e58d0060	 str         r0, [sp, #0x60]
  07f60	e59d3060	 ldr         r3, [sp, #0x60]
  07f64	e20330ff	 and         r3, r3, #0xFF
  07f68	e2433003	 sub         r3, r3, #3
  07f6c	e20330ff	 and         r3, r3, #0xFF
  07f70	e5cd3026	 strb        r3, [sp, #0x26]

; 3299 : 
; 3300 : 
; 3301 :     // Get access to the indexed regs
; 3302 :     pUsbdRegs->INDEX = (UINT8)endpoint;

  07f74	e59d30a4	 ldr         r3, [sp, #0xA4]
  07f78	e20320ff	 and         r2, r3, #0xFF
  07f7c	e59d3014	 ldr         r3, [sp, #0x14]
  07f80	e2833b01	 add         r3, r3, #1, 22
  07f84	e283300e	 add         r3, r3, #0xE
  07f88	e5c32000	 strb        r2, [r3]

; 3303 : 
; 3304 :     /* Select EP */
; 3305 :     if (endpoint != 0)

  07f8c	e59d30a4	 ldr         r3, [sp, #0xA4]
  07f90	e3530000	 cmp         r3, #0
  07f94	0a000135	 beq         |$LN13@UfnPdd_Ini@2|

; 3306 :     {
; 3307 :         DEBUGCHK(endpoint < USBD_EP_COUNT);

  07f98	e59d30a4	 ldr         r3, [sp, #0xA4]
  07f9c	e3530010	 cmp         r3, #0x10
  07fa0	2a000002	 bcs         |$LN26@UfnPdd_Ini@2|
  07fa4	e3a03001	 mov         r3, #1
  07fa8	e58d3064	 str         r3, [sp, #0x64]
  07fac	ea000008	 b           |$LN27@UfnPdd_Ini@2|
  07fb0		 |$LN26@UfnPdd_Ini@2|
  07fb0	e3a03b03	 mov         r3, #3, 22
  07fb4	e38330eb	 orr         r3, r3, #0xEB
  07fb8	e59f2820	 ldr         r2, [pc, #0x820]
  07fbc	e59f1804	 ldr         r1, [pc, #0x804]
  07fc0	e59f0814	 ldr         r0, [pc, #0x814]
  07fc4	eb000000	 bl          NKDbgPrintfW
  07fc8	e6000010	 __debugbreak_ce
  07fcc	e3a03000	 mov         r3, #0
  07fd0	e58d3064	 str         r3, [sp, #0x64]
  07fd4		 |$LN27@UfnPdd_Ini@2|

; 3308 : 
; 3309 :         /* Check that FIFO offset has been determined in UfnPdd_RegisterDevice() */
; 3310 :         if (pPdd->ep[endpoint].fifoOffset == 0)

  07fd4	e59d3028	 ldr         r3, [sp, #0x28]
  07fd8	e2831fa1	 add         r1, r3, #0xA1, 30
  07fdc	e59d20a4	 ldr         r2, [sp, #0xA4]
  07fe0	e3a0303c	 mov         r3, #0x3C
  07fe4	e0030392	 mul         r3, r2, r3
  07fe8	e0813003	 add         r3, r1, r3
  07fec	e283300a	 add         r3, r3, #0xA
  07ff0	e1d330b0	 ldrh        r3, [r3]
  07ff4	e3530000	 cmp         r3, #0
  07ff8	1a00000a	 bne         |$LN12@UfnPdd_Ini@2|

; 3311 :         {
; 3312 :             ERRORMSG(TRUE, (L"UfnPdd_InitEndpoint: EP%u Error, FIFO offset not determined\r\n",
; 3313 :                             endpoint));

  07ffc	e3a02b03	 mov         r2, #3, 22
  08000	e38220f1	 orr         r2, r2, #0xF1
  08004	e59f17d4	 ldr         r1, [pc, #0x7D4]
  08008	e59f07d8	 ldr         r0, [pc, #0x7D8]
  0800c	eb000000	 bl          NKDbgPrintfW
  08010	e59d10a4	 ldr         r1, [sp, #0xA4]
  08014	e59f07c8	 ldr         r0, [pc, #0x7C8]
  08018	eb000000	 bl          NKDbgPrintfW

; 3314 :             rc = ERROR_INVALID_PARAMETER;

  0801c	e3a03057	 mov         r3, #0x57
  08020	e58d300c	 str         r3, [sp, #0xC]

; 3315 :             goto Exit;

  08024	ea0001c8	 b           |$Exit$48739|
  08028		 |$LN12@UfnPdd_Ini@2|

; 3316 :         }
; 3317 : 
; 3318 :         /* Setup Direction (mode_in bit)  */
; 3319 : 
; 3320 :         /* If Bit7 of the EP Address is not set, then it is Host to Device
; 3321 :          * The macro USB_ENDPOINT_DIRECTION_OUT from usb100.h checks for
; 3322 :          * bit 7 not set. Hence this EndPoint is Receive for us.
; 3323 :          */
; 3324 :         modeOut = USB_ENDPOINT_DIRECTION_OUT(epAddress);

  08028	e5dd3027	 ldrb        r3, [sp, #0x27]
  0802c	e3130080	 tst         r3, #0x80
  08030	1a000002	 bne         |$LN28@UfnPdd_Ini@2|
  08034	e3a03001	 mov         r3, #1
  08038	e58d3068	 str         r3, [sp, #0x68]
  0803c	ea000001	 b           |$LN29@UfnPdd_Ini@2|
  08040		 |$LN28@UfnPdd_Ini@2|
  08040	e3a03000	 mov         r3, #0
  08044	e58d3068	 str         r3, [sp, #0x68]
  08048		 |$LN29@UfnPdd_Ini@2|
  08048	e59d3068	 ldr         r3, [sp, #0x68]
  0804c	e58d3018	 str         r3, [sp, #0x18]

; 3325 : 
; 3326 :         pPdd->ep[endpoint].maxPacketSize = epMaxPktSize;

  08050	e59d3028	 ldr         r3, [sp, #0x28]
  08054	e2831fa1	 add         r1, r3, #0xA1, 30
  08058	e59d20a4	 ldr         r2, [sp, #0xA4]
  0805c	e3a0303c	 mov         r3, #0x3C
  08060	e0030392	 mul         r3, r2, r3
  08064	e0813003	 add         r3, r1, r3
  08068	e2832008	 add         r2, r3, #8
  0806c	e1dd32b4	 ldrh        r3, [sp, #0x24]
  08070	e1c230b0	 strh        r3, [r2]

; 3327 :         pPdd->ep[endpoint].endpointType  = transferType;

  08074	e59d3028	 ldr         r3, [sp, #0x28]
  08078	e2831fa1	 add         r1, r3, #0xA1, 30
  0807c	e59d20a4	 ldr         r2, [sp, #0xA4]
  08080	e3a0303c	 mov         r3, #0x3C
  08084	e0030392	 mul         r3, r2, r3
  08088	e0813003	 add         r3, r1, r3
  0808c	e283200c	 add         r2, r3, #0xC
  08090	e5dd301c	 ldrb        r3, [sp, #0x1C]
  08094	e5c23000	 strb        r3, [r2]

; 3328 : 
; 3329 : #ifdef CPPI_DMA_SUPPORT
; 3330 :         InitEndpointDmaBuffer(pPdd, endpoint);

  08098	e59d10a4	 ldr         r1, [sp, #0xA4]
  0809c	e59d0028	 ldr         r0, [sp, #0x28]
  080a0	eb000000	 bl          InitEndpointDmaBuffer

; 3331 : #endif
; 3332 : 
; 3333 :         // Clear any previous setup
; 3334 :         pUsbdRegs->TXMAXP = 0;

  080a4	e59d3014	 ldr         r3, [sp, #0x14]
  080a8	e2832e41	 add         r2, r3, #0x41, 28
  080ac	e3a03000	 mov         r3, #0
  080b0	e1c230b0	 strh        r3, [r2]

; 3335 :         pUsbdRegs->TXFIFOSZ = 0;

  080b4	e59d3014	 ldr         r3, [sp, #0x14]
  080b8	e2833b01	 add         r3, r3, #1, 22
  080bc	e2832062	 add         r2, r3, #0x62
  080c0	e3a03000	 mov         r3, #0
  080c4	e5c23000	 strb        r3, [r2]

; 3336 :         pUsbdRegs->RXMAXP = 0;

  080c8	e59d3014	 ldr         r3, [sp, #0x14]
  080cc	e2833b01	 add         r3, r3, #1, 22
  080d0	e2832014	 add         r2, r3, #0x14
  080d4	e3a03000	 mov         r3, #0
  080d8	e1c230b0	 strh        r3, [r2]

; 3337 :         pUsbdRegs->RXFIFOSZ = 0;

  080dc	e59d3014	 ldr         r3, [sp, #0x14]
  080e0	e2833b01	 add         r3, r3, #1, 22
  080e4	e2832063	 add         r2, r3, #0x63
  080e8	e3a03000	 mov         r3, #0
  080ec	e5c23000	 strb        r3, [r2]

; 3338 : 
; 3339 :         if (modeOut == TRUE) // RX endpoint

  080f0	e59d3018	 ldr         r3, [sp, #0x18]
  080f4	e3530001	 cmp         r3, #1
  080f8	1a00004a	 bne         |$LN11@UfnPdd_Ini@2|

; 3340 :         {
; 3341 :             // Max packet and FIFO size
; 3342 : 
; 3343 :             pUsbdRegs->RXMAXP = epMaxPktSize;

  080fc	e59d3014	 ldr         r3, [sp, #0x14]
  08100	e2833b01	 add         r3, r3, #1, 22
  08104	e2832014	 add         r2, r3, #0x14
  08108	e1dd32b4	 ldrh        r3, [sp, #0x24]
  0810c	e1c230b0	 strh        r3, [r2]

; 3344 :             pUsbdRegs->RXFIFOSZ = fifoSz;

  08110	e59d3014	 ldr         r3, [sp, #0x14]
  08114	e2833b01	 add         r3, r3, #1, 22
  08118	e2832063	 add         r2, r3, #0x63
  0811c	e5dd3026	 ldrb        r3, [sp, #0x26]
  08120	e5c23000	 strb        r3, [r2]

; 3345 : 
; 3346 :             pepCsrReg = &pUsbdRegs->PERI_RXCSR;

  08124	e59d3014	 ldr         r3, [sp, #0x14]
  08128	e2833b01	 add         r3, r3, #1, 22
  0812c	e2833016	 add         r3, r3, #0x16
  08130	e58d302c	 str         r3, [sp, #0x2C]

; 3347 : 
; 3348 :             epRegVal = (*pepCsrReg);

  08134	e59d302c	 ldr         r3, [sp, #0x2C]
  08138	e1d330b0	 ldrh        r3, [r3]
  0813c	e1cd30b8	 strh        r3, [sp, #8]

; 3349 :             epRegVal &= ~(MGC_M_RXCSR_AUTOCLEAR | MGC_M_RXCSR_DMAMODE);

  08140	e1dd30b8	 ldrh        r3, [sp, #8]
  08144	e1a02003	 mov         r2, r3
  08148	e3e03b22	 mvn         r3, #0x22, 22
  0814c	e0023003	 and         r3, r2, r3
  08150	e1a03803	 mov         r3, r3, lsl #16
  08154	e1a03823	 mov         r3, r3, lsr #16
  08158	e1cd30b8	 strh        r3, [sp, #8]

; 3350 :             epRegVal |= (MGC_M_RXCSR_CLRDATATOG | MGC_M_RXCSR_FLUSHFIFO);

  0815c	e1dd30b8	 ldrh        r3, [sp, #8]
  08160	e3833090	 orr         r3, r3, #0x90
  08164	e1a03803	 mov         r3, r3, lsl #16
  08168	e1a03823	 mov         r3, r3, lsr #16
  0816c	e1cd30b8	 strh        r3, [sp, #8]

; 3351 :             if (transferType == USB_ENDPOINT_TYPE_INTERRUPT)

  08170	e5dd301c	 ldrb        r3, [sp, #0x1C]
  08174	e3530003	 cmp         r3, #3
  08178	1a000005	 bne         |$LN10@UfnPdd_Ini@2|

; 3352 :                 epRegVal |= MGC_M_RXCSR_DISNYET;

  0817c	e1dd30b8	 ldrh        r3, [sp, #8]
  08180	e3833a01	 orr         r3, r3, #1, 20
  08184	e1a03803	 mov         r3, r3, lsl #16
  08188	e1a03823	 mov         r3, r3, lsr #16
  0818c	e1cd30b8	 strh        r3, [sp, #8]

; 3353 :             else

  08190	ea000006	 b           |$LN9@UfnPdd_Ini@2|
  08194		 |$LN10@UfnPdd_Ini@2|

; 3354 :                 epRegVal &= ~MGC_M_RXCSR_DISNYET;

  08194	e1dd30b8	 ldrh        r3, [sp, #8]
  08198	e1a02003	 mov         r2, r3
  0819c	e3e03a01	 mvn         r3, #1, 20
  081a0	e0023003	 and         r3, r2, r3
  081a4	e1a03803	 mov         r3, r3, lsl #16
  081a8	e1a03823	 mov         r3, r3, lsr #16
  081ac	e1cd30b8	 strh        r3, [sp, #8]
  081b0		 |$LN9@UfnPdd_Ini@2|

; 3355 :             (*pepCsrReg) = epRegVal;

  081b0	e1dd20b8	 ldrh        r2, [sp, #8]
  081b4	e59d302c	 ldr         r3, [sp, #0x2C]
  081b8	e1c320b0	 strh        r2, [r3]

; 3356 : 
; 3357 :             pUsbdRegs->RXFIFOADDR = (UINT16)(pPdd->ep[endpoint].fifoOffset >> 3);

  081bc	e59d3028	 ldr         r3, [sp, #0x28]
  081c0	e2831fa1	 add         r1, r3, #0xA1, 30
  081c4	e59d20a4	 ldr         r2, [sp, #0xA4]
  081c8	e3a0303c	 mov         r3, #0x3C
  081cc	e0030392	 mul         r3, r2, r3
  081d0	e0813003	 add         r3, r1, r3
  081d4	e283300a	 add         r3, r3, #0xA
  081d8	e1d330b0	 ldrh        r3, [r3]
  081dc	e1a031c3	 mov         r3, r3, asr #3
  081e0	e1a02803	 mov         r2, r3, lsl #16
  081e4	e1a02822	 mov         r2, r2, lsr #16
  081e8	e59d3014	 ldr         r3, [sp, #0x14]
  081ec	e2833b01	 add         r3, r3, #1, 22
  081f0	e2833066	 add         r3, r3, #0x66
  081f4	e1c320b0	 strh        r2, [r3]

; 3358 :             pPdd->ep[endpoint].dirRx = TRUE;

  081f8	e59d3028	 ldr         r3, [sp, #0x28]
  081fc	e2831fa1	 add         r1, r3, #0xA1, 30
  08200	e59d20a4	 ldr         r2, [sp, #0xA4]
  08204	e3a0303c	 mov         r3, #0x3C
  08208	e0030392	 mul         r3, r2, r3
  0820c	e0813003	 add         r3, r1, r3
  08210	e2832010	 add         r2, r3, #0x10
  08214	e3a03001	 mov         r3, #1
  08218	e5823000	 str         r3, [r2]

; 3359 : 
; 3360 :             // RX interrupt is enabled only when a transfer is issued by MDD.
; 3361 :             // We do not want to handle the RX interrupt before we have a
; 3362 :             // transfer structure to receive data into.
; 3363 :             intrRegVal = 0;

  0821c	e3a03000	 mov         r3, #0
  08220	e58d3010	 str         r3, [sp, #0x10]

; 3364 :         }
; 3365 :         else // TX endpoint

  08224	ea000034	 b           |$LN8@UfnPdd_Ini@2|
  08228		 |$LN11@UfnPdd_Ini@2|

; 3366 :         {
; 3367 :             // Max packet and FIFO size
; 3368 : 
; 3369 :             pUsbdRegs->TXMAXP = epMaxPktSize;

  08228	e59d3014	 ldr         r3, [sp, #0x14]
  0822c	e2832e41	 add         r2, r3, #0x41, 28
  08230	e1dd32b4	 ldrh        r3, [sp, #0x24]
  08234	e1c230b0	 strh        r3, [r2]

; 3370 :             pUsbdRegs->TXFIFOSZ = fifoSz;

  08238	e59d3014	 ldr         r3, [sp, #0x14]
  0823c	e2833b01	 add         r3, r3, #1, 22
  08240	e2832062	 add         r2, r3, #0x62
  08244	e5dd3026	 ldrb        r3, [sp, #0x26]
  08248	e5c23000	 strb        r3, [r2]

; 3371 : 
; 3372 :             pepCsrReg = &pUsbdRegs->PERI_TXCSR;

  0824c	e59d3014	 ldr         r3, [sp, #0x14]
  08250	e2833b01	 add         r3, r3, #1, 22
  08254	e2833012	 add         r3, r3, #0x12
  08258	e58d302c	 str         r3, [sp, #0x2C]

; 3373 :             epRegVal = (*pepCsrReg);

  0825c	e59d302c	 ldr         r3, [sp, #0x2C]
  08260	e1d330b0	 ldrh        r3, [r3]
  08264	e1cd30b8	 strh        r3, [sp, #8]

; 3374 :             epRegVal |= (MGC_M_TXCSR_MODE | MGC_M_TXCSR_CLRDATATOG |
; 3375 :                          MGC_M_TXCSR_FLUSHFIFO);

  08268	e1dd30b8	 ldrh        r3, [sp, #8]
  0826c	e1a02003	 mov         r2, r3
  08270	e3a03a02	 mov         r3, #2, 20
  08274	e3833048	 orr         r3, r3, #0x48
  08278	e1823003	 orr         r3, r2, r3
  0827c	e1a03803	 mov         r3, r3, lsl #16
  08280	e1a03823	 mov         r3, r3, lsr #16
  08284	e1cd30b8	 strh        r3, [sp, #8]

; 3376 : 
; 3377 :             /* Write into the PERI_TXCSR Register to set it as TX EP */
; 3378 :             (*pepCsrReg) = epRegVal;

  08288	e1dd20b8	 ldrh        r2, [sp, #8]
  0828c	e59d302c	 ldr         r3, [sp, #0x2C]
  08290	e1c320b0	 strh        r2, [r3]

; 3379 : 
; 3380 :             pUsbdRegs->TXFIFOADDR = (UINT16)(pPdd->ep[endpoint].fifoOffset >> 3);

  08294	e59d3028	 ldr         r3, [sp, #0x28]
  08298	e2831fa1	 add         r1, r3, #0xA1, 30
  0829c	e59d20a4	 ldr         r2, [sp, #0xA4]
  082a0	e3a0303c	 mov         r3, #0x3C
  082a4	e0030392	 mul         r3, r2, r3
  082a8	e0813003	 add         r3, r1, r3
  082ac	e283300a	 add         r3, r3, #0xA
  082b0	e1d330b0	 ldrh        r3, [r3]
  082b4	e1a031c3	 mov         r3, r3, asr #3
  082b8	e1a02803	 mov         r2, r3, lsl #16
  082bc	e1a02822	 mov         r2, r2, lsr #16
  082c0	e59d3014	 ldr         r3, [sp, #0x14]
  082c4	e2833b01	 add         r3, r3, #1, 22
  082c8	e2833064	 add         r3, r3, #0x64
  082cc	e1c320b0	 strh        r2, [r3]

; 3381 :             pPdd->ep[endpoint].dirRx = FALSE;

  082d0	e59d3028	 ldr         r3, [sp, #0x28]
  082d4	e2831fa1	 add         r1, r3, #0xA1, 30
  082d8	e59d20a4	 ldr         r2, [sp, #0xA4]
  082dc	e3a0303c	 mov         r3, #0x3C
  082e0	e0030392	 mul         r3, r2, r3
  082e4	e0813003	 add         r3, r1, r3
  082e8	e2832010	 add         r2, r3, #0x10
  082ec	e3a03000	 mov         r3, #0
  082f0	e5823000	 str         r3, [r2]

; 3382 : 
; 3383 :             // TX interrupt is enabled for non-DMA
; 3384 : #ifndef CPPI_DMA_SUPPORT
; 3385 :             intrRegVal = (1 << endpoint) << USB_OTG_TXINT_SHIFT;
; 3386 : #else
; 3387 :             intrRegVal = 0;

  082f4	e3a03000	 mov         r3, #0
  082f8	e58d3010	 str         r3, [sp, #0x10]
  082fc		 |$LN8@UfnPdd_Ini@2|

; 3388 : #endif
; 3389 :         }
; 3390 : 
; 3391 :         /* Set Transfer Type */
; 3392 :         DEBUGCHK(transferType != USB_ENDPOINT_TYPE_CONTROL);

  082fc	e5dd301c	 ldrb        r3, [sp, #0x1C]
  08300	e3530000	 cmp         r3, #0
  08304	0a000002	 beq         |$LN30@UfnPdd_Ini@2|
  08308	e3a03001	 mov         r3, #1
  0830c	e58d306c	 str         r3, [sp, #0x6C]
  08310	ea000007	 b           |$LN31@UfnPdd_Ini@2|
  08314		 |$LN30@UfnPdd_Ini@2|
  08314	e3a03d35	 mov         r3, #0x35, 26
  08318	e59f24c0	 ldr         r2, [pc, #0x4C0]
  0831c	e59f14a4	 ldr         r1, [pc, #0x4A4]
  08320	e59f04b4	 ldr         r0, [pc, #0x4B4]
  08324	eb000000	 bl          NKDbgPrintfW
  08328	e6000010	 __debugbreak_ce
  0832c	e3a03000	 mov         r3, #0
  08330	e58d306c	 str         r3, [sp, #0x6C]
  08334		 |$LN31@UfnPdd_Ini@2|

; 3393 :         switch(transferType)

  08334	e5dd301c	 ldrb        r3, [sp, #0x1C]
  08338	e3530001	 cmp         r3, #1
  0833c	0a000000	 beq         |$LN5@UfnPdd_Ini@2|
  08340	ea00000b	 b           |$LN4@UfnPdd_Ini@2|
  08344		 |$LN5@UfnPdd_Ini@2|

; 3394 :         {
; 3395 :         case USB_ENDPOINT_TYPE_ISOCHRONOUS:
; 3396 :             /* Set the ISO bit */
; 3397 :             epRegVal = (*pepCsrReg);

  08344	e59d302c	 ldr         r3, [sp, #0x2C]
  08348	e1d330b0	 ldrh        r3, [r3]
  0834c	e1cd30b8	 strh        r3, [sp, #8]

; 3398 :             epRegVal |= BIT14;

  08350	e1dd30b8	 ldrh        r3, [sp, #8]
  08354	e3833901	 orr         r3, r3, #1, 18
  08358	e1a03803	 mov         r3, r3, lsl #16
  0835c	e1a03823	 mov         r3, r3, lsr #16
  08360	e1cd30b8	 strh        r3, [sp, #8]

; 3399 :             (*pepCsrReg) = epRegVal;

  08364	e1dd20b8	 ldrh        r2, [sp, #8]
  08368	e59d302c	 ldr         r3, [sp, #0x2C]
  0836c	e1c320b0	 strh        r2, [r3]

; 3400 :             break;

  08370	ea00000c	 b           |$LN6@UfnPdd_Ini@2|
  08374		 |$LN4@UfnPdd_Ini@2|

; 3401 :         case USB_ENDPOINT_TYPE_BULK:
; 3402 :         case USB_ENDPOINT_TYPE_INTERRUPT:
; 3403 :         default:
; 3404 :             /* Clear ISO bit - Set type to Bulk */
; 3405 :             epRegVal = (*pepCsrReg);

  08374	e59d302c	 ldr         r3, [sp, #0x2C]
  08378	e1d330b0	 ldrh        r3, [r3]
  0837c	e1cd30b8	 strh        r3, [sp, #8]

; 3406 :             epRegVal &= ~BIT14;

  08380	e1dd30b8	 ldrh        r3, [sp, #8]
  08384	e1a02003	 mov         r2, r3
  08388	e3e03901	 mvn         r3, #1, 18
  0838c	e0023003	 and         r3, r2, r3
  08390	e1a03803	 mov         r3, r3, lsl #16
  08394	e1a03823	 mov         r3, r3, lsr #16
  08398	e1cd30b8	 strh        r3, [sp, #8]

; 3407 :             (*pepCsrReg) = epRegVal;

  0839c	e1dd20b8	 ldrh        r2, [sp, #8]
  083a0	e59d302c	 ldr         r3, [sp, #0x2C]
  083a4	e1c320b0	 strh        r2, [r3]
  083a8		 |$LN6@UfnPdd_Ini@2|

; 3408 :         }
; 3409 :         PRINTMSG(ZONE_PDD_INIT, /*TRUE*/
; 3410 :                  (L"EP %u FIFOSZ 0x%x FIFO 0x%x CSR 0x%x\r\n",
; 3411 :                   endpoint, fifoSz, pPdd->ep[endpoint].fifoOffset, epRegVal));

  083a8	e59f3418	 ldr         r3, [pc, #0x418]
  083ac	e5933440	 ldr         r3, [r3, #0x440]
  083b0	e3130c01	 tst         r3, #1, 24
  083b4	0a000027	 beq         |$LN34@UfnPdd_Ini@2|
  083b8	e59f3408	 ldr         r3, [pc, #0x408]
  083bc	e5933440	 ldr         r3, [r3, #0x440]
  083c0	e3130801	 tst         r3, #1, 16
  083c4	0a000010	 beq         |$LN32@UfnPdd_Ini@2|
  083c8	e1dd30b8	 ldrh        r3, [sp, #8]
  083cc	e58d3000	 str         r3, [sp]
  083d0	e59d3028	 ldr         r3, [sp, #0x28]
  083d4	e2831fa1	 add         r1, r3, #0xA1, 30
  083d8	e59d20a4	 ldr         r2, [sp, #0xA4]
  083dc	e3a0303c	 mov         r3, #0x3C
  083e0	e0030392	 mul         r3, r2, r3
  083e4	e0813003	 add         r3, r1, r3
  083e8	e283300a	 add         r3, r3, #0xA
  083ec	e1d330b0	 ldrh        r3, [r3]
  083f0	e5dd2026	 ldrb        r2, [sp, #0x26]
  083f4	e59d10a4	 ldr         r1, [sp, #0xA4]
  083f8	e59f03d8	 ldr         r0, [pc, #0x3D8]
  083fc	eb000000	 bl          CeLogMsg
  08400	e3a03001	 mov         r3, #1
  08404	e58d3070	 str         r3, [sp, #0x70]
  08408	ea00000f	 b           |$LN33@UfnPdd_Ini@2|
  0840c		 |$LN32@UfnPdd_Ini@2|
  0840c	e1dd30b8	 ldrh        r3, [sp, #8]
  08410	e58d3000	 str         r3, [sp]
  08414	e59d3028	 ldr         r3, [sp, #0x28]
  08418	e2831fa1	 add         r1, r3, #0xA1, 30
  0841c	e59d20a4	 ldr         r2, [sp, #0xA4]
  08420	e3a0303c	 mov         r3, #0x3C
  08424	e0030392	 mul         r3, r2, r3
  08428	e0813003	 add         r3, r1, r3
  0842c	e283300a	 add         r3, r3, #0xA
  08430	e1d330b0	 ldrh        r3, [r3]
  08434	e5dd2026	 ldrb        r2, [sp, #0x26]
  08438	e59d10a4	 ldr         r1, [sp, #0xA4]
  0843c	e59f0394	 ldr         r0, [pc, #0x394]
  08440	eb000000	 bl          NKDbgPrintfW
  08444	e3a03000	 mov         r3, #0
  08448	e58d3070	 str         r3, [sp, #0x70]
  0844c		 |$LN33@UfnPdd_Ini@2|
  0844c	e3a03001	 mov         r3, #1
  08450	e58d3074	 str         r3, [sp, #0x74]
  08454	ea000001	 b           |$LN35@UfnPdd_Ini@2|
  08458		 |$LN34@UfnPdd_Ini@2|
  08458	e3a03000	 mov         r3, #0
  0845c	e58d3074	 str         r3, [sp, #0x74]
  08460		 |$LN35@UfnPdd_Ini@2|

; 3412 : 
; 3413 :         /* Clear the EndPoint Stall */
; 3414 :         UfnPdd_ClearEndpointStall(pvPddContext, endpoint);

  08460	e59d10a4	 ldr         r1, [sp, #0xA4]
  08464	e59d00a0	 ldr         r0, [sp, #0xA0]
  08468	eb000000	 bl          UfnPdd_ClearEndpointStall

; 3415 :     }
; 3416 :     else

  0846c	ea000035	 b           |$LN3@UfnPdd_Ini@2|
  08470		 |$LN13@UfnPdd_Ini@2|

; 3417 :     {
; 3418 :         /* Configure the EP0 Registers first for
; 3419 :          * Core Events Interrupts on the EP0 Interrupt Enable register
; 3420 :          */
; 3421 : 
; 3422 :         /* use pre-computed values for EP0  */
; 3423 :         pUsbdRegs->TXFIFOSZ = 3;

  08470	e59d3014	 ldr         r3, [sp, #0x14]
  08474	e2833b01	 add         r3, r3, #1, 22
  08478	e2832062	 add         r2, r3, #0x62
  0847c	e3a03003	 mov         r3, #3
  08480	e5c23000	 strb        r3, [r2]

; 3424 :         pUsbdRegs->RXFIFOSZ = 3;

  08484	e59d3014	 ldr         r3, [sp, #0x14]
  08488	e2833b01	 add         r3, r3, #1, 22
  0848c	e2832063	 add         r2, r3, #0x63
  08490	e3a03003	 mov         r3, #3
  08494	e5c23000	 strb        r3, [r2]

; 3425 :         pUsbdRegs->TXFIFOADDR = 0;

  08498	e59d3014	 ldr         r3, [sp, #0x14]
  0849c	e2833b01	 add         r3, r3, #1, 22
  084a0	e2832064	 add         r2, r3, #0x64
  084a4	e3a03000	 mov         r3, #0
  084a8	e1c230b0	 strh        r3, [r2]

; 3426 :         pUsbdRegs->RXFIFOADDR = 0;

  084ac	e59d3014	 ldr         r3, [sp, #0x14]
  084b0	e2833b01	 add         r3, r3, #1, 22
  084b4	e2832066	 add         r2, r3, #0x66
  084b8	e3a03000	 mov         r3, #0
  084bc	e1c230b0	 strh        r3, [r2]

; 3427 : 
; 3428 :         /* Update the Global FIFO Usage Count */
; 3429 :         pPdd->ep[endpoint].maxPacketSize = epMaxPktSize;

  084c0	e59d3028	 ldr         r3, [sp, #0x28]
  084c4	e2831fa1	 add         r1, r3, #0xA1, 30
  084c8	e59d20a4	 ldr         r2, [sp, #0xA4]
  084cc	e3a0303c	 mov         r3, #0x3C
  084d0	e0030392	 mul         r3, r2, r3
  084d4	e0813003	 add         r3, r1, r3
  084d8	e2832008	 add         r2, r3, #8
  084dc	e1dd32b4	 ldrh        r3, [sp, #0x24]
  084e0	e1c230b0	 strh        r3, [r2]

; 3430 :         /* Let us use the Starting of the FIFO RAM for EP0 */
; 3431 :         pPdd->ep[endpoint].fifoOffset    = 0;

  084e4	e59d3028	 ldr         r3, [sp, #0x28]
  084e8	e2831fa1	 add         r1, r3, #0xA1, 30
  084ec	e59d20a4	 ldr         r2, [sp, #0xA4]
  084f0	e3a0303c	 mov         r3, #0x3C
  084f4	e0030392	 mul         r3, r2, r3
  084f8	e0813003	 add         r3, r1, r3
  084fc	e283200a	 add         r2, r3, #0xA
  08500	e3a03000	 mov         r3, #0
  08504	e1c230b0	 strh        r3, [r2]

; 3432 : 
; 3433 :         // Interrupt mask
; 3434 :         intrRegVal  = (1 << endpoint) << USB_OTG_RXINT_SHIFT;

  08508	e59d20a4	 ldr         r2, [sp, #0xA4]
  0850c	e3a03001	 mov         r3, #1
  08510	e1a03213	 mov         r3, r3, lsl r2
  08514	e1a03803	 mov         r3, r3, lsl #16
  08518	e58d3010	 str         r3, [sp, #0x10]

; 3435 :         intrRegVal |= (1 << endpoint) << USB_OTG_TXINT_SHIFT;

  0851c	e59d20a4	 ldr         r2, [sp, #0xA4]
  08520	e3a03001	 mov         r3, #1
  08524	e1a02213	 mov         r2, r3, lsl r2
  08528	e59d3010	 ldr         r3, [sp, #0x10]
  0852c	e1833002	 orr         r3, r3, r2
  08530	e58d3010	 str         r3, [sp, #0x10]

; 3436 : 
; 3437 :         pPdd->fWaitingForHandshake = FALSE;

  08534	e59d3028	 ldr         r3, [sp, #0x28]
  08538	e2833c06	 add         r3, r3, #6, 24
  0853c	e283204c	 add         r2, r3, #0x4C
  08540	e3a03000	 mov         r3, #0
  08544	e5823000	 str         r3, [r2]
  08548		 |$LN3@UfnPdd_Ini@2|

; 3438 :     }
; 3439 : 
; 3440 :     pPdd->ep[endpoint].epNumber = (UINT16)endpoint;

  08548	e59d30a4	 ldr         r3, [sp, #0xA4]
  0854c	e1a00803	 mov         r0, r3, lsl #16
  08550	e1a00820	 mov         r0, r0, lsr #16
  08554	e59d3028	 ldr         r3, [sp, #0x28]
  08558	e2831fa1	 add         r1, r3, #0xA1, 30
  0855c	e59d20a4	 ldr         r2, [sp, #0xA4]
  08560	e3a0303c	 mov         r3, #0x3C
  08564	e0030392	 mul         r3, r2, r3
  08568	e0813003	 add         r3, r1, r3
  0856c	e1c300b0	 strh        r0, [r3]

; 3441 : 
; 3442 : #ifdef CPPI_DMA_SUPPORT
; 3443 :     /* Select EP */
; 3444 :     if ((endpoint != 0) &&
; 3445 :         (pPdd->ep[endpoint].pDmaChan == NULL))

  08570	e59d30a4	 ldr         r3, [sp, #0xA4]
  08574	e3530000	 cmp         r3, #0
  08578	0a00003c	 beq         |$LN2@UfnPdd_Ini@2|
  0857c	e59d3028	 ldr         r3, [sp, #0x28]
  08580	e2831fa1	 add         r1, r3, #0xA1, 30
  08584	e59d20a4	 ldr         r2, [sp, #0xA4]
  08588	e3a0303c	 mov         r3, #0x3C
  0858c	e0030392	 mul         r3, r2, r3
  08590	e0813003	 add         r3, r1, r3
  08594	e283302c	 add         r3, r3, #0x2C
  08598	e5933000	 ldr         r3, [r3]
  0859c	e3530000	 cmp         r3, #0
  085a0	1a000032	 bne         |$LN2@UfnPdd_Ini@2|

; 3446 :     {
; 3447 :         struct dma_controller *pDma =  (struct dma_controller *)pPdd->pDmaCntrl;

  085a4	e59d3028	 ldr         r3, [sp, #0x28]
  085a8	e2833c06	 add         r3, r3, #6, 24
  085ac	e283305c	 add         r3, r3, #0x5C
  085b0	e5933000	 ldr         r3, [r3]
  085b4	e58d3030	 str         r3, [sp, #0x30]

; 3448 : 
; 3449 :         if (pDma != NULL)

  085b8	e59d3030	 ldr         r3, [sp, #0x30]
  085bc	e3530000	 cmp         r3, #0
  085c0	0a00002a	 beq         |$LN1@UfnPdd_Ini@2|

; 3450 :         {
; 3451 :             pPdd->ep[endpoint].pDmaChan =  (PVOID)
; 3452 :                 pDma->pfnChannelAlloc(pPdd->pDmaCntrl, &pPdd->ep[endpoint],
; 3453 :                                       (UINT8)(modeOut == FALSE),
; 3454 :                                       (modeOut == FALSE) ?
; 3455 :                                       TxDmaTransferComplete : RxDmaTransferComplete);

  085c4	e59d3018	 ldr         r3, [sp, #0x18]
  085c8	e3530000	 cmp         r3, #0
  085cc	1a000002	 bne         |$LN36@UfnPdd_Ini@2|
  085d0	e59f31fc	 ldr         r3, [pc, #0x1FC]
  085d4	e58d3078	 str         r3, [sp, #0x78]
  085d8	ea000001	 b           |$LN37@UfnPdd_Ini@2|
  085dc		 |$LN36@UfnPdd_Ini@2|
  085dc	e59f31ec	 ldr         r3, [pc, #0x1EC]
  085e0	e58d3078	 str         r3, [sp, #0x78]
  085e4		 |$LN37@UfnPdd_Ini@2|
  085e4	e59d3018	 ldr         r3, [sp, #0x18]
  085e8	e3530000	 cmp         r3, #0
  085ec	1a000002	 bne         |$LN38@UfnPdd_Ini@2|
  085f0	e3a03001	 mov         r3, #1
  085f4	e5cd307c	 strb        r3, [sp, #0x7C]
  085f8	ea000001	 b           |$LN39@UfnPdd_Ini@2|
  085fc		 |$LN38@UfnPdd_Ini@2|
  085fc	e3a03000	 mov         r3, #0
  08600	e5cd307c	 strb        r3, [sp, #0x7C]
  08604		 |$LN39@UfnPdd_Ini@2|
  08604	e59d3078	 ldr         r3, [sp, #0x78]
  08608	e5dd207c	 ldrb        r2, [sp, #0x7C]
  0860c	e59d1028	 ldr         r1, [sp, #0x28]
  08610	e281efa1	 add         lr, r1, #0xA1, 30
  08614	e59d00a4	 ldr         r0, [sp, #0xA4]
  08618	e3a0103c	 mov         r1, #0x3C
  0861c	e0010190	 mul         r1, r0, r1
  08620	e08e1001	 add         r1, lr, r1
  08624	e59d0028	 ldr         r0, [sp, #0x28]
  08628	e2800c06	 add         r0, r0, #6, 24
  0862c	e280005c	 add         r0, r0, #0x5C
  08630	e5900000	 ldr         r0, [r0]
  08634	e59de030	 ldr         lr, [sp, #0x30]
  08638	e28ee008	 add         lr, lr, #8
  0863c	e59e4000	 ldr         r4, [lr]
  08640	e1a0e00f	 mov         lr, pc
  08644	e12fff14	 bx          r4
  08648	e58d0080	 str         r0, [sp, #0x80]
  0864c	e59d3028	 ldr         r3, [sp, #0x28]
  08650	e2831fa1	 add         r1, r3, #0xA1, 30
  08654	e59d20a4	 ldr         r2, [sp, #0xA4]
  08658	e3a0303c	 mov         r3, #0x3C
  0865c	e0030392	 mul         r3, r2, r3
  08660	e0813003	 add         r3, r1, r3
  08664	e283202c	 add         r2, r3, #0x2C
  08668	e59d3080	 ldr         r3, [sp, #0x80]
  0866c	e5823000	 str         r3, [r2]
  08670		 |$LN1@UfnPdd_Ini@2|
  08670		 |$LN2@UfnPdd_Ini@2|

; 3456 :         }
; 3457 :     }
; 3458 : #endif /* #ifdef  CPPI_DMA_SUPPORT */
; 3459 : 
; 3460 :     pPdd->ep[endpoint].stalled   = FALSE;

  08670	e59d3028	 ldr         r3, [sp, #0x28]
  08674	e2831fa1	 add         r1, r3, #0xA1, 30
  08678	e59d20a4	 ldr         r2, [sp, #0xA4]
  0867c	e3a0303c	 mov         r3, #0x3C
  08680	e0030392	 mul         r3, r2, r3
  08684	e0813003	 add         r3, r1, r3
  08688	e2832018	 add         r2, r3, #0x18
  0868c	e3a03000	 mov         r3, #0
  08690	e5823000	 str         r3, [r2]

; 3461 : 
; 3462 :     /* Enable the Tx and Rx interrupts */
; 3463 :     pUsbdRegs->EP_INTMSKSETR = intrRegVal;

  08694	e59d3014	 ldr         r3, [sp, #0x14]
  08698	e2832030	 add         r2, r3, #0x30
  0869c	e59d3010	 ldr         r3, [sp, #0x10]
  086a0	e5823000	 str         r3, [r2]

; 3464 : 
; 3465 :     pUsbdRegs->INDEX = 0;

  086a4	e59d3014	 ldr         r3, [sp, #0x14]
  086a8	e2833b01	 add         r3, r3, #1, 22
  086ac	e283200e	 add         r2, r3, #0xE
  086b0	e3a03000	 mov         r3, #0
  086b4	e5c23000	 strb        r3, [r2]

; 3466 : 
; 3467 :     PRINTMSG(ZONE_PDD_INIT, /* TRUE */
; 3468 :              (L"INTMSKR 0x%08x\r\n",
; 3469 :               pUsbdRegs->EP_INTMSKR));

  086b8	e59f3108	 ldr         r3, [pc, #0x108]
  086bc	e5933440	 ldr         r3, [r3, #0x440]
  086c0	e3130c01	 tst         r3, #1, 24
  086c4	0a000015	 beq         |$LN42@UfnPdd_Ini@2|
  086c8	e59f30f8	 ldr         r3, [pc, #0xF8]
  086cc	e5933440	 ldr         r3, [r3, #0x440]
  086d0	e3130801	 tst         r3, #1, 16
  086d4	0a000007	 beq         |$LN40@UfnPdd_Ini@2|
  086d8	e59d3014	 ldr         r3, [sp, #0x14]
  086dc	e283302c	 add         r3, r3, #0x2C
  086e0	e5931000	 ldr         r1, [r3]
  086e4	e59f00e0	 ldr         r0, [pc, #0xE0]
  086e8	eb000000	 bl          CeLogMsg
  086ec	e3a03001	 mov         r3, #1
  086f0	e58d3084	 str         r3, [sp, #0x84]
  086f4	ea000006	 b           |$LN41@UfnPdd_Ini@2|
  086f8		 |$LN40@UfnPdd_Ini@2|
  086f8	e59d3014	 ldr         r3, [sp, #0x14]
  086fc	e283302c	 add         r3, r3, #0x2C
  08700	e5931000	 ldr         r1, [r3]
  08704	e59f00c0	 ldr         r0, [pc, #0xC0]
  08708	eb000000	 bl          NKDbgPrintfW
  0870c	e3a03000	 mov         r3, #0
  08710	e58d3084	 str         r3, [sp, #0x84]
  08714		 |$LN41@UfnPdd_Ini@2|
  08714	e3a03001	 mov         r3, #1
  08718	e58d3088	 str         r3, [sp, #0x88]
  0871c	ea000001	 b           |$LN43@UfnPdd_Ini@2|
  08720		 |$LN42@UfnPdd_Ini@2|
  08720	e3a03000	 mov         r3, #0
  08724	e58d3088	 str         r3, [sp, #0x88]
  08728		 |$LN43@UfnPdd_Ini@2|

; 3470 : 
; 3471 :     /* EP is ready */
; 3472 :     pPdd->ep[endpoint].epInitialised = TRUE;

  08728	e59d3028	 ldr         r3, [sp, #0x28]
  0872c	e2831fa1	 add         r1, r3, #0xA1, 30
  08730	e59d20a4	 ldr         r2, [sp, #0xA4]
  08734	e3a0303c	 mov         r3, #0x3C
  08738	e0030392	 mul         r3, r2, r3
  0873c	e0813003	 add         r3, r1, r3
  08740	e2832004	 add         r2, r3, #4
  08744	e3a03001	 mov         r3, #1
  08748	e5823000	 str         r3, [r2]
  0874c		 |$Exit$48739|

; 3473 : 
; 3474 : Exit:
; 3475 :     FUNCTION_LEAVE_MSG();

  0874c	e59f3074	 ldr         r3, [pc, #0x74]
  08750	e5933440	 ldr         r3, [r3, #0x440]
  08754	e3130a01	 tst         r3, #1, 20
  08758	0a000011	 beq         |$LN46@UfnPdd_Ini@2|
  0875c	e59f3064	 ldr         r3, [pc, #0x64]
  08760	e5933440	 ldr         r3, [r3, #0x440]
  08764	e3130801	 tst         r3, #1, 16
  08768	0a000005	 beq         |$LN44@UfnPdd_Ini@2|
  0876c	e59d1020	 ldr         r1, [sp, #0x20]
  08770	e59f004c	 ldr         r0, [pc, #0x4C]
  08774	eb000000	 bl          CeLogMsg
  08778	e3a03001	 mov         r3, #1
  0877c	e58d308c	 str         r3, [sp, #0x8C]
  08780	ea000004	 b           |$LN45@UfnPdd_Ini@2|
  08784		 |$LN44@UfnPdd_Ini@2|
  08784	e59d1020	 ldr         r1, [sp, #0x20]
  08788	e59f0034	 ldr         r0, [pc, #0x34]
  0878c	eb000000	 bl          NKDbgPrintfW
  08790	e3a03000	 mov         r3, #0
  08794	e58d308c	 str         r3, [sp, #0x8C]
  08798		 |$LN45@UfnPdd_Ini@2|
  08798	e3a03001	 mov         r3, #1
  0879c	e58d3090	 str         r3, [sp, #0x90]
  087a0	ea000001	 b           |$LN47@UfnPdd_Ini@2|
  087a4		 |$LN46@UfnPdd_Ini@2|
  087a4	e3a03000	 mov         r3, #0
  087a8	e58d3090	 str         r3, [sp, #0x90]
  087ac		 |$LN47@UfnPdd_Ini@2|

; 3476 : 
; 3477 :     return rc;

  087ac	e59d300c	 ldr         r3, [sp, #0xC]
  087b0	e58d304c	 str         r3, [sp, #0x4C]

; 3478 : }

  087b4	e59d004c	 ldr         r0, [sp, #0x4C]
  087b8	e28dd094	 add         sp, sp, #0x94
  087bc	e89d6010	 ldmia       sp, {r4, sp, lr}
  087c0	e12fff1e	 bx          lr
  087c4		 |$LN51@UfnPdd_Ini@2|
  087c4		 |$LN52@UfnPdd_Ini@2|
  087c4	00000000	 DCD         |??_C@_1BA@PLOOFDPK@?$AA?$CF?$AAs?$AA?5?$AA?9?$AA?9?$AA?$AN?$AA?6?$AA?$AA@|
  087c8		 |$LN53@UfnPdd_Ini@2|
  087c8	00000000	 DCD         |dpCurSettings|
  087cc		 |$LN54@UfnPdd_Ini@2|
  087cc	00000000	 DCD         |??_C@_1CC@OAFMEOOK@?$AAI?$AAN?$AAT?$AAM?$AAS?$AAK?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  087d0		 |$LN55@UfnPdd_Ini@2|
  087d0	00000000	 DCD         |RxDmaTransferComplete|
  087d4		 |$LN56@UfnPdd_Ini@2|
  087d4	00000000	 DCD         |TxDmaTransferComplete|
  087d8		 |$LN57@UfnPdd_Ini@2|
  087d8	00000000	 DCD         |??_C@_1EO@BCICKFGE@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAF?$AAI?$AAF?$AAO?$AAS?$AAZ?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAC?$AAS?$AAR?$AA?5@|
  087dc		 |$LN58@UfnPdd_Ini@2|
  087dc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  087e0		 |$LN59@UfnPdd_Ini@2|
  087e0	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  087e4		 |$LN60@UfnPdd_Ini@2|
  087e4	00000000	 DCD         |??_C@_1HM@BENODFNJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?0@|
  087e8		 |$LN61@UfnPdd_Ini@2|
  087e8	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  087ec		 |$LN62@UfnPdd_Ini@2|
  087ec	00000000	 DCD         |??_C@_1JC@ILIKPLGK@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz@|
  087f0		 |$LN63@UfnPdd_Ini@2|
  087f0	00000000	 DCD         |??_C@_1BA@DAJPCKDK@?$AA?$CF?$AAs?$AA?5?$AA?$CL?$AA?$CL?$AA?$AN?$AA?6?$AA?$AA@|
  087f4		 |$LN64@UfnPdd_Ini@2|
  087f4	00000000	 DCD         |??_C@_1EA@ECKIBBDI@?$AAA?$AAM?$AA3?$AA5?$AA1?$AA7?$AAU?$AAs?$AAb?$AAF?$AAn?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?$AA@|
  087f8		 |$M50500|

			 ENDP  ; |UfnPdd_InitEndpoint|


  00130			 AREA	 |.pdata|, PDATA
|$T50522| DCD	|$LN8@Log2|
	DCD	0x40001c04
; Function compile flags: /Odtp

  087f8			 AREA	 |.text|, CODE, ARM

  087f8		 |Log2|	 PROC

; 769  : {

  087f8		 |$LN8@Log2|
  087f8	e1a0c00d	 mov         r12, sp
  087fc	e92d0001	 stmdb       sp!, {r0}
  08800	e92d5000	 stmdb       sp!, {r12, lr}
  08804	e24dd008	 sub         sp, sp, #8
  08808		 |$M50519|

; 770  :     DWORD rc = 0;

  08808	e3a03000	 mov         r3, #0
  0880c	e58d3000	 str         r3, [sp]
  08810		 |$LN3@Log2|

; 771  :     while ( value != 0 )

  08810	e59d3010	 ldr         r3, [sp, #0x10]
  08814	e3530000	 cmp         r3, #0
  08818	0a000006	 beq         |$LN2@Log2|

; 772  :     {
; 773  :         value >>= 1;

  0881c	e59d3010	 ldr         r3, [sp, #0x10]
  08820	e1a030a3	 mov         r3, r3, lsr #1
  08824	e58d3010	 str         r3, [sp, #0x10]

; 774  :         rc++;

  08828	e59d3000	 ldr         r3, [sp]
  0882c	e2833001	 add         r3, r3, #1
  08830	e58d3000	 str         r3, [sp]

; 775  :     }

  08834	eafffff5	 b           |$LN3@Log2|
  08838		 |$LN2@Log2|

; 776  :     if ( rc > 0 ) rc--;

  08838	e59d3000	 ldr         r3, [sp]
  0883c	e3530000	 cmp         r3, #0
  08840	9a000002	 bls         |$LN1@Log2|
  08844	e59d3000	 ldr         r3, [sp]
  08848	e2433001	 sub         r3, r3, #1
  0884c	e58d3000	 str         r3, [sp]
  08850		 |$LN1@Log2|

; 777  :     return rc;

  08850	e59d3000	 ldr         r3, [sp]
  08854	e58d3004	 str         r3, [sp, #4]

; 778  : }

  08858	e59d0004	 ldr         r0, [sp, #4]
  0885c	e28dd008	 add         sp, sp, #8
  08860	e89d6000	 ldmia       sp, {sp, lr}
  08864	e12fff1e	 bx          lr
  08868		 |$M50520|

			 ENDP  ; |Log2|

	EXPORT	|??_C@_1DA@IMJLDCBL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_SetAddress|

  00138			 AREA	 |.pdata|, PDATA
|$T50532| DCD	|$LN9@UfnPdd_Set|
	DCD	0x40003604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IMJLDCBL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  08868			 AREA	 |.text|, CODE, ARM

  08868		 |UfnPdd_SetAddress| PROC

; 3500 : {

  08868		 |$LN9@UfnPdd_Set|
  08868	e1a0c00d	 mov         r12, sp
  0886c	e92d0003	 stmdb       sp!, {r0, r1}
  08870	e92d5000	 stmdb       sp!, {r12, lr}
  08874	e24dd014	 sub         sp, sp, #0x14
  08878		 |$M50529|

; 3501 :     DWORD rc = ERROR_SUCCESS;

  08878	e3a03000	 mov         r3, #0
  0887c	e58d3000	 str         r3, [sp]

; 3502 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pvPddContext;

  08880	e59d301c	 ldr         r3, [sp, #0x1C]
  08884	e58d3004	 str         r3, [sp, #4]

; 3503 : 
; 3504 :     PRINTMSG(ZONE_PDD_INIT, (L"UfnPdd_SetAddress: %d\r\n", address));

  08888	e59f30ac	 ldr         r3, [pc, #0xAC]
  0888c	e5933440	 ldr         r3, [r3, #0x440]
  08890	e3130c01	 tst         r3, #1, 24
  08894	0a000011	 beq         |$LN5@UfnPdd_Set|
  08898	e59f309c	 ldr         r3, [pc, #0x9C]
  0889c	e5933440	 ldr         r3, [r3, #0x440]
  088a0	e3130801	 tst         r3, #1, 16
  088a4	0a000005	 beq         |$LN3@UfnPdd_Set|
  088a8	e5dd1020	 ldrb        r1, [sp, #0x20]
  088ac	e59f0084	 ldr         r0, [pc, #0x84]
  088b0	eb000000	 bl          CeLogMsg
  088b4	e3a03001	 mov         r3, #1
  088b8	e58d300c	 str         r3, [sp, #0xC]
  088bc	ea000004	 b           |$LN4@UfnPdd_Set|
  088c0		 |$LN3@UfnPdd_Set|
  088c0	e5dd1020	 ldrb        r1, [sp, #0x20]
  088c4	e59f006c	 ldr         r0, [pc, #0x6C]
  088c8	eb000000	 bl          NKDbgPrintfW
  088cc	e3a03000	 mov         r3, #0
  088d0	e58d300c	 str         r3, [sp, #0xC]
  088d4		 |$LN4@UfnPdd_Set|
  088d4	e3a03001	 mov         r3, #1
  088d8	e58d3010	 str         r3, [sp, #0x10]
  088dc	ea000001	 b           |$LN6@UfnPdd_Set|
  088e0		 |$LN5@UfnPdd_Set|
  088e0	e3a03000	 mov         r3, #0
  088e4	e58d3010	 str         r3, [sp, #0x10]
  088e8		 |$LN6@UfnPdd_Set|

; 3505 : 
; 3506 :     /* Write into the FADDR Register */
; 3507 :     pPdd->devAddress = (address & 0x7F);

  088e8	e5dd3020	 ldrb        r3, [sp, #0x20]
  088ec	e203107f	 and         r1, r3, #0x7F
  088f0	e59d3004	 ldr         r3, [sp, #4]
  088f4	e2832040	 add         r2, r3, #0x40
  088f8	e20130ff	 and         r3, r1, #0xFF
  088fc	e5c23000	 strb        r3, [r2]

; 3508 :     pPdd->pUsbdRegs->FADDR = pPdd->devAddress;

  08900	e59d3004	 ldr         r3, [sp, #4]
  08904	e2831040	 add         r1, r3, #0x40
  08908	e59d3004	 ldr         r3, [sp, #4]
  0890c	e283301c	 add         r3, r3, #0x1C
  08910	e5933000	 ldr         r3, [r3]
  08914	e2832b01	 add         r2, r3, #1, 22
  08918	e5d13000	 ldrb        r3, [r1]
  0891c	e5c23000	 strb        r3, [r2]

; 3509 : 
; 3510 :     return (rc);

  08920	e59d3000	 ldr         r3, [sp]
  08924	e58d3008	 str         r3, [sp, #8]

; 3511 : }

  08928	e59d0008	 ldr         r0, [sp, #8]
  0892c	e28dd014	 add         sp, sp, #0x14
  08930	e89d6000	 ldmia       sp, {sp, lr}
  08934	e12fff1e	 bx          lr
  08938		 |$LN10@UfnPdd_Set|
  08938		 |$LN11@UfnPdd_Set|
  08938	00000000	 DCD         |??_C@_1DA@IMJLDCBL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0893c		 |$LN12@UfnPdd_Set|
  0893c	00000000	 DCD         |dpCurSettings|
  08940		 |$M50530|

			 ENDP  ; |UfnPdd_SetAddress|

	EXPORT	|??_C@_1FE@EPDCGLNF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAI?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@HHJLEOOO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AAF?$AAn?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAT?$AAh?$AAr?$AAe?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@KKBNOJNJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@JMCHKDAM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@JLPCCCGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@NBJELPCE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Start|
	IMPORT	|DumpUsbRegisters|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|CreateThread|
	IMPORT	|InterruptInitialize|

  00140			 AREA	 |.pdata|, PDATA
|$T50555| DCD	|$LN23@UfnPdd_Sta@2|
	DCD	0x4000e604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@EPDCGLNF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAI?$AAn?$AAt?$AAe@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "s", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@HHJLEOOO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AAF?$AAn?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAT?$AAh?$AAr?$AAe?$AAa@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "n"
	DCB	0x0, "P", 0x0, "D", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@KKBNOJNJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@JMCHKDAM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@JLPCCCGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@NBJELPCE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, ":"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  08940			 AREA	 |.text|, CODE, ARM

  08940		 |UfnPdd_Start| PROC

; 3528 : {

  08940		 |$LN23@UfnPdd_Sta@2|
  08940	e1a0c00d	 mov         r12, sp
  08944	e92d0001	 stmdb       sp!, {r0}
  08948	e92d5000	 stmdb       sp!, {r12, lr}
  0894c	e24dd048	 sub         sp, sp, #0x48
  08950		 |$M50552|

; 3529 :     DWORD rc = ERROR_SUCCESS;

  08950	e3a03000	 mov         r3, #0
  08954	e58d3008	 str         r3, [sp, #8]

; 3530 :     UINT32 usbIrqRegVal = 0;

  08958	e3a03000	 mov         r3, #0
  0895c	e58d300c	 str         r3, [sp, #0xC]

; 3531 : 
; 3532 :     USBFNPDDCONTEXT  *pPdd = (USBFNPDDCONTEXT *)pPddContext;

  08960	e59d3050	 ldr         r3, [sp, #0x50]
  08964	e58d3014	 str         r3, [sp, #0x14]

; 3533 : 
; 3534 : #ifdef CPPI_DMA_SUPPORT
; 3535 :     /* Initialize the DMA Controller Object */
; 3536 :     struct dma_controller *pDmaCntrl = (struct dma_controller *)pPdd->pDmaCntrl;

  08968	e59d3014	 ldr         r3, [sp, #0x14]
  0896c	e2833c06	 add         r3, r3, #6, 24
  08970	e283305c	 add         r3, r3, #0x5C
  08974	e5933000	 ldr         r3, [r3]
  08978	e58d3010	 str         r3, [sp, #0x10]

; 3537 : #endif
; 3538 : 
; 3539 :     PRINTMSG(ZONE_FUNCTION, (L"UfnPdd_Start:\r\n"));

  0897c	e59f3330	 ldr         r3, [pc, #0x330]
  08980	e5933440	 ldr         r3, [r3, #0x440]
  08984	e3130a01	 tst         r3, #1, 20
  08988	0a00000f	 beq         |$LN11@UfnPdd_Sta@2|
  0898c	e59f3320	 ldr         r3, [pc, #0x320]
  08990	e5933440	 ldr         r3, [r3, #0x440]
  08994	e3130801	 tst         r3, #1, 16
  08998	0a000004	 beq         |$LN9@UfnPdd_Sta@2|
  0899c	e59f0330	 ldr         r0, [pc, #0x330]
  089a0	eb000000	 bl          CeLogMsg
  089a4	e3a03001	 mov         r3, #1
  089a8	e58d3024	 str         r3, [sp, #0x24]
  089ac	ea000003	 b           |$LN10@UfnPdd_Sta@2|
  089b0		 |$LN9@UfnPdd_Sta@2|
  089b0	e59f031c	 ldr         r0, [pc, #0x31C]
  089b4	eb000000	 bl          NKDbgPrintfW
  089b8	e3a03000	 mov         r3, #0
  089bc	e58d3024	 str         r3, [sp, #0x24]
  089c0		 |$LN10@UfnPdd_Sta@2|
  089c0	e3a03001	 mov         r3, #1
  089c4	e58d3028	 str         r3, [sp, #0x28]
  089c8	ea000001	 b           |$LN12@UfnPdd_Sta@2|
  089cc		 |$LN11@UfnPdd_Sta@2|
  089cc	e3a03000	 mov         r3, #0
  089d0	e58d3028	 str         r3, [sp, #0x28]
  089d4		 |$LN12@UfnPdd_Sta@2|

; 3540 : 
; 3541 :     /* Create interrupt event */
; 3542 :     pPdd->hIntrEvent = CreateEvent(0, FALSE, FALSE, NULL);

  089d4	e3a03000	 mov         r3, #0
  089d8	e3a02000	 mov         r2, #0
  089dc	e3a01000	 mov         r1, #0
  089e0	e3a00000	 mov         r0, #0
  089e4	eb000000	 bl          CreateEventW
  089e8	e58d002c	 str         r0, [sp, #0x2C]
  089ec	e59d3014	 ldr         r3, [sp, #0x14]
  089f0	e2832030	 add         r2, r3, #0x30
  089f4	e59d302c	 ldr         r3, [sp, #0x2C]
  089f8	e5823000	 str         r3, [r2]

; 3543 :     if ( pPdd->hIntrEvent == NULL )

  089fc	e59d3014	 ldr         r3, [sp, #0x14]
  08a00	e2833030	 add         r3, r3, #0x30
  08a04	e5933000	 ldr         r3, [r3]
  08a08	e3530000	 cmp         r3, #0
  08a0c	1a000009	 bne         |$LN6@UfnPdd_Sta@2|

; 3544 :     {
; 3545 :         ERRORMSG (TRUE, (L"ERROR: Error creating interrupt event\r\n"));

  08a10	e3a02c0d	 mov         r2, #0xD, 24
  08a14	e38220d9	 orr         r2, r2, #0xD9
  08a18	e59f12a4	 ldr         r1, [pc, #0x2A4]
  08a1c	e59f029c	 ldr         r0, [pc, #0x29C]
  08a20	eb000000	 bl          NKDbgPrintfW
  08a24	e59f02a4	 ldr         r0, [pc, #0x2A4]
  08a28	eb000000	 bl          NKDbgPrintfW

; 3546 :         rc = ERROR_GEN_FAILURE;

  08a2c	e3a0301f	 mov         r3, #0x1F
  08a30	e58d3008	 str         r3, [sp, #8]

; 3547 :         goto Exit;

  08a34	ea000097	 b           |$Exit$48797|
  08a38		 |$LN6@UfnPdd_Sta@2|

; 3548 :     }
; 3549 :     
; 3550 :     /* Initialize interrupt */
; 3551 :     if (!InterruptInitialize( pPdd->sysIntr, pPdd->hIntrEvent, NULL, 0))

  08a38	e3a03000	 mov         r3, #0
  08a3c	e3a02000	 mov         r2, #0
  08a40	e59d1014	 ldr         r1, [sp, #0x14]
  08a44	e2811030	 add         r1, r1, #0x30
  08a48	e5911000	 ldr         r1, [r1]
  08a4c	e59d0014	 ldr         r0, [sp, #0x14]
  08a50	e280002c	 add         r0, r0, #0x2C
  08a54	e5900000	 ldr         r0, [r0]
  08a58	eb000000	 bl          InterruptInitialize
  08a5c	e58d0030	 str         r0, [sp, #0x30]
  08a60	e59d3030	 ldr         r3, [sp, #0x30]
  08a64	e3530000	 cmp         r3, #0
  08a68	1a000009	 bne         |$LN5@UfnPdd_Sta@2|

; 3552 :     {
; 3553 :         ERRORMSG (TRUE, (L"ERROR: Interrupt initialization failed\r\n"));

  08a6c	e3a02c0d	 mov         r2, #0xD, 24
  08a70	e38220e1	 orr         r2, r2, #0xE1
  08a74	e59f1248	 ldr         r1, [pc, #0x248]
  08a78	e59f0240	 ldr         r0, [pc, #0x240]
  08a7c	eb000000	 bl          NKDbgPrintfW
  08a80	e59f0244	 ldr         r0, [pc, #0x244]
  08a84	eb000000	 bl          NKDbgPrintfW

; 3554 :         rc = ERROR_GEN_FAILURE;

  08a88	e3a0301f	 mov         r3, #0x1F
  08a8c	e58d3008	 str         r3, [sp, #8]

; 3555 :         goto Exit;

  08a90	ea000080	 b           |$Exit$48797|
  08a94		 |$LN5@UfnPdd_Sta@2|

; 3556 :     }
; 3557 : 
; 3558 :     /* Run interrupt thread */
; 3559 :     pPdd->exitIntrThread = FALSE;

  08a94	e59d3014	 ldr         r3, [sp, #0x14]
  08a98	e2832034	 add         r2, r3, #0x34
  08a9c	e3a03000	 mov         r3, #0
  08aa0	e5823000	 str         r3, [r2]

; 3560 :     pPdd->hIntrThread = CreateThread (NULL, 0, InterruptThread, pPdd, 0, NULL);

  08aa4	e3a03000	 mov         r3, #0
  08aa8	e58d3004	 str         r3, [sp, #4]
  08aac	e3a03000	 mov         r3, #0
  08ab0	e58d3000	 str         r3, [sp]
  08ab4	e59d3014	 ldr         r3, [sp, #0x14]
  08ab8	e59f2208	 ldr         r2, [pc, #0x208]
  08abc	e3a01000	 mov         r1, #0
  08ac0	e3a00000	 mov         r0, #0
  08ac4	eb000000	 bl          CreateThread
  08ac8	e58d0034	 str         r0, [sp, #0x34]
  08acc	e59d3014	 ldr         r3, [sp, #0x14]
  08ad0	e2832044	 add         r2, r3, #0x44
  08ad4	e59d3034	 ldr         r3, [sp, #0x34]
  08ad8	e5823000	 str         r3, [r2]

; 3561 :     if ( pPdd->hIntrThread == NULL )

  08adc	e59d3014	 ldr         r3, [sp, #0x14]
  08ae0	e2833044	 add         r3, r3, #0x44
  08ae4	e5933000	 ldr         r3, [r3]
  08ae8	e3530000	 cmp         r3, #0
  08aec	1a000009	 bne         |$LN4@UfnPdd_Sta@2|

; 3562 :     {
; 3563 :         ERRORMSG (TRUE, (L"ERROR: Interrupt thread creation failed\r\n"));

  08af0	e3a02c0d	 mov         r2, #0xD, 24
  08af4	e38220eb	 orr         r2, r2, #0xEB
  08af8	e59f11c4	 ldr         r1, [pc, #0x1C4]
  08afc	e59f01bc	 ldr         r0, [pc, #0x1BC]
  08b00	eb000000	 bl          NKDbgPrintfW
  08b04	e59f01b0	 ldr         r0, [pc, #0x1B0]
  08b08	eb000000	 bl          NKDbgPrintfW

; 3564 :         rc = ERROR_GEN_FAILURE;

  08b0c	e3a0301f	 mov         r3, #0x1F
  08b10	e58d3008	 str         r3, [sp, #8]

; 3565 :         goto Exit;

  08b14	ea00005f	 b           |$Exit$48797|
  08b18		 |$LN4@UfnPdd_Sta@2|

; 3566 :     }
; 3567 :     CeSetThreadPriority(pPdd->hIntrThread, pPdd->priority256);

  08b18	e59d3014	 ldr         r3, [sp, #0x14]
  08b1c	e2833004	 add         r3, r3, #4
  08b20	e5931000	 ldr         r1, [r3]
  08b24	e59d3014	 ldr         r3, [sp, #0x14]
  08b28	e2833044	 add         r3, r3, #0x44
  08b2c	e5930000	 ldr         r0, [r3]
  08b30	eb000000	 bl          CeSetThreadPriority

; 3568 : 
; 3569 :     PRINTMSG(ZONE_PDD_INIT, (L"UfnPdd_Start: USBFnPDD IntrThread 0x%08x\r\n",
; 3570 :                              pPdd->hIntrThread));

  08b34	e59f3178	 ldr         r3, [pc, #0x178]
  08b38	e5933440	 ldr         r3, [r3, #0x440]
  08b3c	e3130c01	 tst         r3, #1, 24
  08b40	0a000015	 beq         |$LN15@UfnPdd_Sta@2|
  08b44	e59f3168	 ldr         r3, [pc, #0x168]
  08b48	e5933440	 ldr         r3, [r3, #0x440]
  08b4c	e3130801	 tst         r3, #1, 16
  08b50	0a000007	 beq         |$LN13@UfnPdd_Sta@2|
  08b54	e59d3014	 ldr         r3, [sp, #0x14]
  08b58	e2833044	 add         r3, r3, #0x44
  08b5c	e5931000	 ldr         r1, [r3]
  08b60	e59f0150	 ldr         r0, [pc, #0x150]
  08b64	eb000000	 bl          CeLogMsg
  08b68	e3a03001	 mov         r3, #1
  08b6c	e58d3038	 str         r3, [sp, #0x38]
  08b70	ea000006	 b           |$LN14@UfnPdd_Sta@2|
  08b74		 |$LN13@UfnPdd_Sta@2|
  08b74	e59d3014	 ldr         r3, [sp, #0x14]
  08b78	e2833044	 add         r3, r3, #0x44
  08b7c	e5931000	 ldr         r1, [r3]
  08b80	e59f0130	 ldr         r0, [pc, #0x130]
  08b84	eb000000	 bl          NKDbgPrintfW
  08b88	e3a03000	 mov         r3, #0
  08b8c	e58d3038	 str         r3, [sp, #0x38]
  08b90		 |$LN14@UfnPdd_Sta@2|
  08b90	e3a03001	 mov         r3, #1
  08b94	e58d303c	 str         r3, [sp, #0x3C]
  08b98	ea000001	 b           |$LN16@UfnPdd_Sta@2|
  08b9c		 |$LN15@UfnPdd_Sta@2|
  08b9c	e3a03000	 mov         r3, #0
  08ba0	e58d303c	 str         r3, [sp, #0x3C]
  08ba4		 |$LN16@UfnPdd_Sta@2|

; 3571 : 
; 3572 :     /* Power up */
; 3573 :     if ((pPdd->currentPowerState == D3) || (pPdd->currentPowerState == D4))

  08ba4	e59d3014	 ldr         r3, [sp, #0x14]
  08ba8	e2833048	 add         r3, r3, #0x48
  08bac	e5933000	 ldr         r3, [r3]
  08bb0	e3530003	 cmp         r3, #3
  08bb4	0a000004	 beq         |$LN2@UfnPdd_Sta@2|
  08bb8	e59d3014	 ldr         r3, [sp, #0x14]
  08bbc	e2833048	 add         r3, r3, #0x48
  08bc0	e5933000	 ldr         r3, [r3]
  08bc4	e3530004	 cmp         r3, #4
  08bc8	1a000002	 bne         |$LN3@UfnPdd_Sta@2|
  08bcc		 |$LN2@UfnPdd_Sta@2|

; 3574 :     {
; 3575 :         SetPowerState(pPdd, D0);

  08bcc	e3a01000	 mov         r1, #0
  08bd0	e59d0014	 ldr         r0, [sp, #0x14]
  08bd4	eb000000	 bl          SetPowerState
  08bd8		 |$LN3@UfnPdd_Sta@2|

; 3576 :     }
; 3577 : 
; 3578 :     /* Now Enable the CORE Interrupts */
; 3579 :     usbIrqRegVal = USB_OTG_USBINT_MASK & ~(CSL_USB_INTRUSB_SOF_MASK << CSL_USB_INTMSKR_USB_SHIFT);

  08bd8	e3a0377d	 mov         r3, #0x7D, 14
  08bdc	e3833803	 orr         r3, r3, #3, 16
  08be0	e58d300c	 str         r3, [sp, #0xC]

; 3580 :     pPdd->pUsbdRegs->CORE_INTMSKSETR = usbIrqRegVal;

  08be4	e59d3014	 ldr         r3, [sp, #0x14]
  08be8	e283301c	 add         r3, r3, #0x1C
  08bec	e5933000	 ldr         r3, [r3]
  08bf0	e2832050	 add         r2, r3, #0x50
  08bf4	e59d300c	 ldr         r3, [sp, #0xC]
  08bf8	e5823000	 str         r3, [r2]

; 3581 : 
; 3582 :     PRINTMSG(ZONE_PDD_INIT, (L"UfnPdd_Start: Reenabled all Interrupts \r\n"));

  08bfc	e59f30b0	 ldr         r3, [pc, #0xB0]
  08c00	e5933440	 ldr         r3, [r3, #0x440]
  08c04	e3130c01	 tst         r3, #1, 24
  08c08	0a00000f	 beq         |$LN19@UfnPdd_Sta@2|
  08c0c	e59f30a0	 ldr         r3, [pc, #0xA0]
  08c10	e5933440	 ldr         r3, [r3, #0x440]
  08c14	e3130801	 tst         r3, #1, 16
  08c18	0a000004	 beq         |$LN17@UfnPdd_Sta@2|
  08c1c	e59f008c	 ldr         r0, [pc, #0x8C]
  08c20	eb000000	 bl          CeLogMsg
  08c24	e3a03001	 mov         r3, #1
  08c28	e58d3040	 str         r3, [sp, #0x40]
  08c2c	ea000003	 b           |$LN18@UfnPdd_Sta@2|
  08c30		 |$LN17@UfnPdd_Sta@2|
  08c30	e59f0078	 ldr         r0, [pc, #0x78]
  08c34	eb000000	 bl          NKDbgPrintfW
  08c38	e3a03000	 mov         r3, #0
  08c3c	e58d3040	 str         r3, [sp, #0x40]
  08c40		 |$LN18@UfnPdd_Sta@2|
  08c40	e3a03001	 mov         r3, #1
  08c44	e58d3044	 str         r3, [sp, #0x44]
  08c48	ea000001	 b           |$LN20@UfnPdd_Sta@2|
  08c4c		 |$LN19@UfnPdd_Sta@2|
  08c4c	e3a03000	 mov         r3, #0
  08c50	e58d3044	 str         r3, [sp, #0x44]
  08c54		 |$LN20@UfnPdd_Sta@2|

; 3583 :     DumpUsbRegisters(pPdd);

  08c54	e59d0014	 ldr         r0, [sp, #0x14]
  08c58	eb000000	 bl          DumpUsbRegisters

; 3584 : 
; 3585 : #ifdef CPPI_DMA_SUPPORT
; 3586 :     /* Start the DMA Controller Object */
; 3587 :     if (pDmaCntrl != NULL)

  08c5c	e59d3010	 ldr         r3, [sp, #0x10]
  08c60	e3530000	 cmp         r3, #0
  08c64	0a000007	 beq         |$LN1@UfnPdd_Sta@2|

; 3588 :     {
; 3589 :         pDmaCntrl->pfnStart(pPdd->pDmaCntrl);

  08c68	e59d3014	 ldr         r3, [sp, #0x14]
  08c6c	e2833c06	 add         r3, r3, #6, 24
  08c70	e283305c	 add         r3, r3, #0x5C
  08c74	e5930000	 ldr         r0, [r3]
  08c78	e59d3010	 ldr         r3, [sp, #0x10]
  08c7c	e5933000	 ldr         r3, [r3]
  08c80	e1a0e00f	 mov         lr, pc
  08c84	e12fff13	 bx          r3
  08c88		 |$LN1@UfnPdd_Sta@2|

; 3590 :     }
; 3591 : #endif /* #ifdef CPPI_DMA_SUPPORT */
; 3592 : 
; 3593 :     /* Release the IST */
; 3594 :     SetEvent(pPdd->hStartEvent);

  08c88	e59d3014	 ldr         r3, [sp, #0x14]
  08c8c	e2833f9b	 add         r3, r3, #0x9B, 30
  08c90	e5930000	 ldr         r0, [r3]
  08c94	eb000000	 bl          SetEvent
  08c98		 |$Exit$48797|

; 3595 : 
; 3596 : Exit:
; 3597 :     return (rc);

  08c98	e59d3008	 ldr         r3, [sp, #8]
  08c9c	e58d3020	 str         r3, [sp, #0x20]

; 3598 : 
; 3599 : }

  08ca0	e59d0020	 ldr         r0, [sp, #0x20]
  08ca4	e28dd048	 add         sp, sp, #0x48
  08ca8	e89d6000	 ldmia       sp, {sp, lr}
  08cac	e12fff1e	 bx          lr
  08cb0		 |$LN24@UfnPdd_Sta@2|
  08cb0		 |$LN25@UfnPdd_Sta@2|
  08cb0	00000000	 DCD         |??_C@_1FE@EPDCGLNF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAI?$AAn?$AAt?$AAe@|
  08cb4		 |$LN26@UfnPdd_Sta@2|
  08cb4	00000000	 DCD         |dpCurSettings|
  08cb8		 |$LN27@UfnPdd_Sta@2|
  08cb8	00000000	 DCD         |??_C@_1FG@HHJLEOOO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?5?$AAU?$AAS?$AAB?$AAF?$AAn?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAT?$AAh?$AAr?$AAe?$AAa@|
  08cbc		 |$LN28@UfnPdd_Sta@2|
  08cbc	00000000	 DCD         |??_C@_1FE@KKBNOJNJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn@|
  08cc0		 |$LN29@UfnPdd_Sta@2|
  08cc0	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  08cc4		 |$LN30@UfnPdd_Sta@2|
  08cc4	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  08cc8		 |$LN31@UfnPdd_Sta@2|
  08cc8	00000000	 DCD         |InterruptThread|
  08ccc		 |$LN32@UfnPdd_Sta@2|
  08ccc	00000000	 DCD         |??_C@_1FC@JMCHKDAM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5@|
  08cd0		 |$LN33@UfnPdd_Sta@2|
  08cd0	00000000	 DCD         |??_C@_1FA@JLPCCCGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@|
  08cd4		 |$LN34@UfnPdd_Sta@2|
  08cd4	00000000	 DCD         |??_C@_1CA@NBJELPCE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  08cd8		 |$M50553|

			 ENDP  ; |UfnPdd_Start|

	EXPORT	|??_C@_1CG@MLHDCFCM@?$AA?9?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@OEIAAOFN@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@CIEHDLFP@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@CDDBIMJE@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAD?$AAI?$AAS?$AAC?$AAO?$AAN?$AAN?$AAE?$AAC?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@HDKNFPMC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@FEBAKMFE@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@CLKNPBLL@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAx?$AA?0?$AA?5?$AAR?$AAX?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@JCPGNCFK@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AA1?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@DMJOEDML@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AA0?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@BLMPDEPI@?$AAB?$AAu?$AAs?$AA?5?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_19DLEPDAFO@?$AAF?$AAU?$AAL?$AAL?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_19OLDHEDBN@?$AAH?$AAI?$AAG?$AAH?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@BLIABBAM@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@FAKDCFOC@?$AA?$CL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|InterruptDone|
	IMPORT	|UsbPddTxRxIntrHandler|
	IMPORT	|HandleUsbCoreInterrupt|
	IMPORT	|cppiCompletionCallback|
	IMPORT	|USBFNPDD_WaitForAPIsReady|

  00148			 AREA	 |.pdata|, PDATA
|$T50626| DCD	|$LN77@InterruptT|
	DCD	0x40026604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@MLHDCFCM@?$AA?9?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@OEIAAOFN@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB ">"
	DCB	0x0, ">", 0x0, ">", 0x0, " ", 0x0, "S", 0x0, "U", 0x0, "S"
	DCB	0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CIEHDLFP@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@| DCB ">"
	DCB	0x0, ">", 0x0, ">", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "T"
	DCB	0x0, "A", 0x0, "C", 0x0, "H", 0x0, " ", 0x0, ">", 0x0, ">"
	DCB	0x0, ">", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CDDBIMJE@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAD?$AAI?$AAS?$AAC?$AAO?$AAN?$AAN?$AAE?$AAC?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB ">"
	DCB	0x0, ">", 0x0, ">", 0x0, " ", 0x0, "D", 0x0, "I", 0x0, "S"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "N", 0x0, "E", 0x0, "C"
	DCB	0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@HDKNFPMC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "0", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@FEBAKMFE@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "0", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "i", 0x0, "g", 0x0, "n"
	DCB	0x0, "o", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@CLKNPBLL@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAx?$AA?0?$AA?5?$AAR?$AAX?$AA?5?$AA0@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "R", 0x0, "X", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JCPGNCFK@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AA1?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@| DCB ">"
	DCB	0x0, ">", 0x0, ">", 0x0, " ", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, " ", 0x0, "1", 0x0, " ", 0x0, ">"
	DCB	0x0, ">", 0x0, ">", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@DMJOEDML@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AA0?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@| DCB ">"
	DCB	0x0, ">", 0x0, ">", 0x0, " ", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, " ", 0x0, "0", 0x0, " ", 0x0, ">"
	DCB	0x0, ">", 0x0, ">", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@BLMPDEPI@?$AAB?$AAu?$AAs?$AA?5?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "S", 0x0, "p", 0x0, "e"
	DCB	0x0, "e", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19DLEPDAFO@?$AAF?$AAU?$AAL?$AAL?$AA?$AA@| DCB "F", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19OLDHEDBN@?$AAH?$AAI?$AAG?$AAH?$AA?$AA@| DCB "H", 0x0, "I", 0x0, "G"
	DCB	0x0, "H", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@BLIABBAM@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@| DCB ">"
	DCB	0x0, ">", 0x0, ">", 0x0, " ", 0x0, "A", 0x0, "T", 0x0, "T"
	DCB	0x0, "A", 0x0, "C", 0x0, "H", 0x0, " ", 0x0, ">", 0x0, ">"
	DCB	0x0, ">", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@FAKDCFOC@?$AA?$CL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  08cd8			 AREA	 |.text|, CODE, ARM

  08cd8		 |InterruptThread| PROC

; 341  : {

  08cd8		 |$LN77@InterruptT|
  08cd8	e1a0c00d	 mov         r12, sp
  08cdc	e92d0001	 stmdb       sp!, {r0}
  08ce0	e92d5000	 stmdb       sp!, {r12, lr}
  08ce4	e24dd098	 sub         sp, sp, #0x98
  08ce8		 |$M50623|

; 342  :     USBFNPDDCONTEXT *pPdd = pPddContext;

  08ce8	e59d30a0	 ldr         r3, [sp, #0xA0]
  08cec	e58d3020	 str         r3, [sp, #0x20]

; 343  :     CSL_UsbRegs *pUsbdRegs = pPdd->pUsbdRegs;

  08cf0	e59d3020	 ldr         r3, [sp, #0x20]
  08cf4	e283301c	 add         r3, r3, #0x1C
  08cf8	e5933000	 ldr         r3, [r3]
  08cfc	e58d300c	 str         r3, [sp, #0xC]

; 344  : 	OMAP_SYSC_GENERAL_REGS  *pSysConfRegs = pPdd->pSysConfRegs;

  08d00	e59d3020	 ldr         r3, [sp, #0x20]
  08d04	e2833028	 add         r3, r3, #0x28
  08d08	e5933000	 ldr         r3, [r3]
  08d0c	e58d301c	 str         r3, [sp, #0x1C]

; 345  :     UINT32 usbCoreIntrRegVal;
; 346  :     UINT32 usbEpIntrRegVal;
; 347  :     UINT16 intrReg;
; 348  :     UINT16 intrRxReg;
; 349  :     UINT16 intrTxReg;
; 350  :     DWORD code;
; 351  :     DWORD speed;
; 352  : 
; 353  :     /* Wait for PDD start */
; 354  :     WaitForSingleObject(pPdd->hStartEvent, INFINITE);

  08d10	e3e01000	 mvn         r1, #0
  08d14	e59d3020	 ldr         r3, [sp, #0x20]
  08d18	e2833f9b	 add         r3, r3, #0x9B, 30
  08d1c	e5930000	 ldr         r0, [r3]
  08d20	eb000000	 bl          WaitForSingleObject

; 355  : 
; 356  :     // Wait for API sets to become ready (function specific)
; 357  :     USBFNPDD_WaitForAPIsReady();

  08d24	eb000000	 bl          USBFNPDD_WaitForAPIsReady

; 358  : 
; 359  :     /* Release the controller.  This is done after PDD start so that USB packet
; 360  :        processing begins immediately.  If done earlier the host can timeout the
; 361  :        function device due to delays in responding (particularly in debug builds). */
; 362  :     USBPeripheralStart(pPdd);

  08d28	e59d0020	 ldr         r0, [sp, #0x20]
  08d2c	eb000000	 bl          USBPeripheralStart
  08d30		 |$LN18@InterruptT|

; 363  : 
; 364  :     while (pPdd->exitIntrThread == FALSE)

  08d30	e59d3020	 ldr         r3, [sp, #0x20]
  08d34	e2833034	 add         r3, r3, #0x34
  08d38	e5933000	 ldr         r3, [r3]
  08d3c	e3530000	 cmp         r3, #0
  08d40	1a000201	 bne         |$LN17@InterruptT|

; 365  :     {
; 366  :         PRINTMSG(ZONE_FUNCTION, (L"+InterruptThread\r\n"));

  08d44	e59f38ec	 ldr         r3, [pc, #0x8EC]
  08d48	e5933440	 ldr         r3, [r3, #0x440]
  08d4c	e3130a01	 tst         r3, #1, 20
  08d50	0a00000f	 beq         |$LN23@InterruptT|
  08d54	e59f38dc	 ldr         r3, [pc, #0x8DC]
  08d58	e5933440	 ldr         r3, [r3, #0x440]
  08d5c	e3130801	 tst         r3, #1, 16
  08d60	0a000004	 beq         |$LN21@InterruptT|
  08d64	e59f0900	 ldr         r0, [pc, #0x900]
  08d68	eb000000	 bl          CeLogMsg
  08d6c	e3a03001	 mov         r3, #1
  08d70	e58d3028	 str         r3, [sp, #0x28]
  08d74	ea000003	 b           |$LN22@InterruptT|
  08d78		 |$LN21@InterruptT|
  08d78	e59f08ec	 ldr         r0, [pc, #0x8EC]
  08d7c	eb000000	 bl          NKDbgPrintfW
  08d80	e3a03000	 mov         r3, #0
  08d84	e58d3028	 str         r3, [sp, #0x28]
  08d88		 |$LN22@InterruptT|
  08d88	e3a03001	 mov         r3, #1
  08d8c	e58d302c	 str         r3, [sp, #0x2C]
  08d90	ea000001	 b           |$LN24@InterruptT|
  08d94		 |$LN23@InterruptT|
  08d94	e3a03000	 mov         r3, #0
  08d98	e58d302c	 str         r3, [sp, #0x2C]
  08d9c		 |$LN24@InterruptT|

; 367  : 
; 368  :         /* Wait for interrupt */
; 369  :         code = WaitForSingleObject(pPdd->hIntrEvent, INFINITE);

  08d9c	e3e01000	 mvn         r1, #0
  08da0	e59d3020	 ldr         r3, [sp, #0x20]
  08da4	e2833030	 add         r3, r3, #0x30
  08da8	e5930000	 ldr         r0, [r3]
  08dac	eb000000	 bl          WaitForSingleObject
  08db0	e58d0030	 str         r0, [sp, #0x30]
  08db4	e59d3030	 ldr         r3, [sp, #0x30]
  08db8	e58d3004	 str         r3, [sp, #4]

; 370  : 
; 371  :         /* Exit thread when we are asked so... */
; 372  :         if (pPdd->exitIntrThread == TRUE) break;

  08dbc	e59d3020	 ldr         r3, [sp, #0x20]
  08dc0	e2833034	 add         r3, r3, #0x34
  08dc4	e5933000	 ldr         r3, [r3]
  08dc8	e3530001	 cmp         r3, #1
  08dcc	1a000000	 bne         |$LN16@InterruptT|
  08dd0	ea0001dd	 b           |$LN17@InterruptT|
  08dd4		 |$LN16@InterruptT|

; 373  : 
; 374  : #if CPPI_DMA_SUPPORT
; 375  :         /* Handle DMA interrupts */
; 376  :         cppiCompletionCallback(pPdd);

  08dd4	e59d0020	 ldr         r0, [sp, #0x20]
  08dd8	eb000000	 bl          cppiCompletionCallback

; 377  : #endif
; 378  : 
; 379  :         /* Check for the Initial USB RESET Interrupt Condition */
; 380  : 
; 381  :         /* Get interrupt source */
; 382  : 		usbCoreIntrRegVal = pUsbdRegs->CORE_INTMASKEDR;

  08ddc	e59d300c	 ldr         r3, [sp, #0xC]
  08de0	e2833058	 add         r3, r3, #0x58
  08de4	e5933000	 ldr         r3, [r3]
  08de8	e58d3014	 str         r3, [sp, #0x14]

; 383  :         PRINTMSG(/*ZONE_FUNCTION*/ 0, (L"CORE_INTMASKEDR = 0x%x\r\n", usbCoreIntrRegVal));
; 384  : 		pUsbdRegs->CORE_INTCLRR = usbCoreIntrRegVal;

  08dec	e59d300c	 ldr         r3, [sp, #0xC]
  08df0	e2832048	 add         r2, r3, #0x48
  08df4	e59d3014	 ldr         r3, [sp, #0x14]
  08df8	e5823000	 str         r3, [r2]

; 385  : 
; 386  : 		usbEpIntrRegVal = pUsbdRegs->EP_INTMASKEDR;

  08dfc	e59d300c	 ldr         r3, [sp, #0xC]
  08e00	e2833038	 add         r3, r3, #0x38
  08e04	e5933000	 ldr         r3, [r3]
  08e08	e58d3018	 str         r3, [sp, #0x18]

; 387  :         PRINTMSG(/*ZONE_FUNCTION*/ 0, (L"EP_INTMASKEDR = 0x%x\r\n", usbEpIntrRegVal));
; 388  : 		pUsbdRegs->EP_INTCLRR = usbEpIntrRegVal;

  08e0c	e59d300c	 ldr         r3, [sp, #0xC]
  08e10	e2832028	 add         r2, r3, #0x28
  08e14	e59d3018	 ldr         r3, [sp, #0x18]
  08e18	e5823000	 str         r3, [r2]

; 389  : 
; 390  : 		pSysConfRegs->CONTROL_LVL_INTR_CLEAR |= (1 << 4);

  08e1c	e59d301c	 ldr         r3, [sp, #0x1C]
  08e20	e2833fc9	 add         r3, r3, #0xC9, 30
  08e24	e5933000	 ldr         r3, [r3]
  08e28	e3832010	 orr         r2, r3, #0x10
  08e2c	e59d301c	 ldr         r3, [sp, #0x1C]
  08e30	e2833fc9	 add         r3, r3, #0xC9, 30
  08e34	e5832000	 str         r2, [r3]

; 391  : 
; 392  :         intrRxReg = (UINT16)((usbEpIntrRegVal   & USB_OTG_RXINT_MASK)  >> USB_OTG_RXINT_SHIFT);

  08e38	e59d2018	 ldr         r2, [sp, #0x18]
  08e3c	e3a034ff	 mov         r3, #0xFF, 8
  08e40	e38338fe	 orr         r3, r3, #0xFE, 16
  08e44	e0023003	 and         r3, r2, r3
  08e48	e1a03823	 mov         r3, r3, lsr #16
  08e4c	e1a03803	 mov         r3, r3, lsl #16
  08e50	e1a03823	 mov         r3, r3, lsr #16
  08e54	e1cd30b8	 strh        r3, [sp, #8]

; 393  :         intrTxReg = (UINT16)((usbEpIntrRegVal   & USB_OTG_TXINT_MASK)  >> USB_OTG_TXINT_SHIFT);

  08e58	e59d2018	 ldr         r2, [sp, #0x18]
  08e5c	e3a03cff	 mov         r3, #0xFF, 24
  08e60	e38330ff	 orr         r3, r3, #0xFF
  08e64	e0023003	 and         r3, r2, r3
  08e68	e1a03803	 mov         r3, r3, lsl #16
  08e6c	e1a03823	 mov         r3, r3, lsr #16
  08e70	e1cd31b0	 strh        r3, [sp, #0x10]

; 394  :         intrReg   = (UINT16)((usbCoreIntrRegVal & USB_OTG_USBINT_MASK) >> USB_OTG_USBINT_SHIFT);

  08e74	e59d2014	 ldr         r2, [sp, #0x14]
  08e78	e3a0377f	 mov         r3, #0x7F, 14
  08e7c	e3833803	 orr         r3, r3, #3, 16
  08e80	e0023003	 and         r3, r2, r3
  08e84	e1a03823	 mov         r3, r3, lsr #16
  08e88	e1a03803	 mov         r3, r3, lsl #16
  08e8c	e1a03823	 mov         r3, r3, lsr #16
  08e90	e1cd30ba	 strh        r3, [sp, #0xA]

; 395  : 
; 396  :         /* USB Core Interrupt Handling */
; 397  :         if (intrReg != 0)

  08e94	e1dd30ba	 ldrh        r3, [sp, #0xA]
  08e98	e3530000	 cmp         r3, #0
  08e9c	0a0000d4	 beq         |$LN15@InterruptT|

; 398  :         {
; 399  :             HandleUsbCoreInterrupt(pPdd, intrReg);

  08ea0	e1dd10ba	 ldrh        r1, [sp, #0xA]
  08ea4	e59d0020	 ldr         r0, [sp, #0x20]
  08ea8	eb000000	 bl          HandleUsbCoreInterrupt

; 400  : 
; 401  :             /* Check for the RESET State and if so, inform the MDD
; 402  :              * if not done already
; 403  :              */
; 404  :             if ( ( ((intrReg & MGC_M_INTR_RESET)  != 0) ||
; 405  :                    ((intrReg & MGC_M_INTR_RESUME) != 0)) &&
; 406  :                  (pPdd->resetComplete == FALSE))

  08eac	e1dd30ba	 ldrh        r3, [sp, #0xA]
  08eb0	e3130004	 tst         r3, #4
  08eb4	1a000002	 bne         |$LN13@InterruptT|
  08eb8	e1dd30ba	 ldrh        r3, [sp, #0xA]
  08ebc	e3130002	 tst         r3, #2
  08ec0	0a00009a	 beq         |$LN14@InterruptT|
  08ec4		 |$LN13@InterruptT|
  08ec4	e59d3020	 ldr         r3, [sp, #0x20]
  08ec8	e2833038	 add         r3, r3, #0x38
  08ecc	e5933000	 ldr         r3, [r3]
  08ed0	e3530000	 cmp         r3, #0
  08ed4	1a000095	 bne         |$LN14@InterruptT|

; 407  :             {
; 408  :                 pPdd->resetComplete = TRUE;

  08ed8	e59d3020	 ldr         r3, [sp, #0x20]
  08edc	e2832038	 add         r2, r3, #0x38
  08ee0	e3a03001	 mov         r3, #1
  08ee4	e5823000	 str         r3, [r2]

; 409  :                 pPdd->ep[0].epStage = MGC_END0_START;

  08ee8	e59d3020	 ldr         r3, [sp, #0x20]
  08eec	e2832e2a	 add         r2, r3, #0x2A, 28
  08ef0	e3a03001	 mov         r3, #1
  08ef4	e5823000	 str         r3, [r2]

; 410  :                 pPdd->fWaitingForHandshake = FALSE;

  08ef8	e59d3020	 ldr         r3, [sp, #0x20]
  08efc	e2833c06	 add         r3, r3, #6, 24
  08f00	e283204c	 add         r2, r3, #0x4C
  08f04	e3a03000	 mov         r3, #0
  08f08	e5823000	 str         r3, [r2]

; 411  :                 /*
; 412  :                  * OTG may not detect attach/detach events correctly
; 413  :                  * on some platforms. Simulate a attach/detach event
; 414  :                  * to clear any previous state on reset.
; 415  :                  */
; 416  :                 if (pPdd->attachState == UFN_DETACH)

  08f0c	e59d3020	 ldr         r3, [sp, #0x20]
  08f10	e283303c	 add         r3, r3, #0x3C
  08f14	e5933000	 ldr         r3, [r3]
  08f18	e3530000	 cmp         r3, #0
  08f1c	1a000062	 bne         |$LN12@InterruptT|

; 417  :                 {
; 418  :                     PRINTMSG(ZONE_PDD_INIT, (L">>> ATTACH >>>\r\n"));

  08f20	e59f3710	 ldr         r3, [pc, #0x710]
  08f24	e5933440	 ldr         r3, [r3, #0x440]
  08f28	e3130c01	 tst         r3, #1, 24
  08f2c	0a00000f	 beq         |$LN27@InterruptT|
  08f30	e59f3700	 ldr         r3, [pc, #0x700]
  08f34	e5933440	 ldr         r3, [r3, #0x440]
  08f38	e3130801	 tst         r3, #1, 16
  08f3c	0a000004	 beq         |$LN25@InterruptT|
  08f40	e59f0720	 ldr         r0, [pc, #0x720]
  08f44	eb000000	 bl          CeLogMsg
  08f48	e3a03001	 mov         r3, #1
  08f4c	e58d3034	 str         r3, [sp, #0x34]
  08f50	ea000003	 b           |$LN26@InterruptT|
  08f54		 |$LN25@InterruptT|
  08f54	e59f070c	 ldr         r0, [pc, #0x70C]
  08f58	eb000000	 bl          NKDbgPrintfW
  08f5c	e3a03000	 mov         r3, #0
  08f60	e58d3034	 str         r3, [sp, #0x34]
  08f64		 |$LN26@InterruptT|
  08f64	e3a03001	 mov         r3, #1
  08f68	e58d3038	 str         r3, [sp, #0x38]
  08f6c	ea000001	 b           |$LN28@InterruptT|
  08f70		 |$LN27@InterruptT|
  08f70	e3a03000	 mov         r3, #0
  08f74	e58d3038	 str         r3, [sp, #0x38]
  08f78		 |$LN28@InterruptT|

; 419  :                     pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_BUS_EVENTS,
; 420  :                                      UFN_ATTACH);

  08f78	e3a02001	 mov         r2, #1
  08f7c	e3a01001	 mov         r1, #1
  08f80	e59d3020	 ldr         r3, [sp, #0x20]
  08f84	e2833010	 add         r3, r3, #0x10
  08f88	e5930000	 ldr         r0, [r3]
  08f8c	e59d3020	 ldr         r3, [sp, #0x20]
  08f90	e2833014	 add         r3, r3, #0x14
  08f94	e5933000	 ldr         r3, [r3]
  08f98	e1a0e00f	 mov         lr, pc
  08f9c	e12fff13	 bx          r3

; 421  :                     speed = (pUsbdRegs->POWER & CSL_USB_POWER_HSMODE_MASK) ? BS_HIGH_SPEED : BS_FULL_SPEED;

  08fa0	e59d300c	 ldr         r3, [sp, #0xC]
  08fa4	e2833b01	 add         r3, r3, #1, 22
  08fa8	e2833001	 add         r3, r3, #1
  08fac	e5d33000	 ldrb        r3, [r3]
  08fb0	e3130010	 tst         r3, #0x10
  08fb4	0a000002	 beq         |$LN29@InterruptT|
  08fb8	e3a03002	 mov         r3, #2
  08fbc	e58d303c	 str         r3, [sp, #0x3C]
  08fc0	ea000001	 b           |$LN30@InterruptT|
  08fc4		 |$LN29@InterruptT|
  08fc4	e3a03001	 mov         r3, #1
  08fc8	e58d303c	 str         r3, [sp, #0x3C]
  08fcc		 |$LN30@InterruptT|
  08fcc	e59d303c	 ldr         r3, [sp, #0x3C]
  08fd0	e58d3000	 str         r3, [sp]

; 422  :                     PRINTMSG(ZONE_PDD_INIT, (L"Bus Speed: %s\r\n",
; 423  :                                              speed == BS_HIGH_SPEED ? L"HIGH" : L"FULL"));

  08fd4	e59f365c	 ldr         r3, [pc, #0x65C]
  08fd8	e5933440	 ldr         r3, [r3, #0x440]
  08fdc	e3130c01	 tst         r3, #1, 24
  08fe0	0a000021	 beq         |$LN37@InterruptT|
  08fe4	e59f364c	 ldr         r3, [pc, #0x64C]
  08fe8	e5933440	 ldr         r3, [r3, #0x440]
  08fec	e3130801	 tst         r3, #1, 16
  08ff0	0a00000d	 beq         |$LN35@InterruptT|
  08ff4	e59d3000	 ldr         r3, [sp]
  08ff8	e3530002	 cmp         r3, #2
  08ffc	1a000002	 bne         |$LN31@InterruptT|
  09000	e59f365c	 ldr         r3, [pc, #0x65C]
  09004	e58d3040	 str         r3, [sp, #0x40]
  09008	ea000001	 b           |$LN32@InterruptT|
  0900c		 |$LN31@InterruptT|
  0900c	e59f364c	 ldr         r3, [pc, #0x64C]
  09010	e58d3040	 str         r3, [sp, #0x40]
  09014		 |$LN32@InterruptT|
  09014	e59d1040	 ldr         r1, [sp, #0x40]
  09018	e59f063c	 ldr         r0, [pc, #0x63C]
  0901c	eb000000	 bl          CeLogMsg
  09020	e3a03001	 mov         r3, #1
  09024	e58d3044	 str         r3, [sp, #0x44]
  09028	ea00000c	 b           |$LN36@InterruptT|
  0902c		 |$LN35@InterruptT|
  0902c	e59d3000	 ldr         r3, [sp]
  09030	e3530002	 cmp         r3, #2
  09034	1a000002	 bne         |$LN33@InterruptT|
  09038	e59f3624	 ldr         r3, [pc, #0x624]
  0903c	e58d3048	 str         r3, [sp, #0x48]
  09040	ea000001	 b           |$LN34@InterruptT|
  09044		 |$LN33@InterruptT|
  09044	e59f3614	 ldr         r3, [pc, #0x614]
  09048	e58d3048	 str         r3, [sp, #0x48]
  0904c		 |$LN34@InterruptT|
  0904c	e59d1048	 ldr         r1, [sp, #0x48]
  09050	e59f0604	 ldr         r0, [pc, #0x604]
  09054	eb000000	 bl          NKDbgPrintfW
  09058	e3a03000	 mov         r3, #0
  0905c	e58d3044	 str         r3, [sp, #0x44]
  09060		 |$LN36@InterruptT|
  09060	e3a03001	 mov         r3, #1
  09064	e58d304c	 str         r3, [sp, #0x4C]
  09068	ea000001	 b           |$LN38@InterruptT|
  0906c		 |$LN37@InterruptT|
  0906c	e3a03000	 mov         r3, #0
  09070	e58d304c	 str         r3, [sp, #0x4C]
  09074		 |$LN38@InterruptT|

; 424  :                     pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_BUS_SPEED, speed);

  09074	e59d2000	 ldr         r2, [sp]
  09078	e3a01003	 mov         r1, #3
  0907c	e59d3020	 ldr         r3, [sp, #0x20]
  09080	e2833010	 add         r3, r3, #0x10
  09084	e5930000	 ldr         r0, [r3]
  09088	e59d3020	 ldr         r3, [sp, #0x20]
  0908c	e2833014	 add         r3, r3, #0x14
  09090	e5933000	 ldr         r3, [r3]
  09094	e1a0e00f	 mov         lr, pc
  09098	e12fff13	 bx          r3

; 425  :                     pPdd->attachState = UFN_ATTACH;

  0909c	e59d3020	 ldr         r3, [sp, #0x20]
  090a0	e283203c	 add         r2, r3, #0x3C
  090a4	e3a03001	 mov         r3, #1
  090a8	e5823000	 str         r3, [r2]
  090ac		 |$LN12@InterruptT|

; 426  :                 }
; 427  :                 /* Tell MDD about reset... */
; 428  :                 pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_BUS_EVENTS,
; 429  :                                  UFN_RESET);

  090ac	e3a02002	 mov         r2, #2
  090b0	e3a01001	 mov         r1, #1
  090b4	e59d3020	 ldr         r3, [sp, #0x20]
  090b8	e2833010	 add         r3, r3, #0x10
  090bc	e5930000	 ldr         r0, [r3]
  090c0	e59d3020	 ldr         r3, [sp, #0x20]
  090c4	e2833014	 add         r3, r3, #0x14
  090c8	e5933000	 ldr         r3, [r3]
  090cc	e1a0e00f	 mov         lr, pc
  090d0	e12fff13	 bx          r3

; 430  :                 PRINTMSG(ZONE_PDD_INIT, (L">>> RESET 0 >>>\r\n"));

  090d4	e59f355c	 ldr         r3, [pc, #0x55C]
  090d8	e5933440	 ldr         r3, [r3, #0x440]
  090dc	e3130c01	 tst         r3, #1, 24
  090e0	0a00000f	 beq         |$LN41@InterruptT|
  090e4	e59f354c	 ldr         r3, [pc, #0x54C]
  090e8	e5933440	 ldr         r3, [r3, #0x440]
  090ec	e3130801	 tst         r3, #1, 16
  090f0	0a000004	 beq         |$LN39@InterruptT|
  090f4	e59f055c	 ldr         r0, [pc, #0x55C]
  090f8	eb000000	 bl          CeLogMsg
  090fc	e3a03001	 mov         r3, #1
  09100	e58d3050	 str         r3, [sp, #0x50]
  09104	ea000003	 b           |$LN40@InterruptT|
  09108		 |$LN39@InterruptT|
  09108	e59f0548	 ldr         r0, [pc, #0x548]
  0910c	eb000000	 bl          NKDbgPrintfW
  09110	e3a03000	 mov         r3, #0
  09114	e58d3050	 str         r3, [sp, #0x50]
  09118		 |$LN40@InterruptT|
  09118	e3a03001	 mov         r3, #1
  0911c	e58d3054	 str         r3, [sp, #0x54]
  09120	ea000001	 b           |$LN42@InterruptT|
  09124		 |$LN41@InterruptT|
  09124	e3a03000	 mov         r3, #0
  09128	e58d3054	 str         r3, [sp, #0x54]
  0912c		 |$LN42@InterruptT|

; 431  :             }
; 432  :             else if ( ((intrReg & MGC_M_INTR_RESET) != 0) &&

  0912c	ea000030	 b           |$LN11@InterruptT|
  09130		 |$LN14@InterruptT|

; 433  :                       (pPdd->resetComplete == TRUE))

  09130	e1dd30ba	 ldrh        r3, [sp, #0xA]
  09134	e3130004	 tst         r3, #4
  09138	0a00002d	 beq         |$LN10@InterruptT|
  0913c	e59d3020	 ldr         r3, [sp, #0x20]
  09140	e2833038	 add         r3, r3, #0x38
  09144	e5933000	 ldr         r3, [r3]
  09148	e3530001	 cmp         r3, #1
  0914c	1a000028	 bne         |$LN10@InterruptT|

; 434  :             {
; 435  :                 pPdd->ep[0].epStage = MGC_END0_START;

  09150	e59d3020	 ldr         r3, [sp, #0x20]
  09154	e2832e2a	 add         r2, r3, #0x2A, 28
  09158	e3a03001	 mov         r3, #1
  0915c	e5823000	 str         r3, [r2]

; 436  :                 pPdd->fWaitingForHandshake = FALSE;

  09160	e59d3020	 ldr         r3, [sp, #0x20]
  09164	e2833c06	 add         r3, r3, #6, 24
  09168	e283204c	 add         r2, r3, #0x4C
  0916c	e3a03000	 mov         r3, #0
  09170	e5823000	 str         r3, [r2]

; 437  :                 /* Tell MDD about reset... */
; 438  :                 pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_BUS_EVENTS,
; 439  :                                  UFN_RESET);

  09174	e3a02002	 mov         r2, #2
  09178	e3a01001	 mov         r1, #1
  0917c	e59d3020	 ldr         r3, [sp, #0x20]
  09180	e2833010	 add         r3, r3, #0x10
  09184	e5930000	 ldr         r0, [r3]
  09188	e59d3020	 ldr         r3, [sp, #0x20]
  0918c	e2833014	 add         r3, r3, #0x14
  09190	e5933000	 ldr         r3, [r3]
  09194	e1a0e00f	 mov         lr, pc
  09198	e12fff13	 bx          r3

; 440  :                 PRINTMSG(ZONE_PDD_INIT, (L">>> RESET 1 >>>\r\n"));

  0919c	e59f3494	 ldr         r3, [pc, #0x494]
  091a0	e5933440	 ldr         r3, [r3, #0x440]
  091a4	e3130c01	 tst         r3, #1, 24
  091a8	0a00000f	 beq         |$LN45@InterruptT|
  091ac	e59f3484	 ldr         r3, [pc, #0x484]
  091b0	e5933440	 ldr         r3, [r3, #0x440]
  091b4	e3130801	 tst         r3, #1, 16
  091b8	0a000004	 beq         |$LN43@InterruptT|
  091bc	e59f0490	 ldr         r0, [pc, #0x490]
  091c0	eb000000	 bl          CeLogMsg
  091c4	e3a03001	 mov         r3, #1
  091c8	e58d3058	 str         r3, [sp, #0x58]
  091cc	ea000003	 b           |$LN44@InterruptT|
  091d0		 |$LN43@InterruptT|
  091d0	e59f047c	 ldr         r0, [pc, #0x47C]
  091d4	eb000000	 bl          NKDbgPrintfW
  091d8	e3a03000	 mov         r3, #0
  091dc	e58d3058	 str         r3, [sp, #0x58]
  091e0		 |$LN44@InterruptT|
  091e0	e3a03001	 mov         r3, #1
  091e4	e58d305c	 str         r3, [sp, #0x5C]
  091e8	ea000001	 b           |$LN46@InterruptT|
  091ec		 |$LN45@InterruptT|
  091ec	e3a03000	 mov         r3, #0
  091f0	e58d305c	 str         r3, [sp, #0x5C]
  091f4		 |$LN46@InterruptT|
  091f4		 |$LN10@InterruptT|
  091f4		 |$LN11@InterruptT|
  091f4		 |$LN15@InterruptT|

; 441  :             }
; 442  :         }
; 443  : 
; 444  :         /* EP interrupt handling.  This needs to be done before EP0 interrupt handling
; 445  :            to prevent what looks like an RNDIS race condition.  Some EP 0 RNDIS encapsulated
; 446  :            commands require a TX on EP 1.  While the EP 1 TX is being processed another EP 0
; 447  :            setup can be received and processed but the EP 1 TX must complete before the new
; 448  :            setup command.  Processing EP 1 interrupts before EP 0 interrupts seems to be
; 449  :            enough to ensure this without adding special case code. */
; 450  :         if ((intrTxReg & ~BIT0) || intrRxReg)

  091f4	e1dd31b0	 ldrh        r3, [sp, #0x10]
  091f8	e1a02003	 mov         r2, r3
  091fc	e3e03001	 mvn         r3, #1
  09200	e1120003	 tst         r2, r3
  09204	1a000002	 bne         |$LN8@InterruptT|
  09208	e1dd30b8	 ldrh        r3, [sp, #8]
  0920c	e3530000	 cmp         r3, #0
  09210	0a00002c	 beq         |$LN9@InterruptT|
  09214		 |$LN8@InterruptT|

; 451  :         {
; 452  :             PRINTMSG(ZONE_PDD_RX|ZONE_PDD_TX, (L"InterruptThread: TX 0x%04x, RX 0x%04x\r\n", intrTxReg & ~BIT0, intrRxReg));

  09214	e59f341c	 ldr         r3, [pc, #0x41C]
  09218	e5933440	 ldr         r3, [r3, #0x440]
  0921c	e2032b01	 and         r2, r3, #1, 22
  09220	e59f3410	 ldr         r3, [pc, #0x410]
  09224	e5933440	 ldr         r3, [r3, #0x440]
  09228	e2033b02	 and         r3, r3, #2, 22
  0922c	e1923003	 orrs        r3, r2, r3
  09230	0a000019	 beq         |$LN49@InterruptT|
  09234	e59f33fc	 ldr         r3, [pc, #0x3FC]
  09238	e5933440	 ldr         r3, [r3, #0x440]
  0923c	e3130801	 tst         r3, #1, 16
  09240	0a000009	 beq         |$LN47@InterruptT|
  09244	e1dd20b8	 ldrh        r2, [sp, #8]
  09248	e1dd31b0	 ldrh        r3, [sp, #0x10]
  0924c	e1a01003	 mov         r1, r3
  09250	e3e03001	 mvn         r3, #1
  09254	e0011003	 and         r1, r1, r3
  09258	e59f03f0	 ldr         r0, [pc, #0x3F0]
  0925c	eb000000	 bl          CeLogMsg
  09260	e3a03001	 mov         r3, #1
  09264	e58d3060	 str         r3, [sp, #0x60]
  09268	ea000008	 b           |$LN48@InterruptT|
  0926c		 |$LN47@InterruptT|
  0926c	e1dd20b8	 ldrh        r2, [sp, #8]
  09270	e1dd31b0	 ldrh        r3, [sp, #0x10]
  09274	e1a01003	 mov         r1, r3
  09278	e3e03001	 mvn         r3, #1
  0927c	e0011003	 and         r1, r1, r3
  09280	e59f03c8	 ldr         r0, [pc, #0x3C8]
  09284	eb000000	 bl          NKDbgPrintfW
  09288	e3a03000	 mov         r3, #0
  0928c	e58d3060	 str         r3, [sp, #0x60]
  09290		 |$LN48@InterruptT|
  09290	e3a03001	 mov         r3, #1
  09294	e58d3064	 str         r3, [sp, #0x64]
  09298	ea000001	 b           |$LN50@InterruptT|
  0929c		 |$LN49@InterruptT|
  0929c	e3a03000	 mov         r3, #0
  092a0	e58d3064	 str         r3, [sp, #0x64]
  092a4		 |$LN50@InterruptT|

; 453  :             UsbPddTxRxIntrHandler(pPdd, intrTxReg & ~BIT0, intrRxReg);

  092a4	e1dd20b8	 ldrh        r2, [sp, #8]
  092a8	e1dd31b0	 ldrh        r3, [sp, #0x10]
  092ac	e1a01003	 mov         r1, r3
  092b0	e3e03001	 mvn         r3, #1
  092b4	e0013003	 and         r3, r1, r3
  092b8	e1a01803	 mov         r1, r3, lsl #16
  092bc	e1a01821	 mov         r1, r1, lsr #16
  092c0	e59d0020	 ldr         r0, [sp, #0x20]
  092c4	eb000000	 bl          UsbPddTxRxIntrHandler
  092c8		 |$LN9@InterruptT|

; 454  :         }
; 455  : 
; 456  :         /* Check for EP0 Interrupts */
; 457  :         if ((intrTxReg & BIT0) != 0)

  092c8	e1dd31b0	 ldrh        r3, [sp, #0x10]
  092cc	e3130001	 tst         r3, #1
  092d0	0a000033	 beq         |$LN7@InterruptT|

; 458  :         {
; 459  :             /* Do not process EP0 interrupts when a setup request is queued - do not
; 460  :                want to receive another setup just yet. */
; 461  :             if (pPdd->fHasQueuedSetupRequest)

  092d4	e59d3020	 ldr         r3, [sp, #0x20]
  092d8	e2833e65	 add         r3, r3, #0x65, 28
  092dc	e5933000	 ldr         r3, [r3]
  092e0	e3530000	 cmp         r3, #0
  092e4	0a000016	 beq         |$LN6@InterruptT|

; 462  :             {
; 463  :                 PRINTMSG(ZONE_PDD_EP0, (L"InterruptThread: EP 0 interrupt - ignored, waiting for handshake\r\n"));

  092e8	e59f3348	 ldr         r3, [pc, #0x348]
  092ec	e5933440	 ldr         r3, [r3, #0x440]
  092f0	e3130c02	 tst         r3, #2, 24
  092f4	0a00000f	 beq         |$LN53@InterruptT|
  092f8	e59f3338	 ldr         r3, [pc, #0x338]
  092fc	e5933440	 ldr         r3, [r3, #0x440]
  09300	e3130801	 tst         r3, #1, 16
  09304	0a000004	 beq         |$LN51@InterruptT|
  09308	e59f033c	 ldr         r0, [pc, #0x33C]
  0930c	eb000000	 bl          CeLogMsg
  09310	e3a03001	 mov         r3, #1
  09314	e58d3068	 str         r3, [sp, #0x68]
  09318	ea000003	 b           |$LN52@InterruptT|
  0931c		 |$LN51@InterruptT|
  0931c	e59f0328	 ldr         r0, [pc, #0x328]
  09320	eb000000	 bl          NKDbgPrintfW
  09324	e3a03000	 mov         r3, #0
  09328	e58d3068	 str         r3, [sp, #0x68]
  0932c		 |$LN52@InterruptT|
  0932c	e3a03001	 mov         r3, #1
  09330	e58d306c	 str         r3, [sp, #0x6C]
  09334	ea000001	 b           |$LN54@InterruptT|
  09338		 |$LN53@InterruptT|
  09338	e3a03000	 mov         r3, #0
  0933c	e58d306c	 str         r3, [sp, #0x6C]
  09340		 |$LN54@InterruptT|

; 464  :             }
; 465  :             else

  09340	ea000017	 b           |$LN5@InterruptT|
  09344		 |$LN6@InterruptT|

; 466  :             {
; 467  :                 PRINTMSG(ZONE_PDD_EP0, (L"InterruptThread: EP 0 interrupt\r\n"));

  09344	e59f32ec	 ldr         r3, [pc, #0x2EC]
  09348	e5933440	 ldr         r3, [r3, #0x440]
  0934c	e3130c02	 tst         r3, #2, 24
  09350	0a00000f	 beq         |$LN57@InterruptT|
  09354	e59f32dc	 ldr         r3, [pc, #0x2DC]
  09358	e5933440	 ldr         r3, [r3, #0x440]
  0935c	e3130801	 tst         r3, #1, 16
  09360	0a000004	 beq         |$LN55@InterruptT|
  09364	e59f02dc	 ldr         r0, [pc, #0x2DC]
  09368	eb000000	 bl          CeLogMsg
  0936c	e3a03001	 mov         r3, #1
  09370	e58d3070	 str         r3, [sp, #0x70]
  09374	ea000003	 b           |$LN56@InterruptT|
  09378		 |$LN55@InterruptT|
  09378	e59f02c8	 ldr         r0, [pc, #0x2C8]
  0937c	eb000000	 bl          NKDbgPrintfW
  09380	e3a03000	 mov         r3, #0
  09384	e58d3070	 str         r3, [sp, #0x70]
  09388		 |$LN56@InterruptT|
  09388	e3a03001	 mov         r3, #1
  0938c	e58d3074	 str         r3, [sp, #0x74]
  09390	ea000001	 b           |$LN58@InterruptT|
  09394		 |$LN57@InterruptT|
  09394	e3a03000	 mov         r3, #0
  09398	e58d3074	 str         r3, [sp, #0x74]
  0939c		 |$LN58@InterruptT|

; 468  :                 UsbPddEp0IntrHandler(pPdd);

  0939c	e59d0020	 ldr         r0, [sp, #0x20]
  093a0	eb000000	 bl          UsbPddEp0IntrHandler
  093a4		 |$LN5@InterruptT|
  093a4		 |$LN7@InterruptT|

; 469  :             }
; 470  :         }
; 471  : 
; 472  :         /* As per the Mentor Graphics Documentation, USB Core
; 473  :          * Interrupts like SOF, Disconnect and SUSPEND needs to
; 474  :          * be addressed only after EndPoint Interrupt Processing
; 475  :          */
; 476  :         if ((intrReg & MGC_M_INTR_SOF) != 0)
; 477  :         {
; 478  :             RETAILMSG(0, (L">>> SOF\r\n"));
; 479  :             /* Enable the Transmission if any are pending from our side */
; 480  :         }
; 481  :         if ((intrReg & MGC_M_INTR_DISCONNECT) != 0)

  093a4	e1dd30ba	 ldrh        r3, [sp, #0xA]
  093a8	e3130020	 tst         r3, #0x20
  093ac	0a000042	 beq         |$LN3@InterruptT|

; 482  :         {
; 483  :             PRINTMSG(ZONE_PDD_INIT, (L">>> DISCONNECT\r\n"));

  093b0	e59f3280	 ldr         r3, [pc, #0x280]
  093b4	e5933440	 ldr         r3, [r3, #0x440]
  093b8	e3130c01	 tst         r3, #1, 24
  093bc	0a00000f	 beq         |$LN61@InterruptT|
  093c0	e59f3270	 ldr         r3, [pc, #0x270]
  093c4	e5933440	 ldr         r3, [r3, #0x440]
  093c8	e3130801	 tst         r3, #1, 16
  093cc	0a000004	 beq         |$LN59@InterruptT|
  093d0	e59f026c	 ldr         r0, [pc, #0x26C]
  093d4	eb000000	 bl          CeLogMsg
  093d8	e3a03001	 mov         r3, #1
  093dc	e58d3078	 str         r3, [sp, #0x78]
  093e0	ea000003	 b           |$LN60@InterruptT|
  093e4		 |$LN59@InterruptT|
  093e4	e59f0258	 ldr         r0, [pc, #0x258]
  093e8	eb000000	 bl          NKDbgPrintfW
  093ec	e3a03000	 mov         r3, #0
  093f0	e58d3078	 str         r3, [sp, #0x78]
  093f4		 |$LN60@InterruptT|
  093f4	e3a03001	 mov         r3, #1
  093f8	e58d307c	 str         r3, [sp, #0x7C]
  093fc	ea000001	 b           |$LN62@InterruptT|
  09400		 |$LN61@InterruptT|
  09400	e3a03000	 mov         r3, #0
  09404	e58d307c	 str         r3, [sp, #0x7C]
  09408		 |$LN62@InterruptT|

; 484  : 
; 485  :             if (pPdd->attachState == UFN_ATTACH)

  09408	e59d3020	 ldr         r3, [sp, #0x20]
  0940c	e283303c	 add         r3, r3, #0x3C
  09410	e5933000	 ldr         r3, [r3]
  09414	e3530001	 cmp         r3, #1
  09418	1a000027	 bne         |$LN2@InterruptT|

; 486  :             {
; 487  :                 pPdd->pfnNotify (pPdd->pMddContext, UFN_MSG_BUS_EVENTS,
; 488  :                                  UFN_DETACH);

  0941c	e3a02000	 mov         r2, #0
  09420	e3a01001	 mov         r1, #1
  09424	e59d3020	 ldr         r3, [sp, #0x20]
  09428	e2833010	 add         r3, r3, #0x10
  0942c	e5930000	 ldr         r0, [r3]
  09430	e59d3020	 ldr         r3, [sp, #0x20]
  09434	e2833014	 add         r3, r3, #0x14
  09438	e5933000	 ldr         r3, [r3]
  0943c	e1a0e00f	 mov         lr, pc
  09440	e12fff13	 bx          r3

; 489  :                 pPdd->attachState = UFN_DETACH;

  09444	e59d3020	 ldr         r3, [sp, #0x20]
  09448	e283203c	 add         r2, r3, #0x3C
  0944c	e3a03000	 mov         r3, #0
  09450	e5823000	 str         r3, [r2]

; 490  :                 pPdd->resetComplete = FALSE;

  09454	e59d3020	 ldr         r3, [sp, #0x20]
  09458	e2832038	 add         r2, r3, #0x38
  0945c	e3a03000	 mov         r3, #0
  09460	e5823000	 str         r3, [r2]

; 491  :                 PRINTMSG(ZONE_PDD_INIT, (L">>> DETACH >>>\r\n"));

  09464	e59f31cc	 ldr         r3, [pc, #0x1CC]
  09468	e5933440	 ldr         r3, [r3, #0x440]
  0946c	e3130c01	 tst         r3, #1, 24
  09470	0a00000f	 beq         |$LN65@InterruptT|
  09474	e59f31bc	 ldr         r3, [pc, #0x1BC]
  09478	e5933440	 ldr         r3, [r3, #0x440]
  0947c	e3130801	 tst         r3, #1, 16
  09480	0a000004	 beq         |$LN63@InterruptT|
  09484	e59f01b4	 ldr         r0, [pc, #0x1B4]
  09488	eb000000	 bl          CeLogMsg
  0948c	e3a03001	 mov         r3, #1
  09490	e58d3080	 str         r3, [sp, #0x80]
  09494	ea000003	 b           |$LN64@InterruptT|
  09498		 |$LN63@InterruptT|
  09498	e59f01a0	 ldr         r0, [pc, #0x1A0]
  0949c	eb000000	 bl          NKDbgPrintfW
  094a0	e3a03000	 mov         r3, #0
  094a4	e58d3080	 str         r3, [sp, #0x80]
  094a8		 |$LN64@InterruptT|
  094a8	e3a03001	 mov         r3, #1
  094ac	e58d3084	 str         r3, [sp, #0x84]
  094b0	ea000001	 b           |$LN66@InterruptT|
  094b4		 |$LN65@InterruptT|
  094b4	e3a03000	 mov         r3, #0
  094b8	e58d3084	 str         r3, [sp, #0x84]
  094bc		 |$LN66@InterruptT|
  094bc		 |$LN2@InterruptT|
  094bc		 |$LN3@InterruptT|

; 492  :             }
; 493  :         }
; 494  :         if (intrReg & MGC_M_INTR_SUSPEND)

  094bc	e1dd30ba	 ldrh        r3, [sp, #0xA]
  094c0	e3130001	 tst         r3, #1
  094c4	0a000017	 beq         |$LN1@InterruptT|

; 495  :         {
; 496  :             PRINTMSG(ZONE_PDD_INIT, (L">>> SUSPEND\r\n"));

  094c8	e59f3168	 ldr         r3, [pc, #0x168]
  094cc	e5933440	 ldr         r3, [r3, #0x440]
  094d0	e3130c01	 tst         r3, #1, 24
  094d4	0a00000f	 beq         |$LN69@InterruptT|
  094d8	e59f3158	 ldr         r3, [pc, #0x158]
  094dc	e5933440	 ldr         r3, [r3, #0x440]
  094e0	e3130801	 tst         r3, #1, 16
  094e4	0a000004	 beq         |$LN67@InterruptT|
  094e8	e59f014c	 ldr         r0, [pc, #0x14C]
  094ec	eb000000	 bl          CeLogMsg
  094f0	e3a03001	 mov         r3, #1
  094f4	e58d3088	 str         r3, [sp, #0x88]
  094f8	ea000003	 b           |$LN68@InterruptT|
  094fc		 |$LN67@InterruptT|
  094fc	e59f0138	 ldr         r0, [pc, #0x138]
  09500	eb000000	 bl          NKDbgPrintfW
  09504	e3a03000	 mov         r3, #0
  09508	e58d3088	 str         r3, [sp, #0x88]
  0950c		 |$LN68@InterruptT|
  0950c	e3a03001	 mov         r3, #1
  09510	e58d308c	 str         r3, [sp, #0x8C]
  09514	ea000001	 b           |$LN70@InterruptT|
  09518		 |$LN69@InterruptT|
  09518	e3a03000	 mov         r3, #0
  0951c	e58d308c	 str         r3, [sp, #0x8C]
  09520		 |$LN70@InterruptT|

; 497  :             
; 498  :             // Seem to need a delay when resuming in order for class driver 
; 499  :             // to successfully re-establish connection.
; 500  :             Sleep(500);

  09520	e3a00f7d	 mov         r0, #0x7D, 30
  09524	eb000000	 bl          Sleep
  09528		 |$LN1@InterruptT|

; 501  :         }
; 502  : 
; 503  :         /* NOTE:  The irq stays asserted until EOI is written */
; 504  :         pUsbdRegs->EOIR =  0x00;

  09528	e59d300c	 ldr         r3, [sp, #0xC]
  0952c	e2832060	 add         r2, r3, #0x60
  09530	e3a03000	 mov         r3, #0
  09534	e5823000	 str         r3, [r2]

; 505  :         InterruptDone (pPdd->sysIntr);

  09538	e59d3020	 ldr         r3, [sp, #0x20]
  0953c	e283302c	 add         r3, r3, #0x2C
  09540	e5930000	 ldr         r0, [r3]
  09544	eb000000	 bl          InterruptDone

; 506  :     }

  09548	eafffdf8	 b           |$LN18@InterruptT|
  0954c		 |$LN17@InterruptT|

; 507  : 
; 508  :     /* Disable interrupts */
; 509  : 	pUsbdRegs->CORE_INTMSKCLRR = USB_CORE_INTR_MASK_ALL;

  0954c	e59d300c	 ldr         r3, [sp, #0xC]
  09550	e2832054	 add         r2, r3, #0x54
  09554	e3e034fe	 mvn         r3, #0xFE, 8
  09558	e5823000	 str         r3, [r2]

; 510  : 	pUsbdRegs->EP_INTMSKCLRR = USB_EP_INTR_MASK_ALL;

  0955c	e59d300c	 ldr         r3, [sp, #0xC]
  09560	e2832034	 add         r2, r3, #0x34
  09564	e3e03801	 mvn         r3, #1, 16
  09568	e5823000	 str         r3, [r2]

; 511  :     pUsbdRegs->EOIR = 0x00;

  0956c	e59d300c	 ldr         r3, [sp, #0xC]
  09570	e2832060	 add         r2, r3, #0x60
  09574	e3a03000	 mov         r3, #0
  09578	e5823000	 str         r3, [r2]

; 512  : 
; 513  :     /* Send detach */
; 514  :     pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_DETACH);

  0957c	e3a02000	 mov         r2, #0
  09580	e3a01001	 mov         r1, #1
  09584	e59d3020	 ldr         r3, [sp, #0x20]
  09588	e2833010	 add         r3, r3, #0x10
  0958c	e5930000	 ldr         r0, [r3]
  09590	e59d3020	 ldr         r3, [sp, #0x20]
  09594	e2833014	 add         r3, r3, #0x14
  09598	e5933000	 ldr         r3, [r3]
  0959c	e1a0e00f	 mov         lr, pc
  095a0	e12fff13	 bx          r3

; 515  :     pPdd->attachState = UFN_DETACH;

  095a4	e59d3020	 ldr         r3, [sp, #0x20]
  095a8	e283203c	 add         r2, r3, #0x3C
  095ac	e3a03000	 mov         r3, #0
  095b0	e5823000	 str         r3, [r2]

; 516  :     pPdd->resetComplete = FALSE;

  095b4	e59d3020	 ldr         r3, [sp, #0x20]
  095b8	e2832038	 add         r2, r3, #0x38
  095bc	e3a03000	 mov         r3, #0
  095c0	e5823000	 str         r3, [r2]

; 517  : 
; 518  :     PRINTMSG(ZONE_FUNCTION, (L"-InterruptThread\r\n"));

  095c4	e59f306c	 ldr         r3, [pc, #0x6C]
  095c8	e5933440	 ldr         r3, [r3, #0x440]
  095cc	e3130a01	 tst         r3, #1, 20
  095d0	0a00000f	 beq         |$LN73@InterruptT|
  095d4	e59f305c	 ldr         r3, [pc, #0x5C]
  095d8	e5933440	 ldr         r3, [r3, #0x440]
  095dc	e3130801	 tst         r3, #1, 16
  095e0	0a000004	 beq         |$LN71@InterruptT|
  095e4	e59f0048	 ldr         r0, [pc, #0x48]
  095e8	eb000000	 bl          CeLogMsg
  095ec	e3a03001	 mov         r3, #1
  095f0	e58d3090	 str         r3, [sp, #0x90]
  095f4	ea000003	 b           |$LN72@InterruptT|
  095f8		 |$LN71@InterruptT|
  095f8	e59f0034	 ldr         r0, [pc, #0x34]
  095fc	eb000000	 bl          NKDbgPrintfW
  09600	e3a03000	 mov         r3, #0
  09604	e58d3090	 str         r3, [sp, #0x90]
  09608		 |$LN72@InterruptT|
  09608	e3a03001	 mov         r3, #1
  0960c	e58d3094	 str         r3, [sp, #0x94]
  09610	ea000001	 b           |$LN74@InterruptT|
  09614		 |$LN73@InterruptT|
  09614	e3a03000	 mov         r3, #0
  09618	e58d3094	 str         r3, [sp, #0x94]
  0961c		 |$LN74@InterruptT|

; 519  : 
; 520  :     return ERROR_SUCCESS;

  0961c	e3a03000	 mov         r3, #0
  09620	e58d3024	 str         r3, [sp, #0x24]

; 521  : }

  09624	e59d0024	 ldr         r0, [sp, #0x24]
  09628	e28dd098	 add         sp, sp, #0x98
  0962c	e89d6000	 ldmia       sp, {sp, lr}
  09630	e12fff1e	 bx          lr
  09634		 |$LN78@InterruptT|
  09634		 |$LN79@InterruptT|
  09634	00000000	 DCD         |??_C@_1CG@MLHDCFCM@?$AA?9?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  09638		 |$LN80@InterruptT|
  09638	00000000	 DCD         |dpCurSettings|
  0963c		 |$LN81@InterruptT|
  0963c	00000000	 DCD         |??_C@_1BM@OEIAAOFN@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  09640		 |$LN82@InterruptT|
  09640	00000000	 DCD         |??_C@_1CC@CIEHDLFP@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@|
  09644		 |$LN83@InterruptT|
  09644	00000000	 DCD         |??_C@_1CC@CDDBIMJE@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAD?$AAI?$AAS?$AAC?$AAO?$AAN?$AAN?$AAE?$AAC?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  09648		 |$LN84@InterruptT|
  09648	00000000	 DCD         |??_C@_1EE@HDKNFPMC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN@|
  0964c		 |$LN85@InterruptT|
  0964c	00000000	 DCD         |??_C@_1IG@FEBAKMFE@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@|
  09650		 |$LN86@InterruptT|
  09650	00000000	 DCD         |??_C@_1FA@CLKNPBLL@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAx?$AA?0?$AA?5?$AAR?$AAX?$AA?5?$AA0@|
  09654		 |$LN87@InterruptT|
  09654	00000000	 DCD         |??_C@_1CE@JCPGNCFK@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AA1?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@|
  09658		 |$LN88@InterruptT|
  09658	00000000	 DCD         |??_C@_1CE@DMJOEDML@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AA0?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@|
  0965c		 |$LN89@InterruptT|
  0965c	00000000	 DCD         |??_C@_1CA@BLMPDEPI@?$AAB?$AAu?$AAs?$AA?5?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  09660		 |$LN90@InterruptT|
  09660	00000000	 DCD         |??_C@_19DLEPDAFO@?$AAF?$AAU?$AAL?$AAL?$AA?$AA@|
  09664		 |$LN91@InterruptT|
  09664	00000000	 DCD         |??_C@_19OLDHEDBN@?$AAH?$AAI?$AAG?$AAH?$AA?$AA@|
  09668		 |$LN92@InterruptT|
  09668	00000000	 DCD         |??_C@_1CC@BLIABBAM@?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AA?$AN?$AA?6?$AA?$AA@|
  0966c		 |$LN93@InterruptT|
  0966c	00000000	 DCD         |??_C@_1CG@FAKDCFOC@?$AA?$CL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  09670		 |$M50624|

			 ENDP  ; |InterruptThread|

	EXPORT	|??_C@_1DE@DEEMMONE@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@ICOEPDCD@?$AAH?$AAS?$AA?5?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@EPCDBDOB@?$AAH?$AAS?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@KADAJJLO@?$AAF?$AAS?$AA?5?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@OFKEENEB@?$AAF?$AAS?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@PIPODPPO@?$AAF?$AAu?$AAl?$AAl?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?5?$AAN?$AAu?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@BLOEHPDP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|GetTotalAltSettingCount|
	EXPORT	|??_C@_1DG@NBJKHGBI@?$AA?$CL?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_RegisterDevice|

  00150			 AREA	 |.pdata|, PDATA
|$T50680| DCD	|$LN60@UfnPdd_Reg|
	DCD	0x40024504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@DEEMMONE@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, ":", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@ICOEPDCD@?$AAH?$AAS?$AA?5?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF@| DCB "H"
	DCB	0x0, "S", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "_", 0x0, "N"
	DCB	0x0, "U", 0x0, "M", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "M"
	DCB	0x0, "a", 0x0, "x", 0x0, "P", 0x0, "k", 0x0, "t", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@EPCDBDOB@?$AAH?$AAS?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?3@| DCB "H"
	DCB	0x0, "S", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "U", 0x0, "N"
	DCB	0x0, "T", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KADAJJLO@?$AAF?$AAS?$AA?5?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF@| DCB "F"
	DCB	0x0, "S", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "_", 0x0, "N"
	DCB	0x0, "U", 0x0, "M", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "M"
	DCB	0x0, "a", 0x0, "x", 0x0, "P", 0x0, "k", 0x0, "t", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@OFKEENEB@?$AAF?$AAS?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?3@| DCB "F"
	DCB	0x0, "S", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "U", 0x0, "N"
	DCB	0x0, "T", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@PIPODPPO@?$AAF?$AAu?$AAl?$AAl?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?5?$AAN?$AAu?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAa?$AAl@| DCB "F"
	DCB	0x0, "u", 0x0, "l", 0x0, "l", 0x0, "S", 0x0, "p", 0x0, "e"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m"
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f"
	DCB	0x0, "a", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "t", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "s", 0x0, "=", 0x0, "("
	DCB	0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "h", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "x", 0x0, "P", 0x0, "k", 0x0, "t"
	DCB	0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ":", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@BLOEHPDP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "r", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f", 0x0, "u", 0x0, "l"
	DCB	0x0, "l", 0x0, "-", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "t", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@NBJKHGBI@?$AA?$CL?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P"
	DCB	0x0, "d", 0x0, "d", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  09670			 AREA	 |.text|, CODE, ARM

  09670		 |UfnPdd_RegisterDevice| PROC

; 3642 : {

  09670		 |$LN60@UfnPdd_Reg|
  09670	e1a0c00d	 mov         r12, sp
  09674	e92d000f	 stmdb       sp!, {r0 - r3}
  09678	e92d5000	 stmdb       sp!, {r12, lr}
  0967c	e24dd078	 sub         sp, sp, #0x78
  09680		 |$M50677|

; 3643 :     DWORD dwFullNAltSettings;
; 3644 :     DWORD dwHighNAltSettings;
; 3645 :     DWORD rc = ERROR_INVALID_PARAMETER;

  09680	e3a03057	 mov         r3, #0x57
  09684	e58d3004	 str         r3, [sp, #4]

; 3646 : 
; 3647 :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pvPddContext;

  09688	e59d3080	 ldr         r3, [sp, #0x80]
  0968c	e58d301c	 str         r3, [sp, #0x1C]

; 3648 :     UFN_INTERFACE   *pIFC = NULL;

  09690	e3a03000	 mov         r3, #0
  09694	e58d3010	 str         r3, [sp, #0x10]

; 3649 :     UFN_ENDPOINT    *pEP  = NULL;

  09698	e3a03000	 mov         r3, #0
  0969c	e58d3014	 str         r3, [sp, #0x14]

; 3650 :     DWORD   ifc			  = 0;

  096a0	e3a03000	 mov         r3, #0
  096a4	e58d3024	 str         r3, [sp, #0x24]

; 3651 :     DWORD   epx           = 0;

  096a8	e3a03000	 mov         r3, #0
  096ac	e58d3008	 str         r3, [sp, #8]

; 3652 :     UINT16  ep            = 0;

  096b0	e3a03000	 mov         r3, #0
  096b4	e1cd31ba	 strh        r3, [sp, #0x1A]

; 3653 :     WORD    offset        = 0;

  096b8	e3a03000	 mov         r3, #0
  096bc	e1cd31b8	 strh        r3, [sp, #0x18]

; 3654 : 
; 3655 : 	UNREFERENCED_PARAMETER(cStringSets);
; 3656 : 	UNREFERENCED_PARAMETER(pStringSets);
; 3657 : 	UNREFERENCED_PARAMETER(pFullSpeedConfigDesc);
; 3658 : 	UNREFERENCED_PARAMETER(pFullSpeedDeviceDesc);
; 3659 : 	UNREFERENCED_PARAMETER(pHighSpeedConfigDesc);
; 3660 : 	UNREFERENCED_PARAMETER(pHighSpeedDeviceDesc);
; 3661 : 
; 3662 :     PRINTMSG(ZONE_FUNCTION, (L"+UsbFnPdd_RegisterDevice\r\n"));

  096c0	e59f3894	 ldr         r3, [pc, #0x894]
  096c4	e5933440	 ldr         r3, [r3, #0x440]
  096c8	e3130a01	 tst         r3, #1, 20
  096cc	0a00000f	 beq         |$LN30@UfnPdd_Reg|
  096d0	e59f3884	 ldr         r3, [pc, #0x884]
  096d4	e5933440	 ldr         r3, [r3, #0x440]
  096d8	e3130801	 tst         r3, #1, 16
  096dc	0a000004	 beq         |$LN28@UfnPdd_Reg|
  096e0	e59f0898	 ldr         r0, [pc, #0x898]
  096e4	eb000000	 bl          CeLogMsg
  096e8	e3a03001	 mov         r3, #1
  096ec	e58d3034	 str         r3, [sp, #0x34]
  096f0	ea000003	 b           |$LN29@UfnPdd_Reg|
  096f4		 |$LN28@UfnPdd_Reg|
  096f4	e59f0884	 ldr         r0, [pc, #0x884]
  096f8	eb000000	 bl          NKDbgPrintfW
  096fc	e3a03000	 mov         r3, #0
  09700	e58d3034	 str         r3, [sp, #0x34]
  09704		 |$LN29@UfnPdd_Reg|
  09704	e3a03001	 mov         r3, #1
  09708	e58d3038	 str         r3, [sp, #0x38]
  0970c	ea000001	 b           |$LN31@UfnPdd_Reg|
  09710		 |$LN30@UfnPdd_Reg|
  09710	e3a03000	 mov         r3, #0
  09714	e58d3038	 str         r3, [sp, #0x38]
  09718		 |$LN31@UfnPdd_Reg|

; 3663 : 
; 3664 :     /* Remember self powered flag */
; 3665 :     pPdd->selfPowered = (pFullSpeedConfig->Descriptor.bmAttributes & 0x20) != 0;

  09718	e59d3094	 ldr         r3, [sp, #0x94]
  0971c	e283300b	 add         r3, r3, #0xB
  09720	e5d33000	 ldrb        r3, [r3]
  09724	e3130020	 tst         r3, #0x20
  09728	0a000002	 beq         |$LN32@UfnPdd_Reg|
  0972c	e3a03001	 mov         r3, #1
  09730	e58d303c	 str         r3, [sp, #0x3C]
  09734	ea000001	 b           |$LN33@UfnPdd_Reg|
  09738		 |$LN32@UfnPdd_Reg|
  09738	e3a03000	 mov         r3, #0
  0973c	e58d303c	 str         r3, [sp, #0x3C]
  09740		 |$LN33@UfnPdd_Reg|
  09740	e59d301c	 ldr         r3, [sp, #0x1C]
  09744	e2832f97	 add         r2, r3, #0x97, 30
  09748	e59d303c	 ldr         r3, [sp, #0x3C]
  0974c	e5823000	 str         r3, [r2]

; 3666 : 
; 3667 :     dwFullNAltSettings = GetTotalAltSettingCount(pFullSpeedConfig);

  09750	e59d0094	 ldr         r0, [sp, #0x94]
  09754	eb000000	 bl          GetTotalAltSettingCount
  09758	e58d0040	 str         r0, [sp, #0x40]
  0975c	e59d3040	 ldr         r3, [sp, #0x40]
  09760	e58d3020	 str         r3, [sp, #0x20]

; 3668 :     if( dwFullNAltSettings == INVALID_ALTSETTING_COUNT )

  09764	e59d2020	 ldr         r2, [sp, #0x20]
  09768	e3a03cff	 mov         r3, #0xFF, 24
  0976c	e38330ff	 orr         r3, r3, #0xFF
  09770	e1520003	 cmp         r2, r3
  09774	1a000009	 bne         |$LN25@UfnPdd_Reg|

; 3669 :     {
; 3670 :         ERRORMSG(TRUE, (TEXT("UfnPdd_RegisterDevice: Error retrieving full-speed altsetting count")) );

  09778	e3a02c0e	 mov         r2, #0xE, 24
  0977c	e3822056	 orr         r2, r2, #0x56
  09780	e59f17f4	 ldr         r1, [pc, #0x7F4]
  09784	e59f07ec	 ldr         r0, [pc, #0x7EC]
  09788	eb000000	 bl          NKDbgPrintfW
  0978c	e59f07e0	 ldr         r0, [pc, #0x7E0]
  09790	eb000000	 bl          NKDbgPrintfW

; 3671 :         return ERROR_INVALID_PARAMETER;

  09794	e3a03057	 mov         r3, #0x57
  09798	e58d3028	 str         r3, [sp, #0x28]
  0979c	ea0001e9	 b           |$LN26@UfnPdd_Reg|
  097a0		 |$LN25@UfnPdd_Reg|

; 3672 :     }
; 3673 : 
; 3674 :     dwHighNAltSettings = GetTotalAltSettingCount(pHighSpeedConfig);

  097a0	e59d0088	 ldr         r0, [sp, #0x88]
  097a4	eb000000	 bl          GetTotalAltSettingCount
  097a8	e58d0044	 str         r0, [sp, #0x44]
  097ac	e59d3044	 ldr         r3, [sp, #0x44]
  097b0	e58d300c	 str         r3, [sp, #0xC]

; 3675 :     if( dwHighNAltSettings == INVALID_ALTSETTING_COUNT )

  097b4	e59d200c	 ldr         r2, [sp, #0xC]
  097b8	e3a03cff	 mov         r3, #0xFF, 24
  097bc	e38330ff	 orr         r3, r3, #0xFF
  097c0	e1520003	 cmp         r2, r3
  097c4	1a000009	 bne         |$LN24@UfnPdd_Reg|

; 3676 :     {
; 3677 :         ERRORMSG(TRUE, (TEXT("UfnPdd_RegisterDevice: Error retrieving full-speed altsetting count")) );

  097c8	e3a02c0e	 mov         r2, #0xE, 24
  097cc	e382205d	 orr         r2, r2, #0x5D
  097d0	e59f17a4	 ldr         r1, [pc, #0x7A4]
  097d4	e59f079c	 ldr         r0, [pc, #0x79C]
  097d8	eb000000	 bl          NKDbgPrintfW
  097dc	e59f0790	 ldr         r0, [pc, #0x790]
  097e0	eb000000	 bl          NKDbgPrintfW

; 3678 :         return ERROR_INVALID_PARAMETER;

  097e4	e3a03057	 mov         r3, #0x57
  097e8	e58d3028	 str         r3, [sp, #0x28]
  097ec	ea0001d5	 b           |$LN26@UfnPdd_Reg|
  097f0		 |$LN24@UfnPdd_Reg|

; 3679 :     }
; 3680 : 
; 3681 :     PRINTMSG(ZONE_PDD_INIT,
; 3682 :              (L"FullSpeed NumInterfaces 0x%x, altsettings=(full=%d, high=%d) maxPktSize 0x%x:\r\n",
; 3683 :               pFullSpeedConfig->Descriptor.bNumInterfaces,
; 3684 :               dwFullNAltSettings, dwHighNAltSettings,
; 3685 :               pFullSpeedDeviceDesc->bMaxPacketSize0));

  097f0	e59f3764	 ldr         r3, [pc, #0x764]
  097f4	e5933440	 ldr         r3, [r3, #0x440]
  097f8	e3130c01	 tst         r3, #1, 24
  097fc	0a000021	 beq         |$LN36@UfnPdd_Reg|
  09800	e59f3754	 ldr         r3, [pc, #0x754]
  09804	e5933440	 ldr         r3, [r3, #0x440]
  09808	e3130801	 tst         r3, #1, 16
  0980c	0a00000d	 beq         |$LN34@UfnPdd_Reg|
  09810	e59d3090	 ldr         r3, [sp, #0x90]
  09814	e2833007	 add         r3, r3, #7
  09818	e5d33000	 ldrb        r3, [r3]
  0981c	e58d3000	 str         r3, [sp]
  09820	e59d300c	 ldr         r3, [sp, #0xC]
  09824	e59d2020	 ldr         r2, [sp, #0x20]
  09828	e59d1094	 ldr         r1, [sp, #0x94]
  0982c	e2811008	 add         r1, r1, #8
  09830	e5d11000	 ldrb        r1, [r1]
  09834	e59f0734	 ldr         r0, [pc, #0x734]
  09838	eb000000	 bl          CeLogMsg
  0983c	e3a03001	 mov         r3, #1
  09840	e58d3048	 str         r3, [sp, #0x48]
  09844	ea00000c	 b           |$LN35@UfnPdd_Reg|
  09848		 |$LN34@UfnPdd_Reg|
  09848	e59d3090	 ldr         r3, [sp, #0x90]
  0984c	e2833007	 add         r3, r3, #7
  09850	e5d33000	 ldrb        r3, [r3]
  09854	e58d3000	 str         r3, [sp]
  09858	e59d300c	 ldr         r3, [sp, #0xC]
  0985c	e59d2020	 ldr         r2, [sp, #0x20]
  09860	e59d1094	 ldr         r1, [sp, #0x94]
  09864	e2811008	 add         r1, r1, #8
  09868	e5d11000	 ldrb        r1, [r1]
  0986c	e59f06fc	 ldr         r0, [pc, #0x6FC]
  09870	eb000000	 bl          NKDbgPrintfW
  09874	e3a03000	 mov         r3, #0
  09878	e58d3048	 str         r3, [sp, #0x48]
  0987c		 |$LN35@UfnPdd_Reg|
  0987c	e3a03001	 mov         r3, #1
  09880	e58d304c	 str         r3, [sp, #0x4C]
  09884	ea000001	 b           |$LN37@UfnPdd_Reg|
  09888		 |$LN36@UfnPdd_Reg|
  09888	e3a03000	 mov         r3, #0
  0988c	e58d304c	 str         r3, [sp, #0x4C]
  09890		 |$LN37@UfnPdd_Reg|

; 3686 : 
; 3687 : 
; 3688 :     /* Determine FIFO offsets for each EP */
; 3689 : 
; 3690 :     /* Clear config */
; 3691 :     for (ep = 0; ep < USBD_EP_COUNT; ++ep)

  09890	e3a03000	 mov         r3, #0
  09894	e1cd31ba	 strh        r3, [sp, #0x1A]
  09898	ea000004	 b           |$LN23@UfnPdd_Reg|
  0989c		 |$LN22@UfnPdd_Reg|
  0989c	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  098a0	e2833001	 add         r3, r3, #1
  098a4	e1a03803	 mov         r3, r3, lsl #16
  098a8	e1a03823	 mov         r3, r3, lsr #16
  098ac	e1cd31ba	 strh        r3, [sp, #0x1A]
  098b0		 |$LN23@UfnPdd_Reg|
  098b0	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  098b4	e3530010	 cmp         r3, #0x10
  098b8	aa000014	 bge         |$LN21@UfnPdd_Reg|

; 3692 :     {
; 3693 :         pPdd->ep[ep].maxPacketSize = 0;

  098bc	e59d301c	 ldr         r3, [sp, #0x1C]
  098c0	e2831fa1	 add         r1, r3, #0xA1, 30
  098c4	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  098c8	e1a02003	 mov         r2, r3
  098cc	e3a0303c	 mov         r3, #0x3C
  098d0	e0030392	 mul         r3, r2, r3
  098d4	e0813003	 add         r3, r1, r3
  098d8	e2832008	 add         r2, r3, #8
  098dc	e3a03000	 mov         r3, #0
  098e0	e1c230b0	 strh        r3, [r2]

; 3694 :         pPdd->ep[ep].fifoOffset = 0;

  098e4	e59d301c	 ldr         r3, [sp, #0x1C]
  098e8	e2831fa1	 add         r1, r3, #0xA1, 30
  098ec	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  098f0	e1a02003	 mov         r2, r3
  098f4	e3a0303c	 mov         r3, #0x3C
  098f8	e0030392	 mul         r3, r2, r3
  098fc	e0813003	 add         r3, r1, r3
  09900	e283200a	 add         r2, r3, #0xA
  09904	e3a03000	 mov         r3, #0
  09908	e1c230b0	 strh        r3, [r2]

; 3695 :     }

  0990c	eaffffe2	 b           |$LN22@UfnPdd_Reg|
  09910		 |$LN21@UfnPdd_Reg|

; 3696 : 
; 3697 :     /* Full speed config first */
; 3698 :     for (ifc = 0; ifc < dwFullNAltSettings; ifc++)

  09910	e3a03000	 mov         r3, #0
  09914	e58d3024	 str         r3, [sp, #0x24]
  09918	ea000002	 b           |$LN20@UfnPdd_Reg|
  0991c		 |$LN19@UfnPdd_Reg|
  0991c	e59d3024	 ldr         r3, [sp, #0x24]
  09920	e2833001	 add         r3, r3, #1
  09924	e58d3024	 str         r3, [sp, #0x24]
  09928		 |$LN20@UfnPdd_Reg|
  09928	e59d2024	 ldr         r2, [sp, #0x24]
  0992c	e59d3020	 ldr         r3, [sp, #0x20]
  09930	e1520003	 cmp         r2, r3
  09934	2a000081	 bcs         |$LN18@UfnPdd_Reg|

; 3699 :     {
; 3700 :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  09938	e59d3094	 ldr         r3, [sp, #0x94]
  0993c	e2830018	 add         r0, r3, #0x18
  09940	e59d1024	 ldr         r1, [sp, #0x24]
  09944	e3a0301c	 mov         r3, #0x1C
  09948	e0020391	 mul         r2, r1, r3
  0994c	e5903000	 ldr         r3, [r0]
  09950	e0833002	 add         r3, r3, r2
  09954	e58d3010	 str         r3, [sp, #0x10]

; 3701 : 
; 3702 :         PRINTMSG(ZONE_PDD_INIT, (L"FS Interface 0x%x EP_COUNT 0x%x:\r\n",
; 3703 :                                  ifc, pIFC->Descriptor.bNumEndpoints));

  09958	e59f35fc	 ldr         r3, [pc, #0x5FC]
  0995c	e5933440	 ldr         r3, [r3, #0x440]
  09960	e3130c01	 tst         r3, #1, 24
  09964	0a000017	 beq         |$LN40@UfnPdd_Reg|
  09968	e59f35ec	 ldr         r3, [pc, #0x5EC]
  0996c	e5933440	 ldr         r3, [r3, #0x440]
  09970	e3130801	 tst         r3, #1, 16
  09974	0a000008	 beq         |$LN38@UfnPdd_Reg|
  09978	e59d3010	 ldr         r3, [sp, #0x10]
  0997c	e2833008	 add         r3, r3, #8
  09980	e5d32000	 ldrb        r2, [r3]
  09984	e59d1024	 ldr         r1, [sp, #0x24]
  09988	e59f05dc	 ldr         r0, [pc, #0x5DC]
  0998c	eb000000	 bl          CeLogMsg
  09990	e3a03001	 mov         r3, #1
  09994	e58d3050	 str         r3, [sp, #0x50]
  09998	ea000007	 b           |$LN39@UfnPdd_Reg|
  0999c		 |$LN38@UfnPdd_Reg|
  0999c	e59d3010	 ldr         r3, [sp, #0x10]
  099a0	e2833008	 add         r3, r3, #8
  099a4	e5d32000	 ldrb        r2, [r3]
  099a8	e59d1024	 ldr         r1, [sp, #0x24]
  099ac	e59f05b8	 ldr         r0, [pc, #0x5B8]
  099b0	eb000000	 bl          NKDbgPrintfW
  099b4	e3a03000	 mov         r3, #0
  099b8	e58d3050	 str         r3, [sp, #0x50]
  099bc		 |$LN39@UfnPdd_Reg|
  099bc	e3a03001	 mov         r3, #1
  099c0	e58d3054	 str         r3, [sp, #0x54]
  099c4	ea000001	 b           |$LN41@UfnPdd_Reg|
  099c8		 |$LN40@UfnPdd_Reg|
  099c8	e3a03000	 mov         r3, #0
  099cc	e58d3054	 str         r3, [sp, #0x54]
  099d0		 |$LN41@UfnPdd_Reg|

; 3704 : 
; 3705 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  099d0	e3a03000	 mov         r3, #0
  099d4	e58d3008	 str         r3, [sp, #8]
  099d8	ea000002	 b           |$LN17@UfnPdd_Reg|
  099dc		 |$LN16@UfnPdd_Reg|
  099dc	e59d3008	 ldr         r3, [sp, #8]
  099e0	e2833001	 add         r3, r3, #1
  099e4	e58d3008	 str         r3, [sp, #8]
  099e8		 |$LN17@UfnPdd_Reg|
  099e8	e59d3010	 ldr         r3, [sp, #0x10]
  099ec	e2833008	 add         r3, r3, #8
  099f0	e5d32000	 ldrb        r2, [r3]
  099f4	e59d3008	 ldr         r3, [sp, #8]
  099f8	e1530002	 cmp         r3, r2
  099fc	2a00004e	 bcs         |$LN15@UfnPdd_Reg|

; 3706 :         {
; 3707 :             pEP = &pIFC->pEndpoints[epx];

  09a00	e59d3010	 ldr         r3, [sp, #0x10]
  09a04	e2830018	 add         r0, r3, #0x18
  09a08	e59d1008	 ldr         r1, [sp, #8]
  09a0c	e3a03014	 mov         r3, #0x14
  09a10	e0020391	 mul         r2, r1, r3
  09a14	e5903000	 ldr         r3, [r0]
  09a18	e0833002	 add         r3, r3, r2
  09a1c	e58d3014	 str         r3, [sp, #0x14]

; 3708 : 
; 3709 :             PRINTMSG(ZONE_PDD_INIT, (L"FS EP_NUM 0x%x EP MaxPktSize 0x%x\r\n",
; 3710 :                                      pEP->Descriptor.bEndpointAddress & 0x0F,
; 3711 :                                      pEP->Descriptor.wMaxPacketSize));

  09a20	e59f3534	 ldr         r3, [pc, #0x534]
  09a24	e5933440	 ldr         r3, [r3, #0x440]
  09a28	e3130c01	 tst         r3, #1, 24
  09a2c	0a000027	 beq         |$LN44@UfnPdd_Reg|
  09a30	e59f3524	 ldr         r3, [pc, #0x524]
  09a34	e5933440	 ldr         r3, [r3, #0x440]
  09a38	e3130801	 tst         r3, #1, 16
  09a3c	0a000010	 beq         |$LN42@UfnPdd_Reg|
  09a40	e59d3014	 ldr         r3, [sp, #0x14]
  09a44	e2831008	 add         r1, r3, #8
  09a48	e5d13001	 ldrb        r3, [r1, #1]
  09a4c	e1a03403	 mov         r3, r3, lsl #8
  09a50	e1a02803	 mov         r2, r3, lsl #16
  09a54	e1a02822	 mov         r2, r2, lsr #16
  09a58	e5d13000	 ldrb        r3, [r1]
  09a5c	e1832002	 orr         r2, r3, r2
  09a60	e59d3014	 ldr         r3, [sp, #0x14]
  09a64	e2833006	 add         r3, r3, #6
  09a68	e5d33000	 ldrb        r3, [r3]
  09a6c	e203100f	 and         r1, r3, #0xF
  09a70	e59f04f0	 ldr         r0, [pc, #0x4F0]
  09a74	eb000000	 bl          CeLogMsg
  09a78	e3a03001	 mov         r3, #1
  09a7c	e58d3058	 str         r3, [sp, #0x58]
  09a80	ea00000f	 b           |$LN43@UfnPdd_Reg|
  09a84		 |$LN42@UfnPdd_Reg|
  09a84	e59d3014	 ldr         r3, [sp, #0x14]
  09a88	e2831008	 add         r1, r3, #8
  09a8c	e5d13001	 ldrb        r3, [r1, #1]
  09a90	e1a03403	 mov         r3, r3, lsl #8
  09a94	e1a02803	 mov         r2, r3, lsl #16
  09a98	e1a02822	 mov         r2, r2, lsr #16
  09a9c	e5d13000	 ldrb        r3, [r1]
  09aa0	e1832002	 orr         r2, r3, r2
  09aa4	e59d3014	 ldr         r3, [sp, #0x14]
  09aa8	e2833006	 add         r3, r3, #6
  09aac	e5d33000	 ldrb        r3, [r3]
  09ab0	e203100f	 and         r1, r3, #0xF
  09ab4	e59f04ac	 ldr         r0, [pc, #0x4AC]
  09ab8	eb000000	 bl          NKDbgPrintfW
  09abc	e3a03000	 mov         r3, #0
  09ac0	e58d3058	 str         r3, [sp, #0x58]
  09ac4		 |$LN43@UfnPdd_Reg|
  09ac4	e3a03001	 mov         r3, #1
  09ac8	e58d305c	 str         r3, [sp, #0x5C]
  09acc	ea000001	 b           |$LN45@UfnPdd_Reg|
  09ad0		 |$LN44@UfnPdd_Reg|
  09ad0	e3a03000	 mov         r3, #0
  09ad4	e58d305c	 str         r3, [sp, #0x5C]
  09ad8		 |$LN45@UfnPdd_Reg|

; 3712 : 
; 3713 :             /* Get EP address */
; 3714 :             ep = pEP->Descriptor.bEndpointAddress & 0x0F;

  09ad8	e59d3014	 ldr         r3, [sp, #0x14]
  09adc	e2833006	 add         r3, r3, #6
  09ae0	e5d33000	 ldrb        r3, [r3]
  09ae4	e203300f	 and         r3, r3, #0xF
  09ae8	e1a03803	 mov         r3, r3, lsl #16
  09aec	e1a03823	 mov         r3, r3, lsr #16
  09af0	e1cd31ba	 strh        r3, [sp, #0x1A]

; 3715 : 
; 3716 :             /* Save max packet size */
; 3717 :             pPdd->ep[ep].maxPacketSize = pEP->Descriptor.wMaxPacketSize;

  09af4	e59d3014	 ldr         r3, [sp, #0x14]
  09af8	e2830008	 add         r0, r3, #8
  09afc	e59d301c	 ldr         r3, [sp, #0x1C]
  09b00	e2831fa1	 add         r1, r3, #0xA1, 30
  09b04	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09b08	e1a02003	 mov         r2, r3
  09b0c	e3a0303c	 mov         r3, #0x3C
  09b10	e0030392	 mul         r3, r2, r3
  09b14	e0813003	 add         r3, r1, r3
  09b18	e2831008	 add         r1, r3, #8
  09b1c	e5d03001	 ldrb        r3, [r0, #1]
  09b20	e1a03403	 mov         r3, r3, lsl #8
  09b24	e1a02803	 mov         r2, r3, lsl #16
  09b28	e1a02822	 mov         r2, r2, lsr #16
  09b2c	e5d03000	 ldrb        r3, [r0]
  09b30	e1833002	 orr         r3, r3, r2
  09b34	e1c130b0	 strh        r3, [r1]

; 3718 :         }

  09b38	eaffffa7	 b           |$LN16@UfnPdd_Reg|
  09b3c		 |$LN15@UfnPdd_Reg|

; 3719 :     }

  09b3c	eaffff76	 b           |$LN19@UfnPdd_Reg|
  09b40		 |$LN18@UfnPdd_Reg|

; 3720 : 
; 3721 :     /* High speed config */
; 3722 :     for (ifc = 0; ifc < dwHighNAltSettings; ifc++)

  09b40	e3a03000	 mov         r3, #0
  09b44	e58d3024	 str         r3, [sp, #0x24]
  09b48	ea000002	 b           |$LN14@UfnPdd_Reg|
  09b4c		 |$LN13@UfnPdd_Reg|
  09b4c	e59d3024	 ldr         r3, [sp, #0x24]
  09b50	e2833001	 add         r3, r3, #1
  09b54	e58d3024	 str         r3, [sp, #0x24]
  09b58		 |$LN14@UfnPdd_Reg|
  09b58	e59d2024	 ldr         r2, [sp, #0x24]
  09b5c	e59d300c	 ldr         r3, [sp, #0xC]
  09b60	e1520003	 cmp         r2, r3
  09b64	2a000095	 bcs         |$LN12@UfnPdd_Reg|

; 3723 :     {
; 3724 :         pIFC = &pHighSpeedConfig->pInterfaces[ifc];

  09b68	e59d3088	 ldr         r3, [sp, #0x88]
  09b6c	e2830018	 add         r0, r3, #0x18
  09b70	e59d1024	 ldr         r1, [sp, #0x24]
  09b74	e3a0301c	 mov         r3, #0x1C
  09b78	e0020391	 mul         r2, r1, r3
  09b7c	e5903000	 ldr         r3, [r0]
  09b80	e0833002	 add         r3, r3, r2
  09b84	e58d3010	 str         r3, [sp, #0x10]

; 3725 : 
; 3726 :         PRINTMSG(ZONE_PDD_INIT, (L"HS Interface 0x%x EP_COUNT 0x%x:\r\n",
; 3727 :                                  ifc, pIFC->Descriptor.bNumEndpoints));

  09b88	e59f33cc	 ldr         r3, [pc, #0x3CC]
  09b8c	e5933440	 ldr         r3, [r3, #0x440]
  09b90	e3130c01	 tst         r3, #1, 24
  09b94	0a000017	 beq         |$LN48@UfnPdd_Reg|
  09b98	e59f33bc	 ldr         r3, [pc, #0x3BC]
  09b9c	e5933440	 ldr         r3, [r3, #0x440]
  09ba0	e3130801	 tst         r3, #1, 16
  09ba4	0a000008	 beq         |$LN46@UfnPdd_Reg|
  09ba8	e59d3010	 ldr         r3, [sp, #0x10]
  09bac	e2833008	 add         r3, r3, #8
  09bb0	e5d32000	 ldrb        r2, [r3]
  09bb4	e59d1024	 ldr         r1, [sp, #0x24]
  09bb8	e59f03a4	 ldr         r0, [pc, #0x3A4]
  09bbc	eb000000	 bl          CeLogMsg
  09bc0	e3a03001	 mov         r3, #1
  09bc4	e58d3060	 str         r3, [sp, #0x60]
  09bc8	ea000007	 b           |$LN47@UfnPdd_Reg|
  09bcc		 |$LN46@UfnPdd_Reg|
  09bcc	e59d3010	 ldr         r3, [sp, #0x10]
  09bd0	e2833008	 add         r3, r3, #8
  09bd4	e5d32000	 ldrb        r2, [r3]
  09bd8	e59d1024	 ldr         r1, [sp, #0x24]
  09bdc	e59f0380	 ldr         r0, [pc, #0x380]
  09be0	eb000000	 bl          NKDbgPrintfW
  09be4	e3a03000	 mov         r3, #0
  09be8	e58d3060	 str         r3, [sp, #0x60]
  09bec		 |$LN47@UfnPdd_Reg|
  09bec	e3a03001	 mov         r3, #1
  09bf0	e58d3064	 str         r3, [sp, #0x64]
  09bf4	ea000001	 b           |$LN49@UfnPdd_Reg|
  09bf8		 |$LN48@UfnPdd_Reg|
  09bf8	e3a03000	 mov         r3, #0
  09bfc	e58d3064	 str         r3, [sp, #0x64]
  09c00		 |$LN49@UfnPdd_Reg|

; 3728 : 
; 3729 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  09c00	e3a03000	 mov         r3, #0
  09c04	e58d3008	 str         r3, [sp, #8]
  09c08	ea000002	 b           |$LN11@UfnPdd_Reg|
  09c0c		 |$LN10@UfnPdd_Reg|
  09c0c	e59d3008	 ldr         r3, [sp, #8]
  09c10	e2833001	 add         r3, r3, #1
  09c14	e58d3008	 str         r3, [sp, #8]
  09c18		 |$LN11@UfnPdd_Reg|
  09c18	e59d3010	 ldr         r3, [sp, #0x10]
  09c1c	e2833008	 add         r3, r3, #8
  09c20	e5d32000	 ldrb        r2, [r3]
  09c24	e59d3008	 ldr         r3, [sp, #8]
  09c28	e1530002	 cmp         r3, r2
  09c2c	2a000062	 bcs         |$LN9@UfnPdd_Reg|

; 3730 :         {
; 3731 :             pEP = &pIFC->pEndpoints[epx];

  09c30	e59d3010	 ldr         r3, [sp, #0x10]
  09c34	e2830018	 add         r0, r3, #0x18
  09c38	e59d1008	 ldr         r1, [sp, #8]
  09c3c	e3a03014	 mov         r3, #0x14
  09c40	e0020391	 mul         r2, r1, r3
  09c44	e5903000	 ldr         r3, [r0]
  09c48	e0833002	 add         r3, r3, r2
  09c4c	e58d3014	 str         r3, [sp, #0x14]

; 3732 : 
; 3733 :             PRINTMSG(ZONE_PDD_INIT, (L"HS EP_NUM 0x%x EP MaxPktSize 0x%x\r\n",
; 3734 :                                      pEP->Descriptor.bEndpointAddress & 0x0F,
; 3735 :                                      pEP->Descriptor.wMaxPacketSize));

  09c50	e59f3304	 ldr         r3, [pc, #0x304]
  09c54	e5933440	 ldr         r3, [r3, #0x440]
  09c58	e3130c01	 tst         r3, #1, 24
  09c5c	0a000027	 beq         |$LN52@UfnPdd_Reg|
  09c60	e59f32f4	 ldr         r3, [pc, #0x2F4]
  09c64	e5933440	 ldr         r3, [r3, #0x440]
  09c68	e3130801	 tst         r3, #1, 16
  09c6c	0a000010	 beq         |$LN50@UfnPdd_Reg|
  09c70	e59d3014	 ldr         r3, [sp, #0x14]
  09c74	e2831008	 add         r1, r3, #8
  09c78	e5d13001	 ldrb        r3, [r1, #1]
  09c7c	e1a03403	 mov         r3, r3, lsl #8
  09c80	e1a02803	 mov         r2, r3, lsl #16
  09c84	e1a02822	 mov         r2, r2, lsr #16
  09c88	e5d13000	 ldrb        r3, [r1]
  09c8c	e1832002	 orr         r2, r3, r2
  09c90	e59d3014	 ldr         r3, [sp, #0x14]
  09c94	e2833006	 add         r3, r3, #6
  09c98	e5d33000	 ldrb        r3, [r3]
  09c9c	e203100f	 and         r1, r3, #0xF
  09ca0	e59f02b8	 ldr         r0, [pc, #0x2B8]
  09ca4	eb000000	 bl          CeLogMsg
  09ca8	e3a03001	 mov         r3, #1
  09cac	e58d3068	 str         r3, [sp, #0x68]
  09cb0	ea00000f	 b           |$LN51@UfnPdd_Reg|
  09cb4		 |$LN50@UfnPdd_Reg|
  09cb4	e59d3014	 ldr         r3, [sp, #0x14]
  09cb8	e2831008	 add         r1, r3, #8
  09cbc	e5d13001	 ldrb        r3, [r1, #1]
  09cc0	e1a03403	 mov         r3, r3, lsl #8
  09cc4	e1a02803	 mov         r2, r3, lsl #16
  09cc8	e1a02822	 mov         r2, r2, lsr #16
  09ccc	e5d13000	 ldrb        r3, [r1]
  09cd0	e1832002	 orr         r2, r3, r2
  09cd4	e59d3014	 ldr         r3, [sp, #0x14]
  09cd8	e2833006	 add         r3, r3, #6
  09cdc	e5d33000	 ldrb        r3, [r3]
  09ce0	e203100f	 and         r1, r3, #0xF
  09ce4	e59f0274	 ldr         r0, [pc, #0x274]
  09ce8	eb000000	 bl          NKDbgPrintfW
  09cec	e3a03000	 mov         r3, #0
  09cf0	e58d3068	 str         r3, [sp, #0x68]
  09cf4		 |$LN51@UfnPdd_Reg|
  09cf4	e3a03001	 mov         r3, #1
  09cf8	e58d306c	 str         r3, [sp, #0x6C]
  09cfc	ea000001	 b           |$LN53@UfnPdd_Reg|
  09d00		 |$LN52@UfnPdd_Reg|
  09d00	e3a03000	 mov         r3, #0
  09d04	e58d306c	 str         r3, [sp, #0x6C]
  09d08		 |$LN53@UfnPdd_Reg|

; 3736 : 
; 3737 :             /* Get EP address */
; 3738 :             ep = pEP->Descriptor.bEndpointAddress & 0x0F;

  09d08	e59d3014	 ldr         r3, [sp, #0x14]
  09d0c	e2833006	 add         r3, r3, #6
  09d10	e5d33000	 ldrb        r3, [r3]
  09d14	e203300f	 and         r3, r3, #0xF
  09d18	e1a03803	 mov         r3, r3, lsl #16
  09d1c	e1a03823	 mov         r3, r3, lsr #16
  09d20	e1cd31ba	 strh        r3, [sp, #0x1A]

; 3739 : 
; 3740 :             /* Save max packet size */
; 3741 :             if (pEP->Descriptor.wMaxPacketSize > pPdd->ep[ep].maxPacketSize)

  09d24	e59d3014	 ldr         r3, [sp, #0x14]
  09d28	e2831008	 add         r1, r3, #8
  09d2c	e5d13001	 ldrb        r3, [r1, #1]
  09d30	e1a03403	 mov         r3, r3, lsl #8
  09d34	e1a02803	 mov         r2, r3, lsl #16
  09d38	e1a02822	 mov         r2, r2, lsr #16
  09d3c	e5d13000	 ldrb        r3, [r1]
  09d40	e1833002	 orr         r3, r3, r2
  09d44	e1a00003	 mov         r0, r3
  09d48	e59d301c	 ldr         r3, [sp, #0x1C]
  09d4c	e2831fa1	 add         r1, r3, #0xA1, 30
  09d50	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09d54	e1a02003	 mov         r2, r3
  09d58	e3a0303c	 mov         r3, #0x3C
  09d5c	e0030392	 mul         r3, r2, r3
  09d60	e0813003	 add         r3, r1, r3
  09d64	e2833008	 add         r3, r3, #8
  09d68	e1d330b0	 ldrh        r3, [r3]
  09d6c	e1500003	 cmp         r0, r3
  09d70	da000010	 ble         |$LN8@UfnPdd_Reg|

; 3742 :                 pPdd->ep[ep].maxPacketSize = pEP->Descriptor.wMaxPacketSize;

  09d74	e59d3014	 ldr         r3, [sp, #0x14]
  09d78	e2830008	 add         r0, r3, #8
  09d7c	e59d301c	 ldr         r3, [sp, #0x1C]
  09d80	e2831fa1	 add         r1, r3, #0xA1, 30
  09d84	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09d88	e1a02003	 mov         r2, r3
  09d8c	e3a0303c	 mov         r3, #0x3C
  09d90	e0030392	 mul         r3, r2, r3
  09d94	e0813003	 add         r3, r1, r3
  09d98	e2831008	 add         r1, r3, #8
  09d9c	e5d03001	 ldrb        r3, [r0, #1]
  09da0	e1a03403	 mov         r3, r3, lsl #8
  09da4	e1a02803	 mov         r2, r3, lsl #16
  09da8	e1a02822	 mov         r2, r2, lsr #16
  09dac	e5d03000	 ldrb        r3, [r0]
  09db0	e1833002	 orr         r3, r3, r2
  09db4	e1c130b0	 strh        r3, [r1]
  09db8		 |$LN8@UfnPdd_Reg|

; 3743 :         }

  09db8	eaffff93	 b           |$LN10@UfnPdd_Reg|
  09dbc		 |$LN9@UfnPdd_Reg|

; 3744 :     }

  09dbc	eaffff62	 b           |$LN13@UfnPdd_Reg|
  09dc0		 |$LN12@UfnPdd_Reg|

; 3745 : 
; 3746 :     /* Now determine fifo offsets */
; 3747 : 
; 3748 :     /* Allow for EP0 fifo */
; 3749 :     offset = 64;

  09dc0	e3a03040	 mov         r3, #0x40
  09dc4	e1cd31b8	 strh        r3, [sp, #0x18]

; 3750 : 
; 3751 :     for (ep = 0; ep < USBD_EP_COUNT; ++ep)

  09dc8	e3a03000	 mov         r3, #0
  09dcc	e1cd31ba	 strh        r3, [sp, #0x1A]
  09dd0	ea000004	 b           |$LN7@UfnPdd_Reg|
  09dd4		 |$LN6@UfnPdd_Reg|
  09dd4	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09dd8	e2833001	 add         r3, r3, #1
  09ddc	e1a03803	 mov         r3, r3, lsl #16
  09de0	e1a03823	 mov         r3, r3, lsr #16
  09de4	e1cd31ba	 strh        r3, [sp, #0x1A]
  09de8		 |$LN7@UfnPdd_Reg|
  09de8	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09dec	e3530010	 cmp         r3, #0x10
  09df0	aa000024	 bge         |$LN5@UfnPdd_Reg|

; 3752 :     {
; 3753 :         if (pPdd->ep[ep].maxPacketSize > 0)

  09df4	e59d301c	 ldr         r3, [sp, #0x1C]
  09df8	e2831fa1	 add         r1, r3, #0xA1, 30
  09dfc	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09e00	e1a02003	 mov         r2, r3
  09e04	e3a0303c	 mov         r3, #0x3C
  09e08	e0030392	 mul         r3, r2, r3
  09e0c	e0813003	 add         r3, r1, r3
  09e10	e2833008	 add         r3, r3, #8
  09e14	e1d330b0	 ldrh        r3, [r3]
  09e18	e3530000	 cmp         r3, #0
  09e1c	da000018	 ble         |$LN4@UfnPdd_Reg|

; 3754 :         {
; 3755 :             pPdd->ep[ep].fifoOffset = offset;

  09e20	e59d301c	 ldr         r3, [sp, #0x1C]
  09e24	e2831fa1	 add         r1, r3, #0xA1, 30
  09e28	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09e2c	e1a02003	 mov         r2, r3
  09e30	e3a0303c	 mov         r3, #0x3C
  09e34	e0030392	 mul         r3, r2, r3
  09e38	e0813003	 add         r3, r1, r3
  09e3c	e283200a	 add         r2, r3, #0xA
  09e40	e1dd31b8	 ldrh        r3, [sp, #0x18]
  09e44	e1c230b0	 strh        r3, [r2]

; 3756 :             offset = offset + pPdd->ep[ep].maxPacketSize;

  09e48	e1dd31b8	 ldrh        r3, [sp, #0x18]
  09e4c	e1a00003	 mov         r0, r3
  09e50	e59d301c	 ldr         r3, [sp, #0x1C]
  09e54	e2831fa1	 add         r1, r3, #0xA1, 30
  09e58	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09e5c	e1a02003	 mov         r2, r3
  09e60	e3a0303c	 mov         r3, #0x3C
  09e64	e0030392	 mul         r3, r2, r3
  09e68	e0813003	 add         r3, r1, r3
  09e6c	e2833008	 add         r3, r3, #8
  09e70	e1d330b0	 ldrh        r3, [r3]
  09e74	e0803003	 add         r3, r0, r3
  09e78	e1a03803	 mov         r3, r3, lsl #16
  09e7c	e1a03823	 mov         r3, r3, lsr #16
  09e80	e1cd31b8	 strh        r3, [sp, #0x18]
  09e84		 |$LN4@UfnPdd_Reg|

; 3757 :         }
; 3758 :     }

  09e84	eaffffd2	 b           |$LN6@UfnPdd_Reg|
  09e88		 |$LN5@UfnPdd_Reg|

; 3759 : 
; 3760 :     /* Clear EP's maxPacketSize */
; 3761 :     for (ep = 0; ep < USBD_EP_COUNT; ++ep)

  09e88	e3a03000	 mov         r3, #0
  09e8c	e1cd31ba	 strh        r3, [sp, #0x1A]
  09e90	ea000004	 b           |$LN3@UfnPdd_Reg|
  09e94		 |$LN2@UfnPdd_Reg|
  09e94	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09e98	e2833001	 add         r3, r3, #1
  09e9c	e1a03803	 mov         r3, r3, lsl #16
  09ea0	e1a03823	 mov         r3, r3, lsr #16
  09ea4	e1cd31ba	 strh        r3, [sp, #0x1A]
  09ea8		 |$LN3@UfnPdd_Reg|
  09ea8	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09eac	e3530010	 cmp         r3, #0x10
  09eb0	aa00000a	 bge         |$LN1@UfnPdd_Reg|

; 3762 :         pPdd->ep[ep].maxPacketSize = 0;

  09eb4	e59d301c	 ldr         r3, [sp, #0x1C]
  09eb8	e2831fa1	 add         r1, r3, #0xA1, 30
  09ebc	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  09ec0	e1a02003	 mov         r2, r3
  09ec4	e3a0303c	 mov         r3, #0x3C
  09ec8	e0030392	 mul         r3, r2, r3
  09ecc	e0813003	 add         r3, r1, r3
  09ed0	e2832008	 add         r2, r3, #8
  09ed4	e3a03000	 mov         r3, #0
  09ed8	e1c230b0	 strh        r3, [r2]
  09edc	eaffffec	 b           |$LN2@UfnPdd_Reg|
  09ee0		 |$LN1@UfnPdd_Reg|

; 3763 : 
; 3764 :     rc = ERROR_SUCCESS;

  09ee0	e3a03000	 mov         r3, #0
  09ee4	e58d3004	 str         r3, [sp, #4]

; 3765 : 
; 3766 :     PRINTMSG(ZONE_FUNCTION, (L"-UfnPdd_RegisterDevice:\r\n"));

  09ee8	e59f306c	 ldr         r3, [pc, #0x6C]
  09eec	e5933440	 ldr         r3, [r3, #0x440]
  09ef0	e3130a01	 tst         r3, #1, 20
  09ef4	0a00000f	 beq         |$LN56@UfnPdd_Reg|
  09ef8	e59f305c	 ldr         r3, [pc, #0x5C]
  09efc	e5933440	 ldr         r3, [r3, #0x440]
  09f00	e3130801	 tst         r3, #1, 16
  09f04	0a000004	 beq         |$LN54@UfnPdd_Reg|
  09f08	e59f0048	 ldr         r0, [pc, #0x48]
  09f0c	eb000000	 bl          CeLogMsg
  09f10	e3a03001	 mov         r3, #1
  09f14	e58d3070	 str         r3, [sp, #0x70]
  09f18	ea000003	 b           |$LN55@UfnPdd_Reg|
  09f1c		 |$LN54@UfnPdd_Reg|
  09f1c	e59f0034	 ldr         r0, [pc, #0x34]
  09f20	eb000000	 bl          NKDbgPrintfW
  09f24	e3a03000	 mov         r3, #0
  09f28	e58d3070	 str         r3, [sp, #0x70]
  09f2c		 |$LN55@UfnPdd_Reg|
  09f2c	e3a03001	 mov         r3, #1
  09f30	e58d3074	 str         r3, [sp, #0x74]
  09f34	ea000001	 b           |$LN57@UfnPdd_Reg|
  09f38		 |$LN56@UfnPdd_Reg|
  09f38	e3a03000	 mov         r3, #0
  09f3c	e58d3074	 str         r3, [sp, #0x74]
  09f40		 |$LN57@UfnPdd_Reg|

; 3767 :     return (rc);

  09f40	e59d3004	 ldr         r3, [sp, #4]
  09f44	e58d3028	 str         r3, [sp, #0x28]
  09f48		 |$LN26@UfnPdd_Reg|

; 3768 : }

  09f48	e59d0028	 ldr         r0, [sp, #0x28]
  09f4c	e28dd078	 add         sp, sp, #0x78
  09f50	e89d6000	 ldmia       sp, {sp, lr}
  09f54	e12fff1e	 bx          lr
  09f58		 |$LN61@UfnPdd_Reg|
  09f58		 |$LN62@UfnPdd_Reg|
  09f58	00000000	 DCD         |??_C@_1DE@DEEMMONE@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  09f5c		 |$LN63@UfnPdd_Reg|
  09f5c	00000000	 DCD         |dpCurSettings|
  09f60		 |$LN64@UfnPdd_Reg|
  09f60	00000000	 DCD         |??_C@_1EI@ICOEPDCD@?$AAH?$AAS?$AA?5?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF@|
  09f64		 |$LN65@UfnPdd_Reg|
  09f64	00000000	 DCD         |??_C@_1EG@EPCDBDOB@?$AAH?$AAS?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?3@|
  09f68		 |$LN66@UfnPdd_Reg|
  09f68	00000000	 DCD         |??_C@_1EI@KADAJJLO@?$AAF?$AAS?$AA?5?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF@|
  09f6c		 |$LN67@UfnPdd_Reg|
  09f6c	00000000	 DCD         |??_C@_1EG@OFKEENEB@?$AAF?$AAS?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAE?$AAP?$AA_?$AAC?$AAO?$AAU?$AAN?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?3@|
  09f70		 |$LN68@UfnPdd_Reg|
  09f70	00000000	 DCD         |??_C@_1KA@PIPODPPO@?$AAF?$AAu?$AAl?$AAl?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?5?$AAN?$AAu?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAa?$AAl@|
  09f74		 |$LN69@UfnPdd_Reg|
  09f74	00000000	 DCD         |??_C@_1II@BLOEHPDP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAt@|
  09f78		 |$LN70@UfnPdd_Reg|
  09f78	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  09f7c		 |$LN71@UfnPdd_Reg|
  09f7c	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  09f80		 |$LN72@UfnPdd_Reg|
  09f80	00000000	 DCD         |??_C@_1DG@NBJKHGBI@?$AA?$CL?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  09f84		 |$M50678|

			 ENDP  ; |UfnPdd_RegisterDevice|

	EXPORT	|??_C@_1EK@DBECLAKN@?$AAB?$AAu?$AAl?$AAk?$AA?5?$AAo?$AAr?$AA?5?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@GFNDDANF@?$AAI?$AAs?$AAo?$AAc?$AAh?$AAr?$AAo?$AAn?$AAo?$AAu?$AAs?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@OBHGPOKN@?$AAE?$AAP?$AA0?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@BGEOOGGN@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAE?$AAP@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IsEndpointSupportable|

  00158			 AREA	 |.pdata|, PDATA
|$T50720| DCD	|$LN35@UfnPdd_IsE@2|
	DCD	0x4000ed04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@DBECLAKN@?$AAB?$AAu?$AAl?$AAk?$AA?5?$AAo?$AAr?$AA?5?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx@| DCB "B"
	DCB	0x0, "u", 0x0, "l", 0x0, "k", 0x0, " ", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, " "
	DCB	0x0, "E", 0x0, "n", 0x0, "d", 0x0, "P", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "P", 0x0, "k", 0x0, "t"
	DCB	0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@GFNDDANF@?$AAI?$AAs?$AAo?$AAc?$AAh?$AAr?$AAo?$AAn?$AAo?$AAu?$AAs?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "s", 0x0, "o", 0x0, "c", 0x0, "h", 0x0, "r", 0x0, "o"
	DCB	0x0, "n", 0x0, "o", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@OBHGPOKN@?$AAE?$AAP?$AA0?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "x"
	DCB	0x0, "P", 0x0, "k", 0x0, "t", 0x0, "S", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@BGEOOGGN@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAE?$AAP@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "s", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "S"
	DCB	0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t"
	DCB	0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  09f84			 AREA	 |.text|, CODE, ARM

  09f84		 |UfnPdd_IsEndpointSupportable| PROC

; 3806 : {

  09f84		 |$LN35@UfnPdd_IsE@2|
  09f84	e1a0c00d	 mov         r12, sp
  09f88	e92d000f	 stmdb       sp!, {r0 - r3}
  09f8c	e92d5000	 stmdb       sp!, {r12, lr}
  09f90	e24dd03c	 sub         sp, sp, #0x3C
  09f94		 |$M50717|

; 3807 :     DWORD rc = ERROR_INVALID_PARAMETER;

  09f94	e3a03057	 mov         r3, #0x57
  09f98	e58d3000	 str         r3, [sp]

; 3808 :     WORD  packetSize;
; 3809 :     BYTE  transferType;
; 3810 : 
; 3811 : 	UNREFERENCED_PARAMETER(alternateSetting);
; 3812 : 	UNREFERENCED_PARAMETER(interfaceNumber);
; 3813 : 	UNREFERENCED_PARAMETER(configurationValue);
; 3814 : 	UNREFERENCED_PARAMETER(speed);
; 3815 : 	UNREFERENCED_PARAMETER(pvPddContext);
; 3816 : 
; 3817 :     PRINTMSG(ZONE_FUNCTION, (L"+UfnPdd_IsEndpointSupportable EP %u\r\n",
; 3818 :                              endpoint));

  09f9c	e59f337c	 ldr         r3, [pc, #0x37C]
  09fa0	e5933440	 ldr         r3, [r3, #0x440]
  09fa4	e3130a01	 tst         r3, #1, 20
  09fa8	0a000011	 beq         |$LN13@UfnPdd_IsE@2|
  09fac	e59f336c	 ldr         r3, [pc, #0x36C]
  09fb0	e5933440	 ldr         r3, [r3, #0x440]
  09fb4	e3130801	 tst         r3, #1, 16
  09fb8	0a000005	 beq         |$LN11@UfnPdd_IsE@2|
  09fbc	e59d1048	 ldr         r1, [sp, #0x48]
  09fc0	e59f036c	 ldr         r0, [pc, #0x36C]
  09fc4	eb000000	 bl          CeLogMsg
  09fc8	e3a03001	 mov         r3, #1
  09fcc	e58d300c	 str         r3, [sp, #0xC]
  09fd0	ea000004	 b           |$LN12@UfnPdd_IsE@2|
  09fd4		 |$LN11@UfnPdd_IsE@2|
  09fd4	e59d1048	 ldr         r1, [sp, #0x48]
  09fd8	e59f0354	 ldr         r0, [pc, #0x354]
  09fdc	eb000000	 bl          NKDbgPrintfW
  09fe0	e3a03000	 mov         r3, #0
  09fe4	e58d300c	 str         r3, [sp, #0xC]
  09fe8		 |$LN12@UfnPdd_IsE@2|
  09fe8	e3a03001	 mov         r3, #1
  09fec	e58d3010	 str         r3, [sp, #0x10]
  09ff0	ea000001	 b           |$LN14@UfnPdd_IsE@2|
  09ff4		 |$LN13@UfnPdd_IsE@2|
  09ff4	e3a03000	 mov         r3, #0
  09ff8	e58d3010	 str         r3, [sp, #0x10]
  09ffc		 |$LN14@UfnPdd_IsE@2|

; 3819 : 
; 3820 :     /* Update maximal packet size for EP0 */
; 3821 :     if (endpoint == 0)

  09ffc	e59d3048	 ldr         r3, [sp, #0x48]
  0a000	e3530000	 cmp         r3, #0
  0a004	1a000055	 bne         |$LN8@UfnPdd_IsE@2|

; 3822 :     {
; 3823 :         PRINTMSG(ZONE_PDD_INIT, (L"EP0 MaxPktSize 0x%x\r\n",
; 3824 :                                  pEndpointDesc->wMaxPacketSize));

  0a008	e59f3310	 ldr         r3, [pc, #0x310]
  0a00c	e5933440	 ldr         r3, [r3, #0x440]
  0a010	e3130c01	 tst         r3, #1, 24
  0a014	0a00001f	 beq         |$LN17@UfnPdd_IsE@2|
  0a018	e59f3300	 ldr         r3, [pc, #0x300]
  0a01c	e5933440	 ldr         r3, [r3, #0x440]
  0a020	e3130801	 tst         r3, #1, 16
  0a024	0a00000c	 beq         |$LN15@UfnPdd_IsE@2|
  0a028	e59d3050	 ldr         r3, [sp, #0x50]
  0a02c	e2831004	 add         r1, r3, #4
  0a030	e5d13001	 ldrb        r3, [r1, #1]
  0a034	e1a03403	 mov         r3, r3, lsl #8
  0a038	e1a02803	 mov         r2, r3, lsl #16
  0a03c	e1a02822	 mov         r2, r2, lsr #16
  0a040	e5d13000	 ldrb        r3, [r1]
  0a044	e1831002	 orr         r1, r3, r2
  0a048	e59f02e0	 ldr         r0, [pc, #0x2E0]
  0a04c	eb000000	 bl          CeLogMsg
  0a050	e3a03001	 mov         r3, #1
  0a054	e58d3014	 str         r3, [sp, #0x14]
  0a058	ea00000b	 b           |$LN16@UfnPdd_IsE@2|
  0a05c		 |$LN15@UfnPdd_IsE@2|
  0a05c	e59d3050	 ldr         r3, [sp, #0x50]
  0a060	e2831004	 add         r1, r3, #4
  0a064	e5d13001	 ldrb        r3, [r1, #1]
  0a068	e1a03403	 mov         r3, r3, lsl #8
  0a06c	e1a02803	 mov         r2, r3, lsl #16
  0a070	e1a02822	 mov         r2, r2, lsr #16
  0a074	e5d13000	 ldrb        r3, [r1]
  0a078	e1831002	 orr         r1, r3, r2
  0a07c	e59f02ac	 ldr         r0, [pc, #0x2AC]
  0a080	eb000000	 bl          NKDbgPrintfW
  0a084	e3a03000	 mov         r3, #0
  0a088	e58d3014	 str         r3, [sp, #0x14]
  0a08c		 |$LN16@UfnPdd_IsE@2|
  0a08c	e3a03001	 mov         r3, #1
  0a090	e58d3018	 str         r3, [sp, #0x18]
  0a094	ea000001	 b           |$LN18@UfnPdd_IsE@2|
  0a098		 |$LN17@UfnPdd_IsE@2|
  0a098	e3a03000	 mov         r3, #0
  0a09c	e58d3018	 str         r3, [sp, #0x18]
  0a0a0		 |$LN18@UfnPdd_IsE@2|

; 3825 : 
; 3826 :         DEBUGCHK(pEndpointDesc->wMaxPacketSize <= 64);

  0a0a0	e59d3050	 ldr         r3, [sp, #0x50]
  0a0a4	e2831004	 add         r1, r3, #4
  0a0a8	e5d13001	 ldrb        r3, [r1, #1]
  0a0ac	e1a03403	 mov         r3, r3, lsl #8
  0a0b0	e1a02803	 mov         r2, r3, lsl #16
  0a0b4	e1a02822	 mov         r2, r2, lsr #16
  0a0b8	e5d13000	 ldrb        r3, [r1]
  0a0bc	e1833002	 orr         r3, r3, r2
  0a0c0	e3530040	 cmp         r3, #0x40
  0a0c4	ca000002	 bgt         |$LN19@UfnPdd_IsE@2|
  0a0c8	e3a03001	 mov         r3, #1
  0a0cc	e58d301c	 str         r3, [sp, #0x1C]
  0a0d0	ea000008	 b           |$LN20@UfnPdd_IsE@2|
  0a0d4		 |$LN19@UfnPdd_IsE@2|
  0a0d4	e3a03c0e	 mov         r3, #0xE, 24
  0a0d8	e38330f2	 orr         r3, r3, #0xF2
  0a0dc	e59f2248	 ldr         r2, [pc, #0x248]
  0a0e0	e59f1238	 ldr         r1, [pc, #0x238]
  0a0e4	e59f023c	 ldr         r0, [pc, #0x23C]
  0a0e8	eb000000	 bl          NKDbgPrintfW
  0a0ec	e6000010	 __debugbreak_ce
  0a0f0	e3a03000	 mov         r3, #0
  0a0f4	e58d301c	 str         r3, [sp, #0x1C]
  0a0f8		 |$LN20@UfnPdd_IsE@2|

; 3827 :         DEBUGCHK(pEndpointDesc->bmAttributes == USB_ENDPOINT_TYPE_CONTROL);

  0a0f8	e59d3050	 ldr         r3, [sp, #0x50]
  0a0fc	e2833003	 add         r3, r3, #3
  0a100	e5d33000	 ldrb        r3, [r3]
  0a104	e3530000	 cmp         r3, #0
  0a108	1a000002	 bne         |$LN21@UfnPdd_IsE@2|
  0a10c	e3a03001	 mov         r3, #1
  0a110	e58d3020	 str         r3, [sp, #0x20]
  0a114	ea000008	 b           |$LN22@UfnPdd_IsE@2|
  0a118		 |$LN21@UfnPdd_IsE@2|
  0a118	e3a03c0e	 mov         r3, #0xE, 24
  0a11c	e38330f3	 orr         r3, r3, #0xF3
  0a120	e59f2204	 ldr         r2, [pc, #0x204]
  0a124	e59f11f4	 ldr         r1, [pc, #0x1F4]
  0a128	e59f01f8	 ldr         r0, [pc, #0x1F8]
  0a12c	eb000000	 bl          NKDbgPrintfW
  0a130	e6000010	 __debugbreak_ce
  0a134	e3a03000	 mov         r3, #0
  0a138	e58d3020	 str         r3, [sp, #0x20]
  0a13c		 |$LN22@UfnPdd_IsE@2|

; 3828 :         pEndpointDesc->wMaxPacketSize = 64;

  0a13c	e59d3050	 ldr         r3, [sp, #0x50]
  0a140	e2832004	 add         r2, r3, #4
  0a144	e3a03040	 mov         r3, #0x40
  0a148	e5c23000	 strb        r3, [r2]
  0a14c	e1a03423	 mov         r3, r3, lsr #8
  0a150	e5c23001	 strb        r3, [r2, #1]

; 3829 :         rc = ERROR_SUCCESS ;

  0a154	e3a03000	 mov         r3, #0
  0a158	e58d3000	 str         r3, [sp]
  0a15c	ea000068	 b           |$LN7@UfnPdd_IsE@2|
  0a160		 |$LN8@UfnPdd_IsE@2|

; 3830 :     }
; 3831 :     else if (endpoint < USBD_EP_COUNT)

  0a160	e59d3048	 ldr         r3, [sp, #0x48]
  0a164	e3530010	 cmp         r3, #0x10
  0a168	2a000065	 bcs         |$LN6@UfnPdd_IsE@2|

; 3832 :     {
; 3833 :         transferType = pEndpointDesc->bmAttributes & USB_ENDPOINT_TYPE_MASK;

  0a16c	e59d3050	 ldr         r3, [sp, #0x50]
  0a170	e2833003	 add         r3, r3, #3
  0a174	e5d33000	 ldrb        r3, [r3]
  0a178	e2033003	 and         r3, r3, #3
  0a17c	e20330ff	 and         r3, r3, #0xFF
  0a180	e5cd3004	 strb        r3, [sp, #4]

; 3834 :         DEBUGCHK(transferType != USB_ENDPOINT_TYPE_CONTROL);

  0a184	e5dd3004	 ldrb        r3, [sp, #4]
  0a188	e3530000	 cmp         r3, #0
  0a18c	0a000002	 beq         |$LN23@UfnPdd_IsE@2|
  0a190	e3a03001	 mov         r3, #1
  0a194	e58d3024	 str         r3, [sp, #0x24]
  0a198	ea000008	 b           |$LN24@UfnPdd_IsE@2|
  0a19c		 |$LN23@UfnPdd_IsE@2|
  0a19c	e3a03c0e	 mov         r3, #0xE, 24
  0a1a0	e38330fa	 orr         r3, r3, #0xFA
  0a1a4	e59f2180	 ldr         r2, [pc, #0x180]
  0a1a8	e59f1170	 ldr         r1, [pc, #0x170]
  0a1ac	e59f0174	 ldr         r0, [pc, #0x174]
  0a1b0	eb000000	 bl          NKDbgPrintfW
  0a1b4	e6000010	 __debugbreak_ce
  0a1b8	e3a03000	 mov         r3, #0
  0a1bc	e58d3024	 str         r3, [sp, #0x24]
  0a1c0		 |$LN24@UfnPdd_IsE@2|

; 3835 : 
; 3836 :         /* Validate and adjust packet size */
; 3837 :         packetSize =
; 3838 :             (pEndpointDesc->wMaxPacketSize & USB_ENDPOINT_MAX_PACKET_SIZE_MASK);

  0a1c0	e59d3050	 ldr         r3, [sp, #0x50]
  0a1c4	e2831004	 add         r1, r3, #4
  0a1c8	e5d13001	 ldrb        r3, [r1, #1]
  0a1cc	e1a03403	 mov         r3, r3, lsl #8
  0a1d0	e1a02803	 mov         r2, r3, lsl #16
  0a1d4	e1a02822	 mov         r2, r2, lsr #16
  0a1d8	e5d13000	 ldrb        r3, [r1]
  0a1dc	e1833002	 orr         r3, r3, r2
  0a1e0	e1a02003	 mov         r2, r3
  0a1e4	e3a03c07	 mov         r3, #7, 24
  0a1e8	e38330ff	 orr         r3, r3, #0xFF
  0a1ec	e0023003	 and         r3, r2, r3
  0a1f0	e1a03803	 mov         r3, r3, lsl #16
  0a1f4	e1a03823	 mov         r3, r3, lsr #16
  0a1f8	e1cd30b6	 strh        r3, [sp, #6]

; 3839 : 
; 3840 :         switch(transferType)

  0a1fc	e5dd3004	 ldrb        r3, [sp, #4]
  0a200	e58d3028	 str         r3, [sp, #0x28]
  0a204	e59d3028	 ldr         r3, [sp, #0x28]
  0a208	e3530001	 cmp         r3, #1
  0a20c	0a000006	 beq         |$LN3@UfnPdd_IsE@2|
  0a210	e59d3028	 ldr         r3, [sp, #0x28]
  0a214	e3530001	 cmp         r3, #1
  0a218	da000037	 ble         |$LN1@UfnPdd_IsE@2|
  0a21c	e59d3028	 ldr         r3, [sp, #0x28]
  0a220	e3530003	 cmp         r3, #3
  0a224	da000019	 ble         |$LN2@UfnPdd_IsE@2|
  0a228	ea000033	 b           |$LN1@UfnPdd_IsE@2|
  0a22c		 |$LN3@UfnPdd_IsE@2|

; 3841 :         {
; 3842 :             /* Isochronous EndPoint  */
; 3843 :         case USB_ENDPOINT_TYPE_ISOCHRONOUS:
; 3844 :             PRINTMSG(ZONE_PDD_INIT, (TEXT("Isochronous endpoint\r\n")));

  0a22c	e59f30ec	 ldr         r3, [pc, #0xEC]
  0a230	e5933440	 ldr         r3, [r3, #0x440]
  0a234	e3130c01	 tst         r3, #1, 24
  0a238	0a00000f	 beq         |$LN27@UfnPdd_IsE@2|
  0a23c	e59f30dc	 ldr         r3, [pc, #0xDC]
  0a240	e5933440	 ldr         r3, [r3, #0x440]
  0a244	e3130801	 tst         r3, #1, 16
  0a248	0a000004	 beq         |$LN25@UfnPdd_IsE@2|
  0a24c	e59f00d0	 ldr         r0, [pc, #0xD0]
  0a250	eb000000	 bl          CeLogMsg
  0a254	e3a03001	 mov         r3, #1
  0a258	e58d302c	 str         r3, [sp, #0x2C]
  0a25c	ea000003	 b           |$LN26@UfnPdd_IsE@2|
  0a260		 |$LN25@UfnPdd_IsE@2|
  0a260	e59f00bc	 ldr         r0, [pc, #0xBC]
  0a264	eb000000	 bl          NKDbgPrintfW
  0a268	e3a03000	 mov         r3, #0
  0a26c	e58d302c	 str         r3, [sp, #0x2C]
  0a270		 |$LN26@UfnPdd_IsE@2|
  0a270	e3a03001	 mov         r3, #1
  0a274	e58d3030	 str         r3, [sp, #0x30]
  0a278	ea000001	 b           |$LN28@UfnPdd_IsE@2|
  0a27c		 |$LN27@UfnPdd_IsE@2|
  0a27c	e3a03000	 mov         r3, #0
  0a280	e58d3030	 str         r3, [sp, #0x30]
  0a284		 |$LN28@UfnPdd_IsE@2|

; 3845 :             rc = ERROR_SUCCESS;

  0a284	e3a03000	 mov         r3, #0
  0a288	e58d3000	 str         r3, [sp]

; 3846 :             break;

  0a28c	ea00001c	 b           |$LN4@UfnPdd_IsE@2|
  0a290		 |$LN2@UfnPdd_IsE@2|

; 3847 :         case USB_ENDPOINT_TYPE_BULK:
; 3848 :         case USB_ENDPOINT_TYPE_INTERRUPT:
; 3849 :             PRINTMSG(ZONE_PDD_INIT,
; 3850 :                      (TEXT("Bulk or Intr EndPoint PktSize 0x%x\r\n"),
; 3851 :                       packetSize));

  0a290	e59f3088	 ldr         r3, [pc, #0x88]
  0a294	e5933440	 ldr         r3, [r3, #0x440]
  0a298	e3130c01	 tst         r3, #1, 24
  0a29c	0a000011	 beq         |$LN31@UfnPdd_IsE@2|
  0a2a0	e59f3078	 ldr         r3, [pc, #0x78]
  0a2a4	e5933440	 ldr         r3, [r3, #0x440]
  0a2a8	e3130801	 tst         r3, #1, 16
  0a2ac	0a000005	 beq         |$LN29@UfnPdd_IsE@2|
  0a2b0	e1dd10b6	 ldrh        r1, [sp, #6]
  0a2b4	e59f0060	 ldr         r0, [pc, #0x60]
  0a2b8	eb000000	 bl          CeLogMsg
  0a2bc	e3a03001	 mov         r3, #1
  0a2c0	e58d3034	 str         r3, [sp, #0x34]
  0a2c4	ea000004	 b           |$LN30@UfnPdd_IsE@2|
  0a2c8		 |$LN29@UfnPdd_IsE@2|
  0a2c8	e1dd10b6	 ldrh        r1, [sp, #6]
  0a2cc	e59f0048	 ldr         r0, [pc, #0x48]
  0a2d0	eb000000	 bl          NKDbgPrintfW
  0a2d4	e3a03000	 mov         r3, #0
  0a2d8	e58d3034	 str         r3, [sp, #0x34]
  0a2dc		 |$LN30@UfnPdd_IsE@2|
  0a2dc	e3a03001	 mov         r3, #1
  0a2e0	e58d3038	 str         r3, [sp, #0x38]
  0a2e4	ea000001	 b           |$LN32@UfnPdd_IsE@2|
  0a2e8		 |$LN31@UfnPdd_IsE@2|
  0a2e8	e3a03000	 mov         r3, #0
  0a2ec	e58d3038	 str         r3, [sp, #0x38]
  0a2f0		 |$LN32@UfnPdd_IsE@2|

; 3852 :             rc = ERROR_SUCCESS ;

  0a2f0	e3a03000	 mov         r3, #0
  0a2f4	e58d3000	 str         r3, [sp]

; 3853 :             break;

  0a2f8	ea000001	 b           |$LN4@UfnPdd_IsE@2|
  0a2fc		 |$LN1@UfnPdd_IsE@2|

; 3854 :         default:
; 3855 :             rc = ERROR_INVALID_PARAMETER;

  0a2fc	e3a03057	 mov         r3, #0x57
  0a300	e58d3000	 str         r3, [sp]
  0a304		 |$LN4@UfnPdd_IsE@2|
  0a304		 |$LN6@UfnPdd_IsE@2|
  0a304		 |$LN7@UfnPdd_IsE@2|

; 3856 :             break;
; 3857 :         }
; 3858 : 
; 3859 :         /*
; 3860 :          * If Requested Size is larger than what is supported ... change it.
; 3861 :          * Note only try and change it if no errors so far... meaning Ep is
; 3862 :          * Supportable.
; 3863 :          */
; 3864 : 
; 3865 :     }
; 3866 : 
; 3867 :     return (rc);

  0a304	e59d3000	 ldr         r3, [sp]
  0a308	e58d3008	 str         r3, [sp, #8]

; 3868 : 
; 3869 : }

  0a30c	e59d0008	 ldr         r0, [sp, #8]
  0a310	e28dd03c	 add         sp, sp, #0x3C
  0a314	e89d6000	 ldmia       sp, {sp, lr}
  0a318	e12fff1e	 bx          lr
  0a31c		 |$LN36@UfnPdd_IsE@2|
  0a31c		 |$LN37@UfnPdd_IsE@2|
  0a31c	00000000	 DCD         |??_C@_1EK@DBECLAKN@?$AAB?$AAu?$AAl?$AAk?$AA?5?$AAo?$AAr?$AA?5?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx@|
  0a320		 |$LN38@UfnPdd_IsE@2|
  0a320	00000000	 DCD         |dpCurSettings|
  0a324		 |$LN39@UfnPdd_IsE@2|
  0a324	00000000	 DCD         |??_C@_1CO@GFNDDANF@?$AAI?$AAs?$AAo?$AAc?$AAh?$AAr?$AAo?$AAn?$AAo?$AAu?$AAs?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0a328		 |$LN40@UfnPdd_IsE@2|
  0a328	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0a32c		 |$LN41@UfnPdd_IsE@2|
  0a32c	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0a330		 |$LN42@UfnPdd_IsE@2|
  0a330	00000000	 DCD         |??_C@_1CM@OBHGPOKN@?$AAE?$AAP?$AA0?$AA?5?$AAM?$AAa?$AAx?$AAP?$AAk?$AAt?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0a334		 |$LN43@UfnPdd_IsE@2|
  0a334	00000000	 DCD         |??_C@_1EM@BGEOOGGN@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAE?$AAP@|
  0a338		 |$M50718|

			 ENDP  ; |UfnPdd_IsEndpointSupportable|

	EXPORT	|??_C@_1EE@DCCLLGOE@?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAE?$AAP?$AA?5?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@OOBJPIMN@?$AAR?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@GHFLLCPN@?$AAT?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@DLLCCIAL@?$AAE?$AAP?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@HFBHMGGD@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAA?$AAt?$AAt?$AAr?$AAi?$AAb?$AAu?$AAt?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@EDCAFIIN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@JMONKOM@?$AAN?$AAu?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@PIIPDMOP@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IsConfigurationSupportable|

  00160			 AREA	 |.pdata|, PDATA
|$T50776| DCD	|$LN70@UfnPdd_IsC|
	DCD	0x4001c204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DCCLLGOE@?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAE?$AAP?$AA?5?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@| DCB "T"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "O", 0x0, "f", 0x0, "f", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@OOBJPIMN@?$AAR?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "X", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@GHFLLCPN@?$AAT?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "X", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DLLCCIAL@?$AAE?$AAP?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HFBHMGGD@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAA?$AAt?$AAt?$AAr?$AAi?$AAb?$AAu?$AAt?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5@| DCB "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "A"
	DCB	0x0, "d", 0x0, "d", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "A", 0x0, "t", 0x0, "t"
	DCB	0x0, "r", 0x0, "i", 0x0, "b", 0x0, "u", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "M", 0x0, "a", 0x0, "x", 0x0, "P", 0x0, "k"
	DCB	0x0, "t", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@EDCAFIIN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f"
	DCB	0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "S", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "r", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f", 0x0, "u", 0x0, "l"
	DCB	0x0, "l", 0x0, "-", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "t", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@JMONKOM@?$AAN?$AAu?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "N"
	DCB	0x0, "u", 0x0, "m", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@PIIPDMOP@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "f", 0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "S", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, ":", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0a338			 AREA	 |.text|, CODE, ARM

  0a338		 |UfnPdd_IsConfigurationSupportable| PROC

; 3894 : {

  0a338		 |$LN70@UfnPdd_IsC|
  0a338	e1a0c00d	 mov         r12, sp
  0a33c	e92d0007	 stmdb       sp!, {r0 - r2}
  0a340	e92d5000	 stmdb       sp!, {r12, lr}
  0a344	e24dd078	 sub         sp, sp, #0x78
  0a348		 |$M50773|

; 3895 :     DWORD dwNAltSettings = 0;

  0a348	e3a03000	 mov         r3, #0
  0a34c	e58d3014	 str         r3, [sp, #0x14]

; 3896 :     DWORD rc             = ERROR_INVALID_PARAMETER;

  0a350	e3a03057	 mov         r3, #0x57
  0a354	e58d3008	 str         r3, [sp, #8]

; 3897 :     UFN_INTERFACE *pIFC  = NULL;

  0a358	e3a03000	 mov         r3, #0
  0a35c	e58d3010	 str         r3, [sp, #0x10]

; 3898 :     UFN_ENDPOINT *pEP    = NULL;

  0a360	e3a03000	 mov         r3, #0
  0a364	e58d3018	 str         r3, [sp, #0x18]

; 3899 :     WORD ifc             = 0;

  0a368	e3a03000	 mov         r3, #0
  0a36c	e1cd32b2	 strh        r3, [sp, #0x22]

; 3900 : 	WORD epx             = 0;

  0a370	e3a03000	 mov         r3, #0
  0a374	e1cd30bc	 strh        r3, [sp, #0xC]

; 3901 : 	WORD count           = 0;

  0a378	e3a03000	 mov         r3, #0
  0a37c	e1cd30b4	 strh        r3, [sp, #4]

; 3902 :     WORD offset          = 0;

  0a380	e3a03000	 mov         r3, #0
  0a384	e1cd31be	 strh        r3, [sp, #0x1E]

; 3903 : 	WORD size            = 0;

  0a388	e3a03000	 mov         r3, #0
  0a38c	e1cd31bc	 strh        r3, [sp, #0x1C]

; 3904 :     WORD maxPktSize      = 0;

  0a390	e3a03000	 mov         r3, #0
  0a394	e1cd32b0	 strh        r3, [sp, #0x20]

; 3905 : 
; 3906 : 	UNREFERENCED_PARAMETER(pvPddContext);
; 3907 : 
; 3908 :     PRINTMSG(ZONE_FUNCTION, (L"+UfnPdd_IsConfigurationSupportable:\r\n"));

  0a398	e59f3678	 ldr         r3, [pc, #0x678]
  0a39c	e5933440	 ldr         r3, [r3, #0x440]
  0a3a0	e3130a01	 tst         r3, #1, 20
  0a3a4	0a00000f	 beq         |$LN30@UfnPdd_IsC|
  0a3a8	e59f3668	 ldr         r3, [pc, #0x668]
  0a3ac	e5933440	 ldr         r3, [r3, #0x440]
  0a3b0	e3130801	 tst         r3, #1, 16
  0a3b4	0a000004	 beq         |$LN28@UfnPdd_IsC|
  0a3b8	e59f067c	 ldr         r0, [pc, #0x67C]
  0a3bc	eb000000	 bl          CeLogMsg
  0a3c0	e3a03001	 mov         r3, #1
  0a3c4	e58d3030	 str         r3, [sp, #0x30]
  0a3c8	ea000003	 b           |$LN29@UfnPdd_IsC|
  0a3cc		 |$LN28@UfnPdd_IsC|
  0a3cc	e59f0668	 ldr         r0, [pc, #0x668]
  0a3d0	eb000000	 bl          NKDbgPrintfW
  0a3d4	e3a03000	 mov         r3, #0
  0a3d8	e58d3030	 str         r3, [sp, #0x30]
  0a3dc		 |$LN29@UfnPdd_IsC|
  0a3dc	e3a03001	 mov         r3, #1
  0a3e0	e58d3034	 str         r3, [sp, #0x34]
  0a3e4	ea000001	 b           |$LN31@UfnPdd_IsC|
  0a3e8		 |$LN30@UfnPdd_IsC|
  0a3e8	e3a03000	 mov         r3, #0
  0a3ec	e58d3034	 str         r3, [sp, #0x34]
  0a3f0		 |$LN31@UfnPdd_IsC|

; 3909 : 
; 3910 :     /* We must start with offset 64 (EP0 size) */
; 3911 :     offset = 64;

  0a3f0	e3a03040	 mov         r3, #0x40
  0a3f4	e1cd31be	 strh        r3, [sp, #0x1E]

; 3912 : 
; 3913 :     /* Clear number of end points */
; 3914 :     count = 0;

  0a3f8	e3a03000	 mov         r3, #0
  0a3fc	e1cd30b4	 strh        r3, [sp, #4]

; 3915 : 
; 3916 :     PRINTMSG(ZONE_PDD_INIT, (L"NumInterfaces 0x%x\r\n",
; 3917 :                              pConfiguration->Descriptor.bNumInterfaces));

  0a400	e59f3610	 ldr         r3, [pc, #0x610]
  0a404	e5933440	 ldr         r3, [r3, #0x440]
  0a408	e3130c01	 tst         r3, #1, 24
  0a40c	0a000015	 beq         |$LN34@UfnPdd_IsC|
  0a410	e59f3600	 ldr         r3, [pc, #0x600]
  0a414	e5933440	 ldr         r3, [r3, #0x440]
  0a418	e3130801	 tst         r3, #1, 16
  0a41c	0a000007	 beq         |$LN32@UfnPdd_IsC|
  0a420	e59d3088	 ldr         r3, [sp, #0x88]
  0a424	e2833008	 add         r3, r3, #8
  0a428	e5d31000	 ldrb        r1, [r3]
  0a42c	e59f0604	 ldr         r0, [pc, #0x604]
  0a430	eb000000	 bl          CeLogMsg
  0a434	e3a03001	 mov         r3, #1
  0a438	e58d3038	 str         r3, [sp, #0x38]
  0a43c	ea000006	 b           |$LN33@UfnPdd_IsC|
  0a440		 |$LN32@UfnPdd_IsC|
  0a440	e59d3088	 ldr         r3, [sp, #0x88]
  0a444	e2833008	 add         r3, r3, #8
  0a448	e5d31000	 ldrb        r1, [r3]
  0a44c	e59f05e4	 ldr         r0, [pc, #0x5E4]
  0a450	eb000000	 bl          NKDbgPrintfW
  0a454	e3a03000	 mov         r3, #0
  0a458	e58d3038	 str         r3, [sp, #0x38]
  0a45c		 |$LN33@UfnPdd_IsC|
  0a45c	e3a03001	 mov         r3, #1
  0a460	e58d303c	 str         r3, [sp, #0x3C]
  0a464	ea000001	 b           |$LN35@UfnPdd_IsC|
  0a468		 |$LN34@UfnPdd_IsC|
  0a468	e3a03000	 mov         r3, #0
  0a46c	e58d303c	 str         r3, [sp, #0x3C]
  0a470		 |$LN35@UfnPdd_IsC|

; 3918 : 
; 3919 :     dwNAltSettings = GetTotalAltSettingCount(pConfiguration);

  0a470	e59d0088	 ldr         r0, [sp, #0x88]
  0a474	eb000000	 bl          GetTotalAltSettingCount
  0a478	e58d0040	 str         r0, [sp, #0x40]
  0a47c	e59d3040	 ldr         r3, [sp, #0x40]
  0a480	e58d3014	 str         r3, [sp, #0x14]

; 3920 :     if( dwNAltSettings == INVALID_ALTSETTING_COUNT )

  0a484	e59d2014	 ldr         r2, [sp, #0x14]
  0a488	e3a03cff	 mov         r3, #0xFF, 24
  0a48c	e38330ff	 orr         r3, r3, #0xFF
  0a490	e1520003	 cmp         r2, r3
  0a494	1a000009	 bne         |$LN25@UfnPdd_IsC|

; 3921 :     {
; 3922 :         ERRORMSG(TRUE, (TEXT("UfnPdd_IsConfigurationSupportable: Error retrieving full-speed altsetting count")) );

  0a498	e3a02c0f	 mov         r2, #0xF, 24
  0a49c	e3822052	 orr         r2, r2, #0x52
  0a4a0	e59f158c	 ldr         r1, [pc, #0x58C]
  0a4a4	e59f0584	 ldr         r0, [pc, #0x584]
  0a4a8	eb000000	 bl          NKDbgPrintfW
  0a4ac	e59f0578	 ldr         r0, [pc, #0x578]
  0a4b0	eb000000	 bl          NKDbgPrintfW

; 3923 :         return ERROR_INVALID_PARAMETER;

  0a4b4	e3a03057	 mov         r3, #0x57
  0a4b8	e58d3024	 str         r3, [sp, #0x24]
  0a4bc	ea000150	 b           |$LN26@UfnPdd_IsC|
  0a4c0		 |$LN25@UfnPdd_IsC|

; 3924 :     }
; 3925 : 
; 3926 : 
; 3927 :     /* For each interface in configuration */
; 3928 :     for (ifc = 0; ifc < dwNAltSettings; ifc++)

  0a4c0	e3a03000	 mov         r3, #0
  0a4c4	e1cd32b2	 strh        r3, [sp, #0x22]
  0a4c8	ea000004	 b           |$LN24@UfnPdd_IsC|
  0a4cc		 |$LN23@UfnPdd_IsC|
  0a4cc	e1dd32b2	 ldrh        r3, [sp, #0x22]
  0a4d0	e2833001	 add         r3, r3, #1
  0a4d4	e1a03803	 mov         r3, r3, lsl #16
  0a4d8	e1a03823	 mov         r3, r3, lsr #16
  0a4dc	e1cd32b2	 strh        r3, [sp, #0x22]
  0a4e0		 |$LN24@UfnPdd_IsC|
  0a4e0	e1dd22b2	 ldrh        r2, [sp, #0x22]
  0a4e4	e59d3014	 ldr         r3, [sp, #0x14]
  0a4e8	e1520003	 cmp         r2, r3
  0a4ec	2a000120	 bcs         |$LN22@UfnPdd_IsC|

; 3929 :     {
; 3930 :         /* For each endpoint in interface */
; 3931 :         pIFC = &pConfiguration->pInterfaces[ifc];

  0a4f0	e59d3088	 ldr         r3, [sp, #0x88]
  0a4f4	e2830018	 add         r0, r3, #0x18
  0a4f8	e1dd32b2	 ldrh        r3, [sp, #0x22]
  0a4fc	e1a01003	 mov         r1, r3
  0a500	e3a0301c	 mov         r3, #0x1C
  0a504	e0020391	 mul         r2, r1, r3
  0a508	e5903000	 ldr         r3, [r0]
  0a50c	e0833002	 add         r3, r3, r2
  0a510	e58d3010	 str         r3, [sp, #0x10]

; 3932 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  0a514	e3a03000	 mov         r3, #0
  0a518	e1cd30bc	 strh        r3, [sp, #0xC]
  0a51c	ea000004	 b           |$LN21@UfnPdd_IsC|
  0a520		 |$LN20@UfnPdd_IsC|
  0a520	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0a524	e2833001	 add         r3, r3, #1
  0a528	e1a03803	 mov         r3, r3, lsl #16
  0a52c	e1a03823	 mov         r3, r3, lsr #16
  0a530	e1cd30bc	 strh        r3, [sp, #0xC]
  0a534		 |$LN21@UfnPdd_IsC|
  0a534	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0a538	e1a02003	 mov         r2, r3
  0a53c	e59d3010	 ldr         r3, [sp, #0x10]
  0a540	e2833008	 add         r3, r3, #8
  0a544	e5d33000	 ldrb        r3, [r3]
  0a548	e1520003	 cmp         r2, r3
  0a54c	aa0000fe	 bge         |$LN19@UfnPdd_IsC|

; 3933 :         {
; 3934 :             pEP = &pIFC->pEndpoints[epx];

  0a550	e59d3010	 ldr         r3, [sp, #0x10]
  0a554	e2830018	 add         r0, r3, #0x18
  0a558	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0a55c	e1a01003	 mov         r1, r3
  0a560	e3a03014	 mov         r3, #0x14
  0a564	e0020391	 mul         r2, r1, r3
  0a568	e5903000	 ldr         r3, [r0]
  0a56c	e0833002	 add         r3, r3, r2
  0a570	e58d3018	 str         r3, [sp, #0x18]

; 3935 : 
; 3936 :             /* We support maximal sizes 8, 16, 32 and 64 bytes for non-ISO */
; 3937 :             size = pEP->Descriptor.wMaxPacketSize;

  0a574	e59d3018	 ldr         r3, [sp, #0x18]
  0a578	e2831008	 add         r1, r3, #8
  0a57c	e5d13001	 ldrb        r3, [r1, #1]
  0a580	e1a03403	 mov         r3, r3, lsl #8
  0a584	e1a02803	 mov         r2, r3, lsl #16
  0a588	e1a02822	 mov         r2, r2, lsr #16
  0a58c	e5d13000	 ldrb        r3, [r1]
  0a590	e1833002	 orr         r3, r3, r2
  0a594	e1cd31bc	 strh        r3, [sp, #0x1C]

; 3938 : 
; 3939 :             PRINTMSG(ZONE_PDD_INIT, (L"EP %u Addr 0x%x Attributes 0x%x MaxPktSize 0x%x\r\n",
; 3940 :                                      epx, pEP->Descriptor.bEndpointAddress,
; 3941 :                                      pEP->Descriptor.bmAttributes,
; 3942 :                                      pEP->Descriptor.wMaxPacketSize));

  0a598	e59f3478	 ldr         r3, [pc, #0x478]
  0a59c	e5933440	 ldr         r3, [r3, #0x440]
  0a5a0	e3130c01	 tst         r3, #1, 24
  0a5a4	0a00002f	 beq         |$LN38@UfnPdd_IsC|
  0a5a8	e59f3468	 ldr         r3, [pc, #0x468]
  0a5ac	e5933440	 ldr         r3, [r3, #0x440]
  0a5b0	e3130801	 tst         r3, #1, 16
  0a5b4	0a000014	 beq         |$LN36@UfnPdd_IsC|
  0a5b8	e59d3018	 ldr         r3, [sp, #0x18]
  0a5bc	e2831008	 add         r1, r3, #8
  0a5c0	e5d13001	 ldrb        r3, [r1, #1]
  0a5c4	e1a03403	 mov         r3, r3, lsl #8
  0a5c8	e1a02803	 mov         r2, r3, lsl #16
  0a5cc	e1a02822	 mov         r2, r2, lsr #16
  0a5d0	e5d13000	 ldrb        r3, [r1]
  0a5d4	e1833002	 orr         r3, r3, r2
  0a5d8	e58d3000	 str         r3, [sp]
  0a5dc	e59d3018	 ldr         r3, [sp, #0x18]
  0a5e0	e2833007	 add         r3, r3, #7
  0a5e4	e5d33000	 ldrb        r3, [r3]
  0a5e8	e59d2018	 ldr         r2, [sp, #0x18]
  0a5ec	e2822006	 add         r2, r2, #6
  0a5f0	e5d22000	 ldrb        r2, [r2]
  0a5f4	e1dd10bc	 ldrh        r1, [sp, #0xC]
  0a5f8	e59f0428	 ldr         r0, [pc, #0x428]
  0a5fc	eb000000	 bl          CeLogMsg
  0a600	e3a03001	 mov         r3, #1
  0a604	e58d3044	 str         r3, [sp, #0x44]
  0a608	ea000013	 b           |$LN37@UfnPdd_IsC|
  0a60c		 |$LN36@UfnPdd_IsC|
  0a60c	e59d3018	 ldr         r3, [sp, #0x18]
  0a610	e2831008	 add         r1, r3, #8
  0a614	e5d13001	 ldrb        r3, [r1, #1]
  0a618	e1a03403	 mov         r3, r3, lsl #8
  0a61c	e1a02803	 mov         r2, r3, lsl #16
  0a620	e1a02822	 mov         r2, r2, lsr #16
  0a624	e5d13000	 ldrb        r3, [r1]
  0a628	e1833002	 orr         r3, r3, r2
  0a62c	e58d3000	 str         r3, [sp]
  0a630	e59d3018	 ldr         r3, [sp, #0x18]
  0a634	e2833007	 add         r3, r3, #7
  0a638	e5d33000	 ldrb        r3, [r3]
  0a63c	e59d2018	 ldr         r2, [sp, #0x18]
  0a640	e2822006	 add         r2, r2, #6
  0a644	e5d22000	 ldrb        r2, [r2]
  0a648	e1dd10bc	 ldrh        r1, [sp, #0xC]
  0a64c	e59f03d4	 ldr         r0, [pc, #0x3D4]
  0a650	eb000000	 bl          NKDbgPrintfW
  0a654	e3a03000	 mov         r3, #0
  0a658	e58d3044	 str         r3, [sp, #0x44]
  0a65c		 |$LN37@UfnPdd_IsC|
  0a65c	e3a03001	 mov         r3, #1
  0a660	e58d3048	 str         r3, [sp, #0x48]
  0a664	ea000001	 b           |$LN39@UfnPdd_IsC|
  0a668		 |$LN38@UfnPdd_IsC|
  0a668	e3a03000	 mov         r3, #0
  0a66c	e58d3048	 str         r3, [sp, #0x48]
  0a670		 |$LN39@UfnPdd_IsC|

; 3943 :             /* First round size to supported sizes */
; 3944 :             size = (WORD)(1 << Log2(size));

  0a670	e1dd01bc	 ldrh        r0, [sp, #0x1C]
  0a674	eb000000	 bl          Log2
  0a678	e58d004c	 str         r0, [sp, #0x4C]
  0a67c	e59d204c	 ldr         r2, [sp, #0x4C]
  0a680	e3a03001	 mov         r3, #1
  0a684	e1a03213	 mov         r3, r3, lsl r2
  0a688	e1a03803	 mov         r3, r3, lsl #16
  0a68c	e1a03823	 mov         r3, r3, lsr #16
  0a690	e1cd31bc	 strh        r3, [sp, #0x1C]

; 3945 : 
; 3946 :             if (speed == BS_HIGH_SPEED)

  0a694	e59d3084	 ldr         r3, [sp, #0x84]
  0a698	e3530002	 cmp         r3, #2
  0a69c	1a00001c	 bne         |$LN18@UfnPdd_IsC|

; 3947 :             {
; 3948 :                 switch (pEP->Descriptor.bmAttributes & 0x03)

  0a6a0	e59d3018	 ldr         r3, [sp, #0x18]
  0a6a4	e2833007	 add         r3, r3, #7
  0a6a8	e5d33000	 ldrb        r3, [r3]
  0a6ac	e2033003	 and         r3, r3, #3
  0a6b0	e58d3050	 str         r3, [sp, #0x50]
  0a6b4	e59d3050	 ldr         r3, [sp, #0x50]
  0a6b8	e3530003	 cmp         r3, #3
  0a6bc	8a000013	 bhi         |$LN16@UfnPdd_IsC|
  0a6c0	e59d2050	 ldr         r2, [sp, #0x50]
  0a6c4	e1a03102	 mov         r3, r2, lsl #2
  0a6c8	e083300f	 add         r3, r3, pc
  0a6cc	e5933004	 ldr         r3, [r3, #4]
  0a6d0	e08ff003	 add         pc, pc, r3
  0a6d4		 |$LN57@UfnPdd_IsC|
  0a6d4		 |$LN56@UfnPdd_IsC|
  0a6d4		 |$LN58@UfnPdd_IsC|
  0a6d4	0000000c	 DCD         0xc
  0a6d8		 |$LN59@UfnPdd_IsC|
  0a6d8	00000018	 DCD         0x18
  0a6dc		 |$LN60@UfnPdd_IsC|
  0a6dc	00000024	 DCD         0x24
  0a6e0		 |$LN61@UfnPdd_IsC|
  0a6e0	00000030	 DCD         0x30
  0a6e4		 |$LN15@UfnPdd_IsC|

; 3949 :                 {
; 3950 :                 case USB_ENDPOINT_TYPE_CONTROL:     maxPktSize = USB_HIGH_SPEED_CONTROL_MAX_PACKET_SIZE; break;

  0a6e4	e3a03040	 mov         r3, #0x40
  0a6e8	e1cd32b0	 strh        r3, [sp, #0x20]
  0a6ec	ea000007	 b           |$LN16@UfnPdd_IsC|
  0a6f0		 |$LN14@UfnPdd_IsC|

; 3951 :                 case USB_ENDPOINT_TYPE_ISOCHRONOUS: maxPktSize = USB_HIGH_SPEED_ISOCHRONOUS_MAX_PACKET_SIZE; break;

  0a6f0	e3a03b01	 mov         r3, #1, 22
  0a6f4	e1cd32b0	 strh        r3, [sp, #0x20]
  0a6f8	ea000004	 b           |$LN16@UfnPdd_IsC|
  0a6fc		 |$LN13@UfnPdd_IsC|

; 3952 :                 case USB_ENDPOINT_TYPE_BULK:        maxPktSize = USB_HIGH_SPEED_BULK_MAX_PACKET_SIZE; break;

  0a6fc	e3a03c02	 mov         r3, #2, 24
  0a700	e1cd32b0	 strh        r3, [sp, #0x20]
  0a704	ea000001	 b           |$LN16@UfnPdd_IsC|
  0a708		 |$LN12@UfnPdd_IsC|

; 3953 :                 case USB_ENDPOINT_TYPE_INTERRUPT:   maxPktSize = USB_HIGH_SPEED_INTERRUPT_MAX_PACKET_SIZE; break;

  0a708	e3a03b01	 mov         r3, #1, 22
  0a70c	e1cd32b0	 strh        r3, [sp, #0x20]
  0a710		 |$LN16@UfnPdd_IsC|

; 3954 :                 }
; 3955 :             }
; 3956 :             else

  0a710	ea00001c	 b           |$LN11@UfnPdd_IsC|
  0a714		 |$LN18@UfnPdd_IsC|

; 3957 :             {
; 3958 :                 switch (pEP->Descriptor.bmAttributes & 0x03)

  0a714	e59d3018	 ldr         r3, [sp, #0x18]
  0a718	e2833007	 add         r3, r3, #7
  0a71c	e5d33000	 ldrb        r3, [r3]
  0a720	e2033003	 and         r3, r3, #3
  0a724	e58d3054	 str         r3, [sp, #0x54]
  0a728	e59d3054	 ldr         r3, [sp, #0x54]
  0a72c	e3530003	 cmp         r3, #3
  0a730	8a000014	 bhi         |$LN9@UfnPdd_IsC|
  0a734	e59d2054	 ldr         r2, [sp, #0x54]
  0a738	e1a03102	 mov         r3, r2, lsl #2
  0a73c	e083300f	 add         r3, r3, pc
  0a740	e5933004	 ldr         r3, [r3, #4]
  0a744	e08ff003	 add         pc, pc, r3
  0a748		 |$LN63@UfnPdd_IsC|
  0a748		 |$LN62@UfnPdd_IsC|
  0a748		 |$LN64@UfnPdd_IsC|
  0a748	0000000c	 DCD         0xc
  0a74c		 |$LN65@UfnPdd_IsC|
  0a74c	00000018	 DCD         0x18
  0a750		 |$LN66@UfnPdd_IsC|
  0a750	00000028	 DCD         0x28
  0a754		 |$LN67@UfnPdd_IsC|
  0a754	00000034	 DCD         0x34
  0a758		 |$LN8@UfnPdd_IsC|

; 3959 :                 {
; 3960 :                 case USB_ENDPOINT_TYPE_CONTROL:     maxPktSize = USB_FULL_SPEED_CONTROL_MAX_PACKET_SIZE; break;

  0a758	e3a03040	 mov         r3, #0x40
  0a75c	e1cd32b0	 strh        r3, [sp, #0x20]
  0a760	ea000008	 b           |$LN9@UfnPdd_IsC|
  0a764		 |$LN7@UfnPdd_IsC|

; 3961 :                 case USB_ENDPOINT_TYPE_ISOCHRONOUS: maxPktSize = USB_FULL_SPEED_ISOCHRONOUS_MAX_PACKET_SIZE; break;

  0a764	e3a03c03	 mov         r3, #3, 24
  0a768	e38330ff	 orr         r3, r3, #0xFF
  0a76c	e1cd32b0	 strh        r3, [sp, #0x20]
  0a770	ea000004	 b           |$LN9@UfnPdd_IsC|
  0a774		 |$LN6@UfnPdd_IsC|

; 3962 :                 case USB_ENDPOINT_TYPE_BULK:        maxPktSize = USB_FULL_SPEED_BULK_MAX_PACKET_SIZE; break;

  0a774	e3a03040	 mov         r3, #0x40
  0a778	e1cd32b0	 strh        r3, [sp, #0x20]
  0a77c	ea000001	 b           |$LN9@UfnPdd_IsC|
  0a780		 |$LN5@UfnPdd_IsC|

; 3963 :                 case USB_ENDPOINT_TYPE_INTERRUPT:   maxPktSize = USB_FULL_SPEED_INTERRUPT_MAX_PACKET_SIZE; break;

  0a780	e3a03040	 mov         r3, #0x40
  0a784	e1cd32b0	 strh        r3, [sp, #0x20]
  0a788		 |$LN9@UfnPdd_IsC|
  0a788		 |$LN11@UfnPdd_IsC|

; 3964 :                 }
; 3965 :             }
; 3966 :             if (size > maxPktSize)

  0a788	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  0a78c	e1a02003	 mov         r2, r3
  0a790	e1dd32b0	 ldrh        r3, [sp, #0x20]
  0a794	e1520003	 cmp         r2, r3
  0a798	da000001	 ble         |$LN4@UfnPdd_IsC|

; 3967 :                 size = maxPktSize;

  0a79c	e1dd32b0	 ldrh        r3, [sp, #0x20]
  0a7a0	e1cd31bc	 strh        r3, [sp, #0x1C]
  0a7a4		 |$LN4@UfnPdd_IsC|

; 3968 :             PRINTMSG(ZONE_PDD_INIT, (L"EPAddr 0x%x Size %d\r\n",
; 3969 :                                      pEP->Descriptor.bEndpointAddress, size));

  0a7a4	e59f326c	 ldr         r3, [pc, #0x26C]
  0a7a8	e5933440	 ldr         r3, [r3, #0x440]
  0a7ac	e3130c01	 tst         r3, #1, 24
  0a7b0	0a000017	 beq         |$LN42@UfnPdd_IsC|
  0a7b4	e59f325c	 ldr         r3, [pc, #0x25C]
  0a7b8	e5933440	 ldr         r3, [r3, #0x440]
  0a7bc	e3130801	 tst         r3, #1, 16
  0a7c0	0a000008	 beq         |$LN40@UfnPdd_IsC|
  0a7c4	e1dd21bc	 ldrh        r2, [sp, #0x1C]
  0a7c8	e59d3018	 ldr         r3, [sp, #0x18]
  0a7cc	e2833006	 add         r3, r3, #6
  0a7d0	e5d31000	 ldrb        r1, [r3]
  0a7d4	e59f0248	 ldr         r0, [pc, #0x248]
  0a7d8	eb000000	 bl          CeLogMsg
  0a7dc	e3a03001	 mov         r3, #1
  0a7e0	e58d3058	 str         r3, [sp, #0x58]
  0a7e4	ea000007	 b           |$LN41@UfnPdd_IsC|
  0a7e8		 |$LN40@UfnPdd_IsC|
  0a7e8	e1dd21bc	 ldrh        r2, [sp, #0x1C]
  0a7ec	e59d3018	 ldr         r3, [sp, #0x18]
  0a7f0	e2833006	 add         r3, r3, #6
  0a7f4	e5d31000	 ldrb        r1, [r3]
  0a7f8	e59f0224	 ldr         r0, [pc, #0x224]
  0a7fc	eb000000	 bl          NKDbgPrintfW
  0a800	e3a03000	 mov         r3, #0
  0a804	e58d3058	 str         r3, [sp, #0x58]
  0a808		 |$LN41@UfnPdd_IsC|
  0a808	e3a03001	 mov         r3, #1
  0a80c	e58d305c	 str         r3, [sp, #0x5C]
  0a810	ea000001	 b           |$LN43@UfnPdd_IsC|
  0a814		 |$LN42@UfnPdd_IsC|
  0a814	e3a03000	 mov         r3, #0
  0a818	e58d305c	 str         r3, [sp, #0x5C]
  0a81c		 |$LN43@UfnPdd_IsC|

; 3970 : 
; 3971 :             /* Update EP size */
; 3972 :             pEP->Descriptor.wMaxPacketSize = size;

  0a81c	e59d3018	 ldr         r3, [sp, #0x18]
  0a820	e2832008	 add         r2, r3, #8
  0a824	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  0a828	e5c23000	 strb        r3, [r2]
  0a82c	e1a03423	 mov         r3, r3, lsr #8
  0a830	e5c23001	 strb        r3, [r2, #1]

; 3973 : 
; 3974 :             /* If registry for DMA end points isn't set try to choose */
; 3975 :             if ((pEP->Descriptor.bEndpointAddress & 0x80) != 0)

  0a834	e59d3018	 ldr         r3, [sp, #0x18]
  0a838	e2833006	 add         r3, r3, #6
  0a83c	e5d33000	 ldrb        r3, [r3]
  0a840	e3130080	 tst         r3, #0x80
  0a844	0a00001c	 beq         |$LN3@UfnPdd_IsC|

; 3976 :             {
; 3977 :                 PRINTMSG(ZONE_PDD_INIT, (L"TX EP 0x%02x\r\n",
; 3978 :                                          pEP->Descriptor.bEndpointAddress));

  0a848	e59f31c8	 ldr         r3, [pc, #0x1C8]
  0a84c	e5933440	 ldr         r3, [r3, #0x440]
  0a850	e3130c01	 tst         r3, #1, 24
  0a854	0a000015	 beq         |$LN46@UfnPdd_IsC|
  0a858	e59f31b8	 ldr         r3, [pc, #0x1B8]
  0a85c	e5933440	 ldr         r3, [r3, #0x440]
  0a860	e3130801	 tst         r3, #1, 16
  0a864	0a000007	 beq         |$LN44@UfnPdd_IsC|
  0a868	e59d3018	 ldr         r3, [sp, #0x18]
  0a86c	e2833006	 add         r3, r3, #6
  0a870	e5d31000	 ldrb        r1, [r3]
  0a874	e59f01a4	 ldr         r0, [pc, #0x1A4]
  0a878	eb000000	 bl          CeLogMsg
  0a87c	e3a03001	 mov         r3, #1
  0a880	e58d3060	 str         r3, [sp, #0x60]
  0a884	ea000006	 b           |$LN45@UfnPdd_IsC|
  0a888		 |$LN44@UfnPdd_IsC|
  0a888	e59d3018	 ldr         r3, [sp, #0x18]
  0a88c	e2833006	 add         r3, r3, #6
  0a890	e5d31000	 ldrb        r1, [r3]
  0a894	e59f0184	 ldr         r0, [pc, #0x184]
  0a898	eb000000	 bl          NKDbgPrintfW
  0a89c	e3a03000	 mov         r3, #0
  0a8a0	e58d3060	 str         r3, [sp, #0x60]
  0a8a4		 |$LN45@UfnPdd_IsC|
  0a8a4	e3a03001	 mov         r3, #1
  0a8a8	e58d3064	 str         r3, [sp, #0x64]
  0a8ac	ea000001	 b           |$LN47@UfnPdd_IsC|
  0a8b0		 |$LN46@UfnPdd_IsC|
  0a8b0	e3a03000	 mov         r3, #0
  0a8b4	e58d3064	 str         r3, [sp, #0x64]
  0a8b8		 |$LN47@UfnPdd_IsC|

; 3979 :             }
; 3980 :             else

  0a8b8	ea00001b	 b           |$LN2@UfnPdd_IsC|
  0a8bc		 |$LN3@UfnPdd_IsC|

; 3981 :             {
; 3982 :                 PRINTMSG(ZONE_PDD_INIT, (L"RX EP 0x%02x\r\n",
; 3983 :                                          pEP->Descriptor.bEndpointAddress));

  0a8bc	e59f3154	 ldr         r3, [pc, #0x154]
  0a8c0	e5933440	 ldr         r3, [r3, #0x440]
  0a8c4	e3130c01	 tst         r3, #1, 24
  0a8c8	0a000015	 beq         |$LN50@UfnPdd_IsC|
  0a8cc	e59f3144	 ldr         r3, [pc, #0x144]
  0a8d0	e5933440	 ldr         r3, [r3, #0x440]
  0a8d4	e3130801	 tst         r3, #1, 16
  0a8d8	0a000007	 beq         |$LN48@UfnPdd_IsC|
  0a8dc	e59d3018	 ldr         r3, [sp, #0x18]
  0a8e0	e2833006	 add         r3, r3, #6
  0a8e4	e5d31000	 ldrb        r1, [r3]
  0a8e8	e59f012c	 ldr         r0, [pc, #0x12C]
  0a8ec	eb000000	 bl          CeLogMsg
  0a8f0	e3a03001	 mov         r3, #1
  0a8f4	e58d3068	 str         r3, [sp, #0x68]
  0a8f8	ea000006	 b           |$LN49@UfnPdd_IsC|
  0a8fc		 |$LN48@UfnPdd_IsC|
  0a8fc	e59d3018	 ldr         r3, [sp, #0x18]
  0a900	e2833006	 add         r3, r3, #6
  0a904	e5d31000	 ldrb        r1, [r3]
  0a908	e59f010c	 ldr         r0, [pc, #0x10C]
  0a90c	eb000000	 bl          NKDbgPrintfW
  0a910	e3a03000	 mov         r3, #0
  0a914	e58d3068	 str         r3, [sp, #0x68]
  0a918		 |$LN49@UfnPdd_IsC|
  0a918	e3a03001	 mov         r3, #1
  0a91c	e58d306c	 str         r3, [sp, #0x6C]
  0a920	ea000001	 b           |$LN51@UfnPdd_IsC|
  0a924		 |$LN50@UfnPdd_IsC|
  0a924	e3a03000	 mov         r3, #0
  0a928	e58d306c	 str         r3, [sp, #0x6C]
  0a92c		 |$LN51@UfnPdd_IsC|
  0a92c		 |$LN2@UfnPdd_IsC|

; 3984 :             }
; 3985 :             /* Calculate total buffer size */
; 3986 :             offset = offset + size;

  0a92c	e1dd31be	 ldrh        r3, [sp, #0x1E]
  0a930	e1a02003	 mov         r2, r3
  0a934	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  0a938	e0823003	 add         r3, r2, r3
  0a93c	e1a03803	 mov         r3, r3, lsl #16
  0a940	e1a03823	 mov         r3, r3, lsr #16
  0a944	e1cd31be	 strh        r3, [sp, #0x1E]

; 3987 :         }

  0a948	eafffef4	 b           |$LN20@UfnPdd_IsC|
  0a94c		 |$LN19@UfnPdd_IsC|

; 3988 :         /* Add number of end points to total count */
; 3989 :         count = count + pIFC->Descriptor.bNumEndpoints;

  0a94c	e1dd30b4	 ldrh        r3, [sp, #4]
  0a950	e1a02003	 mov         r2, r3
  0a954	e59d3010	 ldr         r3, [sp, #0x10]
  0a958	e2833008	 add         r3, r3, #8
  0a95c	e5d33000	 ldrb        r3, [r3]
  0a960	e0823003	 add         r3, r2, r3
  0a964	e1a03803	 mov         r3, r3, lsl #16
  0a968	e1a03823	 mov         r3, r3, lsr #16
  0a96c	e1cd30b4	 strh        r3, [sp, #4]

; 3990 :     }

  0a970	eafffed5	 b           |$LN23@UfnPdd_IsC|
  0a974		 |$LN22@UfnPdd_IsC|

; 3991 : 
; 3992 :     PRINTMSG(ZONE_PDD_INIT, (L"Total EP Count 0x%x Offset 0x%x\r\n",
; 3993 :                              count, offset));

  0a974	e59f309c	 ldr         r3, [pc, #0x9C]
  0a978	e5933440	 ldr         r3, [r3, #0x440]
  0a97c	e3130c01	 tst         r3, #1, 24
  0a980	0a000013	 beq         |$LN54@UfnPdd_IsC|
  0a984	e59f308c	 ldr         r3, [pc, #0x8C]
  0a988	e5933440	 ldr         r3, [r3, #0x440]
  0a98c	e3130801	 tst         r3, #1, 16
  0a990	0a000006	 beq         |$LN52@UfnPdd_IsC|
  0a994	e1dd21be	 ldrh        r2, [sp, #0x1E]
  0a998	e1dd10b4	 ldrh        r1, [sp, #4]
  0a99c	e59f0070	 ldr         r0, [pc, #0x70]
  0a9a0	eb000000	 bl          CeLogMsg
  0a9a4	e3a03001	 mov         r3, #1
  0a9a8	e58d3070	 str         r3, [sp, #0x70]
  0a9ac	ea000005	 b           |$LN53@UfnPdd_IsC|
  0a9b0		 |$LN52@UfnPdd_IsC|
  0a9b0	e1dd21be	 ldrh        r2, [sp, #0x1E]
  0a9b4	e1dd10b4	 ldrh        r1, [sp, #4]
  0a9b8	e59f0054	 ldr         r0, [pc, #0x54]
  0a9bc	eb000000	 bl          NKDbgPrintfW
  0a9c0	e3a03000	 mov         r3, #0
  0a9c4	e58d3070	 str         r3, [sp, #0x70]
  0a9c8		 |$LN53@UfnPdd_IsC|
  0a9c8	e3a03001	 mov         r3, #1
  0a9cc	e58d3074	 str         r3, [sp, #0x74]
  0a9d0	ea000001	 b           |$LN55@UfnPdd_IsC|
  0a9d4		 |$LN54@UfnPdd_IsC|
  0a9d4	e3a03000	 mov         r3, #0
  0a9d8	e58d3074	 str         r3, [sp, #0x74]
  0a9dc		 |$LN55@UfnPdd_IsC|

; 3994 : 
; 3995 :     /* Can we support this configuration? */
; 3996 :     if (count < USBD_EP_COUNT && offset <= MGC_FIFO_RAM_SIZE)

  0a9dc	e1dd30b4	 ldrh        r3, [sp, #4]
  0a9e0	e3530010	 cmp         r3, #0x10
  0a9e4	aa000004	 bge         |$LN1@UfnPdd_IsC|
  0a9e8	e1dd31be	 ldrh        r3, [sp, #0x1E]
  0a9ec	e3530902	 cmp         r3, #2, 18
  0a9f0	ca000001	 bgt         |$LN1@UfnPdd_IsC|

; 3997 :     {
; 3998 :         rc = ERROR_SUCCESS;

  0a9f4	e3a03000	 mov         r3, #0
  0a9f8	e58d3008	 str         r3, [sp, #8]
  0a9fc		 |$LN1@UfnPdd_IsC|

; 3999 :     }
; 4000 : /*cleanUp:*/
; 4001 :     return rc;

  0a9fc	e59d3008	 ldr         r3, [sp, #8]
  0aa00	e58d3024	 str         r3, [sp, #0x24]
  0aa04		 |$LN26@UfnPdd_IsC|

; 4002 : 
; 4003 : }

  0aa04	e59d0024	 ldr         r0, [sp, #0x24]
  0aa08	e28dd078	 add         sp, sp, #0x78
  0aa0c	e89d6000	 ldmia       sp, {sp, lr}
  0aa10	e12fff1e	 bx          lr
  0aa14		 |$LN71@UfnPdd_IsC|
  0aa14		 |$LN72@UfnPdd_IsC|
  0aa14	00000000	 DCD         |??_C@_1EE@DCCLLGOE@?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAE?$AAP?$AA?5?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@|
  0aa18		 |$LN73@UfnPdd_IsC|
  0aa18	00000000	 DCD         |dpCurSettings|
  0aa1c		 |$LN74@UfnPdd_IsC|
  0aa1c	00000000	 DCD         |??_C@_1BO@OOBJPIMN@?$AAR?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0aa20		 |$LN75@UfnPdd_IsC|
  0aa20	00000000	 DCD         |??_C@_1BO@GHFLLCPN@?$AAT?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0aa24		 |$LN76@UfnPdd_IsC|
  0aa24	00000000	 DCD         |??_C@_1CM@DLLCCIAL@?$AAE?$AAP?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0aa28		 |$LN77@UfnPdd_IsC|
  0aa28	00000000	 DCD         |??_C@_1GE@HFBHMGGD@?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAA?$AAt?$AAt?$AAr?$AAi?$AAb?$AAu?$AAt?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5@|
  0aa2c		 |$LN78@UfnPdd_IsC|
  0aa2c	00000000	 DCD         |??_C@_1KA@EDCAFIIN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@|
  0aa30		 |$LN79@UfnPdd_IsC|
  0aa30	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0aa34		 |$LN80@UfnPdd_IsC|
  0aa34	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0aa38		 |$LN81@UfnPdd_IsC|
  0aa38	00000000	 DCD         |??_C@_1CK@JMONKOM@?$AAN?$AAu?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0aa3c		 |$LN82@UfnPdd_IsC|
  0aa3c	00000000	 DCD         |??_C@_1EM@PIIPDMOP@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb@|
  0aa40		 |$M50774|

			 ENDP  ; |UfnPdd_IsConfigurationSupportable|

	EXPORT	|??_C@_1BO@ENIABJL@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@INJKELKL@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Init|
	IMPORT	|cppiControllerInit|

  00168			 AREA	 |.pdata|, PDATA
|$T50802| DCD	|$LN14@UfnPdd_Ini@3|
	DCD	0x4000e604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@ENIABJL@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@INJKELKL@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0aa40			 AREA	 |.text|, CODE, ARM

  0aa40		 |UfnPdd_Init| PROC

; 4033 : {

  0aa40		 |$LN14@UfnPdd_Ini@3|
  0aa40	e1a0c00d	 mov         r12, sp
  0aa44	e92d000f	 stmdb       sp!, {r0 - r3}
  0aa48	e92d5000	 stmdb       sp!, {r12, lr}
  0aa4c	e24dd024	 sub         sp, sp, #0x24
  0aa50		 |$M50799|

; 4034 :     DWORD rc = ERROR_INVALID_PARAMETER;

  0aa50	e3a03057	 mov         r3, #0x57
  0aa54	e58d3000	 str         r3, [sp]

; 4035 : 
; 4036 :     USBFNPDDCONTEXT * pPdd      = NULL;

  0aa58	e3a03000	 mov         r3, #0
  0aa5c	e58d3004	 str         r3, [sp, #4]

; 4037 : 
; 4038 :     PRINTMSG(ZONE_FUNCTION, (L"+UfnPdd_Init\r\n"));

  0aa60	e59f3318	 ldr         r3, [pc, #0x318]
  0aa64	e5933440	 ldr         r3, [r3, #0x440]
  0aa68	e3130a01	 tst         r3, #1, 20
  0aa6c	0a00000f	 beq         |$LN6@UfnPdd_Ini@3|
  0aa70	e59f3308	 ldr         r3, [pc, #0x308]
  0aa74	e5933440	 ldr         r3, [r3, #0x440]
  0aa78	e3130801	 tst         r3, #1, 16
  0aa7c	0a000004	 beq         |$LN4@UfnPdd_Ini@3|
  0aa80	e59f034c	 ldr         r0, [pc, #0x34C]
  0aa84	eb000000	 bl          CeLogMsg
  0aa88	e3a03001	 mov         r3, #1
  0aa8c	e58d300c	 str         r3, [sp, #0xC]
  0aa90	ea000003	 b           |$LN5@UfnPdd_Ini@3|
  0aa94		 |$LN4@UfnPdd_Ini@3|
  0aa94	e59f0338	 ldr         r0, [pc, #0x338]
  0aa98	eb000000	 bl          NKDbgPrintfW
  0aa9c	e3a03000	 mov         r3, #0
  0aaa0	e58d300c	 str         r3, [sp, #0xC]
  0aaa4		 |$LN5@UfnPdd_Ini@3|
  0aaa4	e3a03001	 mov         r3, #1
  0aaa8	e58d3010	 str         r3, [sp, #0x10]
  0aaac	ea000001	 b           |$LN7@UfnPdd_Ini@3|
  0aab0		 |$LN6@UfnPdd_Ini@3|
  0aab0	e3a03000	 mov         r3, #0
  0aab4	e58d3010	 str         r3, [sp, #0x10]
  0aab8		 |$LN7@UfnPdd_Ini@3|

; 4039 : 
; 4040 :     /* Invoke the UfnPdd_ContextSetup Routine to setup the
; 4041 :      * USBFN PDD Context Struct. Note that if there are any
; 4042 :      * platform specific steps required, they can be
; 4043 :      * moved away into this routine thus keeping the UfnPdd_Init
; 4044 :      * generic across
; 4045 :      */
; 4046 :     if (FALSE == UfnPdd_ContextSetup(szActiveKey, &pPdd))

  0aab8	e28d1004	 add         r1, sp, #4
  0aabc	e59d002c	 ldr         r0, [sp, #0x2C]
  0aac0	eb000000	 bl          UfnPdd_ContextSetup
  0aac4	e58d0014	 str         r0, [sp, #0x14]
  0aac8	e59d3014	 ldr         r3, [sp, #0x14]
  0aacc	e3530000	 cmp         r3, #0
  0aad0	1a000002	 bne         |$LN1@UfnPdd_Ini@3|

; 4047 :     {
; 4048 :         /* Failure, Invoke UfnPdd_ContextTeardown */
; 4049 :         UfnPdd_ContextTeardown(pPdd) ;

  0aad4	e59d0004	 ldr         r0, [sp, #4]
  0aad8	eb000000	 bl          UfnPdd_ContextTeardown

; 4050 :         goto cleanUp;

  0aadc	ea0000a0	 b           |$cleanUp$49010|
  0aae0		 |$LN1@UfnPdd_Ini@3|

; 4051 :     }
; 4052 : 
; 4053 : #ifdef CPPI_DMA_SUPPORT
; 4054 : 
; 4055 :     /* Initialize the DMA Controller Object */
; 4056 :     pPdd->pDmaCntrl = cppiControllerInit(pPdd);

  0aae0	e59d0004	 ldr         r0, [sp, #4]
  0aae4	eb000000	 bl          cppiControllerInit
  0aae8	e58d0018	 str         r0, [sp, #0x18]
  0aaec	e59d3004	 ldr         r3, [sp, #4]
  0aaf0	e2833c06	 add         r3, r3, #6, 24
  0aaf4	e283205c	 add         r2, r3, #0x5C
  0aaf8	e59d3018	 ldr         r3, [sp, #0x18]
  0aafc	e5823000	 str         r3, [r2]

; 4057 : 
; 4058 : #endif /* #ifdef CPPI_DMA_SUPPORT *
; 4059 : 
; 4060 :     /* Set PDD interface */
; 4061 :     pPddIfc->dwVersion = UFN_PDD_INTERFACE_VERSION;

  0ab00	e59d2038	 ldr         r2, [sp, #0x38]
  0ab04	e3a03806	 mov         r3, #6, 16
  0ab08	e5823000	 str         r3, [r2]

; 4062 :     pPddIfc->dwCapabilities = UFN_PDD_CAPS_SUPPORTS_FULL_SPEED | UFN_PDD_CAPS_SUPPORTS_ALTERNATE_INTERFACES;

  0ab0c	e59d3038	 ldr         r3, [sp, #0x38]
  0ab10	e2832004	 add         r2, r3, #4
  0ab14	e3a03009	 mov         r3, #9
  0ab18	e5823000	 str         r3, [r2]

; 4063 : #ifndef UFN_DISABLE_HIGH_SPEED
; 4064 :     pPddIfc->dwCapabilities |= UFN_PDD_CAPS_SUPPORTS_HIGH_SPEED;

  0ab1c	e59d3038	 ldr         r3, [sp, #0x38]
  0ab20	e2833004	 add         r3, r3, #4
  0ab24	e5933000	 ldr         r3, [r3]
  0ab28	e3832002	 orr         r2, r3, #2
  0ab2c	e59d3038	 ldr         r3, [sp, #0x38]
  0ab30	e2833004	 add         r3, r3, #4
  0ab34	e5832000	 str         r2, [r3]

; 4065 : #endif
; 4066 :     pPddIfc->dwEndpointCount = USBD_EP_COUNT;

  0ab38	e59d3038	 ldr         r3, [sp, #0x38]
  0ab3c	e2832008	 add         r2, r3, #8
  0ab40	e3a03010	 mov         r3, #0x10
  0ab44	e5823000	 str         r3, [r2]

; 4067 :     pPddIfc->pvPddContext = pPdd;

  0ab48	e59d3038	 ldr         r3, [sp, #0x38]
  0ab4c	e283200c	 add         r2, r3, #0xC
  0ab50	e59d3004	 ldr         r3, [sp, #4]
  0ab54	e5823000	 str         r3, [r2]

; 4068 :     pPddIfc->pfnDeinit = UfnPdd_Deinit;

  0ab58	e59d3038	 ldr         r3, [sp, #0x38]
  0ab5c	e2832010	 add         r2, r3, #0x10
  0ab60	e59f3268	 ldr         r3, [pc, #0x268]
  0ab64	e5823000	 str         r3, [r2]

; 4069 :     pPddIfc->pfnIsConfigurationSupportable = UfnPdd_IsConfigurationSupportable;

  0ab68	e59d3038	 ldr         r3, [sp, #0x38]
  0ab6c	e2832014	 add         r2, r3, #0x14
  0ab70	e59f3254	 ldr         r3, [pc, #0x254]
  0ab74	e5823000	 str         r3, [r2]

; 4070 :     pPddIfc->pfnIsEndpointSupportable = UfnPdd_IsEndpointSupportable;

  0ab78	e59d3038	 ldr         r3, [sp, #0x38]
  0ab7c	e2832018	 add         r2, r3, #0x18
  0ab80	e59f3240	 ldr         r3, [pc, #0x240]
  0ab84	e5823000	 str         r3, [r2]

; 4071 :     pPddIfc->pfnInitEndpoint = UfnPdd_InitEndpoint;

  0ab88	e59d3038	 ldr         r3, [sp, #0x38]
  0ab8c	e283201c	 add         r2, r3, #0x1C
  0ab90	e59f322c	 ldr         r3, [pc, #0x22C]
  0ab94	e5823000	 str         r3, [r2]

; 4072 :     pPddIfc->pfnRegisterDevice = UfnPdd_RegisterDevice;

  0ab98	e59d3038	 ldr         r3, [sp, #0x38]
  0ab9c	e2832020	 add         r2, r3, #0x20
  0aba0	e59f3218	 ldr         r3, [pc, #0x218]
  0aba4	e5823000	 str         r3, [r2]

; 4073 :     pPddIfc->pfnDeregisterDevice = UfnPdd_DeregisterDevice;

  0aba8	e59d3038	 ldr         r3, [sp, #0x38]
  0abac	e2832024	 add         r2, r3, #0x24
  0abb0	e59f3204	 ldr         r3, [pc, #0x204]
  0abb4	e5823000	 str         r3, [r2]

; 4074 :     pPddIfc->pfnStart = UfnPdd_Start;

  0abb8	e59d3038	 ldr         r3, [sp, #0x38]
  0abbc	e2832028	 add         r2, r3, #0x28
  0abc0	e59f31f0	 ldr         r3, [pc, #0x1F0]
  0abc4	e5823000	 str         r3, [r2]

; 4075 :     pPddIfc->pfnStop = UfnPdd_Stop;

  0abc8	e59d3038	 ldr         r3, [sp, #0x38]
  0abcc	e283202c	 add         r2, r3, #0x2C
  0abd0	e59f31dc	 ldr         r3, [pc, #0x1DC]
  0abd4	e5823000	 str         r3, [r2]

; 4076 :     pPddIfc->pfnIssueTransfer = UfnPdd_IssueTransfer;

  0abd8	e59d3038	 ldr         r3, [sp, #0x38]
  0abdc	e2832030	 add         r2, r3, #0x30
  0abe0	e59f31c8	 ldr         r3, [pc, #0x1C8]
  0abe4	e5823000	 str         r3, [r2]

; 4077 :     pPddIfc->pfnAbortTransfer = UfnPdd_AbortTransfer;

  0abe8	e59d3038	 ldr         r3, [sp, #0x38]
  0abec	e2832034	 add         r2, r3, #0x34
  0abf0	e59f31b4	 ldr         r3, [pc, #0x1B4]
  0abf4	e5823000	 str         r3, [r2]

; 4078 :     pPddIfc->pfnDeinitEndpoint = UfnPdd_DeinitEndpoint;

  0abf8	e59d3038	 ldr         r3, [sp, #0x38]
  0abfc	e2832038	 add         r2, r3, #0x38
  0ac00	e59f31a0	 ldr         r3, [pc, #0x1A0]
  0ac04	e5823000	 str         r3, [r2]

; 4079 :     pPddIfc->pfnStallEndpoint = UfnPdd_StallEndpoint;

  0ac08	e59d3038	 ldr         r3, [sp, #0x38]
  0ac0c	e283203c	 add         r2, r3, #0x3C
  0ac10	e59f318c	 ldr         r3, [pc, #0x18C]
  0ac14	e5823000	 str         r3, [r2]

; 4080 :     pPddIfc->pfnClearEndpointStall = UfnPdd_ClearEndpointStall;

  0ac18	e59d3038	 ldr         r3, [sp, #0x38]
  0ac1c	e2832040	 add         r2, r3, #0x40
  0ac20	e59f3178	 ldr         r3, [pc, #0x178]
  0ac24	e5823000	 str         r3, [r2]

; 4081 :     pPddIfc->pfnSendControlStatusHandshake = UfnPdd_SendControlStatusHandshake;

  0ac28	e59d3038	 ldr         r3, [sp, #0x38]
  0ac2c	e2832044	 add         r2, r3, #0x44
  0ac30	e59f3164	 ldr         r3, [pc, #0x164]
  0ac34	e5823000	 str         r3, [r2]

; 4082 :     pPddIfc->pfnSetAddress = UfnPdd_SetAddress;

  0ac38	e59d3038	 ldr         r3, [sp, #0x38]
  0ac3c	e2832048	 add         r2, r3, #0x48
  0ac40	e59f3150	 ldr         r3, [pc, #0x150]
  0ac44	e5823000	 str         r3, [r2]

; 4083 :     pPddIfc->pfnIsEndpointHalted = UfnPdd_IsEndpointHalted;

  0ac48	e59d3038	 ldr         r3, [sp, #0x38]
  0ac4c	e283204c	 add         r2, r3, #0x4C
  0ac50	e59f313c	 ldr         r3, [pc, #0x13C]
  0ac54	e5823000	 str         r3, [r2]

; 4084 :     pPddIfc->pfnInitiateRemoteWakeup = UfnPdd_InitiateRemoteWakeup;

  0ac58	e59d3038	 ldr         r3, [sp, #0x38]
  0ac5c	e2832050	 add         r2, r3, #0x50
  0ac60	e59f3128	 ldr         r3, [pc, #0x128]
  0ac64	e5823000	 str         r3, [r2]

; 4085 :     pPddIfc->pfnPowerDown = UfnPdd_PowerDown;

  0ac68	e59d3038	 ldr         r3, [sp, #0x38]
  0ac6c	e2832054	 add         r2, r3, #0x54
  0ac70	e59f3114	 ldr         r3, [pc, #0x114]
  0ac74	e5823000	 str         r3, [r2]

; 4086 :     pPddIfc->pfnPowerUp = UfnPdd_PowerUp;

  0ac78	e59d3038	 ldr         r3, [sp, #0x38]
  0ac7c	e2832058	 add         r2, r3, #0x58
  0ac80	e59f3100	 ldr         r3, [pc, #0x100]
  0ac84	e5823000	 str         r3, [r2]

; 4087 :     pPddIfc->pfnIOControl = UfnPdd_IOControl;

  0ac88	e59d3038	 ldr         r3, [sp, #0x38]
  0ac8c	e283205c	 add         r2, r3, #0x5C
  0ac90	e59f30ec	 ldr         r3, [pc, #0xEC]
  0ac94	e5823000	 str         r3, [r2]

; 4088 : 
; 4089 :     /* Save MDD context & notify function */
; 4090 :     pPdd->pMddContext = pMddContext;

  0ac98	e59d3004	 ldr         r3, [sp, #4]
  0ac9c	e2832010	 add         r2, r3, #0x10
  0aca0	e59d3030	 ldr         r3, [sp, #0x30]
  0aca4	e5823000	 str         r3, [r2]

; 4091 :     pPdd->pfnNotify = pMddIfc->pfnNotify;

  0aca8	e59d3034	 ldr         r3, [sp, #0x34]
  0acac	e2831004	 add         r1, r3, #4
  0acb0	e59d3004	 ldr         r3, [sp, #4]
  0acb4	e2832014	 add         r2, r3, #0x14
  0acb8	e5913000	 ldr         r3, [r1]
  0acbc	e5823000	 str         r3, [r2]

; 4092 :     pPdd->attachState = UFN_DETACH;

  0acc0	e59d3004	 ldr         r3, [sp, #4]
  0acc4	e283203c	 add         r2, r3, #0x3C
  0acc8	e3a03000	 mov         r3, #0
  0accc	e5823000	 str         r3, [r2]

; 4093 :     pPdd->resetComplete = FALSE;

  0acd0	e59d3004	 ldr         r3, [sp, #4]
  0acd4	e2832038	 add         r2, r3, #0x38
  0acd8	e3a03000	 mov         r3, #0
  0acdc	e5823000	 str         r3, [r2]

; 4094 : 
; 4095 :     /* Default EP0 State */
; 4096 :     pPdd->ep[0].epStage = MGC_END0_STAGE_SETUP;

  0ace0	e59d3004	 ldr         r3, [sp, #4]
  0ace4	e2832e2a	 add         r2, r3, #0x2A, 28
  0ace8	e3a03000	 mov         r3, #0
  0acec	e5823000	 str         r3, [r2]

; 4097 :     pPdd->fWaitingForHandshake = FALSE;

  0acf0	e59d3004	 ldr         r3, [sp, #4]
  0acf4	e2833c06	 add         r3, r3, #6, 24
  0acf8	e283204c	 add         r2, r3, #0x4C
  0acfc	e3a03000	 mov         r3, #0
  0ad00	e5823000	 str         r3, [r2]

; 4098 : 
; 4099 :     PRINTMSG(ZONE_FUNCTION, (L"-UfnPdd_Init\r\n"));

  0ad04	e59f3074	 ldr         r3, [pc, #0x74]
  0ad08	e5933440	 ldr         r3, [r3, #0x440]
  0ad0c	e3130a01	 tst         r3, #1, 20
  0ad10	0a00000f	 beq         |$LN10@UfnPdd_Ini@3|
  0ad14	e59f3064	 ldr         r3, [pc, #0x64]
  0ad18	e5933440	 ldr         r3, [r3, #0x440]
  0ad1c	e3130801	 tst         r3, #1, 16
  0ad20	0a000004	 beq         |$LN8@UfnPdd_Ini@3|
  0ad24	e59f0050	 ldr         r0, [pc, #0x50]
  0ad28	eb000000	 bl          CeLogMsg
  0ad2c	e3a03001	 mov         r3, #1
  0ad30	e58d301c	 str         r3, [sp, #0x1C]
  0ad34	ea000003	 b           |$LN9@UfnPdd_Ini@3|
  0ad38		 |$LN8@UfnPdd_Ini@3|
  0ad38	e59f003c	 ldr         r0, [pc, #0x3C]
  0ad3c	eb000000	 bl          NKDbgPrintfW
  0ad40	e3a03000	 mov         r3, #0
  0ad44	e58d301c	 str         r3, [sp, #0x1C]
  0ad48		 |$LN9@UfnPdd_Ini@3|
  0ad48	e3a03001	 mov         r3, #1
  0ad4c	e58d3020	 str         r3, [sp, #0x20]
  0ad50	ea000001	 b           |$LN11@UfnPdd_Ini@3|
  0ad54		 |$LN10@UfnPdd_Ini@3|
  0ad54	e3a03000	 mov         r3, #0
  0ad58	e58d3020	 str         r3, [sp, #0x20]
  0ad5c		 |$LN11@UfnPdd_Ini@3|

; 4100 : 
; 4101 :     /* Done */
; 4102 :     rc = ERROR_SUCCESS;

  0ad5c	e3a03000	 mov         r3, #0
  0ad60	e58d3000	 str         r3, [sp]
  0ad64		 |$cleanUp$49010|

; 4103 : cleanUp:
; 4104 :     return rc;

  0ad64	e59d3000	 ldr         r3, [sp]
  0ad68	e58d3008	 str         r3, [sp, #8]

; 4105 : }

  0ad6c	e59d0008	 ldr         r0, [sp, #8]
  0ad70	e28dd024	 add         sp, sp, #0x24
  0ad74	e89d6000	 ldmia       sp, {sp, lr}
  0ad78	e12fff1e	 bx          lr
  0ad7c		 |$LN15@UfnPdd_Ini@3|
  0ad7c		 |$LN16@UfnPdd_Ini@3|
  0ad7c	00000000	 DCD         |??_C@_1BO@ENIABJL@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0ad80		 |$LN17@UfnPdd_Ini@3|
  0ad80	00000000	 DCD         |dpCurSettings|
  0ad84		 |$LN18@UfnPdd_Ini@3|
  0ad84	00000000	 DCD         |UfnPdd_IOControl|
  0ad88		 |$LN19@UfnPdd_Ini@3|
  0ad88	00000000	 DCD         |UfnPdd_PowerUp|
  0ad8c		 |$LN20@UfnPdd_Ini@3|
  0ad8c	00000000	 DCD         |UfnPdd_PowerDown|
  0ad90		 |$LN21@UfnPdd_Ini@3|
  0ad90	00000000	 DCD         |UfnPdd_InitiateRemoteWakeup|
  0ad94		 |$LN22@UfnPdd_Ini@3|
  0ad94	00000000	 DCD         |UfnPdd_IsEndpointHalted|
  0ad98		 |$LN23@UfnPdd_Ini@3|
  0ad98	00000000	 DCD         |UfnPdd_SetAddress|
  0ad9c		 |$LN24@UfnPdd_Ini@3|
  0ad9c	00000000	 DCD         |UfnPdd_SendControlStatusHandshake|
  0ada0		 |$LN25@UfnPdd_Ini@3|
  0ada0	00000000	 DCD         |UfnPdd_ClearEndpointStall|
  0ada4		 |$LN26@UfnPdd_Ini@3|
  0ada4	00000000	 DCD         |UfnPdd_StallEndpoint|
  0ada8		 |$LN27@UfnPdd_Ini@3|
  0ada8	00000000	 DCD         |UfnPdd_DeinitEndpoint|
  0adac		 |$LN28@UfnPdd_Ini@3|
  0adac	00000000	 DCD         |UfnPdd_AbortTransfer|
  0adb0		 |$LN29@UfnPdd_Ini@3|
  0adb0	00000000	 DCD         |UfnPdd_IssueTransfer|
  0adb4		 |$LN30@UfnPdd_Ini@3|
  0adb4	00000000	 DCD         |UfnPdd_Stop|
  0adb8		 |$LN31@UfnPdd_Ini@3|
  0adb8	00000000	 DCD         |UfnPdd_Start|
  0adbc		 |$LN32@UfnPdd_Ini@3|
  0adbc	00000000	 DCD         |UfnPdd_DeregisterDevice|
  0adc0		 |$LN33@UfnPdd_Ini@3|
  0adc0	00000000	 DCD         |UfnPdd_RegisterDevice|
  0adc4		 |$LN34@UfnPdd_Ini@3|
  0adc4	00000000	 DCD         |UfnPdd_InitEndpoint|
  0adc8		 |$LN35@UfnPdd_Ini@3|
  0adc8	00000000	 DCD         |UfnPdd_IsEndpointSupportable|
  0adcc		 |$LN36@UfnPdd_Ini@3|
  0adcc	00000000	 DCD         |UfnPdd_IsConfigurationSupportable|
  0add0		 |$LN37@UfnPdd_Ini@3|
  0add0	00000000	 DCD         |UfnPdd_Deinit|
  0add4		 |$LN38@UfnPdd_Ini@3|
  0add4	00000000	 DCD         |??_C@_1BO@INJKELKL@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0add8		 |$M50800|

			 ENDP  ; |UfnPdd_Init|

	EXPORT	|??_C@_1DK@PAIDAHAI@?$AA?9?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@GLIHGOJN@?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@JGBMJAPB@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@PILHPEAA@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@ONGEIPOP@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAD@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OLDENBML@?$AA?$CL?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	IMPORT	|memset|
	IMPORT	|HalAllocateCommonBuffer|

  00170			 AREA	 |.pdata|, PDATA
|$T50848| DCD	|$LN23@InitEndpoi|
	DCD	0x4000c304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@PAIDAHAI@?$AA?9?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@GLIHGOJN@?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| DCB "F", 0x0, "A"
	DCB	0x0, "I", 0x0, "L", 0x0, "E", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@| DCB "S"
	DCB	0x0, "U", 0x0, "C", 0x0, "C", 0x0, "E", 0x0, "E", 0x0, "D"
	DCB	0x0, "E", 0x0, "D", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@JGBMJAPB@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "P", 0x0, "A", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "V", 0x0, "A", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@PILHPEAA@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAF@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@ONGEIPOP@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAD@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "y"
	DCB	0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OLDENBML@?$AA?$CL?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5?$AA?$CF@| DCB "+"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0add8			 AREA	 |.text|, CODE, ARM

  0add8		 |InitEndpointDmaBuffer| PROC

; 4112 : {

  0add8		 |$LN23@InitEndpoi|
  0add8	e1a0c00d	 mov         r12, sp
  0addc	e92d0003	 stmdb       sp!, {r0, r1}
  0ade0	e92d5000	 stmdb       sp!, {r12, lr}
  0ade4	e24dd048	 sub         sp, sp, #0x48
  0ade8		 |$M50845|

; 4113 :     BOOL rc = FALSE;

  0ade8	e3a03000	 mov         r3, #0
  0adec	e58d3000	 str         r3, [sp]

; 4114 :     UsbFnEp *ep = &pPdd->ep[epNum];

  0adf0	e59d3050	 ldr         r3, [sp, #0x50]
  0adf4	e2831fa1	 add         r1, r3, #0xA1, 30
  0adf8	e59d2054	 ldr         r2, [sp, #0x54]
  0adfc	e3a0303c	 mov         r3, #0x3C
  0ae00	e0030392	 mul         r3, r2, r3
  0ae04	e0813003	 add         r3, r1, r3
  0ae08	e58d3010	 str         r3, [sp, #0x10]

; 4115 :     DWORD size = pPdd->dmaBufferSize;

  0ae0c	e59d3050	 ldr         r3, [sp, #0x50]
  0ae10	e2833008	 add         r3, r3, #8
  0ae14	e5933000	 ldr         r3, [r3]
  0ae18	e58d300c	 str         r3, [sp, #0xC]

; 4116 : 
; 4117 :     DMA_ADAPTER_OBJECT Adapter;
; 4118 :     PHYSICAL_ADDRESS pa;
; 4119 : 
; 4120 :     DEBUGMSG(ZONE_PDD_INIT,
; 4121 :         (L"+InitEndpointDmaBuffer: EP%u - %u bytes\r\n",
; 4122 :         epNum,
; 4123 :         size));

  0ae1c	e59f32a4	 ldr         r3, [pc, #0x2A4]
  0ae20	e5933440	 ldr         r3, [r3, #0x440]
  0ae24	e3130c01	 tst         r3, #1, 24
  0ae28	0a000013	 beq         |$LN7@InitEndpoi|
  0ae2c	e59f3294	 ldr         r3, [pc, #0x294]
  0ae30	e5933440	 ldr         r3, [r3, #0x440]
  0ae34	e3130801	 tst         r3, #1, 16
  0ae38	0a000006	 beq         |$LN5@InitEndpoi|
  0ae3c	e59d200c	 ldr         r2, [sp, #0xC]
  0ae40	e59d1054	 ldr         r1, [sp, #0x54]
  0ae44	e59f0294	 ldr         r0, [pc, #0x294]
  0ae48	eb000000	 bl          CeLogMsg
  0ae4c	e3a03001	 mov         r3, #1
  0ae50	e58d3024	 str         r3, [sp, #0x24]
  0ae54	ea000005	 b           |$LN6@InitEndpoi|
  0ae58		 |$LN5@InitEndpoi|
  0ae58	e59d200c	 ldr         r2, [sp, #0xC]
  0ae5c	e59d1054	 ldr         r1, [sp, #0x54]
  0ae60	e59f0278	 ldr         r0, [pc, #0x278]
  0ae64	eb000000	 bl          NKDbgPrintfW
  0ae68	e3a03000	 mov         r3, #0
  0ae6c	e58d3024	 str         r3, [sp, #0x24]
  0ae70		 |$LN6@InitEndpoi|
  0ae70	e3a03001	 mov         r3, #1
  0ae74	e58d3028	 str         r3, [sp, #0x28]
  0ae78	ea000001	 b           |$LN8@InitEndpoi|
  0ae7c		 |$LN7@InitEndpoi|
  0ae7c	e3a03000	 mov         r3, #0
  0ae80	e58d3028	 str         r3, [sp, #0x28]
  0ae84		 |$LN8@InitEndpoi|

; 4124 : 
; 4125 :     if (ep->pDmaBuffer != NULL) {

  0ae84	e59d3010	 ldr         r3, [sp, #0x10]
  0ae88	e2833030	 add         r3, r3, #0x30
  0ae8c	e5933000	 ldr         r3, [r3]
  0ae90	e3530000	 cmp         r3, #0
  0ae94	0a000007	 beq         |$LN2@InitEndpoi|

; 4126 :         ERRORMSG(TRUE,
; 4127 :             (L"InitEndpointDmaBuffer: ERROR - DMA buffer already allocated\r\n"));

  0ae98	e3a02a01	 mov         r2, #1, 20
  0ae9c	e382201f	 orr         r2, r2, #0x1F
  0aea0	e59f1230	 ldr         r1, [pc, #0x230]
  0aea4	e59f0228	 ldr         r0, [pc, #0x228]
  0aea8	eb000000	 bl          NKDbgPrintfW
  0aeac	e59f0228	 ldr         r0, [pc, #0x228]
  0aeb0	eb000000	 bl          NKDbgPrintfW

; 4128 :         goto exit;

  0aeb4	ea000052	 b           |$exit$49032|
  0aeb8		 |$LN2@InitEndpoi|

; 4129 :     }
; 4130 : 
; 4131 :     Adapter.ObjectSize = sizeof(DMA_ADAPTER_OBJECT);

  0aeb8	e3a0300c	 mov         r3, #0xC
  0aebc	e1cd31b4	 strh        r3, [sp, #0x14]

; 4132 :     Adapter.InterfaceType = Internal;

  0aec0	e3a03000	 mov         r3, #0
  0aec4	e58d3018	 str         r3, [sp, #0x18]

; 4133 :     Adapter.BusNumber = 0;

  0aec8	e3a03000	 mov         r3, #0
  0aecc	e58d301c	 str         r3, [sp, #0x1C]

; 4134 : 
; 4135 :     LOCK_ENDPOINT(pPdd);

  0aed0	e59d3050	 ldr         r3, [sp, #0x50]
  0aed4	e2830e27	 add         r0, r3, #0x27, 28
  0aed8	eb000000	 bl          EnterCriticalSection

; 4136 :     ep->pDmaBuffer  = (UCHAR *)HalAllocateCommonBuffer(&Adapter, size, &pa, FALSE);

  0aedc	e3a03000	 mov         r3, #0
  0aee0	e28d2004	 add         r2, sp, #4
  0aee4	e59d100c	 ldr         r1, [sp, #0xC]
  0aee8	e28d0014	 add         r0, sp, #0x14
  0aeec	eb000000	 bl          HalAllocateCommonBuffer
  0aef0	e58d002c	 str         r0, [sp, #0x2C]
  0aef4	e59d3010	 ldr         r3, [sp, #0x10]
  0aef8	e2832030	 add         r2, r3, #0x30
  0aefc	e59d302c	 ldr         r3, [sp, #0x2C]
  0af00	e5823000	 str         r3, [r2]

; 4137 :     ep->paDmaBuffer = pa.LowPart;

  0af04	e59d3010	 ldr         r3, [sp, #0x10]
  0af08	e2832034	 add         r2, r3, #0x34
  0af0c	e59d3004	 ldr         r3, [sp, #4]
  0af10	e5823000	 str         r3, [r2]

; 4138 :     UNLOCK_ENDPOINT(pPdd);

  0af14	e59d3050	 ldr         r3, [sp, #0x50]
  0af18	e2830e27	 add         r0, r3, #0x27, 28
  0af1c	eb000000	 bl          LeaveCriticalSection

; 4139 : 
; 4140 :     if (ep->pDmaBuffer == NULL)

  0af20	e59d3010	 ldr         r3, [sp, #0x10]
  0af24	e2833030	 add         r3, r3, #0x30
  0af28	e5933000	 ldr         r3, [r3]
  0af2c	e3530000	 cmp         r3, #0
  0af30	1a000007	 bne         |$LN1@InitEndpoi|

; 4141 :     {
; 4142 :         ERRORMSG(TRUE,
; 4143 :             (L"InitEndpointDmaBuffer: ERROR - Failed to allocate DMA buffer\r\n"));

  0af34	e3a02a01	 mov         r2, #1, 20
  0af38	e382202f	 orr         r2, r2, #0x2F
  0af3c	e59f1194	 ldr         r1, [pc, #0x194]
  0af40	e59f018c	 ldr         r0, [pc, #0x18C]
  0af44	eb000000	 bl          NKDbgPrintfW
  0af48	e59f0180	 ldr         r0, [pc, #0x180]
  0af4c	eb000000	 bl          NKDbgPrintfW

; 4144 :         goto exit;

  0af50	ea00002b	 b           |$exit$49032|
  0af54		 |$LN1@InitEndpoi|

; 4145 :     }
; 4146 :     memset(ep->pDmaBuffer, 0, size);

  0af54	e59d200c	 ldr         r2, [sp, #0xC]
  0af58	e3a01000	 mov         r1, #0
  0af5c	e59d3010	 ldr         r3, [sp, #0x10]
  0af60	e2833030	 add         r3, r3, #0x30
  0af64	e5930000	 ldr         r0, [r3]
  0af68	eb000000	 bl          memset

; 4147 :     rc = TRUE;

  0af6c	e3a03001	 mov         r3, #1
  0af70	e58d3000	 str         r3, [sp]

; 4148 : 
; 4149 :     DEBUGMSG(ZONE_PDD_INIT,
; 4150 :         (L"InitEndpointDmaBuffer: Allocated DMA buffer - PA 0x%08x VA 0x%08x Size 0x%x\r\n",
; 4151 :         ep->pDmaBuffer,
; 4152 :         ep->paDmaBuffer,
; 4153 :         size));

  0af74	e59f314c	 ldr         r3, [pc, #0x14C]
  0af78	e5933440	 ldr         r3, [r3, #0x440]
  0af7c	e3130c01	 tst         r3, #1, 24
  0af80	0a00001d	 beq         |$LN11@InitEndpoi|
  0af84	e59f313c	 ldr         r3, [pc, #0x13C]
  0af88	e5933440	 ldr         r3, [r3, #0x440]
  0af8c	e3130801	 tst         r3, #1, 16
  0af90	0a00000b	 beq         |$LN9@InitEndpoi|
  0af94	e59d300c	 ldr         r3, [sp, #0xC]
  0af98	e59d2010	 ldr         r2, [sp, #0x10]
  0af9c	e2822034	 add         r2, r2, #0x34
  0afa0	e5922000	 ldr         r2, [r2]
  0afa4	e59d1010	 ldr         r1, [sp, #0x10]
  0afa8	e2811030	 add         r1, r1, #0x30
  0afac	e5911000	 ldr         r1, [r1]
  0afb0	e59f0114	 ldr         r0, [pc, #0x114]
  0afb4	eb000000	 bl          CeLogMsg
  0afb8	e3a03001	 mov         r3, #1
  0afbc	e58d3030	 str         r3, [sp, #0x30]
  0afc0	ea00000a	 b           |$LN10@InitEndpoi|
  0afc4		 |$LN9@InitEndpoi|
  0afc4	e59d300c	 ldr         r3, [sp, #0xC]
  0afc8	e59d2010	 ldr         r2, [sp, #0x10]
  0afcc	e2822034	 add         r2, r2, #0x34
  0afd0	e5922000	 ldr         r2, [r2]
  0afd4	e59d1010	 ldr         r1, [sp, #0x10]
  0afd8	e2811030	 add         r1, r1, #0x30
  0afdc	e5911000	 ldr         r1, [r1]
  0afe0	e59f00e4	 ldr         r0, [pc, #0xE4]
  0afe4	eb000000	 bl          NKDbgPrintfW
  0afe8	e3a03000	 mov         r3, #0
  0afec	e58d3030	 str         r3, [sp, #0x30]
  0aff0		 |$LN10@InitEndpoi|
  0aff0	e3a03001	 mov         r3, #1
  0aff4	e58d3034	 str         r3, [sp, #0x34]
  0aff8	ea000001	 b           |$LN12@InitEndpoi|
  0affc		 |$LN11@InitEndpoi|
  0affc	e3a03000	 mov         r3, #0
  0b000	e58d3034	 str         r3, [sp, #0x34]
  0b004		 |$LN12@InitEndpoi|
  0b004		 |$exit$49032|

; 4154 : 
; 4155 : exit:
; 4156 :     DEBUGMSG(ZONE_PDD_INIT,
; 4157 :         (L"-InitEndpointDmaBuffer: %s\r\n",
; 4158 :         rc ?
; 4159 :             L"SUCCEEDED" :
; 4160 :             L"FAILED"));

  0b004	e59f30bc	 ldr         r3, [pc, #0xBC]
  0b008	e5933440	 ldr         r3, [r3, #0x440]
  0b00c	e3130c01	 tst         r3, #1, 24
  0b010	0a000021	 beq         |$LN19@InitEndpoi|
  0b014	e59f30ac	 ldr         r3, [pc, #0xAC]
  0b018	e5933440	 ldr         r3, [r3, #0x440]
  0b01c	e3130801	 tst         r3, #1, 16
  0b020	0a00000d	 beq         |$LN17@InitEndpoi|
  0b024	e59d3000	 ldr         r3, [sp]
  0b028	e3530000	 cmp         r3, #0
  0b02c	0a000002	 beq         |$LN13@InitEndpoi|
  0b030	e59f308c	 ldr         r3, [pc, #0x8C]
  0b034	e58d3038	 str         r3, [sp, #0x38]
  0b038	ea000001	 b           |$LN14@InitEndpoi|
  0b03c		 |$LN13@InitEndpoi|
  0b03c	e59f307c	 ldr         r3, [pc, #0x7C]
  0b040	e58d3038	 str         r3, [sp, #0x38]
  0b044		 |$LN14@InitEndpoi|
  0b044	e59d1038	 ldr         r1, [sp, #0x38]
  0b048	e59f006c	 ldr         r0, [pc, #0x6C]
  0b04c	eb000000	 bl          CeLogMsg
  0b050	e3a03001	 mov         r3, #1
  0b054	e58d303c	 str         r3, [sp, #0x3C]
  0b058	ea00000c	 b           |$LN18@InitEndpoi|
  0b05c		 |$LN17@InitEndpoi|
  0b05c	e59d3000	 ldr         r3, [sp]
  0b060	e3530000	 cmp         r3, #0
  0b064	0a000002	 beq         |$LN15@InitEndpoi|
  0b068	e59f3054	 ldr         r3, [pc, #0x54]
  0b06c	e58d3040	 str         r3, [sp, #0x40]
  0b070	ea000001	 b           |$LN16@InitEndpoi|
  0b074		 |$LN15@InitEndpoi|
  0b074	e59f3044	 ldr         r3, [pc, #0x44]
  0b078	e58d3040	 str         r3, [sp, #0x40]
  0b07c		 |$LN16@InitEndpoi|
  0b07c	e59d1040	 ldr         r1, [sp, #0x40]
  0b080	e59f0034	 ldr         r0, [pc, #0x34]
  0b084	eb000000	 bl          NKDbgPrintfW
  0b088	e3a03000	 mov         r3, #0
  0b08c	e58d303c	 str         r3, [sp, #0x3C]
  0b090		 |$LN18@InitEndpoi|
  0b090	e3a03001	 mov         r3, #1
  0b094	e58d3044	 str         r3, [sp, #0x44]
  0b098	ea000001	 b           |$LN20@InitEndpoi|
  0b09c		 |$LN19@InitEndpoi|
  0b09c	e3a03000	 mov         r3, #0
  0b0a0	e58d3044	 str         r3, [sp, #0x44]
  0b0a4		 |$LN20@InitEndpoi|

; 4161 : 
; 4162 :     return rc;

  0b0a4	e59d3000	 ldr         r3, [sp]
  0b0a8	e58d3020	 str         r3, [sp, #0x20]

; 4163 : }

  0b0ac	e59d0020	 ldr         r0, [sp, #0x20]
  0b0b0	e28dd048	 add         sp, sp, #0x48
  0b0b4	e89d6000	 ldmia       sp, {sp, lr}
  0b0b8	e12fff1e	 bx          lr
  0b0bc		 |$LN24@InitEndpoi|
  0b0bc		 |$LN25@InitEndpoi|
  0b0bc	00000000	 DCD         |??_C@_1DK@PAIDAHAI@?$AA?9?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0b0c0		 |$LN26@InitEndpoi|
  0b0c0	00000000	 DCD         |??_C@_1O@GLIHGOJN@?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@|
  0b0c4		 |$LN27@InitEndpoi|
  0b0c4	00000000	 DCD         |??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@|
  0b0c8		 |$LN28@InitEndpoi|
  0b0c8	00000000	 DCD         |dpCurSettings|
  0b0cc		 |$LN29@InitEndpoi|
  0b0cc	00000000	 DCD         |??_C@_1JM@JGBMJAPB@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd@|
  0b0d0		 |$LN30@InitEndpoi|
  0b0d0	00000000	 DCD         |??_C@_1HO@PILHPEAA@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAF@|
  0b0d4		 |$LN31@InitEndpoi|
  0b0d4	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0b0d8		 |$LN32@InitEndpoi|
  0b0d8	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0b0dc		 |$LN33@InitEndpoi|
  0b0dc	00000000	 DCD         |??_C@_1HM@ONGEIPOP@?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAD@|
  0b0e0		 |$LN34@InitEndpoi|
  0b0e0	00000000	 DCD         |??_C@_1FE@OLDENBML@?$AA?$CL?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5?$AA?$CF@|
  0b0e4		 |$M50846|

			 ENDP  ; |InitEndpointDmaBuffer|

	EXPORT	|??_C@_1DO@PPAHDAGM@?$AA?9?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@HMLPLGML@?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@NCOPMHNE@?$AA?$CL?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AA?9@| [ DATA ] ; `string'
	IMPORT	|HalFreeCommonBuffer|

  00178			 AREA	 |.pdata|, PDATA
|$T50879| DCD	|$LN18@DeinitEndp|
	DCD	0x40008b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@PPAHDAGM@?$AA?9?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@HMLPLGML@?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9@| DCB "D"
	DCB	0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, " ", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@NCOPMHNE@?$AA?$CL?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AA?9@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "b"
	DCB	0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0b0e4			 AREA	 |.text|, CODE, ARM

  0b0e4		 |DeinitEndpointDmaBuffer| PROC

; 4170 : {

  0b0e4		 |$LN18@DeinitEndp|
  0b0e4	e1a0c00d	 mov         r12, sp
  0b0e8	e92d0003	 stmdb       sp!, {r0, r1}
  0b0ec	e92d5000	 stmdb       sp!, {r12, lr}
  0b0f0	e24dd04c	 sub         sp, sp, #0x4C
  0b0f4		 |$M50876|

; 4171 :     BOOL rc = FALSE;

  0b0f4	e3a03000	 mov         r3, #0
  0b0f8	e58d3008	 str         r3, [sp, #8]

; 4172 :     UsbFnEp *ep = &pPdd->ep[epNum];

  0b0fc	e59d3054	 ldr         r3, [sp, #0x54]
  0b100	e2831fa1	 add         r1, r3, #0xA1, 30
  0b104	e59d2058	 ldr         r2, [sp, #0x58]
  0b108	e3a0303c	 mov         r3, #0x3C
  0b10c	e0030392	 mul         r3, r2, r3
  0b110	e0813003	 add         r3, r1, r3
  0b114	e58d3018	 str         r3, [sp, #0x18]

; 4173 :     DWORD size = pPdd->dmaBufferSize;

  0b118	e59d3054	 ldr         r3, [sp, #0x54]
  0b11c	e2833008	 add         r3, r3, #8
  0b120	e5933000	 ldr         r3, [r3]
  0b124	e58d3014	 str         r3, [sp, #0x14]

; 4174 : 
; 4175 :     DMA_ADAPTER_OBJECT Adapter;
; 4176 :     PHYSICAL_ADDRESS pa;
; 4177 : 
; 4178 :     DEBUGMSG(ZONE_PDD_INIT,
; 4179 :         (L"+DeinitEndpointDmaBuffer: EP%u - %u bytes\r\n",
; 4180 :         epNum,
; 4181 :         size));

  0b128	e59f31cc	 ldr         r3, [pc, #0x1CC]
  0b12c	e5933440	 ldr         r3, [r3, #0x440]
  0b130	e3130c01	 tst         r3, #1, 24
  0b134	0a000013	 beq         |$LN6@DeinitEndp|
  0b138	e59f31bc	 ldr         r3, [pc, #0x1BC]
  0b13c	e5933440	 ldr         r3, [r3, #0x440]
  0b140	e3130801	 tst         r3, #1, 16
  0b144	0a000006	 beq         |$LN4@DeinitEndp|
  0b148	e59d2014	 ldr         r2, [sp, #0x14]
  0b14c	e59d1058	 ldr         r1, [sp, #0x58]
  0b150	e59f01b4	 ldr         r0, [pc, #0x1B4]
  0b154	eb000000	 bl          CeLogMsg
  0b158	e3a03001	 mov         r3, #1
  0b15c	e58d3034	 str         r3, [sp, #0x34]
  0b160	ea000005	 b           |$LN5@DeinitEndp|
  0b164		 |$LN4@DeinitEndp|
  0b164	e59d2014	 ldr         r2, [sp, #0x14]
  0b168	e59d1058	 ldr         r1, [sp, #0x58]
  0b16c	e59f0198	 ldr         r0, [pc, #0x198]
  0b170	eb000000	 bl          NKDbgPrintfW
  0b174	e3a03000	 mov         r3, #0
  0b178	e58d3034	 str         r3, [sp, #0x34]
  0b17c		 |$LN5@DeinitEndp|
  0b17c	e3a03001	 mov         r3, #1
  0b180	e58d3038	 str         r3, [sp, #0x38]
  0b184	ea000001	 b           |$LN7@DeinitEndp|
  0b188		 |$LN6@DeinitEndp|
  0b188	e3a03000	 mov         r3, #0
  0b18c	e58d3038	 str         r3, [sp, #0x38]
  0b190		 |$LN7@DeinitEndp|

; 4182 : 
; 4183 :     if (ep->pDmaBuffer == NULL) {

  0b190	e59d3018	 ldr         r3, [sp, #0x18]
  0b194	e2833030	 add         r3, r3, #0x30
  0b198	e5933000	 ldr         r3, [r3]
  0b19c	e3530000	 cmp         r3, #0
  0b1a0	1a000007	 bne         |$LN1@DeinitEndp|

; 4184 :         ERRORMSG(TRUE,
; 4185 :             (L"DeinitEndpointDmaBuffer: ERROR - No DMA buffer\r\n"));

  0b1a4	e3a02a01	 mov         r2, #1, 20
  0b1a8	e3822059	 orr         r2, r2, #0x59
  0b1ac	e59f1154	 ldr         r1, [pc, #0x154]
  0b1b0	e59f014c	 ldr         r0, [pc, #0x14C]
  0b1b4	eb000000	 bl          NKDbgPrintfW
  0b1b8	e59f0140	 ldr         r0, [pc, #0x140]
  0b1bc	eb000000	 bl          NKDbgPrintfW

; 4186 :         goto exit;

  0b1c0	ea00001c	 b           |$exit$49059|
  0b1c4		 |$LN1@DeinitEndp|

; 4187 :     }
; 4188 :     LOCK_ENDPOINT(pPdd);

  0b1c4	e59d3054	 ldr         r3, [sp, #0x54]
  0b1c8	e2830e27	 add         r0, r3, #0x27, 28
  0b1cc	eb000000	 bl          EnterCriticalSection

; 4189 :     pa.QuadPart = ep->paDmaBuffer;

  0b1d0	e59d3018	 ldr         r3, [sp, #0x18]
  0b1d4	e2833034	 add         r3, r3, #0x34
  0b1d8	e5933000	 ldr         r3, [r3]
  0b1dc	e58d300c	 str         r3, [sp, #0xC]
  0b1e0	e3a03000	 mov         r3, #0
  0b1e4	e58d3010	 str         r3, [sp, #0x10]

; 4190 :     HalFreeCommonBuffer(&Adapter, size, pa, ep->pDmaBuffer, FALSE);

  0b1e8	e3a03000	 mov         r3, #0
  0b1ec	e58d3004	 str         r3, [sp, #4]
  0b1f0	e59d3018	 ldr         r3, [sp, #0x18]
  0b1f4	e2833030	 add         r3, r3, #0x30
  0b1f8	e5933000	 ldr         r3, [r3]
  0b1fc	e58d3000	 str         r3, [sp]
  0b200	e59d200c	 ldr         r2, [sp, #0xC]
  0b204	e59d3010	 ldr         r3, [sp, #0x10]
  0b208	e59d1014	 ldr         r1, [sp, #0x14]
  0b20c	e28d001c	 add         r0, sp, #0x1C
  0b210	eb000000	 bl          HalFreeCommonBuffer

; 4191 :     ep->pDmaBuffer = NULL;

  0b214	e59d3018	 ldr         r3, [sp, #0x18]
  0b218	e2832030	 add         r2, r3, #0x30
  0b21c	e3a03000	 mov         r3, #0
  0b220	e5823000	 str         r3, [r2]

; 4192 :     UNLOCK_ENDPOINT(pPdd);

  0b224	e59d3054	 ldr         r3, [sp, #0x54]
  0b228	e2830e27	 add         r0, r3, #0x27, 28
  0b22c	eb000000	 bl          LeaveCriticalSection

; 4193 :     rc = TRUE;

  0b230	e3a03001	 mov         r3, #1
  0b234	e58d3008	 str         r3, [sp, #8]
  0b238		 |$exit$49059|

; 4194 : 
; 4195 : exit:
; 4196 :     DEBUGMSG(ZONE_PDD_INIT,
; 4197 :         (L"-DeinitEndpointDmaBuffer: %s\r\n",
; 4198 :         rc ?
; 4199 :             L"SUCCEEDED" :
; 4200 :             L"FAILED"));

  0b238	e59f30bc	 ldr         r3, [pc, #0xBC]
  0b23c	e5933440	 ldr         r3, [r3, #0x440]
  0b240	e3130c01	 tst         r3, #1, 24
  0b244	0a000021	 beq         |$LN14@DeinitEndp|
  0b248	e59f30ac	 ldr         r3, [pc, #0xAC]
  0b24c	e5933440	 ldr         r3, [r3, #0x440]
  0b250	e3130801	 tst         r3, #1, 16
  0b254	0a00000d	 beq         |$LN12@DeinitEndp|
  0b258	e59d3008	 ldr         r3, [sp, #8]
  0b25c	e3530000	 cmp         r3, #0
  0b260	0a000002	 beq         |$LN8@DeinitEndp|
  0b264	e59f308c	 ldr         r3, [pc, #0x8C]
  0b268	e58d303c	 str         r3, [sp, #0x3C]
  0b26c	ea000001	 b           |$LN9@DeinitEndp|
  0b270		 |$LN8@DeinitEndp|
  0b270	e59f307c	 ldr         r3, [pc, #0x7C]
  0b274	e58d303c	 str         r3, [sp, #0x3C]
  0b278		 |$LN9@DeinitEndp|
  0b278	e59d103c	 ldr         r1, [sp, #0x3C]
  0b27c	e59f006c	 ldr         r0, [pc, #0x6C]
  0b280	eb000000	 bl          CeLogMsg
  0b284	e3a03001	 mov         r3, #1
  0b288	e58d3040	 str         r3, [sp, #0x40]
  0b28c	ea00000c	 b           |$LN13@DeinitEndp|
  0b290		 |$LN12@DeinitEndp|
  0b290	e59d3008	 ldr         r3, [sp, #8]
  0b294	e3530000	 cmp         r3, #0
  0b298	0a000002	 beq         |$LN10@DeinitEndp|
  0b29c	e59f3054	 ldr         r3, [pc, #0x54]
  0b2a0	e58d3044	 str         r3, [sp, #0x44]
  0b2a4	ea000001	 b           |$LN11@DeinitEndp|
  0b2a8		 |$LN10@DeinitEndp|
  0b2a8	e59f3044	 ldr         r3, [pc, #0x44]
  0b2ac	e58d3044	 str         r3, [sp, #0x44]
  0b2b0		 |$LN11@DeinitEndp|
  0b2b0	e59d1044	 ldr         r1, [sp, #0x44]
  0b2b4	e59f0034	 ldr         r0, [pc, #0x34]
  0b2b8	eb000000	 bl          NKDbgPrintfW
  0b2bc	e3a03000	 mov         r3, #0
  0b2c0	e58d3040	 str         r3, [sp, #0x40]
  0b2c4		 |$LN13@DeinitEndp|
  0b2c4	e3a03001	 mov         r3, #1
  0b2c8	e58d3048	 str         r3, [sp, #0x48]
  0b2cc	ea000001	 b           |$LN15@DeinitEndp|
  0b2d0		 |$LN14@DeinitEndp|
  0b2d0	e3a03000	 mov         r3, #0
  0b2d4	e58d3048	 str         r3, [sp, #0x48]
  0b2d8		 |$LN15@DeinitEndp|

; 4201 : 
; 4202 :     return rc;

  0b2d8	e59d3008	 ldr         r3, [sp, #8]
  0b2dc	e58d3030	 str         r3, [sp, #0x30]

; 4203 : }

  0b2e0	e59d0030	 ldr         r0, [sp, #0x30]
  0b2e4	e28dd04c	 add         sp, sp, #0x4C
  0b2e8	e89d6000	 ldmia       sp, {sp, lr}
  0b2ec	e12fff1e	 bx          lr
  0b2f0		 |$LN19@DeinitEndp|
  0b2f0		 |$LN20@DeinitEndp|
  0b2f0	00000000	 DCD         |??_C@_1DO@PPAHDAGM@?$AA?9?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0b2f4		 |$LN21@DeinitEndp|
  0b2f4	00000000	 DCD         |??_C@_1O@GLIHGOJN@?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@|
  0b2f8		 |$LN22@DeinitEndp|
  0b2f8	00000000	 DCD         |??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@|
  0b2fc		 |$LN23@DeinitEndp|
  0b2fc	00000000	 DCD         |dpCurSettings|
  0b300		 |$LN24@DeinitEndp|
  0b300	00000000	 DCD         |??_C@_1GC@HMLPLGML@?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9@|
  0b304		 |$LN25@DeinitEndp|
  0b304	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0b308		 |$LN26@DeinitEndp|
  0b308	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0b30c		 |$LN27@DeinitEndp|
  0b30c	00000000	 DCD         |??_C@_1FI@NCOPMHNE@?$AA?$CL?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?$CF?$AAu?$AA?5?$AA?9@|
  0b310		 |$M50877|

			 ENDP  ; |DeinitEndpointDmaBuffer|

	EXPORT	|??_C@_1KO@JAHICGJ@?$AAU?$AAF?$AAN?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AAT?$AAo?$AAt?$AAa?$AAl?$AAA?$AAl?$AAt?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?3?$AAi?$AAn?$AAc@| [ DATA ] ; `string'

  00180			 AREA	 |.pdata|, PDATA
|$T50894| DCD	|$LN13@GetTotalAl|
	DCD	0x40008a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KO@JAHICGJ@?$AAU?$AAF?$AAN?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AAT?$AAo?$AAt?$AAa?$AAl?$AAA?$AAl?$AAt?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?3?$AAi?$AAn?$AAc@| DCB "U"
	DCB	0x0, "F", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "o", 0x0, "t", 0x0, "a", 0x0, "l"
	DCB	0x0, "A", 0x0, "l", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "n", 0x0, "t", 0x0, ":", 0x0, "i", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "n", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "b", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0b310			 AREA	 |.text|, CODE, ARM

  0b310		 |GetTotalAltSettingCount| PROC

; 4221 : {

  0b310		 |$LN13@GetTotalAl|
  0b310	e1a0c00d	 mov         r12, sp
  0b314	e92d0001	 stmdb       sp!, {r0}
  0b318	e92d5000	 stmdb       sp!, {r12, lr}
  0b31c	e24dd024	 sub         sp, sp, #0x24
  0b320		 |$M50891|

; 4222 :     DWORD dwConfigSize;
; 4223 :     DWORD nAltSettings;
; 4224 :     DWORD nInterfaces;
; 4225 :     DWORD bPrevInterface;
; 4226 :     PUFN_INTERFACE pAltSetting;
; 4227 :     PUFN_ENDPOINT pEndpoint;
; 4228 :     DWORD epcount;
; 4229 :     DWORD dwConfigSerializedSize = pConfiguration->Descriptor.wTotalLength;

  0b320	e59d302c	 ldr         r3, [sp, #0x2C]
  0b324	e2831006	 add         r1, r3, #6
  0b328	e5d13001	 ldrb        r3, [r1, #1]
  0b32c	e1a03403	 mov         r3, r3, lsl #8
  0b330	e1a02803	 mov         r2, r3, lsl #16
  0b334	e1a02822	 mov         r2, r2, lsr #16
  0b338	e5d13000	 ldrb        r3, [r1]
  0b33c	e1833002	 orr         r3, r3, r2
  0b340	e58d3014	 str         r3, [sp, #0x14]

; 4230 : 
; 4231 :     // NOTE: we're only using the LOWORD of cbExtended to work with
; 4232 :     //       one audio driver that uses the HIWORD to pass parsing hints to the MDD.
; 4233 :     //       This limits the cfgextended to 64k, which is plenty.
; 4234 :     dwConfigSize = pConfiguration->Descriptor.bLength + 
; 4235 :                    LOWORD(pConfiguration->cbExtended);

  0b344	e59d302c	 ldr         r3, [sp, #0x2C]
  0b348	e2833004	 add         r3, r3, #4
  0b34c	e5d33000	 ldrb        r3, [r3]
  0b350	e1a02003	 mov         r2, r3
  0b354	e59d302c	 ldr         r3, [sp, #0x2C]
  0b358	e2833014	 add         r3, r3, #0x14
  0b35c	e5933000	 ldr         r3, [r3]
  0b360	e1a03803	 mov         r3, r3, lsl #16
  0b364	e1a03823	 mov         r3, r3, lsr #16
  0b368	e0823003	 add         r3, r2, r3
  0b36c	e58d300c	 str         r3, [sp, #0xC]

; 4236 : 
; 4237 :     if( dwConfigSize >= dwConfigSerializedSize )

  0b370	e59d200c	 ldr         r2, [sp, #0xC]
  0b374	e59d3014	 ldr         r3, [sp, #0x14]
  0b378	e1520003	 cmp         r2, r3
  0b37c	3a000002	 bcc         |$LN8@GetTotalAl|

; 4238 :     {
; 4239 :         // no room in serialized config for any interfaces or alt settings
; 4240 :         return 0;

  0b380	e3a03000	 mov         r3, #0
  0b384	e58d3020	 str         r3, [sp, #0x20]
  0b388	ea000063	 b           |$LN9@GetTotalAl|
  0b38c		 |$LN8@GetTotalAl|

; 4241 :     }
; 4242 : 
; 4243 :     // point to first interface
; 4244 :     nAltSettings = 0;

  0b38c	e3a03000	 mov         r3, #0
  0b390	e58d3008	 str         r3, [sp, #8]

; 4245 :     nInterfaces = 1; // we know there's at least one, as we handled the empty case above.

  0b394	e3a03001	 mov         r3, #1
  0b398	e58d3010	 str         r3, [sp, #0x10]

; 4246 :     pAltSetting = pConfiguration->pInterfaces;

  0b39c	e59d302c	 ldr         r3, [sp, #0x2C]
  0b3a0	e2833018	 add         r3, r3, #0x18
  0b3a4	e5933000	 ldr         r3, [r3]
  0b3a8	e58d3004	 str         r3, [sp, #4]

; 4247 :     bPrevInterface = pAltSetting->Descriptor.bInterfaceNumber;

  0b3ac	e59d3004	 ldr         r3, [sp, #4]
  0b3b0	e2833006	 add         r3, r3, #6
  0b3b4	e5d33000	 ldrb        r3, [r3]
  0b3b8	e58d301c	 str         r3, [sp, #0x1C]
  0b3bc		 |$LN7@GetTotalAl|

; 4248 :     while( dwConfigSize < dwConfigSerializedSize )

  0b3bc	e59d200c	 ldr         r2, [sp, #0xC]
  0b3c0	e59d3014	 ldr         r3, [sp, #0x14]
  0b3c4	e1520003	 cmp         r2, r3
  0b3c8	2a000051	 bcs         |$LN6@GetTotalAl|

; 4249 :     {
; 4250 :         // if we the interface changed from the last we saw
; 4251 :         if( pAltSetting->Descriptor.bInterfaceNumber != bPrevInterface )

  0b3cc	e59d3004	 ldr         r3, [sp, #4]
  0b3d0	e2833006	 add         r3, r3, #6
  0b3d4	e5d32000	 ldrb        r2, [r3]
  0b3d8	e59d301c	 ldr         r3, [sp, #0x1C]
  0b3dc	e1520003	 cmp         r2, r3
  0b3e0	0a00001c	 beq         |$LN5@GetTotalAl|

; 4252 :         {
; 4253 :             ++nInterfaces; // keep interface count

  0b3e4	e59d3010	 ldr         r3, [sp, #0x10]
  0b3e8	e2833001	 add         r3, r3, #1
  0b3ec	e58d3010	 str         r3, [sp, #0x10]

; 4254 : 
; 4255 :             // check for size inconsistency
; 4256 :             if( nInterfaces > pConfiguration->Descriptor.bNumInterfaces )

  0b3f0	e59d302c	 ldr         r3, [sp, #0x2C]
  0b3f4	e2833008	 add         r3, r3, #8
  0b3f8	e5d32000	 ldrb        r2, [r3]
  0b3fc	e59d3010	 ldr         r3, [sp, #0x10]
  0b400	e1530002	 cmp         r3, r2
  0b404	9a00000f	 bls         |$LN4@GetTotalAl|

; 4257 :             {
; 4258 :                 ERRORMSG(TRUE, (TEXT("UFN: GetTotalAltSettingCount:")
; 4259 :                          TEXT("inconsistent size(%d), nInterfaces(%d) bNumInterfaces(%d)"),
; 4260 :                          dwConfigSerializedSize, nInterfaces, 
; 4261 :                          (int)(pConfiguration->Descriptor.bNumInterfaces) ) );

  0b408	e3a02a01	 mov         r2, #1, 20
  0b40c	e38220a5	 orr         r2, r2, #0xA5
  0b410	e59f111c	 ldr         r1, [pc, #0x11C]
  0b414	e59f0114	 ldr         r0, [pc, #0x114]
  0b418	eb000000	 bl          NKDbgPrintfW
  0b41c	e59d302c	 ldr         r3, [sp, #0x2C]
  0b420	e2833008	 add         r3, r3, #8
  0b424	e5d33000	 ldrb        r3, [r3]
  0b428	e59d2010	 ldr         r2, [sp, #0x10]
  0b42c	e59d1014	 ldr         r1, [sp, #0x14]
  0b430	e59f00f4	 ldr         r0, [pc, #0xF4]
  0b434	eb000000	 bl          NKDbgPrintfW

; 4262 :                 return INVALID_ALTSETTING_COUNT;

  0b438	e3a03cff	 mov         r3, #0xFF, 24
  0b43c	e38330ff	 orr         r3, r3, #0xFF
  0b440	e58d3020	 str         r3, [sp, #0x20]
  0b444	ea000034	 b           |$LN9@GetTotalAl|
  0b448		 |$LN4@GetTotalAl|

; 4263 :             }
; 4264 :             bPrevInterface = pAltSetting->Descriptor.bInterfaceNumber;

  0b448	e59d3004	 ldr         r3, [sp, #4]
  0b44c	e2833006	 add         r3, r3, #6
  0b450	e5d33000	 ldrb        r3, [r3]
  0b454	e58d301c	 str         r3, [sp, #0x1C]
  0b458		 |$LN5@GetTotalAl|

; 4265 :         }
; 4266 : 
; 4267 :         dwConfigSize += (pAltSetting->Descriptor.bLength + pAltSetting->cbExtended);

  0b458	e59d3004	 ldr         r3, [sp, #4]
  0b45c	e2833004	 add         r3, r3, #4
  0b460	e5d32000	 ldrb        r2, [r3]
  0b464	e59d3004	 ldr         r3, [sp, #4]
  0b468	e2833014	 add         r3, r3, #0x14
  0b46c	e5933000	 ldr         r3, [r3]
  0b470	e0822003	 add         r2, r2, r3
  0b474	e59d300c	 ldr         r3, [sp, #0xC]
  0b478	e0833002	 add         r3, r3, r2
  0b47c	e58d300c	 str         r3, [sp, #0xC]

; 4268 : 
; 4269 :         // point to first endpoint
; 4270 :         pEndpoint = pAltSetting->pEndpoints;

  0b480	e59d3004	 ldr         r3, [sp, #4]
  0b484	e2833018	 add         r3, r3, #0x18
  0b488	e5933000	 ldr         r3, [r3]
  0b48c	e58d3018	 str         r3, [sp, #0x18]

; 4271 :         for( epcount = 0; 
; 4272 :             epcount < pAltSetting->Descriptor.bNumEndpoints; 
; 4273 :             ++epcount )

  0b490	e3a03000	 mov         r3, #0
  0b494	e58d3000	 str         r3, [sp]
  0b498	ea000002	 b           |$LN3@GetTotalAl|
  0b49c		 |$LN2@GetTotalAl|
  0b49c	e59d3000	 ldr         r3, [sp]
  0b4a0	e2833001	 add         r3, r3, #1
  0b4a4	e58d3000	 str         r3, [sp]
  0b4a8		 |$LN3@GetTotalAl|
  0b4a8	e59d3004	 ldr         r3, [sp, #4]
  0b4ac	e2833008	 add         r3, r3, #8
  0b4b0	e5d32000	 ldrb        r2, [r3]
  0b4b4	e59d3000	 ldr         r3, [sp]
  0b4b8	e1530002	 cmp         r3, r2
  0b4bc	2a00000d	 bcs         |$LN1@GetTotalAl|

; 4274 :         {
; 4275 :             dwConfigSize += 
; 4276 :                (pEndpoint->Descriptor.bLength + pEndpoint->cbExtended);

  0b4c0	e59d3018	 ldr         r3, [sp, #0x18]
  0b4c4	e2833004	 add         r3, r3, #4
  0b4c8	e5d32000	 ldrb        r2, [r3]
  0b4cc	e59d3018	 ldr         r3, [sp, #0x18]
  0b4d0	e2833010	 add         r3, r3, #0x10
  0b4d4	e5933000	 ldr         r3, [r3]
  0b4d8	e0822003	 add         r2, r2, r3
  0b4dc	e59d300c	 ldr         r3, [sp, #0xC]
  0b4e0	e0833002	 add         r3, r3, r2
  0b4e4	e58d300c	 str         r3, [sp, #0xC]

; 4277 :             ++pEndpoint;

  0b4e8	e59d3018	 ldr         r3, [sp, #0x18]
  0b4ec	e2833014	 add         r3, r3, #0x14
  0b4f0	e58d3018	 str         r3, [sp, #0x18]

; 4278 :         }

  0b4f4	eaffffe8	 b           |$LN2@GetTotalAl|
  0b4f8		 |$LN1@GetTotalAl|

; 4279 : 
; 4280 :         ++nAltSettings;

  0b4f8	e59d3008	 ldr         r3, [sp, #8]
  0b4fc	e2833001	 add         r3, r3, #1
  0b500	e58d3008	 str         r3, [sp, #8]

; 4281 :         ++pAltSetting;

  0b504	e59d3004	 ldr         r3, [sp, #4]
  0b508	e283301c	 add         r3, r3, #0x1C
  0b50c	e58d3004	 str         r3, [sp, #4]

; 4282 :     } // while size not matched

  0b510	eaffffa9	 b           |$LN7@GetTotalAl|
  0b514		 |$LN6@GetTotalAl|

; 4283 : 
; 4284 :     return nAltSettings;

  0b514	e59d3008	 ldr         r3, [sp, #8]
  0b518	e58d3020	 str         r3, [sp, #0x20]
  0b51c		 |$LN9@GetTotalAl|

; 4285 : }

  0b51c	e59d0020	 ldr         r0, [sp, #0x20]
  0b520	e28dd024	 add         sp, sp, #0x24
  0b524	e89d6000	 ldmia       sp, {sp, lr}
  0b528	e12fff1e	 bx          lr
  0b52c		 |$LN14@GetTotalAl|
  0b52c		 |$LN15@GetTotalAl|
  0b52c	00000000	 DCD         |??_C@_1KO@JAHICGJ@?$AAU?$AAF?$AAN?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AAT?$AAo?$AAt?$AAa?$AAl?$AAA?$AAl?$AAt?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?3?$AAi?$AAn?$AAc@|
  0b530		 |$LN16@GetTotalAl|
  0b530	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0b534		 |$LN17@GetTotalAl|
  0b534	00000000	 DCD         |??_C@_1JO@JAGHJEHH@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0b538		 |$M50892|

			 ENDP  ; |GetTotalAltSettingCount|

	EXPORT	|UfnPdd_DllEntry|
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|

  00188			 AREA	 |.pdata|, PDATA
|$T50904| DCD	|$LN9@UfnPdd_Dll|
	DCD	0x40001404
; Function compile flags: /Odtp

  0b538			 AREA	 |.text|, CODE, ARM

  0b538		 |UfnPdd_DllEntry| PROC

; 4306 : {

  0b538		 |$LN9@UfnPdd_Dll|
  0b538	e1a0c00d	 mov         r12, sp
  0b53c	e92d0007	 stmdb       sp!, {r0 - r2}
  0b540	e92d5000	 stmdb       sp!, {r12, lr}
  0b544	e24dd004	 sub         sp, sp, #4
  0b548		 |$M50901|

; 4307 : 	UNREFERENCED_PARAMETER(pReserved);
; 4308 : 
; 4309 :     switch (reason)

  0b548	e59d3010	 ldr         r3, [sp, #0x10]
  0b54c	e3530001	 cmp         r3, #1
  0b550	0a000000	 beq         |$LN2@UfnPdd_Dll|
  0b554	ea000004	 b           |$LN3@UfnPdd_Dll|
  0b558		 |$LN2@UfnPdd_Dll|

; 4310 :     {
; 4311 :     case DLL_PROCESS_ATTACH:
; 4312 :         DEBUGREGISTER(hDllHandle);

  0b558	e59f1024	 ldr         r1, [pc, #0x24]
  0b55c	e59d000c	 ldr         r0, [sp, #0xC]
  0b560	eb000000	 bl          RegisterDbgZones

; 4313 :         DisableThreadLibraryCalls((HMODULE)hDllHandle);

  0b564	e59d000c	 ldr         r0, [sp, #0xC]
  0b568	eb000000	 bl          DisableThreadLibraryCalls
  0b56c		 |$LN3@UfnPdd_Dll|

; 4314 :         break;
; 4315 : 
; 4316 :     case DLL_PROCESS_DETACH:
; 4317 :         break;
; 4318 :     }
; 4319 : 
; 4320 :     return TRUE;

  0b56c	e3a03001	 mov         r3, #1
  0b570	e58d3000	 str         r3, [sp]

; 4321 : }

  0b574	e59d0000	 ldr         r0, [sp]
  0b578	e28dd004	 add         sp, sp, #4
  0b57c	e89d6000	 ldmia       sp, {sp, lr}
  0b580	e12fff1e	 bx          lr
  0b584		 |$LN10@UfnPdd_Dll|
  0b584		 |$LN11@UfnPdd_Dll|
  0b584	00000000	 DCD         |dpCurSettings|
  0b588		 |$M50902|

			 ENDP  ; |UfnPdd_DllEntry|

	END
