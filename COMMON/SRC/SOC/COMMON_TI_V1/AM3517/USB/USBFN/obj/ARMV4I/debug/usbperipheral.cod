; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\AM3517\USB\USBFN\usbperipheral.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|ChipCfgLock|

  00000			 AREA	 |.pdata|, PDATA
|$T47510| DCD	|$LN5@ChipCfgLoc|
	DCD	0x40000503
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbfn\usbperipheral.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ChipCfgLock| PROC

; 44   : {

  00000		 |$LN5@ChipCfgLoc|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M47507|

; 45   : 	UNREFERENCED_PARAMETER(pSysConfRegs);
; 46   : 	UNREFERENCED_PARAMETER(lock);
; 47   : 
; 48   :     // Not available on AM3517
; 49   : }

  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M47508|

			 ENDP  ; |ChipCfgLock|

	EXPORT	|DumpUsbRegisters|

  00008			 AREA	 |.pdata|, PDATA
|$T47515| DCD	|$LN5@DumpUsbReg|
	DCD	0x40000503
; Function compile flags: /Odtp

  00014			 AREA	 |.text|, CODE, ARM

  00014		 |DumpUsbRegisters| PROC

; 144  : {

  00014		 |$LN5@DumpUsbReg|
  00014	e1a0c00d	 mov         r12, sp
  00018	e92d0001	 stmdb       sp!, {r0}
  0001c	e92d5000	 stmdb       sp!, {r12, lr}
  00020		 |$M47512|

; 145  : 	UNREFERENCED_PARAMETER(pPdd);
; 146  : 
; 147  :     return;
; 148  : }

  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M47513|

			 ENDP  ; |DumpUsbRegisters|

	EXPORT	|??_C@_1DC@BJKJJPKG@?$AAR?$AAx?$AAP?$AAk?$AAt?$AA?5?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@BELNDAHH@?$AAG?$AAo?$AAt?$AA?5?$AAI?$AAN?$AA_?$AAS?$AAE?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|HandleRxEndPoint|
	IMPORT	|ContinueRxTransfer|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|EnterCriticalSection|

  00010			 AREA	 |.pdata|, PDATA
|$T47529| DCD	|$LN20@HandleRxEn|
	DCD	0x4000b204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@BJKJJPKG@?$AAR?$AAx?$AAP?$AAk?$AAt?$AA?5?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "P", 0x0, "k", 0x0, "t", 0x0, " ", 0x0, "O"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "n"
	DCB	0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@BELNDAHH@?$AAG?$AAo?$AAt?$AA?5?$AAI?$AAN?$AA_?$AAS?$AAE?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "I", 0x0, "N", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "T", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "L", 0x0, "L", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00028			 AREA	 |.text|, CODE, ARM

  00028		 |HandleRxEndPoint| PROC

; 169  : {

  00028		 |$LN20@HandleRxEn|
  00028	e1a0c00d	 mov         r12, sp
  0002c	e92d0003	 stmdb       sp!, {r0, r1}
  00030	e92d5000	 stmdb       sp!, {r12, lr}
  00034	e24dd030	 sub         sp, sp, #0x30
  00038		 |$M47526|

; 170  :     CSL_UsbRegs *pBase = pPddContext->pUsbdRegs;

  00038	e59d3038	 ldr         r3, [sp, #0x38]
  0003c	e283301c	 add         r3, r3, #0x1C
  00040	e5933000	 ldr         r3, [r3]
  00044	e58d3004	 str         r3, [sp, #4]

; 171  :     UsbFnEp  *pEP      = &pPddContext->ep[endPoint];

  00048	e59d3038	 ldr         r3, [sp, #0x38]
  0004c	e2831fa1	 add         r1, r3, #0xA1, 30
  00050	e1dd33bc	 ldrh        r3, [sp, #0x3C]
  00054	e1a02003	 mov         r2, r3
  00058	e3a0303c	 mov         r3, #0x3C
  0005c	e0030392	 mul         r3, r2, r3
  00060	e0813003	 add         r3, r1, r3
  00064	e58d3008	 str         r3, [sp, #8]

; 172  :     UINT16 epCsrVal    = 0;

  00068	e3a03000	 mov         r3, #0
  0006c	e1cd30bc	 strh        r3, [sp, #0xC]

; 173  :     BOOL reportPkt     = FALSE;

  00070	e3a03000	 mov         r3, #0
  00074	e58d3018	 str         r3, [sp, #0x18]

; 174  :     DWORD rc           = ERROR_SUCCESS;

  00078	e3a03000	 mov         r3, #0
  0007c	e58d3000	 str         r3, [sp]

; 175  :     USB_DEVICE_REQUEST udr;
; 176  : 
; 177  :     LOCK_ENDPOINT (pPddContext);

  00080	e59d3038	 ldr         r3, [sp, #0x38]
  00084	e2830e27	 add         r0, r3, #0x27, 28
  00088	eb000000	 bl          EnterCriticalSection

; 178  : 
; 179  :     /* Read the EP Status and Count Registers */
; 180  :     epCsrVal = pBase->EPCSR[ endPoint ].PERI_RXCSR;

  0008c	e59d3004	 ldr         r3, [sp, #4]
  00090	e2831c05	 add         r1, r3, #5, 24
  00094	e1dd33bc	 ldrh        r3, [sp, #0x3C]
  00098	e1a02003	 mov         r2, r3
  0009c	e3a03010	 mov         r3, #0x10
  000a0	e0030392	 mul         r3, r2, r3
  000a4	e0813003	 add         r3, r1, r3
  000a8	e2833006	 add         r3, r3, #6
  000ac	e1d330b0	 ldrh        r3, [r3]
  000b0	e1cd30bc	 strh        r3, [sp, #0xC]

; 181  : 
; 182  :     PRINTMSG(FALSE, /*TRUE, */
; 183  :              (L"EP %u RXSCR 0x%08x\r\n",
; 184  :               endPoint, epCsrVal));
; 185  : 
; 186  :     /* Check if the Host has sent a Stall on this Ep */
; 187  :     if ((epCsrVal & MGC_M_RXCSR_P_SENTSTALL) != 0)

  000b4	e1dd30bc	 ldrh        r3, [sp, #0xC]
  000b8	e3130040	 tst         r3, #0x40
  000bc	0a000036	 beq         |$LN7@HandleRxEn|

; 188  :     {
; 189  :         /*
; 190  :          * Host has sent a STALL on this EP. Clear it and do not
; 191  :          * overwrite the SENDSTALL BIT.
; 192  :          */
; 193  :         epCsrVal &= ~MGC_M_RXCSR_P_SENTSTALL;

  000c0	e1dd30bc	 ldrh        r3, [sp, #0xC]
  000c4	e1a02003	 mov         r2, r3
  000c8	e3e03040	 mvn         r3, #0x40
  000cc	e0023003	 and         r3, r2, r3
  000d0	e1a03803	 mov         r3, r3, lsl #16
  000d4	e1a03823	 mov         r3, r3, lsr #16
  000d8	e1cd30bc	 strh        r3, [sp, #0xC]

; 194  :         pBase->EPCSR[ endPoint ].PERI_RXCSR = epCsrVal;

  000dc	e59d3004	 ldr         r3, [sp, #4]
  000e0	e2831c05	 add         r1, r3, #5, 24
  000e4	e1dd33bc	 ldrh        r3, [sp, #0x3C]
  000e8	e1a02003	 mov         r2, r3
  000ec	e3a03010	 mov         r3, #0x10
  000f0	e0030392	 mul         r3, r2, r3
  000f4	e0813003	 add         r3, r1, r3
  000f8	e2832006	 add         r2, r3, #6
  000fc	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00100	e1c230b0	 strh        r3, [r2]

; 195  : 
; 196  :         /*
; 197  :          * Should we inform the MDD about the EndPoint Stall
; 198  :          * by simulating a SETUP Packet of ENDPOINT CLEAR FEATURE
; 199  :          */
; 200  :         udr.bmRequestType = USB_REQUEST_FOR_ENDPOINT;

  00104	e3a03002	 mov         r3, #2
  00108	e5cd3010	 strb        r3, [sp, #0x10]

; 201  :         udr.bRequest = USB_REQUEST_CLEAR_FEATURE;

  0010c	e3a03001	 mov         r3, #1
  00110	e5cd3011	 strb        r3, [sp, #0x11]

; 202  :         udr.wValue   = USB_FEATURE_ENDPOINT_STALL;

  00114	e3a03000	 mov         r3, #0
  00118	e1cd31b2	 strh        r3, [sp, #0x12]

; 203  :         udr.wIndex   = (BYTE) endPoint;

  0011c	e1dd33bc	 ldrh        r3, [sp, #0x3C]
  00120	e20330ff	 and         r3, r3, #0xFF
  00124	e1cd31b4	 strh        r3, [sp, #0x14]

; 204  :         udr.wLength  = 0;

  00128	e3a03000	 mov         r3, #0
  0012c	e1cd31b6	 strh        r3, [sp, #0x16]

; 205  :         PRINTMSG(ZONE_PDD_RX,
; 206  :                  (_T("Got IN_SENT_STALL EP %u \r\n"), endPoint));

  00130	e59f31b0	 ldr         r3, [pc, #0x1B0]
  00134	e5933440	 ldr         r3, [r3, #0x440]
  00138	e3130b01	 tst         r3, #1, 22
  0013c	0a000011	 beq         |$LN12@HandleRxEn|
  00140	e59f31a0	 ldr         r3, [pc, #0x1A0]
  00144	e5933440	 ldr         r3, [r3, #0x440]
  00148	e3130801	 tst         r3, #1, 16
  0014c	0a000005	 beq         |$LN10@HandleRxEn|
  00150	e1dd13bc	 ldrh        r1, [sp, #0x3C]
  00154	e59f0190	 ldr         r0, [pc, #0x190]
  00158	eb000000	 bl          CeLogMsg
  0015c	e3a03001	 mov         r3, #1
  00160	e58d3020	 str         r3, [sp, #0x20]
  00164	ea000004	 b           |$LN11@HandleRxEn|
  00168		 |$LN10@HandleRxEn|
  00168	e1dd13bc	 ldrh        r1, [sp, #0x3C]
  0016c	e59f0178	 ldr         r0, [pc, #0x178]
  00170	eb000000	 bl          NKDbgPrintfW
  00174	e3a03000	 mov         r3, #0
  00178	e58d3020	 str         r3, [sp, #0x20]
  0017c		 |$LN11@HandleRxEn|
  0017c	e3a03001	 mov         r3, #1
  00180	e58d3024	 str         r3, [sp, #0x24]
  00184	ea000001	 b           |$LN13@HandleRxEn|
  00188		 |$LN12@HandleRxEn|
  00188	e3a03000	 mov         r3, #0
  0018c	e58d3024	 str         r3, [sp, #0x24]
  00190		 |$LN13@HandleRxEn|

; 207  :         reportPkt    = TRUE;

  00190	e3a03001	 mov         r3, #1
  00194	e58d3018	 str         r3, [sp, #0x18]
  00198	ea000033	 b           |$LN6@HandleRxEn|
  0019c		 |$LN7@HandleRxEn|

; 208  :     }
; 209  :     else if ((epCsrVal & MGC_M_RXCSR_P_OVERRUN) != 0)

  0019c	e1dd30bc	 ldrh        r3, [sp, #0xC]
  001a0	e3130004	 tst         r3, #4
  001a4	0a000029	 beq         |$LN5@HandleRxEn|

; 210  :     {
; 211  :         /* Overrun bit set. The Host cannot load data into the
; 212  :          * OUT FIFO. Clear this Bit
; 213  :          */
; 214  :         epCsrVal &= ~MGC_M_RXCSR_P_OVERRUN ;

  001a8	e1dd30bc	 ldrh        r3, [sp, #0xC]
  001ac	e1a02003	 mov         r2, r3
  001b0	e3e03004	 mvn         r3, #4
  001b4	e0023003	 and         r3, r2, r3
  001b8	e1a03803	 mov         r3, r3, lsl #16
  001bc	e1a03823	 mov         r3, r3, lsr #16
  001c0	e1cd30bc	 strh        r3, [sp, #0xC]

; 215  :         pBase->EPCSR[ endPoint ].PERI_RXCSR = epCsrVal;

  001c4	e59d3004	 ldr         r3, [sp, #4]
  001c8	e2831c05	 add         r1, r3, #5, 24
  001cc	e1dd33bc	 ldrh        r3, [sp, #0x3C]
  001d0	e1a02003	 mov         r2, r3
  001d4	e3a03010	 mov         r3, #0x10
  001d8	e0030392	 mul         r3, r2, r3
  001dc	e0813003	 add         r3, r1, r3
  001e0	e2832006	 add         r2, r3, #6
  001e4	e1dd30bc	 ldrh        r3, [sp, #0xC]
  001e8	e1c230b0	 strh        r3, [r2]

; 216  :         PRINTMSG(ZONE_PDD_RX,
; 217  :                  (L"RxPkt Overrun on EP %u\r\n",
; 218  :                   endPoint));

  001ec	e59f30f4	 ldr         r3, [pc, #0xF4]
  001f0	e5933440	 ldr         r3, [r3, #0x440]
  001f4	e3130b01	 tst         r3, #1, 22
  001f8	0a000011	 beq         |$LN16@HandleRxEn|
  001fc	e59f30e4	 ldr         r3, [pc, #0xE4]
  00200	e5933440	 ldr         r3, [r3, #0x440]
  00204	e3130801	 tst         r3, #1, 16
  00208	0a000005	 beq         |$LN14@HandleRxEn|
  0020c	e1dd13bc	 ldrh        r1, [sp, #0x3C]
  00210	e59f00cc	 ldr         r0, [pc, #0xCC]
  00214	eb000000	 bl          CeLogMsg
  00218	e3a03001	 mov         r3, #1
  0021c	e58d3028	 str         r3, [sp, #0x28]
  00220	ea000004	 b           |$LN15@HandleRxEn|
  00224		 |$LN14@HandleRxEn|
  00224	e1dd13bc	 ldrh        r1, [sp, #0x3C]
  00228	e59f00b4	 ldr         r0, [pc, #0xB4]
  0022c	eb000000	 bl          NKDbgPrintfW
  00230	e3a03000	 mov         r3, #0
  00234	e58d3028	 str         r3, [sp, #0x28]
  00238		 |$LN15@HandleRxEn|
  00238	e3a03001	 mov         r3, #1
  0023c	e58d302c	 str         r3, [sp, #0x2C]
  00240	ea000001	 b           |$LN17@HandleRxEn|
  00244		 |$LN16@HandleRxEn|
  00244	e3a03000	 mov         r3, #0
  00248	e58d302c	 str         r3, [sp, #0x2C]
  0024c		 |$LN17@HandleRxEn|

; 219  :     }
; 220  :     /* Else Check if RxPktRdy is Set */
; 221  :     else if ((epCsrVal & MGC_M_RXCSR_RXPKTRDY) != 0)

  0024c	ea000006	 b           |$LN4@HandleRxEn|
  00250		 |$LN5@HandleRxEn|
  00250	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00254	e3130001	 tst         r3, #1
  00258	0a000003	 beq         |$LN3@HandleRxEn|

; 222  :     {
; 223  :         /* Move into RX Mode by updating the EP Status Struct */
; 224  :         pEP->epStage = MGC_END0_STAGE_RX;

  0025c	e59d3008	 ldr         r3, [sp, #8]
  00260	e283201c	 add         r2, r3, #0x1C
  00264	e3a03003	 mov         r3, #3
  00268	e5823000	 str         r3, [r2]
  0026c		 |$LN3@HandleRxEn|
  0026c		 |$LN4@HandleRxEn|
  0026c		 |$LN6@HandleRxEn|

; 225  :     }
; 226  :     UNLOCK_ENDPOINT(pPddContext);

  0026c	e59d3038	 ldr         r3, [sp, #0x38]
  00270	e2830e27	 add         r0, r3, #0x27, 28
  00274	eb000000	 bl          LeaveCriticalSection

; 227  : 
; 228  :     if (!pEP->usingDma)

  00278	e59d3008	 ldr         r3, [sp, #8]
  0027c	e2833028	 add         r3, r3, #0x28
  00280	e5933000	 ldr         r3, [r3]
  00284	e3530000	 cmp         r3, #0
  00288	1a000002	 bne         |$LN2@HandleRxEn|

; 229  :         ContinueRxTransfer (pPddContext, endPoint) ;

  0028c	e1dd13bc	 ldrh        r1, [sp, #0x3C]
  00290	e59d0038	 ldr         r0, [sp, #0x38]
  00294	eb000000	 bl          ContinueRxTransfer
  00298		 |$LN2@HandleRxEn|

; 230  : 
; 231  :     /* Final Check: If the Host has requested for a Stall on any endPoint,
; 232  :      * we will be informing to the Host through constructing a Clear
; 233  :      * EndPoint feature SETUP Pkt. This needs to be notified to MDD
; 234  :      */
; 235  :     if (reportPkt == TRUE)

  00298	e59d3018	 ldr         r3, [sp, #0x18]
  0029c	e3530001	 cmp         r3, #1
  002a0	1a000009	 bne         |$LN1@HandleRxEn|

; 236  :     {
; 237  :         pPddContext->pfnNotify(pPddContext->pMddContext, UFN_MSG_SETUP_PACKET,
; 238  :                                (DWORD) &udr);

  002a4	e28d2010	 add         r2, sp, #0x10
  002a8	e3a01004	 mov         r1, #4
  002ac	e59d3038	 ldr         r3, [sp, #0x38]
  002b0	e2833010	 add         r3, r3, #0x10
  002b4	e5930000	 ldr         r0, [r3]
  002b8	e59d3038	 ldr         r3, [sp, #0x38]
  002bc	e2833014	 add         r3, r3, #0x14
  002c0	e5933000	 ldr         r3, [r3]
  002c4	e1a0e00f	 mov         lr, pc
  002c8	e12fff13	 bx          r3
  002cc		 |$LN1@HandleRxEn|

; 239  :     }
; 240  :     return (rc);

  002cc	e59d3000	 ldr         r3, [sp]
  002d0	e58d301c	 str         r3, [sp, #0x1C]

; 241  : 
; 242  : }

  002d4	e59d001c	 ldr         r0, [sp, #0x1C]
  002d8	e28dd030	 add         sp, sp, #0x30
  002dc	e89d6000	 ldmia       sp, {sp, lr}
  002e0	e12fff1e	 bx          lr
  002e4		 |$LN21@HandleRxEn|
  002e4		 |$LN22@HandleRxEn|
  002e4	00000000	 DCD         |??_C@_1DC@BJKJJPKG@?$AAR?$AAx?$AAP?$AAk?$AAt?$AA?5?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@|
  002e8		 |$LN23@HandleRxEn|
  002e8	00000000	 DCD         |dpCurSettings|
  002ec		 |$LN24@HandleRxEn|
  002ec	00000000	 DCD         |??_C@_1DG@BELNDAHH@?$AAG?$AAo?$AAt?$AA?5?$AAI?$AAN?$AA_?$AAS?$AAE?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  002f0		 |$M47527|

			 ENDP  ; |HandleRxEndPoint|

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00018			 AREA	 |.pdata|, PDATA
|$T47547| DCD	|$LN7@CeLogMsg|
	DCD	0xc0003704

  00000			 AREA	 |.xdata|, DATA
|$T47543| DCD	0xffffffcc
; Function compile flags: /Odtp
; File c:\wince600\public\common\sdk\inc\celog.h

  002f0			 AREA	 |.text|, CODE, ARM

  002f0	00000000	 DCD         |__GSHandlerCheck|
  002f4	00000000	 DCD         |$T47543|

  002f8		 |CeLogMsg| PROC

; 1020 : {

  002f8		 |$LN7@CeLogMsg|
  002f8	e1a0c00d	 mov         r12, sp
  002fc	e92d000f	 stmdb       sp!, {r0 - r3}
  00300	e92d5000	 stmdb       sp!, {r12, lr}
  00304	e24ddd09	 sub         sp, sp, #9, 26
  00308		 |$M47544|
  00308	e59f30c0	 ldr         r3, [pc, #0xC0]
  0030c	e5933000	 ldr         r3, [r3]
  00310	e58d3224	 str         r3, [sp, #0x224]

; 1021 :     va_list arglist;
; 1022 :     WCHAR   szTemp[MAX_PATH];
; 1023 :     size_t  cchLen;
; 1024 :     HRESULT hr;
; 1025 : 
; 1026 :     // Compose a single string using the input args
; 1027 :     va_start(arglist, szFormat);

  00314	e28d3f92	 add         r3, sp, #0x92, 30
  00318	e2833004	 add         r3, r3, #4
  0031c	e58d3010	 str         r3, [sp, #0x10]

; 1028 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00320	e59d3010	 ldr         r3, [sp, #0x10]
  00324	e59d2248	 ldr         r2, [sp, #0x248]
  00328	e3a01f41	 mov         r1, #0x41, 30
  0032c	e28d0014	 add         r0, sp, #0x14
  00330	eb000000	 bl          StringCchVPrintfW
  00334	e58d0238	 str         r0, [sp, #0x238]
  00338	e59d3238	 ldr         r3, [sp, #0x238]
  0033c	e58d321c	 str         r3, [sp, #0x21C]

; 1029 :     if (SUCCEEDED(hr)) {

  00340	e59d321c	 ldr         r3, [sp, #0x21C]
  00344	e3530000	 cmp         r3, #0
  00348	ba00001b	 blt         |$LN2@CeLogMsg|

; 1030 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  0034c	e28d2e22	 add         r2, sp, #0x22, 28
  00350	e3a01f41	 mov         r1, #0x41, 30
  00354	e28d0014	 add         r0, sp, #0x14
  00358	eb000000	 bl          StringCchLengthW
  0035c	e58d023c	 str         r0, [sp, #0x23C]
  00360	e59d323c	 ldr         r3, [sp, #0x23C]
  00364	e58d321c	 str         r3, [sp, #0x21C]

; 1031 :         if (SUCCEEDED(hr)) {

  00368	e59d321c	 ldr         r3, [sp, #0x21C]
  0036c	e3530000	 cmp         r3, #0
  00370	ba000011	 blt         |$LN1@CeLogMsg|

; 1032 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1033 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00374	e3a03000	 mov         r3, #0
  00378	e58d300c	 str         r3, [sp, #0xC]
  0037c	e3a03000	 mov         r3, #0
  00380	e58d3008	 str         r3, [sp, #8]
  00384	e3a03101	 mov         r3, #1, 2
  00388	e58d3004	 str         r3, [sp, #4]
  0038c	e3a03000	 mov         r3, #0
  00390	e58d3000	 str         r3, [sp]
  00394	e59d3220	 ldr         r3, [sp, #0x220]
  00398	e2832001	 add         r2, r3, #1
  0039c	e3a03002	 mov         r3, #2
  003a0	e0030392	 mul         r3, r2, r3
  003a4	e1a03803	 mov         r3, r3, lsl #16
  003a8	e1a03823	 mov         r3, r3, lsr #16
  003ac	e28d2014	 add         r2, sp, #0x14
  003b0	e3a0104a	 mov         r1, #0x4A
  003b4	e3a00001	 mov         r0, #1
  003b8	eb000000	 bl          CeLogData
  003bc		 |$LN1@CeLogMsg|
  003bc		 |$LN2@CeLogMsg|

; 1020 : {

  003bc	e59d0224	 ldr         r0, [sp, #0x224]
  003c0	eb000000	 bl          __security_check_cookie

; 1034 :         }
; 1035 :     }
; 1036 : }

  003c4	e28ddd09	 add         sp, sp, #9, 26
  003c8	e89d6000	 ldmia       sp, {sp, lr}
  003cc	e12fff1e	 bx          lr
  003d0		 |$LN8@CeLogMsg|
  003d0		 |$LN9@CeLogMsg|
  003d0	00000000	 DCD         |__security_cookie|
  003d4		 |$M47545|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??_C@_1DI@MNACHDDJ@?$AAG?$AAo?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA_?$AAS?$AAE?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|HandleTxEndPoint|
	IMPORT	|ContinueTxTransfer|
	IMPORT	|TxDmaFifoComplete|

  00020			 AREA	 |.pdata|, PDATA
|$T47559| DCD	|$LN17@HandleTxEn|
	DCD	0x4000b404
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbfn\usbperipheral.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@MNACHDDJ@?$AAG?$AAo?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA_?$AAS?$AAE?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "N", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "L", 0x0, "L", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  003d4			 AREA	 |.text|, CODE, ARM

  003d4		 |HandleTxEndPoint| PROC

; 263  : {

  003d4		 |$LN17@HandleTxEn|
  003d4	e1a0c00d	 mov         r12, sp
  003d8	e92d0003	 stmdb       sp!, {r0, r1}
  003dc	e92d5000	 stmdb       sp!, {r12, lr}
  003e0	e24dd028	 sub         sp, sp, #0x28
  003e4		 |$M47556|

; 264  :     CSL_UsbRegs  *pBase = pPddContext->pUsbdRegs;

  003e4	e59d3030	 ldr         r3, [sp, #0x30]
  003e8	e283301c	 add         r3, r3, #0x1C
  003ec	e5933000	 ldr         r3, [r3]
  003f0	e58d3004	 str         r3, [sp, #4]

; 265  :     UsbFnEp  *pEP        = &pPddContext->ep[endPoint];

  003f4	e59d3030	 ldr         r3, [sp, #0x30]
  003f8	e2831fa1	 add         r1, r3, #0xA1, 30
  003fc	e1dd33b4	 ldrh        r3, [sp, #0x34]
  00400	e1a02003	 mov         r2, r3
  00404	e3a0303c	 mov         r3, #0x3C
  00408	e0030392	 mul         r3, r2, r3
  0040c	e0813003	 add         r3, r1, r3
  00410	e58d3008	 str         r3, [sp, #8]

; 266  :     USB_DEVICE_REQUEST udr;
; 267  :     UINT16 epCsrVal;
; 268  :     BOOL reportPkt = FALSE;

  00414	e3a03000	 mov         r3, #0
  00418	e58d3018	 str         r3, [sp, #0x18]

; 269  :     DWORD rc = ERROR_SUCCESS;

  0041c	e3a03000	 mov         r3, #0
  00420	e58d3000	 str         r3, [sp]

; 270  : 
; 271  :     LOCK_ENDPOINT (pPddContext);

  00424	e59d3030	 ldr         r3, [sp, #0x30]
  00428	e2830e27	 add         r0, r3, #0x27, 28
  0042c	eb000000	 bl          EnterCriticalSection

; 272  : 
; 273  :     /* Read the EP Status and Count Registers */
; 274  :     epCsrVal = pBase->EPCSR[ endPoint ].PERI_TXCSR;

  00430	e59d3004	 ldr         r3, [sp, #4]
  00434	e2831c05	 add         r1, r3, #5, 24
  00438	e1dd33b4	 ldrh        r3, [sp, #0x34]
  0043c	e1a02003	 mov         r2, r3
  00440	e3a03010	 mov         r3, #0x10
  00444	e0030392	 mul         r3, r2, r3
  00448	e0813003	 add         r3, r1, r3
  0044c	e2833002	 add         r3, r3, #2
  00450	e1d330b0	 ldrh        r3, [r3]
  00454	e1cd30bc	 strh        r3, [sp, #0xC]

; 275  : 
; 276  :     PRINTMSG(FALSE, /*ZONE_SEND ZONE_FUNCTION, TRUE,  */
; 277  :              (L"EP %u: TXCSR 0x%08x\r\n",
; 278  :               endPoint, epCsrVal));
; 279  : 
; 280  :     /* Check if we have received a Stall on this EP */
; 281  :     if ((epCsrVal & MGC_M_TXCSR_P_SENTSTALL) != 0)

  00458	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0045c	e3130020	 tst         r3, #0x20
  00460	0a000038	 beq         |$LN8@HandleTxEn|

; 282  :     {
; 283  :         /* Host has sent a Stall to the Tx EP.Clear it */
; 284  :         epCsrVal &= ~MGC_M_TXCSR_P_SENTSTALL;

  00464	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00468	e1a02003	 mov         r2, r3
  0046c	e3e03020	 mvn         r3, #0x20
  00470	e0023003	 and         r3, r2, r3
  00474	e1a03803	 mov         r3, r3, lsl #16
  00478	e1a03823	 mov         r3, r3, lsr #16
  0047c	e1cd30bc	 strh        r3, [sp, #0xC]

; 285  :         pBase->EPCSR[ endPoint ].PERI_TXCSR = epCsrVal;

  00480	e59d3004	 ldr         r3, [sp, #4]
  00484	e2831c05	 add         r1, r3, #5, 24
  00488	e1dd33b4	 ldrh        r3, [sp, #0x34]
  0048c	e1a02003	 mov         r2, r3
  00490	e3a03010	 mov         r3, #0x10
  00494	e0030392	 mul         r3, r2, r3
  00498	e0813003	 add         r3, r1, r3
  0049c	e2832002	 add         r2, r3, #2
  004a0	e1dd30bc	 ldrh        r3, [sp, #0xC]
  004a4	e1c230b0	 strh        r3, [r2]

; 286  : 
; 287  :         /* Should we inform the MDD about the EndPoint Stall
; 288  :          * by simulating a SETUP Packet of ENDPOINT CLEAR FEATURE
; 289  :          */
; 290  :         udr.bmRequestType = USB_REQUEST_FOR_ENDPOINT;

  004a8	e3a03002	 mov         r3, #2
  004ac	e5cd3010	 strb        r3, [sp, #0x10]

; 291  :         udr.bRequest = USB_REQUEST_CLEAR_FEATURE;

  004b0	e3a03001	 mov         r3, #1
  004b4	e5cd3011	 strb        r3, [sp, #0x11]

; 292  :         udr.wValue = USB_FEATURE_ENDPOINT_STALL;

  004b8	e3a03000	 mov         r3, #0
  004bc	e1cd31b2	 strh        r3, [sp, #0x12]

; 293  :         udr.wIndex = USB_ENDPOINT_DIRECTION_MASK | (BYTE) endPoint;

  004c0	e1dd33b4	 ldrh        r3, [sp, #0x34]
  004c4	e20330ff	 and         r3, r3, #0xFF
  004c8	e3833080	 orr         r3, r3, #0x80
  004cc	e1a03803	 mov         r3, r3, lsl #16
  004d0	e1a03823	 mov         r3, r3, lsr #16
  004d4	e1cd31b4	 strh        r3, [sp, #0x14]

; 294  :         udr.wLength = 0;

  004d8	e3a03000	 mov         r3, #0
  004dc	e1cd31b6	 strh        r3, [sp, #0x16]

; 295  : 
; 296  :         PRINTMSG(ZONE_PDD_TX,
; 297  :                  (_T("Got OUT_SENT_STALL EP %u \r\n"), endPoint));

  004e0	e59f31b8	 ldr         r3, [pc, #0x1B8]
  004e4	e5933440	 ldr         r3, [r3, #0x440]
  004e8	e3130b02	 tst         r3, #2, 22
  004ec	0a000011	 beq         |$LN13@HandleTxEn|
  004f0	e59f31a8	 ldr         r3, [pc, #0x1A8]
  004f4	e5933440	 ldr         r3, [r3, #0x440]
  004f8	e3130801	 tst         r3, #1, 16
  004fc	0a000005	 beq         |$LN11@HandleTxEn|
  00500	e1dd13b4	 ldrh        r1, [sp, #0x34]
  00504	e59f0190	 ldr         r0, [pc, #0x190]
  00508	eb000000	 bl          CeLogMsg
  0050c	e3a03001	 mov         r3, #1
  00510	e58d3020	 str         r3, [sp, #0x20]
  00514	ea000004	 b           |$LN12@HandleTxEn|
  00518		 |$LN11@HandleTxEn|
  00518	e1dd13b4	 ldrh        r1, [sp, #0x34]
  0051c	e59f0178	 ldr         r0, [pc, #0x178]
  00520	eb000000	 bl          NKDbgPrintfW
  00524	e3a03000	 mov         r3, #0
  00528	e58d3020	 str         r3, [sp, #0x20]
  0052c		 |$LN12@HandleTxEn|
  0052c	e3a03001	 mov         r3, #1
  00530	e58d3024	 str         r3, [sp, #0x24]
  00534	ea000001	 b           |$LN14@HandleTxEn|
  00538		 |$LN13@HandleTxEn|
  00538	e3a03000	 mov         r3, #0
  0053c	e58d3024	 str         r3, [sp, #0x24]
  00540		 |$LN14@HandleTxEn|

; 298  :         reportPkt = TRUE;

  00540	e3a03001	 mov         r3, #1
  00544	e58d3018	 str         r3, [sp, #0x18]
  00548		 |$LN8@HandleTxEn|

; 299  :     }
; 300  : 
; 301  :     if ((epCsrVal & MGC_M_TXCSR_P_UNDERRUN) != 0)

  00548	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0054c	e3130004	 tst         r3, #4
  00550	0a000010	 beq         |$LN7@HandleTxEn|

; 302  :     {
; 303  :         /* Received next IN token already - just clear the bit */
; 304  :         epCsrVal &= ~( MGC_M_TXCSR_P_UNDERRUN);

  00554	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00558	e1a02003	 mov         r2, r3
  0055c	e3e03004	 mvn         r3, #4
  00560	e0023003	 and         r3, r2, r3
  00564	e1a03803	 mov         r3, r3, lsl #16
  00568	e1a03823	 mov         r3, r3, lsr #16
  0056c	e1cd30bc	 strh        r3, [sp, #0xC]

; 305  :         pBase->EPCSR[ endPoint ].PERI_TXCSR = epCsrVal;

  00570	e59d3004	 ldr         r3, [sp, #4]
  00574	e2831c05	 add         r1, r3, #5, 24
  00578	e1dd33b4	 ldrh        r3, [sp, #0x34]
  0057c	e1a02003	 mov         r2, r3
  00580	e3a03010	 mov         r3, #0x10
  00584	e0030392	 mul         r3, r2, r3
  00588	e0813003	 add         r3, r1, r3
  0058c	e2832002	 add         r2, r3, #2
  00590	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00594	e1c230b0	 strh        r3, [r2]
  00598		 |$LN7@HandleTxEn|

; 306  :     }
; 307  : 
; 308  :     if ((epCsrVal & MGC_M_TXCSR1_FIFONOTEMPTY) != 0)

  00598	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0059c	e3130002	 tst         r3, #2
  005a0	0a000010	 beq         |$LN6@HandleTxEn|

; 309  :     {
; 310  :         epCsrVal &= ~( MGC_M_TXCSR1_FIFONOTEMPTY);

  005a4	e1dd30bc	 ldrh        r3, [sp, #0xC]
  005a8	e1a02003	 mov         r2, r3
  005ac	e3e03002	 mvn         r3, #2
  005b0	e0023003	 and         r3, r2, r3
  005b4	e1a03803	 mov         r3, r3, lsl #16
  005b8	e1a03823	 mov         r3, r3, lsr #16
  005bc	e1cd30bc	 strh        r3, [sp, #0xC]

; 311  :         pBase->EPCSR[ endPoint ].PERI_TXCSR = epCsrVal;

  005c0	e59d3004	 ldr         r3, [sp, #4]
  005c4	e2831c05	 add         r1, r3, #5, 24
  005c8	e1dd33b4	 ldrh        r3, [sp, #0x34]
  005cc	e1a02003	 mov         r2, r3
  005d0	e3a03010	 mov         r3, #0x10
  005d4	e0030392	 mul         r3, r2, r3
  005d8	e0813003	 add         r3, r1, r3
  005dc	e2832002	 add         r2, r3, #2
  005e0	e1dd30bc	 ldrh        r3, [sp, #0xC]
  005e4	e1c230b0	 strh        r3, [r2]
  005e8		 |$LN6@HandleTxEn|

; 312  :     }
; 313  : 
; 314  :     UNLOCK_ENDPOINT(pPddContext);

  005e8	e59d3030	 ldr         r3, [sp, #0x30]
  005ec	e2830e27	 add         r0, r3, #0x27, 28
  005f0	eb000000	 bl          LeaveCriticalSection

; 315  : 
; 316  :     if (pEP->epStage == MGC_END0_STAGE_TX || pEP->epStage == MGC_END0_STAGE_ACKWAIT)

  005f4	e59d3008	 ldr         r3, [sp, #8]
  005f8	e283301c	 add         r3, r3, #0x1C
  005fc	e5933000	 ldr         r3, [r3]
  00600	e3530002	 cmp         r3, #2
  00604	0a000004	 beq         |$LN4@HandleTxEn|
  00608	e59d3008	 ldr         r3, [sp, #8]
  0060c	e283301c	 add         r3, r3, #0x1C
  00610	e5933000	 ldr         r3, [r3]
  00614	e3530006	 cmp         r3, #6
  00618	1a00000c	 bne         |$LN5@HandleTxEn|
  0061c		 |$LN4@HandleTxEn|

; 317  :     {
; 318  :         // If using DMA we were waiting for the packet to go out of FIFO onto the bus
; 319  :         if (pEP->usingDma)

  0061c	e59d3008	 ldr         r3, [sp, #8]
  00620	e2833028	 add         r3, r3, #0x28
  00624	e5933000	 ldr         r3, [r3]
  00628	e3530000	 cmp         r3, #0
  0062c	0a000004	 beq         |$LN3@HandleTxEn|

; 320  :             TxDmaFifoComplete(pPddContext, endPoint) ;

  00630	e1dd33b4	 ldrh        r3, [sp, #0x34]
  00634	e1a01003	 mov         r1, r3
  00638	e59d0030	 ldr         r0, [sp, #0x30]
  0063c	eb000000	 bl          TxDmaFifoComplete

; 321  :         else

  00640	ea000002	 b           |$LN2@HandleTxEn|
  00644		 |$LN3@HandleTxEn|

; 322  :             ContinueTxTransfer (pPddContext, endPoint) ;

  00644	e1dd13b4	 ldrh        r1, [sp, #0x34]
  00648	e59d0030	 ldr         r0, [sp, #0x30]
  0064c	eb000000	 bl          ContinueTxTransfer
  00650		 |$LN2@HandleTxEn|
  00650		 |$LN5@HandleTxEn|

; 323  :     }
; 324  : 
; 325  :     /* Final Check: If the Host has requested for a Stall on any endPoint,
; 326  :      * we will be informing to the Host through constructing a Clear
; 327  :      * EndPoint feature SETUP Pkt. This needs to be notified to MDD
; 328  :      */
; 329  :     if (reportPkt == TRUE)

  00650	e59d3018	 ldr         r3, [sp, #0x18]
  00654	e3530001	 cmp         r3, #1
  00658	1a000009	 bne         |$LN1@HandleTxEn|

; 330  :     {
; 331  :         pPddContext->pfnNotify(pPddContext->pMddContext, UFN_MSG_SETUP_PACKET,
; 332  :                                (DWORD) &udr);

  0065c	e28d2010	 add         r2, sp, #0x10
  00660	e3a01004	 mov         r1, #4
  00664	e59d3030	 ldr         r3, [sp, #0x30]
  00668	e2833010	 add         r3, r3, #0x10
  0066c	e5930000	 ldr         r0, [r3]
  00670	e59d3030	 ldr         r3, [sp, #0x30]
  00674	e2833014	 add         r3, r3, #0x14
  00678	e5933000	 ldr         r3, [r3]
  0067c	e1a0e00f	 mov         lr, pc
  00680	e12fff13	 bx          r3
  00684		 |$LN1@HandleTxEn|

; 333  :     }
; 334  : 
; 335  :     return (rc);

  00684	e59d3000	 ldr         r3, [sp]
  00688	e58d301c	 str         r3, [sp, #0x1C]

; 336  : }

  0068c	e59d001c	 ldr         r0, [sp, #0x1C]
  00690	e28dd028	 add         sp, sp, #0x28
  00694	e89d6000	 ldmia       sp, {sp, lr}
  00698	e12fff1e	 bx          lr
  0069c		 |$LN18@HandleTxEn|
  0069c		 |$LN19@HandleTxEn|
  0069c	00000000	 DCD         |??_C@_1DI@MNACHDDJ@?$AAG?$AAo?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA_?$AAS?$AAE?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  006a0		 |$LN20@HandleTxEn|
  006a0	00000000	 DCD         |dpCurSettings|
  006a4		 |$M47557|

			 ENDP  ; |HandleTxEndPoint|

	EXPORT	|??_C@_1GA@NPGMBOIN@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@INFALCOG@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAQ?$AAu?$AAe?$AAu?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@NBAFIMMN@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@EBDELBLD@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KI@PEJHCIPD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@PBIPJADL@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAZ?$AAL?$AAP?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@NFMGBILE@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@MFNEGFEB@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@CFHIKAIP@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@BKADMJME@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAN?$AAT?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@DHKENKHE@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAS?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| [ DATA ] ; `string'
	EXPORT	|UsbPddEp0IntrHandler|
	IMPORT	|SetupUsbRequest|
	IMPORT	|ContinueEp0RxTransfer|
	IMPORT	|ContinueEp0TxTransfer|
	IMPORT	|Sleep|

  00028			 AREA	 |.pdata|, PDATA
|$T47616| DCD	|$LN85@UsbPddEp0I|
	DCD	0x4002e704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@NPGMBOIN@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAs?$AAe@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p", 0x0, " ", 0x0, "p"
	DCB	0x0, "k", 0x0, "t", 0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@INFALCOG@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAQ?$AAu?$AAe?$AAu?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "Q", 0x0, "u", 0x0, "e"
	DCB	0x0, "u", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p", 0x0, " ", 0x0, "p"
	DCB	0x0, "k", 0x0, "t", 0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@NBAFIMMN@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAs@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p", 0x0, " "
	DCB	0x0, "p", 0x0, "k", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "p"
	DCB	0x0, "r", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "o", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "p", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "!"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@EBDELBLD@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAE@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P", 0x0, " ", 0x0, "p"
	DCB	0x0, "k", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KI@PEJHCIPD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "A", 0x0, "M", 0x0, "3", 0x0, "5", 0x0, "1", 0x0, "7"
	DCB	0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "\\", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, "\\", 0x0, "."
	DCB	0x0, "\\", 0x0, "u", 0x0, "s", 0x0, "b", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r"
	DCB	0x0, "a", 0x0, "l", 0x0, ".", 0x0, "c", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@PBIPJADL@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAZ?$AAL?$AAP?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA0@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "Z", 0x0, "L", 0x0, "P"
	DCB	0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, "0", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@NFMGBILE@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AA?9@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, "U", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c"
	DCB	0x0, "e", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@MFNEGFEB@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AA?9@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, "U", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c"
	DCB	0x0, "e", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "p", 0x0, " ", 0x0, "p", 0x0, "k", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@CFHIKAIP@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAr@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, "U", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@BKADMJME@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAN?$AAT?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "E", 0x0, "N"
	DCB	0x0, "T", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "L", 0x0, "L"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@DHKENKHE@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAS?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "E"
	DCB	0x0, "p", 0x0, "0", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "R"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "C", 0x0, "O", 0x0, "U"
	DCB	0x0, "N", 0x0, "T", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  006a4			 AREA	 |.text|, CODE, ARM

  006a4		 |UsbPddEp0IntrHandler| PROC

; 354  : {

  006a4		 |$LN85@UsbPddEp0I|
  006a4	e1a0c00d	 mov         r12, sp
  006a8	e92d0001	 stmdb       sp!, {r0}
  006ac	e92d5000	 stmdb       sp!, {r12, lr}
  006b0	e24dd07c	 sub         sp, sp, #0x7C
  006b4		 |$M47613|

; 355  :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pPddContext;

  006b4	e59d3084	 ldr         r3, [sp, #0x84]
  006b8	e58d3020	 str         r3, [sp, #0x20]

; 356  :     CSL_UsbRegs *pBase = pPdd->pUsbdRegs;

  006bc	e59d3020	 ldr         r3, [sp, #0x20]
  006c0	e283301c	 add         r3, r3, #0x1C
  006c4	e5933000	 ldr         r3, [r3]
  006c8	e58d3004	 str         r3, [sp, #4]

; 357  :     UsbFnEp     *pEP = NULL;

  006cc	e3a03000	 mov         r3, #0
  006d0	e58d3010	 str         r3, [sp, #0x10]

; 358  :     volatile UCHAR *pFifoReg = NULL;

  006d4	e3a03000	 mov         r3, #0
  006d8	e58d300c	 str         r3, [sp, #0xC]

; 359  :     UINT8       epNum = 0;

  006dc	e3a03000	 mov         r3, #0
  006e0	e5cd3000	 strb        r3, [sp]

; 360  :     UINT16      ep0Csr;
; 361  :     UINT16      ep0Count;
; 362  :     BOOL        zeroLenSetup = FALSE;

  006e4	e3a03000	 mov         r3, #0
  006e8	e58d3014	 str         r3, [sp, #0x14]

; 363  :     BOOL        reportPkt = FALSE;

  006ec	e3a03000	 mov         r3, #0
  006f0	e58d301c	 str         r3, [sp, #0x1C]

; 364  :     STransfer   *pTransfer;
; 365  : 
; 366  :     LOCK_ENDPOINT(pPdd);

  006f4	e59d3020	 ldr         r3, [sp, #0x20]
  006f8	e2830e27	 add         r0, r3, #0x27, 28
  006fc	eb000000	 bl          EnterCriticalSection

; 367  : 
; 368  :     pEP = &pPdd->ep[epNum];

  00700	e59d3020	 ldr         r3, [sp, #0x20]
  00704	e2831fa1	 add         r1, r3, #0xA1, 30
  00708	e5dd3000	 ldrb        r3, [sp]
  0070c	e1a02003	 mov         r2, r3
  00710	e3a0303c	 mov         r3, #0x3C
  00714	e0030392	 mul         r3, r2, r3
  00718	e0813003	 add         r3, r1, r3
  0071c	e58d3010	 str         r3, [sp, #0x10]

; 369  :     pTransfer = pEP->pTransfer;

  00720	e59d3010	 ldr         r3, [sp, #0x10]
  00724	e2833020	 add         r3, r3, #0x20
  00728	e5933000	 ldr         r3, [r3]
  0072c	e58d3008	 str         r3, [sp, #8]

; 370  :     pFifoReg = (UCHAR *)(&pBase->FIFO[ epNum ]);

  00730	e59d3004	 ldr         r3, [sp, #4]
  00734	e2831e42	 add         r1, r3, #0x42, 28
  00738	e5dd3000	 ldrb        r3, [sp]
  0073c	e1a02003	 mov         r2, r3
  00740	e3a03004	 mov         r3, #4
  00744	e0030392	 mul         r3, r2, r3
  00748	e0813003	 add         r3, r1, r3
  0074c	e58d300c	 str         r3, [sp, #0xC]

; 371  : 
; 372  :     ep0Csr = pBase->EPCSR[ epNum ].PERI_TXCSR;

  00750	e59d3004	 ldr         r3, [sp, #4]
  00754	e2831c05	 add         r1, r3, #5, 24
  00758	e5dd3000	 ldrb        r3, [sp]
  0075c	e1a02003	 mov         r2, r3
  00760	e3a03010	 mov         r3, #0x10
  00764	e0030392	 mul         r3, r2, r3
  00768	e0813003	 add         r3, r1, r3
  0076c	e2833002	 add         r3, r3, #2
  00770	e1d330b0	 ldrh        r3, [r3]
  00774	e1cd31ba	 strh        r3, [sp, #0x1A]

; 373  :     ep0Count = pBase->EPCSR[ epNum ].RXCOUNT;

  00778	e59d3004	 ldr         r3, [sp, #4]
  0077c	e2831c05	 add         r1, r3, #5, 24
  00780	e5dd3000	 ldrb        r3, [sp]
  00784	e1a02003	 mov         r2, r3
  00788	e3a03010	 mov         r3, #0x10
  0078c	e0030392	 mul         r3, r2, r3
  00790	e0813003	 add         r3, r1, r3
  00794	e2833008	 add         r3, r3, #8
  00798	e1d330b0	 ldrh        r3, [r3]
  0079c	e1cd31b8	 strh        r3, [sp, #0x18]

; 374  : 
; 375  :     PRINTMSG(ZONE_PDD_EP0, (L"UsbPddEp0IntrHandler: CSR 0x%08x, COUNT %u\r\n",
; 376  :                            ep0Csr, ep0Count));

  007a0	e59f3a68	 ldr         r3, [pc, #0xA68]
  007a4	e5933440	 ldr         r3, [r3, #0x440]
  007a8	e3130c02	 tst         r3, #2, 24
  007ac	0a000013	 beq         |$LN36@UsbPddEp0I|
  007b0	e59f3a58	 ldr         r3, [pc, #0xA58]
  007b4	e5933440	 ldr         r3, [r3, #0x440]
  007b8	e3130801	 tst         r3, #1, 16
  007bc	0a000006	 beq         |$LN34@UsbPddEp0I|
  007c0	e1dd21b8	 ldrh        r2, [sp, #0x18]
  007c4	e1dd11ba	 ldrh        r1, [sp, #0x1A]
  007c8	e59f0a6c	 ldr         r0, [pc, #0xA6C]
  007cc	eb000000	 bl          CeLogMsg
  007d0	e3a03001	 mov         r3, #1
  007d4	e58d3024	 str         r3, [sp, #0x24]
  007d8	ea000005	 b           |$LN35@UsbPddEp0I|
  007dc		 |$LN34@UsbPddEp0I|
  007dc	e1dd21b8	 ldrh        r2, [sp, #0x18]
  007e0	e1dd11ba	 ldrh        r1, [sp, #0x1A]
  007e4	e59f0a50	 ldr         r0, [pc, #0xA50]
  007e8	eb000000	 bl          NKDbgPrintfW
  007ec	e3a03000	 mov         r3, #0
  007f0	e58d3024	 str         r3, [sp, #0x24]
  007f4		 |$LN35@UsbPddEp0I|
  007f4	e3a03001	 mov         r3, #1
  007f8	e58d3028	 str         r3, [sp, #0x28]
  007fc	ea000001	 b           |$LN37@UsbPddEp0I|
  00800		 |$LN36@UsbPddEp0I|
  00800	e3a03000	 mov         r3, #0
  00804	e58d3028	 str         r3, [sp, #0x28]
  00808		 |$LN37@UsbPddEp0I|

; 377  : 
; 378  :     /* Check if controller has sent a STALL condition to the host */
; 379  :     if ((ep0Csr & MGC_M_CSR0_P_SENTSTALL) != 0)

  00808	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  0080c	e3130004	 tst         r3, #4
  00810	0a000032	 beq         |$LN31@UsbPddEp0I|

; 380  :     {
; 381  :         PRINTMSG(ZONE_PDD_EP0, (L"UsbPddEp0IntrHandler: SENTSTALL indicated\r\n"));

  00814	e59f39f4	 ldr         r3, [pc, #0x9F4]
  00818	e5933440	 ldr         r3, [r3, #0x440]
  0081c	e3130c02	 tst         r3, #2, 24
  00820	0a00000f	 beq         |$LN40@UsbPddEp0I|
  00824	e59f39e4	 ldr         r3, [pc, #0x9E4]
  00828	e5933440	 ldr         r3, [r3, #0x440]
  0082c	e3130801	 tst         r3, #1, 16
  00830	0a000004	 beq         |$LN38@UsbPddEp0I|
  00834	e59f09fc	 ldr         r0, [pc, #0x9FC]
  00838	eb000000	 bl          CeLogMsg
  0083c	e3a03001	 mov         r3, #1
  00840	e58d302c	 str         r3, [sp, #0x2C]
  00844	ea000003	 b           |$LN39@UsbPddEp0I|
  00848		 |$LN38@UsbPddEp0I|
  00848	e59f09e8	 ldr         r0, [pc, #0x9E8]
  0084c	eb000000	 bl          NKDbgPrintfW
  00850	e3a03000	 mov         r3, #0
  00854	e58d302c	 str         r3, [sp, #0x2C]
  00858		 |$LN39@UsbPddEp0I|
  00858	e3a03001	 mov         r3, #1
  0085c	e58d3030	 str         r3, [sp, #0x30]
  00860	ea000001	 b           |$LN41@UsbPddEp0I|
  00864		 |$LN40@UsbPddEp0I|
  00864	e3a03000	 mov         r3, #0
  00868	e58d3030	 str         r3, [sp, #0x30]
  0086c		 |$LN41@UsbPddEp0I|

; 382  :         ep0Csr &= ~MGC_EP0_STALL_BITS;

  0086c	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00870	e1a02003	 mov         r2, r3
  00874	e3e03024	 mvn         r3, #0x24
  00878	e0023003	 and         r3, r2, r3
  0087c	e1a03803	 mov         r3, r3, lsl #16
  00880	e1a03823	 mov         r3, r3, lsr #16
  00884	e1cd31ba	 strh        r3, [sp, #0x1A]

; 383  :         pBase->EPCSR[ epNum ].PERI_TXCSR = ep0Csr;

  00888	e59d3004	 ldr         r3, [sp, #4]
  0088c	e2831c05	 add         r1, r3, #5, 24
  00890	e5dd3000	 ldrb        r3, [sp]
  00894	e1a02003	 mov         r2, r3
  00898	e3a03010	 mov         r3, #0x10
  0089c	e0030392	 mul         r3, r2, r3
  008a0	e0813003	 add         r3, r1, r3
  008a4	e2832002	 add         r2, r3, #2
  008a8	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  008ac	e1c230b0	 strh        r3, [r2]

; 384  :         Sleep(1);

  008b0	e3a00001	 mov         r0, #1
  008b4	eb000000	 bl          Sleep

; 385  :         pEP->epStage = MGC_END0_START;

  008b8	e59d3010	 ldr         r3, [sp, #0x10]
  008bc	e283201c	 add         r2, r3, #0x1C
  008c0	e3a03001	 mov         r3, #1
  008c4	e5823000	 str         r3, [r2]

; 386  :         pPdd->fWaitingForHandshake = FALSE;

  008c8	e59d3020	 ldr         r3, [sp, #0x20]
  008cc	e2833c06	 add         r3, r3, #6, 24
  008d0	e283204c	 add         r2, r3, #0x4C
  008d4	e3a03000	 mov         r3, #0
  008d8	e5823000	 str         r3, [r2]

; 387  :         goto done;

  008dc	ea000235	 b           |$done$47295|
  008e0		 |$LN31@UsbPddEp0I|

; 388  :     }
; 389  : 
; 390  :     /* Received a SETUPEND from host? */
; 391  :     if ((ep0Csr & MGC_M_CSR0_P_SETUPEND) != 0)

  008e0	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  008e4	e3130010	 tst         r3, #0x10
  008e8	0a00009b	 beq         |$LN30@UsbPddEp0I|

; 392  :     {
; 393  :         PRINTMSG(ZONE_PDD_EP0, (L"UsbPddEp0IntrHandler: SETUPEND received\r\n"));

  008ec	e59f391c	 ldr         r3, [pc, #0x91C]
  008f0	e5933440	 ldr         r3, [r3, #0x440]
  008f4	e3130c02	 tst         r3, #2, 24
  008f8	0a00000f	 beq         |$LN44@UsbPddEp0I|
  008fc	e59f390c	 ldr         r3, [pc, #0x90C]
  00900	e5933440	 ldr         r3, [r3, #0x440]
  00904	e3130801	 tst         r3, #1, 16
  00908	0a000004	 beq         |$LN42@UsbPddEp0I|
  0090c	e59f0920	 ldr         r0, [pc, #0x920]
  00910	eb000000	 bl          CeLogMsg
  00914	e3a03001	 mov         r3, #1
  00918	e58d3034	 str         r3, [sp, #0x34]
  0091c	ea000003	 b           |$LN43@UsbPddEp0I|
  00920		 |$LN42@UsbPddEp0I|
  00920	e59f090c	 ldr         r0, [pc, #0x90C]
  00924	eb000000	 bl          NKDbgPrintfW
  00928	e3a03000	 mov         r3, #0
  0092c	e58d3034	 str         r3, [sp, #0x34]
  00930		 |$LN43@UsbPddEp0I|
  00930	e3a03001	 mov         r3, #1
  00934	e58d3038	 str         r3, [sp, #0x38]
  00938	ea000001	 b           |$LN45@UsbPddEp0I|
  0093c		 |$LN44@UsbPddEp0I|
  0093c	e3a03000	 mov         r3, #0
  00940	e58d3038	 str         r3, [sp, #0x38]
  00944		 |$LN45@UsbPddEp0I|

; 394  : 
; 395  :         /* Acknowledge the SETUPEND Request From host  */
; 396  :         ep0Csr &= ~MGC_M_CSR0_P_SETUPEND;

  00944	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00948	e1a02003	 mov         r2, r3
  0094c	e3e03010	 mvn         r3, #0x10
  00950	e0023003	 and         r3, r2, r3
  00954	e1a03803	 mov         r3, r3, lsl #16
  00958	e1a03823	 mov         r3, r3, lsr #16
  0095c	e1cd31ba	 strh        r3, [sp, #0x1A]

; 397  :         pBase->EPCSR[ epNum ].PERI_TXCSR = MGC_M_CSR0_P_SVDSETUPEND;

  00960	e59d3004	 ldr         r3, [sp, #4]
  00964	e2831c05	 add         r1, r3, #5, 24
  00968	e5dd3000	 ldrb        r3, [sp]
  0096c	e1a02003	 mov         r2, r3
  00970	e3a03010	 mov         r3, #0x10
  00974	e0030392	 mul         r3, r2, r3
  00978	e0813003	 add         r3, r1, r3
  0097c	e2832002	 add         r2, r3, #2
  00980	e3a03080	 mov         r3, #0x80
  00984	e1c230b0	 strh        r3, [r2]

; 398  :         Sleep(1);

  00988	e3a00001	 mov         r0, #1
  0098c	eb000000	 bl          Sleep

; 399  : 
; 400  :         /* Now Tell MDD also that the current Transaction is cancelled */
; 401  :         pEP->epStage = MGC_END0_START;

  00990	e59d3010	 ldr         r3, [sp, #0x10]
  00994	e283201c	 add         r2, r3, #0x1C
  00998	e3a03001	 mov         r3, #1
  0099c	e5823000	 str         r3, [r2]

; 402  : 
; 403  :         if (pPdd->fHasQueuedSetupRequest)

  009a0	e59d3020	 ldr         r3, [sp, #0x20]
  009a4	e2833e65	 add         r3, r3, #0x65, 28
  009a8	e5933000	 ldr         r3, [r3]
  009ac	e3530000	 cmp         r3, #0
  009b0	0a00001a	 beq         |$LN29@UsbPddEp0I|

; 404  :         {
; 405  :             PRINTMSG(ZONE_PDD_EP0, (L"UsbPddEp0IntrHandler: SETUPEND - Cancelling queued setup pkt\r\n"));

  009b4	e59f3854	 ldr         r3, [pc, #0x854]
  009b8	e5933440	 ldr         r3, [r3, #0x440]
  009bc	e3130c02	 tst         r3, #2, 24
  009c0	0a00000f	 beq         |$LN48@UsbPddEp0I|
  009c4	e59f3844	 ldr         r3, [pc, #0x844]
  009c8	e5933440	 ldr         r3, [r3, #0x440]
  009cc	e3130801	 tst         r3, #1, 16
  009d0	0a000004	 beq         |$LN46@UsbPddEp0I|
  009d4	e59f0854	 ldr         r0, [pc, #0x854]
  009d8	eb000000	 bl          CeLogMsg
  009dc	e3a03001	 mov         r3, #1
  009e0	e58d303c	 str         r3, [sp, #0x3C]
  009e4	ea000003	 b           |$LN47@UsbPddEp0I|
  009e8		 |$LN46@UsbPddEp0I|
  009e8	e59f0840	 ldr         r0, [pc, #0x840]
  009ec	eb000000	 bl          NKDbgPrintfW
  009f0	e3a03000	 mov         r3, #0
  009f4	e58d303c	 str         r3, [sp, #0x3C]
  009f8		 |$LN47@UsbPddEp0I|
  009f8	e3a03001	 mov         r3, #1
  009fc	e58d3040	 str         r3, [sp, #0x40]
  00a00	ea000001	 b           |$LN49@UsbPddEp0I|
  00a04		 |$LN48@UsbPddEp0I|
  00a04	e3a03000	 mov         r3, #0
  00a08	e58d3040	 str         r3, [sp, #0x40]
  00a0c		 |$LN49@UsbPddEp0I|

; 406  :             pPdd->fHasQueuedSetupRequest = FALSE;

  00a0c	e59d3020	 ldr         r3, [sp, #0x20]
  00a10	e2832e65	 add         r2, r3, #0x65, 28
  00a14	e3a03000	 mov         r3, #0
  00a18	e5823000	 str         r3, [r2]
  00a1c	ea000036	 b           |$LN28@UsbPddEp0I|
  00a20		 |$LN29@UsbPddEp0I|

; 407  :         }
; 408  :         else if (pTransfer)

  00a20	e59d3008	 ldr         r3, [sp, #8]
  00a24	e3530000	 cmp         r3, #0
  00a28	0a000033	 beq         |$LN27@UsbPddEp0I|

; 409  :         {
; 410  :             PRINTMSG(ZONE_PDD_EP0, (L"UsbPddEp0IntrHandler: SETUPEND - Cancelling transfer\r\n"));

  00a2c	e59f37dc	 ldr         r3, [pc, #0x7DC]
  00a30	e5933440	 ldr         r3, [r3, #0x440]
  00a34	e3130c02	 tst         r3, #2, 24
  00a38	0a00000f	 beq         |$LN52@UsbPddEp0I|
  00a3c	e59f37cc	 ldr         r3, [pc, #0x7CC]
  00a40	e5933440	 ldr         r3, [r3, #0x440]
  00a44	e3130801	 tst         r3, #1, 16
  00a48	0a000004	 beq         |$LN50@UsbPddEp0I|
  00a4c	e59f07d8	 ldr         r0, [pc, #0x7D8]
  00a50	eb000000	 bl          CeLogMsg
  00a54	e3a03001	 mov         r3, #1
  00a58	e58d3044	 str         r3, [sp, #0x44]
  00a5c	ea000003	 b           |$LN51@UsbPddEp0I|
  00a60		 |$LN50@UsbPddEp0I|
  00a60	e59f07c4	 ldr         r0, [pc, #0x7C4]
  00a64	eb000000	 bl          NKDbgPrintfW
  00a68	e3a03000	 mov         r3, #0
  00a6c	e58d3044	 str         r3, [sp, #0x44]
  00a70		 |$LN51@UsbPddEp0I|
  00a70	e3a03001	 mov         r3, #1
  00a74	e58d3048	 str         r3, [sp, #0x48]
  00a78	ea000001	 b           |$LN53@UsbPddEp0I|
  00a7c		 |$LN52@UsbPddEp0I|
  00a7c	e3a03000	 mov         r3, #0
  00a80	e58d3048	 str         r3, [sp, #0x48]
  00a84		 |$LN53@UsbPddEp0I|

; 411  :             pTransfer->dwUsbError = UFN_CANCELED_ERROR;

  00a84	e59d3008	 ldr         r3, [sp, #8]
  00a88	e2832014	 add         r2, r3, #0x14
  00a8c	e3a03c01	 mov         r3, #1, 24
  00a90	e3833001	 orr         r3, r3, #1
  00a94	e5823000	 str         r3, [r2]

; 412  :             pEP->pTransfer = NULL;

  00a98	e59d3010	 ldr         r3, [sp, #0x10]
  00a9c	e2832020	 add         r2, r3, #0x20
  00aa0	e3a03000	 mov         r3, #0
  00aa4	e5823000	 str         r3, [r2]

; 413  :             UNLOCK_ENDPOINT(pPdd);

  00aa8	e59d3020	 ldr         r3, [sp, #0x20]
  00aac	e2830e27	 add         r0, r3, #0x27, 28
  00ab0	eb000000	 bl          LeaveCriticalSection

; 414  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  00ab4	e59d2008	 ldr         r2, [sp, #8]
  00ab8	e3a01064	 mov         r1, #0x64
  00abc	e59d3020	 ldr         r3, [sp, #0x20]
  00ac0	e2833010	 add         r3, r3, #0x10
  00ac4	e5930000	 ldr         r0, [r3]
  00ac8	e59d3020	 ldr         r3, [sp, #0x20]
  00acc	e2833014	 add         r3, r3, #0x14
  00ad0	e5933000	 ldr         r3, [r3]
  00ad4	e1a0e00f	 mov         lr, pc
  00ad8	e12fff13	 bx          r3

; 415  :             LOCK_ENDPOINT(pPdd);

  00adc	e59d3020	 ldr         r3, [sp, #0x20]
  00ae0	e2830e27	 add         r0, r3, #0x27, 28
  00ae4	eb000000	 bl          EnterCriticalSection

; 416  :             pPdd->fWaitingForHandshake = FALSE;

  00ae8	e59d3020	 ldr         r3, [sp, #0x20]
  00aec	e2833c06	 add         r3, r3, #6, 24
  00af0	e283204c	 add         r2, r3, #0x4C
  00af4	e3a03000	 mov         r3, #0
  00af8	e5823000	 str         r3, [r2]
  00afc		 |$LN27@UsbPddEp0I|
  00afc		 |$LN28@UsbPddEp0I|

; 417  :         }
; 418  : 
; 419  :         /* Received new setup? */
; 420  :         ep0Csr = pBase->EPCSR[ epNum ].PERI_TXCSR;

  00afc	e59d3004	 ldr         r3, [sp, #4]
  00b00	e2831c05	 add         r1, r3, #5, 24
  00b04	e5dd3000	 ldrb        r3, [sp]
  00b08	e1a02003	 mov         r2, r3
  00b0c	e3a03010	 mov         r3, #0x10
  00b10	e0030392	 mul         r3, r2, r3
  00b14	e0813003	 add         r3, r1, r3
  00b18	e2833002	 add         r3, r3, #2
  00b1c	e1d330b0	 ldrh        r3, [r3]
  00b20	e1cd31ba	 strh        r3, [sp, #0x1A]

; 421  :         ep0Count = pBase->EPCSR[ epNum ].RXCOUNT;

  00b24	e59d3004	 ldr         r3, [sp, #4]
  00b28	e2831c05	 add         r1, r3, #5, 24
  00b2c	e5dd3000	 ldrb        r3, [sp]
  00b30	e1a02003	 mov         r2, r3
  00b34	e3a03010	 mov         r3, #0x10
  00b38	e0030392	 mul         r3, r2, r3
  00b3c	e0813003	 add         r3, r1, r3
  00b40	e2833008	 add         r3, r3, #8
  00b44	e1d330b0	 ldrh        r3, [r3]
  00b48	e1cd31b8	 strh        r3, [sp, #0x18]

; 422  :         if (ep0Csr == 0)

  00b4c	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00b50	e3530000	 cmp         r3, #0
  00b54	1a000000	 bne         |$LN26@UsbPddEp0I|

; 423  :             goto done;

  00b58	ea000196	 b           |$done$47295|
  00b5c		 |$LN26@UsbPddEp0I|
  00b5c		 |$LN30@UsbPddEp0I|

; 424  :     }
; 425  : 
; 426  :     /* Handle Zero Packet case and mid-transfer states.
; 427  :      * Zero packet case: This can happen when the Host has sent a Zero
; 428  :      * Length packet Interrupt on the EP0. This is typically used when:
; 429  :      * 1. The Host has received the previous data correctly and has
; 430  :      * acknowledged the same.
; 431  :      * 2. There is a huge amount of transfer to be done and we are
; 432  :      * responding back to the Host in chunks. After the transfer of
; 433  :      * each chunk, the host will send an interrupt with zero packet
; 434  :      * length. And the RXPKTRDY or TXPKTRDY will not be set.
; 435  :      */
; 436  :     if (((ep0Csr == 0x00) && (ep0Count == 0x00)) ||
; 437  :         pEP->epStage == MGC_END0_STAGE_STATUSIN ||
; 438  :         pEP->epStage == MGC_END0_STAGE_STATUSOUT ||
; 439  :         pEP->epStage == MGC_END0_STAGE_TX ||
; 440  :         pEP->epStage == MGC_END0_STAGE_RX ||
; 441  :         pEP->epStage == MGC_END0_STAGE_ACKWAIT)

  00b5c	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00b60	e3530000	 cmp         r3, #0
  00b64	1a000002	 bne         |$LN23@UsbPddEp0I|
  00b68	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00b6c	e3530000	 cmp         r3, #0
  00b70	0a000018	 beq         |$LN24@UsbPddEp0I|
  00b74		 |$LN23@UsbPddEp0I|
  00b74	e59d3010	 ldr         r3, [sp, #0x10]
  00b78	e283301c	 add         r3, r3, #0x1C
  00b7c	e5933000	 ldr         r3, [r3]
  00b80	e3530004	 cmp         r3, #4
  00b84	0a000013	 beq         |$LN24@UsbPddEp0I|
  00b88	e59d3010	 ldr         r3, [sp, #0x10]
  00b8c	e283301c	 add         r3, r3, #0x1C
  00b90	e5933000	 ldr         r3, [r3]
  00b94	e3530005	 cmp         r3, #5
  00b98	0a00000e	 beq         |$LN24@UsbPddEp0I|
  00b9c	e59d3010	 ldr         r3, [sp, #0x10]
  00ba0	e283301c	 add         r3, r3, #0x1C
  00ba4	e5933000	 ldr         r3, [r3]
  00ba8	e3530002	 cmp         r3, #2
  00bac	0a000009	 beq         |$LN24@UsbPddEp0I|
  00bb0	e59d3010	 ldr         r3, [sp, #0x10]
  00bb4	e283301c	 add         r3, r3, #0x1C
  00bb8	e5933000	 ldr         r3, [r3]
  00bbc	e3530003	 cmp         r3, #3
  00bc0	0a000004	 beq         |$LN24@UsbPddEp0I|
  00bc4	e59d3010	 ldr         r3, [sp, #0x10]
  00bc8	e283301c	 add         r3, r3, #0x1C
  00bcc	e5933000	 ldr         r3, [r3]
  00bd0	e3530006	 cmp         r3, #6
  00bd4	1a00006c	 bne         |$LN25@UsbPddEp0I|
  00bd8		 |$LN24@UsbPddEp0I|

; 442  :     {
; 443  :         switch (pEP->epStage)

  00bd8	e59d3010	 ldr         r3, [sp, #0x10]
  00bdc	e283301c	 add         r3, r3, #0x1C
  00be0	e5933000	 ldr         r3, [r3]
  00be4	e58d304c	 str         r3, [sp, #0x4C]
  00be8	e59d304c	 ldr         r3, [sp, #0x4C]
  00bec	e2433002	 sub         r3, r3, #2
  00bf0	e58d304c	 str         r3, [sp, #0x4C]
  00bf4	e59d304c	 ldr         r3, [sp, #0x4C]
  00bf8	e3530004	 cmp         r3, #4
  00bfc	8a000028	 bhi         |$LN17@UsbPddEp0I|
  00c00	e59d204c	 ldr         r2, [sp, #0x4C]
  00c04	e1a03102	 mov         r3, r2, lsl #2
  00c08	e083300f	 add         r3, r3, pc
  00c0c	e5933004	 ldr         r3, [r3, #4]
  00c10	e08ff003	 add         pc, pc, r3
  00c14		 |$LN77@UsbPddEp0I|
  00c14		 |$LN76@UsbPddEp0I|
  00c14		 |$LN78@UsbPddEp0I|
  00c14	00000010	 DCD         0x10
  00c18		 |$LN79@UsbPddEp0I|
  00c18	00000020	 DCD         0x20
  00c1c		 |$LN80@UsbPddEp0I|
  00c1c	00000020	 DCD         0x20
  00c20		 |$LN81@UsbPddEp0I|
  00c20	00000010	 DCD         0x10
  00c24		 |$LN82@UsbPddEp0I|
  00c24	00000030	 DCD         0x30
  00c28		 |$LN20@UsbPddEp0I|

; 444  :         {
; 445  :         case MGC_END0_STAGE_TX:
; 446  :         case MGC_END0_STAGE_STATUSOUT:
; 447  :             /* Continue with the Previous Transfer */
; 448  :             ContinueEp0TxTransfer(pPdd, epNum);

  00c28	e5dd1000	 ldrb        r1, [sp]
  00c2c	e59d0020	 ldr         r0, [sp, #0x20]
  00c30	eb000000	 bl          ContinueEp0TxTransfer

; 449  :             break;

  00c34	ea000036	 b           |$LN21@UsbPddEp0I|
  00c38		 |$LN19@UsbPddEp0I|

; 450  :         case MGC_END0_STAGE_RX:
; 451  :         case MGC_END0_STAGE_STATUSIN:
; 452  :             /* Continue with the Previous Transfer */
; 453  :             ContinueEp0RxTransfer(pPdd, epNum) ;

  00c38	e5dd1000	 ldrb        r1, [sp]
  00c3c	e59d0020	 ldr         r0, [sp, #0x20]
  00c40	eb000000	 bl          ContinueEp0RxTransfer

; 454  :             break;

  00c44	ea000032	 b           |$LN21@UsbPddEp0I|
  00c48		 |$LN18@UsbPddEp0I|

; 455  :         case MGC_END0_STAGE_ACKWAIT:
; 456  :             /* Can now report zero data setup */
; 457  :             pEP->epStage = MGC_END0_START;

  00c48	e59d3010	 ldr         r3, [sp, #0x10]
  00c4c	e283201c	 add         r2, r3, #0x1C
  00c50	e3a03001	 mov         r3, #1
  00c54	e5823000	 str         r3, [r2]

; 458  :             UNLOCK_ENDPOINT(pPdd);

  00c58	e59d3020	 ldr         r3, [sp, #0x20]
  00c5c	e2830e27	 add         r0, r3, #0x27, 28
  00c60	eb000000	 bl          LeaveCriticalSection

; 459  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SETUP_PACKET, (DWORD)&pPdd->setupRequest);

  00c64	e59d3020	 ldr         r3, [sp, #0x20]
  00c68	e2833c06	 add         r3, r3, #6, 24
  00c6c	e2832044	 add         r2, r3, #0x44
  00c70	e3a01004	 mov         r1, #4
  00c74	e59d3020	 ldr         r3, [sp, #0x20]
  00c78	e2833010	 add         r3, r3, #0x10
  00c7c	e5930000	 ldr         r0, [r3]
  00c80	e59d3020	 ldr         r3, [sp, #0x20]
  00c84	e2833014	 add         r3, r3, #0x14
  00c88	e5933000	 ldr         r3, [r3]
  00c8c	e1a0e00f	 mov         lr, pc
  00c90	e12fff13	 bx          r3

; 460  :             LOCK_ENDPOINT(pPdd);

  00c94	e59d3020	 ldr         r3, [sp, #0x20]
  00c98	e2830e27	 add         r0, r3, #0x27, 28
  00c9c	eb000000	 bl          EnterCriticalSection

; 461  :             break;

  00ca0	ea00001b	 b           |$LN21@UsbPddEp0I|
  00ca4		 |$LN17@UsbPddEp0I|

; 462  :         default:
; 463  :             PRINTMSG(ZONE_PDD_EP0, (L"UsbPddEp0IntrHandler: ZLP on EP0 stage %d\r\n", pEP->epStage));

  00ca4	e59f3564	 ldr         r3, [pc, #0x564]
  00ca8	e5933440	 ldr         r3, [r3, #0x440]
  00cac	e3130c02	 tst         r3, #2, 24
  00cb0	0a000015	 beq         |$LN56@UsbPddEp0I|
  00cb4	e59f3554	 ldr         r3, [pc, #0x554]
  00cb8	e5933440	 ldr         r3, [r3, #0x440]
  00cbc	e3130801	 tst         r3, #1, 16
  00cc0	0a000007	 beq         |$LN54@UsbPddEp0I|
  00cc4	e59d3010	 ldr         r3, [sp, #0x10]
  00cc8	e283301c	 add         r3, r3, #0x1C
  00ccc	e5931000	 ldr         r1, [r3]
  00cd0	e59f0550	 ldr         r0, [pc, #0x550]
  00cd4	eb000000	 bl          CeLogMsg
  00cd8	e3a03001	 mov         r3, #1
  00cdc	e58d3050	 str         r3, [sp, #0x50]
  00ce0	ea000006	 b           |$LN55@UsbPddEp0I|
  00ce4		 |$LN54@UsbPddEp0I|
  00ce4	e59d3010	 ldr         r3, [sp, #0x10]
  00ce8	e283301c	 add         r3, r3, #0x1C
  00cec	e5931000	 ldr         r1, [r3]
  00cf0	e59f0530	 ldr         r0, [pc, #0x530]
  00cf4	eb000000	 bl          NKDbgPrintfW
  00cf8	e3a03000	 mov         r3, #0
  00cfc	e58d3050	 str         r3, [sp, #0x50]
  00d00		 |$LN55@UsbPddEp0I|
  00d00	e3a03001	 mov         r3, #1
  00d04	e58d3054	 str         r3, [sp, #0x54]
  00d08	ea000001	 b           |$LN57@UsbPddEp0I|
  00d0c		 |$LN56@UsbPddEp0I|
  00d0c	e3a03000	 mov         r3, #0
  00d10	e58d3054	 str         r3, [sp, #0x54]
  00d14		 |$LN57@UsbPddEp0I|
  00d14		 |$LN21@UsbPddEp0I|

; 464  :             break;
; 465  :         }
; 466  :         /* If still in a mid-transfer state then we are done */
; 467  :         if (pEP->epStage != MGC_END0_START)

  00d14	e59d3010	 ldr         r3, [sp, #0x10]
  00d18	e283301c	 add         r3, r3, #0x1C
  00d1c	e5933000	 ldr         r3, [r3]
  00d20	e3530001	 cmp         r3, #1
  00d24	0a000000	 beq         |$LN16@UsbPddEp0I|

; 468  :             goto done;

  00d28	ea000122	 b           |$done$47295|
  00d2c		 |$LN16@UsbPddEp0I|

; 469  : 
; 470  :         /* Received new setup? */
; 471  :         ep0Csr = pBase->EPCSR[ epNum ].PERI_TXCSR;

  00d2c	e59d3004	 ldr         r3, [sp, #4]
  00d30	e2831c05	 add         r1, r3, #5, 24
  00d34	e5dd3000	 ldrb        r3, [sp]
  00d38	e1a02003	 mov         r2, r3
  00d3c	e3a03010	 mov         r3, #0x10
  00d40	e0030392	 mul         r3, r2, r3
  00d44	e0813003	 add         r3, r1, r3
  00d48	e2833002	 add         r3, r3, #2
  00d4c	e1d330b0	 ldrh        r3, [r3]
  00d50	e1cd31ba	 strh        r3, [sp, #0x1A]

; 472  :         ep0Count = pBase->EPCSR[ epNum ].RXCOUNT;

  00d54	e59d3004	 ldr         r3, [sp, #4]
  00d58	e2831c05	 add         r1, r3, #5, 24
  00d5c	e5dd3000	 ldrb        r3, [sp]
  00d60	e1a02003	 mov         r2, r3
  00d64	e3a03010	 mov         r3, #0x10
  00d68	e0030392	 mul         r3, r2, r3
  00d6c	e0813003	 add         r3, r1, r3
  00d70	e2833008	 add         r3, r3, #8
  00d74	e1d330b0	 ldrh        r3, [r3]
  00d78	e1cd31b8	 strh        r3, [sp, #0x18]

; 473  :         if (ep0Csr == 0)

  00d7c	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00d80	e3530000	 cmp         r3, #0
  00d84	1a000000	 bne         |$LN15@UsbPddEp0I|

; 474  :             goto done;

  00d88	ea00010a	 b           |$done$47295|
  00d8c		 |$LN15@UsbPddEp0I|
  00d8c		 |$LN25@UsbPddEp0I|

; 475  :     }
; 476  : 
; 477  :     DEBUGCHK(pEP->epStage == MGC_END0_START);

  00d8c	e59d3010	 ldr         r3, [sp, #0x10]
  00d90	e283301c	 add         r3, r3, #0x1C
  00d94	e5933000	 ldr         r3, [r3]
  00d98	e3530001	 cmp         r3, #1
  00d9c	1a000002	 bne         |$LN58@UsbPddEp0I|
  00da0	e3a03001	 mov         r3, #1
  00da4	e58d3058	 str         r3, [sp, #0x58]
  00da8	ea000008	 b           |$LN59@UsbPddEp0I|
  00dac		 |$LN58@UsbPddEp0I|
  00dac	e3a03c01	 mov         r3, #1, 24
  00db0	e38330dd	 orr         r3, r3, #0xDD
  00db4	e59f2460	 ldr         r2, [pc, #0x460]
  00db8	e59f1450	 ldr         r1, [pc, #0x450]
  00dbc	e59f0454	 ldr         r0, [pc, #0x454]
  00dc0	eb000000	 bl          NKDbgPrintfW
  00dc4	e6000010	 __debugbreak_ce
  00dc8	e3a03000	 mov         r3, #0
  00dcc	e58d3058	 str         r3, [sp, #0x58]
  00dd0		 |$LN59@UsbPddEp0I|

; 478  : 
; 479  :     /* Received new setup packet? */
; 480  :     if ((ep0Csr & MGC_M_CSR0_RXPKTRDY) != 0)

  00dd0	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00dd4	e3130001	 tst         r3, #1
  00dd8	0a0000f6	 beq         |$LN14@UsbPddEp0I|

; 481  :     {
; 482  :         if (ep0Count != 8)

  00ddc	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00de0	e3530008	 cmp         r3, #8
  00de4	0a000018	 beq         |$LN13@UsbPddEp0I|

; 483  :         {
; 484  :             PRINTMSG(ZONE_ERROR, (L"UsbPddEp0IntrHandler: Invalid SETUP pkt len %d\r\n", ep0Count));

  00de8	e59f3420	 ldr         r3, [pc, #0x420]
  00dec	e5933440	 ldr         r3, [r3, #0x440]
  00df0	e3130001	 tst         r3, #1
  00df4	0a000011	 beq         |$LN62@UsbPddEp0I|
  00df8	e59f3410	 ldr         r3, [pc, #0x410]
  00dfc	e5933440	 ldr         r3, [r3, #0x440]
  00e00	e3130801	 tst         r3, #1, 16
  00e04	0a000005	 beq         |$LN60@UsbPddEp0I|
  00e08	e1dd11b8	 ldrh        r1, [sp, #0x18]
  00e0c	e59f0410	 ldr         r0, [pc, #0x410]
  00e10	eb000000	 bl          CeLogMsg
  00e14	e3a03001	 mov         r3, #1
  00e18	e58d305c	 str         r3, [sp, #0x5C]
  00e1c	ea000004	 b           |$LN61@UsbPddEp0I|
  00e20		 |$LN60@UsbPddEp0I|
  00e20	e1dd11b8	 ldrh        r1, [sp, #0x18]
  00e24	e59f03f8	 ldr         r0, [pc, #0x3F8]
  00e28	eb000000	 bl          NKDbgPrintfW
  00e2c	e3a03000	 mov         r3, #0
  00e30	e58d305c	 str         r3, [sp, #0x5C]
  00e34		 |$LN61@UsbPddEp0I|
  00e34	e3a03001	 mov         r3, #1
  00e38	e58d3060	 str         r3, [sp, #0x60]
  00e3c	ea000001	 b           |$LN63@UsbPddEp0I|
  00e40		 |$LN62@UsbPddEp0I|
  00e40	e3a03000	 mov         r3, #0
  00e44	e58d3060	 str         r3, [sp, #0x60]
  00e48		 |$LN63@UsbPddEp0I|

; 485  :         }
; 486  :         else if (pPdd->fWaitingForHandshake)

  00e48	ea0000c2	 b           |$LN12@UsbPddEp0I|
  00e4c		 |$LN13@UsbPddEp0I|
  00e4c	e59d3020	 ldr         r3, [sp, #0x20]
  00e50	e2833c06	 add         r3, r3, #6, 24
  00e54	e283304c	 add         r3, r3, #0x4C
  00e58	e5933000	 ldr         r3, [r3]
  00e5c	e3530000	 cmp         r3, #0
  00e60	0a000063	 beq         |$LN11@UsbPddEp0I|

; 487  :         {
; 488  :             /* The RNDIS client driver (and probably others) must not be sent a new
; 489  :              * SETUP packet until it calls UfnPdd_SendControlStatusHandshake() for the
; 490  :              * previous setup.  Queue a new setup pkt until this happens.
; 491  :              */
; 492  :             if (pPdd->fHasQueuedSetupRequest)

  00e64	e59d3020	 ldr         r3, [sp, #0x20]
  00e68	e2833e65	 add         r3, r3, #0x65, 28
  00e6c	e5933000	 ldr         r3, [r3]
  00e70	e3530000	 cmp         r3, #0
  00e74	0a00001d	 beq         |$LN10@UsbPddEp0I|

; 493  :             {
; 494  :                 PRINTMSG(ZONE_ERROR, (L"UsbPddEp0IntrHandler: Received setup pkt before previous setup completed!"));

  00e78	e59f3390	 ldr         r3, [pc, #0x390]
  00e7c	e5933440	 ldr         r3, [r3, #0x440]
  00e80	e3130001	 tst         r3, #1
  00e84	0a00000f	 beq         |$LN66@UsbPddEp0I|
  00e88	e59f3380	 ldr         r3, [pc, #0x380]
  00e8c	e5933440	 ldr         r3, [r3, #0x440]
  00e90	e3130801	 tst         r3, #1, 16
  00e94	0a000004	 beq         |$LN64@UsbPddEp0I|
  00e98	e59f0380	 ldr         r0, [pc, #0x380]
  00e9c	eb000000	 bl          CeLogMsg
  00ea0	e3a03001	 mov         r3, #1
  00ea4	e58d3064	 str         r3, [sp, #0x64]
  00ea8	ea000003	 b           |$LN65@UsbPddEp0I|
  00eac		 |$LN64@UsbPddEp0I|
  00eac	e59f036c	 ldr         r0, [pc, #0x36C]
  00eb0	eb000000	 bl          NKDbgPrintfW
  00eb4	e3a03000	 mov         r3, #0
  00eb8	e58d3064	 str         r3, [sp, #0x64]
  00ebc		 |$LN65@UsbPddEp0I|
  00ebc	e3a03001	 mov         r3, #1
  00ec0	e58d3068	 str         r3, [sp, #0x68]
  00ec4	ea000001	 b           |$LN67@UsbPddEp0I|
  00ec8		 |$LN66@UsbPddEp0I|
  00ec8	e3a03000	 mov         r3, #0
  00ecc	e58d3068	 str         r3, [sp, #0x68]
  00ed0		 |$LN67@UsbPddEp0I|

; 495  :                 DEBUGCHK(0);

  00ed0	e3a03c01	 mov         r3, #1, 24
  00ed4	e38330ef	 orr         r3, r3, #0xEF
  00ed8	e59f233c	 ldr         r2, [pc, #0x33C]
  00edc	e59f132c	 ldr         r1, [pc, #0x32C]
  00ee0	e59f0330	 ldr         r0, [pc, #0x330]
  00ee4	eb000000	 bl          NKDbgPrintfW
  00ee8	e6000010	 __debugbreak_ce

; 496  :                 goto done;

  00eec	ea0000b1	 b           |$done$47295|
  00ef0		 |$LN10@UsbPddEp0I|

; 497  :             }
; 498  : 
; 499  :             SetupUsbRequest(pPdd, &pPdd->queuedSetupRequest, epNum, ep0Count);

  00ef0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00ef4	e5dd2000	 ldrb        r2, [sp]
  00ef8	e59d1020	 ldr         r1, [sp, #0x20]
  00efc	e2811c06	 add         r1, r1, #6, 24
  00f00	e2811054	 add         r1, r1, #0x54
  00f04	e59d0020	 ldr         r0, [sp, #0x20]
  00f08	eb000000	 bl          SetupUsbRequest

; 500  :             pPdd->fHasQueuedSetupRequest = TRUE;

  00f0c	e59d3020	 ldr         r3, [sp, #0x20]
  00f10	e2832e65	 add         r2, r3, #0x65, 28
  00f14	e3a03001	 mov         r3, #1
  00f18	e5823000	 str         r3, [r2]

; 501  :             PRINTMSG(ZONE_PDD_EP0, (L"UsbPddEp0IntrHandler: Queuing setup pkt, len %d",
; 502  :                                     pPdd->queuedSetupRequest.wLength));

  00f1c	e59f32ec	 ldr         r3, [pc, #0x2EC]
  00f20	e5933440	 ldr         r3, [r3, #0x440]
  00f24	e3130c02	 tst         r3, #2, 24
  00f28	0a000021	 beq         |$LN70@UsbPddEp0I|
  00f2c	e59f32dc	 ldr         r3, [pc, #0x2DC]
  00f30	e5933440	 ldr         r3, [r3, #0x440]
  00f34	e3130801	 tst         r3, #1, 16
  00f38	0a00000d	 beq         |$LN68@UsbPddEp0I|
  00f3c	e59d3020	 ldr         r3, [sp, #0x20]
  00f40	e2833c06	 add         r3, r3, #6, 24
  00f44	e283105a	 add         r1, r3, #0x5A
  00f48	e5d13001	 ldrb        r3, [r1, #1]
  00f4c	e1a03403	 mov         r3, r3, lsl #8
  00f50	e1a02803	 mov         r2, r3, lsl #16
  00f54	e1a02822	 mov         r2, r2, lsr #16
  00f58	e5d13000	 ldrb        r3, [r1]
  00f5c	e1831002	 orr         r1, r3, r2
  00f60	e59f02ac	 ldr         r0, [pc, #0x2AC]
  00f64	eb000000	 bl          CeLogMsg
  00f68	e3a03001	 mov         r3, #1
  00f6c	e58d306c	 str         r3, [sp, #0x6C]
  00f70	ea00000c	 b           |$LN69@UsbPddEp0I|
  00f74		 |$LN68@UsbPddEp0I|
  00f74	e59d3020	 ldr         r3, [sp, #0x20]
  00f78	e2833c06	 add         r3, r3, #6, 24
  00f7c	e283105a	 add         r1, r3, #0x5A
  00f80	e5d13001	 ldrb        r3, [r1, #1]
  00f84	e1a03403	 mov         r3, r3, lsl #8
  00f88	e1a02803	 mov         r2, r3, lsl #16
  00f8c	e1a02822	 mov         r2, r2, lsr #16
  00f90	e5d13000	 ldrb        r3, [r1]
  00f94	e1831002	 orr         r1, r3, r2
  00f98	e59f0274	 ldr         r0, [pc, #0x274]
  00f9c	eb000000	 bl          NKDbgPrintfW
  00fa0	e3a03000	 mov         r3, #0
  00fa4	e58d306c	 str         r3, [sp, #0x6C]
  00fa8		 |$LN69@UsbPddEp0I|
  00fa8	e3a03001	 mov         r3, #1
  00fac	e58d3070	 str         r3, [sp, #0x70]
  00fb0	ea000001	 b           |$LN71@UsbPddEp0I|
  00fb4		 |$LN70@UsbPddEp0I|
  00fb4	e3a03000	 mov         r3, #0
  00fb8	e58d3070	 str         r3, [sp, #0x70]
  00fbc		 |$LN71@UsbPddEp0I|

; 503  : 
; 504  :             /* Complete the setup transfer */
; 505  :             if (pPdd->queuedSetupRequest.wLength == 0)

  00fbc	e59d3020	 ldr         r3, [sp, #0x20]
  00fc0	e2833c06	 add         r3, r3, #6, 24
  00fc4	e283105a	 add         r1, r3, #0x5A
  00fc8	e5d13001	 ldrb        r3, [r1, #1]
  00fcc	e1a03403	 mov         r3, r3, lsl #8
  00fd0	e1a02803	 mov         r2, r3, lsl #16
  00fd4	e1a02822	 mov         r2, r2, lsr #16
  00fd8	e5d13000	 ldrb        r3, [r1]
  00fdc	e1833002	 orr         r3, r3, r2
  00fe0	e3530000	 cmp         r3, #0
  00fe4	1a000001	 bne         |$LN9@UsbPddEp0I|

; 506  :             {
; 507  :                 zeroLenSetup = TRUE;

  00fe8	e3a03001	 mov         r3, #1
  00fec	e58d3014	 str         r3, [sp, #0x14]
  00ff0		 |$LN9@UsbPddEp0I|

; 508  :             }
; 509  :         }
; 510  :         else

  00ff0	ea000058	 b           |$LN8@UsbPddEp0I|
  00ff4		 |$LN11@UsbPddEp0I|

; 511  :         {
; 512  :             SetupUsbRequest(pPdd, &pPdd->setupRequest, epNum, ep0Count);

  00ff4	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00ff8	e5dd2000	 ldrb        r2, [sp]
  00ffc	e59d1020	 ldr         r1, [sp, #0x20]
  01000	e2811c06	 add         r1, r1, #6, 24
  01004	e2811044	 add         r1, r1, #0x44
  01008	e59d0020	 ldr         r0, [sp, #0x20]
  0100c	eb000000	 bl          SetupUsbRequest

; 513  : 
; 514  :             PRINTMSG(ZONE_PDD_EP0, (L"UsbPddEp0IntrHandler received setup pkt, len %d",
; 515  :                                     pPdd->setupRequest.wLength));

  01010	e59f31f8	 ldr         r3, [pc, #0x1F8]
  01014	e5933440	 ldr         r3, [r3, #0x440]
  01018	e3130c02	 tst         r3, #2, 24
  0101c	0a000021	 beq         |$LN74@UsbPddEp0I|
  01020	e59f31e8	 ldr         r3, [pc, #0x1E8]
  01024	e5933440	 ldr         r3, [r3, #0x440]
  01028	e3130801	 tst         r3, #1, 16
  0102c	0a00000d	 beq         |$LN72@UsbPddEp0I|
  01030	e59d3020	 ldr         r3, [sp, #0x20]
  01034	e2833c06	 add         r3, r3, #6, 24
  01038	e283104a	 add         r1, r3, #0x4A
  0103c	e5d13001	 ldrb        r3, [r1, #1]
  01040	e1a03403	 mov         r3, r3, lsl #8
  01044	e1a02803	 mov         r2, r3, lsl #16
  01048	e1a02822	 mov         r2, r2, lsr #16
  0104c	e5d13000	 ldrb        r3, [r1]
  01050	e1831002	 orr         r1, r3, r2
  01054	e59f01b0	 ldr         r0, [pc, #0x1B0]
  01058	eb000000	 bl          CeLogMsg
  0105c	e3a03001	 mov         r3, #1
  01060	e58d3074	 str         r3, [sp, #0x74]
  01064	ea00000c	 b           |$LN73@UsbPddEp0I|
  01068		 |$LN72@UsbPddEp0I|
  01068	e59d3020	 ldr         r3, [sp, #0x20]
  0106c	e2833c06	 add         r3, r3, #6, 24
  01070	e283104a	 add         r1, r3, #0x4A
  01074	e5d13001	 ldrb        r3, [r1, #1]
  01078	e1a03403	 mov         r3, r3, lsl #8
  0107c	e1a02803	 mov         r2, r3, lsl #16
  01080	e1a02822	 mov         r2, r2, lsr #16
  01084	e5d13000	 ldrb        r3, [r1]
  01088	e1831002	 orr         r1, r3, r2
  0108c	e59f0178	 ldr         r0, [pc, #0x178]
  01090	eb000000	 bl          NKDbgPrintfW
  01094	e3a03000	 mov         r3, #0
  01098	e58d3074	 str         r3, [sp, #0x74]
  0109c		 |$LN73@UsbPddEp0I|
  0109c	e3a03001	 mov         r3, #1
  010a0	e58d3078	 str         r3, [sp, #0x78]
  010a4	ea000001	 b           |$LN75@UsbPddEp0I|
  010a8		 |$LN74@UsbPddEp0I|
  010a8	e3a03000	 mov         r3, #0
  010ac	e58d3078	 str         r3, [sp, #0x78]
  010b0		 |$LN75@UsbPddEp0I|

; 516  :             pPdd->fWaitingForHandshake = TRUE;

  010b0	e59d3020	 ldr         r3, [sp, #0x20]
  010b4	e2833c06	 add         r3, r3, #6, 24
  010b8	e283204c	 add         r2, r3, #0x4C
  010bc	e3a03001	 mov         r3, #1
  010c0	e5823000	 str         r3, [r2]

; 517  : 
; 518  :             if (pPdd->setupRequest.wLength == 0)

  010c4	e59d3020	 ldr         r3, [sp, #0x20]
  010c8	e2833c06	 add         r3, r3, #6, 24
  010cc	e283104a	 add         r1, r3, #0x4A
  010d0	e5d13001	 ldrb        r3, [r1, #1]
  010d4	e1a03403	 mov         r3, r3, lsl #8
  010d8	e1a02803	 mov         r2, r3, lsl #16
  010dc	e1a02822	 mov         r2, r2, lsr #16
  010e0	e5d13000	 ldrb        r3, [r1]
  010e4	e1833002	 orr         r3, r3, r2
  010e8	e3530000	 cmp         r3, #0
  010ec	1a000006	 bne         |$LN7@UsbPddEp0I|

; 519  :             {
; 520  :                 /* Zero Data Length SETUP Pkt */
; 521  :                 zeroLenSetup = TRUE;

  010f0	e3a03001	 mov         r3, #1
  010f4	e58d3014	 str         r3, [sp, #0x14]

; 522  :                 pEP->epStage = MGC_END0_STAGE_ACKWAIT;

  010f8	e59d3010	 ldr         r3, [sp, #0x10]
  010fc	e283201c	 add         r2, r3, #0x1C
  01100	e3a03006	 mov         r3, #6
  01104	e5823000	 str         r3, [r2]
  01108	ea000012	 b           |$LN6@UsbPddEp0I|
  0110c		 |$LN7@UsbPddEp0I|

; 523  :             }
; 524  :             else if ((pPdd->setupRequest.bmRequestType & USB_ENDPOINT_DIRECTION_MASK) != 0)

  0110c	e59d3020	 ldr         r3, [sp, #0x20]
  01110	e2833c06	 add         r3, r3, #6, 24
  01114	e2833044	 add         r3, r3, #0x44
  01118	e5d33000	 ldrb        r3, [r3]
  0111c	e3130080	 tst         r3, #0x80
  01120	0a000006	 beq         |$LN5@UsbPddEp0I|

; 525  :             {
; 526  :                 pEP->epStage = MGC_END0_STAGE_TX;

  01124	e59d3010	 ldr         r3, [sp, #0x10]
  01128	e283201c	 add         r2, r3, #0x1C
  0112c	e3a03002	 mov         r3, #2
  01130	e5823000	 str         r3, [r2]

; 527  :                 reportPkt = TRUE;

  01134	e3a03001	 mov         r3, #1
  01138	e58d301c	 str         r3, [sp, #0x1C]

; 528  :             }
; 529  :             else

  0113c	ea000005	 b           |$LN4@UsbPddEp0I|
  01140		 |$LN5@UsbPddEp0I|

; 530  :             {
; 531  :                 pEP->epStage = MGC_END0_STAGE_RX;

  01140	e59d3010	 ldr         r3, [sp, #0x10]
  01144	e283201c	 add         r2, r3, #0x1C
  01148	e3a03003	 mov         r3, #3
  0114c	e5823000	 str         r3, [r2]

; 532  :                 reportPkt = TRUE;

  01150	e3a03001	 mov         r3, #1
  01154	e58d301c	 str         r3, [sp, #0x1C]
  01158		 |$LN4@UsbPddEp0I|
  01158		 |$LN6@UsbPddEp0I|
  01158		 |$LN8@UsbPddEp0I|
  01158		 |$LN12@UsbPddEp0I|

; 533  :             }
; 534  :         }
; 535  : 
; 536  :         /* Complete the setup transfer */
; 537  :         if (zeroLenSetup)

  01158	e59d3014	 ldr         r3, [sp, #0x14]
  0115c	e3530000	 cmp         r3, #0
  01160	0a00000a	 beq         |$LN3@UsbPddEp0I|

; 538  :         {
; 539  :             /* Zero Data Length SETUP Pkt - clear PKTRDY and set DATAEND */
; 540  :             pBase->EPCSR[ epNum ].PERI_TXCSR = MGC_M_CSR0_P_SVDRXPKTRDY | MGC_M_CSR0_P_DATAEND;

  01164	e59d3004	 ldr         r3, [sp, #4]
  01168	e2831c05	 add         r1, r3, #5, 24
  0116c	e5dd3000	 ldrb        r3, [sp]
  01170	e1a02003	 mov         r2, r3
  01174	e3a03010	 mov         r3, #0x10
  01178	e0030392	 mul         r3, r2, r3
  0117c	e0813003	 add         r3, r1, r3
  01180	e2832002	 add         r2, r3, #2
  01184	e3a03048	 mov         r3, #0x48
  01188	e1c230b0	 strh        r3, [r2]

; 541  :         }
; 542  :         else

  0118c	ea000009	 b           |$LN2@UsbPddEp0I|
  01190		 |$LN3@UsbPddEp0I|

; 543  :         {
; 544  :             /* Clear PKTRDY */
; 545  :             pBase->EPCSR[ epNum ].PERI_TXCSR = MGC_M_CSR0_P_SVDRXPKTRDY;

  01190	e59d3004	 ldr         r3, [sp, #4]
  01194	e2831c05	 add         r1, r3, #5, 24
  01198	e5dd3000	 ldrb        r3, [sp]
  0119c	e1a02003	 mov         r2, r3
  011a0	e3a03010	 mov         r3, #0x10
  011a4	e0030392	 mul         r3, r2, r3
  011a8	e0813003	 add         r3, r1, r3
  011ac	e2832002	 add         r2, r3, #2
  011b0	e3a03040	 mov         r3, #0x40
  011b4	e1c230b0	 strh        r3, [r2]
  011b8		 |$LN2@UsbPddEp0I|
  011b8		 |$LN14@UsbPddEp0I|
  011b8		 |$done$47295|

; 546  :         }
; 547  :     }
; 548  : 
; 549  : done:
; 550  : 
; 551  :     UNLOCK_ENDPOINT(pPdd);

  011b8	e59d3020	 ldr         r3, [sp, #0x20]
  011bc	e2830e27	 add         r0, r3, #0x27, 28
  011c0	eb000000	 bl          LeaveCriticalSection

; 552  : 
; 553  :     /* Report setup pkt to MDD */
; 554  :     if (reportPkt == TRUE)

  011c4	e59d301c	 ldr         r3, [sp, #0x1C]
  011c8	e3530001	 cmp         r3, #1
  011cc	1a00000b	 bne         |$LN1@UsbPddEp0I|

; 555  :     {
; 556  :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SETUP_PACKET, (DWORD)&pPdd->setupRequest);

  011d0	e59d3020	 ldr         r3, [sp, #0x20]
  011d4	e2833c06	 add         r3, r3, #6, 24
  011d8	e2832044	 add         r2, r3, #0x44
  011dc	e3a01004	 mov         r1, #4
  011e0	e59d3020	 ldr         r3, [sp, #0x20]
  011e4	e2833010	 add         r3, r3, #0x10
  011e8	e5930000	 ldr         r0, [r3]
  011ec	e59d3020	 ldr         r3, [sp, #0x20]
  011f0	e2833014	 add         r3, r3, #0x14
  011f4	e5933000	 ldr         r3, [r3]
  011f8	e1a0e00f	 mov         lr, pc
  011fc	e12fff13	 bx          r3
  01200		 |$LN1@UsbPddEp0I|

; 557  :     }
; 558  : 
; 559  :     return;
; 560  : }

  01200	e28dd07c	 add         sp, sp, #0x7C
  01204	e89d6000	 ldmia       sp, {sp, lr}
  01208	e12fff1e	 bx          lr
  0120c		 |$LN86@UsbPddEp0I|
  0120c		 |$LN87@UsbPddEp0I|
  0120c	00000000	 DCD         |??_C@_1GA@NPGMBOIN@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAs?$AAe@|
  01210		 |$LN88@UsbPddEp0I|
  01210	00000000	 DCD         |dpCurSettings|
  01214		 |$LN89@UsbPddEp0I|
  01214	00000000	 DCD         |??_C@_1GA@INFALCOG@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAQ?$AAu?$AAe?$AAu?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe@|
  01218		 |$LN90@UsbPddEp0I|
  01218	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0121c		 |$LN91@UsbPddEp0I|
  0121c	00000000	 DCD         |??_C@_1KI@PEJHCIPD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01220		 |$LN92@UsbPddEp0I|
  01220	00000000	 DCD         |??_C@_1JE@NBAFIMMN@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAs@|
  01224		 |$LN93@UsbPddEp0I|
  01224	00000000	 DCD         |??_C@_1GC@EBDELBLD@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAE@|
  01228		 |$LN94@UsbPddEp0I|
  01228	00000000	 DCD         |??_C@_1FI@PBIPJADL@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAZ?$AAL?$AAP?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA0@|
  0122c		 |$LN95@UsbPddEp0I|
  0122c	00000000	 DCD         |??_C@_1GO@NFMGBILE@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AA?9@|
  01230		 |$LN96@UsbPddEp0I|
  01230	00000000	 DCD         |??_C@_1HO@MFNEGFEB@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AA?9@|
  01234		 |$LN97@UsbPddEp0I|
  01234	00000000	 DCD         |??_C@_1FE@CFHIKAIP@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAr@|
  01238		 |$LN98@UsbPddEp0I|
  01238	00000000	 DCD         |??_C@_1FI@BKADMJME@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAS?$AAE?$AAN?$AAT?$AAS?$AAT?$AAA?$AAL?$AAL?$AA?5@|
  0123c		 |$LN99@UsbPddEp0I|
  0123c	00000000	 DCD         |??_C@_1FK@DHKENKHE@?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAE?$AAp?$AA0?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?3?$AA?5?$AAC?$AAS?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  01240		 |$M47614|

			 ENDP  ; |UsbPddEp0IntrHandler|

	EXPORT	|??_C@_1GK@KBDKGPFL@?$AA?$CL?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAT?$AAx?$AAR?$AAx?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AAT?$AAx?$AAI?$AAn?$AAt?$AAr?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|UsbPddTxRxIntrHandler|

  00030			 AREA	 |.pdata|, PDATA
|$T47639| DCD	|$LN15@UsbPddTxRx|
	DCD	0x40005904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@KBDKGPFL@?$AA?$CL?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAT?$AAx?$AAR?$AAx?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AAT?$AAx?$AAI?$AAn?$AAt?$AAr?$AA?5?$AA0?$AAx@| DCB "+"
	DCB	0x0, "U", 0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "T", 0x0, "x", 0x0, "R", 0x0, "x", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "T", 0x0, "x"
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, " "
	DCB	0x0, "R", 0x0, "x", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01240			 AREA	 |.text|, CODE, ARM

  01240		 |UsbPddTxRxIntrHandler| PROC

; 583  : {

  01240		 |$LN15@UsbPddTxRx|
  01240	e1a0c00d	 mov         r12, sp
  01244	e92d0007	 stmdb       sp!, {r0 - r2}
  01248	e92d5000	 stmdb       sp!, {r12, lr}
  0124c	e24dd014	 sub         sp, sp, #0x14
  01250		 |$M47636|

; 584  :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pPddContext;

  01250	e59d301c	 ldr         r3, [sp, #0x1C]
  01254	e58d3000	 str         r3, [sp]

; 585  : 
; 586  :     PRINTMSG(ZONE_FUNCTION, (L"+UsbPddTxRxIntrHandler TxIntr 0x%04x RxIntr 0x%04x\r\n",
; 587  :                              intrTxReg, intrRxReg));

  01258	e59f3140	 ldr         r3, [pc, #0x140]
  0125c	e5933440	 ldr         r3, [r3, #0x440]
  01260	e3130a01	 tst         r3, #1, 20
  01264	0a000013	 beq         |$LN11@UsbPddTxRx|
  01268	e59f3130	 ldr         r3, [pc, #0x130]
  0126c	e5933440	 ldr         r3, [r3, #0x440]
  01270	e3130801	 tst         r3, #1, 16
  01274	0a000006	 beq         |$LN9@UsbPddTxRx|
  01278	e1dd22b4	 ldrh        r2, [sp, #0x24]
  0127c	e1dd12b0	 ldrh        r1, [sp, #0x20]
  01280	e59f0114	 ldr         r0, [pc, #0x114]
  01284	eb000000	 bl          CeLogMsg
  01288	e3a03001	 mov         r3, #1
  0128c	e58d300c	 str         r3, [sp, #0xC]
  01290	ea000005	 b           |$LN10@UsbPddTxRx|
  01294		 |$LN9@UsbPddTxRx|
  01294	e1dd22b4	 ldrh        r2, [sp, #0x24]
  01298	e1dd12b0	 ldrh        r1, [sp, #0x20]
  0129c	e59f00f8	 ldr         r0, [pc, #0xF8]
  012a0	eb000000	 bl          NKDbgPrintfW
  012a4	e3a03000	 mov         r3, #0
  012a8	e58d300c	 str         r3, [sp, #0xC]
  012ac		 |$LN10@UsbPddTxRx|
  012ac	e3a03001	 mov         r3, #1
  012b0	e58d3010	 str         r3, [sp, #0x10]
  012b4	ea000001	 b           |$LN12@UsbPddTxRx|
  012b8		 |$LN11@UsbPddTxRx|
  012b8	e3a03000	 mov         r3, #0
  012bc	e58d3010	 str         r3, [sp, #0x10]
  012c0		 |$LN12@UsbPddTxRx|

; 588  : 
; 589  :     /* Handle tx/rx on endpoints; each bit of intrTxReg is an endpoint,
; 590  :      * endpoint 0 first (p35 of the manual) bc is "SPECIAL" treatment;
; 591  :      * WARNING: when operating as device you might start receving traffic
; 592  :      * to ep0 before anything else happens so be ready for it
; 593  :      */
; 594  : 	{
; 595  :         UINT  bShift = 0;

  012c0	e3a03000	 mov         r3, #0
  012c4	e58d3004	 str         r3, [sp, #4]

; 596  :         UINT32 reg;
; 597  : 
; 598  :         /* RX on endpoints */
; 599  :         reg = intrRxReg;

  012c8	e1dd32b4	 ldrh        r3, [sp, #0x24]
  012cc	e58d3008	 str         r3, [sp, #8]

; 600  :         bShift = 1;

  012d0	e3a03001	 mov         r3, #1
  012d4	e58d3004	 str         r3, [sp, #4]

; 601  :         reg >>= 1;

  012d8	e59d3008	 ldr         r3, [sp, #8]
  012dc	e1a030a3	 mov         r3, r3, lsr #1
  012e0	e58d3008	 str         r3, [sp, #8]
  012e4		 |$LN6@UsbPddTxRx|

; 602  :         while (reg != 0)

  012e4	e59d3008	 ldr         r3, [sp, #8]
  012e8	e3530000	 cmp         r3, #0
  012ec	0a00000e	 beq         |$LN5@UsbPddTxRx|

; 603  :         {
; 604  :             if (reg & 1)

  012f0	e59d3008	 ldr         r3, [sp, #8]
  012f4	e3130001	 tst         r3, #1
  012f8	0a000004	 beq         |$LN4@UsbPddTxRx|

; 605  :             {
; 606  :                 /* Working in DeviceMode, Invoke Rx EP Interrupt Handler */
; 607  :                 PRINTMSG(FALSE, /* ZONE_SEND TRUE */
; 608  :                          (L"EP %u RX Handling IntrRxReg 0x%04x\r\n", bShift, intrRxReg));
; 609  :                 HandleRxEndPoint(pPdd, (UINT16)bShift);

  012fc	e59d3004	 ldr         r3, [sp, #4]
  01300	e1a01803	 mov         r1, r3, lsl #16
  01304	e1a01821	 mov         r1, r1, lsr #16
  01308	e59d0000	 ldr         r0, [sp]
  0130c	eb000000	 bl          HandleRxEndPoint
  01310		 |$LN4@UsbPddTxRx|

; 610  :             }
; 611  : 
; 612  :             reg >>= 1;

  01310	e59d3008	 ldr         r3, [sp, #8]
  01314	e1a030a3	 mov         r3, r3, lsr #1
  01318	e58d3008	 str         r3, [sp, #8]

; 613  :             bShift++;

  0131c	e59d3004	 ldr         r3, [sp, #4]
  01320	e2833001	 add         r3, r3, #1
  01324	e58d3004	 str         r3, [sp, #4]

; 614  :         }

  01328	eaffffed	 b           |$LN6@UsbPddTxRx|
  0132c		 |$LN5@UsbPddTxRx|

; 615  :         /* TX on endpoints */
; 616  :         reg = intrTxReg;

  0132c	e1dd32b0	 ldrh        r3, [sp, #0x20]
  01330	e58d3008	 str         r3, [sp, #8]

; 617  :         bShift = 1;

  01334	e3a03001	 mov         r3, #1
  01338	e58d3004	 str         r3, [sp, #4]

; 618  :         reg >>= 1;

  0133c	e59d3008	 ldr         r3, [sp, #8]
  01340	e1a030a3	 mov         r3, r3, lsr #1
  01344	e58d3008	 str         r3, [sp, #8]
  01348		 |$LN3@UsbPddTxRx|

; 619  :         while (reg != 0)

  01348	e59d3008	 ldr         r3, [sp, #8]
  0134c	e3530000	 cmp         r3, #0
  01350	0a00000e	 beq         |$LN2@UsbPddTxRx|

; 620  :         {
; 621  :             if (reg & 1)

  01354	e59d3008	 ldr         r3, [sp, #8]
  01358	e3130001	 tst         r3, #1
  0135c	0a000004	 beq         |$LN1@UsbPddTxRx|

; 622  :             {
; 623  :                 /* Working in DeviceMode, Invoke EP Interrupt Handler */
; 624  :                 PRINTMSG(FALSE, /*ZONE_SEND TRUE, */
; 625  :                          (L"EP %u TX Handling IntrTxReg 0x%04x\r\n", bShift, intrTxReg));
; 626  :                 HandleTxEndPoint(pPdd, (UINT16)bShift);

  01360	e59d3004	 ldr         r3, [sp, #4]
  01364	e1a01803	 mov         r1, r3, lsl #16
  01368	e1a01821	 mov         r1, r1, lsr #16
  0136c	e59d0000	 ldr         r0, [sp]
  01370	eb000000	 bl          HandleTxEndPoint
  01374		 |$LN1@UsbPddTxRx|

; 627  :             }
; 628  :             reg >>= 1;

  01374	e59d3008	 ldr         r3, [sp, #8]
  01378	e1a030a3	 mov         r3, r3, lsr #1
  0137c	e58d3008	 str         r3, [sp, #8]

; 629  :             bShift++;

  01380	e59d3004	 ldr         r3, [sp, #4]
  01384	e2833001	 add         r3, r3, #1
  01388	e58d3004	 str         r3, [sp, #4]

; 630  :         }

  0138c	eaffffed	 b           |$LN3@UsbPddTxRx|
  01390		 |$LN2@UsbPddTxRx|

; 631  : 	}
; 632  : 
; 633  :     return;
; 634  : }

  01390	e28dd014	 add         sp, sp, #0x14
  01394	e89d6000	 ldmia       sp, {sp, lr}
  01398	e12fff1e	 bx          lr
  0139c		 |$LN16@UsbPddTxRx|
  0139c		 |$LN17@UsbPddTxRx|
  0139c	00000000	 DCD         |??_C@_1GK@KBDKGPFL@?$AA?$CL?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AAT?$AAx?$AAR?$AAx?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AAT?$AAx?$AAI?$AAn?$AAt?$AAr?$AA?5?$AA0?$AAx@|
  013a0		 |$LN18@UsbPddTxRx|
  013a0	00000000	 DCD         |dpCurSettings|
  013a4		 |$M47637|

			 ENDP  ; |UsbPddTxRxIntrHandler|

	EXPORT	|??_C@_1BI@BHOCFNOP@?$AAB?$AAU?$AAS?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@KKEOBKFE@?$AAR?$AAE?$AAC?$AAE?$AAI?$AAV?$AAE?$AAD?$AA?5?$AAC?$AAO?$AAN?$AAN?$AAE?$AAC?$AAT?$AA?5?$AA?$CI?$AAg?$AAo?$AAt?$AAo?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@KILBNAIG@?$AAV?$AA_?$AAB?$AAU?$AAS?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$DP?$AA?$DP?$AA?$DP?$AA?5?$AAs?$AAt?$AAo?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@PFLKEJNF@?$AA?$CL?$AAS?$AAE?$AAS?$AAS?$AAI?$AAO?$AAN?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA?5?$AA?$CI?$AAH?$AAO?$AAS?$AAT?$AA_?$AAM?$AAO?$AAD?$AAE?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@DLNBLDGP@?$AA?$CL?$AAR?$AAE?$AAS?$AAU?$AAM?$AAE?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@LDDMKDNI@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAD?$AAR?$AAV?$AAV?$AAB?$AAU?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAx?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@NHFEGCOD@?$AA?$CL?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAg?$AAe?$AA0?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4@| [ DATA ] ; `string'
	EXPORT	|HandleUsbCoreInterrupt|

  00038			 AREA	 |.pdata|, PDATA
|$T47673| DCD	|$LN38@HandleUsbC|
	DCD	0x4000c304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BHOCFNOP@?$AAB?$AAU?$AAS?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "U", 0x0, "S", 0x0, " ", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KKEOBKFE@?$AAR?$AAE?$AAC?$AAE?$AAI?$AAV?$AAE?$AAD?$AA?5?$AAC?$AAO?$AAN?$AAN?$AAE?$AAC?$AAT?$AA?5?$AA?$CI?$AAg?$AAo?$AAt?$AAo?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAe@| DCB "R"
	DCB	0x0, "E", 0x0, "C", 0x0, "E", 0x0, "I", 0x0, "V", 0x0, "E"
	DCB	0x0, "D", 0x0, " ", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "N"
	DCB	0x0, "E", 0x0, "C", 0x0, "T", 0x0, " ", 0x0, "(", 0x0, "g"
	DCB	0x0, "o", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "h", 0x0, "o"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@KILBNAIG@?$AAV?$AA_?$AAB?$AAU?$AAS?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$DP?$AA?$DP?$AA?$DP?$AA?5?$AAs?$AAt?$AAo?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "V"
	DCB	0x0, "_", 0x0, "B", 0x0, "U", 0x0, "S", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "?", 0x0, "?"
	DCB	0x0, "?", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "o", 0x0, "p"
	DCB	0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "h"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@PFLKEJNF@?$AA?$CL?$AAS?$AAE?$AAS?$AAS?$AAI?$AAO?$AAN?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA?5?$AA?$CI?$AAH?$AAO?$AAS?$AAT?$AA_?$AAM?$AAO?$AAD?$AAE?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "S", 0x0, "E", 0x0, "S", 0x0, "S", 0x0, "I", 0x0, "O"
	DCB	0x0, "N", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "Q", 0x0, "U"
	DCB	0x0, "E", 0x0, "S", 0x0, "T", 0x0, " ", 0x0, "(", 0x0, "H"
	DCB	0x0, "O", 0x0, "S", 0x0, "T", 0x0, "_", 0x0, "M", 0x0, "O"
	DCB	0x0, "D", 0x0, "E", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@DLNBLDGP@?$AA?$CL?$AAR?$AAE?$AAS?$AAU?$AAM?$AAE?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "E", 0x0, "S", 0x0, "U", 0x0, "M", 0x0, "E"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@LDDMKDNI@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAD?$AAR?$AAV?$AAV?$AAB?$AAU?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAx?$AA?$AN@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "R"
	DCB	0x0, "V", 0x0, "V", 0x0, "B", 0x0, "U", 0x0, "S", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@NHFEGCOD@?$AA?$CL?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAg?$AAe?$AA0?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4@| DCB "+"
	DCB	0x0, "U", 0x0, "s", 0x0, "b", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "0", 0x0, " "
	DCB	0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  013a4			 AREA	 |.text|, CODE, ARM

  013a4		 |HandleUsbCoreInterrupt| PROC

; 656  : {

  013a4		 |$LN38@HandleUsbC|
  013a4	e1a0c00d	 mov         r12, sp
  013a8	e92d0003	 stmdb       sp!, {r0, r1}
  013ac	e92d5000	 stmdb       sp!, {r12, lr}
  013b0	e24dd038	 sub         sp, sp, #0x38
  013b4		 |$M47670|

; 657  :     USBFNPDDCONTEXT *pPdd = (USBFNPDDCONTEXT *)pPddContext;

  013b4	e59d3040	 ldr         r3, [sp, #0x40]
  013b8	e58d3000	 str         r3, [sp]

; 658  : 
; 659  :     PRINTMSG(ZONE_FUNCTION, (L"+UsbPdd_IntrStage0 INTRUSB 0x%04x\r\n",
; 660  :                              intrUsb));

  013bc	e59f32d0	 ldr         r3, [pc, #0x2D0]
  013c0	e5933440	 ldr         r3, [r3, #0x440]
  013c4	e3130a01	 tst         r3, #1, 20
  013c8	0a000011	 beq         |$LN12@HandleUsbC|
  013cc	e59f32c0	 ldr         r3, [pc, #0x2C0]
  013d0	e5933440	 ldr         r3, [r3, #0x440]
  013d4	e3130801	 tst         r3, #1, 16
  013d8	0a000005	 beq         |$LN10@HandleUsbC|
  013dc	e1dd14b4	 ldrh        r1, [sp, #0x44]
  013e0	e59f02c4	 ldr         r0, [pc, #0x2C4]
  013e4	eb000000	 bl          CeLogMsg
  013e8	e3a03001	 mov         r3, #1
  013ec	e58d3004	 str         r3, [sp, #4]
  013f0	ea000004	 b           |$LN11@HandleUsbC|
  013f4		 |$LN10@HandleUsbC|
  013f4	e1dd14b4	 ldrh        r1, [sp, #0x44]
  013f8	e59f02ac	 ldr         r0, [pc, #0x2AC]
  013fc	eb000000	 bl          NKDbgPrintfW
  01400	e3a03000	 mov         r3, #0
  01404	e58d3004	 str         r3, [sp, #4]
  01408		 |$LN11@HandleUsbC|
  01408	e3a03001	 mov         r3, #1
  0140c	e58d3008	 str         r3, [sp, #8]
  01410	ea000001	 b           |$LN13@HandleUsbC|
  01414		 |$LN12@HandleUsbC|
  01414	e3a03000	 mov         r3, #0
  01418	e58d3008	 str         r3, [sp, #8]
  0141c		 |$LN13@HandleUsbC|

; 661  : 
; 662  :     if (intrUsb & (1 << 8))

  0141c	e1dd34b4	 ldrh        r3, [sp, #0x44]
  01420	e3130c01	 tst         r3, #1, 24
  01424	0a000022	 beq         |$LN7@HandleUsbC|

; 663  :     {
; 664  :         /* once basic ID sensing behaves, this
; 665  :          * will have work to do
; 666  :          */
; 667  :         DumpUsbRegisters (pPdd);

  01428	e59d0000	 ldr         r0, [sp]
  0142c	eb000000	 bl          DumpUsbRegisters

; 668  :         PRINTMSG(ZONE_PDD_INIT, (L"InterruptThread: DRVVBUS 0x%04x\r\n",
; 669  :                                 ((CSL_UsbRegs *)pPdd->pUsbdRegs)->STATR));

  01430	e59f325c	 ldr         r3, [pc, #0x25C]
  01434	e5933440	 ldr         r3, [r3, #0x440]
  01438	e3130c01	 tst         r3, #1, 24
  0143c	0a000019	 beq         |$LN16@HandleUsbC|
  01440	e59f324c	 ldr         r3, [pc, #0x24C]
  01444	e5933440	 ldr         r3, [r3, #0x440]
  01448	e3130801	 tst         r3, #1, 16
  0144c	0a000009	 beq         |$LN14@HandleUsbC|
  01450	e59d3000	 ldr         r3, [sp]
  01454	e283301c	 add         r3, r3, #0x1C
  01458	e5933000	 ldr         r3, [r3]
  0145c	e2833008	 add         r3, r3, #8
  01460	e5931000	 ldr         r1, [r3]
  01464	e59f023c	 ldr         r0, [pc, #0x23C]
  01468	eb000000	 bl          CeLogMsg
  0146c	e3a03001	 mov         r3, #1
  01470	e58d300c	 str         r3, [sp, #0xC]
  01474	ea000008	 b           |$LN15@HandleUsbC|
  01478		 |$LN14@HandleUsbC|
  01478	e59d3000	 ldr         r3, [sp]
  0147c	e283301c	 add         r3, r3, #0x1C
  01480	e5933000	 ldr         r3, [r3]
  01484	e2833008	 add         r3, r3, #8
  01488	e5931000	 ldr         r1, [r3]
  0148c	e59f0214	 ldr         r0, [pc, #0x214]
  01490	eb000000	 bl          NKDbgPrintfW
  01494	e3a03000	 mov         r3, #0
  01498	e58d300c	 str         r3, [sp, #0xC]
  0149c		 |$LN15@HandleUsbC|
  0149c	e3a03001	 mov         r3, #1
  014a0	e58d3010	 str         r3, [sp, #0x10]
  014a4	ea000001	 b           |$LN17@HandleUsbC|
  014a8		 |$LN16@HandleUsbC|
  014a8	e3a03000	 mov         r3, #0
  014ac	e58d3010	 str         r3, [sp, #0x10]
  014b0		 |$LN17@HandleUsbC|

; 670  :     }
; 671  :     else

  014b0	ea000073	 b           |$LN6@HandleUsbC|
  014b4		 |$LN7@HandleUsbC|

; 672  :     {
; 673  :         /* As a Device, very little processing for RESUME, however
; 674  :          * as a Host, we need to take up further actions
; 675  :          */
; 676  :         if (intrUsb & MGC_M_INTR_RESUME)

  014b4	e1dd34b4	 ldrh        r3, [sp, #0x44]
  014b8	e3130002	 tst         r3, #2
  014bc	0a00000c	 beq         |$LN5@HandleUsbC|

; 677  :         {
; 678  :             PRINTMSG(TRUE, /*ZONE_PDD_INIT, */ (L"+RESUME\r\n"));

  014c0	e59f31cc	 ldr         r3, [pc, #0x1CC]
  014c4	e5933440	 ldr         r3, [r3, #0x440]
  014c8	e3130801	 tst         r3, #1, 16
  014cc	0a000004	 beq         |$LN18@HandleUsbC|
  014d0	e59f01cc	 ldr         r0, [pc, #0x1CC]
  014d4	eb000000	 bl          CeLogMsg
  014d8	e3a03001	 mov         r3, #1
  014dc	e58d3014	 str         r3, [sp, #0x14]
  014e0	ea000003	 b           |$LN19@HandleUsbC|
  014e4		 |$LN18@HandleUsbC|
  014e4	e59f01b8	 ldr         r0, [pc, #0x1B8]
  014e8	eb000000	 bl          NKDbgPrintfW
  014ec	e3a03000	 mov         r3, #0
  014f0	e58d3014	 str         r3, [sp, #0x14]
  014f4		 |$LN19@HandleUsbC|
  014f4		 |$LN5@HandleUsbC|

; 679  :         }
; 680  :         /* p35 MUSBHDRC manual for the order of the tests */
; 681  :         if (intrUsb & MGC_M_INTR_SESSREQ)

  014f4	e1dd34b4	 ldrh        r3, [sp, #0x44]
  014f8	e3130040	 tst         r3, #0x40
  014fc	0a000015	 beq         |$LN4@HandleUsbC|

; 682  :         {
; 683  :             PRINTMSG(ZONE_PDD_INIT, (L"+SESSION_REQUEST (HOST_MODE)\r\n"));

  01500	e59f318c	 ldr         r3, [pc, #0x18C]
  01504	e5933440	 ldr         r3, [r3, #0x440]
  01508	e3130c01	 tst         r3, #1, 24
  0150c	0a00000f	 beq         |$LN22@HandleUsbC|
  01510	e59f317c	 ldr         r3, [pc, #0x17C]
  01514	e5933440	 ldr         r3, [r3, #0x440]
  01518	e3130801	 tst         r3, #1, 16
  0151c	0a000004	 beq         |$LN20@HandleUsbC|
  01520	e59f0178	 ldr         r0, [pc, #0x178]
  01524	eb000000	 bl          CeLogMsg
  01528	e3a03001	 mov         r3, #1
  0152c	e58d3018	 str         r3, [sp, #0x18]
  01530	ea000003	 b           |$LN21@HandleUsbC|
  01534		 |$LN20@HandleUsbC|
  01534	e59f0164	 ldr         r0, [pc, #0x164]
  01538	eb000000	 bl          NKDbgPrintfW
  0153c	e3a03000	 mov         r3, #0
  01540	e58d3018	 str         r3, [sp, #0x18]
  01544		 |$LN21@HandleUsbC|
  01544	e3a03001	 mov         r3, #1
  01548	e58d301c	 str         r3, [sp, #0x1C]
  0154c	ea000001	 b           |$LN23@HandleUsbC|
  01550		 |$LN22@HandleUsbC|
  01550	e3a03000	 mov         r3, #0
  01554	e58d301c	 str         r3, [sp, #0x1C]
  01558		 |$LN23@HandleUsbC|
  01558		 |$LN4@HandleUsbC|

; 684  :         }
; 685  :         /* VBUSError is bad, shutdown &  go to error mode and ignore
; 686  :          * the other interrups; p35 MUSBHDRC manual for the order
; 687  :          of the tests */
; 688  :         if (intrUsb & MGC_M_INTR_VBUSERROR)

  01558	e1dd34b4	 ldrh        r3, [sp, #0x44]
  0155c	e3130080	 tst         r3, #0x80
  01560	0a000015	 beq         |$LN3@HandleUsbC|

; 689  :         {
; 690  :             PRINTMSG(ZONE_PDD_INIT, (L"V_BUS ERROR??? stopping host\r\n"));

  01564	e59f3128	 ldr         r3, [pc, #0x128]
  01568	e5933440	 ldr         r3, [r3, #0x440]
  0156c	e3130c01	 tst         r3, #1, 24
  01570	0a00000f	 beq         |$LN26@HandleUsbC|
  01574	e59f3118	 ldr         r3, [pc, #0x118]
  01578	e5933440	 ldr         r3, [r3, #0x440]
  0157c	e3130801	 tst         r3, #1, 16
  01580	0a000004	 beq         |$LN24@HandleUsbC|
  01584	e59f0110	 ldr         r0, [pc, #0x110]
  01588	eb000000	 bl          CeLogMsg
  0158c	e3a03001	 mov         r3, #1
  01590	e58d3020	 str         r3, [sp, #0x20]
  01594	ea000003	 b           |$LN25@HandleUsbC|
  01598		 |$LN24@HandleUsbC|
  01598	e59f00fc	 ldr         r0, [pc, #0xFC]
  0159c	eb000000	 bl          NKDbgPrintfW
  015a0	e3a03000	 mov         r3, #0
  015a4	e58d3020	 str         r3, [sp, #0x20]
  015a8		 |$LN25@HandleUsbC|
  015a8	e3a03001	 mov         r3, #1
  015ac	e58d3024	 str         r3, [sp, #0x24]
  015b0	ea000001	 b           |$LN27@HandleUsbC|
  015b4		 |$LN26@HandleUsbC|
  015b4	e3a03000	 mov         r3, #0
  015b8	e58d3024	 str         r3, [sp, #0x24]
  015bc		 |$LN27@HandleUsbC|
  015bc		 |$LN3@HandleUsbC|

; 691  :         }
; 692  :         /* connect is valid only when in host mode; ignore it if in device mode;
; 693  :            p35 MUSBHDRC manual for the order of the tests */
; 694  :         if (intrUsb & MGC_M_INTR_CONNECT)

  015bc	e1dd34b4	 ldrh        r3, [sp, #0x44]
  015c0	e3130010	 tst         r3, #0x10
  015c4	0a000015	 beq         |$LN2@HandleUsbC|

; 695  :         {
; 696  :             PRINTMSG(ZONE_PDD_INIT, (L"RECEIVED CONNECT (goto host mode)\r\n"));

  015c8	e59f30c4	 ldr         r3, [pc, #0xC4]
  015cc	e5933440	 ldr         r3, [r3, #0x440]
  015d0	e3130c01	 tst         r3, #1, 24
  015d4	0a00000f	 beq         |$LN30@HandleUsbC|
  015d8	e59f30b4	 ldr         r3, [pc, #0xB4]
  015dc	e5933440	 ldr         r3, [r3, #0x440]
  015e0	e3130801	 tst         r3, #1, 16
  015e4	0a000004	 beq         |$LN28@HandleUsbC|
  015e8	e59f00a8	 ldr         r0, [pc, #0xA8]
  015ec	eb000000	 bl          CeLogMsg
  015f0	e3a03001	 mov         r3, #1
  015f4	e58d3028	 str         r3, [sp, #0x28]
  015f8	ea000003	 b           |$LN29@HandleUsbC|
  015fc		 |$LN28@HandleUsbC|
  015fc	e59f0094	 ldr         r0, [pc, #0x94]
  01600	eb000000	 bl          NKDbgPrintfW
  01604	e3a03000	 mov         r3, #0
  01608	e58d3028	 str         r3, [sp, #0x28]
  0160c		 |$LN29@HandleUsbC|
  0160c	e3a03001	 mov         r3, #1
  01610	e58d302c	 str         r3, [sp, #0x2C]
  01614	ea000001	 b           |$LN31@HandleUsbC|
  01618		 |$LN30@HandleUsbC|
  01618	e3a03000	 mov         r3, #0
  0161c	e58d302c	 str         r3, [sp, #0x2C]
  01620		 |$LN31@HandleUsbC|
  01620		 |$LN2@HandleUsbC|

; 697  : 
; 698  :         }
; 699  :         if (intrUsb & MGC_M_INTR_RESET)

  01620	e1dd34b4	 ldrh        r3, [sp, #0x44]
  01624	e3130004	 tst         r3, #4
  01628	0a000015	 beq         |$LN1@HandleUsbC|

; 700  :         {
; 701  :             PRINTMSG(ZONE_PDD_INIT, /*TRUE, */ (L"BUS RESET\r\n"));

  0162c	e59f3060	 ldr         r3, [pc, #0x60]
  01630	e5933440	 ldr         r3, [r3, #0x440]
  01634	e3130c01	 tst         r3, #1, 24
  01638	0a00000f	 beq         |$LN34@HandleUsbC|
  0163c	e59f3050	 ldr         r3, [pc, #0x50]
  01640	e5933440	 ldr         r3, [r3, #0x440]
  01644	e3130801	 tst         r3, #1, 16
  01648	0a000004	 beq         |$LN32@HandleUsbC|
  0164c	e59f003c	 ldr         r0, [pc, #0x3C]
  01650	eb000000	 bl          CeLogMsg
  01654	e3a03001	 mov         r3, #1
  01658	e58d3030	 str         r3, [sp, #0x30]
  0165c	ea000003	 b           |$LN33@HandleUsbC|
  01660		 |$LN32@HandleUsbC|
  01660	e59f0028	 ldr         r0, [pc, #0x28]
  01664	eb000000	 bl          NKDbgPrintfW
  01668	e3a03000	 mov         r3, #0
  0166c	e58d3030	 str         r3, [sp, #0x30]
  01670		 |$LN33@HandleUsbC|
  01670	e3a03001	 mov         r3, #1
  01674	e58d3034	 str         r3, [sp, #0x34]
  01678	ea000001	 b           |$LN35@HandleUsbC|
  0167c		 |$LN34@HandleUsbC|
  0167c	e3a03000	 mov         r3, #0
  01680	e58d3034	 str         r3, [sp, #0x34]
  01684		 |$LN35@HandleUsbC|
  01684		 |$LN1@HandleUsbC|
  01684		 |$LN6@HandleUsbC|

; 702  :             /*PRINTMSG(TRUE, (L"+RESUME\r\n"));    */
; 703  :         }
; 704  :         /* As per the Mentor Graphics Documentation, USB Core
; 705  :          * Interrupts like SOF, Disconnect and SUSPEND needs to
; 706  :          * be addressed only after EndPoint Interrupt Processing
; 707  :          */
; 708  :     }
; 709  :     return ;
; 710  : }

  01684	e28dd038	 add         sp, sp, #0x38
  01688	e89d6000	 ldmia       sp, {sp, lr}
  0168c	e12fff1e	 bx          lr
  01690		 |$LN39@HandleUsbC|
  01690		 |$LN40@HandleUsbC|
  01690	00000000	 DCD         |??_C@_1BI@BHOCFNOP@?$AAB?$AAU?$AAS?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  01694		 |$LN41@HandleUsbC|
  01694	00000000	 DCD         |dpCurSettings|
  01698		 |$LN42@HandleUsbC|
  01698	00000000	 DCD         |??_C@_1EI@KKEOBKFE@?$AAR?$AAE?$AAC?$AAE?$AAI?$AAV?$AAE?$AAD?$AA?5?$AAC?$AAO?$AAN?$AAN?$AAE?$AAC?$AAT?$AA?5?$AA?$CI?$AAg?$AAo?$AAt?$AAo?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAe@|
  0169c		 |$LN43@HandleUsbC|
  0169c	00000000	 DCD         |??_C@_1DO@KILBNAIG@?$AAV?$AA_?$AAB?$AAU?$AAS?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$DP?$AA?$DP?$AA?$DP?$AA?5?$AAs?$AAt?$AAo?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  016a0		 |$LN44@HandleUsbC|
  016a0	00000000	 DCD         |??_C@_1DO@PFLKEJNF@?$AA?$CL?$AAS?$AAE?$AAS?$AAS?$AAI?$AAO?$AAN?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA?5?$AA?$CI?$AAH?$AAO?$AAS?$AAT?$AA_?$AAM?$AAO?$AAD?$AAE?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  016a4		 |$LN45@HandleUsbC|
  016a4	00000000	 DCD         |??_C@_1BE@DLNBLDGP@?$AA?$CL?$AAR?$AAE?$AAS?$AAU?$AAM?$AAE?$AA?$AN?$AA?6?$AA?$AA@|
  016a8		 |$LN46@HandleUsbC|
  016a8	00000000	 DCD         |??_C@_1EE@LDDMKDNI@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAD?$AAR?$AAV?$AAV?$AAB?$AAU?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAx?$AA?$AN@|
  016ac		 |$LN47@HandleUsbC|
  016ac	00000000	 DCD         |??_C@_1EI@NHFEGCOD@?$AA?$CL?$AAU?$AAs?$AAb?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAg?$AAe?$AA0?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4@|
  016b0		 |$M47671|

			 ENDP  ; |HandleUsbCoreInterrupt|

	EXPORT	|??_C@_1CK@EALGOLEJ@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@HKPIFLIF@?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AAO?$AAT?$AAG@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@DAMBPNKP@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|USBPeripheralInit|
	IMPORT	|USBFNPDD_PowerVBUS|

  00040			 AREA	 |.pdata|, PDATA
|$T47700| DCD	|$LN19@USBPeriphe|
	DCD	0x4000a704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EALGOLEJ@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@HKPIFLIF@?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AAO?$AAT?$AAG@| DCB "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, " ", 0x0, "O", 0x0, "T"
	DCB	0x0, "G", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@DAMBPNKP@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  016b0			 AREA	 |.text|, CODE, ARM

  016b0		 |USBPeripheralInit| PROC

; 729  : {

  016b0		 |$LN19@USBPeriphe|
  016b0	e1a0c00d	 mov         r12, sp
  016b4	e92d0001	 stmdb       sp!, {r0}
  016b8	e92d5000	 stmdb       sp!, {r12, lr}
  016bc	e24dd020	 sub         sp, sp, #0x20
  016c0		 |$M47697|

; 730  :     CSL_UsbRegs *pUsbRegs                = pPddContext->pUsbdRegs;

  016c0	e59d3028	 ldr         r3, [sp, #0x28]
  016c4	e283301c	 add         r3, r3, #0x1C
  016c8	e5933000	 ldr         r3, [r3]
  016cc	e58d3000	 str         r3, [sp]

; 731  : 	//OMAP_SYSC_GENERAL_REGS *pSysConfRegs = pPddContext->pSysConfRegs;
; 732  : 
; 733  :     PRINTMSG(ZONE_FUNCTION, (L"+USBPeripheralInit\r\n"));

  016d0	e59f3268	 ldr         r3, [pc, #0x268]
  016d4	e5933440	 ldr         r3, [r3, #0x440]
  016d8	e3130a01	 tst         r3, #1, 20
  016dc	0a00000f	 beq         |$LN7@USBPeriphe|
  016e0	e59f3258	 ldr         r3, [pc, #0x258]
  016e4	e5933440	 ldr         r3, [r3, #0x440]
  016e8	e3130801	 tst         r3, #1, 16
  016ec	0a000004	 beq         |$LN5@USBPeriphe|
  016f0	e59f0250	 ldr         r0, [pc, #0x250]
  016f4	eb000000	 bl          CeLogMsg
  016f8	e3a03001	 mov         r3, #1
  016fc	e58d3008	 str         r3, [sp, #8]
  01700	ea000003	 b           |$LN6@USBPeriphe|
  01704		 |$LN5@USBPeriphe|
  01704	e59f023c	 ldr         r0, [pc, #0x23C]
  01708	eb000000	 bl          NKDbgPrintfW
  0170c	e3a03000	 mov         r3, #0
  01710	e58d3008	 str         r3, [sp, #8]
  01714		 |$LN6@USBPeriphe|
  01714	e3a03001	 mov         r3, #1
  01718	e58d300c	 str         r3, [sp, #0xC]
  0171c	ea000001	 b           |$LN8@USBPeriphe|
  01720		 |$LN7@USBPeriphe|
  01720	e3a03000	 mov         r3, #0
  01724	e58d300c	 str         r3, [sp, #0xC]
  01728		 |$LN8@USBPeriphe|

; 734  : 
; 735  :     // Determine if USB 1.1 is in use
; 736  : 	pPddContext->fUSB11Enabled = TRUE; // TODO : find out the corresponding register for AM3517

  01728	e59d3028	 ldr         r3, [sp, #0x28]
  0172c	e2832e26	 add         r2, r3, #0x26, 28
  01730	e3a03001	 mov         r3, #1
  01734	e5823000	 str         r3, [r2]

; 737  : 
; 738  :     /* VSbus off */
; 739  :     USBFNPDD_PowerVBUS(FALSE);

  01738	e3a00000	 mov         r0, #0
  0173c	eb000000	 bl          USBFNPDD_PowerVBUS

; 740  : 
; 741  :     // Reset USB controller
; 742  :     pUsbRegs->CTRLR |= BIT0;

  01740	e59d3000	 ldr         r3, [sp]
  01744	e2833004	 add         r3, r3, #4
  01748	e5933000	 ldr         r3, [r3]
  0174c	e3832001	 orr         r2, r3, #1
  01750	e59d3000	 ldr         r3, [sp]
  01754	e2833004	 add         r3, r3, #4
  01758	e5832000	 str         r2, [r3]
  0175c		 |$LN2@USBPeriphe|

; 743  :     while((pUsbRegs->CTRLR & BIT0) != 0);

  0175c	e59d3000	 ldr         r3, [sp]
  01760	e2833004	 add         r3, r3, #4
  01764	e5933000	 ldr         r3, [r3]
  01768	e3130001	 tst         r3, #1
  0176c	0a000000	 beq         |$LN1@USBPeriphe|
  01770	eafffff9	 b           |$LN2@USBPeriphe|
  01774		 |$LN1@USBPeriphe|

; 744  : 
; 745  :     // Start the on-chip PHY and its PLL
; 746  :     UsbPhyPowerCtrl(pPddContext, TRUE);

  01774	e3a01001	 mov         r1, #1
  01778	e59d0028	 ldr         r0, [sp, #0x28]
  0177c	eb000000	 bl          UsbPhyPowerCtrl

; 747  : 
; 748  :     // Stop the on-chip PHY and its PLL
; 749  :     UsbPhyPowerCtrl(pPddContext, FALSE);

  01780	e3a01000	 mov         r1, #0
  01784	e59d0028	 ldr         r0, [sp, #0x28]
  01788	eb000000	 bl          UsbPhyPowerCtrl

; 750  : 
; 751  : #ifndef UFN_DISABLE_HIGH_SPEED
; 752  :     /* Enable high speed */
; 753  :     pUsbRegs->POWER = MGC_M_POWER_HSENAB;

  0178c	e59d3000	 ldr         r3, [sp]
  01790	e2833b01	 add         r3, r3, #1, 22
  01794	e2832001	 add         r2, r3, #1
  01798	e3a03020	 mov         r3, #0x20
  0179c	e5c23000	 strb        r3, [r2]

; 754  : #endif
; 755  : 
; 756  :     // If RNDIS Mode is required, then CTRL BIT 4 needs to be set
; 757  : #ifdef USB_RNDIS_MODE
; 758  :     pUsbRegs->CTRLR |= BIT4;
; 759  : #endif
; 760  : 
; 761  :     /* start the on-chip PHY and its PLL */
; 762  :     UsbPhyPowerCtrl(pPddContext, TRUE);

  017a0	e3a01001	 mov         r1, #1
  017a4	e59d0028	 ldr         r0, [sp, #0x28]
  017a8	eb000000	 bl          UsbPhyPowerCtrl

; 763  : 
; 764  :     /* Disable All Interrupts
; 765  :      * NOTE: The USB Controller Definition of MASK Set and Clear
; 766  :      * is different from the conventional meaning. Here MASK SET means
; 767  :      * that the Interrupt is enabled and MASK Clear means Interrupts
; 768  :      * are disabled. Hence do not write into the INTMSKSETR
; 769  :      * Register of the controller during startup initialization
; 770  :      */
; 771  : 
; 772  : 	pUsbRegs->CORE_INTMSKCLRR = USB_CORE_INTR_MASK_ALL ;

  017ac	e59d3000	 ldr         r3, [sp]
  017b0	e2832054	 add         r2, r3, #0x54
  017b4	e3e034fe	 mvn         r3, #0xFE, 8
  017b8	e5823000	 str         r3, [r2]

; 773  :     pUsbRegs->EP_INTMSKCLRR = USB_EP_INTR_MASK_ALL ;

  017bc	e59d3000	 ldr         r3, [sp]
  017c0	e2832034	 add         r2, r3, #0x34
  017c4	e3e03801	 mvn         r3, #1, 16
  017c8	e5823000	 str         r3, [r2]

; 774  :     pUsbRegs->EOIR = 0x00;

  017cc	e59d3000	 ldr         r3, [sp]
  017d0	e2832060	 add         r2, r3, #0x60
  017d4	e3a03000	 mov         r3, #0
  017d8	e5823000	 str         r3, [r2]

; 775  : 
; 776  :     /* Configure the Controller UINT BIT First */
; 777  :     pUsbRegs->CTRLR &= ~BIT3;

  017dc	e59d3000	 ldr         r3, [sp]
  017e0	e2833004	 add         r3, r3, #4
  017e4	e5932000	 ldr         r2, [r3]
  017e8	e3e03008	 mvn         r3, #8
  017ec	e0022003	 and         r2, r2, r3
  017f0	e59d3000	 ldr         r3, [sp]
  017f4	e2833004	 add         r3, r3, #4
  017f8	e5832000	 str         r2, [r3]

; 778  : 
; 779  :     /* INTRUSBE Register Initialization for USB Core Interrupts */
; 780  :     OUTREG8(&pUsbRegs->INTRUSBE, 0xf7);

  017fc	e59d3000	 ldr         r3, [sp]
  01800	e2833b01	 add         r3, r3, #1, 22
  01804	e283200b	 add         r2, r3, #0xB
  01808	e3a030f7	 mov         r3, #0xF7
  0180c	e5c23000	 strb        r3, [r2]

; 781  :     OUTREG8(&pUsbRegs->TESTMODE, 0);

  01810	e59d3000	 ldr         r3, [sp]
  01814	e2833b01	 add         r3, r3, #1, 22
  01818	e283200f	 add         r2, r3, #0xF
  0181c	e3a03000	 mov         r3, #0
  01820	e5c23000	 strb        r3, [r2]

; 782  : 
; 783  :     /* Clear BIT0 For Operating in Peripheral Mode */
; 784  :     //pUsbRegs->DEVCTL = 0;
; 785  : 
; 786  :     /* Initial Function Address set to zero */
; 787  :     OUTREG8(&pUsbRegs->FADDR, 0);

  01824	e59d3000	 ldr         r3, [sp]
  01828	e2832b01	 add         r2, r3, #1, 22
  0182c	e3a03000	 mov         r3, #0
  01830	e5c23000	 strb        r3, [r2]

; 788  : 
; 789  :     /* SOFTCONN set in USBPeripheralStart() */
; 790  : 
; 791  :     PRINTMSG (ZONE_FUNCTION, (_T("Common USB IntrEnable 0x%02x OTG DEVCTL 0x%02x\r\n"),
; 792  :                       pUsbRegs->INTRUSBE,
; 793  :                       pUsbRegs->DEVCTL));

  01834	e59f3104	 ldr         r3, [pc, #0x104]
  01838	e5933440	 ldr         r3, [r3, #0x440]
  0183c	e3130a01	 tst         r3, #1, 20
  01840	0a00001d	 beq         |$LN11@USBPeriphe|
  01844	e59f30f4	 ldr         r3, [pc, #0xF4]
  01848	e5933440	 ldr         r3, [r3, #0x440]
  0184c	e3130801	 tst         r3, #1, 16
  01850	0a00000b	 beq         |$LN9@USBPeriphe|
  01854	e59d3000	 ldr         r3, [sp]
  01858	e2833e46	 add         r3, r3, #0x46, 28
  0185c	e5d32000	 ldrb        r2, [r3]
  01860	e59d3000	 ldr         r3, [sp]
  01864	e2833b01	 add         r3, r3, #1, 22
  01868	e283300b	 add         r3, r3, #0xB
  0186c	e5d31000	 ldrb        r1, [r3]
  01870	e59f00cc	 ldr         r0, [pc, #0xCC]
  01874	eb000000	 bl          CeLogMsg
  01878	e3a03001	 mov         r3, #1
  0187c	e58d3010	 str         r3, [sp, #0x10]
  01880	ea00000a	 b           |$LN10@USBPeriphe|
  01884		 |$LN9@USBPeriphe|
  01884	e59d3000	 ldr         r3, [sp]
  01888	e2833e46	 add         r3, r3, #0x46, 28
  0188c	e5d32000	 ldrb        r2, [r3]
  01890	e59d3000	 ldr         r3, [sp]
  01894	e2833b01	 add         r3, r3, #1, 22
  01898	e283300b	 add         r3, r3, #0xB
  0189c	e5d31000	 ldrb        r1, [r3]
  018a0	e59f009c	 ldr         r0, [pc, #0x9C]
  018a4	eb000000	 bl          NKDbgPrintfW
  018a8	e3a03000	 mov         r3, #0
  018ac	e58d3010	 str         r3, [sp, #0x10]
  018b0		 |$LN10@USBPeriphe|
  018b0	e3a03001	 mov         r3, #1
  018b4	e58d3014	 str         r3, [sp, #0x14]
  018b8	ea000001	 b           |$LN12@USBPeriphe|
  018bc		 |$LN11@USBPeriphe|
  018bc	e3a03000	 mov         r3, #0
  018c0	e58d3014	 str         r3, [sp, #0x14]
  018c4		 |$LN12@USBPeriphe|

; 794  : 
; 795  :     DumpUsbRegisters(pPddContext);

  018c4	e59d0028	 ldr         r0, [sp, #0x28]
  018c8	eb000000	 bl          DumpUsbRegisters

; 796  : 
; 797  :     PRINTMSG(ZONE_FUNCTION, (L"-USBPeripheralInit\r\n"));

  018cc	e59f306c	 ldr         r3, [pc, #0x6C]
  018d0	e5933440	 ldr         r3, [r3, #0x440]
  018d4	e3130a01	 tst         r3, #1, 20
  018d8	0a00000f	 beq         |$LN15@USBPeriphe|
  018dc	e59f305c	 ldr         r3, [pc, #0x5C]
  018e0	e5933440	 ldr         r3, [r3, #0x440]
  018e4	e3130801	 tst         r3, #1, 16
  018e8	0a000004	 beq         |$LN13@USBPeriphe|
  018ec	e59f0048	 ldr         r0, [pc, #0x48]
  018f0	eb000000	 bl          CeLogMsg
  018f4	e3a03001	 mov         r3, #1
  018f8	e58d3018	 str         r3, [sp, #0x18]
  018fc	ea000003	 b           |$LN14@USBPeriphe|
  01900		 |$LN13@USBPeriphe|
  01900	e59f0034	 ldr         r0, [pc, #0x34]
  01904	eb000000	 bl          NKDbgPrintfW
  01908	e3a03000	 mov         r3, #0
  0190c	e58d3018	 str         r3, [sp, #0x18]
  01910		 |$LN14@USBPeriphe|
  01910	e3a03001	 mov         r3, #1
  01914	e58d301c	 str         r3, [sp, #0x1C]
  01918	ea000001	 b           |$LN16@USBPeriphe|
  0191c		 |$LN15@USBPeriphe|
  0191c	e3a03000	 mov         r3, #0
  01920	e58d301c	 str         r3, [sp, #0x1C]
  01924		 |$LN16@USBPeriphe|

; 798  : 
; 799  :     return (TRUE) ;

  01924	e3a03001	 mov         r3, #1
  01928	e58d3004	 str         r3, [sp, #4]

; 800  : }

  0192c	e59d0004	 ldr         r0, [sp, #4]
  01930	e28dd020	 add         sp, sp, #0x20
  01934	e89d6000	 ldmia       sp, {sp, lr}
  01938	e12fff1e	 bx          lr
  0193c		 |$LN20@USBPeriphe|
  0193c		 |$LN21@USBPeriphe|
  0193c	00000000	 DCD         |??_C@_1CK@EALGOLEJ@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  01940		 |$LN22@USBPeriphe|
  01940	00000000	 DCD         |dpCurSettings|
  01944		 |$LN23@USBPeriphe|
  01944	00000000	 DCD         |??_C@_1GC@HKPIFLIF@?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AAO?$AAT?$AAG@|
  01948		 |$LN24@USBPeriphe|
  01948	00000000	 DCD         |??_C@_1CK@DAMBPNKP@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0194c		 |$M47698|

			 ENDP  ; |USBPeripheralInit|


  00048			 AREA	 |.pdata|, PDATA
|$T47710| DCD	|$LN11@UsbPhyPowe|
	DCD	0x40005804
; Function compile flags: /Odtp

  0194c			 AREA	 |.text|, CODE, ARM

  0194c		 |UsbPhyPowerCtrl| PROC

; 66   : {

  0194c		 |$LN11@UsbPhyPowe|
  0194c	e1a0c00d	 mov         r12, sp
  01950	e92d0003	 stmdb       sp!, {r0, r1}
  01954	e92d5000	 stmdb       sp!, {r12, lr}
  01958	e24dd008	 sub         sp, sp, #8
  0195c		 |$M47707|

; 67   :     OMAP_SYSC_GENERAL_REGS *pSysConfRegs = pPddContext->pSysConfRegs;

  0195c	e59d3010	 ldr         r3, [sp, #0x10]
  01960	e2833028	 add         r3, r3, #0x28
  01964	e5933000	 ldr         r3, [r3]
  01968	e58d3000	 str         r3, [sp]

; 68   : 
; 69   :     /* start the on-chip PHY and its PLL */
; 70   :     if (pSysConfRegs != NULL)

  0196c	e59d3000	 ldr         r3, [sp]
  01970	e3530000	 cmp         r3, #0
  01974	0a000048	 beq         |$LN6@UsbPhyPowe|

; 71   :     {
; 72   :         UINT32 nPhyCtl = INREG32(&pSysConfRegs->CONTROL_DEVCONF2);

  01978	e59d3000	 ldr         r3, [sp]
  0197c	e2833e31	 add         r3, r3, #0x31, 28
  01980	e5933000	 ldr         r3, [r3]
  01984	e58d3004	 str         r3, [sp, #4]

; 73   : 
; 74   :         if (enable == TRUE)

  01988	e59d3014	 ldr         r3, [sp, #0x14]
  0198c	e3530001	 cmp         r3, #1
  01990	1a000028	 bne         |$LN5@UsbPhyPowe|

; 75   :         {
; 76   :             // Unlock USBPHY_CTL reg
; 77   :             ChipCfgLock(pSysConfRegs, FALSE);

  01994	e3a01000	 mov         r1, #0
  01998	e59d0000	 ldr         r0, [sp]
  0199c	eb000000	 bl          ChipCfgLock

; 78   : 
; 79   : 			MASKREG32(&pSysConfRegs->CONTROL_DEVCONF2, DEVCONF2_USBOTG_REFFREQ, DEVCONF2_USBOTG_REFFREQ_13MHZ);

  019a0	e59d3000	 ldr         r3, [sp]
  019a4	e2833e31	 add         r3, r3, #0x31, 28
  019a8	e5932000	 ldr         r2, [r3]
  019ac	e3e03c0f	 mvn         r3, #0xF, 24
  019b0	e0023003	 and         r3, r2, r3
  019b4	e3832c06	 orr         r2, r3, #6, 24
  019b8	e59d3000	 ldr         r3, [sp]
  019bc	e2833e31	 add         r3, r3, #0x31, 28
  019c0	e5832000	 str         r2, [r3]

; 80   : 
; 81   :             // Take Phy out of reset
; 82   :             nPhyCtl &= ~(DEVCONF2_USBOTG_PHY_RESET);

  019c4	e59d2004	 ldr         r2, [sp, #4]
  019c8	e3e03010	 mvn         r3, #0x10
  019cc	e0023003	 and         r3, r2, r3
  019d0	e58d3004	 str         r3, [sp, #4]

; 83   :             OUTREG32(&pSysConfRegs->CONTROL_DEVCONF2, nPhyCtl);

  019d4	e59d3000	 ldr         r3, [sp]
  019d8	e2832e31	 add         r2, r3, #0x31, 28
  019dc	e59d3004	 ldr         r3, [sp, #4]
  019e0	e5823000	 str         r3, [r2]

; 84   : 
; 85   :             // Start on-chip PHY and PLL's
; 86   :             nPhyCtl |= (DEVCONF2_USBOTG_PHY_PLLON     | 
; 87   :                         DEVCONF2_USBOTG_SESSENDEN     |
; 88   :                         DEVCONF2_USBOTG_VBUSDETECTEN  |
; 89   : 						DEVCONF2_USBOTG_REFFREQ_13MHZ |
; 90   :                         DEVCONF2_USBOTG_DATAPOLARITY  );

  019e4	e59d2004	 ldr         r2, [sp, #4]
  019e8	e3a03c36	 mov         r3, #0x36, 24
  019ec	e3833022	 orr         r3, r3, #0x22
  019f0	e1823003	 orr         r3, r2, r3
  019f4	e58d3004	 str         r3, [sp, #4]

; 91   :             nPhyCtl &= ~(DEVCONF2_USBOTG_POWERDOWNOTG |
; 92   : 						 DEVCONF2_USBPHY_GPIO_MODE	  |
; 93   : 						 DEVCONF2_USBOTG_OTGMODE	  |
; 94   :                          DEVCONF2_USBOTG_PHY_PD       );

  019f8	e59d2004	 ldr         r2, [sp, #4]
  019fc	e59f30a4	 ldr         r3, [pc, #0xA4]
  01a00	e0023003	 and         r3, r2, r3
  01a04	e58d3004	 str         r3, [sp, #4]

; 95   : 
; 96   :             OUTREG32(&pSysConfRegs->CONTROL_DEVCONF2, nPhyCtl);

  01a08	e59d3000	 ldr         r3, [sp]
  01a0c	e2832e31	 add         r2, r3, #0x31, 28
  01a10	e59d3004	 ldr         r3, [sp, #4]
  01a14	e5823000	 str         r3, [r2]
  01a18		 |$LN4@UsbPhyPowe|

; 97   :             //Sleep(1);
; 98   : 
; 99   :             // wait until ready
; 100  :             while ((INREG32(&pSysConfRegs->CONTROL_DEVCONF2) & DEVCONF2_USBOTG_PWR_CLKGOOD) != DEVCONF2_USBOTG_PWR_CLKGOOD)

  01a18	e59d3000	 ldr         r3, [sp]
  01a1c	e2833e31	 add         r3, r3, #0x31, 28
  01a20	e5933000	 ldr         r3, [r3]
  01a24	e2033080	 and         r3, r3, #0x80
  01a28	e3530080	 cmp         r3, #0x80
  01a2c	0a000000	 beq         |$LN3@UsbPhyPowe|

; 101  :             {
; 102  :                 //Sleep(20);
; 103  :             }

  01a30	eafffff8	 b           |$LN4@UsbPhyPowe|
  01a34		 |$LN3@UsbPhyPowe|

; 104  :         }
; 105  :         else

  01a34	ea000015	 b           |$LN2@UsbPhyPowe|
  01a38		 |$LN5@UsbPhyPowe|

; 106  :         {
; 107  :             // Unlock USBPHY_CTL reg
; 108  :             ChipCfgLock(pSysConfRegs, FALSE);

  01a38	e3a01000	 mov         r1, #0
  01a3c	e59d0000	 ldr         r0, [sp]
  01a40	eb000000	 bl          ChipCfgLock

; 109  : 
; 110  :             // Only power down the USB2.0 PHY if USB1.1 PHY not in use
; 111  :             if (!pPddContext->fUSB11Enabled)

  01a44	e59d3010	 ldr         r3, [sp, #0x10]
  01a48	e2833e26	 add         r3, r3, #0x26, 28
  01a4c	e5933000	 ldr         r3, [r3]
  01a50	e3530000	 cmp         r3, #0
  01a54	1a000002	 bne         |$LN1@UsbPhyPowe|

; 112  :             {
; 113  :                 nPhyCtl |= DEVCONF2_USBOTG_PHY_PD;

  01a58	e59d3004	 ldr         r3, [sp, #4]
  01a5c	e3833008	 orr         r3, r3, #8
  01a60	e58d3004	 str         r3, [sp, #4]
  01a64		 |$LN1@UsbPhyPowe|

; 114  :             }
; 115  : 
; 116  :             // Power down the OTG
; 117  :             nPhyCtl |= DEVCONF2_USBOTG_POWERDOWNOTG;

  01a64	e59d3004	 ldr         r3, [sp, #4]
  01a68	e3833004	 orr         r3, r3, #4
  01a6c	e58d3004	 str         r3, [sp, #4]

; 118  : 			nPhyCtl &= ~DEVCONF2_USBOTG_PHY_PLLON;

  01a70	e59d2004	 ldr         r2, [sp, #4]
  01a74	e3e03020	 mvn         r3, #0x20
  01a78	e0023003	 and         r3, r2, r3
  01a7c	e58d3004	 str         r3, [sp, #4]

; 119  :             OUTREG32(&pSysConfRegs->CONTROL_DEVCONF2, nPhyCtl);

  01a80	e59d3000	 ldr         r3, [sp]
  01a84	e2832e31	 add         r2, r3, #0x31, 28
  01a88	e59d3004	 ldr         r3, [sp, #4]
  01a8c	e5823000	 str         r3, [r2]
  01a90		 |$LN2@UsbPhyPowe|

; 120  :         }
; 121  : 
; 122  :         // Lock USBPHY_CTL reg
; 123  :         ChipCfgLock(pSysConfRegs, TRUE);

  01a90	e3a01001	 mov         r1, #1
  01a94	e59d0000	 ldr         r0, [sp]
  01a98	eb000000	 bl          ChipCfgLock
  01a9c		 |$LN6@UsbPhyPowe|

; 124  :     }
; 125  : 
; 126  :     return ;
; 127  : }

  01a9c	e28dd008	 add         sp, sp, #8
  01aa0	e89d6000	 ldmia       sp, {sp, lr}
  01aa4	e12fff1e	 bx          lr
  01aa8		 |$LN12@UsbPhyPowe|
  01aa8		 |$LN13@UsbPhyPowe|
  01aa8	ff7f3ff3	 DCD         0xff7f3ff3
  01aac		 |$M47708|

			 ENDP  ; |UsbPhyPowerCtrl|

	EXPORT	|??_C@_1CM@HKMHLBJB@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@IGDHCANN@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|USBPeripheralStart|

  00050			 AREA	 |.pdata|, PDATA
|$T47726| DCD	|$LN13@USBPeriphe@2|
	DCD	0x40004404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@HKMHLBJB@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@IGDHCANN@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01aac			 AREA	 |.text|, CODE, ARM

  01aac		 |USBPeripheralStart| PROC

; 815  : {

  01aac		 |$LN13@USBPeriphe@2|
  01aac	e1a0c00d	 mov         r12, sp
  01ab0	e92d0001	 stmdb       sp!, {r0}
  01ab4	e92d5000	 stmdb       sp!, {r12, lr}
  01ab8	e24dd018	 sub         sp, sp, #0x18
  01abc		 |$M47723|

; 816  :     CSL_UsbRegs *pUsbRegs = pPddContext->pUsbdRegs;

  01abc	e59d3020	 ldr         r3, [sp, #0x20]
  01ac0	e283301c	 add         r3, r3, #0x1C
  01ac4	e5933000	 ldr         r3, [r3]
  01ac8	e58d3000	 str         r3, [sp]

; 817  : 
; 818  :     PRINTMSG(ZONE_FUNCTION, (L"+USBPeripheralStart\r\n"));

  01acc	e59f30e0	 ldr         r3, [pc, #0xE0]
  01ad0	e5933440	 ldr         r3, [r3, #0x440]
  01ad4	e3130a01	 tst         r3, #1, 20
  01ad8	0a00000f	 beq         |$LN5@USBPeriphe@2|
  01adc	e59f30d0	 ldr         r3, [pc, #0xD0]
  01ae0	e5933440	 ldr         r3, [r3, #0x440]
  01ae4	e3130801	 tst         r3, #1, 16
  01ae8	0a000004	 beq         |$LN3@USBPeriphe@2|
  01aec	e59f00c4	 ldr         r0, [pc, #0xC4]
  01af0	eb000000	 bl          CeLogMsg
  01af4	e3a03001	 mov         r3, #1
  01af8	e58d3008	 str         r3, [sp, #8]
  01afc	ea000003	 b           |$LN4@USBPeriphe@2|
  01b00		 |$LN3@USBPeriphe@2|
  01b00	e59f00b0	 ldr         r0, [pc, #0xB0]
  01b04	eb000000	 bl          NKDbgPrintfW
  01b08	e3a03000	 mov         r3, #0
  01b0c	e58d3008	 str         r3, [sp, #8]
  01b10		 |$LN4@USBPeriphe@2|
  01b10	e3a03001	 mov         r3, #1
  01b14	e58d300c	 str         r3, [sp, #0xC]
  01b18	ea000001	 b           |$LN6@USBPeriphe@2|
  01b1c		 |$LN5@USBPeriphe@2|
  01b1c	e3a03000	 mov         r3, #0
  01b20	e58d300c	 str         r3, [sp, #0xC]
  01b24		 |$LN6@USBPeriphe@2|

; 819  : 	RETAILMSG(TRUE, (L"+USBPeripheralStart\r\n"));

  01b24	e59f008c	 ldr         r0, [pc, #0x8C]
  01b28	eb000000	 bl          NKDbgPrintfW

; 820  : 
; 821  :     /* enable and start session */
; 822  : #ifdef UFN_DISABLE_HIGH_SPEED
; 823  :     pUsbRegs->POWER = MGC_M_POWER_SOFTCONN;
; 824  : #else
; 825  :     pUsbRegs->POWER = MGC_M_POWER_SOFTCONN | MGC_M_POWER_HSENAB;

  01b2c	e59d3000	 ldr         r3, [sp]
  01b30	e2833b01	 add         r3, r3, #1, 22
  01b34	e2832001	 add         r2, r3, #1
  01b38	e3a03060	 mov         r3, #0x60
  01b3c	e5c23000	 strb        r3, [r2]

; 826  : #endif
; 827  : 
; 828  :     PRINTMSG(ZONE_FUNCTION, (L"-USBPeripheralStart\r\n"));

  01b40	e59f306c	 ldr         r3, [pc, #0x6C]
  01b44	e5933440	 ldr         r3, [r3, #0x440]
  01b48	e3130a01	 tst         r3, #1, 20
  01b4c	0a00000f	 beq         |$LN9@USBPeriphe@2|
  01b50	e59f305c	 ldr         r3, [pc, #0x5C]
  01b54	e5933440	 ldr         r3, [r3, #0x440]
  01b58	e3130801	 tst         r3, #1, 16
  01b5c	0a000004	 beq         |$LN7@USBPeriphe@2|
  01b60	e59f0048	 ldr         r0, [pc, #0x48]
  01b64	eb000000	 bl          CeLogMsg
  01b68	e3a03001	 mov         r3, #1
  01b6c	e58d3010	 str         r3, [sp, #0x10]
  01b70	ea000003	 b           |$LN8@USBPeriphe@2|
  01b74		 |$LN7@USBPeriphe@2|
  01b74	e59f0034	 ldr         r0, [pc, #0x34]
  01b78	eb000000	 bl          NKDbgPrintfW
  01b7c	e3a03000	 mov         r3, #0
  01b80	e58d3010	 str         r3, [sp, #0x10]
  01b84		 |$LN8@USBPeriphe@2|
  01b84	e3a03001	 mov         r3, #1
  01b88	e58d3014	 str         r3, [sp, #0x14]
  01b8c	ea000001	 b           |$LN10@USBPeriphe@2|
  01b90		 |$LN9@USBPeriphe@2|
  01b90	e3a03000	 mov         r3, #0
  01b94	e58d3014	 str         r3, [sp, #0x14]
  01b98		 |$LN10@USBPeriphe@2|

; 829  : 
; 830  :     return (TRUE) ;

  01b98	e3a03001	 mov         r3, #1
  01b9c	e58d3004	 str         r3, [sp, #4]

; 831  : }

  01ba0	e59d0004	 ldr         r0, [sp, #4]
  01ba4	e28dd018	 add         sp, sp, #0x18
  01ba8	e89d6000	 ldmia       sp, {sp, lr}
  01bac	e12fff1e	 bx          lr
  01bb0		 |$LN14@USBPeriphe@2|
  01bb0		 |$LN15@USBPeriphe@2|
  01bb0	00000000	 DCD         |??_C@_1CM@HKMHLBJB@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  01bb4		 |$LN16@USBPeriphe@2|
  01bb4	00000000	 DCD         |dpCurSettings|
  01bb8		 |$LN17@USBPeriphe@2|
  01bb8	00000000	 DCD         |??_C@_1CM@IGDHCANN@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  01bbc		 |$M47724|

			 ENDP  ; |USBPeripheralStart|

	EXPORT	|??_C@_1CO@HKECFFIB@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@KBIGAKKK@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|USBPeripheralDeinit|
	IMPORT	|ReleaseDevicePads|

  00058			 AREA	 |.pdata|, PDATA
|$T47744| DCD	|$LN13@USBPeriphe@3|
	DCD	0x40004904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@HKECFFIB@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@KBIGAKKK@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01bbc			 AREA	 |.text|, CODE, ARM

  01bbc		 |USBPeripheralDeinit| PROC

; 849  : {

  01bbc		 |$LN13@USBPeriphe@3|
  01bbc	e1a0c00d	 mov         r12, sp
  01bc0	e92d0001	 stmdb       sp!, {r0}
  01bc4	e92d5000	 stmdb       sp!, {r12, lr}
  01bc8	e24dd018	 sub         sp, sp, #0x18
  01bcc		 |$M47741|

; 850  :     CSL_UsbRegs  *pUsbRegs = pPddContext->pUsbdRegs;

  01bcc	e59d3020	 ldr         r3, [sp, #0x20]
  01bd0	e283301c	 add         r3, r3, #0x1C
  01bd4	e5933000	 ldr         r3, [r3]
  01bd8	e58d3000	 str         r3, [sp]

; 851  : 
; 852  :     PRINTMSG(ZONE_FUNCTION, (L"+USBPeripheralDeinit\r\n"));

  01bdc	e59f30f4	 ldr         r3, [pc, #0xF4]
  01be0	e5933440	 ldr         r3, [r3, #0x440]
  01be4	e3130a01	 tst         r3, #1, 20
  01be8	0a00000f	 beq         |$LN5@USBPeriphe@3|
  01bec	e59f30e4	 ldr         r3, [pc, #0xE4]
  01bf0	e5933440	 ldr         r3, [r3, #0x440]
  01bf4	e3130801	 tst         r3, #1, 16
  01bf8	0a000004	 beq         |$LN3@USBPeriphe@3|
  01bfc	e59f00d8	 ldr         r0, [pc, #0xD8]
  01c00	eb000000	 bl          CeLogMsg
  01c04	e3a03001	 mov         r3, #1
  01c08	e58d3008	 str         r3, [sp, #8]
  01c0c	ea000003	 b           |$LN4@USBPeriphe@3|
  01c10		 |$LN3@USBPeriphe@3|
  01c10	e59f00c4	 ldr         r0, [pc, #0xC4]
  01c14	eb000000	 bl          NKDbgPrintfW
  01c18	e3a03000	 mov         r3, #0
  01c1c	e58d3008	 str         r3, [sp, #8]
  01c20		 |$LN4@USBPeriphe@3|
  01c20	e3a03001	 mov         r3, #1
  01c24	e58d300c	 str         r3, [sp, #0xC]
  01c28	ea000001	 b           |$LN6@USBPeriphe@3|
  01c2c		 |$LN5@USBPeriphe@3|
  01c2c	e3a03000	 mov         r3, #0
  01c30	e58d300c	 str         r3, [sp, #0xC]
  01c34		 |$LN6@USBPeriphe@3|

; 853  : 
; 854  :     /* End the session */
; 855  : #ifdef UFN_DISABLE_HIGH_SPEED
; 856  :     pUsbRegs->POWER = 0;
; 857  : #else
; 858  :     pUsbRegs->POWER = MGC_M_POWER_HSENAB;

  01c34	e59d3000	 ldr         r3, [sp]
  01c38	e2833b01	 add         r3, r3, #1, 22
  01c3c	e2832001	 add         r2, r3, #1
  01c40	e3a03020	 mov         r3, #0x20
  01c44	e5c23000	 strb        r3, [r2]

; 859  : #endif
; 860  : 
; 861  :     // For Peripheral mode of Operation, Switch OFF the VBUS
; 862  :     USBFNPDD_PowerVBUS(FALSE);

  01c48	e3a00000	 mov         r0, #0
  01c4c	eb000000	 bl          USBFNPDD_PowerVBUS

; 863  : 
; 864  :     // Disable the on-chip PHY and its PLL
; 865  :     UsbPhyPowerCtrl(pPddContext, FALSE);

  01c50	e3a01000	 mov         r1, #0
  01c54	e59d0020	 ldr         r0, [sp, #0x20]
  01c58	eb000000	 bl          UsbPhyPowerCtrl

; 866  : 
; 867  : 	// Request pads
; 868  : 	ReleaseDevicePads(OMAP_DEVICE_HSOTGUSB);

  01c5c	e3a0004f	 mov         r0, #0x4F
  01c60	eb000000	 bl          ReleaseDevicePads

; 869  : 
; 870  :     PRINTMSG(ZONE_FUNCTION, (L"-USBPeripheralDeinit\r\n"));

  01c64	e59f306c	 ldr         r3, [pc, #0x6C]
  01c68	e5933440	 ldr         r3, [r3, #0x440]
  01c6c	e3130a01	 tst         r3, #1, 20
  01c70	0a00000f	 beq         |$LN9@USBPeriphe@3|
  01c74	e59f305c	 ldr         r3, [pc, #0x5C]
  01c78	e5933440	 ldr         r3, [r3, #0x440]
  01c7c	e3130801	 tst         r3, #1, 16
  01c80	0a000004	 beq         |$LN7@USBPeriphe@3|
  01c84	e59f0048	 ldr         r0, [pc, #0x48]
  01c88	eb000000	 bl          CeLogMsg
  01c8c	e3a03001	 mov         r3, #1
  01c90	e58d3010	 str         r3, [sp, #0x10]
  01c94	ea000003	 b           |$LN8@USBPeriphe@3|
  01c98		 |$LN7@USBPeriphe@3|
  01c98	e59f0034	 ldr         r0, [pc, #0x34]
  01c9c	eb000000	 bl          NKDbgPrintfW
  01ca0	e3a03000	 mov         r3, #0
  01ca4	e58d3010	 str         r3, [sp, #0x10]
  01ca8		 |$LN8@USBPeriphe@3|
  01ca8	e3a03001	 mov         r3, #1
  01cac	e58d3014	 str         r3, [sp, #0x14]
  01cb0	ea000001	 b           |$LN10@USBPeriphe@3|
  01cb4		 |$LN9@USBPeriphe@3|
  01cb4	e3a03000	 mov         r3, #0
  01cb8	e58d3014	 str         r3, [sp, #0x14]
  01cbc		 |$LN10@USBPeriphe@3|

; 871  : 
; 872  :     return (TRUE) ;

  01cbc	e3a03001	 mov         r3, #1
  01cc0	e58d3004	 str         r3, [sp, #4]

; 873  : }

  01cc4	e59d0004	 ldr         r0, [sp, #4]
  01cc8	e28dd018	 add         sp, sp, #0x18
  01ccc	e89d6000	 ldmia       sp, {sp, lr}
  01cd0	e12fff1e	 bx          lr
  01cd4		 |$LN14@USBPeriphe@3|
  01cd4		 |$LN15@USBPeriphe@3|
  01cd4	00000000	 DCD         |??_C@_1CO@HKECFFIB@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  01cd8		 |$LN16@USBPeriphe@3|
  01cd8	00000000	 DCD         |dpCurSettings|
  01cdc		 |$LN17@USBPeriphe@3|
  01cdc	00000000	 DCD         |??_C@_1CO@KBIGAKKK@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  01ce0		 |$M47742|

			 ENDP  ; |USBPeripheralDeinit|

	EXPORT	|??_C@_1DE@KBJOIFEM@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|USBPeripheralEndSession|

  00060			 AREA	 |.pdata|, PDATA
|$T47758| DCD	|$LN9@USBPeriphe@4|
	DCD	0x40003504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@KBJOIFEM@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01ce0			 AREA	 |.text|, CODE, ARM

  01ce0		 |USBPeripheralEndSession| PROC

; 888  : {

  01ce0		 |$LN9@USBPeriphe@4|
  01ce0	e1a0c00d	 mov         r12, sp
  01ce4	e92d0001	 stmdb       sp!, {r0}
  01ce8	e92d5000	 stmdb       sp!, {r12, lr}
  01cec	e24dd010	 sub         sp, sp, #0x10
  01cf0		 |$M47755|

; 889  :     CSL_UsbRegs  *pUsbRegs = pPddContext->pUsbdRegs;

  01cf0	e59d3018	 ldr         r3, [sp, #0x18]
  01cf4	e283301c	 add         r3, r3, #0x1C
  01cf8	e5933000	 ldr         r3, [r3]
  01cfc	e58d3000	 str         r3, [sp]

; 890  : 
; 891  :     PRINTMSG(ZONE_FUNCTION, (L"+USBPeripheralPowerDown\r\n"));

  01d00	e59f30a8	 ldr         r3, [pc, #0xA8]
  01d04	e5933440	 ldr         r3, [r3, #0x440]
  01d08	e3130a01	 tst         r3, #1, 20
  01d0c	0a00000f	 beq         |$LN5@USBPeriphe@4|
  01d10	e59f3098	 ldr         r3, [pc, #0x98]
  01d14	e5933440	 ldr         r3, [r3, #0x440]
  01d18	e3130801	 tst         r3, #1, 16
  01d1c	0a000004	 beq         |$LN3@USBPeriphe@4|
  01d20	e59f0084	 ldr         r0, [pc, #0x84]
  01d24	eb000000	 bl          CeLogMsg
  01d28	e3a03001	 mov         r3, #1
  01d2c	e58d3008	 str         r3, [sp, #8]
  01d30	ea000003	 b           |$LN4@USBPeriphe@4|
  01d34		 |$LN3@USBPeriphe@4|
  01d34	e59f0070	 ldr         r0, [pc, #0x70]
  01d38	eb000000	 bl          NKDbgPrintfW
  01d3c	e3a03000	 mov         r3, #0
  01d40	e58d3008	 str         r3, [sp, #8]
  01d44		 |$LN4@USBPeriphe@4|
  01d44	e3a03001	 mov         r3, #1
  01d48	e58d300c	 str         r3, [sp, #0xC]
  01d4c	ea000001	 b           |$LN6@USBPeriphe@4|
  01d50		 |$LN5@USBPeriphe@4|
  01d50	e3a03000	 mov         r3, #0
  01d54	e58d300c	 str         r3, [sp, #0xC]
  01d58		 |$LN6@USBPeriphe@4|

; 892  : 
; 893  :     /* End the session */
; 894  : #ifdef UFN_DISABLE_HIGH_SPEED
; 895  :     pUsbRegs->POWER = 0;
; 896  : #else
; 897  :     pUsbRegs->POWER = MGC_M_POWER_HSENAB;

  01d58	e59d3000	 ldr         r3, [sp]
  01d5c	e2833b01	 add         r3, r3, #1, 22
  01d60	e2832001	 add         r2, r3, #1
  01d64	e3a03020	 mov         r3, #0x20
  01d68	e5c23000	 strb        r3, [r2]

; 898  : #endif
; 899  : 
; 900  :     /* Clear session bit */
; 901  :     pUsbRegs->DEVCTL &= ~0x01;

  01d6c	e59d3000	 ldr         r3, [sp]
  01d70	e2833e46	 add         r3, r3, #0x46, 28
  01d74	e5d33000	 ldrb        r3, [r3]
  01d78	e1a02003	 mov         r2, r3
  01d7c	e3e03001	 mvn         r3, #1
  01d80	e0021003	 and         r1, r2, r3
  01d84	e59d3000	 ldr         r3, [sp]
  01d88	e2832e46	 add         r2, r3, #0x46, 28
  01d8c	e20130ff	 and         r3, r1, #0xFF
  01d90	e5c23000	 strb        r3, [r2]

; 902  : 
; 903  :     return (TRUE) ;

  01d94	e3a03001	 mov         r3, #1
  01d98	e58d3004	 str         r3, [sp, #4]

; 904  : }

  01d9c	e59d0004	 ldr         r0, [sp, #4]
  01da0	e28dd010	 add         sp, sp, #0x10
  01da4	e89d6000	 ldmia       sp, {sp, lr}
  01da8	e12fff1e	 bx          lr
  01dac		 |$LN10@USBPeriphe@4|
  01dac		 |$LN11@USBPeriphe@4|
  01dac	00000000	 DCD         |??_C@_1DE@KBJOIFEM@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  01db0		 |$LN12@USBPeriphe@4|
  01db0	00000000	 DCD         |dpCurSettings|
  01db4		 |$M47756|

			 ENDP  ; |USBPeripheralEndSession|

	EXPORT	|??_C@_1DE@OEFILCD@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|USBPeripheralPowerDown|

  00068			 AREA	 |.pdata|, PDATA
|$T47775| DCD	|$LN13@USBPeriphe@5|
	DCD	0x40003c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@OEFILCD@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01db4			 AREA	 |.text|, CODE, ARM

  01db4		 |USBPeripheralPowerDown| PROC

; 919  : {

  01db4		 |$LN13@USBPeriphe@5|
  01db4	e1a0c00d	 mov         r12, sp
  01db8	e92d0001	 stmdb       sp!, {r0}
  01dbc	e92d5000	 stmdb       sp!, {r12, lr}
  01dc0	e24dd014	 sub         sp, sp, #0x14
  01dc4		 |$M47772|

; 920  :     PRINTMSG(ZONE_FUNCTION, (L"+USBPeripheralPowerDown\r\n"));

  01dc4	e59f30d0	 ldr         r3, [pc, #0xD0]
  01dc8	e5933440	 ldr         r3, [r3, #0x440]
  01dcc	e3130a01	 tst         r3, #1, 20
  01dd0	0a00000f	 beq         |$LN5@USBPeriphe@5|
  01dd4	e59f30c0	 ldr         r3, [pc, #0xC0]
  01dd8	e5933440	 ldr         r3, [r3, #0x440]
  01ddc	e3130801	 tst         r3, #1, 16
  01de0	0a000004	 beq         |$LN3@USBPeriphe@5|
  01de4	e59f00b4	 ldr         r0, [pc, #0xB4]
  01de8	eb000000	 bl          CeLogMsg
  01dec	e3a03001	 mov         r3, #1
  01df0	e58d3004	 str         r3, [sp, #4]
  01df4	ea000003	 b           |$LN4@USBPeriphe@5|
  01df8		 |$LN3@USBPeriphe@5|
  01df8	e59f00a0	 ldr         r0, [pc, #0xA0]
  01dfc	eb000000	 bl          NKDbgPrintfW
  01e00	e3a03000	 mov         r3, #0
  01e04	e58d3004	 str         r3, [sp, #4]
  01e08		 |$LN4@USBPeriphe@5|
  01e08	e3a03001	 mov         r3, #1
  01e0c	e58d3008	 str         r3, [sp, #8]
  01e10	ea000001	 b           |$LN6@USBPeriphe@5|
  01e14		 |$LN5@USBPeriphe@5|
  01e14	e3a03000	 mov         r3, #0
  01e18	e58d3008	 str         r3, [sp, #8]
  01e1c		 |$LN6@USBPeriphe@5|

; 921  : 
; 922  :     /* Disable the on-chip PHY and its PLL */
; 923  :     UsbPhyPowerCtrl(pPddContext, FALSE);

  01e1c	e3a01000	 mov         r1, #0
  01e20	e59d001c	 ldr         r0, [sp, #0x1C]
  01e24	eb000000	 bl          UsbPhyPowerCtrl

; 924  : 
; 925  : 	PRINTMSG(ZONE_FUNCTION, (L"-USBPeripheralPowerDown\r\n"));

  01e28	e59f306c	 ldr         r3, [pc, #0x6C]
  01e2c	e5933440	 ldr         r3, [r3, #0x440]
  01e30	e3130a01	 tst         r3, #1, 20
  01e34	0a00000f	 beq         |$LN9@USBPeriphe@5|
  01e38	e59f305c	 ldr         r3, [pc, #0x5C]
  01e3c	e5933440	 ldr         r3, [r3, #0x440]
  01e40	e3130801	 tst         r3, #1, 16
  01e44	0a000004	 beq         |$LN7@USBPeriphe@5|
  01e48	e59f0048	 ldr         r0, [pc, #0x48]
  01e4c	eb000000	 bl          CeLogMsg
  01e50	e3a03001	 mov         r3, #1
  01e54	e58d300c	 str         r3, [sp, #0xC]
  01e58	ea000003	 b           |$LN8@USBPeriphe@5|
  01e5c		 |$LN7@USBPeriphe@5|
  01e5c	e59f0034	 ldr         r0, [pc, #0x34]
  01e60	eb000000	 bl          NKDbgPrintfW
  01e64	e3a03000	 mov         r3, #0
  01e68	e58d300c	 str         r3, [sp, #0xC]
  01e6c		 |$LN8@USBPeriphe@5|
  01e6c	e3a03001	 mov         r3, #1
  01e70	e58d3010	 str         r3, [sp, #0x10]
  01e74	ea000001	 b           |$LN10@USBPeriphe@5|
  01e78		 |$LN9@USBPeriphe@5|
  01e78	e3a03000	 mov         r3, #0
  01e7c	e58d3010	 str         r3, [sp, #0x10]
  01e80		 |$LN10@USBPeriphe@5|

; 926  : 
; 927  :     return (TRUE) ;

  01e80	e3a03001	 mov         r3, #1
  01e84	e58d3000	 str         r3, [sp]

; 928  : }

  01e88	e59d0000	 ldr         r0, [sp]
  01e8c	e28dd014	 add         sp, sp, #0x14
  01e90	e89d6000	 ldmia       sp, {sp, lr}
  01e94	e12fff1e	 bx          lr
  01e98		 |$LN14@USBPeriphe@5|
  01e98		 |$LN15@USBPeriphe@5|
  01e98	00000000	 DCD         |??_C@_1DE@OEFILCD@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  01e9c		 |$LN16@USBPeriphe@5|
  01e9c	00000000	 DCD         |dpCurSettings|
  01ea0		 |$LN17@USBPeriphe@5|
  01ea0	00000000	 DCD         |??_C@_1DE@KBJOIFEM@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  01ea4		 |$M47773|

			 ENDP  ; |USBPeripheralPowerDown|

	EXPORT	|??_C@_1DA@JEFCHFJJ@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@BJPGBPFB@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|USBPeripheralPowerUp|

  00070			 AREA	 |.pdata|, PDATA
|$T47793| DCD	|$LN13@USBPeriphe@6|
	DCD	0x40006004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@JEFCHFJJ@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "U", 0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@BJPGBPFB@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "P", 0x0, "e", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "l", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "U", 0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01ea4			 AREA	 |.text|, CODE, ARM

  01ea4		 |USBPeripheralPowerUp| PROC

; 943  : {

  01ea4		 |$LN13@USBPeriphe@6|
  01ea4	e1a0c00d	 mov         r12, sp
  01ea8	e92d0001	 stmdb       sp!, {r0}
  01eac	e92d5000	 stmdb       sp!, {r12, lr}
  01eb0	e24dd018	 sub         sp, sp, #0x18
  01eb4		 |$M47790|

; 944  :     CSL_UsbRegs  *pUsbRegs = pPddContext->pUsbdRegs;

  01eb4	e59d3020	 ldr         r3, [sp, #0x20]
  01eb8	e283301c	 add         r3, r3, #0x1C
  01ebc	e5933000	 ldr         r3, [r3]
  01ec0	e58d3000	 str         r3, [sp]

; 945  : 
; 946  :     PRINTMSG(ZONE_FUNCTION, (L"+USBPeripheralPowerUp\r\n"));

  01ec4	e59f3150	 ldr         r3, [pc, #0x150]
  01ec8	e5933440	 ldr         r3, [r3, #0x440]
  01ecc	e3130a01	 tst         r3, #1, 20
  01ed0	0a00000f	 beq         |$LN5@USBPeriphe@6|
  01ed4	e59f3140	 ldr         r3, [pc, #0x140]
  01ed8	e5933440	 ldr         r3, [r3, #0x440]
  01edc	e3130801	 tst         r3, #1, 16
  01ee0	0a000004	 beq         |$LN3@USBPeriphe@6|
  01ee4	e59f0134	 ldr         r0, [pc, #0x134]
  01ee8	eb000000	 bl          CeLogMsg
  01eec	e3a03001	 mov         r3, #1
  01ef0	e58d3008	 str         r3, [sp, #8]
  01ef4	ea000003	 b           |$LN4@USBPeriphe@6|
  01ef8		 |$LN3@USBPeriphe@6|
  01ef8	e59f0120	 ldr         r0, [pc, #0x120]
  01efc	eb000000	 bl          NKDbgPrintfW
  01f00	e3a03000	 mov         r3, #0
  01f04	e58d3008	 str         r3, [sp, #8]
  01f08		 |$LN4@USBPeriphe@6|
  01f08	e3a03001	 mov         r3, #1
  01f0c	e58d300c	 str         r3, [sp, #0xC]
  01f10	ea000001	 b           |$LN6@USBPeriphe@6|
  01f14		 |$LN5@USBPeriphe@6|
  01f14	e3a03000	 mov         r3, #0
  01f18	e58d300c	 str         r3, [sp, #0xC]
  01f1c		 |$LN6@USBPeriphe@6|

; 947  : 	RETAILMSG(TRUE, (L"+USBPeripheralPowerUp\r\n"));

  01f1c	e59f00fc	 ldr         r0, [pc, #0xFC]
  01f20	eb000000	 bl          NKDbgPrintfW

; 948  : 
; 949  :     /* Start the on-chip PHY and its PLL */
; 950  :     UsbPhyPowerCtrl(pPddContext, TRUE);

  01f24	e3a01001	 mov         r1, #1
  01f28	e59d0020	 ldr         r0, [sp, #0x20]
  01f2c	eb000000	 bl          UsbPhyPowerCtrl

; 951  : 
; 952  : #ifndef UFN_DISABLE_HIGH_SPEED
; 953  :     /* Enable high speed */
; 954  :     pUsbRegs->POWER = MGC_M_POWER_HSENAB;

  01f30	e59d3000	 ldr         r3, [sp]
  01f34	e2833b01	 add         r3, r3, #1, 22
  01f38	e2832001	 add         r2, r3, #1
  01f3c	e3a03020	 mov         r3, #0x20
  01f40	e5c23000	 strb        r3, [r2]

; 955  : #endif
; 956  : 
; 957  :     /* Configure the Controller UINT BIT First */
; 958  :     pUsbRegs->CTRLR &= ~BIT3;

  01f44	e59d3000	 ldr         r3, [sp]
  01f48	e2833004	 add         r3, r3, #4
  01f4c	e5932000	 ldr         r2, [r3]
  01f50	e3e03008	 mvn         r3, #8
  01f54	e0022003	 and         r2, r2, r3
  01f58	e59d3000	 ldr         r3, [sp]
  01f5c	e2833004	 add         r3, r3, #4
  01f60	e5832000	 str         r2, [r3]

; 959  : 
; 960  :     pUsbRegs->TESTMODE = 0;

  01f64	e59d3000	 ldr         r3, [sp]
  01f68	e2833b01	 add         r3, r3, #1, 22
  01f6c	e283200f	 add         r2, r3, #0xF
  01f70	e3a03000	 mov         r3, #0
  01f74	e5c23000	 strb        r3, [r2]

; 961  : 
; 962  :     /* Initial Function Address set to zero */
; 963  :     pUsbRegs->FADDR = 0;

  01f78	e59d3000	 ldr         r3, [sp]
  01f7c	e2832b01	 add         r2, r3, #1, 22
  01f80	e3a03000	 mov         r3, #0
  01f84	e5c23000	 strb        r3, [r2]

; 964  :     
; 965  :     /* Set session bit */
; 966  :     pUsbRegs->DEVCTL |= 0x01;

  01f88	e59d3000	 ldr         r3, [sp]
  01f8c	e2833e46	 add         r3, r3, #0x46, 28
  01f90	e5d33000	 ldrb        r3, [r3]
  01f94	e3831001	 orr         r1, r3, #1
  01f98	e59d3000	 ldr         r3, [sp]
  01f9c	e2832e46	 add         r2, r3, #0x46, 28
  01fa0	e20130ff	 and         r3, r1, #0xFF
  01fa4	e5c23000	 strb        r3, [r2]

; 967  : 
; 968  :     PRINTMSG(ZONE_FUNCTION, (L"-USBPeripheralPowerUp\r\n"));

  01fa8	e59f306c	 ldr         r3, [pc, #0x6C]
  01fac	e5933440	 ldr         r3, [r3, #0x440]
  01fb0	e3130a01	 tst         r3, #1, 20
  01fb4	0a00000f	 beq         |$LN9@USBPeriphe@6|
  01fb8	e59f305c	 ldr         r3, [pc, #0x5C]
  01fbc	e5933440	 ldr         r3, [r3, #0x440]
  01fc0	e3130801	 tst         r3, #1, 16
  01fc4	0a000004	 beq         |$LN7@USBPeriphe@6|
  01fc8	e59f0048	 ldr         r0, [pc, #0x48]
  01fcc	eb000000	 bl          CeLogMsg
  01fd0	e3a03001	 mov         r3, #1
  01fd4	e58d3010	 str         r3, [sp, #0x10]
  01fd8	ea000003	 b           |$LN8@USBPeriphe@6|
  01fdc		 |$LN7@USBPeriphe@6|
  01fdc	e59f0034	 ldr         r0, [pc, #0x34]
  01fe0	eb000000	 bl          NKDbgPrintfW
  01fe4	e3a03000	 mov         r3, #0
  01fe8	e58d3010	 str         r3, [sp, #0x10]
  01fec		 |$LN8@USBPeriphe@6|
  01fec	e3a03001	 mov         r3, #1
  01ff0	e58d3014	 str         r3, [sp, #0x14]
  01ff4	ea000001	 b           |$LN10@USBPeriphe@6|
  01ff8		 |$LN9@USBPeriphe@6|
  01ff8	e3a03000	 mov         r3, #0
  01ffc	e58d3014	 str         r3, [sp, #0x14]
  02000		 |$LN10@USBPeriphe@6|

; 969  : 
; 970  :     return (TRUE) ;

  02000	e3a03001	 mov         r3, #1
  02004	e58d3004	 str         r3, [sp, #4]

; 971  : }

  02008	e59d0004	 ldr         r0, [sp, #4]
  0200c	e28dd018	 add         sp, sp, #0x18
  02010	e89d6000	 ldmia       sp, {sp, lr}
  02014	e12fff1e	 bx          lr
  02018		 |$LN14@USBPeriphe@6|
  02018		 |$LN15@USBPeriphe@6|
  02018	00000000	 DCD         |??_C@_1DA@JEFCHFJJ@?$AA?9?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  0201c		 |$LN16@USBPeriphe@6|
  0201c	00000000	 DCD         |dpCurSettings|
  02020		 |$LN17@USBPeriphe@6|
  02020	00000000	 DCD         |??_C@_1DA@BJPGBPFB@?$AA?$CL?$AAU?$AAS?$AAB?$AAP?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  02024		 |$M47791|

			 ENDP  ; |USBPeripheralPowerUp|

	END
