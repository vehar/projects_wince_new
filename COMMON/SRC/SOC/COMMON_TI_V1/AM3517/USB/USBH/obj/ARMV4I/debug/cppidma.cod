; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\AM3517\USB\USBH\cppidma.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1EC@CKFGNFGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@DIIKGLIP@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAf?$AAr?$AAa?$AAm?$AAe?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AA?5?$AAa?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@EIGIDAKC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@KIDFAHAB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAs?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|?PvCppiRegs@CCppiDmaController@@IAAPAUCSL_CppiRegs@@XZ| ; CCppiDmaController::PvCppiRegs
	EXPORT	|?PvUsbRegs@CCppiDmaController@@IAAPAUCSL_UsbRegs@@XZ| ; CCppiDmaController::PvUsbRegs
	EXPORT	|??_C@_1FE@OKNDOPEG@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_7CCppiDmaChannel@@6B@| [ DATA ]	; CCppiDmaChannel::`vftable'
	EXPORT	|??0CCppiDmaChannel@@QAA@PAVCCppiDmaController@@EP6AXPAV0@IIIIPAX2@Z@Z| ; CCppiDmaChannel::CCppiDmaChannel
	IMPORT	|LocalAlloc|
	IMPORT	|HalAllocateCommonBuffer|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|dpCurSettings|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|??_ECCppiDmaChannel@@UAAPAXI@Z|, WEAK |??_GCCppiDmaChannel@@UAAPAXI@Z| ; CCppiDmaChannel::`vector deleting destructor', CCppiDmaChannel::`scalar deleting destructor'
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$T40348| DCD	|$LN25@CCppiDmaCh|
	DCD	0x40018604
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@CKFGNFGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "h", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@DIIKGLIP@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAf?$AAr?$AAa?$AAm?$AAe?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AA?5?$AAa?$AAr@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n"
	DCB	0x0, "g", 0x0, "t", 0x0, "h", 0x0, "s", 0x0, " ", 0x0, "a"
	DCB	0x0, "r", 0x0, "r", 0x0, "a", 0x0, "y", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@EIGIDAKC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KIDFAHAB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAs?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "A", 0x0, "M", 0x0, "3", 0x0, "5", 0x0, "1", 0x0, "7"
	DCB	0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "\\", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "H", 0x0, "\\", 0x0, ".", 0x0, "\\"
	DCB	0x0, "c", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "d", 0x0, "m"
	DCB	0x0, "a", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OKNDOPEG@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CCppiDmaChannel@@6B@| DCD |??_ECCppiDmaChannel@@UAAPAXI@Z| ; CCppiDmaChannel::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CCppiDmaChannel@@QAA@PAVCCppiDmaController@@EP6AXPAV0@IIIIPAX2@Z@Z| PROC ; CCppiDmaChannel::CCppiDmaChannel

; 48   : {

  00000		 |$LN25@CCppiDmaCh|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd04c	 sub         sp, sp, #0x4C
  00010		 |$M40345|
  00010	e59f25fc	 ldr         r2, [pc, #0x5FC]
  00014	e59d3054	 ldr         r3, [sp, #0x54]
  00018	e5832000	 str         r2, [r3]

; 49   :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 50   :         (L"+CCppiDmaChannel: 0x%08x, EP %u, 0x%08x\r\n",
; 51   :         pController,
; 52   :         epNum,
; 53   :         pCallback));

  0001c	e59d3060	 ldr         r3, [sp, #0x60]
  00020	e5dd205c	 ldrb        r2, [sp, #0x5C]
  00024	e59d1058	 ldr         r1, [sp, #0x58]
  00028	e59f05e0	 ldr         r0, [pc, #0x5E0]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e3a03001	 mov         r3, #1
  00034	e58d3010	 str         r3, [sp, #0x10]
  00038	ea000001	 b           |$LN8@CCppiDmaCh|
  0003c	e3a03000	 mov         r3, #0
  00040	e58d3010	 str         r3, [sp, #0x10]
  00044		 |$LN8@CCppiDmaCh|

; 54   : 
; 55   :     if ((pController == NULL) ||
; 56   :         (pController->PvUsbRegs() == NULL) ||
; 57   :         (pController->PvCppiRegs() == NULL) ||
; 58   :         (epNum == 0))

  00044	e59d3058	 ldr         r3, [sp, #0x58]
  00048	e3530000	 cmp         r3, #0
  0004c	0a00000e	 beq         |$LN3@CCppiDmaCh|
  00050	e59d0058	 ldr         r0, [sp, #0x58]
  00054	eb000000	 bl          |?PvUsbRegs@CCppiDmaController@@IAAPAUCSL_UsbRegs@@XZ|
  00058	e58d0014	 str         r0, [sp, #0x14]
  0005c	e59d3014	 ldr         r3, [sp, #0x14]
  00060	e3530000	 cmp         r3, #0
  00064	0a000008	 beq         |$LN3@CCppiDmaCh|
  00068	e59d0058	 ldr         r0, [sp, #0x58]
  0006c	eb000000	 bl          |?PvCppiRegs@CCppiDmaController@@IAAPAUCSL_CppiRegs@@XZ|
  00070	e58d0018	 str         r0, [sp, #0x18]
  00074	e59d3018	 ldr         r3, [sp, #0x18]
  00078	e3530000	 cmp         r3, #0
  0007c	0a000002	 beq         |$LN3@CCppiDmaCh|
  00080	e5dd305c	 ldrb        r3, [sp, #0x5C]
  00084	e3530000	 cmp         r3, #0
  00088	1a000017	 bne         |$LN4@CCppiDmaCh|
  0008c		 |$LN3@CCppiDmaCh|

; 59   :     {
; 60   :         ERRORMSG(1, (L"Invalid args!\r\n"));

  0008c	e3a0203c	 mov         r2, #0x3C
  00090	e59f1564	 ldr         r1, [pc, #0x564]
  00094	e59f055c	 ldr         r0, [pc, #0x55C]
  00098	eb000000	 bl          NKDbgPrintfW
  0009c	e59f0568	 ldr         r0, [pc, #0x568]
  000a0	eb000000	 bl          NKDbgPrintfW
  000a4	e3a03001	 mov         r3, #1
  000a8	e58d301c	 str         r3, [sp, #0x1C]
  000ac	ea000001	 b           |$LN10@CCppiDmaCh|
  000b0	e3a03000	 mov         r3, #0
  000b4	e58d301c	 str         r3, [sp, #0x1C]
  000b8		 |$LN10@CCppiDmaCh|

; 61   :         DEBUGCHK(FALSE);

  000b8	ea000002	 b           |$LN11@CCppiDmaCh|
  000bc	e3a03001	 mov         r3, #1
  000c0	e58d3020	 str         r3, [sp, #0x20]
  000c4	ea000007	 b           |$LN12@CCppiDmaCh|
  000c8		 |$LN11@CCppiDmaCh|
  000c8	e3a0303d	 mov         r3, #0x3D
  000cc	e59f2528	 ldr         r2, [pc, #0x528]
  000d0	e59f152c	 ldr         r1, [pc, #0x52C]
  000d4	e59f0524	 ldr         r0, [pc, #0x524]
  000d8	eb000000	 bl          NKDbgPrintfW
  000dc	e6000010	 __debugbreak_ce
  000e0	e3a03000	 mov         r3, #0
  000e4	e58d3020	 str         r3, [sp, #0x20]
  000e8		 |$LN12@CCppiDmaCh|

; 62   :         return;

  000e8	ea00013a	 b           |$LN5@CCppiDmaCh|
  000ec		 |$LN4@CCppiDmaCh|

; 63   :     }
; 64   : 
; 65   :     InitializeCriticalSection(&m_csLock);

  000ec	e59d3054	 ldr         r3, [sp, #0x54]
  000f0	e2830044	 add         r0, r3, #0x44
  000f4	eb000000	 bl          InitializeCriticalSection

; 66   : 
; 67   :     // Save channel info
; 68   :     m_nRefCount = 0;

  000f8	e59d3054	 ldr         r3, [sp, #0x54]
  000fc	e2832008	 add         r2, r3, #8
  00100	e3a03000	 mov         r3, #0
  00104	e5823000	 str         r3, [r2]

; 69   :     m_pController = pController;

  00108	e59d3054	 ldr         r3, [sp, #0x54]
  0010c	e283200c	 add         r2, r3, #0xC
  00110	e59d3058	 ldr         r3, [sp, #0x58]
  00114	e5823000	 str         r3, [r2]

; 70   :     m_pUsbRegs = pController->PvUsbRegs();

  00118	e59d0058	 ldr         r0, [sp, #0x58]
  0011c	eb000000	 bl          |?PvUsbRegs@CCppiDmaController@@IAAPAUCSL_UsbRegs@@XZ|
  00120	e58d0024	 str         r0, [sp, #0x24]
  00124	e59d3054	 ldr         r3, [sp, #0x54]
  00128	e2832010	 add         r2, r3, #0x10
  0012c	e59d3024	 ldr         r3, [sp, #0x24]
  00130	e5823000	 str         r3, [r2]

; 71   :     m_pCppiRegs = pController->PvCppiRegs();

  00134	e59d0058	 ldr         r0, [sp, #0x58]
  00138	eb000000	 bl          |?PvCppiRegs@CCppiDmaController@@IAAPAUCSL_CppiRegs@@XZ|
  0013c	e58d0028	 str         r0, [sp, #0x28]
  00140	e59d3054	 ldr         r3, [sp, #0x54]
  00144	e2832018	 add         r2, r3, #0x18
  00148	e59d3028	 ldr         r3, [sp, #0x28]
  0014c	e5823000	 str         r3, [r2]

; 72   :     m_nCppiChannelOffset = pController->m_nCppiChannelOffset;

  00150	e59d3058	 ldr         r3, [sp, #0x58]
  00154	e2831028	 add         r1, r3, #0x28
  00158	e59d3054	 ldr         r3, [sp, #0x54]
  0015c	e2832020	 add         r2, r3, #0x20
  00160	e5d13000	 ldrb        r3, [r1]
  00164	e5c23000	 strb        r3, [r2]

; 73   :     m_pvBuffer = NULL;

  00168	e59d3054	 ldr         r3, [sp, #0x54]
  0016c	e2832024	 add         r2, r3, #0x24
  00170	e3a03000	 mov         r3, #0
  00174	e5823000	 str         r3, [r2]

; 74   :     m_paBuffer.QuadPart = 0;

  00178	e59d3054	 ldr         r3, [sp, #0x54]
  0017c	e2833028	 add         r3, r3, #0x28
  00180	e58d302c	 str         r3, [sp, #0x2C]
  00184	e59d202c	 ldr         r2, [sp, #0x2C]
  00188	e3a03000	 mov         r3, #0
  0018c	e5823000	 str         r3, [r2]
  00190	e59d202c	 ldr         r2, [sp, #0x2C]
  00194	e3a03000	 mov         r3, #0
  00198	e5823004	 str         r3, [r2, #4]

; 75   :     m_cbBuffer = CPPI_MAX_BUFFER;

  0019c	e59d3054	 ldr         r3, [sp, #0x54]
  001a0	e2832030	 add         r2, r3, #0x30
  001a4	e3a03801	 mov         r3, #1, 16
  001a8	e5823000	 str         r3, [r2]

; 76   :     m_fIsTeardownPending = FALSE;

  001ac	e59d3054	 ldr         r3, [sp, #0x54]
  001b0	e2832038	 add         r2, r3, #0x38
  001b4	e3a03000	 mov         r3, #0
  001b8	e5823000	 str         r3, [r2]

; 77   :     m_fIsOut = FALSE;

  001bc	e59d3054	 ldr         r3, [sp, #0x54]
  001c0	e2832034	 add         r2, r3, #0x34
  001c4	e3a03000	 mov         r3, #0
  001c8	e5823000	 str         r3, [r2]

; 78   :     m_chNum = epNum - 1;

  001cc	e5dd305c	 ldrb        r3, [sp, #0x5C]
  001d0	e2433001	 sub         r3, r3, #1
  001d4	e20320ff	 and         r2, r3, #0xFF
  001d8	e59d3054	 ldr         r3, [sp, #0x54]
  001dc	e283303c	 add         r3, r3, #0x3C
  001e0	e5c32000	 strb        r2, [r3]

; 79   :     m_epNum = epNum;

  001e4	e59d3054	 ldr         r3, [sp, #0x54]
  001e8	e283203d	 add         r2, r3, #0x3D
  001ec	e5dd305c	 ldrb        r3, [sp, #0x5C]
  001f0	e5c23000	 strb        r3, [r2]

; 80   :     m_qNum = 0;

  001f4	e59d3054	 ldr         r3, [sp, #0x54]
  001f8	e283203e	 add         r2, r3, #0x3E
  001fc	e3a03000	 mov         r3, #0
  00200	e5c23000	 strb        r3, [r2]

; 81   :     m_pCallback = pCallback;

  00204	e59d3054	 ldr         r3, [sp, #0x54]
  00208	e2832040	 add         r2, r3, #0x40
  0020c	e59d3060	 ldr         r3, [sp, #0x60]
  00210	e5823000	 str         r3, [r2]

; 82   :     m_pUsbEpcsrRegs = &m_pUsbRegs->EPCSR[m_epNum];

  00214	e59d3054	 ldr         r3, [sp, #0x54]
  00218	e2833010	 add         r3, r3, #0x10
  0021c	e5933000	 ldr         r3, [r3]
  00220	e2831c05	 add         r1, r3, #5, 24
  00224	e59d3054	 ldr         r3, [sp, #0x54]
  00228	e283303d	 add         r3, r3, #0x3D
  0022c	e5d33000	 ldrb        r3, [r3]
  00230	e1a02003	 mov         r2, r3
  00234	e3a03010	 mov         r3, #0x10
  00238	e0030392	 mul         r3, r2, r3
  0023c	e0812003	 add         r2, r1, r3
  00240	e59d3054	 ldr         r3, [sp, #0x54]
  00244	e2833014	 add         r3, r3, #0x14
  00248	e5832000	 str         r2, [r3]

; 83   :     m_pCppiChannelRegs = &m_pCppiRegs->CDMACHANNEL[m_chNum + m_nCppiChannelOffset];

  0024c	e59d3054	 ldr         r3, [sp, #0x54]
  00250	e2833018	 add         r3, r3, #0x18
  00254	e5933000	 ldr         r3, [r3]
  00258	e2831b02	 add         r1, r3, #2, 22
  0025c	e59d3054	 ldr         r3, [sp, #0x54]
  00260	e283303c	 add         r3, r3, #0x3C
  00264	e5d33000	 ldrb        r3, [r3]
  00268	e1a02003	 mov         r2, r3
  0026c	e59d3054	 ldr         r3, [sp, #0x54]
  00270	e2833020	 add         r3, r3, #0x20
  00274	e5d33000	 ldrb        r3, [r3]
  00278	e0822003	 add         r2, r2, r3
  0027c	e3a03020	 mov         r3, #0x20
  00280	e0030392	 mul         r3, r2, r3
  00284	e0812003	 add         r2, r1, r3
  00288	e59d3054	 ldr         r3, [sp, #0x54]
  0028c	e283301c	 add         r3, r3, #0x1C
  00290	e5832000	 str         r2, [r3]

; 84   : 
; 85   :     // Defaults
; 86   :     m_epAddr = 0;

  00294	e59d3054	 ldr         r3, [sp, #0x54]
  00298	e2832060	 add         r2, r3, #0x60
  0029c	e3a03000	 mov         r3, #0
  002a0	e5c23000	 strb        r3, [r2]

; 87   :     m_fnAddr = 0;

  002a4	e59d3054	 ldr         r3, [sp, #0x54]
  002a8	e2832061	 add         r2, r3, #0x61
  002ac	e3a03000	 mov         r3, #0
  002b0	e5c23000	 strb        r3, [r2]

; 88   :     m_epType = 0;

  002b4	e59d3054	 ldr         r3, [sp, #0x54]
  002b8	e2832062	 add         r2, r3, #0x62
  002bc	e3a03000	 mov         r3, #0
  002c0	e5c23000	 strb        r3, [r2]

; 89   :     m_epMaxPkt = 0;

  002c4	e59d3054	 ldr         r3, [sp, #0x54]
  002c8	e2832064	 add         r2, r3, #0x64
  002cc	e3a03000	 mov         r3, #0
  002d0	e1c230b0	 strh        r3, [r2]

; 90   :     m_nMaxBD = 0;

  002d4	e59d3054	 ldr         r3, [sp, #0x54]
  002d8	e2832068	 add         r2, r3, #0x68
  002dc	e3a03000	 mov         r3, #0
  002e0	e5823000	 str         r3, [r2]

; 91   :     m_pvTransferBuffer = NULL;

  002e4	e59d3054	 ldr         r3, [sp, #0x54]
  002e8	e283206c	 add         r2, r3, #0x6C
  002ec	e3a03000	 mov         r3, #0
  002f0	e5823000	 str         r3, [r2]

; 92   :     m_paTransferBuffer = 0;

  002f4	e59d3054	 ldr         r3, [sp, #0x54]
  002f8	e2832070	 add         r2, r3, #0x70
  002fc	e3a03000	 mov         r3, #0
  00300	e5823000	 str         r3, [r2]

; 93   :     m_nTransferFrames = 0;

  00304	e59d3054	 ldr         r3, [sp, #0x54]
  00308	e2832074	 add         r2, r3, #0x74
  0030c	e3a03000	 mov         r3, #0
  00310	e5823000	 str         r3, [r2]

; 94   :     m_pTransferFrameLengths = NULL;

  00314	e59d3054	 ldr         r3, [sp, #0x54]
  00318	e2832078	 add         r2, r3, #0x78
  0031c	e3a03000	 mov         r3, #0
  00320	e5823000	 str         r3, [r2]

; 95   :     m_pTransferFrameLengthsActual = NULL;

  00324	e59d3054	 ldr         r3, [sp, #0x54]
  00328	e283207c	 add         r2, r3, #0x7C
  0032c	e3a03000	 mov         r3, #0
  00330	e5823000	 str         r3, [r2]

; 96   :     m_pdwIsochErrors = NULL;

  00334	e59d3054	 ldr         r3, [sp, #0x54]
  00338	e2832080	 add         r2, r3, #0x80
  0033c	e3a03000	 mov         r3, #0
  00340	e5823000	 str         r3, [r2]

; 97   :     m_pdwIsochLengths = NULL;

  00344	e59d3054	 ldr         r3, [sp, #0x54]
  00348	e2832084	 add         r2, r3, #0x84
  0034c	e3a03000	 mov         r3, #0
  00350	e5823000	 str         r3, [r2]

; 98   :     m_nTransferLength = 0;

  00354	e59d3054	 ldr         r3, [sp, #0x54]
  00358	e2832088	 add         r2, r3, #0x88
  0035c	e3a03000	 mov         r3, #0
  00360	e5823000	 str         r3, [r2]

; 99   :     m_nTransferOptions = 0;

  00364	e59d3054	 ldr         r3, [sp, #0x54]
  00368	e283208c	 add         r2, r3, #0x8C
  0036c	e3a03000	 mov         r3, #0
  00370	e5823000	 str         r3, [r2]

; 100  :     m_pTransferCookie1 = NULL;

  00374	e59d3054	 ldr         r3, [sp, #0x54]
  00378	e2832090	 add         r2, r3, #0x90
  0037c	e3a03000	 mov         r3, #0
  00380	e5823000	 str         r3, [r2]

; 101  :     m_pTransferCookie2 = NULL;

  00384	e59d3054	 ldr         r3, [sp, #0x54]
  00388	e2832094	 add         r2, r3, #0x94
  0038c	e3a03000	 mov         r3, #0
  00390	e5823000	 str         r3, [r2]

; 102  :     m_nTransferComplete = 0;

  00394	e59d3054	 ldr         r3, [sp, #0x54]
  00398	e2832098	 add         r2, r3, #0x98
  0039c	e3a03000	 mov         r3, #0
  003a0	e5823000	 str         r3, [r2]

; 103  :     m_nTransferFramesComplete = 0;

  003a4	e59d3054	 ldr         r3, [sp, #0x54]
  003a8	e283209c	 add         r2, r3, #0x9C
  003ac	e3a03000	 mov         r3, #0
  003b0	e5823000	 str         r3, [r2]

; 104  :     m_nSegmentPending = 0;

  003b4	e59d3054	 ldr         r3, [sp, #0x54]
  003b8	e28320a0	 add         r2, r3, #0xA0
  003bc	e3a03000	 mov         r3, #0
  003c0	e5823000	 str         r3, [r2]

; 105  :     m_nSegmentFramesPending = 0;

  003c4	e59d3054	 ldr         r3, [sp, #0x54]
  003c8	e28320a4	 add         r2, r3, #0xA4
  003cc	e3a03000	 mov         r3, #0
  003d0	e5823000	 str         r3, [r2]

; 106  :     m_nSegmentFramesComplete = 0;

  003d4	e59d3054	 ldr         r3, [sp, #0x54]
  003d8	e28320a8	 add         r2, r3, #0xA8
  003dc	e3a03000	 mov         r3, #0
  003e0	e5823000	 str         r3, [r2]

; 107  :     m_nSegmentComplete = 0;

  003e4	e59d3054	 ldr         r3, [sp, #0x54]
  003e8	e28320ac	 add         r2, r3, #0xAC
  003ec	e3a03000	 mov         r3, #0
  003f0	e5823000	 str         r3, [r2]

; 108  :     m_fIsRndisMode = FALSE;

  003f4	e59d3054	 ldr         r3, [sp, #0x54]
  003f8	e28320b0	 add         r2, r3, #0xB0
  003fc	e3a03000	 mov         r3, #0
  00400	e5823000	 str         r3, [r2]

; 109  :     m_fIsCancelPending = FALSE;

  00404	e59d3054	 ldr         r3, [sp, #0x54]
  00408	e2832058	 add         r2, r3, #0x58
  0040c	e3a03000	 mov         r3, #0
  00410	e5823000	 str         r3, [r2]

; 110  :     m_nCancelStatus = USB_CANCELED_ERROR;

  00414	e59d3054	 ldr         r3, [sp, #0x54]
  00418	e283205c	 add         r2, r3, #0x5C
  0041c	e3a03c01	 mov         r3, #1, 24
  00420	e3833001	 orr         r3, r3, #1
  00424	e5823000	 str         r3, [r2]

; 111  : 
; 112  :     // Allocate DMA buffer
; 113  :     DMA_ADAPTER_OBJECT Adapter;
; 114  :     Adapter.ObjectSize = sizeof(DMA_ADAPTER_OBJECT);

  00428	e3a0300c	 mov         r3, #0xC
  0042c	e1cd30b0	 strh        r3, [sp]

; 115  :     Adapter.InterfaceType = Internal;

  00430	e3a03000	 mov         r3, #0
  00434	e58d3004	 str         r3, [sp, #4]

; 116  :     Adapter.BusNumber = 0;

  00438	e3a03000	 mov         r3, #0
  0043c	e58d3008	 str         r3, [sp, #8]

; 117  : 
; 118  :     m_pvBuffer = (UINT8*)HalAllocateCommonBuffer(&Adapter, m_cbBuffer, &m_paBuffer, FALSE);

  00440	e3a03000	 mov         r3, #0
  00444	e59d2054	 ldr         r2, [sp, #0x54]
  00448	e2822028	 add         r2, r2, #0x28
  0044c	e59d1054	 ldr         r1, [sp, #0x54]
  00450	e2811030	 add         r1, r1, #0x30
  00454	e5911000	 ldr         r1, [r1]
  00458	e28d0000	 add         r0, sp, #0
  0045c	eb000000	 bl          HalAllocateCommonBuffer
  00460	e58d0030	 str         r0, [sp, #0x30]
  00464	e59d3054	 ldr         r3, [sp, #0x54]
  00468	e2832024	 add         r2, r3, #0x24
  0046c	e59d3030	 ldr         r3, [sp, #0x30]
  00470	e5823000	 str         r3, [r2]

; 119  :     DEBUGCHK(m_pvBuffer != NULL);

  00474	e59d3054	 ldr         r3, [sp, #0x54]
  00478	e2833024	 add         r3, r3, #0x24
  0047c	e5933000	 ldr         r3, [r3]
  00480	e3530000	 cmp         r3, #0
  00484	0a000002	 beq         |$LN13@CCppiDmaCh|
  00488	e3a03001	 mov         r3, #1
  0048c	e58d3034	 str         r3, [sp, #0x34]
  00490	ea000007	 b           |$LN14@CCppiDmaCh|
  00494		 |$LN13@CCppiDmaCh|
  00494	e3a03077	 mov         r3, #0x77
  00498	e59f215c	 ldr         r2, [pc, #0x15C]
  0049c	e59f1160	 ldr         r1, [pc, #0x160]
  004a0	e59f0158	 ldr         r0, [pc, #0x158]
  004a4	eb000000	 bl          NKDbgPrintfW
  004a8	e6000010	 __debugbreak_ce
  004ac	e3a03000	 mov         r3, #0
  004b0	e58d3034	 str         r3, [sp, #0x34]
  004b4		 |$LN14@CCppiDmaCh|

; 120  :     if (!m_pvBuffer)

  004b4	e59d3054	 ldr         r3, [sp, #0x54]
  004b8	e2833024	 add         r3, r3, #0x24
  004bc	e5933000	 ldr         r3, [r3]
  004c0	e3530000	 cmp         r3, #0
  004c4	1a00000b	 bne         |$LN2@CCppiDmaCh|

; 121  :     {
; 122  :         ERRORMSG(1, (L"Failed to allocate buffer!\r\n"));

  004c8	e3a0207a	 mov         r2, #0x7A
  004cc	e59f1128	 ldr         r1, [pc, #0x128]
  004d0	e59f0120	 ldr         r0, [pc, #0x120]
  004d4	eb000000	 bl          NKDbgPrintfW
  004d8	e59f0128	 ldr         r0, [pc, #0x128]
  004dc	eb000000	 bl          NKDbgPrintfW
  004e0	e3a03001	 mov         r3, #1
  004e4	e58d3038	 str         r3, [sp, #0x38]
  004e8	ea000001	 b           |$LN16@CCppiDmaCh|
  004ec	e3a03000	 mov         r3, #0
  004f0	e58d3038	 str         r3, [sp, #0x38]
  004f4		 |$LN16@CCppiDmaCh|

; 123  :         return;

  004f4	ea000037	 b           |$LN5@CCppiDmaCh|
  004f8		 |$LN2@CCppiDmaCh|

; 124  :     }
; 125  : 
; 126  :     // Allocate frame lengths array
; 127  :     m_pTransferFrameLengthsActual = (UINT32*)LocalAlloc(LPTR, CPPI_MAX_DESCR * sizeof(UINT32));

  004f8	e3a01b01	 mov         r1, #1, 22
  004fc	e3a00040	 mov         r0, #0x40
  00500	eb000000	 bl          LocalAlloc
  00504	e58d003c	 str         r0, [sp, #0x3C]
  00508	e59d3054	 ldr         r3, [sp, #0x54]
  0050c	e283207c	 add         r2, r3, #0x7C
  00510	e59d303c	 ldr         r3, [sp, #0x3C]
  00514	e5823000	 str         r3, [r2]

; 128  :     DEBUGCHK(m_pTransferFrameLengthsActual != NULL);

  00518	e59d3054	 ldr         r3, [sp, #0x54]
  0051c	e283307c	 add         r3, r3, #0x7C
  00520	e5933000	 ldr         r3, [r3]
  00524	e3530000	 cmp         r3, #0
  00528	0a000002	 beq         |$LN17@CCppiDmaCh|
  0052c	e3a03001	 mov         r3, #1
  00530	e58d3040	 str         r3, [sp, #0x40]
  00534	ea000007	 b           |$LN18@CCppiDmaCh|
  00538		 |$LN17@CCppiDmaCh|
  00538	e3a03080	 mov         r3, #0x80
  0053c	e59f20b8	 ldr         r2, [pc, #0xB8]
  00540	e59f10bc	 ldr         r1, [pc, #0xBC]
  00544	e59f00b4	 ldr         r0, [pc, #0xB4]
  00548	eb000000	 bl          NKDbgPrintfW
  0054c	e6000010	 __debugbreak_ce
  00550	e3a03000	 mov         r3, #0
  00554	e58d3040	 str         r3, [sp, #0x40]
  00558		 |$LN18@CCppiDmaCh|

; 129  :     if (!m_pTransferFrameLengthsActual)

  00558	e59d3054	 ldr         r3, [sp, #0x54]
  0055c	e283307c	 add         r3, r3, #0x7C
  00560	e5933000	 ldr         r3, [r3]
  00564	e3530000	 cmp         r3, #0
  00568	1a00000b	 bne         |$LN1@CCppiDmaCh|

; 130  :     {
; 131  :         ERRORMSG(1, (L"Failed to alloc frame lengths array!\r\n"));

  0056c	e3a02083	 mov         r2, #0x83
  00570	e59f1084	 ldr         r1, [pc, #0x84]
  00574	e59f007c	 ldr         r0, [pc, #0x7C]
  00578	eb000000	 bl          NKDbgPrintfW
  0057c	e59f0070	 ldr         r0, [pc, #0x70]
  00580	eb000000	 bl          NKDbgPrintfW
  00584	e3a03001	 mov         r3, #1
  00588	e58d3044	 str         r3, [sp, #0x44]
  0058c	ea000001	 b           |$LN20@CCppiDmaCh|
  00590	e3a03000	 mov         r3, #0
  00594	e58d3044	 str         r3, [sp, #0x44]
  00598		 |$LN20@CCppiDmaCh|

; 132  :         return;

  00598	ea00000e	 b           |$LN5@CCppiDmaCh|
  0059c		 |$LN1@CCppiDmaCh|

; 133  :     }
; 134  : 
; 135  :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 136  :         (L"-CCppiDmaChannel: Ch %u, EP %u\r\n",
; 137  :         m_chNum,
; 138  :         m_epNum));

  0059c	e59d3054	 ldr         r3, [sp, #0x54]
  005a0	e283303d	 add         r3, r3, #0x3D
  005a4	e5d33000	 ldrb        r3, [r3]
  005a8	e1a02003	 mov         r2, r3
  005ac	e59d3054	 ldr         r3, [sp, #0x54]
  005b0	e283303c	 add         r3, r3, #0x3C
  005b4	e5d33000	 ldrb        r3, [r3]
  005b8	e1a01003	 mov         r1, r3
  005bc	e59f002c	 ldr         r0, [pc, #0x2C]
  005c0	eb000000	 bl          NKDbgPrintfW
  005c4	e3a03001	 mov         r3, #1
  005c8	e58d3048	 str         r3, [sp, #0x48]
  005cc	ea000001	 b           |$LN22@CCppiDmaCh|
  005d0	e3a03000	 mov         r3, #0
  005d4	e58d3048	 str         r3, [sp, #0x48]
  005d8		 |$LN22@CCppiDmaCh|
  005d8		 |$LN5@CCppiDmaCh|

; 139  : }

  005d8	e59d3054	 ldr         r3, [sp, #0x54]
  005dc	e58d300c	 str         r3, [sp, #0xC]
  005e0	e59d000c	 ldr         r0, [sp, #0xC]
  005e4	e28dd04c	 add         sp, sp, #0x4C
  005e8	e89d6000	 ldmia       sp, {sp, lr}
  005ec	e12fff1e	 bx          lr
  005f0		 |$LN26@CCppiDmaCh|
  005f0		 |$LN27@CCppiDmaCh|
  005f0	00000000	 DCD         |??_C@_1EC@CKFGNFGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6@|
  005f4		 |$LN28@CCppiDmaCh|
  005f4	00000000	 DCD         |??_C@_1EO@DIIKGLIP@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAf?$AAr?$AAa?$AAm?$AAe?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AA?5?$AAa?$AAr@|
  005f8		 |$LN29@CCppiDmaCh|
  005f8	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  005fc		 |$LN30@CCppiDmaCh|
  005fc	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00600		 |$LN31@CCppiDmaCh|
  00600	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00604		 |$LN32@CCppiDmaCh|
  00604	00000000	 DCD         |dpCurSettings|
  00608		 |$LN33@CCppiDmaCh|
  00608	00000000	 DCD         |??_C@_1DK@EIGIDAKC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  0060c		 |$LN34@CCppiDmaCh|
  0060c	00000000	 DCD         |??_C@_1CA@KIDFAHAB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAs?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  00610		 |$LN35@CCppiDmaCh|
  00610	00000000	 DCD         |??_C@_1FE@OKNDOPEG@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAu?$AA?0@|
  00614		 |$LN36@CCppiDmaCh|
  00614	00000000	 DCD         |??_7CCppiDmaChannel@@6B@|
  00618		 |$M40346|

			 ENDP  ; |??0CCppiDmaChannel@@QAA@PAVCCppiDmaController@@EP6AXPAV0@IIIIPAX2@Z@Z|, CCppiDmaChannel::CCppiDmaChannel

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40365| DCD	|$LN5@PvUsbRegs|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PvUsbRegs@CCppiDmaController@@IAAPAUCSL_UsbRegs@@XZ| PROC ; CCppiDmaController::PvUsbRegs

; 185  :     CSL_UsbRegs*  PvUsbRegs  () { return m_pUsbRegs;  }

  00000		 |$LN5@PvUsbRegs|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M40362|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833018	 add         r3, r3, #0x18
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M40363|

			 ENDP  ; |?PvUsbRegs@CCppiDmaController@@IAAPAUCSL_UsbRegs@@XZ|, CCppiDmaController::PvUsbRegs


  00000			 AREA	 |.pdata|, PDATA
|$T40373| DCD	|$LN5@PvCppiRegs|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PvCppiRegs@CCppiDmaController@@IAAPAUCSL_CppiRegs@@XZ| PROC ; CCppiDmaController::PvCppiRegs

; 186  :     CSL_CppiRegs* PvCppiRegs () { return m_pCppiRegs; }

  00000		 |$LN5@PvCppiRegs|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M40370|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283301c	 add         r3, r3, #0x1C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M40371|

			 ENDP  ; |?PvCppiRegs@CCppiDmaController@@IAAPAUCSL_CppiRegs@@XZ|, CCppiDmaController::PvCppiRegs

	EXPORT	|??1CCppiDmaChannel@@UAA@XZ|		; CCppiDmaChannel::~CCppiDmaChannel
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T40381| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCCppiDmaChannel@@UAAPAXI@Z| PROC	; CCppiDmaChannel::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M40378|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CCppiDmaChannel@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M40379|

			 ENDP  ; |??_GCCppiDmaChannel@@UAAPAXI@Z|, CCppiDmaChannel::`scalar deleting destructor'

	EXPORT	|??_C@_1CI@NCFAABDB@?$AA?9?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?IsInUse@CCppiDmaChannel@@IBAHXZ|	; CCppiDmaChannel::IsInUse
	EXPORT	|??_C@_1EK@HKFPHAOK@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAP?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?IsOut@CCppiDmaChannel@@IBAHXZ|	; CCppiDmaChannel::IsOut
	IMPORT	|DeleteCriticalSection|
	IMPORT	|HalFreeCommonBuffer|
	IMPORT	|LocalFree|

  00008			 AREA	 |.pdata|, PDATA
|$T40400| DCD	|$LN15@CCppiDmaCh@2|
	DCD	0x40008204
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@NCFAABDB@?$AA?9?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "~", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@HKFPHAOK@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAP?$AA?5@| DCB "+"
	DCB	0x0, "~", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, ",", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| DCB "I", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| DCB "O", 0x0, "U", 0x0, "T", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00618			 AREA	 |.text|, CODE, ARM

  00618		 |??1CCppiDmaChannel@@UAA@XZ| PROC	; CCppiDmaChannel::~CCppiDmaChannel

; 143  : {

  00618		 |$LN15@CCppiDmaCh@2|
  00618	e1a0c00d	 mov         r12, sp
  0061c	e92d0001	 stmdb       sp!, {r0}
  00620	e92d5000	 stmdb       sp!, {r12, lr}
  00624	e24dd040	 sub         sp, sp, #0x40
  00628		 |$M40397|
  00628	e59f21ec	 ldr         r2, [pc, #0x1EC]
  0062c	e59d3048	 ldr         r3, [sp, #0x48]
  00630	e5832000	 str         r2, [r3]

; 144  :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 145  :         (L"+~CCppiDmaChannel: %s Ch %u, EP %u\r\n",
; 146  :         IsOut() ? L"OUT" : L"IN",
; 147  :         m_chNum,
; 148  :         m_epNum));

  00634	e59d0048	 ldr         r0, [sp, #0x48]
  00638	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  0063c	e58d001c	 str         r0, [sp, #0x1C]
  00640	e59d301c	 ldr         r3, [sp, #0x1C]
  00644	e3530000	 cmp         r3, #0
  00648	0a000002	 beq         |$LN3@CCppiDmaCh@2|
  0064c	e59f31c4	 ldr         r3, [pc, #0x1C4]
  00650	e58d3020	 str         r3, [sp, #0x20]
  00654	ea000001	 b           |$LN4@CCppiDmaCh@2|
  00658		 |$LN3@CCppiDmaCh@2|
  00658	e59f31b4	 ldr         r3, [pc, #0x1B4]
  0065c	e58d3020	 str         r3, [sp, #0x20]
  00660		 |$LN4@CCppiDmaCh@2|
  00660	e59d3048	 ldr         r3, [sp, #0x48]
  00664	e283303d	 add         r3, r3, #0x3D
  00668	e5d33000	 ldrb        r3, [r3]
  0066c	e59d2048	 ldr         r2, [sp, #0x48]
  00670	e282203c	 add         r2, r2, #0x3C
  00674	e5d22000	 ldrb        r2, [r2]
  00678	e59d1020	 ldr         r1, [sp, #0x20]
  0067c	e59f018c	 ldr         r0, [pc, #0x18C]
  00680	eb000000	 bl          NKDbgPrintfW
  00684	e3a03001	 mov         r3, #1
  00688	e58d3024	 str         r3, [sp, #0x24]
  0068c	ea000001	 b           |$LN6@CCppiDmaCh@2|
  00690	e3a03000	 mov         r3, #0
  00694	e58d3024	 str         r3, [sp, #0x24]
  00698		 |$LN6@CCppiDmaCh@2|

; 149  : 
; 150  :     // Make sure we are cleaned up correctly
; 151  :     DEBUGCHK(!IsInUse());

  00698	e59d0048	 ldr         r0, [sp, #0x48]
  0069c	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  006a0	e58d0028	 str         r0, [sp, #0x28]
  006a4	e59d3028	 ldr         r3, [sp, #0x28]
  006a8	e3530000	 cmp         r3, #0
  006ac	1a000002	 bne         |$LN7@CCppiDmaCh@2|
  006b0	e3a03001	 mov         r3, #1
  006b4	e58d302c	 str         r3, [sp, #0x2C]
  006b8	ea000007	 b           |$LN8@CCppiDmaCh@2|
  006bc		 |$LN7@CCppiDmaCh@2|
  006bc	e3a03097	 mov         r3, #0x97
  006c0	e59f2144	 ldr         r2, [pc, #0x144]
  006c4	e59f113c	 ldr         r1, [pc, #0x13C]
  006c8	e59f0134	 ldr         r0, [pc, #0x134]
  006cc	eb000000	 bl          NKDbgPrintfW
  006d0	e6000010	 __debugbreak_ce
  006d4	e3a03000	 mov         r3, #0
  006d8	e58d302c	 str         r3, [sp, #0x2C]
  006dc		 |$LN8@CCppiDmaCh@2|

; 152  : 
; 153  :     // Free frame lengths array
; 154  :     m_pTransferFrameLengthsActual = (UINT32*)LocalFree((HLOCAL)m_pTransferFrameLengthsActual);

  006dc	e59d3048	 ldr         r3, [sp, #0x48]
  006e0	e283307c	 add         r3, r3, #0x7C
  006e4	e5930000	 ldr         r0, [r3]
  006e8	eb000000	 bl          LocalFree
  006ec	e58d0030	 str         r0, [sp, #0x30]
  006f0	e59d3048	 ldr         r3, [sp, #0x48]
  006f4	e283207c	 add         r2, r3, #0x7C
  006f8	e59d3030	 ldr         r3, [sp, #0x30]
  006fc	e5823000	 str         r3, [r2]

; 155  :     DEBUGCHK(m_pTransferFrameLengthsActual == NULL);

  00700	e59d3048	 ldr         r3, [sp, #0x48]
  00704	e283307c	 add         r3, r3, #0x7C
  00708	e5933000	 ldr         r3, [r3]
  0070c	e3530000	 cmp         r3, #0
  00710	1a000002	 bne         |$LN9@CCppiDmaCh@2|
  00714	e3a03001	 mov         r3, #1
  00718	e58d3034	 str         r3, [sp, #0x34]
  0071c	ea000007	 b           |$LN10@CCppiDmaCh@2|
  00720		 |$LN9@CCppiDmaCh@2|
  00720	e3a0309b	 mov         r3, #0x9B
  00724	e59f20e0	 ldr         r2, [pc, #0xE0]
  00728	e59f10d8	 ldr         r1, [pc, #0xD8]
  0072c	e59f00d0	 ldr         r0, [pc, #0xD0]
  00730	eb000000	 bl          NKDbgPrintfW
  00734	e6000010	 __debugbreak_ce
  00738	e3a03000	 mov         r3, #0
  0073c	e58d3034	 str         r3, [sp, #0x34]
  00740		 |$LN10@CCppiDmaCh@2|

; 156  : 
; 157  :     // Free DMA buffer
; 158  :     DMA_ADAPTER_OBJECT Adapter;
; 159  :     Adapter.ObjectSize = sizeof(DMA_ADAPTER_OBJECT);

  00740	e3a0300c	 mov         r3, #0xC
  00744	e1cd30b8	 strh        r3, [sp, #8]

; 160  :     Adapter.InterfaceType = Internal;

  00748	e3a03000	 mov         r3, #0
  0074c	e58d300c	 str         r3, [sp, #0xC]

; 161  :     Adapter.BusNumber = 0;

  00750	e3a03000	 mov         r3, #0
  00754	e58d3010	 str         r3, [sp, #0x10]

; 162  :     HalFreeCommonBuffer(&Adapter, m_cbBuffer, m_paBuffer, m_pvBuffer, FALSE);

  00758	e3a03000	 mov         r3, #0
  0075c	e58d3004	 str         r3, [sp, #4]
  00760	e59d3048	 ldr         r3, [sp, #0x48]
  00764	e2833024	 add         r3, r3, #0x24
  00768	e5933000	 ldr         r3, [r3]
  0076c	e58d3000	 str         r3, [sp]
  00770	e59d3048	 ldr         r3, [sp, #0x48]
  00774	e2833028	 add         r3, r3, #0x28
  00778	e58d3038	 str         r3, [sp, #0x38]
  0077c	e59d3038	 ldr         r3, [sp, #0x38]
  00780	e5932000	 ldr         r2, [r3]
  00784	e5933004	 ldr         r3, [r3, #4]
  00788	e59d1048	 ldr         r1, [sp, #0x48]
  0078c	e2811030	 add         r1, r1, #0x30
  00790	e5911000	 ldr         r1, [r1]
  00794	e28d0008	 add         r0, sp, #8
  00798	eb000000	 bl          HalFreeCommonBuffer

; 163  :     m_pvBuffer = NULL;

  0079c	e59d3048	 ldr         r3, [sp, #0x48]
  007a0	e2832024	 add         r2, r3, #0x24
  007a4	e3a03000	 mov         r3, #0
  007a8	e5823000	 str         r3, [r2]

; 164  : 
; 165  :     m_pCppiRegs = NULL;

  007ac	e59d3048	 ldr         r3, [sp, #0x48]
  007b0	e2832018	 add         r2, r3, #0x18
  007b4	e3a03000	 mov         r3, #0
  007b8	e5823000	 str         r3, [r2]

; 166  :     m_pUsbRegs = NULL;

  007bc	e59d3048	 ldr         r3, [sp, #0x48]
  007c0	e2832010	 add         r2, r3, #0x10
  007c4	e3a03000	 mov         r3, #0
  007c8	e5823000	 str         r3, [r2]

; 167  : 
; 168  :     DeleteCriticalSection(&m_csLock);

  007cc	e59d3048	 ldr         r3, [sp, #0x48]
  007d0	e2830044	 add         r0, r3, #0x44
  007d4	eb000000	 bl          DeleteCriticalSection

; 169  : 
; 170  :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 171  :         (L"-~CCppiDmaChannel\r\n"));

  007d8	e59f0020	 ldr         r0, [pc, #0x20]
  007dc	eb000000	 bl          NKDbgPrintfW
  007e0	e3a03001	 mov         r3, #1
  007e4	e58d303c	 str         r3, [sp, #0x3C]
  007e8	ea000001	 b           |$LN12@CCppiDmaCh@2|
  007ec	e3a03000	 mov         r3, #0
  007f0	e58d303c	 str         r3, [sp, #0x3C]
  007f4		 |$LN12@CCppiDmaCh@2|

; 172  : }

  007f4	e28dd040	 add         sp, sp, #0x40
  007f8	e89d6000	 ldmia       sp, {sp, lr}
  007fc	e12fff1e	 bx          lr
  00800		 |$LN16@CCppiDmaCh@2|
  00800		 |$LN17@CCppiDmaCh@2|
  00800	00000000	 DCD         |??_C@_1CI@NCFAABDB@?$AA?9?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  00804		 |$LN18@CCppiDmaCh@2|
  00804	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00808		 |$LN19@CCppiDmaCh@2|
  00808	00000000	 DCD         |dpCurSettings|
  0080c		 |$LN20@CCppiDmaCh@2|
  0080c	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00810		 |$LN21@CCppiDmaCh@2|
  00810	00000000	 DCD         |??_C@_1EK@HKFPHAOK@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE?$AAP?$AA?5@|
  00814		 |$LN22@CCppiDmaCh@2|
  00814	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  00818		 |$LN23@CCppiDmaCh@2|
  00818	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  0081c		 |$LN24@CCppiDmaCh@2|
  0081c	00000000	 DCD         |??_7CCppiDmaChannel@@6B@|
  00820		 |$M40398|

			 ENDP  ; |??1CCppiDmaChannel@@UAA@XZ|, CCppiDmaChannel::~CCppiDmaChannel

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40415| DCD	|$LN5@IsOut|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsOut@CCppiDmaChannel@@IBAHXZ| PROC	; CCppiDmaChannel::IsOut

; 105  :     BOOL   IsOut()             const { return m_fIsOut; }

  00000		 |$LN5@IsOut|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M40412|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833034	 add         r3, r3, #0x34
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M40413|

			 ENDP  ; |?IsOut@CCppiDmaChannel@@IBAHXZ|, CCppiDmaChannel::IsOut


  00000			 AREA	 |.pdata|, PDATA
|$T40425| DCD	|$LN7@IsInUse|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsInUse@CCppiDmaChannel@@IBAHXZ| PROC ; CCppiDmaChannel::IsInUse

; 107  :     BOOL   IsInUse()           const { return m_nTransferFrames > 0; }

  00000		 |$LN7@IsInUse|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M40422|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833074	 add         r3, r3, #0x74
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	9a000002	 bls         |$LN3@IsInUse|
  00024	e3a03001	 mov         r3, #1
  00028	e58d3004	 str         r3, [sp, #4]
  0002c	ea000001	 b           |$LN4@IsInUse|
  00030		 |$LN3@IsInUse|
  00030	e3a03000	 mov         r3, #0
  00034	e58d3004	 str         r3, [sp, #4]
  00038		 |$LN4@IsInUse|
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M40423|

			 ENDP  ; |?IsInUse@CCppiDmaChannel@@IBAHXZ|, CCppiDmaChannel::IsInUse

	EXPORT	|??_C@_1GK@JNIGHDFF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@PJIECFFF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAB@| [ DATA ] ; `string'
	EXPORT	|?IsIso@CCppiDmaChannel@@IBAHXZ|	; CCppiDmaChannel::IsIso
	EXPORT	|?QueuePush@CCppiDmaChannel@@IAAXPAX@Z|	; CCppiDmaChannel::QueuePush
	EXPORT	|??_C@_1KG@FIKBBNPB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAZ@| [ DATA ] ; `string'
	EXPORT	|?HdAlloc@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@XZ| ; CCppiDmaController::HdAlloc
	EXPORT	|??_C@_1KA@NDHKLPOM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@NMENLJBL@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|?NextSegment@CCppiDmaChannel@@IAAXXZ|	; CCppiDmaChannel::NextSegment
	IMPORT	|memcpy|

  00010			 AREA	 |.pdata|, PDATA
|$T40483| DCD	|$LN76@NextSegmen|
	DCD	0x40030104
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@JNIGHDFF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "N"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "g"
	DCB	0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "B", 0x0, "D", 0x0, "s"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a", 0x0, "i"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@PJIECFFF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAB@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "N"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "g"
	DCB	0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "D", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "N", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "B", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "L", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@FIKBBNPB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAZ@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "N"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "g"
	DCB	0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "Z", 0x0, "L", 0x0, "P", 0x0, " ", 0x0, "B", 0x0, "D"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "N", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "L", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@NDHKLPOM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAT@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "N"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "g"
	DCB	0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "L", 0x0, "e", 0x0, "n", 0x0, "g"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ","
	DCB	0x0, " ", 0x0, "B", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s"
	DCB	0x0, "L", 0x0, "e", 0x0, "f", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, ",", 0x0, " ", 0x0, "F", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, "s", 0x0, "L", 0x0, "e", 0x0, "f"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@NMENLJBL@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "N"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "g"
	DCB	0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, "/", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "/", 0x0, "%"
	DCB	0x0, "u", 0x0, "/", 0x0, "%", 0x0, "u", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00820			 AREA	 |.text|, CODE, ARM

  00820		 |?NextSegment@CCppiDmaChannel@@IAAXXZ| PROC ; CCppiDmaChannel::NextSegment

; 176  : {

  00820		 |$LN76@NextSegmen|
  00820	e1a0c00d	 mov         r12, sp
  00824	e92d0001	 stmdb       sp!, {r0}
  00828	e92d5000	 stmdb       sp!, {r12, lr}
  0082c	e24dd0bc	 sub         sp, sp, #0xBC
  00830		 |$M40480|

; 177  :     DEBUGMSG(CPPI_DBG_CHAIN,
; 178  :         (L"+CCppiDmaChannel::NextSegment: %s Ch %u (EP %u/0x%02x/%u/%u)\r\n",
; 179  :         IsOut() ? L"OUT" : L"IN",
; 180  :         m_chNum,
; 181  :         m_epNum,
; 182  :         m_epAddr,
; 183  :         m_epType,
; 184  :         m_epMaxPkt));

  00830	ea000022	 b           |$LN30@NextSegmen|
  00834	e59d00c4	 ldr         r0, [sp, #0xC4]
  00838	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  0083c	e58d0044	 str         r0, [sp, #0x44]
  00840	e59d3044	 ldr         r3, [sp, #0x44]
  00844	e3530000	 cmp         r3, #0
  00848	0a000002	 beq         |$LN28@NextSegmen|
  0084c	e59f3bcc	 ldr         r3, [pc, #0xBCC]
  00850	e58d3048	 str         r3, [sp, #0x48]
  00854	ea000001	 b           |$LN29@NextSegmen|
  00858		 |$LN28@NextSegmen|
  00858	e59f3bbc	 ldr         r3, [pc, #0xBBC]
  0085c	e58d3048	 str         r3, [sp, #0x48]
  00860		 |$LN29@NextSegmen|
  00860	e59d30c4	 ldr         r3, [sp, #0xC4]
  00864	e2833064	 add         r3, r3, #0x64
  00868	e1d330b0	 ldrh        r3, [r3]
  0086c	e58d3008	 str         r3, [sp, #8]
  00870	e59d30c4	 ldr         r3, [sp, #0xC4]
  00874	e2833062	 add         r3, r3, #0x62
  00878	e5d33000	 ldrb        r3, [r3]
  0087c	e58d3004	 str         r3, [sp, #4]
  00880	e59d30c4	 ldr         r3, [sp, #0xC4]
  00884	e2833060	 add         r3, r3, #0x60
  00888	e5d33000	 ldrb        r3, [r3]
  0088c	e58d3000	 str         r3, [sp]
  00890	e59d30c4	 ldr         r3, [sp, #0xC4]
  00894	e283303d	 add         r3, r3, #0x3D
  00898	e5d33000	 ldrb        r3, [r3]
  0089c	e59d20c4	 ldr         r2, [sp, #0xC4]
  008a0	e282203c	 add         r2, r2, #0x3C
  008a4	e5d22000	 ldrb        r2, [r2]
  008a8	e59d1048	 ldr         r1, [sp, #0x48]
  008ac	e59f0b64	 ldr         r0, [pc, #0xB64]
  008b0	eb000000	 bl          NKDbgPrintfW
  008b4	e3a03001	 mov         r3, #1
  008b8	e58d304c	 str         r3, [sp, #0x4C]
  008bc	ea000001	 b           |$LN31@NextSegmen|
  008c0		 |$LN30@NextSegmen|
  008c0	e3a03000	 mov         r3, #0
  008c4	e58d304c	 str         r3, [sp, #0x4C]
  008c8		 |$LN31@NextSegmen|

; 185  : 
; 186  :     DEBUGCHK(m_nSegmentPending == 0);

  008c8	e59d30c4	 ldr         r3, [sp, #0xC4]
  008cc	e28330a0	 add         r3, r3, #0xA0
  008d0	e5933000	 ldr         r3, [r3]
  008d4	e3530000	 cmp         r3, #0
  008d8	1a000002	 bne         |$LN32@NextSegmen|
  008dc	e3a03001	 mov         r3, #1
  008e0	e58d3050	 str         r3, [sp, #0x50]
  008e4	ea000007	 b           |$LN33@NextSegmen|
  008e8		 |$LN32@NextSegmen|
  008e8	e3a030ba	 mov         r3, #0xBA
  008ec	e59f2b14	 ldr         r2, [pc, #0xB14]
  008f0	e59f1b0c	 ldr         r1, [pc, #0xB0C]
  008f4	e59f0b04	 ldr         r0, [pc, #0xB04]
  008f8	eb000000	 bl          NKDbgPrintfW
  008fc	e6000010	 __debugbreak_ce
  00900	e3a03000	 mov         r3, #0
  00904	e58d3050	 str         r3, [sp, #0x50]
  00908		 |$LN33@NextSegmen|

; 187  :     DEBUGCHK(m_nSegmentFramesPending == 0);

  00908	e59d30c4	 ldr         r3, [sp, #0xC4]
  0090c	e28330a4	 add         r3, r3, #0xA4
  00910	e5933000	 ldr         r3, [r3]
  00914	e3530000	 cmp         r3, #0
  00918	1a000002	 bne         |$LN34@NextSegmen|
  0091c	e3a03001	 mov         r3, #1
  00920	e58d3054	 str         r3, [sp, #0x54]
  00924	ea000007	 b           |$LN35@NextSegmen|
  00928		 |$LN34@NextSegmen|
  00928	e3a030bb	 mov         r3, #0xBB
  0092c	e59f2ad4	 ldr         r2, [pc, #0xAD4]
  00930	e59f1acc	 ldr         r1, [pc, #0xACC]
  00934	e59f0ac4	 ldr         r0, [pc, #0xAC4]
  00938	eb000000	 bl          NKDbgPrintfW
  0093c	e6000010	 __debugbreak_ce
  00940	e3a03000	 mov         r3, #0
  00944	e58d3054	 str         r3, [sp, #0x54]
  00948		 |$LN35@NextSegmen|

; 188  :     DEBUGCHK(m_nMaxBD != 0);

  00948	e59d30c4	 ldr         r3, [sp, #0xC4]
  0094c	e2833068	 add         r3, r3, #0x68
  00950	e5933000	 ldr         r3, [r3]
  00954	e3530000	 cmp         r3, #0
  00958	0a000002	 beq         |$LN36@NextSegmen|
  0095c	e3a03001	 mov         r3, #1
  00960	e58d3058	 str         r3, [sp, #0x58]
  00964	ea000007	 b           |$LN37@NextSegmen|
  00968		 |$LN36@NextSegmen|
  00968	e3a030bc	 mov         r3, #0xBC
  0096c	e59f2a94	 ldr         r2, [pc, #0xA94]
  00970	e59f1a8c	 ldr         r1, [pc, #0xA8C]
  00974	e59f0a84	 ldr         r0, [pc, #0xA84]
  00978	eb000000	 bl          NKDbgPrintfW
  0097c	e6000010	 __debugbreak_ce
  00980	e3a03000	 mov         r3, #0
  00984	e58d3058	 str         r3, [sp, #0x58]
  00988		 |$LN37@NextSegmen|

; 189  : 
; 190  :     UINT32 nBytesLeft  = m_nTransferLength - m_nTransferComplete;

  00988	e59d30c4	 ldr         r3, [sp, #0xC4]
  0098c	e2832088	 add         r2, r3, #0x88
  00990	e59d30c4	 ldr         r3, [sp, #0xC4]
  00994	e2833098	 add         r3, r3, #0x98
  00998	e5922000	 ldr         r2, [r2]
  0099c	e5933000	 ldr         r3, [r3]
  009a0	e0423003	 sub         r3, r2, r3
  009a4	e58d300c	 str         r3, [sp, #0xC]

; 191  :     UINT32 nFramesLeft = m_nTransferFrames - m_nTransferFramesComplete;

  009a8	e59d30c4	 ldr         r3, [sp, #0xC4]
  009ac	e2832074	 add         r2, r3, #0x74
  009b0	e59d30c4	 ldr         r3, [sp, #0xC4]
  009b4	e283309c	 add         r3, r3, #0x9C
  009b8	e5922000	 ldr         r2, [r2]
  009bc	e5933000	 ldr         r3, [r3]
  009c0	e0423003	 sub         r3, r2, r3
  009c4	e58d3010	 str         r3, [sp, #0x10]

; 192  :     UINT32 cmplQNum = IsOut() ? USB_CPPI_TXCMPL_QNUM_HOST : USB_CPPI_RXCMPL_QNUM_HOST;

  009c8	e59d00c4	 ldr         r0, [sp, #0xC4]
  009cc	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  009d0	e58d005c	 str         r0, [sp, #0x5C]
  009d4	e59d305c	 ldr         r3, [sp, #0x5C]
  009d8	e3530000	 cmp         r3, #0
  009dc	0a000002	 beq         |$LN38@NextSegmen|
  009e0	e3a0303f	 mov         r3, #0x3F
  009e4	e58d3060	 str         r3, [sp, #0x60]
  009e8	ea000001	 b           |$LN39@NextSegmen|
  009ec		 |$LN38@NextSegmen|
  009ec	e3a03041	 mov         r3, #0x41
  009f0	e58d3060	 str         r3, [sp, #0x60]
  009f4		 |$LN39@NextSegmen|
  009f4	e59d3060	 ldr         r3, [sp, #0x60]
  009f8	e58d3014	 str         r3, [sp, #0x14]

; 193  :     
; 194  :     DEBUGMSG(CPPI_DBG_CHAIN,
; 195  :         (L" CCppiDmaChannel::NextSegment: TransferLength %u, BytesLeft %u, FramesLeft %u\r\n",
; 196  :         m_nTransferLength,
; 197  :         nBytesLeft,
; 198  :         nFramesLeft));

  009fc	ea000009	 b           |$LN40@NextSegmen|
  00a00	e59d3010	 ldr         r3, [sp, #0x10]
  00a04	e59d200c	 ldr         r2, [sp, #0xC]
  00a08	e59d10c4	 ldr         r1, [sp, #0xC4]
  00a0c	e2811088	 add         r1, r1, #0x88
  00a10	e5911000	 ldr         r1, [r1]
  00a14	e59f09f8	 ldr         r0, [pc, #0x9F8]
  00a18	eb000000	 bl          NKDbgPrintfW
  00a1c	e3a03001	 mov         r3, #1
  00a20	e58d3064	 str         r3, [sp, #0x64]
  00a24	ea000001	 b           |$LN41@NextSegmen|
  00a28		 |$LN40@NextSegmen|
  00a28	e3a03000	 mov         r3, #0
  00a2c	e58d3064	 str         r3, [sp, #0x64]
  00a30		 |$LN41@NextSegmen|

; 199  : 
; 200  :     // ZLP packets are special cased
; 201  :     if (m_nTransferLength == 0)

  00a30	e59d30c4	 ldr         r3, [sp, #0xC4]
  00a34	e2833088	 add         r3, r3, #0x88
  00a38	e5933000	 ldr         r3, [r3]
  00a3c	e3530000	 cmp         r3, #0
  00a40	1a0000a3	 bne         |$LN25@NextSegmen|

; 202  :     {
; 203  :         // Only OUT direction please
; 204  :         DEBUGCHK(USB_ENDPOINT_DIRECTION_OUT(m_epAddr));

  00a44	e59d30c4	 ldr         r3, [sp, #0xC4]
  00a48	e2833060	 add         r3, r3, #0x60
  00a4c	e5d33000	 ldrb        r3, [r3]
  00a50	e3130080	 tst         r3, #0x80
  00a54	1a000002	 bne         |$LN42@NextSegmen|
  00a58	e3a03001	 mov         r3, #1
  00a5c	e58d3068	 str         r3, [sp, #0x68]
  00a60	ea000007	 b           |$LN43@NextSegmen|
  00a64		 |$LN42@NextSegmen|
  00a64	e3a030cc	 mov         r3, #0xCC
  00a68	e59f2998	 ldr         r2, [pc, #0x998]
  00a6c	e59f1990	 ldr         r1, [pc, #0x990]
  00a70	e59f0988	 ldr         r0, [pc, #0x988]
  00a74	eb000000	 bl          NKDbgPrintfW
  00a78	e6000010	 __debugbreak_ce
  00a7c	e3a03000	 mov         r3, #0
  00a80	e58d3068	 str         r3, [sp, #0x68]
  00a84		 |$LN43@NextSegmen|

; 205  : 
; 206  :         HOST_DESCRIPTOR* pHd = m_pController->HdAlloc();

  00a84	e59d30c4	 ldr         r3, [sp, #0xC4]
  00a88	e283300c	 add         r3, r3, #0xC
  00a8c	e5930000	 ldr         r0, [r3]
  00a90	eb000000	 bl          |?HdAlloc@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@XZ|
  00a94	e58d006c	 str         r0, [sp, #0x6C]
  00a98	e59d306c	 ldr         r3, [sp, #0x6C]
  00a9c	e58d3018	 str         r3, [sp, #0x18]

; 207  :         DEBUGCHK(pHd != NULL);

  00aa0	e59d3018	 ldr         r3, [sp, #0x18]
  00aa4	e3530000	 cmp         r3, #0
  00aa8	0a000002	 beq         |$LN44@NextSegmen|
  00aac	e3a03001	 mov         r3, #1
  00ab0	e58d3070	 str         r3, [sp, #0x70]
  00ab4	ea000007	 b           |$LN45@NextSegmen|
  00ab8		 |$LN44@NextSegmen|
  00ab8	e3a030cf	 mov         r3, #0xCF
  00abc	e59f2944	 ldr         r2, [pc, #0x944]
  00ac0	e59f193c	 ldr         r1, [pc, #0x93C]
  00ac4	e59f0934	 ldr         r0, [pc, #0x934]
  00ac8	eb000000	 bl          NKDbgPrintfW
  00acc	e6000010	 __debugbreak_ce
  00ad0	e3a03000	 mov         r3, #0
  00ad4	e58d3070	 str         r3, [sp, #0x70]
  00ad8		 |$LN45@NextSegmen|

; 208  :         if (pHd == NULL)

  00ad8	e59d3018	 ldr         r3, [sp, #0x18]
  00adc	e3530000	 cmp         r3, #0
  00ae0	1a000000	 bne         |$LN24@NextSegmen|

; 209  :             return;

  00ae4	ea000241	 b           |$LN26@NextSegmen|
  00ae8		 |$LN24@NextSegmen|

; 210  : 
; 211  :         /* Initialise the descriptor */
; 212  :         pHd->DescInfo    = (USB_CPPI41_DESC_TYPE_HOST   << USB_CPPI41_DESC_TYPE_SHIFT) |
; 213  :                            (((sizeof(*pHd) - 40) / 4)   << USB_CPPI41_DESC_WORDS_SHIFT) |
; 214  :                            0;

  00ae8	e59d2018	 ldr         r2, [sp, #0x18]
  00aec	e3a03481	 mov         r3, #0x81, 8
  00af0	e3833502	 orr         r3, r3, #2, 10
  00af4	e5823000	 str         r3, [r2]

; 215  :         pHd->TagInfo     = 0;

  00af8	e59d3018	 ldr         r3, [sp, #0x18]
  00afc	e2832004	 add         r2, r3, #4
  00b00	e3a03000	 mov         r3, #0
  00b04	e5823000	 str         r3, [r2]

; 216  :         pHd->PacketInfo  = (USB_CPPI41_PKT_TYPE_USB     << USB_CPPI41_PKT_TYPE_SHIFT) |
; 217  :                            (USB_CPPI41_PKT_RETPLCY_FULL << USB_CPPI41_PKT_RETPLCY_SHIFT) |
; 218  :                            (USB_CPPI41_DESC_LOC_OFFCHIP << USB_CPPI41_DESC_LOC_SHIFT) |
; 219  :                            (USB_CPPI_XXCMPL_QMGR        << USB_CPPI41_PKT_RETQMGR_SHIFT) |
; 220  :                            (cmplQNum                    << USB_CPPI41_PKT_RETQ_SHIFT);

  00b08	e59d3014	 ldr         r3, [sp, #0x14]
  00b0c	e3832305	 orr         r2, r3, #5, 6
  00b10	e59d3018	 ldr         r3, [sp, #0x18]
  00b14	e2833008	 add         r3, r3, #8
  00b18	e5832000	 str         r2, [r3]

; 221  :         pHd->BuffLen     = 0;

  00b1c	e59d3018	 ldr         r3, [sp, #0x18]
  00b20	e283200c	 add         r2, r3, #0xC
  00b24	e3a03000	 mov         r3, #0
  00b28	e5823000	 str         r3, [r2]

; 222  :         pHd->BuffPtr     = m_paBuffer.LowPart;

  00b2c	e59d30c4	 ldr         r3, [sp, #0xC4]
  00b30	e2831028	 add         r1, r3, #0x28
  00b34	e59d3018	 ldr         r3, [sp, #0x18]
  00b38	e2832010	 add         r2, r3, #0x10
  00b3c	e5913000	 ldr         r3, [r1]
  00b40	e5823000	 str         r3, [r2]

; 223  :         pHd->NextPtr     = 0;

  00b44	e59d3018	 ldr         r3, [sp, #0x18]
  00b48	e2832014	 add         r2, r3, #0x14
  00b4c	e3a03000	 mov         r3, #0
  00b50	e5823000	 str         r3, [r2]

; 224  :         pHd->OrigBuffLen = pHd->BuffLen;

  00b54	e59d3018	 ldr         r3, [sp, #0x18]
  00b58	e283100c	 add         r1, r3, #0xC
  00b5c	e59d3018	 ldr         r3, [sp, #0x18]
  00b60	e2832018	 add         r2, r3, #0x18
  00b64	e5913000	 ldr         r3, [r1]
  00b68	e5823000	 str         r3, [r2]

; 225  :         pHd->OrigBuffPtr = pHd->BuffPtr;

  00b6c	e59d3018	 ldr         r3, [sp, #0x18]
  00b70	e2831010	 add         r1, r3, #0x10
  00b74	e59d3018	 ldr         r3, [sp, #0x18]
  00b78	e283201c	 add         r2, r3, #0x1C
  00b7c	e5913000	 ldr         r3, [r1]
  00b80	e5823000	 str         r3, [r2]

; 226  :         pHd->TagInfo2    = (/* isTx */ (m_fIsOut ? 1 : 0) << 9) |
; 227  :                            (/* Ch */ m_chNum << 4) |
; 228  :                            (/* EP */ m_epNum);

  00b84	e59d30c4	 ldr         r3, [sp, #0xC4]
  00b88	e2833034	 add         r3, r3, #0x34
  00b8c	e5933000	 ldr         r3, [r3]
  00b90	e3530000	 cmp         r3, #0
  00b94	0a000002	 beq         |$LN46@NextSegmen|
  00b98	e3a03001	 mov         r3, #1
  00b9c	e58d3074	 str         r3, [sp, #0x74]
  00ba0	ea000001	 b           |$LN47@NextSegmen|
  00ba4		 |$LN46@NextSegmen|
  00ba4	e3a03000	 mov         r3, #0
  00ba8	e58d3074	 str         r3, [sp, #0x74]
  00bac		 |$LN47@NextSegmen|
  00bac	e59d3074	 ldr         r3, [sp, #0x74]
  00bb0	e1a02483	 mov         r2, r3, lsl #9
  00bb4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00bb8	e283303c	 add         r3, r3, #0x3C
  00bbc	e5d33000	 ldrb        r3, [r3]
  00bc0	e1a03203	 mov         r3, r3, lsl #4
  00bc4	e1822003	 orr         r2, r2, r3
  00bc8	e59d30c4	 ldr         r3, [sp, #0xC4]
  00bcc	e283303d	 add         r3, r3, #0x3D
  00bd0	e5d33000	 ldrb        r3, [r3]
  00bd4	e1822003	 orr         r2, r2, r3
  00bd8	e59d3018	 ldr         r3, [sp, #0x18]
  00bdc	e2833030	 add         r3, r3, #0x30
  00be0	e5832000	 str         r2, [r3]

; 229  :         pHd->Index       = 0;

  00be4	e59d3018	 ldr         r3, [sp, #0x18]
  00be8	e2832034	 add         r2, r3, #0x34
  00bec	e3a03000	 mov         r3, #0
  00bf0	e5823000	 str         r3, [r2]

; 230  : 
; 231  :         // Special handling for ZLP TX - set length to 1 and set ZLP bit
; 232  :         if (m_fIsOut)

  00bf4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00bf8	e2833034	 add         r3, r3, #0x34
  00bfc	e5933000	 ldr         r3, [r3]
  00c00	e3530000	 cmp         r3, #0
  00c04	0a000013	 beq         |$LN23@NextSegmen|

; 233  :         {
; 234  :             pHd->PacketInfo |= USB_CPPI41_PKT_FLAGS_ZLP;

  00c08	e59d3018	 ldr         r3, [sp, #0x18]
  00c0c	e2833008	 add         r3, r3, #8
  00c10	e5933000	 ldr         r3, [r3]
  00c14	e3832702	 orr         r2, r3, #2, 14
  00c18	e59d3018	 ldr         r3, [sp, #0x18]
  00c1c	e2833008	 add         r3, r3, #8
  00c20	e5832000	 str         r2, [r3]

; 235  :             pHd->DescInfo |= 1;

  00c24	e59d3018	 ldr         r3, [sp, #0x18]
  00c28	e5933000	 ldr         r3, [r3]
  00c2c	e3832001	 orr         r2, r3, #1
  00c30	e59d3018	 ldr         r3, [sp, #0x18]
  00c34	e5832000	 str         r2, [r3]

; 236  :             pHd->BuffLen = 1;

  00c38	e59d3018	 ldr         r3, [sp, #0x18]
  00c3c	e283200c	 add         r2, r3, #0xC
  00c40	e3a03001	 mov         r3, #1
  00c44	e5823000	 str         r3, [r2]

; 237  :             pHd->OrigBuffLen = 1;

  00c48	e59d3018	 ldr         r3, [sp, #0x18]
  00c4c	e2832018	 add         r2, r3, #0x18
  00c50	e3a03001	 mov         r3, #1
  00c54	e5823000	 str         r3, [r2]
  00c58		 |$LN23@NextSegmen|

; 238  :         }
; 239  : 
; 240  :         DEBUGMSG(CPPI_DBG_CHAIN,
; 241  :             (L" CCppiDmaChannel::NextSegment: ZLP BD %u - Next 0x%08x, Buffer 0x%08x, Length %u\r\n",
; 242  :             0,
; 243  :             pHd->NextPtr,
; 244  :             pHd->BuffPtr,
; 245  :             pHd->BuffLen));

  00c58	ea00000f	 b           |$LN48@NextSegmen|
  00c5c	e59d3018	 ldr         r3, [sp, #0x18]
  00c60	e283300c	 add         r3, r3, #0xC
  00c64	e5933000	 ldr         r3, [r3]
  00c68	e58d3000	 str         r3, [sp]
  00c6c	e59d3018	 ldr         r3, [sp, #0x18]
  00c70	e2833010	 add         r3, r3, #0x10
  00c74	e5933000	 ldr         r3, [r3]
  00c78	e59d2018	 ldr         r2, [sp, #0x18]
  00c7c	e2822014	 add         r2, r2, #0x14
  00c80	e5922000	 ldr         r2, [r2]
  00c84	e3a01000	 mov         r1, #0
  00c88	e59f0780	 ldr         r0, [pc, #0x780]
  00c8c	eb000000	 bl          NKDbgPrintfW
  00c90	e3a03001	 mov         r3, #1
  00c94	e58d3078	 str         r3, [sp, #0x78]
  00c98	ea000001	 b           |$LN49@NextSegmen|
  00c9c		 |$LN48@NextSegmen|
  00c9c	e3a03000	 mov         r3, #0
  00ca0	e58d3078	 str         r3, [sp, #0x78]
  00ca4		 |$LN49@NextSegmen|

; 246  : 
; 247  :         m_nSegmentPending = 0;

  00ca4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00ca8	e28320a0	 add         r2, r3, #0xA0
  00cac	e3a03000	 mov         r3, #0
  00cb0	e5823000	 str         r3, [r2]

; 248  :         m_nSegmentFramesPending = 1;

  00cb4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00cb8	e28320a4	 add         r2, r3, #0xA4
  00cbc	e3a03001	 mov         r3, #1
  00cc0	e5823000	 str         r3, [r2]

; 249  : 
; 250  :         QueuePush(pHd);

  00cc4	e59d1018	 ldr         r1, [sp, #0x18]
  00cc8	e59d00c4	 ldr         r0, [sp, #0xC4]
  00ccc	eb000000	 bl          |?QueuePush@CCppiDmaChannel@@IAAXPAX@Z|

; 251  :     }
; 252  :     else

  00cd0	ea0001a3	 b           |$LN22@NextSegmen|
  00cd4		 |$LN25@NextSegmen|

; 253  :     {
; 254  :         UINT32 i, paBuff, nLength, nThisBD;
; 255  : 
; 256  :         // Build descriptor chain based on transfer length and RNDIS switch.
; 257  : 
; 258  :         // Either virtual or physcal buffer must be supplied
; 259  :         DEBUGCHK(m_pvTransferBuffer || m_paTransferBuffer);

  00cd4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00cd8	e283306c	 add         r3, r3, #0x6C
  00cdc	e5933000	 ldr         r3, [r3]
  00ce0	e3530000	 cmp         r3, #0
  00ce4	1a00000e	 bne         |$LN50@NextSegmen|
  00ce8	e59d30c4	 ldr         r3, [sp, #0xC4]
  00cec	e2833070	 add         r3, r3, #0x70
  00cf0	e5933000	 ldr         r3, [r3]
  00cf4	e3530000	 cmp         r3, #0
  00cf8	1a000009	 bne         |$LN50@NextSegmen|
  00cfc	e3a03c01	 mov         r3, #1, 24
  00d00	e3833003	 orr         r3, r3, #3
  00d04	e59f26fc	 ldr         r2, [pc, #0x6FC]
  00d08	e59f16f4	 ldr         r1, [pc, #0x6F4]
  00d0c	e59f06ec	 ldr         r0, [pc, #0x6EC]
  00d10	eb000000	 bl          NKDbgPrintfW
  00d14	e6000010	 __debugbreak_ce
  00d18	e3a03000	 mov         r3, #0
  00d1c	e58d307c	 str         r3, [sp, #0x7C]
  00d20	ea000001	 b           |$LN51@NextSegmen|
  00d24		 |$LN50@NextSegmen|
  00d24	e3a03001	 mov         r3, #1
  00d28	e58d307c	 str         r3, [sp, #0x7C]
  00d2c		 |$LN51@NextSegmen|

; 260  : 
; 261  :         if (IsIso())

  00d2c	e59d00c4	 ldr         r0, [sp, #0xC4]
  00d30	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  00d34	e58d0080	 str         r0, [sp, #0x80]
  00d38	e59d3080	 ldr         r3, [sp, #0x80]
  00d3c	e3530000	 cmp         r3, #0
  00d40	0a00007b	 beq         |$LN21@NextSegmen|

; 262  :         {
; 263  :             m_nSegmentPending = 0;

  00d44	e59d30c4	 ldr         r3, [sp, #0xC4]
  00d48	e28320a0	 add         r2, r3, #0xA0
  00d4c	e3a03000	 mov         r3, #0
  00d50	e5823000	 str         r3, [r2]

; 264  :             m_nSegmentFramesPending = min(nFramesLeft, CPPI_MAX_DESCR);

  00d54	e59d3010	 ldr         r3, [sp, #0x10]
  00d58	e3530c01	 cmp         r3, #1, 24
  00d5c	2a000002	 bcs         |$LN52@NextSegmen|
  00d60	e59d3010	 ldr         r3, [sp, #0x10]
  00d64	e58d3084	 str         r3, [sp, #0x84]
  00d68	ea000001	 b           |$LN53@NextSegmen|
  00d6c		 |$LN52@NextSegmen|
  00d6c	e3a03c01	 mov         r3, #1, 24
  00d70	e58d3084	 str         r3, [sp, #0x84]
  00d74		 |$LN53@NextSegmen|
  00d74	e59d30c4	 ldr         r3, [sp, #0xC4]
  00d78	e28320a4	 add         r2, r3, #0xA4
  00d7c	e59d3084	 ldr         r3, [sp, #0x84]
  00d80	e5823000	 str         r3, [r2]

; 265  : 
; 266  :             if (m_paTransferBuffer)

  00d84	e59d30c4	 ldr         r3, [sp, #0xC4]
  00d88	e2833070	 add         r3, r3, #0x70
  00d8c	e5933000	 ldr         r3, [r3]
  00d90	e3530000	 cmp         r3, #0
  00d94	0a000020	 beq         |$LN20@NextSegmen|

; 267  :             {
; 268  :                 // For physical buffers the only limit is the number of
; 269  :                 // available descriptors
; 270  :                 for (i = 0; i < m_nSegmentFramesPending; i ++)

  00d98	e3a03000	 mov         r3, #0
  00d9c	e58d3020	 str         r3, [sp, #0x20]
  00da0	ea000002	 b           |$LN19@NextSegmen|
  00da4		 |$LN18@NextSegmen|
  00da4	e59d3020	 ldr         r3, [sp, #0x20]
  00da8	e2833001	 add         r3, r3, #1
  00dac	e58d3020	 str         r3, [sp, #0x20]
  00db0		 |$LN19@NextSegmen|
  00db0	e59d30c4	 ldr         r3, [sp, #0xC4]
  00db4	e28330a4	 add         r3, r3, #0xA4
  00db8	e59d2020	 ldr         r2, [sp, #0x20]
  00dbc	e5933000	 ldr         r3, [r3]
  00dc0	e1520003	 cmp         r2, r3
  00dc4	2a00000f	 bcs         |$LN17@NextSegmen|

; 271  :                 {
; 272  :                     m_nSegmentPending += m_pTransferFrameLengths[i];

  00dc8	e59d30c4	 ldr         r3, [sp, #0xC4]
  00dcc	e283e0a0	 add         lr, r3, #0xA0
  00dd0	e59d30c4	 ldr         r3, [sp, #0xC4]
  00dd4	e2830078	 add         r0, r3, #0x78
  00dd8	e59d1020	 ldr         r1, [sp, #0x20]
  00ddc	e3a03004	 mov         r3, #4
  00de0	e0020391	 mul         r2, r1, r3
  00de4	e5903000	 ldr         r3, [r0]
  00de8	e0833002	 add         r3, r3, r2
  00dec	e59e2000	 ldr         r2, [lr]
  00df0	e5933000	 ldr         r3, [r3]
  00df4	e0822003	 add         r2, r2, r3
  00df8	e59d30c4	 ldr         r3, [sp, #0xC4]
  00dfc	e28330a0	 add         r3, r3, #0xA0
  00e00	e5832000	 str         r2, [r3]

; 273  :                 }

  00e04	eaffffe6	 b           |$LN18@NextSegmen|
  00e08		 |$LN17@NextSegmen|

; 274  : 
; 275  :                 paBuff = m_paTransferBuffer;

  00e08	e59d30c4	 ldr         r3, [sp, #0xC4]
  00e0c	e2833070	 add         r3, r3, #0x70
  00e10	e5933000	 ldr         r3, [r3]
  00e14	e58d301c	 str         r3, [sp, #0x1C]

; 276  :             }
; 277  :             else

  00e18	ea000033	 b           |$LN16@NextSegmen|
  00e1c		 |$LN20@NextSegmen|

; 278  :             {
; 279  :                 // For virtual buffers we are limited by both the
; 280  :                 // descriptors and the buffer size
; 281  :                 for (i = 0; i < m_nSegmentFramesPending; i ++)

  00e1c	e3a03000	 mov         r3, #0
  00e20	e58d3020	 str         r3, [sp, #0x20]
  00e24	ea000002	 b           |$LN15@NextSegmen|
  00e28		 |$LN14@NextSegmen|
  00e28	e59d3020	 ldr         r3, [sp, #0x20]
  00e2c	e2833001	 add         r3, r3, #1
  00e30	e58d3020	 str         r3, [sp, #0x20]
  00e34		 |$LN15@NextSegmen|
  00e34	e59d30c4	 ldr         r3, [sp, #0xC4]
  00e38	e28330a4	 add         r3, r3, #0xA4
  00e3c	e59d2020	 ldr         r2, [sp, #0x20]
  00e40	e5933000	 ldr         r3, [r3]
  00e44	e1520003	 cmp         r2, r3
  00e48	2a000023	 bcs         |$LN13@NextSegmen|

; 282  :                 {
; 283  :                     if ((m_nSegmentPending + m_pTransferFrameLengths[i]) > CPPI_MAX_BUFFER)

  00e4c	e59d30c4	 ldr         r3, [sp, #0xC4]
  00e50	e283e0a0	 add         lr, r3, #0xA0
  00e54	e59d30c4	 ldr         r3, [sp, #0xC4]
  00e58	e2830078	 add         r0, r3, #0x78
  00e5c	e59d1020	 ldr         r1, [sp, #0x20]
  00e60	e3a03004	 mov         r3, #4
  00e64	e0020391	 mul         r2, r1, r3
  00e68	e5903000	 ldr         r3, [r0]
  00e6c	e0833002	 add         r3, r3, r2
  00e70	e59e2000	 ldr         r2, [lr]
  00e74	e5933000	 ldr         r3, [r3]
  00e78	e0823003	 add         r3, r2, r3
  00e7c	e3530801	 cmp         r3, #1, 16
  00e80	9a000005	 bls         |$LN12@NextSegmen|

; 284  :                     {
; 285  :                         m_nSegmentFramesPending = i + 1;

  00e84	e59d3020	 ldr         r3, [sp, #0x20]
  00e88	e2832001	 add         r2, r3, #1
  00e8c	e59d30c4	 ldr         r3, [sp, #0xC4]
  00e90	e28330a4	 add         r3, r3, #0xA4
  00e94	e5832000	 str         r2, [r3]

; 286  :                         break;

  00e98	ea00000f	 b           |$LN13@NextSegmen|
  00e9c		 |$LN12@NextSegmen|

; 287  :                     }
; 288  : 
; 289  :                     m_nSegmentPending += m_pTransferFrameLengths[i];

  00e9c	e59d30c4	 ldr         r3, [sp, #0xC4]
  00ea0	e283e0a0	 add         lr, r3, #0xA0
  00ea4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00ea8	e2830078	 add         r0, r3, #0x78
  00eac	e59d1020	 ldr         r1, [sp, #0x20]
  00eb0	e3a03004	 mov         r3, #4
  00eb4	e0020391	 mul         r2, r1, r3
  00eb8	e5903000	 ldr         r3, [r0]
  00ebc	e0833002	 add         r3, r3, r2
  00ec0	e59e2000	 ldr         r2, [lr]
  00ec4	e5933000	 ldr         r3, [r3]
  00ec8	e0822003	 add         r2, r2, r3
  00ecc	e59d30c4	 ldr         r3, [sp, #0xC4]
  00ed0	e28330a0	 add         r3, r3, #0xA0
  00ed4	e5832000	 str         r2, [r3]

; 290  :                 }

  00ed8	eaffffd2	 b           |$LN14@NextSegmen|
  00edc		 |$LN13@NextSegmen|

; 291  : 
; 292  :                 paBuff = m_paBuffer.LowPart;

  00edc	e59d30c4	 ldr         r3, [sp, #0xC4]
  00ee0	e2833028	 add         r3, r3, #0x28
  00ee4	e5933000	 ldr         r3, [r3]
  00ee8	e58d301c	 str         r3, [sp, #0x1C]
  00eec		 |$LN16@NextSegmen|

; 293  :             }
; 294  : 
; 295  :             DEBUGCHK(m_nSegmentPending > 0);

  00eec	e59d30c4	 ldr         r3, [sp, #0xC4]
  00ef0	e28330a0	 add         r3, r3, #0xA0
  00ef4	e5933000	 ldr         r3, [r3]
  00ef8	e3530000	 cmp         r3, #0
  00efc	9a000002	 bls         |$LN54@NextSegmen|
  00f00	e3a03001	 mov         r3, #1
  00f04	e58d3088	 str         r3, [sp, #0x88]
  00f08	ea000008	 b           |$LN55@NextSegmen|
  00f0c		 |$LN54@NextSegmen|
  00f0c	e3a03c01	 mov         r3, #1, 24
  00f10	e3833027	 orr         r3, r3, #0x27
  00f14	e59f24ec	 ldr         r2, [pc, #0x4EC]
  00f18	e59f14e4	 ldr         r1, [pc, #0x4E4]
  00f1c	e59f04dc	 ldr         r0, [pc, #0x4DC]
  00f20	eb000000	 bl          NKDbgPrintfW
  00f24	e6000010	 __debugbreak_ce
  00f28	e3a03000	 mov         r3, #0
  00f2c	e58d3088	 str         r3, [sp, #0x88]
  00f30		 |$LN55@NextSegmen|

; 296  :         }
; 297  :         else

  00f30	ea00003c	 b           |$LN11@NextSegmen|
  00f34		 |$LN21@NextSegmen|

; 298  :         {
; 299  :             // For BULK and INTR perform single packet transfers.
; 300  :             // When RNDIS mode is in use this will be the entire transfer.
; 301  :             // For transparent mode we stop on short packets (RX) or stalls (RX/TX).
; 302  :             m_nSegmentFramesPending = 1;

  00f34	e59d30c4	 ldr         r3, [sp, #0xC4]
  00f38	e28320a4	 add         r2, r3, #0xA4
  00f3c	e3a03001	 mov         r3, #1
  00f40	e5823000	 str         r3, [r2]

; 303  :             m_nSegmentPending = min(nBytesLeft, m_nMaxBD);

  00f44	e59d30c4	 ldr         r3, [sp, #0xC4]
  00f48	e2833068	 add         r3, r3, #0x68
  00f4c	e59d200c	 ldr         r2, [sp, #0xC]
  00f50	e5933000	 ldr         r3, [r3]
  00f54	e1520003	 cmp         r2, r3
  00f58	2a000002	 bcs         |$LN56@NextSegmen|
  00f5c	e59d300c	 ldr         r3, [sp, #0xC]
  00f60	e58d308c	 str         r3, [sp, #0x8C]
  00f64	ea000003	 b           |$LN57@NextSegmen|
  00f68		 |$LN56@NextSegmen|
  00f68	e59d30c4	 ldr         r3, [sp, #0xC4]
  00f6c	e2833068	 add         r3, r3, #0x68
  00f70	e5933000	 ldr         r3, [r3]
  00f74	e58d308c	 str         r3, [sp, #0x8C]
  00f78		 |$LN57@NextSegmen|
  00f78	e59d30c4	 ldr         r3, [sp, #0xC4]
  00f7c	e28320a0	 add         r2, r3, #0xA0
  00f80	e59d308c	 ldr         r3, [sp, #0x8C]
  00f84	e5823000	 str         r3, [r2]

; 304  : 
; 305  :             if (m_paTransferBuffer)

  00f88	e59d30c4	 ldr         r3, [sp, #0xC4]
  00f8c	e2833070	 add         r3, r3, #0x70
  00f90	e5933000	 ldr         r3, [r3]
  00f94	e3530000	 cmp         r3, #0
  00f98	0a000004	 beq         |$LN10@NextSegmen|

; 306  :             {
; 307  :                 paBuff = m_paTransferBuffer;

  00f9c	e59d30c4	 ldr         r3, [sp, #0xC4]
  00fa0	e2833070	 add         r3, r3, #0x70
  00fa4	e5933000	 ldr         r3, [r3]
  00fa8	e58d301c	 str         r3, [sp, #0x1C]

; 308  :             }
; 309  :             else

  00fac	ea00000c	 b           |$LN9@NextSegmen|
  00fb0		 |$LN10@NextSegmen|

; 310  :             {
; 311  :                 // Limited by buffer size
; 312  :                 if (m_nSegmentPending > CPPI_MAX_BUFFER)

  00fb0	e59d30c4	 ldr         r3, [sp, #0xC4]
  00fb4	e28330a0	 add         r3, r3, #0xA0
  00fb8	e5933000	 ldr         r3, [r3]
  00fbc	e3530801	 cmp         r3, #1, 16
  00fc0	9a000003	 bls         |$LN8@NextSegmen|

; 313  :                     m_nSegmentPending = CPPI_MAX_BUFFER;

  00fc4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00fc8	e28320a0	 add         r2, r3, #0xA0
  00fcc	e3a03801	 mov         r3, #1, 16
  00fd0	e5823000	 str         r3, [r2]
  00fd4		 |$LN8@NextSegmen|

; 314  : 
; 315  :                 paBuff = m_paBuffer.LowPart;

  00fd4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00fd8	e2833028	 add         r3, r3, #0x28
  00fdc	e5933000	 ldr         r3, [r3]
  00fe0	e58d301c	 str         r3, [sp, #0x1C]
  00fe4		 |$LN9@NextSegmen|

; 316  :             }
; 317  : 
; 318  :             DEBUGCHK(m_nSegmentPending > 0);

  00fe4	e59d30c4	 ldr         r3, [sp, #0xC4]
  00fe8	e28330a0	 add         r3, r3, #0xA0
  00fec	e5933000	 ldr         r3, [r3]
  00ff0	e3530000	 cmp         r3, #0
  00ff4	9a000002	 bls         |$LN58@NextSegmen|
  00ff8	e3a03001	 mov         r3, #1
  00ffc	e58d3090	 str         r3, [sp, #0x90]
  01000	ea000008	 b           |$LN59@NextSegmen|
  01004		 |$LN58@NextSegmen|
  01004	e3a03c01	 mov         r3, #1, 24
  01008	e383303e	 orr         r3, r3, #0x3E
  0100c	e59f23f4	 ldr         r2, [pc, #0x3F4]
  01010	e59f13ec	 ldr         r1, [pc, #0x3EC]
  01014	e59f03e4	 ldr         r0, [pc, #0x3E4]
  01018	eb000000	 bl          NKDbgPrintfW
  0101c	e6000010	 __debugbreak_ce
  01020	e3a03000	 mov         r3, #0
  01024	e58d3090	 str         r3, [sp, #0x90]
  01028		 |$LN59@NextSegmen|
  01028		 |$LN11@NextSegmen|

; 319  :         }
; 320  : 
; 321  :         if (!m_paTransferBuffer && IsOut())

  01028	e59d30c4	 ldr         r3, [sp, #0xC4]
  0102c	e2833070	 add         r3, r3, #0x70
  01030	e5933000	 ldr         r3, [r3]
  01034	e3530000	 cmp         r3, #0
  01038	1a00000f	 bne         |$LN7@NextSegmen|
  0103c	e59d00c4	 ldr         r0, [sp, #0xC4]
  01040	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  01044	e58d0094	 str         r0, [sp, #0x94]
  01048	e59d3094	 ldr         r3, [sp, #0x94]
  0104c	e3530000	 cmp         r3, #0
  01050	0a000009	 beq         |$LN7@NextSegmen|

; 322  :         {
; 323  :             memcpy(m_pvBuffer, m_pvTransferBuffer, m_nSegmentPending);

  01054	e59d30c4	 ldr         r3, [sp, #0xC4]
  01058	e28330a0	 add         r3, r3, #0xA0
  0105c	e5932000	 ldr         r2, [r3]
  01060	e59d30c4	 ldr         r3, [sp, #0xC4]
  01064	e283306c	 add         r3, r3, #0x6C
  01068	e5931000	 ldr         r1, [r3]
  0106c	e59d30c4	 ldr         r3, [sp, #0xC4]
  01070	e2833024	 add         r3, r3, #0x24
  01074	e5930000	 ldr         r0, [r3]
  01078	eb000000	 bl          memcpy
  0107c		 |$LN7@NextSegmen|

; 324  :         }
; 325  : 
; 326  :         nLength = m_nSegmentPending;

  0107c	e59d30c4	 ldr         r3, [sp, #0xC4]
  01080	e28330a0	 add         r3, r3, #0xA0
  01084	e5933000	 ldr         r3, [r3]
  01088	e58d3028	 str         r3, [sp, #0x28]

; 327  : 
; 328  :         for (i = 0; i < m_nSegmentFramesPending; i ++)

  0108c	e3a03000	 mov         r3, #0
  01090	e58d3020	 str         r3, [sp, #0x20]
  01094	ea000002	 b           |$LN6@NextSegmen|
  01098		 |$LN5@NextSegmen|
  01098	e59d3020	 ldr         r3, [sp, #0x20]
  0109c	e2833001	 add         r3, r3, #1
  010a0	e58d3020	 str         r3, [sp, #0x20]
  010a4		 |$LN6@NextSegmen|
  010a4	e59d30c4	 ldr         r3, [sp, #0xC4]
  010a8	e28330a4	 add         r3, r3, #0xA4
  010ac	e59d2020	 ldr         r2, [sp, #0x20]
  010b0	e5933000	 ldr         r3, [r3]
  010b4	e1520003	 cmp         r2, r3
  010b8	2a00009a	 bcs         |$LN4@NextSegmen|

; 329  :         {
; 330  :             HOST_DESCRIPTOR* pHd = m_pController->HdAlloc();

  010bc	e59d30c4	 ldr         r3, [sp, #0xC4]
  010c0	e283300c	 add         r3, r3, #0xC
  010c4	e5930000	 ldr         r0, [r3]
  010c8	eb000000	 bl          |?HdAlloc@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@XZ|
  010cc	e58d0098	 str         r0, [sp, #0x98]
  010d0	e59d3098	 ldr         r3, [sp, #0x98]
  010d4	e58d302c	 str         r3, [sp, #0x2C]

; 331  :             DEBUGCHK(pHd != NULL);

  010d8	e59d302c	 ldr         r3, [sp, #0x2C]
  010dc	e3530000	 cmp         r3, #0
  010e0	0a000002	 beq         |$LN60@NextSegmen|
  010e4	e3a03001	 mov         r3, #1
  010e8	e58d309c	 str         r3, [sp, #0x9C]
  010ec	ea000008	 b           |$LN61@NextSegmen|
  010f0		 |$LN60@NextSegmen|
  010f0	e3a03c01	 mov         r3, #1, 24
  010f4	e383304b	 orr         r3, r3, #0x4B
  010f8	e59f2308	 ldr         r2, [pc, #0x308]
  010fc	e59f1300	 ldr         r1, [pc, #0x300]
  01100	e59f02f8	 ldr         r0, [pc, #0x2F8]
  01104	eb000000	 bl          NKDbgPrintfW
  01108	e6000010	 __debugbreak_ce
  0110c	e3a03000	 mov         r3, #0
  01110	e58d309c	 str         r3, [sp, #0x9C]
  01114		 |$LN61@NextSegmen|

; 332  :             if (pHd == NULL)

  01114	e59d302c	 ldr         r3, [sp, #0x2C]
  01118	e3530000	 cmp         r3, #0
  0111c	1a000000	 bne         |$LN3@NextSegmen|

; 333  :                 return;

  01120	ea0000b2	 b           |$LN26@NextSegmen|
  01124		 |$LN3@NextSegmen|

; 334  : 
; 335  :             if (IsIso())

  01124	e59d00c4	 ldr         r0, [sp, #0xC4]
  01128	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  0112c	e58d00a0	 str         r0, [sp, #0xA0]
  01130	e59d30a0	 ldr         r3, [sp, #0xA0]
  01134	e3530000	 cmp         r3, #0
  01138	0a000009	 beq         |$LN2@NextSegmen|

; 336  :             {
; 337  :                 nThisBD = m_pTransferFrameLengths[i];

  0113c	e59d30c4	 ldr         r3, [sp, #0xC4]
  01140	e2830078	 add         r0, r3, #0x78
  01144	e59d1020	 ldr         r1, [sp, #0x20]
  01148	e3a03004	 mov         r3, #4
  0114c	e0020391	 mul         r2, r1, r3
  01150	e5903000	 ldr         r3, [r0]
  01154	e0833002	 add         r3, r3, r2
  01158	e5933000	 ldr         r3, [r3]
  0115c	e58d3024	 str         r3, [sp, #0x24]

; 338  :             }
; 339  :             else

  01160	ea00000e	 b           |$LN1@NextSegmen|
  01164		 |$LN2@NextSegmen|

; 340  :             {
; 341  :                 nThisBD = min(m_nMaxBD, nLength);

  01164	e59d30c4	 ldr         r3, [sp, #0xC4]
  01168	e2833068	 add         r3, r3, #0x68
  0116c	e5932000	 ldr         r2, [r3]
  01170	e59d3028	 ldr         r3, [sp, #0x28]
  01174	e1520003	 cmp         r2, r3
  01178	2a000004	 bcs         |$LN62@NextSegmen|
  0117c	e59d30c4	 ldr         r3, [sp, #0xC4]
  01180	e2833068	 add         r3, r3, #0x68
  01184	e5933000	 ldr         r3, [r3]
  01188	e58d30a4	 str         r3, [sp, #0xA4]
  0118c	ea000001	 b           |$LN63@NextSegmen|
  01190		 |$LN62@NextSegmen|
  01190	e59d3028	 ldr         r3, [sp, #0x28]
  01194	e58d30a4	 str         r3, [sp, #0xA4]
  01198		 |$LN63@NextSegmen|
  01198	e59d30a4	 ldr         r3, [sp, #0xA4]
  0119c	e58d3024	 str         r3, [sp, #0x24]
  011a0		 |$LN1@NextSegmen|

; 342  :             }
; 343  : 
; 344  :             nLength -= nThisBD;

  011a0	e59d2028	 ldr         r2, [sp, #0x28]
  011a4	e59d3024	 ldr         r3, [sp, #0x24]
  011a8	e0423003	 sub         r3, r2, r3
  011ac	e58d3028	 str         r3, [sp, #0x28]

; 345  : 
; 346  :             /* Initialise the descriptor */
; 347  :             pHd->DescInfo    = (USB_CPPI41_DESC_TYPE_HOST   << USB_CPPI41_DESC_TYPE_SHIFT) |
; 348  :                                (((sizeof(*pHd) - 40) / 4)   << USB_CPPI41_DESC_WORDS_SHIFT) |
; 349  :                                nThisBD;

  011b0	e59d2024	 ldr         r2, [sp, #0x24]
  011b4	e3a03481	 mov         r3, #0x81, 8
  011b8	e3833502	 orr         r3, r3, #2, 10
  011bc	e1822003	 orr         r2, r2, r3
  011c0	e59d302c	 ldr         r3, [sp, #0x2C]
  011c4	e5832000	 str         r2, [r3]

; 350  :             pHd->TagInfo     = 0;

  011c8	e59d302c	 ldr         r3, [sp, #0x2C]
  011cc	e2832004	 add         r2, r3, #4
  011d0	e3a03000	 mov         r3, #0
  011d4	e5823000	 str         r3, [r2]

; 351  :             pHd->PacketInfo  = (USB_CPPI41_PKT_TYPE_USB     << USB_CPPI41_PKT_TYPE_SHIFT) |
; 352  :                                (USB_CPPI41_PKT_RETPLCY_FULL << USB_CPPI41_PKT_RETPLCY_SHIFT) |
; 353  :                                (USB_CPPI41_DESC_LOC_OFFCHIP << USB_CPPI41_DESC_LOC_SHIFT) |
; 354  :                                (USB_CPPI_XXCMPL_QMGR        << USB_CPPI41_PKT_RETQMGR_SHIFT) |
; 355  :                                (cmplQNum                    << USB_CPPI41_PKT_RETQ_SHIFT);

  011d8	e59d3014	 ldr         r3, [sp, #0x14]
  011dc	e3832305	 orr         r2, r3, #5, 6
  011e0	e59d302c	 ldr         r3, [sp, #0x2C]
  011e4	e2833008	 add         r3, r3, #8
  011e8	e5832000	 str         r2, [r3]

; 356  :             pHd->BuffLen     = nThisBD;

  011ec	e59d302c	 ldr         r3, [sp, #0x2C]
  011f0	e283200c	 add         r2, r3, #0xC
  011f4	e59d3024	 ldr         r3, [sp, #0x24]
  011f8	e5823000	 str         r3, [r2]

; 357  :             pHd->BuffPtr     = paBuff;

  011fc	e59d302c	 ldr         r3, [sp, #0x2C]
  01200	e2832010	 add         r2, r3, #0x10
  01204	e59d301c	 ldr         r3, [sp, #0x1C]
  01208	e5823000	 str         r3, [r2]

; 358  :             pHd->NextPtr     = 0;

  0120c	e59d302c	 ldr         r3, [sp, #0x2C]
  01210	e2832014	 add         r2, r3, #0x14
  01214	e3a03000	 mov         r3, #0
  01218	e5823000	 str         r3, [r2]

; 359  :             pHd->OrigBuffLen = pHd->BuffLen;

  0121c	e59d302c	 ldr         r3, [sp, #0x2C]
  01220	e283100c	 add         r1, r3, #0xC
  01224	e59d302c	 ldr         r3, [sp, #0x2C]
  01228	e2832018	 add         r2, r3, #0x18
  0122c	e5913000	 ldr         r3, [r1]
  01230	e5823000	 str         r3, [r2]

; 360  :             pHd->OrigBuffPtr = pHd->BuffPtr;

  01234	e59d302c	 ldr         r3, [sp, #0x2C]
  01238	e2831010	 add         r1, r3, #0x10
  0123c	e59d302c	 ldr         r3, [sp, #0x2C]
  01240	e283201c	 add         r2, r3, #0x1C
  01244	e5913000	 ldr         r3, [r1]
  01248	e5823000	 str         r3, [r2]

; 361  :             pHd->TagInfo2    = (/* isTx */ (m_fIsOut ? 1 : 0) << 9) |
; 362  :                                (/* Ch */ m_chNum << 4) |
; 363  :                                (/* EP */ m_epNum);

  0124c	e59d30c4	 ldr         r3, [sp, #0xC4]
  01250	e2833034	 add         r3, r3, #0x34
  01254	e5933000	 ldr         r3, [r3]
  01258	e3530000	 cmp         r3, #0
  0125c	0a000002	 beq         |$LN64@NextSegmen|
  01260	e3a03001	 mov         r3, #1
  01264	e58d30a8	 str         r3, [sp, #0xA8]
  01268	ea000001	 b           |$LN65@NextSegmen|
  0126c		 |$LN64@NextSegmen|
  0126c	e3a03000	 mov         r3, #0
  01270	e58d30a8	 str         r3, [sp, #0xA8]
  01274		 |$LN65@NextSegmen|
  01274	e59d30a8	 ldr         r3, [sp, #0xA8]
  01278	e1a02483	 mov         r2, r3, lsl #9
  0127c	e59d30c4	 ldr         r3, [sp, #0xC4]
  01280	e283303c	 add         r3, r3, #0x3C
  01284	e5d33000	 ldrb        r3, [r3]
  01288	e1a03203	 mov         r3, r3, lsl #4
  0128c	e1822003	 orr         r2, r2, r3
  01290	e59d30c4	 ldr         r3, [sp, #0xC4]
  01294	e283303d	 add         r3, r3, #0x3D
  01298	e5d33000	 ldrb        r3, [r3]
  0129c	e1822003	 orr         r2, r2, r3
  012a0	e59d302c	 ldr         r3, [sp, #0x2C]
  012a4	e2833030	 add         r3, r3, #0x30
  012a8	e5832000	 str         r2, [r3]

; 364  :             pHd->Index       = 0;

  012ac	e59d302c	 ldr         r3, [sp, #0x2C]
  012b0	e2832034	 add         r2, r3, #0x34
  012b4	e3a03000	 mov         r3, #0
  012b8	e5823000	 str         r3, [r2]

; 365  : 
; 366  :             DEBUGMSG(CPPI_DBG_CHAIN,
; 367  :                 (L" CCppiDmaChannel::NextSegment: BD %u - Next 0x%08x, Buffer 0x%08x, Length %u\r\n",
; 368  :                 i,
; 369  :                 pHd->NextPtr,
; 370  :                 pHd->BuffPtr,
; 371  :                 pHd->BuffLen));

  012bc	ea00000f	 b           |$LN66@NextSegmen|
  012c0	e59d302c	 ldr         r3, [sp, #0x2C]
  012c4	e283300c	 add         r3, r3, #0xC
  012c8	e5933000	 ldr         r3, [r3]
  012cc	e58d3000	 str         r3, [sp]
  012d0	e59d302c	 ldr         r3, [sp, #0x2C]
  012d4	e2833010	 add         r3, r3, #0x10
  012d8	e5933000	 ldr         r3, [r3]
  012dc	e59d202c	 ldr         r2, [sp, #0x2C]
  012e0	e2822014	 add         r2, r2, #0x14
  012e4	e5922000	 ldr         r2, [r2]
  012e8	e59d1020	 ldr         r1, [sp, #0x20]
  012ec	e59f0118	 ldr         r0, [pc, #0x118]
  012f0	eb000000	 bl          NKDbgPrintfW
  012f4	e3a03001	 mov         r3, #1
  012f8	e58d30ac	 str         r3, [sp, #0xAC]
  012fc	ea000001	 b           |$LN67@NextSegmen|
  01300		 |$LN66@NextSegmen|
  01300	e3a03000	 mov         r3, #0
  01304	e58d30ac	 str         r3, [sp, #0xAC]
  01308		 |$LN67@NextSegmen|

; 372  : 
; 373  :             QueuePush(pHd);

  01308	e59d102c	 ldr         r1, [sp, #0x2C]
  0130c	e59d00c4	 ldr         r0, [sp, #0xC4]
  01310	eb000000	 bl          |?QueuePush@CCppiDmaChannel@@IAAXPAX@Z|

; 374  : 
; 375  :             paBuff += nThisBD;

  01314	e59d201c	 ldr         r2, [sp, #0x1C]
  01318	e59d3024	 ldr         r3, [sp, #0x24]
  0131c	e0823003	 add         r3, r2, r3
  01320	e58d301c	 str         r3, [sp, #0x1C]

; 376  :         }

  01324	eaffff5b	 b           |$LN5@NextSegmen|
  01328		 |$LN4@NextSegmen|

; 377  : 
; 378  :         DEBUGCHK(nLength == 0);

  01328	e59d3028	 ldr         r3, [sp, #0x28]
  0132c	e3530000	 cmp         r3, #0
  01330	1a000002	 bne         |$LN68@NextSegmen|
  01334	e3a03001	 mov         r3, #1
  01338	e58d30b0	 str         r3, [sp, #0xB0]
  0133c	ea000008	 b           |$LN69@NextSegmen|
  01340		 |$LN68@NextSegmen|
  01340	e3a03c01	 mov         r3, #1, 24
  01344	e383307a	 orr         r3, r3, #0x7A
  01348	e59f20b8	 ldr         r2, [pc, #0xB8]
  0134c	e59f10b0	 ldr         r1, [pc, #0xB0]
  01350	e59f00a8	 ldr         r0, [pc, #0xA8]
  01354	eb000000	 bl          NKDbgPrintfW
  01358	e6000010	 __debugbreak_ce
  0135c	e3a03000	 mov         r3, #0
  01360	e58d30b0	 str         r3, [sp, #0xB0]
  01364		 |$LN69@NextSegmen|
  01364		 |$LN22@NextSegmen|

; 379  :     }
; 380  : 
; 381  :     m_nSegmentFramesComplete = 0;

  01364	e59d30c4	 ldr         r3, [sp, #0xC4]
  01368	e28320a8	 add         r2, r3, #0xA8
  0136c	e3a03000	 mov         r3, #0
  01370	e5823000	 str         r3, [r2]

; 382  :     m_nSegmentComplete = 0;

  01374	e59d30c4	 ldr         r3, [sp, #0xC4]
  01378	e28320ac	 add         r2, r3, #0xAC
  0137c	e3a03000	 mov         r3, #0
  01380	e5823000	 str         r3, [r2]

; 383  : 
; 384  :     DEBUGCHK(m_nSegmentFramesPending > 0);

  01384	e59d30c4	 ldr         r3, [sp, #0xC4]
  01388	e28330a4	 add         r3, r3, #0xA4
  0138c	e5933000	 ldr         r3, [r3]
  01390	e3530000	 cmp         r3, #0
  01394	9a000002	 bls         |$LN70@NextSegmen|
  01398	e3a03001	 mov         r3, #1
  0139c	e58d30b4	 str         r3, [sp, #0xB4]
  013a0	ea000007	 b           |$LN71@NextSegmen|
  013a4		 |$LN70@NextSegmen|
  013a4	e3a03d06	 mov         r3, #6, 26
  013a8	e59f2058	 ldr         r2, [pc, #0x58]
  013ac	e59f1050	 ldr         r1, [pc, #0x50]
  013b0	e59f0048	 ldr         r0, [pc, #0x48]
  013b4	eb000000	 bl          NKDbgPrintfW
  013b8	e6000010	 __debugbreak_ce
  013bc	e3a03000	 mov         r3, #0
  013c0	e58d30b4	 str         r3, [sp, #0xB4]
  013c4		 |$LN71@NextSegmen|

; 385  : 
; 386  :     DEBUGMSG(CPPI_DBG_CHAIN,
; 387  :         (L"-CCppiDmaChannel::NextSegment: %u BDs in the chain\r\n",
; 388  :         m_nSegmentFramesPending));

  013c4	ea000007	 b           |$LN72@NextSegmen|
  013c8	e59d30c4	 ldr         r3, [sp, #0xC4]
  013cc	e28330a4	 add         r3, r3, #0xA4
  013d0	e5931000	 ldr         r1, [r3]
  013d4	e59f0020	 ldr         r0, [pc, #0x20]
  013d8	eb000000	 bl          NKDbgPrintfW
  013dc	e3a03001	 mov         r3, #1
  013e0	e58d30b8	 str         r3, [sp, #0xB8]
  013e4	ea000001	 b           |$LN73@NextSegmen|
  013e8		 |$LN72@NextSegmen|
  013e8	e3a03000	 mov         r3, #0
  013ec	e58d30b8	 str         r3, [sp, #0xB8]
  013f0		 |$LN73@NextSegmen|
  013f0		 |$LN26@NextSegmen|

; 389  : }

  013f0	e28dd0bc	 add         sp, sp, #0xBC
  013f4	e89d6000	 ldmia       sp, {sp, lr}
  013f8	e12fff1e	 bx          lr
  013fc		 |$LN77@NextSegmen|
  013fc		 |$LN78@NextSegmen|
  013fc	00000000	 DCD         |??_C@_1GK@JNIGHDFF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF@|
  01400		 |$LN79@NextSegmen|
  01400	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01404		 |$LN80@NextSegmen|
  01404	00000000	 DCD         |dpCurSettings|
  01408		 |$LN81@NextSegmen|
  01408	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0140c		 |$LN82@NextSegmen|
  0140c	00000000	 DCD         |??_C@_1JO@PJIECFFF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAB@|
  01410		 |$LN83@NextSegmen|
  01410	00000000	 DCD         |??_C@_1KG@FIKBBNPB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAZ@|
  01414		 |$LN84@NextSegmen|
  01414	00000000	 DCD         |??_C@_1KA@NDHKLPOM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAT@|
  01418		 |$LN85@NextSegmen|
  01418	00000000	 DCD         |??_C@_1HO@NMENLJBL@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAN?$AAe?$AAx?$AAt?$AAS?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF@|
  0141c		 |$LN86@NextSegmen|
  0141c	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  01420		 |$LN87@NextSegmen|
  01420	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  01424		 |$M40481|

			 ENDP  ; |?NextSegment@CCppiDmaChannel@@IAAXXZ|, CCppiDmaChannel::NextSegment

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40502| DCD	|$LN7@IsIso|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsIso@CCppiDmaChannel@@IBAHXZ| PROC	; CCppiDmaChannel::IsIso

; 110  :     BOOL   IsIso()             const { return m_epType == USB_ENDPOINT_TYPE_ISOCHRONOUS; }

  00000		 |$LN7@IsIso|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M40499|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833062	 add         r3, r3, #0x62
  00018	e5d33000	 ldrb        r3, [r3]
  0001c	e3530001	 cmp         r3, #1
  00020	1a000002	 bne         |$LN3@IsIso|
  00024	e3a03001	 mov         r3, #1
  00028	e58d3004	 str         r3, [sp, #4]
  0002c	ea000001	 b           |$LN4@IsIso|
  00030		 |$LN3@IsIso|
  00030	e3a03000	 mov         r3, #0
  00034	e58d3004	 str         r3, [sp, #4]
  00038		 |$LN4@IsIso|
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M40500|

			 ENDP  ; |?IsIso@CCppiDmaChannel@@IBAHXZ|, CCppiDmaChannel::IsIso

	EXPORT	|?IsIn@CCppiDmaChannel@@IBAHXZ|		; CCppiDmaChannel::IsIn
	EXPORT	|?ReleaseSegment@CCppiDmaChannel@@IAAXXZ| ; CCppiDmaChannel::ReleaseSegment
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|memmove|
	IMPORT	|MmMapIoSpace|
	IMPORT	|__rt_udiv|

  00018			 AREA	 |.pdata|, PDATA
|$T40516| DCD	|$LN46@ReleaseSeg|
	DCD	0x4001fe04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  01424			 AREA	 |.text|, CODE, ARM

  01424		 |?ReleaseSegment@CCppiDmaChannel@@IAAXXZ| PROC ; CCppiDmaChannel::ReleaseSegment

; 394  : {

  01424		 |$LN46@ReleaseSeg|
  01424	e1a0c00d	 mov         r12, sp
  01428	e92d0001	 stmdb       sp!, {r0}
  0142c	e92d5000	 stmdb       sp!, {r12, lr}
  01430	e24dd04c	 sub         sp, sp, #0x4C
  01434		 |$M40513|

; 395  :     DEBUGCHK(m_nSegmentFramesPending > 0);

  01434	e59d3054	 ldr         r3, [sp, #0x54]
  01438	e28330a4	 add         r3, r3, #0xA4
  0143c	e5933000	 ldr         r3, [r3]
  01440	e3530000	 cmp         r3, #0
  01444	9a000002	 bls         |$LN38@ReleaseSeg|
  01448	e3a03001	 mov         r3, #1
  0144c	e58d3028	 str         r3, [sp, #0x28]
  01450	ea000008	 b           |$LN39@ReleaseSeg|
  01454		 |$LN38@ReleaseSeg|
  01454	e3a03c01	 mov         r3, #1, 24
  01458	e383308b	 orr         r3, r3, #0x8B
  0145c	e59f27b4	 ldr         r2, [pc, #0x7B4]
  01460	e59f17ac	 ldr         r1, [pc, #0x7AC]
  01464	e59f07a4	 ldr         r0, [pc, #0x7A4]
  01468	eb000000	 bl          NKDbgPrintfW
  0146c	e6000010	 __debugbreak_ce
  01470	e3a03000	 mov         r3, #0
  01474	e58d3028	 str         r3, [sp, #0x28]
  01478		 |$LN39@ReleaseSeg|

; 396  : 
; 397  :     if (m_nSegmentPending)

  01478	e59d3054	 ldr         r3, [sp, #0x54]
  0147c	e28330a0	 add         r3, r3, #0xA0
  01480	e5933000	 ldr         r3, [r3]
  01484	e3530000	 cmp         r3, #0
  01488	0a0001b6	 beq         |$LN35@ReleaseSeg|

; 398  :     {
; 399  :         DEBUGCHK(m_pvTransferBuffer || m_paTransferBuffer);

  0148c	e59d3054	 ldr         r3, [sp, #0x54]
  01490	e283306c	 add         r3, r3, #0x6C
  01494	e5933000	 ldr         r3, [r3]
  01498	e3530000	 cmp         r3, #0
  0149c	1a00000e	 bne         |$LN40@ReleaseSeg|
  014a0	e59d3054	 ldr         r3, [sp, #0x54]
  014a4	e2833070	 add         r3, r3, #0x70
  014a8	e5933000	 ldr         r3, [r3]
  014ac	e3530000	 cmp         r3, #0
  014b0	1a000009	 bne         |$LN40@ReleaseSeg|
  014b4	e3a03c01	 mov         r3, #1, 24
  014b8	e383308f	 orr         r3, r3, #0x8F
  014bc	e59f2754	 ldr         r2, [pc, #0x754]
  014c0	e59f174c	 ldr         r1, [pc, #0x74C]
  014c4	e59f0744	 ldr         r0, [pc, #0x744]
  014c8	eb000000	 bl          NKDbgPrintfW
  014cc	e6000010	 __debugbreak_ce
  014d0	e3a03000	 mov         r3, #0
  014d4	e58d302c	 str         r3, [sp, #0x2C]
  014d8	ea000001	 b           |$LN41@ReleaseSeg|
  014dc		 |$LN40@ReleaseSeg|
  014dc	e3a03001	 mov         r3, #1
  014e0	e58d302c	 str         r3, [sp, #0x2C]
  014e4		 |$LN41@ReleaseSeg|

; 400  : 
; 401  :         if (m_paTransferBuffer)

  014e4	e59d3054	 ldr         r3, [sp, #0x54]
  014e8	e2833070	 add         r3, r3, #0x70
  014ec	e5933000	 ldr         r3, [r3]
  014f0	e3530000	 cmp         r3, #0
  014f4	0a00009a	 beq         |$LN34@ReleaseSeg|

; 402  :         {
; 403  :             if (IsIn())

  014f8	e59d0054	 ldr         r0, [sp, #0x54]
  014fc	eb000000	 bl          |?IsIn@CCppiDmaChannel@@IBAHXZ|
  01500	e58d0030	 str         r0, [sp, #0x30]
  01504	e59d3030	 ldr         r3, [sp, #0x30]
  01508	e3530000	 cmp         r3, #0
  0150c	0a000089	 beq         |$LN33@ReleaseSeg|

; 404  :             {
; 405  :                 if (IsIso())

  01510	e59d0054	 ldr         r0, [sp, #0x54]
  01514	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  01518	e58d0034	 str         r0, [sp, #0x34]
  0151c	e59d3034	 ldr         r3, [sp, #0x34]
  01520	e3530000	 cmp         r3, #0
  01524	0a000078	 beq         |$LN32@ReleaseSeg|

; 406  :                 {
; 407  :                     // For ISO we may need to compress the buffer
; 408  :                     if (m_nTransferOptions & USB_COMPRESS_ISOCH)

  01528	e59d3054	 ldr         r3, [sp, #0x54]
  0152c	e283308c	 add         r3, r3, #0x8C
  01530	e5933000	 ldr         r3, [r3]
  01534	e3130b02	 tst         r3, #2, 22
  01538	0a000068	 beq         |$LN31@ReleaseSeg|

; 409  :                     {
; 410  :                         PHYSICAL_ADDRESS pa;
; 411  :                         UINT8 *pvIBuffer;
; 412  : 
; 413  :                         pa.QuadPart = m_paTransferBuffer;

  0153c	e59d3054	 ldr         r3, [sp, #0x54]
  01540	e2833070	 add         r3, r3, #0x70
  01544	e5933000	 ldr         r3, [r3]
  01548	e58d3004	 str         r3, [sp, #4]
  0154c	e3a03000	 mov         r3, #0
  01550	e58d3008	 str         r3, [sp, #8]

; 414  :                         pvIBuffer = (UINT8 *)MmMapIoSpace(pa, m_nSegmentPending, FALSE);

  01554	e3a03000	 mov         r3, #0
  01558	e59d2054	 ldr         r2, [sp, #0x54]
  0155c	e28220a0	 add         r2, r2, #0xA0
  01560	e5922000	 ldr         r2, [r2]
  01564	e59d0004	 ldr         r0, [sp, #4]
  01568	e59d1008	 ldr         r1, [sp, #8]
  0156c	eb000000	 bl          MmMapIoSpace
  01570	e58d0038	 str         r0, [sp, #0x38]
  01574	e59d3038	 ldr         r3, [sp, #0x38]
  01578	e58d3000	 str         r3, [sp]

; 415  : 
; 416  :                         if (pvIBuffer)

  0157c	e59d3000	 ldr         r3, [sp]
  01580	e3530000	 cmp         r3, #0
  01584	0a00003d	 beq         |$LN30@ReleaseSeg|

; 417  :                         {
; 418  :                             // Compress the buffer starting with frame #1
; 419  :                             UINT8 *pvDesctBuffer = pvIBuffer + m_pTransferFrameLengthsActual[0];

  01588	e59d3054	 ldr         r3, [sp, #0x54]
  0158c	e283307c	 add         r3, r3, #0x7C
  01590	e5933000	 ldr         r3, [r3]
  01594	e59d2000	 ldr         r2, [sp]
  01598	e5933000	 ldr         r3, [r3]
  0159c	e0823003	 add         r3, r2, r3
  015a0	e58d300c	 str         r3, [sp, #0xC]

; 420  :                             UINT8 *pvSrcBuffer = pvIBuffer + m_pTransferFrameLengths[0];

  015a4	e59d3054	 ldr         r3, [sp, #0x54]
  015a8	e2833078	 add         r3, r3, #0x78
  015ac	e5933000	 ldr         r3, [r3]
  015b0	e59d2000	 ldr         r2, [sp]
  015b4	e5933000	 ldr         r3, [r3]
  015b8	e0823003	 add         r3, r2, r3
  015bc	e58d3010	 str         r3, [sp, #0x10]

; 421  : 
; 422  :                             for (UINT32 i = 1; i < m_nSegmentFramesComplete; i ++)

  015c0	e3a03001	 mov         r3, #1
  015c4	e58d3014	 str         r3, [sp, #0x14]
  015c8	ea000002	 b           |$LN29@ReleaseSeg|
  015cc		 |$LN28@ReleaseSeg|
  015cc	e59d3014	 ldr         r3, [sp, #0x14]
  015d0	e2833001	 add         r3, r3, #1
  015d4	e58d3014	 str         r3, [sp, #0x14]
  015d8		 |$LN29@ReleaseSeg|
  015d8	e59d3054	 ldr         r3, [sp, #0x54]
  015dc	e28330a8	 add         r3, r3, #0xA8
  015e0	e59d2014	 ldr         r2, [sp, #0x14]
  015e4	e5933000	 ldr         r3, [r3]
  015e8	e1520003	 cmp         r2, r3
  015ec	2a00001d	 bcs         |$LN27@ReleaseSeg|

; 423  :                             {
; 424  :                                 memmove(pvDesctBuffer, pvSrcBuffer, m_pTransferFrameLengthsActual[i]);

  015f0	e59d3054	 ldr         r3, [sp, #0x54]
  015f4	e283007c	 add         r0, r3, #0x7C
  015f8	e59d1014	 ldr         r1, [sp, #0x14]
  015fc	e3a03004	 mov         r3, #4
  01600	e0020391	 mul         r2, r1, r3
  01604	e5903000	 ldr         r3, [r0]
  01608	e0833002	 add         r3, r3, r2
  0160c	e5932000	 ldr         r2, [r3]
  01610	e59d1010	 ldr         r1, [sp, #0x10]
  01614	e59d000c	 ldr         r0, [sp, #0xC]
  01618	eb000000	 bl          memmove

; 425  :                                 pvDesctBuffer += m_pTransferFrameLengthsActual[i];

  0161c	e59d3054	 ldr         r3, [sp, #0x54]
  01620	e283007c	 add         r0, r3, #0x7C
  01624	e59d1014	 ldr         r1, [sp, #0x14]
  01628	e3a03004	 mov         r3, #4
  0162c	e0020391	 mul         r2, r1, r3
  01630	e5903000	 ldr         r3, [r0]
  01634	e0833002	 add         r3, r3, r2
  01638	e59d200c	 ldr         r2, [sp, #0xC]
  0163c	e5933000	 ldr         r3, [r3]
  01640	e0823003	 add         r3, r2, r3
  01644	e58d300c	 str         r3, [sp, #0xC]

; 426  :                                 pvSrcBuffer += m_pTransferFrameLengths[0];

  01648	e59d3054	 ldr         r3, [sp, #0x54]
  0164c	e2833078	 add         r3, r3, #0x78
  01650	e5933000	 ldr         r3, [r3]
  01654	e59d2010	 ldr         r2, [sp, #0x10]
  01658	e5933000	 ldr         r3, [r3]
  0165c	e0823003	 add         r3, r2, r3
  01660	e58d3010	 str         r3, [sp, #0x10]

; 427  :                             }

  01664	eaffffd8	 b           |$LN28@ReleaseSeg|
  01668		 |$LN27@ReleaseSeg|

; 428  : 
; 429  :                             MmUnmapIoSpace(pvIBuffer, m_nSegmentPending);

  01668	e59d3054	 ldr         r3, [sp, #0x54]
  0166c	e28330a0	 add         r3, r3, #0xA0
  01670	e5931000	 ldr         r1, [r3]
  01674	e59d0000	 ldr         r0, [sp]
  01678	eb000000	 bl          MmUnmapIoSpace

; 430  :                         }
; 431  :                         else

  0167c	ea00000c	 b           |$LN26@ReleaseSeg|
  01680		 |$LN30@ReleaseSeg|

; 432  :                         {
; 433  :                             // There is nothing we can do about it!
; 434  :                             DEBUGCHK(FALSE);

  01680	ea000002	 b           |$LN42@ReleaseSeg|
  01684	e3a03001	 mov         r3, #1
  01688	e58d303c	 str         r3, [sp, #0x3C]
  0168c	ea000008	 b           |$LN43@ReleaseSeg|
  01690		 |$LN42@ReleaseSeg|
  01690	e3a03c01	 mov         r3, #1, 24
  01694	e38330b2	 orr         r3, r3, #0xB2
  01698	e59f2578	 ldr         r2, [pc, #0x578]
  0169c	e59f1570	 ldr         r1, [pc, #0x570]
  016a0	e59f0568	 ldr         r0, [pc, #0x568]
  016a4	eb000000	 bl          NKDbgPrintfW
  016a8	e6000010	 __debugbreak_ce
  016ac	e3a03000	 mov         r3, #0
  016b0	e58d303c	 str         r3, [sp, #0x3C]
  016b4		 |$LN43@ReleaseSeg|
  016b4		 |$LN26@ReleaseSeg|

; 435  :                         }
; 436  : 
; 437  :                         m_paTransferBuffer += m_nSegmentComplete;

  016b4	e59d3054	 ldr         r3, [sp, #0x54]
  016b8	e2832070	 add         r2, r3, #0x70
  016bc	e59d3054	 ldr         r3, [sp, #0x54]
  016c0	e28330ac	 add         r3, r3, #0xAC
  016c4	e5922000	 ldr         r2, [r2]
  016c8	e5933000	 ldr         r3, [r3]
  016cc	e0822003	 add         r2, r2, r3
  016d0	e59d3054	 ldr         r3, [sp, #0x54]
  016d4	e2833070	 add         r3, r3, #0x70
  016d8	e5832000	 str         r2, [r3]

; 438  :                     }
; 439  :                     else // Uncompressed

  016dc	ea000009	 b           |$LN25@ReleaseSeg|
  016e0		 |$LN31@ReleaseSeg|

; 440  :                     {
; 441  :                         m_paTransferBuffer += m_nSegmentPending;

  016e0	e59d3054	 ldr         r3, [sp, #0x54]
  016e4	e2832070	 add         r2, r3, #0x70
  016e8	e59d3054	 ldr         r3, [sp, #0x54]
  016ec	e28330a0	 add         r3, r3, #0xA0
  016f0	e5922000	 ldr         r2, [r2]
  016f4	e5933000	 ldr         r3, [r3]
  016f8	e0822003	 add         r2, r2, r3
  016fc	e59d3054	 ldr         r3, [sp, #0x54]
  01700	e2833070	 add         r3, r3, #0x70
  01704	e5832000	 str         r2, [r3]
  01708		 |$LN25@ReleaseSeg|

; 442  :                     }
; 443  :                 }
; 444  :                 else // Non-ISO

  01708	ea000009	 b           |$LN24@ReleaseSeg|
  0170c		 |$LN32@ReleaseSeg|

; 445  :                 {
; 446  :                     m_paTransferBuffer += m_nSegmentComplete;

  0170c	e59d3054	 ldr         r3, [sp, #0x54]
  01710	e2832070	 add         r2, r3, #0x70
  01714	e59d3054	 ldr         r3, [sp, #0x54]
  01718	e28330ac	 add         r3, r3, #0xAC
  0171c	e5922000	 ldr         r2, [r2]
  01720	e5933000	 ldr         r3, [r3]
  01724	e0822003	 add         r2, r2, r3
  01728	e59d3054	 ldr         r3, [sp, #0x54]
  0172c	e2833070	 add         r3, r3, #0x70
  01730	e5832000	 str         r2, [r3]
  01734		 |$LN24@ReleaseSeg|

; 447  :                 }
; 448  :             }
; 449  :             else // Out

  01734	ea000009	 b           |$LN23@ReleaseSeg|
  01738		 |$LN33@ReleaseSeg|

; 450  :             {
; 451  :                 m_paTransferBuffer += m_nSegmentPending;

  01738	e59d3054	 ldr         r3, [sp, #0x54]
  0173c	e2832070	 add         r2, r3, #0x70
  01740	e59d3054	 ldr         r3, [sp, #0x54]
  01744	e28330a0	 add         r3, r3, #0xA0
  01748	e5922000	 ldr         r2, [r2]
  0174c	e5933000	 ldr         r3, [r3]
  01750	e0822003	 add         r2, r2, r3
  01754	e59d3054	 ldr         r3, [sp, #0x54]
  01758	e2833070	 add         r3, r3, #0x70
  0175c	e5832000	 str         r2, [r3]
  01760		 |$LN23@ReleaseSeg|

; 452  :             }
; 453  :         }
; 454  :         else // Virtual buffer

  01760	ea00007d	 b           |$LN22@ReleaseSeg|
  01764		 |$LN34@ReleaseSeg|

; 455  :         {
; 456  :             if (IsIn())

  01764	e59d0054	 ldr         r0, [sp, #0x54]
  01768	eb000000	 bl          |?IsIn@CCppiDmaChannel@@IBAHXZ|
  0176c	e58d0040	 str         r0, [sp, #0x40]
  01770	e59d3040	 ldr         r3, [sp, #0x40]
  01774	e3530000	 cmp         r3, #0
  01778	0a00006d	 beq         |$LN21@ReleaseSeg|

; 457  :             {
; 458  :                 if (IsIso())

  0177c	e59d0054	 ldr         r0, [sp, #0x54]
  01780	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  01784	e58d0044	 str         r0, [sp, #0x44]
  01788	e59d3044	 ldr         r3, [sp, #0x44]
  0178c	e3530000	 cmp         r3, #0
  01790	0a000052	 beq         |$LN20@ReleaseSeg|

; 459  :                 {
; 460  :                     // For ISO the received frames could be smaller than requested,
; 461  :                     // thus we have to copy the whole buffer unless the client opted
; 462  :                     // for a compressed transfer.
; 463  :                     if (m_nTransferOptions & USB_COMPRESS_ISOCH)

  01794	e59d3054	 ldr         r3, [sp, #0x54]
  01798	e283308c	 add         r3, r3, #0x8C
  0179c	e5933000	 ldr         r3, [r3]
  017a0	e3130b02	 tst         r3, #2, 22
  017a4	0a000038	 beq         |$LN19@ReleaseSeg|

; 464  :                     {
; 465  :                         UINT8 *pvBuffer = m_pvBuffer;

  017a8	e59d3054	 ldr         r3, [sp, #0x54]
  017ac	e2833024	 add         r3, r3, #0x24
  017b0	e5933000	 ldr         r3, [r3]
  017b4	e58d3018	 str         r3, [sp, #0x18]

; 466  : 
; 467  :                         for (UINT32 i = 0; i < m_nSegmentFramesComplete; i ++)

  017b8	e3a03000	 mov         r3, #0
  017bc	e58d301c	 str         r3, [sp, #0x1C]
  017c0	ea000002	 b           |$LN18@ReleaseSeg|
  017c4		 |$LN17@ReleaseSeg|
  017c4	e59d301c	 ldr         r3, [sp, #0x1C]
  017c8	e2833001	 add         r3, r3, #1
  017cc	e58d301c	 str         r3, [sp, #0x1C]
  017d0		 |$LN18@ReleaseSeg|
  017d0	e59d3054	 ldr         r3, [sp, #0x54]
  017d4	e28330a8	 add         r3, r3, #0xA8
  017d8	e59d201c	 ldr         r2, [sp, #0x1C]
  017dc	e5933000	 ldr         r3, [r3]
  017e0	e1520003	 cmp         r2, r3
  017e4	2a000027	 bcs         |$LN16@ReleaseSeg|

; 468  :                         {
; 469  :                             memcpy(m_pvTransferBuffer, pvBuffer, m_pTransferFrameLengthsActual[i]);

  017e8	e59d3054	 ldr         r3, [sp, #0x54]
  017ec	e283007c	 add         r0, r3, #0x7C
  017f0	e59d101c	 ldr         r1, [sp, #0x1C]
  017f4	e3a03004	 mov         r3, #4
  017f8	e0020391	 mul         r2, r1, r3
  017fc	e5903000	 ldr         r3, [r0]
  01800	e0833002	 add         r3, r3, r2
  01804	e5932000	 ldr         r2, [r3]
  01808	e59d1018	 ldr         r1, [sp, #0x18]
  0180c	e59d3054	 ldr         r3, [sp, #0x54]
  01810	e283306c	 add         r3, r3, #0x6C
  01814	e5930000	 ldr         r0, [r3]
  01818	eb000000	 bl          memcpy

; 470  :                             m_pvTransferBuffer += m_pTransferFrameLengthsActual[i];

  0181c	e59d3054	 ldr         r3, [sp, #0x54]
  01820	e283e06c	 add         lr, r3, #0x6C
  01824	e59d3054	 ldr         r3, [sp, #0x54]
  01828	e283007c	 add         r0, r3, #0x7C
  0182c	e59d101c	 ldr         r1, [sp, #0x1C]
  01830	e3a03004	 mov         r3, #4
  01834	e0020391	 mul         r2, r1, r3
  01838	e5903000	 ldr         r3, [r0]
  0183c	e0833002	 add         r3, r3, r2
  01840	e59e2000	 ldr         r2, [lr]
  01844	e5933000	 ldr         r3, [r3]
  01848	e0822003	 add         r2, r2, r3
  0184c	e59d3054	 ldr         r3, [sp, #0x54]
  01850	e283306c	 add         r3, r3, #0x6C
  01854	e5832000	 str         r2, [r3]

; 471  :                             pvBuffer += m_pTransferFrameLengths[i];

  01858	e59d3054	 ldr         r3, [sp, #0x54]
  0185c	e2830078	 add         r0, r3, #0x78
  01860	e59d101c	 ldr         r1, [sp, #0x1C]
  01864	e3a03004	 mov         r3, #4
  01868	e0020391	 mul         r2, r1, r3
  0186c	e5903000	 ldr         r3, [r0]
  01870	e0833002	 add         r3, r3, r2
  01874	e59d2018	 ldr         r2, [sp, #0x18]
  01878	e5933000	 ldr         r3, [r3]
  0187c	e0823003	 add         r3, r2, r3
  01880	e58d3018	 str         r3, [sp, #0x18]

; 472  :                         }

  01884	eaffffce	 b           |$LN17@ReleaseSeg|
  01888		 |$LN16@ReleaseSeg|

; 473  :                     }
; 474  :                     else

  01888	ea000013	 b           |$LN15@ReleaseSeg|
  0188c		 |$LN19@ReleaseSeg|

; 475  :                     {
; 476  :                         // Copy the whole segment
; 477  :                         memcpy(m_pvTransferBuffer, m_pvBuffer, m_nSegmentPending);

  0188c	e59d3054	 ldr         r3, [sp, #0x54]
  01890	e28330a0	 add         r3, r3, #0xA0
  01894	e5932000	 ldr         r2, [r3]
  01898	e59d3054	 ldr         r3, [sp, #0x54]
  0189c	e2833024	 add         r3, r3, #0x24
  018a0	e5931000	 ldr         r1, [r3]
  018a4	e59d3054	 ldr         r3, [sp, #0x54]
  018a8	e283306c	 add         r3, r3, #0x6C
  018ac	e5930000	 ldr         r0, [r3]
  018b0	eb000000	 bl          memcpy

; 478  :                         m_pvTransferBuffer += m_nSegmentPending;

  018b4	e59d3054	 ldr         r3, [sp, #0x54]
  018b8	e283206c	 add         r2, r3, #0x6C
  018bc	e59d3054	 ldr         r3, [sp, #0x54]
  018c0	e28330a0	 add         r3, r3, #0xA0
  018c4	e5922000	 ldr         r2, [r2]
  018c8	e5933000	 ldr         r3, [r3]
  018cc	e0822003	 add         r2, r2, r3
  018d0	e59d3054	 ldr         r3, [sp, #0x54]
  018d4	e283306c	 add         r3, r3, #0x6C
  018d8	e5832000	 str         r2, [r3]
  018dc		 |$LN15@ReleaseSeg|

; 479  :                     }
; 480  :                 }
; 481  :                 else

  018dc	ea000013	 b           |$LN14@ReleaseSeg|
  018e0		 |$LN20@ReleaseSeg|

; 482  :                 {
; 483  :                     // Copy completed segment to the user buffer
; 484  :                     memcpy(m_pvTransferBuffer, m_pvBuffer, m_nSegmentComplete);

  018e0	e59d3054	 ldr         r3, [sp, #0x54]
  018e4	e28330ac	 add         r3, r3, #0xAC
  018e8	e5932000	 ldr         r2, [r3]
  018ec	e59d3054	 ldr         r3, [sp, #0x54]
  018f0	e2833024	 add         r3, r3, #0x24
  018f4	e5931000	 ldr         r1, [r3]
  018f8	e59d3054	 ldr         r3, [sp, #0x54]
  018fc	e283306c	 add         r3, r3, #0x6C
  01900	e5930000	 ldr         r0, [r3]
  01904	eb000000	 bl          memcpy

; 485  :                     m_pvTransferBuffer += m_nSegmentComplete;

  01908	e59d3054	 ldr         r3, [sp, #0x54]
  0190c	e283206c	 add         r2, r3, #0x6C
  01910	e59d3054	 ldr         r3, [sp, #0x54]
  01914	e28330ac	 add         r3, r3, #0xAC
  01918	e5922000	 ldr         r2, [r2]
  0191c	e5933000	 ldr         r3, [r3]
  01920	e0822003	 add         r2, r2, r3
  01924	e59d3054	 ldr         r3, [sp, #0x54]
  01928	e283306c	 add         r3, r3, #0x6C
  0192c	e5832000	 str         r2, [r3]
  01930		 |$LN14@ReleaseSeg|

; 486  :                 }
; 487  :             }
; 488  :             else // Out

  01930	ea000009	 b           |$LN13@ReleaseSeg|
  01934		 |$LN21@ReleaseSeg|

; 489  :             {
; 490  :                 m_pvTransferBuffer += m_nSegmentPending;

  01934	e59d3054	 ldr         r3, [sp, #0x54]
  01938	e283206c	 add         r2, r3, #0x6C
  0193c	e59d3054	 ldr         r3, [sp, #0x54]
  01940	e28330a0	 add         r3, r3, #0xA0
  01944	e5922000	 ldr         r2, [r2]
  01948	e5933000	 ldr         r3, [r3]
  0194c	e0822003	 add         r2, r2, r3
  01950	e59d3054	 ldr         r3, [sp, #0x54]
  01954	e283306c	 add         r3, r3, #0x6C
  01958	e5832000	 str         r2, [r3]
  0195c		 |$LN13@ReleaseSeg|
  0195c		 |$LN22@ReleaseSeg|

; 491  :             }
; 492  :         }
; 493  : 
; 494  :         if (IsIso())

  0195c	e59d0054	 ldr         r0, [sp, #0x54]
  01960	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  01964	e58d0048	 str         r0, [sp, #0x48]
  01968	e59d3048	 ldr         r3, [sp, #0x48]
  0196c	e3530000	 cmp         r3, #0
  01970	0a00006e	 beq         |$LN12@ReleaseSeg|

; 495  :         {
; 496  :             // Copy ISO frame lengths
; 497  :             if (m_pdwIsochLengths)

  01974	e59d3054	 ldr         r3, [sp, #0x54]
  01978	e2833084	 add         r3, r3, #0x84
  0197c	e5933000	 ldr         r3, [r3]
  01980	e3530000	 cmp         r3, #0
  01984	0a000020	 beq         |$LN11@ReleaseSeg|

; 498  :             {
; 499  :                 for (UINT32 i = 0; i < m_nSegmentFramesComplete; i ++)

  01988	e3a03000	 mov         r3, #0
  0198c	e58d3020	 str         r3, [sp, #0x20]
  01990	ea000002	 b           |$LN10@ReleaseSeg|
  01994		 |$LN9@ReleaseSeg|
  01994	e59d3020	 ldr         r3, [sp, #0x20]
  01998	e2833001	 add         r3, r3, #1
  0199c	e58d3020	 str         r3, [sp, #0x20]
  019a0		 |$LN10@ReleaseSeg|
  019a0	e59d3054	 ldr         r3, [sp, #0x54]
  019a4	e28330a8	 add         r3, r3, #0xA8
  019a8	e59d2020	 ldr         r2, [sp, #0x20]
  019ac	e5933000	 ldr         r3, [r3]
  019b0	e1520003	 cmp         r2, r3
  019b4	2a000014	 bcs         |$LN8@ReleaseSeg|

; 500  :                 {
; 501  :                     m_pdwIsochLengths[i + m_nTransferFramesComplete] = m_pTransferFrameLengthsActual[i];

  019b8	e59d3054	 ldr         r3, [sp, #0x54]
  019bc	e283007c	 add         r0, r3, #0x7C
  019c0	e59d1020	 ldr         r1, [sp, #0x20]
  019c4	e3a03004	 mov         r3, #4
  019c8	e0020391	 mul         r2, r1, r3
  019cc	e5903000	 ldr         r3, [r0]
  019d0	e083e002	 add         lr, r3, r2
  019d4	e59d3054	 ldr         r3, [sp, #0x54]
  019d8	e2830084	 add         r0, r3, #0x84
  019dc	e59d3054	 ldr         r3, [sp, #0x54]
  019e0	e283309c	 add         r3, r3, #0x9C
  019e4	e59d2020	 ldr         r2, [sp, #0x20]
  019e8	e5933000	 ldr         r3, [r3]
  019ec	e0821003	 add         r1, r2, r3
  019f0	e3a03004	 mov         r3, #4
  019f4	e0020391	 mul         r2, r1, r3
  019f8	e5903000	 ldr         r3, [r0]
  019fc	e0832002	 add         r2, r3, r2
  01a00	e59e3000	 ldr         r3, [lr]
  01a04	e5823000	 str         r3, [r2]

; 502  :                     //RETAILMSG(1, (L"IsochLen[%d] = %d", i+m_nTransferFramesComplete, m_pdwIsochLengths[i]));
; 503  :                 }

  01a08	eaffffe1	 b           |$LN9@ReleaseSeg|
  01a0c		 |$LN8@ReleaseSeg|
  01a0c		 |$LN11@ReleaseSeg|

; 504  :             }
; 505  : 
; 506  :             // Set ISO error flags
; 507  :             if (m_pdwIsochErrors)

  01a0c	e59d3054	 ldr         r3, [sp, #0x54]
  01a10	e2833080	 add         r3, r3, #0x80
  01a14	e5933000	 ldr         r3, [r3]
  01a18	e3530000	 cmp         r3, #0
  01a1c	0a000043	 beq         |$LN7@ReleaseSeg|

; 508  :             {
; 509  :                 for (UINT32 i = 0; i < m_nSegmentFramesComplete; i ++)

  01a20	e3a03000	 mov         r3, #0
  01a24	e58d3024	 str         r3, [sp, #0x24]
  01a28	ea000002	 b           |$LN6@ReleaseSeg|
  01a2c		 |$LN5@ReleaseSeg|
  01a2c	e59d3024	 ldr         r3, [sp, #0x24]
  01a30	e2833001	 add         r3, r3, #1
  01a34	e58d3024	 str         r3, [sp, #0x24]
  01a38		 |$LN6@ReleaseSeg|
  01a38	e59d3054	 ldr         r3, [sp, #0x54]
  01a3c	e28330a8	 add         r3, r3, #0xA8
  01a40	e59d2024	 ldr         r2, [sp, #0x24]
  01a44	e5933000	 ldr         r3, [r3]
  01a48	e1520003	 cmp         r2, r3
  01a4c	2a000037	 bcs         |$LN4@ReleaseSeg|

; 510  :                 {
; 511  :                     // Short packets not allowed?
; 512  :                     if (((m_nTransferLength % (UINT32)m_epMaxPkt) == 0) &&
; 513  :                         ((m_nTransferOptions & USB_SHORT_TRANSFER_OK) == 0) &&
; 514  :                         ((m_pTransferFrameLengthsActual[i] % (UINT32)m_epMaxPkt) != 0))

  01a50	e59d3054	 ldr         r3, [sp, #0x54]
  01a54	e2832088	 add         r2, r3, #0x88
  01a58	e59d3054	 ldr         r3, [sp, #0x54]
  01a5c	e2833064	 add         r3, r3, #0x64
  01a60	e1d300b0	 ldrh        r0, [r3]
  01a64	e5921000	 ldr         r1, [r2]
  01a68	eb000000	 bl          __rt_udiv
  01a6c	e3510000	 cmp         r1, #0
  01a70	1a000020	 bne         |$LN3@ReleaseSeg|
  01a74	e59d3054	 ldr         r3, [sp, #0x54]
  01a78	e283308c	 add         r3, r3, #0x8C
  01a7c	e5933000	 ldr         r3, [r3]
  01a80	e3130c02	 tst         r3, #2, 24
  01a84	1a00001b	 bne         |$LN3@ReleaseSeg|
  01a88	e59d3054	 ldr         r3, [sp, #0x54]
  01a8c	e283007c	 add         r0, r3, #0x7C
  01a90	e59d1024	 ldr         r1, [sp, #0x24]
  01a94	e3a03004	 mov         r3, #4
  01a98	e0020391	 mul         r2, r1, r3
  01a9c	e5903000	 ldr         r3, [r0]
  01aa0	e0832002	 add         r2, r3, r2
  01aa4	e59d3054	 ldr         r3, [sp, #0x54]
  01aa8	e2833064	 add         r3, r3, #0x64
  01aac	e1d300b0	 ldrh        r0, [r3]
  01ab0	e5921000	 ldr         r1, [r2]
  01ab4	eb000000	 bl          __rt_udiv
  01ab8	e3510000	 cmp         r1, #0
  01abc	0a00000d	 beq         |$LN3@ReleaseSeg|

; 515  :                     {
; 516  :                         // Indicate underrun error
; 517  :                         m_pdwIsochErrors[i + m_nTransferFramesComplete] = USB_DATA_UNDERRUN_ERROR;

  01ac0	e59d3054	 ldr         r3, [sp, #0x54]
  01ac4	e2830080	 add         r0, r3, #0x80
  01ac8	e59d3054	 ldr         r3, [sp, #0x54]
  01acc	e283309c	 add         r3, r3, #0x9C
  01ad0	e59d2024	 ldr         r2, [sp, #0x24]
  01ad4	e5933000	 ldr         r3, [r3]
  01ad8	e0821003	 add         r1, r2, r3
  01adc	e3a03004	 mov         r3, #4
  01ae0	e0020391	 mul         r2, r1, r3
  01ae4	e5903000	 ldr         r3, [r0]
  01ae8	e0832002	 add         r2, r3, r2
  01aec	e3a03009	 mov         r3, #9
  01af0	e5823000	 str         r3, [r2]

; 518  :                         //RETAILMSG(1, (L"IsochErr[%d] = UNDERRUN", i + m_nTransferFramesComplete));
; 519  :                     }
; 520  :                     else

  01af4	ea00000c	 b           |$LN2@ReleaseSeg|
  01af8		 |$LN3@ReleaseSeg|

; 521  :                     {
; 522  :                         m_pdwIsochErrors[i + m_nTransferFramesComplete] = USB_NO_ERROR;

  01af8	e59d3054	 ldr         r3, [sp, #0x54]
  01afc	e2830080	 add         r0, r3, #0x80
  01b00	e59d3054	 ldr         r3, [sp, #0x54]
  01b04	e283309c	 add         r3, r3, #0x9C
  01b08	e59d2024	 ldr         r2, [sp, #0x24]
  01b0c	e5933000	 ldr         r3, [r3]
  01b10	e0821003	 add         r1, r2, r3
  01b14	e3a03004	 mov         r3, #4
  01b18	e0020391	 mul         r2, r1, r3
  01b1c	e5903000	 ldr         r3, [r0]
  01b20	e0832002	 add         r2, r3, r2
  01b24	e3a03000	 mov         r3, #0
  01b28	e5823000	 str         r3, [r2]
  01b2c		 |$LN2@ReleaseSeg|

; 523  :                         //RETAILMSG(1, (L"IsochErr[%d] = NO_ERROR", i + m_nTransferFramesComplete));
; 524  :                     }
; 525  :                 }

  01b2c	eaffffbe	 b           |$LN5@ReleaseSeg|
  01b30		 |$LN4@ReleaseSeg|
  01b30		 |$LN7@ReleaseSeg|
  01b30		 |$LN12@ReleaseSeg|

; 526  :             }
; 527  :         }
; 528  : 
; 529  :         m_nTransferComplete += m_nSegmentComplete;

  01b30	e59d3054	 ldr         r3, [sp, #0x54]
  01b34	e2832098	 add         r2, r3, #0x98
  01b38	e59d3054	 ldr         r3, [sp, #0x54]
  01b3c	e28330ac	 add         r3, r3, #0xAC
  01b40	e5922000	 ldr         r2, [r2]
  01b44	e5933000	 ldr         r3, [r3]
  01b48	e0822003	 add         r2, r2, r3
  01b4c	e59d3054	 ldr         r3, [sp, #0x54]
  01b50	e2833098	 add         r3, r3, #0x98
  01b54	e5832000	 str         r2, [r3]

; 530  :         m_nSegmentComplete = 0;

  01b58	e59d3054	 ldr         r3, [sp, #0x54]
  01b5c	e28320ac	 add         r2, r3, #0xAC
  01b60	e3a03000	 mov         r3, #0
  01b64	e5823000	 str         r3, [r2]
  01b68		 |$LN35@ReleaseSeg|

; 531  :     }
; 532  : 
; 533  :     if (m_pTransferFrameLengths)

  01b68	e59d3054	 ldr         r3, [sp, #0x54]
  01b6c	e2833078	 add         r3, r3, #0x78
  01b70	e5933000	 ldr         r3, [r3]
  01b74	e3530000	 cmp         r3, #0
  01b78	0a00000b	 beq         |$LN1@ReleaseSeg|

; 534  :     {
; 535  :         m_pTransferFrameLengths += m_nSegmentFramesComplete;

  01b7c	e59d3054	 ldr         r3, [sp, #0x54]
  01b80	e2830078	 add         r0, r3, #0x78
  01b84	e59d3054	 ldr         r3, [sp, #0x54]
  01b88	e28330a8	 add         r3, r3, #0xA8
  01b8c	e5931000	 ldr         r1, [r3]
  01b90	e3a03004	 mov         r3, #4
  01b94	e0020391	 mul         r2, r1, r3
  01b98	e5903000	 ldr         r3, [r0]
  01b9c	e0832002	 add         r2, r3, r2
  01ba0	e59d3054	 ldr         r3, [sp, #0x54]
  01ba4	e2833078	 add         r3, r3, #0x78
  01ba8	e5832000	 str         r2, [r3]
  01bac		 |$LN1@ReleaseSeg|

; 536  :     }
; 537  : 
; 538  :     m_nTransferFramesComplete += m_nSegmentFramesComplete;

  01bac	e59d3054	 ldr         r3, [sp, #0x54]
  01bb0	e283209c	 add         r2, r3, #0x9C
  01bb4	e59d3054	 ldr         r3, [sp, #0x54]
  01bb8	e28330a8	 add         r3, r3, #0xA8
  01bbc	e5922000	 ldr         r2, [r2]
  01bc0	e5933000	 ldr         r3, [r3]
  01bc4	e0822003	 add         r2, r2, r3
  01bc8	e59d3054	 ldr         r3, [sp, #0x54]
  01bcc	e283309c	 add         r3, r3, #0x9C
  01bd0	e5832000	 str         r2, [r3]

; 539  :     m_nSegmentFramesComplete = 0;

  01bd4	e59d3054	 ldr         r3, [sp, #0x54]
  01bd8	e28320a8	 add         r2, r3, #0xA8
  01bdc	e3a03000	 mov         r3, #0
  01be0	e5823000	 str         r3, [r2]

; 540  : 
; 541  :     m_nSegmentPending = 0;

  01be4	e59d3054	 ldr         r3, [sp, #0x54]
  01be8	e28320a0	 add         r2, r3, #0xA0
  01bec	e3a03000	 mov         r3, #0
  01bf0	e5823000	 str         r3, [r2]

; 542  :     m_nSegmentFramesPending = 0;

  01bf4	e59d3054	 ldr         r3, [sp, #0x54]
  01bf8	e28320a4	 add         r2, r3, #0xA4
  01bfc	e3a03000	 mov         r3, #0
  01c00	e5823000	 str         r3, [r2]

; 543  : }

  01c04	e28dd04c	 add         sp, sp, #0x4C
  01c08	e89d6000	 ldmia       sp, {sp, lr}
  01c0c	e12fff1e	 bx          lr
  01c10		 |$LN47@ReleaseSeg|
  01c10		 |$LN48@ReleaseSeg|
  01c10	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01c14		 |$LN49@ReleaseSeg|
  01c14	00000000	 DCD         |dpCurSettings|
  01c18		 |$LN50@ReleaseSeg|
  01c18	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01c1c		 |$M40514|

			 ENDP  ; |?ReleaseSegment@CCppiDmaChannel@@IAAXXZ|, CCppiDmaChannel::ReleaseSegment

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40528| DCD	|$LN7@IsIn|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsIn@CCppiDmaChannel@@IBAHXZ| PROC	; CCppiDmaChannel::IsIn

; 106  :     BOOL   IsIn()              const { return !m_fIsOut; }

  00000		 |$LN7@IsIn|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M40525|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833034	 add         r3, r3, #0x34
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	1a000002	 bne         |$LN3@IsIn|
  00024	e3a03001	 mov         r3, #1
  00028	e58d3004	 str         r3, [sp, #4]
  0002c	ea000001	 b           |$LN4@IsIn|
  00030		 |$LN3@IsIn|
  00030	e3a03000	 mov         r3, #0
  00034	e58d3004	 str         r3, [sp, #4]
  00038		 |$LN4@IsIn|
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M40526|

			 ENDP  ; |?IsIn@CCppiDmaChannel@@IBAHXZ|, CCppiDmaChannel::IsIn

	EXPORT	|??_C@_1GO@NNNIILNJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|?QueuePush@CCppiDmaController@@IAAXEPAX@Z| ; CCppiDmaController::QueuePush
	EXPORT	|??_C@_1LA@LDALGLMI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@KGOIJOOD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@NICKEGOH@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|?ProcessCompletedTeardown@CCppiDmaChannel@@IAAXPAU_TEARDOWN_DESCRIPTOR@@@Z| ; CCppiDmaChannel::ProcessCompletedTeardown

  00020			 AREA	 |.pdata|, PDATA
|$T40545| DCD	|$LN17@ProcessCom|
	DCD	0x40006904
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@NNNIILNJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, "T", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LA@LDALGLMI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, "T", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "c"
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@KGOIJOOD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, "T", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, " ", 0x0, "T", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@NICKEGOH@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, "T", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  01c1c			 AREA	 |.text|, CODE, ARM

  01c1c		 |?ProcessCompletedTeardown@CCppiDmaChannel@@IAAXPAU_TEARDOWN_DESCRIPTOR@@@Z| PROC ; CCppiDmaChannel::ProcessCompletedTeardown

; 546  : {

  01c1c		 |$LN17@ProcessCom|
  01c1c	e1a0c00d	 mov         r12, sp
  01c20	e92d0003	 stmdb       sp!, {r0, r1}
  01c24	e92d5000	 stmdb       sp!, {r12, lr}
  01c28	e24dd018	 sub         sp, sp, #0x18
  01c2c		 |$M40542|

; 547  : #ifndef SHIP_BUILD
; 548  :     WCHAR* szDir = m_fIsOut ? L"OUT" : L"IN";

  01c2c	e59d3020	 ldr         r3, [sp, #0x20]
  01c30	e2833034	 add         r3, r3, #0x34
  01c34	e5933000	 ldr         r3, [r3]
  01c38	e3530000	 cmp         r3, #0
  01c3c	0a000002	 beq         |$LN5@ProcessCom|
  01c40	e59f3174	 ldr         r3, [pc, #0x174]
  01c44	e58d3004	 str         r3, [sp, #4]
  01c48	ea000001	 b           |$LN6@ProcessCom|
  01c4c		 |$LN5@ProcessCom|
  01c4c	e59f3164	 ldr         r3, [pc, #0x164]
  01c50	e58d3004	 str         r3, [sp, #4]
  01c54		 |$LN6@ProcessCom|
  01c54	e59d3004	 ldr         r3, [sp, #4]
  01c58	e58d3000	 str         r3, [sp]

; 549  : #endif
; 550  : 
; 551  :     DEBUGMSG(ZONE_PDD_DMA,
; 552  :         (L"+CCppiDmaChannel::ProcessCompletedTeardown: %s Ch %u\r\n",
; 553  :         szDir,
; 554  :         m_chNum));

  01c5c	ea000009	 b           |$LN7@ProcessCom|
  01c60	e59d3020	 ldr         r3, [sp, #0x20]
  01c64	e283303c	 add         r3, r3, #0x3C
  01c68	e5d33000	 ldrb        r3, [r3]
  01c6c	e1a02003	 mov         r2, r3
  01c70	e59d1000	 ldr         r1, [sp]
  01c74	e59f0138	 ldr         r0, [pc, #0x138]
  01c78	eb000000	 bl          NKDbgPrintfW
  01c7c	e3a03001	 mov         r3, #1
  01c80	e58d3008	 str         r3, [sp, #8]
  01c84	ea000001	 b           |$LN8@ProcessCom|
  01c88		 |$LN7@ProcessCom|
  01c88	e3a03000	 mov         r3, #0
  01c8c	e58d3008	 str         r3, [sp, #8]
  01c90		 |$LN8@ProcessCom|

; 555  : 
; 556  :     if (pTd == NULL) {

  01c90	e59d3024	 ldr         r3, [sp, #0x24]
  01c94	e3530000	 cmp         r3, #0
  01c98	1a000010	 bne         |$LN2@ProcessCom|

; 557  :         ERRORMSG(TRUE,
; 558  :             (L" CCppiDmaChannel::ProcessCompletedTeardown: %s Ch %u, NULL TD\r\n",
; 559  :             szDir,
; 560  :             m_chNum));

  01c9c	e3a02e23	 mov         r2, #0x23, 28
  01ca0	e59f1104	 ldr         r1, [pc, #0x104]
  01ca4	e59f00fc	 ldr         r0, [pc, #0xFC]
  01ca8	eb000000	 bl          NKDbgPrintfW
  01cac	e59d3020	 ldr         r3, [sp, #0x20]
  01cb0	e283303c	 add         r3, r3, #0x3C
  01cb4	e5d33000	 ldrb        r3, [r3]
  01cb8	e1a02003	 mov         r2, r3
  01cbc	e59d1000	 ldr         r1, [sp]
  01cc0	e59f00e8	 ldr         r0, [pc, #0xE8]
  01cc4	eb000000	 bl          NKDbgPrintfW
  01cc8	e3a03001	 mov         r3, #1
  01ccc	e58d300c	 str         r3, [sp, #0xC]
  01cd0	ea000001	 b           |$LN10@ProcessCom|
  01cd4	e3a03000	 mov         r3, #0
  01cd8	e58d300c	 str         r3, [sp, #0xC]
  01cdc		 |$LN10@ProcessCom|

; 561  :     }
; 562  :     else

  01cdc	ea00001f	 b           |$LN1@ProcessCom|
  01ce0		 |$LN2@ProcessCom|

; 563  :     {
; 564  :         ERRORMSG(m_fIsTeardownPending == FALSE,
; 565  :             (L" CCppiDmaChannel::ProcessCompletedTeardown: %s Ch %u - Not requested for this channel\r\n",
; 566  :             szDir,
; 567  :             m_chNum));

  01ce0	e59d3020	 ldr         r3, [sp, #0x20]
  01ce4	e2833038	 add         r3, r3, #0x38
  01ce8	e5933000	 ldr         r3, [r3]
  01cec	e3530000	 cmp         r3, #0
  01cf0	1a00000e	 bne         |$LN11@ProcessCom|
  01cf4	e3a02c02	 mov         r2, #2, 24
  01cf8	e3822037	 orr         r2, r2, #0x37
  01cfc	e59f10a8	 ldr         r1, [pc, #0xA8]
  01d00	e59f00a0	 ldr         r0, [pc, #0xA0]
  01d04	eb000000	 bl          NKDbgPrintfW
  01d08	e59d3020	 ldr         r3, [sp, #0x20]
  01d0c	e283303c	 add         r3, r3, #0x3C
  01d10	e5d33000	 ldrb        r3, [r3]
  01d14	e1a02003	 mov         r2, r3
  01d18	e59d1000	 ldr         r1, [sp]
  01d1c	e59f0080	 ldr         r0, [pc, #0x80]
  01d20	eb000000	 bl          NKDbgPrintfW
  01d24	e3a03001	 mov         r3, #1
  01d28	e58d3010	 str         r3, [sp, #0x10]
  01d2c	ea000001	 b           |$LN12@ProcessCom|
  01d30		 |$LN11@ProcessCom|
  01d30	e3a03000	 mov         r3, #0
  01d34	e58d3010	 str         r3, [sp, #0x10]
  01d38		 |$LN12@ProcessCom|

; 568  : 
; 569  :         m_pController->QueuePush(USB_CPPI_TDFREE_QNUM, pTd);

  01d38	e59d2024	 ldr         r2, [sp, #0x24]
  01d3c	e3a0100f	 mov         r1, #0xF
  01d40	e59d3020	 ldr         r3, [sp, #0x20]
  01d44	e283300c	 add         r3, r3, #0xC
  01d48	e5930000	 ldr         r0, [r3]
  01d4c	eb000000	 bl          |?QueuePush@CCppiDmaController@@IAAXEPAX@Z|

; 570  :         m_fIsTeardownPending = FALSE;

  01d50	e59d3020	 ldr         r3, [sp, #0x20]
  01d54	e2832038	 add         r2, r3, #0x38
  01d58	e3a03000	 mov         r3, #0
  01d5c	e5823000	 str         r3, [r2]
  01d60		 |$LN1@ProcessCom|

; 571  :     }
; 572  : 
; 573  :     DEBUGMSG(ZONE_PDD_DMA,
; 574  :         (L"-CCppiDmaChannel::ProcessCompletedTeardown: %s Ch %u\r\n",
; 575  :         szDir,
; 576  :         m_chNum));

  01d60	ea000009	 b           |$LN13@ProcessCom|
  01d64	e59d3020	 ldr         r3, [sp, #0x20]
  01d68	e283303c	 add         r3, r3, #0x3C
  01d6c	e5d33000	 ldrb        r3, [r3]
  01d70	e1a02003	 mov         r2, r3
  01d74	e59d1000	 ldr         r1, [sp]
  01d78	e59f0020	 ldr         r0, [pc, #0x20]
  01d7c	eb000000	 bl          NKDbgPrintfW
  01d80	e3a03001	 mov         r3, #1
  01d84	e58d3014	 str         r3, [sp, #0x14]
  01d88	ea000001	 b           |$LN14@ProcessCom|
  01d8c		 |$LN13@ProcessCom|
  01d8c	e3a03000	 mov         r3, #0
  01d90	e58d3014	 str         r3, [sp, #0x14]
  01d94		 |$LN14@ProcessCom|

; 577  : }

  01d94	e28dd018	 add         sp, sp, #0x18
  01d98	e89d6000	 ldmia       sp, {sp, lr}
  01d9c	e12fff1e	 bx          lr
  01da0		 |$LN18@ProcessCom|
  01da0		 |$LN19@ProcessCom|
  01da0	00000000	 DCD         |??_C@_1GO@NNNIILNJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@|
  01da4		 |$LN20@ProcessCom|
  01da4	00000000	 DCD         |??_C@_1LA@LDALGLMI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@|
  01da8		 |$LN21@ProcessCom|
  01da8	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  01dac		 |$LN22@ProcessCom|
  01dac	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01db0		 |$LN23@ProcessCom|
  01db0	00000000	 DCD         |??_C@_1IA@KGOIJOOD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@|
  01db4		 |$LN24@ProcessCom|
  01db4	00000000	 DCD         |??_C@_1GO@NICKEGOH@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt@|
  01db8		 |$LN25@ProcessCom|
  01db8	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  01dbc		 |$LN26@ProcessCom|
  01dbc	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  01dc0		 |$M40543|

			 ENDP  ; |?ProcessCompletedTeardown@CCppiDmaChannel@@IAAXPAU_TEARDOWN_DESCRIPTOR@@@Z|, CCppiDmaChannel::ProcessCompletedTeardown

	EXPORT	|??_C@_1HK@OCLALIGJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@BDDMFJN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PIPGCBCN@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_19ELAAHEEL@?$AAT?$AAR?$AAU?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?UpdateRndisMode@CCppiDmaChannel@@IAAXH@Z| ; CCppiDmaChannel::UpdateRndisMode

  00028			 AREA	 |.pdata|, PDATA
|$T40584| DCD	|$LN55@UpdateRndi|
	DCD	0x40011804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@OCLALIGJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R"
	DCB	0x0, "n", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "M", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "M", 0x0, "O"
	DCB	0x0, "D", 0x0, "E", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "V", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@BDDMFJN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R"
	DCB	0x0, "n", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "M", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, " ", 0x0, "n", 0x0, "u"
	DCB	0x0, "m", 0x0, "b", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PIPGCBCN@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, ":", 0x0, "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R"
	DCB	0x0, "n", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "M", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@| DCB "F", 0x0, "A", 0x0
	DCB	"L", 0x0, "S", 0x0, "E", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19ELAAHEEL@?$AAT?$AAR?$AAU?$AAE?$AA?$AA@| DCB "T", 0x0, "R", 0x0, "U"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  01dc0			 AREA	 |.text|, CODE, ARM

  01dc0		 |?UpdateRndisMode@CCppiDmaChannel@@IAAXH@Z| PROC ; CCppiDmaChannel::UpdateRndisMode

; 580  : {

  01dc0		 |$LN55@UpdateRndi|
  01dc0	e1a0c00d	 mov         r12, sp
  01dc4	e92d0003	 stmdb       sp!, {r0, r1}
  01dc8	e92d5000	 stmdb       sp!, {r12, lr}
  01dcc	e24dd024	 sub         sp, sp, #0x24
  01dd0		 |$M40581|

; 581  : 	volatile UINT32* pRndisReg = NULL;

  01dd0	e3a03000	 mov         r3, #0
  01dd4	e58d3004	 str         r3, [sp, #4]

; 582  :     UINT32 rndisRegVal;
; 583  :     UINT32 mode;
; 584  : 
; 585  :     DEBUGMSG(ZONE_PDD_DMA || ZONE_VERBOSE,
; 586  :         (L"+CCppiDmaChannel::UpdateRndisMode: %s\n",
; 587  :         fIsRndisMode ?
; 588  :         L"TRUE" :
; 589  :         L"FALSE"));

  01dd8	ea00000d	 b           |$LN30@UpdateRndi|
  01ddc	e59d3030	 ldr         r3, [sp, #0x30]
  01de0	e3530000	 cmp         r3, #0
  01de4	0a000002	 beq         |$LN28@UpdateRndi|
  01de8	e59f342c	 ldr         r3, [pc, #0x42C]
  01dec	e58d3010	 str         r3, [sp, #0x10]
  01df0	ea000001	 b           |$LN29@UpdateRndi|
  01df4		 |$LN28@UpdateRndi|
  01df4	e59f341c	 ldr         r3, [pc, #0x41C]
  01df8	e58d3010	 str         r3, [sp, #0x10]
  01dfc		 |$LN29@UpdateRndi|
  01dfc	e59d1010	 ldr         r1, [sp, #0x10]
  01e00	e59f040c	 ldr         r0, [pc, #0x40C]
  01e04	eb000000	 bl          NKDbgPrintfW
  01e08	e3a03001	 mov         r3, #1
  01e0c	e58d3014	 str         r3, [sp, #0x14]
  01e10	ea000001	 b           |$LN31@UpdateRndi|
  01e14		 |$LN30@UpdateRndi|
  01e14	e3a03000	 mov         r3, #0
  01e18	e58d3014	 str         r3, [sp, #0x14]
  01e1c		 |$LN31@UpdateRndi|

; 590  : 
; 591  : 
; 592  :     /* Mode
; 593  :        00: Transparent
; 594  :        01: RNDIS
; 595  :        10: CDC
; 596  :        11: Generic RNDIS
; 597  :     */
; 598  :     if  (m_fIsOut)

  01e1c	e59d302c	 ldr         r3, [sp, #0x2C]
  01e20	e2833034	 add         r3, r3, #0x34
  01e24	e5933000	 ldr         r3, [r3]
  01e28	e3530000	 cmp         r3, #0
  01e2c	0a000005	 beq         |$LN25@UpdateRndi|

; 599  : 	{
; 600  : 		pRndisReg = &m_pUsbRegs->TXMODE;

  01e30	e59d302c	 ldr         r3, [sp, #0x2C]
  01e34	e2833010	 add         r3, r3, #0x10
  01e38	e5933000	 ldr         r3, [r3]
  01e3c	e2833070	 add         r3, r3, #0x70
  01e40	e58d3004	 str         r3, [sp, #4]

; 601  : 	}
; 602  :     else

  01e44	ea000004	 b           |$LN24@UpdateRndi|
  01e48		 |$LN25@UpdateRndi|

; 603  : 	{
; 604  : 		pRndisReg = &m_pUsbRegs->RXMODE;

  01e48	e59d302c	 ldr         r3, [sp, #0x2C]
  01e4c	e2833010	 add         r3, r3, #0x10
  01e50	e5933000	 ldr         r3, [r3]
  01e54	e2833074	 add         r3, r3, #0x74
  01e58	e58d3004	 str         r3, [sp, #4]
  01e5c		 |$LN24@UpdateRndi|

; 605  : 	}
; 606  : 
; 607  : 	rndisRegVal = *pRndisReg;

  01e5c	e59d3004	 ldr         r3, [sp, #4]
  01e60	e5933000	 ldr         r3, [r3]
  01e64	e58d3008	 str         r3, [sp, #8]

; 608  :     mode = 0x3 << (m_chNum * 2);

  01e68	e59d302c	 ldr         r3, [sp, #0x2C]
  01e6c	e283303c	 add         r3, r3, #0x3C
  01e70	e5d33000	 ldrb        r3, [r3]
  01e74	e1a01003	 mov         r1, r3
  01e78	e3a03002	 mov         r3, #2
  01e7c	e0020391	 mul         r2, r1, r3
  01e80	e3a03003	 mov         r3, #3
  01e84	e1a03213	 mov         r3, r3, lsl r2
  01e88	e58d3000	 str         r3, [sp]

; 609  : 
; 610  :     if (fIsRndisMode)

  01e8c	e59d3030	 ldr         r3, [sp, #0x30]
  01e90	e3530000	 cmp         r3, #0
  01e94	0a000004	 beq         |$LN23@UpdateRndi|

; 611  : 	{
; 612  :         rndisRegVal |= mode;

  01e98	e59d2008	 ldr         r2, [sp, #8]
  01e9c	e59d3000	 ldr         r3, [sp]
  01ea0	e1823003	 orr         r3, r2, r3
  01ea4	e58d3008	 str         r3, [sp, #8]

; 613  : 	}
; 614  :     else

  01ea8	ea000004	 b           |$LN22@UpdateRndi|
  01eac		 |$LN23@UpdateRndi|

; 615  : 	{
; 616  :         rndisRegVal &= ~mode;

  01eac	e59d3000	 ldr         r3, [sp]
  01eb0	e1e02003	 mvn         r2, r3
  01eb4	e59d3008	 ldr         r3, [sp, #8]
  01eb8	e0033002	 and         r3, r3, r2
  01ebc	e58d3008	 str         r3, [sp, #8]
  01ec0		 |$LN22@UpdateRndi|

; 617  : 	}
; 618  : 
; 619  :     if (*pRndisReg != rndisRegVal)

  01ec0	e59d3004	 ldr         r3, [sp, #4]
  01ec4	e5932000	 ldr         r2, [r3]
  01ec8	e59d3008	 ldr         r3, [sp, #8]
  01ecc	e1520003	 cmp         r2, r3
  01ed0	0a000002	 beq         |$LN21@UpdateRndi|

; 620  :     {
; 621  :         *pRndisReg = rndisRegVal;

  01ed4	e59d2008	 ldr         r2, [sp, #8]
  01ed8	e59d3004	 ldr         r3, [sp, #4]
  01edc	e5832000	 str         r2, [r3]
  01ee0		 |$LN21@UpdateRndi|

; 622  :     }
; 623  : 
; 624  :     m_fIsRndisMode = fIsRndisMode;

  01ee0	e59d302c	 ldr         r3, [sp, #0x2C]
  01ee4	e28320b0	 add         r2, r3, #0xB0
  01ee8	e59d3030	 ldr         r3, [sp, #0x30]
  01eec	e5823000	 str         r3, [r2]

; 625  : 
; 626  :     // The generic RNDIS size register is only used for receive channels
; 627  :     if (fIsRndisMode && !m_fIsOut)

  01ef0	e59d3030	 ldr         r3, [sp, #0x30]
  01ef4	e3530000	 cmp         r3, #0
  01ef8	0a0000b0	 beq         |$LN20@UpdateRndi|
  01efc	e59d302c	 ldr         r3, [sp, #0x2C]
  01f00	e2833034	 add         r3, r3, #0x34
  01f04	e5933000	 ldr         r3, [r3]
  01f08	e3530000	 cmp         r3, #0
  01f0c	1a0000ab	 bne         |$LN20@UpdateRndi|

; 628  :     {
; 629  :         // Round transfer size up to multiple of EP size
; 630  :         UINT32 rndisSize = ((m_nTransferLength + m_epMaxPkt - 1) / m_epMaxPkt) * m_epMaxPkt;

  01f10	e59d302c	 ldr         r3, [sp, #0x2C]
  01f14	e2831088	 add         r1, r3, #0x88
  01f18	e59d302c	 ldr         r3, [sp, #0x2C]
  01f1c	e2833064	 add         r3, r3, #0x64
  01f20	e1d320b0	 ldrh        r2, [r3]
  01f24	e5913000	 ldr         r3, [r1]
  01f28	e0833002	 add         r3, r3, r2
  01f2c	e2431001	 sub         r1, r3, #1
  01f30	e59d302c	 ldr         r3, [sp, #0x2C]
  01f34	e2833064	 add         r3, r3, #0x64
  01f38	e1d300b0	 ldrh        r0, [r3]
  01f3c	eb000000	 bl          __rt_udiv
  01f40	e59d302c	 ldr         r3, [sp, #0x2C]
  01f44	e2833064	 add         r3, r3, #0x64
  01f48	e1d330b0	 ldrh        r3, [r3]
  01f4c	e0030390	 mul         r3, r0, r3
  01f50	e58d300c	 str         r3, [sp, #0xC]

; 631  :         if (rndisSize == 0)

  01f54	e59d300c	 ldr         r3, [sp, #0xC]
  01f58	e3530000	 cmp         r3, #0
  01f5c	1a000003	 bne         |$LN19@UpdateRndi|

; 632  :             rndisSize = m_epMaxPkt;

  01f60	e59d302c	 ldr         r3, [sp, #0x2C]
  01f64	e2833064	 add         r3, r3, #0x64
  01f68	e1d330b0	 ldrh        r3, [r3]
  01f6c	e58d300c	 str         r3, [sp, #0xC]
  01f70		 |$LN19@UpdateRndi|

; 633  : 
; 634  :         // Set the Generic RNDIS EP reg
; 635  :         switch (m_chNum)

  01f70	e59d302c	 ldr         r3, [sp, #0x2C]
  01f74	e283303c	 add         r3, r3, #0x3C
  01f78	e5d33000	 ldrb        r3, [r3]
  01f7c	e58d3018	 str         r3, [sp, #0x18]
  01f80	e59d3018	 ldr         r3, [sp, #0x18]
  01f84	e353000e	 cmp         r3, #0xE
  01f88	8a00007c	 bhi         |$LN1@UpdateRndi|
  01f8c	e59d2018	 ldr         r2, [sp, #0x18]
  01f90	e1a03102	 mov         r3, r2, lsl #2
  01f94	e083300f	 add         r3, r3, pc
  01f98	e5933004	 ldr         r3, [r3, #4]
  01f9c	e08ff003	 add         pc, pc, r3
  01fa0		 |$LN37@UpdateRndi|
  01fa0		 |$LN36@UpdateRndi|
  01fa0		 |$LN38@UpdateRndi|
  01fa0	00000038	 DCD         0x38
  01fa4		 |$LN39@UpdateRndi|
  01fa4	00000054	 DCD         0x54
  01fa8		 |$LN40@UpdateRndi|
  01fa8	00000070	 DCD         0x70
  01fac		 |$LN41@UpdateRndi|
  01fac	0000008c	 DCD         0x8c
  01fb0		 |$LN42@UpdateRndi|
  01fb0	000000a8	 DCD         0xa8
  01fb4		 |$LN43@UpdateRndi|
  01fb4	000000c4	 DCD         0xc4
  01fb8		 |$LN44@UpdateRndi|
  01fb8	000000e0	 DCD         0xe0
  01fbc		 |$LN45@UpdateRndi|
  01fbc	000000fc	 DCD         0xfc
  01fc0		 |$LN46@UpdateRndi|
  01fc0	00000118	 DCD         0x118
  01fc4		 |$LN47@UpdateRndi|
  01fc4	00000134	 DCD         0x134
  01fc8		 |$LN48@UpdateRndi|
  01fc8	00000150	 DCD         0x150
  01fcc		 |$LN49@UpdateRndi|
  01fcc	0000016c	 DCD         0x16c
  01fd0		 |$LN50@UpdateRndi|
  01fd0	00000188	 DCD         0x188
  01fd4		 |$LN51@UpdateRndi|
  01fd4	000001a4	 DCD         0x1a4
  01fd8		 |$LN52@UpdateRndi|
  01fd8	000001c0	 DCD         0x1c0
  01fdc		 |$LN16@UpdateRndi|

; 636  :         {
; 637  :         case 0  : m_pUsbRegs->GENRNDISSZ1  = rndisSize; break;

  01fdc	e59d302c	 ldr         r3, [sp, #0x2C]
  01fe0	e2833010	 add         r3, r3, #0x10
  01fe4	e5933000	 ldr         r3, [r3]
  01fe8	e2832080	 add         r2, r3, #0x80
  01fec	e59d300c	 ldr         r3, [sp, #0xC]
  01ff0	e5823000	 str         r3, [r2]
  01ff4	ea000071	 b           |$LN17@UpdateRndi|
  01ff8		 |$LN15@UpdateRndi|

; 638  :         case 1  : m_pUsbRegs->GENRNDISSZ2  = rndisSize; break;

  01ff8	e59d302c	 ldr         r3, [sp, #0x2C]
  01ffc	e2833010	 add         r3, r3, #0x10
  02000	e5933000	 ldr         r3, [r3]
  02004	e2832084	 add         r2, r3, #0x84
  02008	e59d300c	 ldr         r3, [sp, #0xC]
  0200c	e5823000	 str         r3, [r2]
  02010	ea00006a	 b           |$LN17@UpdateRndi|
  02014		 |$LN14@UpdateRndi|

; 639  :         case 2  : m_pUsbRegs->GENRNDISSZ3  = rndisSize; break;

  02014	e59d302c	 ldr         r3, [sp, #0x2C]
  02018	e2833010	 add         r3, r3, #0x10
  0201c	e5933000	 ldr         r3, [r3]
  02020	e2832088	 add         r2, r3, #0x88
  02024	e59d300c	 ldr         r3, [sp, #0xC]
  02028	e5823000	 str         r3, [r2]
  0202c	ea000063	 b           |$LN17@UpdateRndi|
  02030		 |$LN13@UpdateRndi|

; 640  :         case 3  : m_pUsbRegs->GENRNDISSZ4  = rndisSize; break;

  02030	e59d302c	 ldr         r3, [sp, #0x2C]
  02034	e2833010	 add         r3, r3, #0x10
  02038	e5933000	 ldr         r3, [r3]
  0203c	e283208c	 add         r2, r3, #0x8C
  02040	e59d300c	 ldr         r3, [sp, #0xC]
  02044	e5823000	 str         r3, [r2]
  02048	ea00005c	 b           |$LN17@UpdateRndi|
  0204c		 |$LN12@UpdateRndi|

; 641  :         case 4  : m_pUsbRegs->GENRNDISSZ5  = rndisSize; break;

  0204c	e59d302c	 ldr         r3, [sp, #0x2C]
  02050	e2833010	 add         r3, r3, #0x10
  02054	e5933000	 ldr         r3, [r3]
  02058	e2832090	 add         r2, r3, #0x90
  0205c	e59d300c	 ldr         r3, [sp, #0xC]
  02060	e5823000	 str         r3, [r2]
  02064	ea000055	 b           |$LN17@UpdateRndi|
  02068		 |$LN11@UpdateRndi|

; 642  :         case 5  : m_pUsbRegs->GENRNDISSZ6  = rndisSize; break;

  02068	e59d302c	 ldr         r3, [sp, #0x2C]
  0206c	e2833010	 add         r3, r3, #0x10
  02070	e5933000	 ldr         r3, [r3]
  02074	e2832094	 add         r2, r3, #0x94
  02078	e59d300c	 ldr         r3, [sp, #0xC]
  0207c	e5823000	 str         r3, [r2]
  02080	ea00004e	 b           |$LN17@UpdateRndi|
  02084		 |$LN10@UpdateRndi|

; 643  :         case 6  : m_pUsbRegs->GENRNDISSZ7  = rndisSize; break;

  02084	e59d302c	 ldr         r3, [sp, #0x2C]
  02088	e2833010	 add         r3, r3, #0x10
  0208c	e5933000	 ldr         r3, [r3]
  02090	e2832098	 add         r2, r3, #0x98
  02094	e59d300c	 ldr         r3, [sp, #0xC]
  02098	e5823000	 str         r3, [r2]
  0209c	ea000047	 b           |$LN17@UpdateRndi|
  020a0		 |$LN9@UpdateRndi|

; 644  :         case 7  : m_pUsbRegs->GENRNDISSZ8  = rndisSize; break;

  020a0	e59d302c	 ldr         r3, [sp, #0x2C]
  020a4	e2833010	 add         r3, r3, #0x10
  020a8	e5933000	 ldr         r3, [r3]
  020ac	e283209c	 add         r2, r3, #0x9C
  020b0	e59d300c	 ldr         r3, [sp, #0xC]
  020b4	e5823000	 str         r3, [r2]
  020b8	ea000040	 b           |$LN17@UpdateRndi|
  020bc		 |$LN8@UpdateRndi|

; 645  :         case 8  : m_pUsbRegs->GENRNDISSZ9  = rndisSize; break;

  020bc	e59d302c	 ldr         r3, [sp, #0x2C]
  020c0	e2833010	 add         r3, r3, #0x10
  020c4	e5933000	 ldr         r3, [r3]
  020c8	e28320a0	 add         r2, r3, #0xA0
  020cc	e59d300c	 ldr         r3, [sp, #0xC]
  020d0	e5823000	 str         r3, [r2]
  020d4	ea000039	 b           |$LN17@UpdateRndi|
  020d8		 |$LN7@UpdateRndi|

; 646  :         case 9  : m_pUsbRegs->GENRNDISSZ10 = rndisSize; break;

  020d8	e59d302c	 ldr         r3, [sp, #0x2C]
  020dc	e2833010	 add         r3, r3, #0x10
  020e0	e5933000	 ldr         r3, [r3]
  020e4	e28320a4	 add         r2, r3, #0xA4
  020e8	e59d300c	 ldr         r3, [sp, #0xC]
  020ec	e5823000	 str         r3, [r2]
  020f0	ea000032	 b           |$LN17@UpdateRndi|
  020f4		 |$LN6@UpdateRndi|

; 647  :         case 10 : m_pUsbRegs->GENRNDISSZ11 = rndisSize; break;

  020f4	e59d302c	 ldr         r3, [sp, #0x2C]
  020f8	e2833010	 add         r3, r3, #0x10
  020fc	e5933000	 ldr         r3, [r3]
  02100	e28320a8	 add         r2, r3, #0xA8
  02104	e59d300c	 ldr         r3, [sp, #0xC]
  02108	e5823000	 str         r3, [r2]
  0210c	ea00002b	 b           |$LN17@UpdateRndi|
  02110		 |$LN5@UpdateRndi|

; 648  :         case 11 : m_pUsbRegs->GENRNDISSZ12 = rndisSize; break;

  02110	e59d302c	 ldr         r3, [sp, #0x2C]
  02114	e2833010	 add         r3, r3, #0x10
  02118	e5933000	 ldr         r3, [r3]
  0211c	e28320ac	 add         r2, r3, #0xAC
  02120	e59d300c	 ldr         r3, [sp, #0xC]
  02124	e5823000	 str         r3, [r2]
  02128	ea000024	 b           |$LN17@UpdateRndi|
  0212c		 |$LN4@UpdateRndi|

; 649  :         case 12 : m_pUsbRegs->GENRNDISSZ13 = rndisSize; break;

  0212c	e59d302c	 ldr         r3, [sp, #0x2C]
  02130	e2833010	 add         r3, r3, #0x10
  02134	e5933000	 ldr         r3, [r3]
  02138	e28320b0	 add         r2, r3, #0xB0
  0213c	e59d300c	 ldr         r3, [sp, #0xC]
  02140	e5823000	 str         r3, [r2]
  02144	ea00001d	 b           |$LN17@UpdateRndi|
  02148		 |$LN3@UpdateRndi|

; 650  :         case 13 : m_pUsbRegs->GENRNDISSZ14 = rndisSize; break;

  02148	e59d302c	 ldr         r3, [sp, #0x2C]
  0214c	e2833010	 add         r3, r3, #0x10
  02150	e5933000	 ldr         r3, [r3]
  02154	e28320b4	 add         r2, r3, #0xB4
  02158	e59d300c	 ldr         r3, [sp, #0xC]
  0215c	e5823000	 str         r3, [r2]
  02160	ea000016	 b           |$LN17@UpdateRndi|
  02164		 |$LN2@UpdateRndi|

; 651  :         case 14 : m_pUsbRegs->GENRNDISSZ15 = rndisSize; break;

  02164	e59d302c	 ldr         r3, [sp, #0x2C]
  02168	e2833010	 add         r3, r3, #0x10
  0216c	e5933000	 ldr         r3, [r3]
  02170	e28320b8	 add         r2, r3, #0xB8
  02174	e59d300c	 ldr         r3, [sp, #0xC]
  02178	e5823000	 str         r3, [r2]
  0217c	ea00000f	 b           |$LN17@UpdateRndi|
  02180		 |$LN1@UpdateRndi|

; 652  :         default:
; 653  :             ERRORMSG(TRUE,
; 654  :                 (L" CCppiDmaChannel::UpdateRndisMode: ERROR - Invalid channel number %u!\r\n",
; 655  :                 m_chNum));

  02180	e3a02c02	 mov         r2, #2, 24
  02184	e382208f	 orr         r2, r2, #0x8F
  02188	e59f1080	 ldr         r1, [pc, #0x80]
  0218c	e59f0078	 ldr         r0, [pc, #0x78]
  02190	eb000000	 bl          NKDbgPrintfW
  02194	e59d302c	 ldr         r3, [sp, #0x2C]
  02198	e283303c	 add         r3, r3, #0x3C
  0219c	e5d33000	 ldrb        r3, [r3]
  021a0	e1a01003	 mov         r1, r3
  021a4	e59f005c	 ldr         r0, [pc, #0x5C]
  021a8	eb000000	 bl          NKDbgPrintfW
  021ac	e3a03001	 mov         r3, #1
  021b0	e58d301c	 str         r3, [sp, #0x1C]
  021b4	ea000001	 b           |$LN33@UpdateRndi|
  021b8	e3a03000	 mov         r3, #0
  021bc	e58d301c	 str         r3, [sp, #0x1C]
  021c0		 |$LN33@UpdateRndi|
  021c0		 |$LN17@UpdateRndi|
  021c0		 |$LN20@UpdateRndi|

; 656  :             break;
; 657  :         }
; 658  :     }
; 659  : 
; 660  :     DEBUGMSG(ZONE_PDD_DMA || ZONE_VERBOSE,
; 661  :         (L"-CCppiDmaChannel::UpdateRndisMode: Ch %u MODE RegVal 0x%08x\n",
; 662  :         m_chNum,
; 663  :         *pRndisReg));

  021c0	ea00000a	 b           |$LN34@UpdateRndi|
  021c4	e59d3004	 ldr         r3, [sp, #4]
  021c8	e5932000	 ldr         r2, [r3]
  021cc	e59d302c	 ldr         r3, [sp, #0x2C]
  021d0	e283303c	 add         r3, r3, #0x3C
  021d4	e5d33000	 ldrb        r3, [r3]
  021d8	e1a01003	 mov         r1, r3
  021dc	e59f0020	 ldr         r0, [pc, #0x20]
  021e0	eb000000	 bl          NKDbgPrintfW
  021e4	e3a03001	 mov         r3, #1
  021e8	e58d3020	 str         r3, [sp, #0x20]
  021ec	ea000001	 b           |$LN35@UpdateRndi|
  021f0		 |$LN34@UpdateRndi|
  021f0	e3a03000	 mov         r3, #0
  021f4	e58d3020	 str         r3, [sp, #0x20]
  021f8		 |$LN35@UpdateRndi|

; 664  : }

  021f8	e28dd024	 add         sp, sp, #0x24
  021fc	e89d6000	 ldmia       sp, {sp, lr}
  02200	e12fff1e	 bx          lr
  02204		 |$LN56@UpdateRndi|
  02204		 |$LN57@UpdateRndi|
  02204	00000000	 DCD         |??_C@_1HK@OCLALIGJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@|
  02208		 |$LN58@UpdateRndi|
  02208	00000000	 DCD         |??_C@_1JA@BDDMFJN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@|
  0220c		 |$LN59@UpdateRndi|
  0220c	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  02210		 |$LN60@UpdateRndi|
  02210	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02214		 |$LN61@UpdateRndi|
  02214	00000000	 DCD         |??_C@_1EO@PIPGCBCN@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAn?$AAd?$AAi?$AAs?$AAM?$AAo?$AAd@|
  02218		 |$LN62@UpdateRndi|
  02218	00000000	 DCD         |??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@|
  0221c		 |$LN63@UpdateRndi|
  0221c	00000000	 DCD         |??_C@_19ELAAHEEL@?$AAT?$AAR?$AAU?$AAE?$AA?$AA@|
  02220		 |$M40582|

			 ENDP  ; |?UpdateRndisMode@CCppiDmaChannel@@IAAXH@Z|, CCppiDmaChannel::UpdateRndisMode

	EXPORT	|?KickCompletionCallback@CCppiDmaChannel@@IAAXXZ| ; CCppiDmaChannel::KickCompletionCallback
	IMPORT	|USBCDMA_KickCompletionCallback|

  00030			 AREA	 |.pdata|, PDATA
|$T40597| DCD	|$LN5@KickComple|
	DCD	0x40000b03
; Function compile flags: /Odtp

  02220			 AREA	 |.text|, CODE, ARM

  02220		 |?KickCompletionCallback@CCppiDmaChannel@@IAAXXZ| PROC ; CCppiDmaChannel::KickCompletionCallback

; 667  : {

  02220		 |$LN5@KickComple|
  02220	e1a0c00d	 mov         r12, sp
  02224	e92d0001	 stmdb       sp!, {r0}
  02228	e92d5000	 stmdb       sp!, {r12, lr}
  0222c		 |$M40594|

; 668  :     USBCDMA_KickCompletionCallback(m_pController->m_hUsbCdma);

  0222c	e59d3008	 ldr         r3, [sp, #8]
  02230	e283300c	 add         r3, r3, #0xC
  02234	e5933000	 ldr         r3, [r3]
  02238	e2833020	 add         r3, r3, #0x20
  0223c	e5930000	 ldr         r0, [r3]
  02240	eb000000	 bl          USBCDMA_KickCompletionCallback

; 669  : }

  02244	e89d6000	 ldmia       sp, {sp, lr}
  02248	e12fff1e	 bx          lr
  0224c		 |$M40595|

			 ENDP  ; |?KickCompletionCallback@CCppiDmaChannel@@IAAXXZ|, CCppiDmaChannel::KickCompletionCallback


  00038			 AREA	 |.pdata|, PDATA
|$T40602| DCD	|$LN5@QueuePush|
	DCD	0x40000d03
; Function compile flags: /Odtp

  0224c			 AREA	 |.text|, CODE, ARM

  0224c		 |?QueuePush@CCppiDmaChannel@@IAAXPAX@Z| PROC ; CCppiDmaChannel::QueuePush

; 672  : {

  0224c		 |$LN5@QueuePush|
  0224c	e1a0c00d	 mov         r12, sp
  02250	e92d0003	 stmdb       sp!, {r0, r1}
  02254	e92d5000	 stmdb       sp!, {r12, lr}
  02258		 |$M40599|

; 673  :     m_pController->QueuePush(m_qNum, pD);

  02258	e59d200c	 ldr         r2, [sp, #0xC]
  0225c	e59d3008	 ldr         r3, [sp, #8]
  02260	e283303e	 add         r3, r3, #0x3E
  02264	e5d31000	 ldrb        r1, [r3]
  02268	e59d3008	 ldr         r3, [sp, #8]
  0226c	e283300c	 add         r3, r3, #0xC
  02270	e5930000	 ldr         r0, [r3]
  02274	eb000000	 bl          |?QueuePush@CCppiDmaController@@IAAXEPAX@Z|

; 674  : }

  02278	e89d6000	 ldmia       sp, {sp, lr}
  0227c	e12fff1e	 bx          lr
  02280		 |$M40600|

			 ENDP  ; |?QueuePush@CCppiDmaChannel@@IAAXPAX@Z|, CCppiDmaChannel::QueuePush

	EXPORT	|?QueuePop@CCppiDmaController@@IAAPAXE@Z| ; CCppiDmaController::QueuePop
	EXPORT	|?QueuePop@CCppiDmaChannel@@IAAPAXXZ|	; CCppiDmaChannel::QueuePop

  00040			 AREA	 |.pdata|, PDATA
|$T40608| DCD	|$LN5@QueuePop|
	DCD	0x40001204
; Function compile flags: /Odtp

  02280			 AREA	 |.text|, CODE, ARM

  02280		 |?QueuePop@CCppiDmaChannel@@IAAPAXXZ| PROC ; CCppiDmaChannel::QueuePop

; 677  : {

  02280		 |$LN5@QueuePop|
  02280	e1a0c00d	 mov         r12, sp
  02284	e92d0001	 stmdb       sp!, {r0}
  02288	e92d5000	 stmdb       sp!, {r12, lr}
  0228c	e24dd008	 sub         sp, sp, #8
  02290		 |$M40605|

; 678  :     return m_pController->QueuePop(m_qNum);

  02290	e59d3010	 ldr         r3, [sp, #0x10]
  02294	e283303e	 add         r3, r3, #0x3E
  02298	e5d31000	 ldrb        r1, [r3]
  0229c	e59d3010	 ldr         r3, [sp, #0x10]
  022a0	e283300c	 add         r3, r3, #0xC
  022a4	e5930000	 ldr         r0, [r3]
  022a8	eb000000	 bl          |?QueuePop@CCppiDmaController@@IAAPAXE@Z|
  022ac	e58d0004	 str         r0, [sp, #4]
  022b0	e59d3004	 ldr         r3, [sp, #4]
  022b4	e58d3000	 str         r3, [sp]

; 679  : }

  022b8	e59d0000	 ldr         r0, [sp]
  022bc	e28dd008	 add         sp, sp, #8
  022c0	e89d6000	 ldmia       sp, {sp, lr}
  022c4	e12fff1e	 bx          lr
  022c8		 |$M40606|

			 ENDP  ; |?QueuePop@CCppiDmaChannel@@IAAPAXXZ|, CCppiDmaChannel::QueuePop

	EXPORT	|??_C@_1CK@HFMNAHDC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@FLKBBNE@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_7CCppiDmaRxChannel@@6B@| [ DATA ]	; CCppiDmaRxChannel::`vftable'
	EXPORT	|??0CCppiDmaRxChannel@@QAA@PAVCCppiDmaController@@EP6AXPAVCCppiDmaChannel@@IIIIPAX2@Z@Z| ; CCppiDmaRxChannel::CCppiDmaRxChannel
	EXPORT	|?IssueTransfer@CCppiDmaRxChannel@@UAAHEEEGPAXIIIPAIPAK2I00@Z| ; CCppiDmaRxChannel::IssueTransfer
	EXPORT	|?CancelTransfer@CCppiDmaRxChannel@@UAAHXZ| ; CCppiDmaRxChannel::CancelTransfer
	EXPORT	|?ValidateTransferState@CCppiDmaRxChannel@@UAAHXZ| ; CCppiDmaRxChannel::ValidateTransferState
	EXPORT	|?ProcessCompletedPacket@CCppiDmaRxChannel@@UAAXPAU_HOST_DESCRIPTOR@@@Z| ; CCppiDmaRxChannel::ProcessCompletedPacket
	IMPORT	|USBCDMA_ConfigureScheduleRx|
	IMPORT	|??_ECCppiDmaRxChannel@@UAAPAXI@Z|, WEAK |??_GCCppiDmaRxChannel@@UAAPAXI@Z| ; CCppiDmaRxChannel::`vector deleting destructor', CCppiDmaRxChannel::`scalar deleting destructor'

  00048			 AREA	 |.pdata|, PDATA
|$T40618| DCD	|$LN9@CCppiDmaRx|
	DCD	0x40004404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HFMNAHDC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@FLKBBNE@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CCppiDmaRxChannel@@6B@| DCD |??_ECCppiDmaRxChannel@@UAAPAXI@Z| ; CCppiDmaRxChannel::`vftable'
	DCD	|?IssueTransfer@CCppiDmaRxChannel@@UAAHEEEGPAXIIIPAIPAK2I00@Z|
	DCD	|?CancelTransfer@CCppiDmaRxChannel@@UAAHXZ|
	DCD	|?ValidateTransferState@CCppiDmaRxChannel@@UAAHXZ|
	DCD	|?ProcessCompletedPacket@CCppiDmaRxChannel@@UAAXPAU_HOST_DESCRIPTOR@@@Z|
; Function compile flags: /Odtp

  022c8			 AREA	 |.text|, CODE, ARM

  022c8		 |??0CCppiDmaRxChannel@@QAA@PAVCCppiDmaController@@EP6AXPAVCCppiDmaChannel@@IIIIPAX2@Z@Z| PROC ; CCppiDmaRxChannel::CCppiDmaRxChannel

; 711  : {

  022c8		 |$LN9@CCppiDmaRx|
  022c8	e1a0c00d	 mov         r12, sp
  022cc	e92d000f	 stmdb       sp!, {r0 - r3}
  022d0	e92d5000	 stmdb       sp!, {r12, lr}
  022d4	e24dd010	 sub         sp, sp, #0x10
  022d8		 |$M40615|
  022d8	e59d3024	 ldr         r3, [sp, #0x24]
  022dc	e5dd2020	 ldrb        r2, [sp, #0x20]
  022e0	e59d101c	 ldr         r1, [sp, #0x1C]
  022e4	e59d0018	 ldr         r0, [sp, #0x18]
  022e8	eb000000	 bl          |??0CCppiDmaChannel@@QAA@PAVCCppiDmaController@@EP6AXPAV0@IIIIPAX2@Z@Z|
  022ec	e58d0004	 str         r0, [sp, #4]
  022f0	e59f20dc	 ldr         r2, [pc, #0xDC]
  022f4	e59d3018	 ldr         r3, [sp, #0x18]
  022f8	e5832000	 str         r2, [r3]

; 712  :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 713  :         (L"+CCppiDmaRxChannel\r\n"));

  022fc	e59f00cc	 ldr         r0, [pc, #0xCC]
  02300	eb000000	 bl          NKDbgPrintfW
  02304	e3a03001	 mov         r3, #1
  02308	e58d3008	 str         r3, [sp, #8]
  0230c	ea000001	 b           |$LN4@CCppiDmaRx|
  02310	e3a03000	 mov         r3, #0
  02314	e58d3008	 str         r3, [sp, #8]
  02318		 |$LN4@CCppiDmaRx|

; 714  : 
; 715  :     m_fIsOut = FALSE;

  02318	e59d3018	 ldr         r3, [sp, #0x18]
  0231c	e2832034	 add         r2, r3, #0x34
  02320	e3a03000	 mov         r3, #0
  02324	e5823000	 str         r3, [r2]

; 716  :     m_qNum = pController->m_nRxQueueOffset + m_chNum;

  02328	e59d301c	 ldr         r3, [sp, #0x1C]
  0232c	e2833029	 add         r3, r3, #0x29
  02330	e5d33000	 ldrb        r3, [r3]
  02334	e1a02003	 mov         r2, r3
  02338	e59d3018	 ldr         r3, [sp, #0x18]
  0233c	e283303c	 add         r3, r3, #0x3C
  02340	e5d33000	 ldrb        r3, [r3]
  02344	e0823003	 add         r3, r2, r3
  02348	e20320ff	 and         r2, r3, #0xFF
  0234c	e59d3018	 ldr         r3, [sp, #0x18]
  02350	e283303e	 add         r3, r3, #0x3E
  02354	e5c32000	 strb        r2, [r3]

; 717  : 
; 718  :     // Disable EP interrupt
; 719  :     m_pUsbRegs->EP_INTMSKCLRR = (1 << (m_epNum + USB_OTG_RXINT_SHIFT));

  02358	e59d3018	 ldr         r3, [sp, #0x18]
  0235c	e283303d	 add         r3, r3, #0x3D
  02360	e5d33000	 ldrb        r3, [r3]
  02364	e2832010	 add         r2, r3, #0x10
  02368	e3a03001	 mov         r3, #1
  0236c	e1a02213	 mov         r2, r3, lsl r2
  02370	e59d3018	 ldr         r3, [sp, #0x18]
  02374	e2833010	 add         r3, r3, #0x10
  02378	e5933000	 ldr         r3, [r3]
  0237c	e2833034	 add         r3, r3, #0x34
  02380	e5832000	 str         r2, [r3]

; 720  : 
; 721  :     // Enable Rx for this channel in the DMA scheduler
; 722  :     USBCDMA_ConfigureScheduleRx(m_chNum, TRUE);

  02384	e3a01001	 mov         r1, #1
  02388	e59d3018	 ldr         r3, [sp, #0x18]
  0238c	e283303c	 add         r3, r3, #0x3C
  02390	e5d30000	 ldrb        r0, [r3]
  02394	eb000000	 bl          USBCDMA_ConfigureScheduleRx

; 723  : 
; 724  :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 725  :         (L"-CCppiDmaRxChannel\r\n"));

  02398	e59f002c	 ldr         r0, [pc, #0x2C]
  0239c	eb000000	 bl          NKDbgPrintfW
  023a0	e3a03001	 mov         r3, #1
  023a4	e58d300c	 str         r3, [sp, #0xC]
  023a8	ea000001	 b           |$LN6@CCppiDmaRx|
  023ac	e3a03000	 mov         r3, #0
  023b0	e58d300c	 str         r3, [sp, #0xC]
  023b4		 |$LN6@CCppiDmaRx|

; 726  : }

  023b4	e59d3018	 ldr         r3, [sp, #0x18]
  023b8	e58d3000	 str         r3, [sp]
  023bc	e59d0000	 ldr         r0, [sp]
  023c0	e28dd010	 add         sp, sp, #0x10
  023c4	e89d6000	 ldmia       sp, {sp, lr}
  023c8	e12fff1e	 bx          lr
  023cc		 |$LN10@CCppiDmaRx|
  023cc		 |$LN11@CCppiDmaRx|
  023cc	00000000	 DCD         |??_C@_1CK@HFMNAHDC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  023d0		 |$LN12@CCppiDmaRx|
  023d0	00000000	 DCD         |??_C@_1CK@FLKBBNE@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  023d4		 |$LN13@CCppiDmaRx|
  023d4	00000000	 DCD         |??_7CCppiDmaRxChannel@@6B@|
  023d8		 |$M40616|

			 ENDP  ; |??0CCppiDmaRxChannel@@QAA@PAVCCppiDmaController@@EP6AXPAVCCppiDmaChannel@@IIIIPAX2@Z@Z|, CCppiDmaRxChannel::CCppiDmaRxChannel

	EXPORT	|??1CCppiDmaRxChannel@@UAA@XZ|		; CCppiDmaRxChannel::~CCppiDmaRxChannel

  00000			 AREA	 |.pdata|, PDATA
|$T40628| DCD	|$LN6@scalar@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCCppiDmaRxChannel@@UAAPAXI@Z| PROC ; CCppiDmaRxChannel::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M40625|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CCppiDmaRxChannel@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@2|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@2|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M40626|

			 ENDP  ; |??_GCCppiDmaRxChannel@@UAAPAXI@Z|, CCppiDmaRxChannel::`scalar deleting destructor'

	EXPORT	|??_C@_1CM@MEEKJMAA@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@CAGJLNPP@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE@| [ DATA ] ; `string'

  00050			 AREA	 |.pdata|, PDATA
|$T40641| DCD	|$LN11@CCppiDmaRx@2|
	DCD	0x40005204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@MEEKJMAA@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "~", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C"
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@CAGJLNPP@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE@| DCB "+"
	DCB	0x0, "~", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C"
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C"
	DCB	0x0, "h", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  023d8			 AREA	 |.text|, CODE, ARM

  023d8		 |??1CCppiDmaRxChannel@@UAA@XZ| PROC	; CCppiDmaRxChannel::~CCppiDmaRxChannel

; 730  : {

  023d8		 |$LN11@CCppiDmaRx@2|
  023d8	e1a0c00d	 mov         r12, sp
  023dc	e92d0001	 stmdb       sp!, {r0}
  023e0	e92d5000	 stmdb       sp!, {r12, lr}
  023e4	e24dd010	 sub         sp, sp, #0x10
  023e8		 |$M40638|
  023e8	e59f212c	 ldr         r2, [pc, #0x12C]
  023ec	e59d3018	 ldr         r3, [sp, #0x18]
  023f0	e5832000	 str         r2, [r3]

; 731  :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 732  :         (L"+~CCppiDmaRxChannel: %s Ch %u, EP %u\r\n",
; 733  :         IsOut() ? L"OUT" : L"IN",
; 734  :         m_chNum,
; 735  :         m_epNum));

  023f4	e59d0018	 ldr         r0, [sp, #0x18]
  023f8	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  023fc	e58d0000	 str         r0, [sp]
  02400	e59d3000	 ldr         r3, [sp]
  02404	e3530000	 cmp         r3, #0
  02408	0a000002	 beq         |$LN3@CCppiDmaRx@2|
  0240c	e59f3104	 ldr         r3, [pc, #0x104]
  02410	e58d3004	 str         r3, [sp, #4]
  02414	ea000001	 b           |$LN4@CCppiDmaRx@2|
  02418		 |$LN3@CCppiDmaRx@2|
  02418	e59f30f4	 ldr         r3, [pc, #0xF4]
  0241c	e58d3004	 str         r3, [sp, #4]
  02420		 |$LN4@CCppiDmaRx@2|
  02420	e59d3018	 ldr         r3, [sp, #0x18]
  02424	e283303d	 add         r3, r3, #0x3D
  02428	e5d33000	 ldrb        r3, [r3]
  0242c	e59d2018	 ldr         r2, [sp, #0x18]
  02430	e282203c	 add         r2, r2, #0x3C
  02434	e5d22000	 ldrb        r2, [r2]
  02438	e59d1004	 ldr         r1, [sp, #4]
  0243c	e59f00cc	 ldr         r0, [pc, #0xCC]
  02440	eb000000	 bl          NKDbgPrintfW
  02444	e3a03001	 mov         r3, #1
  02448	e58d3008	 str         r3, [sp, #8]
  0244c	ea000001	 b           |$LN6@CCppiDmaRx@2|
  02450	e3a03000	 mov         r3, #0
  02454	e58d3008	 str         r3, [sp, #8]
  02458		 |$LN6@CCppiDmaRx@2|

; 736  : 
; 737  :     // Disable Rx for this channel in the DMA scheduler
; 738  :     USBCDMA_ConfigureScheduleRx(m_chNum, FALSE);

  02458	e3a01000	 mov         r1, #0
  0245c	e59d3018	 ldr         r3, [sp, #0x18]
  02460	e283303c	 add         r3, r3, #0x3C
  02464	e5d30000	 ldrb        r0, [r3]
  02468	eb000000	 bl          USBCDMA_ConfigureScheduleRx

; 739  : 
; 740  :     // Flush FIFO and clear status bits
; 741  :     m_pUsbEpcsrRegs->RXCSR = 
; 742  :         MGC_M_RXCSR_FLUSHFIFO |
; 743  :         MGC_M_RXCSR_H_RXSTALL |
; 744  :         MGC_M_RXCSR_H_ERROR |
; 745  :         MGC_M_RXCSR_DATAERROR |
; 746  :         MGC_M_RXCSR_RXPKTRDY;

  0246c	e59d3018	 ldr         r3, [sp, #0x18]
  02470	e2833014	 add         r3, r3, #0x14
  02474	e5933000	 ldr         r3, [r3]
  02478	e2832006	 add         r2, r3, #6
  0247c	e3a0305d	 mov         r3, #0x5D
  02480	e1c230b0	 strh        r3, [r2]

; 747  : 
; 748  :     // Clear EP interrupt
; 749  :     m_pUsbRegs->EP_INTCLRR = 1 << (m_epNum + USB_OTG_RXINT_SHIFT);

  02484	e59d3018	 ldr         r3, [sp, #0x18]
  02488	e283303d	 add         r3, r3, #0x3D
  0248c	e5d33000	 ldrb        r3, [r3]
  02490	e2832010	 add         r2, r3, #0x10
  02494	e3a03001	 mov         r3, #1
  02498	e1a02213	 mov         r2, r3, lsl r2
  0249c	e59d3018	 ldr         r3, [sp, #0x18]
  024a0	e2833010	 add         r3, r3, #0x10
  024a4	e5933000	 ldr         r3, [r3]
  024a8	e2833028	 add         r3, r3, #0x28
  024ac	e5832000	 str         r2, [r3]

; 750  : 
; 751  :     // Restore EP interrupt
; 752  :     m_pUsbRegs->EP_INTMSKSETR = 1 << (m_epNum + USB_OTG_RXINT_SHIFT);

  024b0	e59d3018	 ldr         r3, [sp, #0x18]
  024b4	e283303d	 add         r3, r3, #0x3D
  024b8	e5d33000	 ldrb        r3, [r3]
  024bc	e2832010	 add         r2, r3, #0x10
  024c0	e3a03001	 mov         r3, #1
  024c4	e1a02213	 mov         r2, r3, lsl r2
  024c8	e59d3018	 ldr         r3, [sp, #0x18]
  024cc	e2833010	 add         r3, r3, #0x10
  024d0	e5933000	 ldr         r3, [r3]
  024d4	e2833030	 add         r3, r3, #0x30
  024d8	e5832000	 str         r2, [r3]

; 753  : 
; 754  :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 755  :         (L"+~CCppiDmaRxChannel\r\n"));

  024dc	e59f0028	 ldr         r0, [pc, #0x28]
  024e0	eb000000	 bl          NKDbgPrintfW
  024e4	e3a03001	 mov         r3, #1
  024e8	e58d300c	 str         r3, [sp, #0xC]
  024ec	ea000001	 b           |$LN8@CCppiDmaRx@2|
  024f0	e3a03000	 mov         r3, #0
  024f4	e58d300c	 str         r3, [sp, #0xC]
  024f8		 |$LN8@CCppiDmaRx@2|

; 756  : }

  024f8	e59d0018	 ldr         r0, [sp, #0x18]
  024fc	eb000000	 bl          |??1CCppiDmaChannel@@UAA@XZ|
  02500	e28dd010	 add         sp, sp, #0x10
  02504	e89d6000	 ldmia       sp, {sp, lr}
  02508	e12fff1e	 bx          lr
  0250c		 |$LN12@CCppiDmaRx@2|
  0250c		 |$LN13@CCppiDmaRx@2|
  0250c	00000000	 DCD         |??_C@_1CM@MEEKJMAA@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  02510		 |$LN14@CCppiDmaRx@2|
  02510	00000000	 DCD         |??_C@_1EO@CAGJLNPP@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE@|
  02514		 |$LN15@CCppiDmaRx@2|
  02514	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  02518		 |$LN16@CCppiDmaRx@2|
  02518	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  0251c		 |$LN17@CCppiDmaRx@2|
  0251c	00000000	 DCD         |??_7CCppiDmaRxChannel@@6B@|
  02520		 |$M40639|

			 ENDP  ; |??1CCppiDmaRxChannel@@UAA@XZ|, CCppiDmaRxChannel::~CCppiDmaRxChannel

	EXPORT	|??_C@_1EI@KHAAGHJJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|?ChUnlock@CCppiDmaChannel@@IAAXXZ|	; CCppiDmaChannel::ChUnlock
	EXPORT	|?ScheduleTransfer@CCppiDmaRxChannel@@QAAHXZ| ; CCppiDmaRxChannel::ScheduleTransfer
	EXPORT	|??_C@_1JE@LHIHPGIG@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@PIMJNCCC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@CPFBCBPM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|?ChLock@CCppiDmaChannel@@IAAXXZ|	; CCppiDmaChannel::ChLock
	EXPORT	|??_C@_1KA@OPBGAKPB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KK@PNAAHDOE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LC@FCMBCFJO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JI@PFPCKNKK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@KKDJGIN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@JMOGBPM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'

  00058			 AREA	 |.pdata|, PDATA
|$T40685| DCD	|$LN61@IssueTrans|
	DCD	0x4001fb04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KHAAGHJJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@LHIHPGIG@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "L", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@PIMJNCCC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "n"
	DCB	0x0, "d", 0x0, "i", 0x0, "s", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "e", 0x0, "p", 0x0, "M", 0x0, "a", 0x0, "x", 0x0, "P"
	DCB	0x0, "k", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ","
	DCB	0x0, " ", 0x0, "M", 0x0, "a", 0x0, "x", 0x0, "B", 0x0, "D"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@CPFBCBPM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "P", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ",", 0x0, " "
	DCB	0x0, "l", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@OPBGAKPB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "z", 0x0, "e", 0x0, "r", 0x0, "o"
	DCB	0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KK@PNAAHDOE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, "o", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LC@FCMBCFJO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, "o", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t"
	DCB	0x0, "h", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@PFPCKNKK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "p", 0x0, "v", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@KKDJGIN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "Z", 0x0, "e", 0x0, "r", 0x0, "o", 0x0, " ", 0x0, "l"
	DCB	0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@JMOGBPM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "X"
	DCB	0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%", 0x0, "u"
	DCB	0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02520			 AREA	 |.text|, CODE, ARM

  02520		 |?IssueTransfer@CCppiDmaRxChannel@@UAAHEEEGPAXIIIPAIPAK2I00@Z| PROC ; CCppiDmaRxChannel::IssueTransfer

; 763  : {

  02520		 |$LN61@IssueTrans|
  02520	e1a0c00d	 mov         r12, sp
  02524	e92d000f	 stmdb       sp!, {r0 - r3}
  02528	e92d5000	 stmdb       sp!, {r12, lr}
  0252c	e24dd060	 sub         sp, sp, #0x60
  02530		 |$M40682|

; 764  :     BOOL fResult = FALSE;

  02530	e3a03000	 mov         r3, #0
  02534	e58d3000	 str         r3, [sp]

; 765  : 
; 766  :     DEBUGMSG(CPPI_DBG_RX || ZONE_VERBOSE,
; 767  :         (L"+CCppiDmaRxChannel::IssueTransfer: RX Ch %u (EP %u) - %u bytes\r\n",
; 768  :         m_chNum,
; 769  :         m_epNum,
; 770  :         nLength));

  02538	ea00000b	 b           |$LN27@IssueTrans|
  0253c	e59d3084	 ldr         r3, [sp, #0x84]
  02540	e59d2068	 ldr         r2, [sp, #0x68]
  02544	e282203d	 add         r2, r2, #0x3D
  02548	e5d22000	 ldrb        r2, [r2]
  0254c	e59d1068	 ldr         r1, [sp, #0x68]
  02550	e281103c	 add         r1, r1, #0x3C
  02554	e5d11000	 ldrb        r1, [r1]
  02558	e59f07a8	 ldr         r0, [pc, #0x7A8]
  0255c	eb000000	 bl          NKDbgPrintfW
  02560	e3a03001	 mov         r3, #1
  02564	e58d3010	 str         r3, [sp, #0x10]
  02568	ea000001	 b           |$LN28@IssueTrans|
  0256c		 |$LN27@IssueTrans|
  0256c	e3a03000	 mov         r3, #0
  02570	e58d3010	 str         r3, [sp, #0x10]
  02574		 |$LN28@IssueTrans|

; 771  : 
; 772  :     if (!nLength)

  02574	e59d3084	 ldr         r3, [sp, #0x84]
  02578	e3530000	 cmp         r3, #0
  0257c	1a000008	 bne         |$LN24@IssueTrans|

; 773  :     {
; 774  :         RETAILMSG(CPPI_DBG_ERROR,
; 775  :             (L" CCppiDmaRxChannel::IssueTransfer: ERROR - Zero length\r\n"));

  02580	e59f077c	 ldr         r0, [pc, #0x77C]
  02584	eb000000	 bl          NKDbgPrintfW
  02588	e3a03001	 mov         r3, #1
  0258c	e58d3014	 str         r3, [sp, #0x14]
  02590	ea000001	 b           |$LN30@IssueTrans|
  02594	e3a03000	 mov         r3, #0
  02598	e58d3014	 str         r3, [sp, #0x14]
  0259c		 |$LN30@IssueTrans|

; 776  :         goto _doneUnsafe;

  0259c	ea0001be	 b           |$LN23@IssueTrans|
  025a0	ea0001bd	 b           |$_doneUnsafe$39278|
  025a4		 |$LN24@IssueTrans|

; 777  :     }
; 778  : 
; 779  :     // Validate input
; 780  :     if (!pvBuffer && !paBuffer)

  025a4	e59d307c	 ldr         r3, [sp, #0x7C]
  025a8	e3530000	 cmp         r3, #0
  025ac	1a00000d	 bne         |$LN22@IssueTrans|
  025b0	e59d3080	 ldr         r3, [sp, #0x80]
  025b4	e3530000	 cmp         r3, #0
  025b8	1a00000a	 bne         |$LN22@IssueTrans|

; 781  :     {
; 782  :         RETAILMSG(CPPI_DBG_ERROR,
; 783  :             (L" CCppiDmaRxChannel::IssueTransfer: ERROR - Invalid args, pv %08X, pa %08X\r\n",
; 784  :             pvBuffer,
; 785  :             paBuffer));

  025bc	e59d2080	 ldr         r2, [sp, #0x80]
  025c0	e59d107c	 ldr         r1, [sp, #0x7C]
  025c4	e59f0734	 ldr         r0, [pc, #0x734]
  025c8	eb000000	 bl          NKDbgPrintfW
  025cc	e3a03001	 mov         r3, #1
  025d0	e58d3018	 str         r3, [sp, #0x18]
  025d4	ea000001	 b           |$LN32@IssueTrans|
  025d8	e3a03000	 mov         r3, #0
  025dc	e58d3018	 str         r3, [sp, #0x18]
  025e0		 |$LN32@IssueTrans|

; 786  : 
; 787  :         goto _doneUnsafe;

  025e0	ea0001ad	 b           |$LN21@IssueTrans|
  025e4	ea0001ac	 b           |$_doneUnsafe$39278|
  025e8		 |$LN22@IssueTrans|

; 788  :     }
; 789  : 
; 790  :     // Validate ISO frames
; 791  :     if (epType == USB_ENDPOINT_TYPE_ISOCHRONOUS)

  025e8	e5dd3074	 ldrb        r3, [sp, #0x74]
  025ec	e3530001	 cmp         r3, #1
  025f0	1a000047	 bne         |$LN20@IssueTrans|

; 792  :     {
; 793  :         if (!nFrames || !pnFrameLengths)

  025f4	e59d3088	 ldr         r3, [sp, #0x88]
  025f8	e3530000	 cmp         r3, #0
  025fc	0a000002	 beq         |$LN18@IssueTrans|
  02600	e59d308c	 ldr         r3, [sp, #0x8C]
  02604	e3530000	 cmp         r3, #0
  02608	1a00000a	 bne         |$LN19@IssueTrans|
  0260c		 |$LN18@IssueTrans|

; 794  :         {
; 795  :             RETAILMSG(CPPI_DBG_ERROR,
; 796  :                 (L" CCppiDmaRxChannel::IssueTransfer: ERROR - Invalid iso args, frames %08X, lengths %08X\r\n",
; 797  :                 nFrames,
; 798  :                 pnFrameLengths));

  0260c	e59d208c	 ldr         r2, [sp, #0x8C]
  02610	e59d1088	 ldr         r1, [sp, #0x88]
  02614	e59f06e0	 ldr         r0, [pc, #0x6E0]
  02618	eb000000	 bl          NKDbgPrintfW
  0261c	e3a03001	 mov         r3, #1
  02620	e58d301c	 str         r3, [sp, #0x1C]
  02624	ea000001	 b           |$LN34@IssueTrans|
  02628	e3a03000	 mov         r3, #0
  0262c	e58d301c	 str         r3, [sp, #0x1C]
  02630		 |$LN34@IssueTrans|

; 799  : 
; 800  :             goto _doneUnsafe;

  02630	ea000199	 b           |$LN17@IssueTrans|
  02634	ea000198	 b           |$_doneUnsafe$39278|
  02638		 |$LN19@IssueTrans|

; 801  :         }
; 802  : 
; 803  :         nLength = 0;

  02638	e3a03000	 mov         r3, #0
  0263c	e58d3084	 str         r3, [sp, #0x84]

; 804  :         for (UINT32 n = 0; n < nFrames; n ++)

  02640	e3a03000	 mov         r3, #0
  02644	e58d3008	 str         r3, [sp, #8]
  02648	ea000002	 b           |$LN16@IssueTrans|
  0264c		 |$LN15@IssueTrans|
  0264c	e59d3008	 ldr         r3, [sp, #8]
  02650	e2833001	 add         r3, r3, #1
  02654	e58d3008	 str         r3, [sp, #8]
  02658		 |$LN16@IssueTrans|
  02658	e59d2008	 ldr         r2, [sp, #8]
  0265c	e59d3088	 ldr         r3, [sp, #0x88]
  02660	e1520003	 cmp         r2, r3
  02664	2a00002a	 bcs         |$LN14@IssueTrans|

; 805  :         {
; 806  :             if (!pnFrameLengths[n] || (pnFrameLengths[n] > (UINT32)epMaxPkt))

  02668	e59d1008	 ldr         r1, [sp, #8]
  0266c	e3a03004	 mov         r3, #4
  02670	e0020391	 mul         r2, r1, r3
  02674	e59d308c	 ldr         r3, [sp, #0x8C]
  02678	e0833002	 add         r3, r3, r2
  0267c	e5933000	 ldr         r3, [r3]
  02680	e3530000	 cmp         r3, #0
  02684	0a000008	 beq         |$LN12@IssueTrans|
  02688	e59d1008	 ldr         r1, [sp, #8]
  0268c	e3a03004	 mov         r3, #4
  02690	e0020391	 mul         r2, r1, r3
  02694	e59d308c	 ldr         r3, [sp, #0x8C]
  02698	e0833002	 add         r3, r3, r2
  0269c	e1dd27b8	 ldrh        r2, [sp, #0x78]
  026a0	e5933000	 ldr         r3, [r3]
  026a4	e1530002	 cmp         r3, r2
  026a8	9a00000f	 bls         |$LN13@IssueTrans|
  026ac		 |$LN12@IssueTrans|

; 807  :             {
; 808  :                 RETAILMSG(CPPI_DBG_ERROR,
; 809  :                     (L" CCppiDmaRxChannel::IssueTransfer: ERROR - Invalid iso args, frame %08X, size %08X\r\n",
; 810  :                     n,
; 811  :                     pnFrameLengths[n]));

  026ac	e59d1008	 ldr         r1, [sp, #8]
  026b0	e3a03004	 mov         r3, #4
  026b4	e0020391	 mul         r2, r1, r3
  026b8	e59d308c	 ldr         r3, [sp, #0x8C]
  026bc	e0833002	 add         r3, r3, r2
  026c0	e5932000	 ldr         r2, [r3]
  026c4	e59d1008	 ldr         r1, [sp, #8]
  026c8	e59f0628	 ldr         r0, [pc, #0x628]
  026cc	eb000000	 bl          NKDbgPrintfW
  026d0	e3a03001	 mov         r3, #1
  026d4	e58d3020	 str         r3, [sp, #0x20]
  026d8	ea000001	 b           |$LN36@IssueTrans|
  026dc	e3a03000	 mov         r3, #0
  026e0	e58d3020	 str         r3, [sp, #0x20]
  026e4		 |$LN36@IssueTrans|

; 812  : 
; 813  :                 goto _doneUnsafe;

  026e4	ea00016c	 b           |$LN11@IssueTrans|
  026e8	ea00016b	 b           |$_doneUnsafe$39278|
  026ec		 |$LN13@IssueTrans|

; 814  :             }
; 815  : 
; 816  :             nLength += pnFrameLengths[n];

  026ec	e59d1008	 ldr         r1, [sp, #8]
  026f0	e3a03004	 mov         r3, #4
  026f4	e0020391	 mul         r2, r1, r3
  026f8	e59d308c	 ldr         r3, [sp, #0x8C]
  026fc	e0833002	 add         r3, r3, r2
  02700	e59d2084	 ldr         r2, [sp, #0x84]
  02704	e5933000	 ldr         r3, [r3]
  02708	e0823003	 add         r3, r2, r3
  0270c	e58d3084	 str         r3, [sp, #0x84]

; 817  :         }

  02710	eaffffcd	 b           |$LN15@IssueTrans|
  02714		 |$LN14@IssueTrans|
  02714		 |$LN20@IssueTrans|

; 818  :     }
; 819  : 
; 820  :     if (!nLength)

  02714	e59d3084	 ldr         r3, [sp, #0x84]
  02718	e3530000	 cmp         r3, #0
  0271c	1a000008	 bne         |$LN10@IssueTrans|

; 821  :     {
; 822  :         RETAILMSG(CPPI_DBG_ERROR,
; 823  :             (L" CCppiDmaRxChannel::IssueTransfer: ERROR - Invalid args, zero transfer length\r\n"));

  02720	e59f05cc	 ldr         r0, [pc, #0x5CC]
  02724	eb000000	 bl          NKDbgPrintfW
  02728	e3a03001	 mov         r3, #1
  0272c	e58d3024	 str         r3, [sp, #0x24]
  02730	ea000001	 b           |$LN38@IssueTrans|
  02734	e3a03000	 mov         r3, #0
  02738	e58d3024	 str         r3, [sp, #0x24]
  0273c		 |$LN38@IssueTrans|

; 824  :         goto _doneUnsafe;

  0273c	ea000156	 b           |$LN9@IssueTrans|
  02740	ea000155	 b           |$_doneUnsafe$39278|
  02744		 |$LN10@IssueTrans|

; 825  :     }
; 826  : 
; 827  : 
; 828  :     // Go safe
; 829  :     ChLock();

  02744	e59d0068	 ldr         r0, [sp, #0x68]
  02748	eb000000	 bl          |?ChLock@CCppiDmaChannel@@IAAXXZ|

; 830  : 
; 831  :     // We are not supporting overlapped I/O by now
; 832  :     if (IsInUse())

  0274c	e59d0068	 ldr         r0, [sp, #0x68]
  02750	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  02754	e58d0028	 str         r0, [sp, #0x28]
  02758	e59d3028	 ldr         r3, [sp, #0x28]
  0275c	e3530000	 cmp         r3, #0
  02760	0a00000b	 beq         |$LN8@IssueTrans|

; 833  :     {
; 834  :         RETAILMSG(CPPI_DBG_ERROR,
; 835  :             (L" CCppiDmaRxChannel::IssueTransfer: ERROR - Pending transfer, length %u\r\n",
; 836  :             m_nTransferLength));

  02764	e59d3068	 ldr         r3, [sp, #0x68]
  02768	e2833088	 add         r3, r3, #0x88
  0276c	e5931000	 ldr         r1, [r3]
  02770	e59f0578	 ldr         r0, [pc, #0x578]
  02774	eb000000	 bl          NKDbgPrintfW
  02778	e3a03001	 mov         r3, #1
  0277c	e58d302c	 str         r3, [sp, #0x2C]
  02780	ea000001	 b           |$LN40@IssueTrans|
  02784	e3a03000	 mov         r3, #0
  02788	e58d302c	 str         r3, [sp, #0x2C]
  0278c		 |$LN40@IssueTrans|

; 837  : 
; 838  :         goto _done;

  0278c	ea000140	 b           |$LN7@IssueTrans|
  02790	ea00013f	 b           |$_done$39302|
  02794		 |$LN8@IssueTrans|

; 839  :     }
; 840  : 
; 841  :     // Extra debug checks
; 842  :     DEBUGCHK(m_pvTransferBuffer == NULL);

  02794	e59d3068	 ldr         r3, [sp, #0x68]
  02798	e283306c	 add         r3, r3, #0x6C
  0279c	e5933000	 ldr         r3, [r3]
  027a0	e3530000	 cmp         r3, #0
  027a4	1a000002	 bne         |$LN41@IssueTrans|
  027a8	e3a03001	 mov         r3, #1
  027ac	e58d3030	 str         r3, [sp, #0x30]
  027b0	ea000008	 b           |$LN42@IssueTrans|
  027b4		 |$LN41@IssueTrans|
  027b4	e3a03c03	 mov         r3, #3, 24
  027b8	e383304a	 orr         r3, r3, #0x4A
  027bc	e59f2528	 ldr         r2, [pc, #0x528]
  027c0	e59f1520	 ldr         r1, [pc, #0x520]
  027c4	e59f0518	 ldr         r0, [pc, #0x518]
  027c8	eb000000	 bl          NKDbgPrintfW
  027cc	e6000010	 __debugbreak_ce
  027d0	e3a03000	 mov         r3, #0
  027d4	e58d3030	 str         r3, [sp, #0x30]
  027d8		 |$LN42@IssueTrans|

; 843  :     DEBUGCHK(m_paTransferBuffer == 0);

  027d8	e59d3068	 ldr         r3, [sp, #0x68]
  027dc	e2833070	 add         r3, r3, #0x70
  027e0	e5933000	 ldr         r3, [r3]
  027e4	e3530000	 cmp         r3, #0
  027e8	1a000002	 bne         |$LN43@IssueTrans|
  027ec	e3a03001	 mov         r3, #1
  027f0	e58d3034	 str         r3, [sp, #0x34]
  027f4	ea000008	 b           |$LN44@IssueTrans|
  027f8		 |$LN43@IssueTrans|
  027f8	e3a03c03	 mov         r3, #3, 24
  027fc	e383304b	 orr         r3, r3, #0x4B
  02800	e59f24e4	 ldr         r2, [pc, #0x4E4]
  02804	e59f14dc	 ldr         r1, [pc, #0x4DC]
  02808	e59f04d4	 ldr         r0, [pc, #0x4D4]
  0280c	eb000000	 bl          NKDbgPrintfW
  02810	e6000010	 __debugbreak_ce
  02814	e3a03000	 mov         r3, #0
  02818	e58d3034	 str         r3, [sp, #0x34]
  0281c		 |$LN44@IssueTrans|

; 844  :     DEBUGCHK(m_nTransferLength == 0);

  0281c	e59d3068	 ldr         r3, [sp, #0x68]
  02820	e2833088	 add         r3, r3, #0x88
  02824	e5933000	 ldr         r3, [r3]
  02828	e3530000	 cmp         r3, #0
  0282c	1a000002	 bne         |$LN45@IssueTrans|
  02830	e3a03001	 mov         r3, #1
  02834	e58d3038	 str         r3, [sp, #0x38]
  02838	ea000007	 b           |$LN46@IssueTrans|
  0283c		 |$LN45@IssueTrans|
  0283c	e3a03fd3	 mov         r3, #0xD3, 30
  02840	e59f24a4	 ldr         r2, [pc, #0x4A4]
  02844	e59f149c	 ldr         r1, [pc, #0x49C]
  02848	e59f0494	 ldr         r0, [pc, #0x494]
  0284c	eb000000	 bl          NKDbgPrintfW
  02850	e6000010	 __debugbreak_ce
  02854	e3a03000	 mov         r3, #0
  02858	e58d3038	 str         r3, [sp, #0x38]
  0285c		 |$LN46@IssueTrans|

; 845  :     DEBUGCHK(m_nSegmentPending == 0);

  0285c	e59d3068	 ldr         r3, [sp, #0x68]
  02860	e28330a0	 add         r3, r3, #0xA0
  02864	e5933000	 ldr         r3, [r3]
  02868	e3530000	 cmp         r3, #0
  0286c	1a000002	 bne         |$LN47@IssueTrans|
  02870	e3a03001	 mov         r3, #1
  02874	e58d303c	 str         r3, [sp, #0x3C]
  02878	ea000008	 b           |$LN48@IssueTrans|
  0287c		 |$LN47@IssueTrans|
  0287c	e3a03c03	 mov         r3, #3, 24
  02880	e383304d	 orr         r3, r3, #0x4D
  02884	e59f2460	 ldr         r2, [pc, #0x460]
  02888	e59f1458	 ldr         r1, [pc, #0x458]
  0288c	e59f0450	 ldr         r0, [pc, #0x450]
  02890	eb000000	 bl          NKDbgPrintfW
  02894	e6000010	 __debugbreak_ce
  02898	e3a03000	 mov         r3, #0
  0289c	e58d303c	 str         r3, [sp, #0x3C]
  028a0		 |$LN48@IssueTrans|

; 846  :     DEBUGCHK(m_nSegmentFramesPending == 0);

  028a0	e59d3068	 ldr         r3, [sp, #0x68]
  028a4	e28330a4	 add         r3, r3, #0xA4
  028a8	e5933000	 ldr         r3, [r3]
  028ac	e3530000	 cmp         r3, #0
  028b0	1a000002	 bne         |$LN49@IssueTrans|
  028b4	e3a03001	 mov         r3, #1
  028b8	e58d3040	 str         r3, [sp, #0x40]
  028bc	ea000008	 b           |$LN50@IssueTrans|
  028c0		 |$LN49@IssueTrans|
  028c0	e3a03c03	 mov         r3, #3, 24
  028c4	e383304e	 orr         r3, r3, #0x4E
  028c8	e59f241c	 ldr         r2, [pc, #0x41C]
  028cc	e59f1414	 ldr         r1, [pc, #0x414]
  028d0	e59f040c	 ldr         r0, [pc, #0x40C]
  028d4	eb000000	 bl          NKDbgPrintfW
  028d8	e6000010	 __debugbreak_ce
  028dc	e3a03000	 mov         r3, #0
  028e0	e58d3040	 str         r3, [sp, #0x40]
  028e4		 |$LN50@IssueTrans|

; 847  : 
; 848  :     // Save transfer info
; 849  :     m_epAddr = epAddr;

  028e4	e59d3068	 ldr         r3, [sp, #0x68]
  028e8	e2832060	 add         r2, r3, #0x60
  028ec	e5dd306c	 ldrb        r3, [sp, #0x6C]
  028f0	e5c23000	 strb        r3, [r2]

; 850  :     m_fnAddr = fnAddr;

  028f4	e59d3068	 ldr         r3, [sp, #0x68]
  028f8	e2832061	 add         r2, r3, #0x61
  028fc	e5dd3070	 ldrb        r3, [sp, #0x70]
  02900	e5c23000	 strb        r3, [r2]

; 851  :     m_epType = epType;

  02904	e59d3068	 ldr         r3, [sp, #0x68]
  02908	e2832062	 add         r2, r3, #0x62
  0290c	e5dd3074	 ldrb        r3, [sp, #0x74]
  02910	e5c23000	 strb        r3, [r2]

; 852  :     m_epMaxPkt = epMaxPkt;

  02914	e59d3068	 ldr         r3, [sp, #0x68]
  02918	e2832064	 add         r2, r3, #0x64
  0291c	e1dd37b8	 ldrh        r3, [sp, #0x78]
  02920	e1c230b0	 strh        r3, [r2]

; 853  : 
; 854  :     m_pvTransferBuffer = (UINT8 *)pvBuffer;

  02924	e59d3068	 ldr         r3, [sp, #0x68]
  02928	e283206c	 add         r2, r3, #0x6C
  0292c	e59d307c	 ldr         r3, [sp, #0x7C]
  02930	e5823000	 str         r3, [r2]

; 855  :     m_paTransferBuffer = paBuffer;

  02934	e59d3068	 ldr         r3, [sp, #0x68]
  02938	e2832070	 add         r2, r3, #0x70
  0293c	e59d3080	 ldr         r3, [sp, #0x80]
  02940	e5823000	 str         r3, [r2]

; 856  :     m_nTransferLength = nLength;

  02944	e59d3068	 ldr         r3, [sp, #0x68]
  02948	e2832088	 add         r2, r3, #0x88
  0294c	e59d3084	 ldr         r3, [sp, #0x84]
  02950	e5823000	 str         r3, [r2]

; 857  :     m_nTransferFrames = nFrames;

  02954	e59d3068	 ldr         r3, [sp, #0x68]
  02958	e2832074	 add         r2, r3, #0x74
  0295c	e59d3088	 ldr         r3, [sp, #0x88]
  02960	e5823000	 str         r3, [r2]

; 858  :     m_pTransferFrameLengths = pnFrameLengths;

  02964	e59d3068	 ldr         r3, [sp, #0x68]
  02968	e2832078	 add         r2, r3, #0x78
  0296c	e59d308c	 ldr         r3, [sp, #0x8C]
  02970	e5823000	 str         r3, [r2]

; 859  :     m_pdwIsochErrors = pdwIsochErrors;

  02974	e59d3068	 ldr         r3, [sp, #0x68]
  02978	e2832080	 add         r2, r3, #0x80
  0297c	e59d3090	 ldr         r3, [sp, #0x90]
  02980	e5823000	 str         r3, [r2]

; 860  :     m_pdwIsochLengths = pdwIsochLengths;

  02984	e59d3068	 ldr         r3, [sp, #0x68]
  02988	e2832084	 add         r2, r3, #0x84
  0298c	e59d3094	 ldr         r3, [sp, #0x94]
  02990	e5823000	 str         r3, [r2]

; 861  :     m_nTransferOptions = nOptions;

  02994	e59d3068	 ldr         r3, [sp, #0x68]
  02998	e283208c	 add         r2, r3, #0x8C
  0299c	e59d3098	 ldr         r3, [sp, #0x98]
  029a0	e5823000	 str         r3, [r2]

; 862  :     m_pTransferCookie1 = pCookie1;

  029a4	e59d3068	 ldr         r3, [sp, #0x68]
  029a8	e2832090	 add         r2, r3, #0x90
  029ac	e59d309c	 ldr         r3, [sp, #0x9C]
  029b0	e5823000	 str         r3, [r2]

; 863  :     m_pTransferCookie2 = pCookie2;

  029b4	e59d3068	 ldr         r3, [sp, #0x68]
  029b8	e2832094	 add         r2, r3, #0x94
  029bc	e59d30a0	 ldr         r3, [sp, #0xA0]
  029c0	e5823000	 str         r3, [r2]

; 864  :     m_nTransferComplete = 0;

  029c4	e59d3068	 ldr         r3, [sp, #0x68]
  029c8	e2832098	 add         r2, r3, #0x98
  029cc	e3a03000	 mov         r3, #0
  029d0	e5823000	 str         r3, [r2]

; 865  :     m_nTransferFramesComplete = 0;

  029d4	e59d3068	 ldr         r3, [sp, #0x68]
  029d8	e283209c	 add         r2, r3, #0x9C
  029dc	e3a03000	 mov         r3, #0
  029e0	e5823000	 str         r3, [r2]

; 866  :     m_nSegmentPending = 0;

  029e4	e59d3068	 ldr         r3, [sp, #0x68]
  029e8	e28320a0	 add         r2, r3, #0xA0
  029ec	e3a03000	 mov         r3, #0
  029f0	e5823000	 str         r3, [r2]

; 867  :     m_nSegmentFramesPending = 0;

  029f4	e59d3068	 ldr         r3, [sp, #0x68]
  029f8	e28320a4	 add         r2, r3, #0xA4
  029fc	e3a03000	 mov         r3, #0
  02a00	e5823000	 str         r3, [r2]

; 868  : 
; 869  :     BOOL fIsRndisMode;
; 870  :     if (!IsIso())

  02a04	e59d0068	 ldr         r0, [sp, #0x68]
  02a08	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  02a0c	e58d0044	 str         r0, [sp, #0x44]
  02a10	e59d3044	 ldr         r3, [sp, #0x44]
  02a14	e3530000	 cmp         r3, #0
  02a18	1a000011	 bne         |$LN6@IssueTrans|

; 871  :         fIsRndisMode = ((m_epMaxPkt & 0x3f) == 0) &&
; 872  :                        (m_nTransferLength <= 0x10000);

  02a1c	e59d3068	 ldr         r3, [sp, #0x68]
  02a20	e2833064	 add         r3, r3, #0x64
  02a24	e1d330b0	 ldrh        r3, [r3]
  02a28	e313003f	 tst         r3, #0x3F
  02a2c	1a000007	 bne         |$LN51@IssueTrans|
  02a30	e59d3068	 ldr         r3, [sp, #0x68]
  02a34	e2833088	 add         r3, r3, #0x88
  02a38	e5933000	 ldr         r3, [r3]
  02a3c	e3530801	 cmp         r3, #1, 16
  02a40	8a000002	 bhi         |$LN51@IssueTrans|
  02a44	e3a03001	 mov         r3, #1
  02a48	e58d3048	 str         r3, [sp, #0x48]
  02a4c	ea000001	 b           |$LN52@IssueTrans|
  02a50		 |$LN51@IssueTrans|
  02a50	e3a03000	 mov         r3, #0
  02a54	e58d3048	 str         r3, [sp, #0x48]
  02a58		 |$LN52@IssueTrans|
  02a58	e59d3048	 ldr         r3, [sp, #0x48]
  02a5c	e58d3004	 str         r3, [sp, #4]

; 873  :     else

  02a60	ea000001	 b           |$LN5@IssueTrans|
  02a64		 |$LN6@IssueTrans|

; 874  :         fIsRndisMode = FALSE;

  02a64	e3a03000	 mov         r3, #0
  02a68	e58d3004	 str         r3, [sp, #4]
  02a6c		 |$LN5@IssueTrans|

; 875  : 
; 876  :     if (fIsRndisMode)

  02a6c	e59d3004	 ldr         r3, [sp, #4]
  02a70	e3530000	 cmp         r3, #0
  02a74	0a000004	 beq         |$LN4@IssueTrans|

; 877  :         m_nMaxBD = 0x10000;

  02a78	e59d3068	 ldr         r3, [sp, #0x68]
  02a7c	e2832068	 add         r2, r3, #0x68
  02a80	e3a03801	 mov         r3, #1, 16
  02a84	e5823000	 str         r3, [r2]

; 878  :     else

  02a88	ea000005	 b           |$LN3@IssueTrans|
  02a8c		 |$LN4@IssueTrans|

; 879  :         m_nMaxBD = m_epMaxPkt;

  02a8c	e59d3068	 ldr         r3, [sp, #0x68]
  02a90	e2833064	 add         r3, r3, #0x64
  02a94	e1d320b0	 ldrh        r2, [r3]
  02a98	e59d3068	 ldr         r3, [sp, #0x68]
  02a9c	e2833068	 add         r3, r3, #0x68
  02aa0	e5832000	 str         r2, [r3]
  02aa4		 |$LN3@IssueTrans|

; 880  : 
; 881  :     DEBUGMSG(CPPI_DBG_RX,
; 882  :         (L" CCppiDmaRxChannel::IssueTransfer: RndisMode %d, epMaxPkt %u, MaxBD %u\r\n",
; 883  :          fIsRndisMode, m_epMaxPkt, m_nMaxBD));

  02aa4	ea00000b	 b           |$LN53@IssueTrans|
  02aa8	e59d3068	 ldr         r3, [sp, #0x68]
  02aac	e2833068	 add         r3, r3, #0x68
  02ab0	e5933000	 ldr         r3, [r3]
  02ab4	e59d2068	 ldr         r2, [sp, #0x68]
  02ab8	e2822064	 add         r2, r2, #0x64
  02abc	e1d220b0	 ldrh        r2, [r2]
  02ac0	e59d1004	 ldr         r1, [sp, #4]
  02ac4	e59f0214	 ldr         r0, [pc, #0x214]
  02ac8	eb000000	 bl          NKDbgPrintfW
  02acc	e3a03001	 mov         r3, #1
  02ad0	e58d304c	 str         r3, [sp, #0x4C]
  02ad4	ea000001	 b           |$LN54@IssueTrans|
  02ad8		 |$LN53@IssueTrans|
  02ad8	e3a03000	 mov         r3, #0
  02adc	e58d304c	 str         r3, [sp, #0x4C]
  02ae0		 |$LN54@IssueTrans|

; 884  : 
; 885  :     UpdateRndisMode(fIsRndisMode);

  02ae0	e59d1004	 ldr         r1, [sp, #4]
  02ae4	e59d0068	 ldr         r0, [sp, #0x68]
  02ae8	eb000000	 bl          |?UpdateRndisMode@CCppiDmaChannel@@IAAXH@Z|

; 886  : 
; 887  :     if (!IsIso())

  02aec	e59d0068	 ldr         r0, [sp, #0x68]
  02af0	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  02af4	e58d0050	 str         r0, [sp, #0x50]
  02af8	e59d3050	 ldr         r3, [sp, #0x50]
  02afc	e3530000	 cmp         r3, #0
  02b00	1a000019	 bne         |$LN2@IssueTrans|

; 888  :     {
; 889  :         m_nTransferFrames = m_nTransferLength / m_nMaxBD;

  02b04	e59d3068	 ldr         r3, [sp, #0x68]
  02b08	e2832088	 add         r2, r3, #0x88
  02b0c	e59d3068	 ldr         r3, [sp, #0x68]
  02b10	e2833068	 add         r3, r3, #0x68
  02b14	e5921000	 ldr         r1, [r2]
  02b18	e5930000	 ldr         r0, [r3]
  02b1c	eb000000	 bl          __rt_udiv
  02b20	e59d3068	 ldr         r3, [sp, #0x68]
  02b24	e2833074	 add         r3, r3, #0x74
  02b28	e5830000	 str         r0, [r3]

; 890  : 
; 891  :         if (m_nTransferLength % m_nMaxBD)

  02b2c	e59d3068	 ldr         r3, [sp, #0x68]
  02b30	e2832088	 add         r2, r3, #0x88
  02b34	e59d3068	 ldr         r3, [sp, #0x68]
  02b38	e2833068	 add         r3, r3, #0x68
  02b3c	e5921000	 ldr         r1, [r2]
  02b40	e5930000	 ldr         r0, [r3]
  02b44	eb000000	 bl          __rt_udiv
  02b48	e3510000	 cmp         r1, #0
  02b4c	0a000006	 beq         |$LN1@IssueTrans|

; 892  :         {
; 893  :             m_nTransferFrames ++;

  02b50	e59d3068	 ldr         r3, [sp, #0x68]
  02b54	e2833074	 add         r3, r3, #0x74
  02b58	e5933000	 ldr         r3, [r3]
  02b5c	e2832001	 add         r2, r3, #1
  02b60	e59d3068	 ldr         r3, [sp, #0x68]
  02b64	e2833074	 add         r3, r3, #0x74
  02b68	e5832000	 str         r2, [r3]
  02b6c		 |$LN1@IssueTrans|
  02b6c		 |$LN2@IssueTrans|

; 894  :         }
; 895  :     }
; 896  : 
; 897  :     DEBUGMSG(CPPI_DBG_RX,
; 898  :         (L" CCppiDmaRxChannel::IssueTransfer: Length %u, %u frames, options 0x%08x\r\n",
; 899  :         m_nTransferLength,
; 900  :         m_nTransferFrames,
; 901  :         m_nTransferOptions));

  02b6c	ea00000d	 b           |$LN55@IssueTrans|
  02b70	e59d3068	 ldr         r3, [sp, #0x68]
  02b74	e283308c	 add         r3, r3, #0x8C
  02b78	e5933000	 ldr         r3, [r3]
  02b7c	e59d2068	 ldr         r2, [sp, #0x68]
  02b80	e2822074	 add         r2, r2, #0x74
  02b84	e5922000	 ldr         r2, [r2]
  02b88	e59d1068	 ldr         r1, [sp, #0x68]
  02b8c	e2811088	 add         r1, r1, #0x88
  02b90	e5911000	 ldr         r1, [r1]
  02b94	e59f0140	 ldr         r0, [pc, #0x140]
  02b98	eb000000	 bl          NKDbgPrintfW
  02b9c	e3a03001	 mov         r3, #1
  02ba0	e58d3054	 str         r3, [sp, #0x54]
  02ba4	ea000001	 b           |$LN56@IssueTrans|
  02ba8		 |$LN55@IssueTrans|
  02ba8	e3a03000	 mov         r3, #0
  02bac	e58d3054	 str         r3, [sp, #0x54]
  02bb0		 |$LN56@IssueTrans|

; 902  : 
; 903  :     m_pCppiChannelRegs->HPCRA =
; 904  :         ((m_chNum + m_nCppiChannelOffset) |
; 905  :         ((m_chNum + m_nCppiChannelOffset) << 16));

  02bb0	e59d3068	 ldr         r3, [sp, #0x68]
  02bb4	e283303c	 add         r3, r3, #0x3C
  02bb8	e5d33000	 ldrb        r3, [r3]
  02bbc	e1a02003	 mov         r2, r3
  02bc0	e59d3068	 ldr         r3, [sp, #0x68]
  02bc4	e2833020	 add         r3, r3, #0x20
  02bc8	e5d33000	 ldrb        r3, [r3]
  02bcc	e0821003	 add         r1, r2, r3
  02bd0	e59d3068	 ldr         r3, [sp, #0x68]
  02bd4	e283303c	 add         r3, r3, #0x3C
  02bd8	e5d33000	 ldrb        r3, [r3]
  02bdc	e1a02003	 mov         r2, r3
  02be0	e59d3068	 ldr         r3, [sp, #0x68]
  02be4	e2833020	 add         r3, r3, #0x20
  02be8	e5d33000	 ldrb        r3, [r3]
  02bec	e0823003	 add         r3, r2, r3
  02bf0	e1a03803	 mov         r3, r3, lsl #16
  02bf4	e1812003	 orr         r2, r1, r3
  02bf8	e59d3068	 ldr         r3, [sp, #0x68]
  02bfc	e283301c	 add         r3, r3, #0x1C
  02c00	e5933000	 ldr         r3, [r3]
  02c04	e283300c	 add         r3, r3, #0xC
  02c08	e5832000	 str         r2, [r3]

; 906  : 
; 907  :     m_pCppiChannelRegs->HPCRB =
; 908  :         ((m_chNum + m_nCppiChannelOffset) |
; 909  :         ((m_chNum + m_nCppiChannelOffset) << 16));

  02c0c	e59d3068	 ldr         r3, [sp, #0x68]
  02c10	e283303c	 add         r3, r3, #0x3C
  02c14	e5d33000	 ldrb        r3, [r3]
  02c18	e1a02003	 mov         r2, r3
  02c1c	e59d3068	 ldr         r3, [sp, #0x68]
  02c20	e2833020	 add         r3, r3, #0x20
  02c24	e5d33000	 ldrb        r3, [r3]
  02c28	e0821003	 add         r1, r2, r3
  02c2c	e59d3068	 ldr         r3, [sp, #0x68]
  02c30	e283303c	 add         r3, r3, #0x3C
  02c34	e5d33000	 ldrb        r3, [r3]
  02c38	e1a02003	 mov         r2, r3
  02c3c	e59d3068	 ldr         r3, [sp, #0x68]
  02c40	e2833020	 add         r3, r3, #0x20
  02c44	e5d33000	 ldrb        r3, [r3]
  02c48	e0823003	 add         r3, r2, r3
  02c4c	e1a03803	 mov         r3, r3, lsl #16
  02c50	e1812003	 orr         r2, r1, r3
  02c54	e59d3068	 ldr         r3, [sp, #0x68]
  02c58	e283301c	 add         r3, r3, #0x1C
  02c5c	e5933000	 ldr         r3, [r3]
  02c60	e2833010	 add         r3, r3, #0x10
  02c64	e5832000	 str         r2, [r3]

; 910  : 
; 911  :     m_pCppiChannelRegs->RXGCR =
; 912  :         BIT31 | /* Enable */
; 913  :         BIT24 | /* Retry on starvation */
; 914  :         BIT14 | /* Host descriptor type (default) */ /*
; 915  :         qmgr |
; 916  :         qnum? */ USB_CPPI_RXCMPL_QNUM_HOST;

  02c68	e59d3068	 ldr         r3, [sp, #0x68]
  02c6c	e283301c	 add         r3, r3, #0x1C
  02c70	e5933000	 ldr         r3, [r3]
  02c74	e2832008	 add         r2, r3, #8
  02c78	e59f3058	 ldr         r3, [pc, #0x58]
  02c7c	e5823000	 str         r3, [r2]

; 917  : 
; 918  :     // Schedule next transfer
; 919  :     fResult = ScheduleTransfer();

  02c80	e59d0068	 ldr         r0, [sp, #0x68]
  02c84	eb000000	 bl          |?ScheduleTransfer@CCppiDmaRxChannel@@QAAHXZ|
  02c88	e58d0058	 str         r0, [sp, #0x58]
  02c8c	e59d3058	 ldr         r3, [sp, #0x58]
  02c90	e58d3000	 str         r3, [sp]
  02c94		 |$LN7@IssueTrans|
  02c94		 |$_done$39302|

; 920  : 
; 921  : _done:
; 922  : 
; 923  :     // Go unsafe
; 924  :     ChUnlock();

  02c94	e59d0068	 ldr         r0, [sp, #0x68]
  02c98	eb000000	 bl          |?ChUnlock@CCppiDmaChannel@@IAAXXZ|
  02c9c		 |$LN9@IssueTrans|
  02c9c		 |$LN11@IssueTrans|
  02c9c		 |$LN17@IssueTrans|
  02c9c		 |$LN21@IssueTrans|
  02c9c		 |$LN23@IssueTrans|
  02c9c		 |$_doneUnsafe$39278|

; 925  : 
; 926  : _doneUnsafe:
; 927  :     DEBUGMSG(CPPI_DBG_RX || ZONE_VERBOSE,
; 928  :         (L"-CCppiDmaRxChannel::IssueTransfer\r\n"));

  02c9c	ea000004	 b           |$LN57@IssueTrans|
  02ca0	e59f002c	 ldr         r0, [pc, #0x2C]
  02ca4	eb000000	 bl          NKDbgPrintfW
  02ca8	e3a03001	 mov         r3, #1
  02cac	e58d305c	 str         r3, [sp, #0x5C]
  02cb0	ea000001	 b           |$LN58@IssueTrans|
  02cb4		 |$LN57@IssueTrans|
  02cb4	e3a03000	 mov         r3, #0
  02cb8	e58d305c	 str         r3, [sp, #0x5C]
  02cbc		 |$LN58@IssueTrans|

; 929  : 
; 930  :     return fResult;

  02cbc	e59d3000	 ldr         r3, [sp]
  02cc0	e58d300c	 str         r3, [sp, #0xC]

; 931  : }

  02cc4	e59d000c	 ldr         r0, [sp, #0xC]
  02cc8	e28dd060	 add         sp, sp, #0x60
  02ccc	e89d6000	 ldmia       sp, {sp, lr}
  02cd0	e12fff1e	 bx          lr
  02cd4		 |$LN62@IssueTrans|
  02cd4		 |$LN63@IssueTrans|
  02cd4	00000000	 DCD         |??_C@_1EI@KHAAGHJJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02cd8		 |$LN64@IssueTrans|
  02cd8	81004041	 DCD         0x81004041
  02cdc		 |$LN65@IssueTrans|
  02cdc	00000000	 DCD         |??_C@_1JE@LHIHPGIG@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02ce0		 |$LN66@IssueTrans|
  02ce0	00000000	 DCD         |??_C@_1JC@PIMJNCCC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02ce4		 |$LN67@IssueTrans|
  02ce4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02ce8		 |$LN68@IssueTrans|
  02ce8	00000000	 DCD         |dpCurSettings|
  02cec		 |$LN69@IssueTrans|
  02cec	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02cf0		 |$LN70@IssueTrans|
  02cf0	00000000	 DCD         |??_C@_1JC@CPFBCBPM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02cf4		 |$LN71@IssueTrans|
  02cf4	00000000	 DCD         |??_C@_1KA@OPBGAKPB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02cf8		 |$LN72@IssueTrans|
  02cf8	00000000	 DCD         |??_C@_1KK@PNAAHDOE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02cfc		 |$LN73@IssueTrans|
  02cfc	00000000	 DCD         |??_C@_1LC@FCMBCFJO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02d00		 |$LN74@IssueTrans|
  02d00	00000000	 DCD         |??_C@_1JI@PFPCKNKK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02d04		 |$LN75@IssueTrans|
  02d04	00000000	 DCD         |??_C@_1HC@KKDJGIN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02d08		 |$LN76@IssueTrans|
  02d08	00000000	 DCD         |??_C@_1IC@JMOGBPM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  02d0c		 |$M40683|

			 ENDP  ; |?IssueTransfer@CCppiDmaRxChannel@@UAAHEEEGPAXIIIPAIPAK2I00@Z|, CCppiDmaRxChannel::IssueTransfer

	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40705| DCD	|$LN5@ChLock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ChLock@CCppiDmaChannel@@IAAXXZ| PROC	; CCppiDmaChannel::ChLock

; 83   :     void ChLock   () { EnterCriticalSection(&m_csLock); }

  00000		 |$LN5@ChLock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M40702|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830044	 add         r0, r3, #0x44
  00014	eb000000	 bl          EnterCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M40703|

			 ENDP  ; |?ChLock@CCppiDmaChannel@@IAAXXZ|, CCppiDmaChannel::ChLock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T40712| DCD	|$LN5@ChUnlock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ChUnlock@CCppiDmaChannel@@IAAXXZ| PROC ; CCppiDmaChannel::ChUnlock

; 84   :     void ChUnlock () { LeaveCriticalSection(&m_csLock); }

  00000		 |$LN5@ChUnlock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M40709|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830044	 add         r0, r3, #0x44
  00014	eb000000	 bl          LeaveCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M40710|

			 ENDP  ; |?ChUnlock@CCppiDmaChannel@@IAAXXZ|, CCppiDmaChannel::ChUnlock

	EXPORT	|??_C@_1HI@KPBHDHGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@HGGLBLNE@?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$CB?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@LBHEPHCF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@BCGPEBHD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z| ; CCppiDmaController::HdFree
	EXPORT	|??_C@_1LO@IKNKCAJE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@IPIPJPLF@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	IMPORT	|GetTickCount|
	IMPORT	|Sleep|

  00060			 AREA	 |.pdata|, PDATA
|$T40738| DCD	|$LN29@CancelTran|
	DCD	0x40013a04
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@KPBHDHGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@| DCB "S"
	DCB	0x0, "U", 0x0, "C", 0x0, "C", 0x0, "E", 0x0, "E", 0x0, "D"
	DCB	0x0, "E", 0x0, "D", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@HGGLBLNE@?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$CB?$AA?$AA@| DCB "F"
	DCB	0x0, "A", 0x0, "I", 0x0, "L", 0x0, "E", 0x0, "D", 0x0, "!"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@LBHEPHCF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, "/", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@BCGPEBHD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "B", 0x0, "D", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "a", 0x0, "f", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "-", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@IKNKCAJE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "d", 0x0, "-"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "e"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, ")"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@IPIPJPLF@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  02d0c			 AREA	 |.text|, CODE, ARM

  02d0c		 |?CancelTransfer@CCppiDmaRxChannel@@UAAHXZ| PROC ; CCppiDmaRxChannel::CancelTransfer

; 935  : {

  02d0c		 |$LN29@CancelTran|
  02d0c	e1a0c00d	 mov         r12, sp
  02d10	e92d0001	 stmdb       sp!, {r0}
  02d14	e92d5010	 stmdb       sp!, {r4, r12, lr}
  02d18	e24dd05c	 sub         sp, sp, #0x5C
  02d1c		 |$M40735|

; 936  :     BOOL fResult = FALSE;

  02d1c	e3a03000	 mov         r3, #0
  02d20	e58d300c	 str         r3, [sp, #0xC]

; 937  : 
; 938  : #ifndef SHIP_BUILD
; 939  :     WCHAR* szDir = m_fIsOut ? L"OUT" : L"IN";

  02d24	e59d3068	 ldr         r3, [sp, #0x68]
  02d28	e2833034	 add         r3, r3, #0x34
  02d2c	e5933000	 ldr         r3, [r3]
  02d30	e3530000	 cmp         r3, #0
  02d34	0a000002	 beq         |$LN13@CancelTran|
  02d38	e59f34b0	 ldr         r3, [pc, #0x4B0]
  02d3c	e58d3030	 str         r3, [sp, #0x30]
  02d40	ea000001	 b           |$LN14@CancelTran|
  02d44		 |$LN13@CancelTran|
  02d44	e59f34a0	 ldr         r3, [pc, #0x4A0]
  02d48	e58d3030	 str         r3, [sp, #0x30]
  02d4c		 |$LN14@CancelTran|
  02d4c	e59d3030	 ldr         r3, [sp, #0x30]
  02d50	e58d3010	 str         r3, [sp, #0x10]

; 940  : #endif
; 941  : 
; 942  :     DEBUGMSG(CPPI_DBG_RX || ZONE_VERBOSE,
; 943  :         (L"+CCppiDmaRxChannel::CancelTransfer: %s Ch %u (EP %u)\r\n",
; 944  :         szDir,
; 945  :         m_chNum,
; 946  :         m_epNum));

  02d54	ea00000b	 b           |$LN15@CancelTran|
  02d58	e59d3068	 ldr         r3, [sp, #0x68]
  02d5c	e283303d	 add         r3, r3, #0x3D
  02d60	e5d33000	 ldrb        r3, [r3]
  02d64	e59d2068	 ldr         r2, [sp, #0x68]
  02d68	e282203c	 add         r2, r2, #0x3C
  02d6c	e5d22000	 ldrb        r2, [r2]
  02d70	e59d1010	 ldr         r1, [sp, #0x10]
  02d74	e59f046c	 ldr         r0, [pc, #0x46C]
  02d78	eb000000	 bl          NKDbgPrintfW
  02d7c	e3a03001	 mov         r3, #1
  02d80	e58d3034	 str         r3, [sp, #0x34]
  02d84	ea000001	 b           |$LN16@CancelTran|
  02d88		 |$LN15@CancelTran|
  02d88	e3a03000	 mov         r3, #0
  02d8c	e58d3034	 str         r3, [sp, #0x34]
  02d90		 |$LN16@CancelTran|

; 947  : 
; 948  :     // Go safe
; 949  :     ChLock();

  02d90	e59d0068	 ldr         r0, [sp, #0x68]
  02d94	eb000000	 bl          |?ChLock@CCppiDmaChannel@@IAAXXZ|

; 950  : 
; 951  :     // Only if there is a pending DMA transfer
; 952  :     if (IsInUse())

  02d98	e59d0068	 ldr         r0, [sp, #0x68]
  02d9c	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  02da0	e58d0038	 str         r0, [sp, #0x38]
  02da4	e59d3038	 ldr         r3, [sp, #0x38]
  02da8	e3530000	 cmp         r3, #0
  02dac	0a0000e3	 beq         |$LN10@CancelTran|

; 953  :     {
; 954  :         m_fIsTeardownPending = TRUE;

  02db0	e59d3068	 ldr         r3, [sp, #0x68]
  02db4	e2832038	 add         r2, r3, #0x38
  02db8	e3a03001	 mov         r3, #1
  02dbc	e5823000	 str         r3, [r2]

; 955  : 
; 956  :         // 1. Disable receiver, flush RX FIFO and clear status bits
; 957  :         m_pUsbEpcsrRegs->RXCSR =
; 958  :             MGC_M_RXCSR_FLUSHFIFO |
; 959  :             MGC_M_RXCSR_H_RXSTALL |
; 960  :             MGC_M_RXCSR_H_ERROR |
; 961  :             MGC_M_RXCSR_DATAERROR |
; 962  :             MGC_M_RXCSR_RXPKTRDY;

  02dc0	e59d3068	 ldr         r3, [sp, #0x68]
  02dc4	e2833014	 add         r3, r3, #0x14
  02dc8	e5933000	 ldr         r3, [r3]
  02dcc	e2832006	 add         r2, r3, #6
  02dd0	e3a0305d	 mov         r3, #0x5D
  02dd4	e1c230b0	 strh        r3, [r2]

; 963  : 
; 964  :         // 2. Set USB controller TD bit
; 965  :         m_pUsbRegs->TEARDOWN |= ((1 << m_epNum) << USB_OTG_RXTD_SHIFT);

  02dd8	e59d3068	 ldr         r3, [sp, #0x68]
  02ddc	e2833010	 add         r3, r3, #0x10
  02de0	e5933000	 ldr         r3, [r3]
  02de4	e283101c	 add         r1, r3, #0x1C
  02de8	e59d3068	 ldr         r3, [sp, #0x68]
  02dec	e283303d	 add         r3, r3, #0x3D
  02df0	e5d33000	 ldrb        r3, [r3]
  02df4	e1a02003	 mov         r2, r3
  02df8	e3a03001	 mov         r3, #1
  02dfc	e1a02213	 mov         r2, r3, lsl r2
  02e00	e5913000	 ldr         r3, [r1]
  02e04	e1832002	 orr         r2, r3, r2
  02e08	e59d3068	 ldr         r3, [sp, #0x68]
  02e0c	e2833010	 add         r3, r3, #0x10
  02e10	e5933000	 ldr         r3, [r3]
  02e14	e283301c	 add         r3, r3, #0x1C
  02e18	e5832000	 str         r2, [r3]

; 966  : 
; 967  :         // 3. Initiate channel tear-down
; 968  :         m_pCppiChannelRegs->RXGCR =
; 969  :             BIT31 | /* Enable */
; 970  :             BIT30 | /* Tear-down */
; 971  :             BIT24 | /* Retry on starvation */
; 972  :             BIT14 | /* Host descriptor type (default) */ /*
; 973  :             qmgr |
; 974  :             qnum */ USB_CPPI_RXCMPL_QNUM_HOST;

  02e1c	e59d3068	 ldr         r3, [sp, #0x68]
  02e20	e283301c	 add         r3, r3, #0x1C
  02e24	e5933000	 ldr         r3, [r3]
  02e28	e2832008	 add         r2, r3, #8
  02e2c	e59f33b0	 ldr         r3, [pc, #0x3B0]
  02e30	e5823000	 str         r3, [r2]

; 975  : 
; 976  :         // 4. Wait for CDMA completion and retry (due to TX disconnect issue)
; 977  :         if (m_fIsTeardownPending)

  02e34	e59d3068	 ldr         r3, [sp, #0x68]
  02e38	e2833038	 add         r3, r3, #0x38
  02e3c	e5933000	 ldr         r3, [r3]
  02e40	e3530000	 cmp         r3, #0
  02e44	0a000001	 beq         |$LN9@CancelTran|

; 978  :             Sleep(10);

  02e48	e3a0000a	 mov         r0, #0xA
  02e4c	eb000000	 bl          Sleep
  02e50		 |$LN9@CancelTran|

; 979  : 
; 980  :         DWORD tc0 = GetTickCount();

  02e50	eb000000	 bl          GetTickCount
  02e54	e58d003c	 str         r0, [sp, #0x3C]
  02e58	e59d303c	 ldr         r3, [sp, #0x3C]
  02e5c	e58d3014	 str         r3, [sp, #0x14]
  02e60		 |$LN8@CancelTran|

; 981  :         while ((m_fIsTeardownPending) && ((GetTickCount() - tc0) < 2000)) {

  02e60	e59d3068	 ldr         r3, [sp, #0x68]
  02e64	e2833038	 add         r3, r3, #0x38
  02e68	e5933000	 ldr         r3, [r3]
  02e6c	e3530000	 cmp         r3, #0
  02e70	0a00001c	 beq         |$LN7@CancelTran|
  02e74	eb000000	 bl          GetTickCount
  02e78	e58d0040	 str         r0, [sp, #0x40]
  02e7c	e59d2040	 ldr         r2, [sp, #0x40]
  02e80	e59d3014	 ldr         r3, [sp, #0x14]
  02e84	e0423003	 sub         r3, r2, r3
  02e88	e3530e7d	 cmp         r3, #0x7D, 28
  02e8c	2a000015	 bcs         |$LN7@CancelTran|

; 982  :             m_pUsbRegs->TEARDOWN |= ((1 << m_epNum) << USB_OTG_RXTD_SHIFT);

  02e90	e59d3068	 ldr         r3, [sp, #0x68]
  02e94	e2833010	 add         r3, r3, #0x10
  02e98	e5933000	 ldr         r3, [r3]
  02e9c	e283101c	 add         r1, r3, #0x1C
  02ea0	e59d3068	 ldr         r3, [sp, #0x68]
  02ea4	e283303d	 add         r3, r3, #0x3D
  02ea8	e5d33000	 ldrb        r3, [r3]
  02eac	e1a02003	 mov         r2, r3
  02eb0	e3a03001	 mov         r3, #1
  02eb4	e1a02213	 mov         r2, r3, lsl r2
  02eb8	e5913000	 ldr         r3, [r1]
  02ebc	e1832002	 orr         r2, r3, r2
  02ec0	e59d3068	 ldr         r3, [sp, #0x68]
  02ec4	e2833010	 add         r3, r3, #0x10
  02ec8	e5933000	 ldr         r3, [r3]
  02ecc	e283301c	 add         r3, r3, #0x1C
  02ed0	e5832000	 str         r2, [r3]

; 983  :             KickCompletionCallback();

  02ed4	e59d0068	 ldr         r0, [sp, #0x68]
  02ed8	eb000000	 bl          |?KickCompletionCallback@CCppiDmaChannel@@IAAXXZ|

; 984  :             Sleep(10);

  02edc	e3a0000a	 mov         r0, #0xA
  02ee0	eb000000	 bl          Sleep

; 985  :         }

  02ee4	eaffffdd	 b           |$LN8@CancelTran|
  02ee8		 |$LN7@CancelTran|

; 986  : 
; 987  :         /* 5. Set USB controller TD bit */
; 988  :         m_pUsbRegs->TEARDOWN |= ((1 << m_epNum) << USB_OTG_RXTD_SHIFT);

  02ee8	e59d3068	 ldr         r3, [sp, #0x68]
  02eec	e2833010	 add         r3, r3, #0x10
  02ef0	e5933000	 ldr         r3, [r3]
  02ef4	e283101c	 add         r1, r3, #0x1C
  02ef8	e59d3068	 ldr         r3, [sp, #0x68]
  02efc	e283303d	 add         r3, r3, #0x3D
  02f00	e5d33000	 ldrb        r3, [r3]
  02f04	e1a02003	 mov         r2, r3
  02f08	e3a03001	 mov         r3, #1
  02f0c	e1a02213	 mov         r2, r3, lsl r2
  02f10	e5913000	 ldr         r3, [r1]
  02f14	e1832002	 orr         r2, r3, r2
  02f18	e59d3068	 ldr         r3, [sp, #0x68]
  02f1c	e2833010	 add         r3, r3, #0x10
  02f20	e5933000	 ldr         r3, [r3]
  02f24	e283301c	 add         r3, r3, #0x1C
  02f28	e5832000	 str         r2, [r3]

; 989  : 
; 990  :         /* 6. Flush the EP's FIFO */
; 991  :         m_pUsbEpcsrRegs->RXCSR =
; 992  :             MGC_M_RXCSR_FLUSHFIFO |
; 993  :             MGC_M_RXCSR_H_RXSTALL |
; 994  :             MGC_M_RXCSR_H_ERROR |
; 995  :             MGC_M_RXCSR_DATAERROR |
; 996  :             MGC_M_RXCSR_RXPKTRDY;

  02f2c	e59d3068	 ldr         r3, [sp, #0x68]
  02f30	e2833014	 add         r3, r3, #0x14
  02f34	e5933000	 ldr         r3, [r3]
  02f38	e2832006	 add         r2, r3, #6
  02f3c	e3a0305d	 mov         r3, #0x5D
  02f40	e1c230b0	 strh        r3, [r2]

; 997  : 
; 998  :         if (m_fIsTeardownPending) {

  02f44	e59d3068	 ldr         r3, [sp, #0x68]
  02f48	e2833038	 add         r3, r3, #0x38
  02f4c	e5933000	 ldr         r3, [r3]
  02f50	e3530000	 cmp         r3, #0
  02f54	0a00000d	 beq         |$LN6@CancelTran|

; 999  :             RETAILMSG(CPPI_DBG_ERROR,
; 1000 :                 (L" CCppiDmaRxChannel::CancelTransfer: %s Ch %u (EP %u) - Timed-out (lost teardown descriptor)!\r\n",
; 1001 :                 szDir,
; 1002 :                 m_chNum,
; 1003 :                 m_epNum));

  02f58	e59d3068	 ldr         r3, [sp, #0x68]
  02f5c	e283303d	 add         r3, r3, #0x3D
  02f60	e5d33000	 ldrb        r3, [r3]
  02f64	e59d2068	 ldr         r2, [sp, #0x68]
  02f68	e282203c	 add         r2, r2, #0x3C
  02f6c	e5d22000	 ldrb        r2, [r2]
  02f70	e59d1010	 ldr         r1, [sp, #0x10]
  02f74	e59f0264	 ldr         r0, [pc, #0x264]
  02f78	eb000000	 bl          NKDbgPrintfW
  02f7c	e3a03001	 mov         r3, #1
  02f80	e58d3044	 str         r3, [sp, #0x44]
  02f84	ea000001	 b           |$LN18@CancelTran|
  02f88	e3a03000	 mov         r3, #0
  02f8c	e58d3044	 str         r3, [sp, #0x44]
  02f90		 |$LN18@CancelTran|
  02f90		 |$LN6@CancelTran|
  02f90		 |$LN5@CancelTran|

; 1004 :         }
; 1005 : 
; 1006 :         // Pop all aborted BDs from the channel's queue and free them
; 1007 :         for(;;) {
; 1008 :             HOST_DESCRIPTOR* pHd = (HOST_DESCRIPTOR*)QueuePop();

  02f90	e59d0068	 ldr         r0, [sp, #0x68]
  02f94	eb000000	 bl          |?QueuePop@CCppiDmaChannel@@IAAPAXXZ|
  02f98	e58d0048	 str         r0, [sp, #0x48]
  02f9c	e59d3048	 ldr         r3, [sp, #0x48]
  02fa0	e58d3018	 str         r3, [sp, #0x18]

; 1009 :             if (pHd != NULL) {

  02fa4	e59d3018	 ldr         r3, [sp, #0x18]
  02fa8	e3530000	 cmp         r3, #0
  02fac	0a000011	 beq         |$LN3@CancelTran|

; 1010 :                 m_pController->HdFree(pHd);

  02fb0	e59d1018	 ldr         r1, [sp, #0x18]
  02fb4	e59d3068	 ldr         r3, [sp, #0x68]
  02fb8	e283300c	 add         r3, r3, #0xC
  02fbc	e5930000	 ldr         r0, [r3]
  02fc0	eb000000	 bl          |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z|

; 1011 :                 DEBUGMSG(ZONE_WARNING,
; 1012 :                     (L" CCppiDmaRxChannel::CancelTransfer: Recovered %s BD on queue %u after tear-down\r\n",
; 1013 :                     szDir,
; 1014 :                     m_qNum));

  02fc4	e59d3068	 ldr         r3, [sp, #0x68]
  02fc8	e283303e	 add         r3, r3, #0x3E
  02fcc	e5d33000	 ldrb        r3, [r3]
  02fd0	e1a02003	 mov         r2, r3
  02fd4	e59d1010	 ldr         r1, [sp, #0x10]
  02fd8	e59f01fc	 ldr         r0, [pc, #0x1FC]
  02fdc	eb000000	 bl          NKDbgPrintfW
  02fe0	e3a03001	 mov         r3, #1
  02fe4	e58d304c	 str         r3, [sp, #0x4C]
  02fe8	ea000001	 b           |$LN20@CancelTran|
  02fec	e3a03000	 mov         r3, #0
  02ff0	e58d304c	 str         r3, [sp, #0x4C]
  02ff4		 |$LN20@CancelTran|

; 1015 :             }
; 1016 :             else

  02ff4	ea000000	 b           |$LN2@CancelTran|
  02ff8		 |$LN3@CancelTran|

; 1017 :                 break;

  02ff8	ea000000	 b           |$LN4@CancelTran|
  02ffc		 |$LN2@CancelTran|

; 1018 :         }

  02ffc	eaffffe3	 b           |$LN5@CancelTran|
  03000		 |$LN4@CancelTran|

; 1019 : 
; 1020 :         DEBUGMSG(CPPI_DBG_RX,
; 1021 :             (L" CCppiDmaRxChannel::CancelTransfer: %s - Cancelled %u/%u\r\n",
; 1022 :             szDir,
; 1023 :             m_nTransferComplete,
; 1024 :             m_nTransferLength));

  03000	ea00000b	 b           |$LN21@CancelTran|
  03004	e59d3068	 ldr         r3, [sp, #0x68]
  03008	e2833088	 add         r3, r3, #0x88
  0300c	e5933000	 ldr         r3, [r3]
  03010	e59d2068	 ldr         r2, [sp, #0x68]
  03014	e2822098	 add         r2, r2, #0x98
  03018	e5922000	 ldr         r2, [r2]
  0301c	e59d1010	 ldr         r1, [sp, #0x10]
  03020	e59f01b0	 ldr         r0, [pc, #0x1B0]
  03024	eb000000	 bl          NKDbgPrintfW
  03028	e3a03001	 mov         r3, #1
  0302c	e58d3050	 str         r3, [sp, #0x50]
  03030	ea000001	 b           |$LN22@CancelTran|
  03034		 |$LN21@CancelTran|
  03034	e3a03000	 mov         r3, #0
  03038	e58d3050	 str         r3, [sp, #0x50]
  0303c		 |$LN22@CancelTran|

; 1025 : 
; 1026 :         // Cancel complete
; 1027 :         m_fIsCancelPending = FALSE;

  0303c	e59d3068	 ldr         r3, [sp, #0x68]
  03040	e2832058	 add         r2, r3, #0x58
  03044	e3a03000	 mov         r3, #0
  03048	e5823000	 str         r3, [r2]

; 1028 : 
; 1029 :         // Let the client know we are canceling this transfer
; 1030 :         if (m_pCallback)

  0304c	e59d3068	 ldr         r3, [sp, #0x68]
  03050	e2833040	 add         r3, r3, #0x40
  03054	e5933000	 ldr         r3, [r3]
  03058	e3530000	 cmp         r3, #0
  0305c	0a000018	 beq         |$LN1@CancelTran|

; 1031 :         {
; 1032 :             m_pCallback(
; 1033 :                 this,
; 1034 :                 m_nCancelStatus,
; 1035 :                 m_nTransferLength,
; 1036 :                 m_nTransferComplete,
; 1037 :                 0,
; 1038 :                 m_pTransferCookie1,
; 1039 :                 m_pTransferCookie2);

  03060	e59d3068	 ldr         r3, [sp, #0x68]
  03064	e2833094	 add         r3, r3, #0x94
  03068	e5933000	 ldr         r3, [r3]
  0306c	e58d3008	 str         r3, [sp, #8]
  03070	e59d3068	 ldr         r3, [sp, #0x68]
  03074	e2833090	 add         r3, r3, #0x90
  03078	e5933000	 ldr         r3, [r3]
  0307c	e58d3004	 str         r3, [sp, #4]
  03080	e3a03000	 mov         r3, #0
  03084	e58d3000	 str         r3, [sp]
  03088	e59d3068	 ldr         r3, [sp, #0x68]
  0308c	e2833098	 add         r3, r3, #0x98
  03090	e5933000	 ldr         r3, [r3]
  03094	e59d2068	 ldr         r2, [sp, #0x68]
  03098	e2822088	 add         r2, r2, #0x88
  0309c	e5922000	 ldr         r2, [r2]
  030a0	e59d1068	 ldr         r1, [sp, #0x68]
  030a4	e281105c	 add         r1, r1, #0x5C
  030a8	e5911000	 ldr         r1, [r1]
  030ac	e59d0068	 ldr         r0, [sp, #0x68]
  030b0	e59de068	 ldr         lr, [sp, #0x68]
  030b4	e28ee040	 add         lr, lr, #0x40
  030b8	e59e4000	 ldr         r4, [lr]
  030bc	e1a0e00f	 mov         lr, pc
  030c0	e12fff14	 bx          r4
  030c4		 |$LN1@CancelTran|

; 1040 :         }
; 1041 : 
; 1042 :         // Cleanup
; 1043 :         m_pvTransferBuffer = NULL;

  030c4	e59d3068	 ldr         r3, [sp, #0x68]
  030c8	e283206c	 add         r2, r3, #0x6C
  030cc	e3a03000	 mov         r3, #0
  030d0	e5823000	 str         r3, [r2]

; 1044 :         m_paTransferBuffer = 0;

  030d4	e59d3068	 ldr         r3, [sp, #0x68]
  030d8	e2832070	 add         r2, r3, #0x70
  030dc	e3a03000	 mov         r3, #0
  030e0	e5823000	 str         r3, [r2]

; 1045 :         m_nTransferLength = 0;

  030e4	e59d3068	 ldr         r3, [sp, #0x68]
  030e8	e2832088	 add         r2, r3, #0x88
  030ec	e3a03000	 mov         r3, #0
  030f0	e5823000	 str         r3, [r2]

; 1046 :         m_nTransferFrames = 0;

  030f4	e59d3068	 ldr         r3, [sp, #0x68]
  030f8	e2832074	 add         r2, r3, #0x74
  030fc	e3a03000	 mov         r3, #0
  03100	e5823000	 str         r3, [r2]

; 1047 :         m_nSegmentPending = 0;

  03104	e59d3068	 ldr         r3, [sp, #0x68]
  03108	e28320a0	 add         r2, r3, #0xA0
  0310c	e3a03000	 mov         r3, #0
  03110	e5823000	 str         r3, [r2]

; 1048 :         m_nSegmentFramesPending = 0;

  03114	e59d3068	 ldr         r3, [sp, #0x68]
  03118	e28320a4	 add         r2, r3, #0xA4
  0311c	e3a03000	 mov         r3, #0
  03120	e5823000	 str         r3, [r2]

; 1049 :         m_nCancelStatus = USB_CANCELED_ERROR;

  03124	e59d3068	 ldr         r3, [sp, #0x68]
  03128	e283205c	 add         r2, r3, #0x5C
  0312c	e3a03c01	 mov         r3, #1, 24
  03130	e3833001	 orr         r3, r3, #1
  03134	e5823000	 str         r3, [r2]

; 1050 : 
; 1051 :         // Done
; 1052 :         fResult = TRUE;

  03138	e3a03001	 mov         r3, #1
  0313c	e58d300c	 str         r3, [sp, #0xC]
  03140		 |$LN10@CancelTran|

; 1053 :     }
; 1054 : 
; 1055 :     // Go unsafe
; 1056 :     ChUnlock();

  03140	e59d0068	 ldr         r0, [sp, #0x68]
  03144	eb000000	 bl          |?ChUnlock@CCppiDmaChannel@@IAAXXZ|

; 1057 : 
; 1058 :     DEBUGMSG(CPPI_DBG_RX || ZONE_VERBOSE,
; 1059 :         (L"-CCppiDmaRxChannel::CancelTransfer: %s Ch %u (EP %u) - %s\r\n",
; 1060 :         szDir,
; 1061 :         m_chNum,
; 1062 :         m_epNum,
; 1063 :         m_fIsTeardownPending ?
; 1064 :             L"FAILED!" :
; 1065 :             L"SUCCEEDED"));

  03148	ea000017	 b           |$LN25@CancelTran|
  0314c	e59d3068	 ldr         r3, [sp, #0x68]
  03150	e2833038	 add         r3, r3, #0x38
  03154	e5933000	 ldr         r3, [r3]
  03158	e3530000	 cmp         r3, #0
  0315c	0a000002	 beq         |$LN23@CancelTran|
  03160	e59f306c	 ldr         r3, [pc, #0x6C]
  03164	e58d3054	 str         r3, [sp, #0x54]
  03168	ea000001	 b           |$LN24@CancelTran|
  0316c		 |$LN23@CancelTran|
  0316c	e59f305c	 ldr         r3, [pc, #0x5C]
  03170	e58d3054	 str         r3, [sp, #0x54]
  03174		 |$LN24@CancelTran|
  03174	e59d3054	 ldr         r3, [sp, #0x54]
  03178	e58d3000	 str         r3, [sp]
  0317c	e59d3068	 ldr         r3, [sp, #0x68]
  03180	e283303d	 add         r3, r3, #0x3D
  03184	e5d33000	 ldrb        r3, [r3]
  03188	e59d2068	 ldr         r2, [sp, #0x68]
  0318c	e282203c	 add         r2, r2, #0x3C
  03190	e5d22000	 ldrb        r2, [r2]
  03194	e59d1010	 ldr         r1, [sp, #0x10]
  03198	e59f002c	 ldr         r0, [pc, #0x2C]
  0319c	eb000000	 bl          NKDbgPrintfW
  031a0	e3a03001	 mov         r3, #1
  031a4	e58d3058	 str         r3, [sp, #0x58]
  031a8	ea000001	 b           |$LN26@CancelTran|
  031ac		 |$LN25@CancelTran|
  031ac	e3a03000	 mov         r3, #0
  031b0	e58d3058	 str         r3, [sp, #0x58]
  031b4		 |$LN26@CancelTran|

; 1066 : 
; 1067 :     return fResult;

  031b4	e59d300c	 ldr         r3, [sp, #0xC]
  031b8	e58d302c	 str         r3, [sp, #0x2C]

; 1068 : }

  031bc	e59d002c	 ldr         r0, [sp, #0x2C]
  031c0	e28dd05c	 add         sp, sp, #0x5C
  031c4	e89d6010	 ldmia       sp, {r4, sp, lr}
  031c8	e12fff1e	 bx          lr
  031cc		 |$LN30@CancelTran|
  031cc		 |$LN31@CancelTran|
  031cc	00000000	 DCD         |??_C@_1HI@KPBHDHGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  031d0		 |$LN32@CancelTran|
  031d0	00000000	 DCD         |??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@|
  031d4		 |$LN33@CancelTran|
  031d4	00000000	 DCD         |??_C@_1BA@HGGLBLNE@?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$CB?$AA?$AA@|
  031d8		 |$LN34@CancelTran|
  031d8	00000000	 DCD         |??_C@_1HG@LBHEPHCF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  031dc		 |$LN35@CancelTran|
  031dc	00000000	 DCD         |??_C@_1KE@BCGPEBHD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  031e0		 |$LN36@CancelTran|
  031e0	00000000	 DCD         |??_C@_1LO@IKNKCAJE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  031e4		 |$LN37@CancelTran|
  031e4	c1004041	 DCD         0xc1004041
  031e8		 |$LN38@CancelTran|
  031e8	00000000	 DCD         |??_C@_1GO@IPIPJPLF@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  031ec		 |$LN39@CancelTran|
  031ec	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  031f0		 |$LN40@CancelTran|
  031f0	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  031f4		 |$M40736|

			 ENDP  ; |?CancelTransfer@CCppiDmaRxChannel@@UAAHXZ|, CCppiDmaRxChannel::CancelTransfer

	EXPORT	|??_C@_1EO@FHOBIMCI@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|?IsRndisMode@CCppiDmaChannel@@IBAHXZ|	; CCppiDmaChannel::IsRndisMode
	EXPORT	|??_C@_1LO@LLBCIHNB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@HNPKDDID@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'

  00068			 AREA	 |.pdata|, PDATA
|$T40767| DCD	|$LN24@ScheduleTr|
	DCD	0x4000d104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FHOBIMCI@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "S", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@LLBCIHNB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "S", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, ",", 0x0, " "
	DCB	0x0, "p", 0x0, "v", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@HNPKDDID@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "S", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  031f4			 AREA	 |.text|, CODE, ARM

  031f4		 |?ScheduleTransfer@CCppiDmaRxChannel@@QAAHXZ| PROC ; CCppiDmaRxChannel::ScheduleTransfer

; 1072 : {

  031f4		 |$LN24@ScheduleTr|
  031f4	e1a0c00d	 mov         r12, sp
  031f8	e92d0001	 stmdb       sp!, {r0}
  031fc	e92d5000	 stmdb       sp!, {r12, lr}
  03200	e24dd030	 sub         sp, sp, #0x30
  03204		 |$M40764|

; 1073 :     DEBUGMSG(CPPI_DBG_RX || ZONE_VERBOSE,
; 1074 :         (L"+CCppiDmaRxChannel::ScheduleTransfer: %s Ch %u (EP %u)\r\n",
; 1075 :         IsOut() ? L"OUT" : L"IN",
; 1076 :         m_chNum,
; 1077 :         m_epNum));

  03204	ea000016	 b           |$LN12@ScheduleTr|
  03208	e59d0038	 ldr         r0, [sp, #0x38]
  0320c	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  03210	e58d0010	 str         r0, [sp, #0x10]
  03214	e59d3010	 ldr         r3, [sp, #0x10]
  03218	e3530000	 cmp         r3, #0
  0321c	0a000002	 beq         |$LN10@ScheduleTr|
  03220	e59f330c	 ldr         r3, [pc, #0x30C]
  03224	e58d3014	 str         r3, [sp, #0x14]
  03228	ea000001	 b           |$LN11@ScheduleTr|
  0322c		 |$LN10@ScheduleTr|
  0322c	e59f32fc	 ldr         r3, [pc, #0x2FC]
  03230	e58d3014	 str         r3, [sp, #0x14]
  03234		 |$LN11@ScheduleTr|
  03234	e59d3038	 ldr         r3, [sp, #0x38]
  03238	e283303d	 add         r3, r3, #0x3D
  0323c	e5d33000	 ldrb        r3, [r3]
  03240	e59d2038	 ldr         r2, [sp, #0x38]
  03244	e282203c	 add         r2, r2, #0x3C
  03248	e5d22000	 ldrb        r2, [r2]
  0324c	e59d1014	 ldr         r1, [sp, #0x14]
  03250	e59f02d4	 ldr         r0, [pc, #0x2D4]
  03254	eb000000	 bl          NKDbgPrintfW
  03258	e3a03001	 mov         r3, #1
  0325c	e58d3018	 str         r3, [sp, #0x18]
  03260	ea000001	 b           |$LN13@ScheduleTr|
  03264		 |$LN12@ScheduleTr|
  03264	e3a03000	 mov         r3, #0
  03268	e58d3018	 str         r3, [sp, #0x18]
  0326c		 |$LN13@ScheduleTr|

; 1078 : 
; 1079 :     if (!m_nTransferLength || (!m_pvTransferBuffer && !m_paTransferBuffer))

  0326c	e59d3038	 ldr         r3, [sp, #0x38]
  03270	e2833088	 add         r3, r3, #0x88
  03274	e5933000	 ldr         r3, [r3]
  03278	e3530000	 cmp         r3, #0
  0327c	0a000009	 beq         |$LN6@ScheduleTr|
  03280	e59d3038	 ldr         r3, [sp, #0x38]
  03284	e283306c	 add         r3, r3, #0x6C
  03288	e5933000	 ldr         r3, [r3]
  0328c	e3530000	 cmp         r3, #0
  03290	1a000017	 bne         |$LN7@ScheduleTr|
  03294	e59d3038	 ldr         r3, [sp, #0x38]
  03298	e2833070	 add         r3, r3, #0x70
  0329c	e5933000	 ldr         r3, [r3]
  032a0	e3530000	 cmp         r3, #0
  032a4	1a000012	 bne         |$LN7@ScheduleTr|
  032a8		 |$LN6@ScheduleTr|

; 1080 :     {
; 1081 :         RETAILMSG(CPPI_DBG_ERROR,
; 1082 :             (L" CCppiDmaRxChannel::ScheduleTransfer: ERROR - Invalid state, pv 0x%08x, pa 0x%08x, length %u\r\n",
; 1083 :             m_pvTransferBuffer,
; 1084 :             m_paTransferBuffer,
; 1085 :             m_nTransferLength));

  032a8	e59d3038	 ldr         r3, [sp, #0x38]
  032ac	e2833088	 add         r3, r3, #0x88
  032b0	e5933000	 ldr         r3, [r3]
  032b4	e59d2038	 ldr         r2, [sp, #0x38]
  032b8	e2822070	 add         r2, r2, #0x70
  032bc	e5922000	 ldr         r2, [r2]
  032c0	e59d1038	 ldr         r1, [sp, #0x38]
  032c4	e281106c	 add         r1, r1, #0x6C
  032c8	e5911000	 ldr         r1, [r1]
  032cc	e59f0254	 ldr         r0, [pc, #0x254]
  032d0	eb000000	 bl          NKDbgPrintfW
  032d4	e3a03001	 mov         r3, #1
  032d8	e58d301c	 str         r3, [sp, #0x1C]
  032dc	ea000001	 b           |$LN15@ScheduleTr|
  032e0	e3a03000	 mov         r3, #0
  032e4	e58d301c	 str         r3, [sp, #0x1C]
  032e8		 |$LN15@ScheduleTr|

; 1086 : 
; 1087 :         return FALSE;

  032e8	e3a03000	 mov         r3, #0
  032ec	e58d300c	 str         r3, [sp, #0xC]
  032f0	ea000083	 b           |$LN8@ScheduleTr|
  032f4		 |$LN7@ScheduleTr|

; 1088 :     }
; 1089 : 
; 1090 :     DEBUGCHK(m_nSegmentPending == 0);

  032f4	e59d3038	 ldr         r3, [sp, #0x38]
  032f8	e28330a0	 add         r3, r3, #0xA0
  032fc	e5933000	 ldr         r3, [r3]
  03300	e3530000	 cmp         r3, #0
  03304	1a000002	 bne         |$LN16@ScheduleTr|
  03308	e3a03001	 mov         r3, #1
  0330c	e58d3020	 str         r3, [sp, #0x20]
  03310	ea000008	 b           |$LN17@ScheduleTr|
  03314		 |$LN16@ScheduleTr|
  03314	e3a03b01	 mov         r3, #1, 22
  03318	e3833042	 orr         r3, r3, #0x42
  0331c	e59f2200	 ldr         r2, [pc, #0x200]
  03320	e59f11f8	 ldr         r1, [pc, #0x1F8]
  03324	e59f01f0	 ldr         r0, [pc, #0x1F0]
  03328	eb000000	 bl          NKDbgPrintfW
  0332c	e6000010	 __debugbreak_ce
  03330	e3a03000	 mov         r3, #0
  03334	e58d3020	 str         r3, [sp, #0x20]
  03338		 |$LN17@ScheduleTr|

; 1091 :     DEBUGCHK(m_nSegmentFramesPending == 0);

  03338	e59d3038	 ldr         r3, [sp, #0x38]
  0333c	e28330a4	 add         r3, r3, #0xA4
  03340	e5933000	 ldr         r3, [r3]
  03344	e3530000	 cmp         r3, #0
  03348	1a000002	 bne         |$LN18@ScheduleTr|
  0334c	e3a03001	 mov         r3, #1
  03350	e58d3024	 str         r3, [sp, #0x24]
  03354	ea000008	 b           |$LN19@ScheduleTr|
  03358		 |$LN18@ScheduleTr|
  03358	e3a03b01	 mov         r3, #1, 22
  0335c	e3833043	 orr         r3, r3, #0x43
  03360	e59f21bc	 ldr         r2, [pc, #0x1BC]
  03364	e59f11b4	 ldr         r1, [pc, #0x1B4]
  03368	e59f01ac	 ldr         r0, [pc, #0x1AC]
  0336c	eb000000	 bl          NKDbgPrintfW
  03370	e6000010	 __debugbreak_ce
  03374	e3a03000	 mov         r3, #0
  03378	e58d3024	 str         r3, [sp, #0x24]
  0337c		 |$LN19@ScheduleTr|

; 1092 : 
; 1093 :     // A channel that has been torn down must be re-enabled before re-use
; 1094 :     if ((m_pCppiChannelRegs->RXGCR & BIT31) == 0)

  0337c	e59d3038	 ldr         r3, [sp, #0x38]
  03380	e283301c	 add         r3, r3, #0x1C
  03384	e5933000	 ldr         r3, [r3]
  03388	e2833008	 add         r3, r3, #8
  0338c	e5933000	 ldr         r3, [r3]
  03390	e3130102	 tst         r3, #2, 2
  03394	1a000005	 bne         |$LN5@ScheduleTr|

; 1095 :         m_pCppiChannelRegs->RXGCR =
; 1096 :             BIT31 | /* Enable */
; 1097 :             BIT24 | /* Retry on starvation */
; 1098 :             BIT14 | /* Host descriptor type (default) */ /*
; 1099 :             qmgr |
; 1100 :             qnum? */ USB_CPPI_RXCMPL_QNUM_HOST;

  03398	e59d3038	 ldr         r3, [sp, #0x38]
  0339c	e283301c	 add         r3, r3, #0x1C
  033a0	e5933000	 ldr         r3, [r3]
  033a4	e2832008	 add         r2, r3, #8
  033a8	e59f3168	 ldr         r3, [pc, #0x168]
  033ac	e5823000	 str         r3, [r2]
  033b0		 |$LN5@ScheduleTr|

; 1101 : 
; 1102 :     // See if we can use AUTOREQ mode
; 1103 :     UINT32 nAutoreqMask = 0;

  033b0	e3a03000	 mov         r3, #0
  033b4	e58d3004	 str         r3, [sp, #4]

; 1104 :     if (IsRndisMode())

  033b8	e59d0038	 ldr         r0, [sp, #0x38]
  033bc	eb000000	 bl          |?IsRndisMode@CCppiDmaChannel@@IBAHXZ|
  033c0	e58d0028	 str         r0, [sp, #0x28]
  033c4	e59d3028	 ldr         r3, [sp, #0x28]
  033c8	e3530000	 cmp         r3, #0
  033cc	0a000008	 beq         |$LN4@ScheduleTr|

; 1105 :     {
; 1106 :         // In RNDIS mode we can use autoreq for all packets by using the "all but EOP" option.
; 1107 :         nAutoreqMask = (0x1 << (m_chNum * 2));

  033d0	e59d3038	 ldr         r3, [sp, #0x38]
  033d4	e283303c	 add         r3, r3, #0x3C
  033d8	e5d33000	 ldrb        r3, [r3]
  033dc	e1a01003	 mov         r1, r3
  033e0	e3a03002	 mov         r3, #2
  033e4	e0020391	 mul         r2, r1, r3
  033e8	e3a03001	 mov         r3, #1
  033ec	e1a03213	 mov         r3, r3, lsl r2
  033f0	e58d3004	 str         r3, [sp, #4]
  033f4		 |$LN4@ScheduleTr|

; 1108 :     }
; 1109 : 
; 1110 :     // Update Autoreq reg
; 1111 :     UINT32 nAutoreq = m_pUsbRegs->AUTOREQR & ~(0x3 << (m_chNum * 2));

  033f4	e59d3038	 ldr         r3, [sp, #0x38]
  033f8	e2833010	 add         r3, r3, #0x10
  033fc	e5933000	 ldr         r3, [r3]
  03400	e2830014	 add         r0, r3, #0x14
  03404	e59d3038	 ldr         r3, [sp, #0x38]
  03408	e283303c	 add         r3, r3, #0x3C
  0340c	e5d33000	 ldrb        r3, [r3]
  03410	e1a01003	 mov         r1, r3
  03414	e3a03002	 mov         r3, #2
  03418	e0020391	 mul         r2, r1, r3
  0341c	e3a03003	 mov         r3, #3
  03420	e1a03213	 mov         r3, r3, lsl r2
  03424	e1e02003	 mvn         r2, r3
  03428	e5903000	 ldr         r3, [r0]
  0342c	e0033002	 and         r3, r3, r2
  03430	e58d3008	 str         r3, [sp, #8]

; 1112 :     nAutoreq |= nAutoreqMask;

  03434	e59d2008	 ldr         r2, [sp, #8]
  03438	e59d3004	 ldr         r3, [sp, #4]
  0343c	e1823003	 orr         r3, r2, r3
  03440	e58d3008	 str         r3, [sp, #8]

; 1113 :     m_pUsbRegs->AUTOREQR = nAutoreq;

  03444	e59d3038	 ldr         r3, [sp, #0x38]
  03448	e2833010	 add         r3, r3, #0x10
  0344c	e5933000	 ldr         r3, [r3]
  03450	e2832014	 add         r2, r3, #0x14
  03454	e59d3008	 ldr         r3, [sp, #8]
  03458	e5823000	 str         r3, [r2]

; 1114 : 
; 1115 :     // Create HDs for next segment
; 1116 :     NextSegment();

  0345c	e59d0038	 ldr         r0, [sp, #0x38]
  03460	eb000000	 bl          |?NextSegment@CCppiDmaChannel@@IAAXXZ|

; 1117 : 
; 1118 :     // Enable DMA mode, trigger IN token
; 1119 :     UINT16 nCsr = MGC_M_RXCSR_DMAENAB | MGC_M_RXCSR_H_REQPKT;

  03464	e3a03a02	 mov         r3, #2, 20
  03468	e3833020	 orr         r3, r3, #0x20
  0346c	e1cd30b0	 strh        r3, [sp]

; 1120 : 
; 1121 :     if (m_nTransferComplete == 0)

  03470	e59d3038	 ldr         r3, [sp, #0x38]
  03474	e2833098	 add         r3, r3, #0x98
  03478	e5933000	 ldr         r3, [r3]
  0347c	e3530000	 cmp         r3, #0
  03480	1a00000f	 bne         |$LN3@ScheduleTr|

; 1122 :     {
; 1123 :         if (m_nTransferOptions & USB_TOGGLE_CARRY)

  03484	e59d3038	 ldr         r3, [sp, #0x38]
  03488	e283308c	 add         r3, r3, #0x8C
  0348c	e5933000	 ldr         r3, [r3]
  03490	e3130102	 tst         r3, #2, 2
  03494	0a000005	 beq         |$LN2@ScheduleTr|

; 1124 :             nCsr |= (MGC_M_RXCSR_H_WR_DATATOGGLE | MGC_M_RXCSR_H_DATATOGGLE);

  03498	e1dd30b0	 ldrh        r3, [sp]
  0349c	e3833c06	 orr         r3, r3, #6, 24
  034a0	e1a03803	 mov         r3, r3, lsl #16
  034a4	e1a03823	 mov         r3, r3, lsr #16
  034a8	e1cd30b0	 strh        r3, [sp]

; 1125 :         else

  034ac	ea000004	 b           |$LN1@ScheduleTr|
  034b0		 |$LN2@ScheduleTr|

; 1126 :             nCsr |= MGC_M_RXCSR_CLRDATATOG;

  034b0	e1dd30b0	 ldrh        r3, [sp]
  034b4	e3833080	 orr         r3, r3, #0x80
  034b8	e1a03803	 mov         r3, r3, lsl #16
  034bc	e1a03823	 mov         r3, r3, lsr #16
  034c0	e1cd30b0	 strh        r3, [sp]
  034c4		 |$LN1@ScheduleTr|
  034c4		 |$LN3@ScheduleTr|

; 1127 :     }
; 1128 : 
; 1129 :     m_pUsbEpcsrRegs->RXCSR = nCsr;

  034c4	e59d3038	 ldr         r3, [sp, #0x38]
  034c8	e2833014	 add         r3, r3, #0x14
  034cc	e5933000	 ldr         r3, [r3]
  034d0	e2832006	 add         r2, r3, #6
  034d4	e1dd30b0	 ldrh        r3, [sp]
  034d8	e1c230b0	 strh        r3, [r2]

; 1130 : 
; 1131 :     DEBUGMSG(CPPI_DBG_RX || ZONE_VERBOSE,
; 1132 :         (L"-CCppiDmaRxChannel::ScheduleTransfer\r\n"));

  034dc	ea000004	 b           |$LN20@ScheduleTr|
  034e0	e59f002c	 ldr         r0, [pc, #0x2C]
  034e4	eb000000	 bl          NKDbgPrintfW
  034e8	e3a03001	 mov         r3, #1
  034ec	e58d302c	 str         r3, [sp, #0x2C]
  034f0	ea000001	 b           |$LN21@ScheduleTr|
  034f4		 |$LN20@ScheduleTr|
  034f4	e3a03000	 mov         r3, #0
  034f8	e58d302c	 str         r3, [sp, #0x2C]
  034fc		 |$LN21@ScheduleTr|

; 1133 : 
; 1134 :     return TRUE;

  034fc	e3a03001	 mov         r3, #1
  03500	e58d300c	 str         r3, [sp, #0xC]
  03504		 |$LN8@ScheduleTr|

; 1135 : }

  03504	e59d000c	 ldr         r0, [sp, #0xC]
  03508	e28dd030	 add         sp, sp, #0x30
  0350c	e89d6000	 ldmia       sp, {sp, lr}
  03510	e12fff1e	 bx          lr
  03514		 |$LN25@ScheduleTr|
  03514		 |$LN26@ScheduleTr|
  03514	00000000	 DCD         |??_C@_1EO@FHOBIMCI@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@|
  03518		 |$LN27@ScheduleTr|
  03518	81004041	 DCD         0x81004041
  0351c		 |$LN28@ScheduleTr|
  0351c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  03520		 |$LN29@ScheduleTr|
  03520	00000000	 DCD         |dpCurSettings|
  03524		 |$LN30@ScheduleTr|
  03524	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03528		 |$LN31@ScheduleTr|
  03528	00000000	 DCD         |??_C@_1LO@LLBCIHNB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@|
  0352c		 |$LN32@ScheduleTr|
  0352c	00000000	 DCD         |??_C@_1HC@HNPKDDID@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@|
  03530		 |$LN33@ScheduleTr|
  03530	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  03534		 |$LN34@ScheduleTr|
  03534	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  03538		 |$M40765|

			 ENDP  ; |?ScheduleTransfer@CCppiDmaRxChannel@@QAAHXZ|, CCppiDmaRxChannel::ScheduleTransfer

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40785| DCD	|$LN7@IsRndisMod|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsRndisMode@CCppiDmaChannel@@IBAHXZ| PROC ; CCppiDmaChannel::IsRndisMode

; 111  :     BOOL   IsRndisMode()       const { return m_fIsRndisMode != 0; }

  00000		 |$LN7@IsRndisMod|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M40782|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e28330b0	 add         r3, r3, #0xB0
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000002	 beq         |$LN3@IsRndisMod|
  00024	e3a03001	 mov         r3, #1
  00028	e58d3004	 str         r3, [sp, #4]
  0002c	ea000001	 b           |$LN4@IsRndisMod|
  00030		 |$LN3@IsRndisMod|
  00030	e3a03000	 mov         r3, #0
  00034	e58d3004	 str         r3, [sp, #4]
  00038		 |$LN4@IsRndisMod|
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M40783|

			 ENDP  ; |?IsRndisMode@CCppiDmaChannel@@IBAHXZ|, CCppiDmaChannel::IsRndisMode

	EXPORT	|??_C@_1KO@FMPGDFLJ@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@KNKLKHE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AA?5@| [ DATA ] ; `string'

  00070			 AREA	 |.pdata|, PDATA
|$T40797| DCD	|$LN15@ValidateTr|
	DCD	0x40005d04
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KO@FMPGDFLJ@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAT?$AAr?$AAa?$AAn@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I", 0x0, "N"
	DCB	0x0, "G", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "R", 0x0, "X"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, ",", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ","
	DCB	0x0, " ", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@KNKLKHE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AA?5@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O"
	DCB	0x0, "R", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "R", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  03538			 AREA	 |.text|, CODE, ARM

  03538		 |?ValidateTransferState@CCppiDmaRxChannel@@UAAHXZ| PROC ; CCppiDmaRxChannel::ValidateTransferState

; 1139 : {

  03538		 |$LN15@ValidateTr|
  03538	e1a0c00d	 mov         r12, sp
  0353c	e92d0001	 stmdb       sp!, {r0}
  03540	e92d5000	 stmdb       sp!, {r12, lr}
  03544	e24dd018	 sub         sp, sp, #0x18
  03548		 |$M40794|

; 1140 :     BOOL fStateOK = TRUE;

  03548	e3a03001	 mov         r3, #1
  0354c	e58d3000	 str         r3, [sp]

; 1141 : 
; 1142 :     if (IsInUse())

  03550	e59d0020	 ldr         r0, [sp, #0x20]
  03554	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  03558	e58d000c	 str         r0, [sp, #0xC]
  0355c	e59d300c	 ldr         r3, [sp, #0xC]
  03560	e3530000	 cmp         r3, #0
  03564	0a000048	 beq         |$LN6@ValidateTr|

; 1143 :     {
; 1144 :         // Check for errors
; 1145 :         UINT16 nCsr = m_pUsbEpcsrRegs->RXCSR;

  03568	e59d3020	 ldr         r3, [sp, #0x20]
  0356c	e2833014	 add         r3, r3, #0x14
  03570	e5933000	 ldr         r3, [r3]
  03574	e2833006	 add         r3, r3, #6
  03578	e1d330b0	 ldrh        r3, [r3]
  0357c	e1cd30b4	 strh        r3, [sp, #4]

; 1146 :         if (nCsr & (MGC_M_RXCSR_H_RXSTALL | MGC_M_RXCSR_H_ERROR | MGC_M_RXCSR_DATAERROR))

  03580	e1dd30b4	 ldrh        r3, [sp, #4]
  03584	e313004c	 tst         r3, #0x4C
  03588	0a000027	 beq         |$LN5@ValidateTr|

; 1147 :         {
; 1148 :             DEBUGMSG(CPPI_DBG_ERROR,
; 1149 :                 (L" CCppiDmaRxChannel:: ERROR - Ch %u, EP %u, CSR 0x%08x\r\n",
; 1150 :                 m_chNum,
; 1151 :                 m_epNum,
; 1152 :                 nCsr));

  0358c	e1dd30b4	 ldrh        r3, [sp, #4]
  03590	e59d2020	 ldr         r2, [sp, #0x20]
  03594	e282203d	 add         r2, r2, #0x3D
  03598	e5d22000	 ldrb        r2, [r2]
  0359c	e59d1020	 ldr         r1, [sp, #0x20]
  035a0	e281103c	 add         r1, r1, #0x3C
  035a4	e5d11000	 ldrb        r1, [r1]
  035a8	e59f00f8	 ldr         r0, [pc, #0xF8]
  035ac	eb000000	 bl          NKDbgPrintfW
  035b0	e3a03001	 mov         r3, #1
  035b4	e58d3010	 str         r3, [sp, #0x10]
  035b8	ea000001	 b           |$LN10@ValidateTr|
  035bc	e3a03000	 mov         r3, #0
  035c0	e58d3010	 str         r3, [sp, #0x10]
  035c4		 |$LN10@ValidateTr|

; 1153 : 
; 1154 :             // Simply disable receiver, flush RX FIFO and leave status bits set
; 1155 :             m_pUsbEpcsrRegs->RXCSR =
; 1156 :                 MGC_M_RXCSR_DMAENAB |
; 1157 :                 MGC_M_RXCSR_FLUSHFIFO |
; 1158 :                 MGC_M_RXCSR_H_RXSTALL |
; 1159 :                 MGC_M_RXCSR_H_ERROR |
; 1160 :                 MGC_M_RXCSR_DATAERROR |
; 1161 :                 MGC_M_RXCSR_RXPKTRDY;

  035c4	e59d3020	 ldr         r3, [sp, #0x20]
  035c8	e2833014	 add         r3, r3, #0x14
  035cc	e5933000	 ldr         r3, [r3]
  035d0	e2832006	 add         r2, r3, #6
  035d4	e3a03a02	 mov         r3, #2, 20
  035d8	e383305d	 orr         r3, r3, #0x5D
  035dc	e1c230b0	 strh        r3, [r2]

; 1162 : 
; 1163 :             if (nCsr & MGC_M_RXCSR_H_RXSTALL)

  035e0	e1dd30b4	 ldrh        r3, [sp, #4]
  035e4	e3130040	 tst         r3, #0x40
  035e8	0a000004	 beq         |$LN4@ValidateTr|

; 1164 :             {
; 1165 :                 m_nCancelStatus = USB_STALL_ERROR;

  035ec	e59d3020	 ldr         r3, [sp, #0x20]
  035f0	e283205c	 add         r2, r3, #0x5C
  035f4	e3a03004	 mov         r3, #4
  035f8	e5823000	 str         r3, [r2]

; 1166 :             }
; 1167 :             else

  035fc	ea000003	 b           |$LN3@ValidateTr|
  03600		 |$LN4@ValidateTr|

; 1168 :             {
; 1169 :                 m_nCancelStatus = USB_DEVICE_NOT_RESPONDING_ERROR;

  03600	e59d3020	 ldr         r3, [sp, #0x20]
  03604	e283205c	 add         r2, r3, #0x5C
  03608	e3a03005	 mov         r3, #5
  0360c	e5823000	 str         r3, [r2]
  03610		 |$LN3@ValidateTr|

; 1170 :             }
; 1171 : 
; 1172 :             // Need to perform a cancel (teardown) to clear out all HDs.  This is picked up
; 1173 :             // from the processing thread in CCppiDmaController::ValidateTransferState().
; 1174 :             m_fIsCancelPending = TRUE;

  03610	e59d3020	 ldr         r3, [sp, #0x20]
  03614	e2832058	 add         r2, r3, #0x58
  03618	e3a03001	 mov         r3, #1
  0361c	e5823000	 str         r3, [r2]

; 1175 :             fStateOK = FALSE;

  03620	e3a03000	 mov         r3, #0
  03624	e58d3000	 str         r3, [sp]
  03628	ea000017	 b           |$LN2@ValidateTr|
  0362c		 |$LN5@ValidateTr|

; 1176 :         }
; 1177 :         else if ((nCsr & MGC_M_RXCSR_DMAENAB) != MGC_M_RXCSR_DMAENAB)

  0362c	e1dd30b4	 ldrh        r3, [sp, #4]
  03630	e2033a02	 and         r3, r3, #2, 20
  03634	e3530a02	 cmp         r3, #2, 20
  03638	0a000013	 beq         |$LN1@ValidateTr|

; 1178 :         {
; 1179 :             DEBUGMSG(ZONE_WARNING,
; 1180 :                 (L" CCppiDmaRxChannel::ValidateTransferState: WARNING - RX DMA reset, EP %u, CSR 0x%08x\r\n",
; 1181 :                 m_epNum, nCsr));

  0363c	e1dd30b4	 ldrh        r3, [sp, #4]
  03640	e1a02003	 mov         r2, r3
  03644	e59d3020	 ldr         r3, [sp, #0x20]
  03648	e283303d	 add         r3, r3, #0x3D
  0364c	e5d33000	 ldrb        r3, [r3]
  03650	e1a01003	 mov         r1, r3
  03654	e59f0048	 ldr         r0, [pc, #0x48]
  03658	eb000000	 bl          NKDbgPrintfW
  0365c	e3a03001	 mov         r3, #1
  03660	e58d3014	 str         r3, [sp, #0x14]
  03664	ea000001	 b           |$LN12@ValidateTr|
  03668	e3a03000	 mov         r3, #0
  0366c	e58d3014	 str         r3, [sp, #0x14]
  03670		 |$LN12@ValidateTr|

; 1182 :             m_pUsbEpcsrRegs->RXCSR =
; 1183 :                 MGC_M_RXCSR_DMAENAB |
; 1184 :                 MGC_M_RXCSR_H_RXSTALL |
; 1185 :                 MGC_M_RXCSR_H_ERROR |
; 1186 :                 MGC_M_RXCSR_DATAERROR |
; 1187 :                 MGC_M_RXCSR_RXPKTRDY;

  03670	e59d3020	 ldr         r3, [sp, #0x20]
  03674	e2833014	 add         r3, r3, #0x14
  03678	e5933000	 ldr         r3, [r3]
  0367c	e2832006	 add         r2, r3, #6
  03680	e3a03a02	 mov         r3, #2, 20
  03684	e383304d	 orr         r3, r3, #0x4D
  03688	e1c230b0	 strh        r3, [r2]
  0368c		 |$LN1@ValidateTr|
  0368c		 |$LN2@ValidateTr|
  0368c		 |$LN6@ValidateTr|

; 1188 :         }
; 1189 :     }
; 1190 : 
; 1191 :     return fStateOK;

  0368c	e59d3000	 ldr         r3, [sp]
  03690	e58d3008	 str         r3, [sp, #8]

; 1192 : }

  03694	e59d0008	 ldr         r0, [sp, #8]
  03698	e28dd018	 add         sp, sp, #0x18
  0369c	e89d6000	 ldmia       sp, {sp, lr}
  036a0	e12fff1e	 bx          lr
  036a4		 |$LN16@ValidateTr|
  036a4		 |$LN17@ValidateTr|
  036a4	00000000	 DCD         |??_C@_1KO@FMPGDFLJ@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAT?$AAr?$AAa?$AAn@|
  036a8		 |$LN18@ValidateTr|
  036a8	00000000	 DCD         |??_C@_1HA@KNKLKHE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AA?5@|
  036ac		 |$M40795|

			 ENDP  ; |?ValidateTransferState@CCppiDmaRxChannel@@UAAHXZ|, CCppiDmaRxChannel::ValidateTransferState

	EXPORT	|??_C@_1FK@BBCIMFO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@KIHOAGAD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KM@NFPCCNBK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@JNMLDHIC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KK@DEELJGKF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KG@FNMOGAKM@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@LIKGEAGA@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@MKJNDHOF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@EBNGGKDK@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'

  00078			 AREA	 |.pdata|, PDATA
|$T40843| DCD	|$LN58@ProcessCom@2|
	DCD	0x4001f704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@BBCIMFO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@KIHOAGAD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, "/", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KM@NFPCCNBK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "u"
	DCB	0x0, "/", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, "/", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "("
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "o", 0x0, "f", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, "s", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@JNMLDHIC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "("
	DCB	0x0, "o", 0x0, "f", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ")"
	DCB	0x0, ",", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KK@DEELJGKF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I"
	DCB	0x0, "N", 0x0, "G", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D"
	DCB	0x0, "r", 0x0, "o", 0x0, "p", 0x0, "p", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@FNMOGAKM@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I"
	DCB	0x0, "N", 0x0, "G", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D"
	DCB	0x0, "r", 0x0, "o", 0x0, "p", 0x0, "p", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "e"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@LIKGEAGA@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I"
	DCB	0x0, "N", 0x0, "G", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "L"
	DCB	0x0, "i", 0x0, "n", 0x0, "k", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@MKJNDHOF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@EBNGGKDK@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  036ac			 AREA	 |.text|, CODE, ARM

  036ac		 |?ProcessCompletedPacket@CCppiDmaRxChannel@@UAAXPAU_HOST_DESCRIPTOR@@@Z| PROC ; CCppiDmaRxChannel::ProcessCompletedPacket

; 1195 : {

  036ac		 |$LN58@ProcessCom@2|
  036ac	e1a0c00d	 mov         r12, sp
  036b0	e92d0003	 stmdb       sp!, {r0, r1}
  036b4	e92d5010	 stmdb       sp!, {r4, r12, lr}
  036b8	e24dd094	 sub         sp, sp, #0x94
  036bc		 |$M40840|

; 1196 :     BOOL fTransferComplete = FALSE;

  036bc	e3a03000	 mov         r3, #0
  036c0	e58d301c	 str         r3, [sp, #0x1C]

; 1197 :     BOOL fSegmentComplete = FALSE;

  036c4	e3a03000	 mov         r3, #0
  036c8	e58d3014	 str         r3, [sp, #0x14]

; 1198 :     UINT32 nStatus = USB_NO_ERROR;

  036cc	e3a03000	 mov         r3, #0
  036d0	e58d3010	 str         r3, [sp, #0x10]

; 1199 :     UINT32 nTransferred = 0;

  036d4	e3a03000	 mov         r3, #0
  036d8	e58d3018	 str         r3, [sp, #0x18]

; 1200 :     UINT16 nCsr;
; 1201 : 
; 1202 :     DEBUGMSG(CPPI_DBG_RX || ZONE_VERBOSE,
; 1203 :         (L"+CCppiDmaRxChannel::ProcessCompletedPacket: %s Ch %u (EP %u)\r\n",
; 1204 :         m_fIsOut ? L"OUT" : L"IN",
; 1205 :         m_chNum,
; 1206 :         m_epNum));

  036dc	ea000015	 b           |$LN26@ProcessCom@2|
  036e0	e59d30a0	 ldr         r3, [sp, #0xA0]
  036e4	e2833034	 add         r3, r3, #0x34
  036e8	e5933000	 ldr         r3, [r3]
  036ec	e3530000	 cmp         r3, #0
  036f0	0a000002	 beq         |$LN24@ProcessCom@2|
  036f4	e59f3788	 ldr         r3, [pc, #0x788]
  036f8	e58d3040	 str         r3, [sp, #0x40]
  036fc	ea000001	 b           |$LN25@ProcessCom@2|
  03700		 |$LN24@ProcessCom@2|
  03700	e59f3778	 ldr         r3, [pc, #0x778]
  03704	e58d3040	 str         r3, [sp, #0x40]
  03708		 |$LN25@ProcessCom@2|
  03708	e59d30a0	 ldr         r3, [sp, #0xA0]
  0370c	e283303d	 add         r3, r3, #0x3D
  03710	e5d33000	 ldrb        r3, [r3]
  03714	e59d20a0	 ldr         r2, [sp, #0xA0]
  03718	e282203c	 add         r2, r2, #0x3C
  0371c	e5d22000	 ldrb        r2, [r2]
  03720	e59d1040	 ldr         r1, [sp, #0x40]
  03724	e59f0750	 ldr         r0, [pc, #0x750]
  03728	eb000000	 bl          NKDbgPrintfW
  0372c	e3a03001	 mov         r3, #1
  03730	e58d3044	 str         r3, [sp, #0x44]
  03734	ea000001	 b           |$LN27@ProcessCom@2|
  03738		 |$LN26@ProcessCom@2|
  03738	e3a03000	 mov         r3, #0
  0373c	e58d3044	 str         r3, [sp, #0x44]
  03740		 |$LN27@ProcessCom@2|

; 1207 : 
; 1208 :     if (pHd == NULL) {

  03740	e59d30a4	 ldr         r3, [sp, #0xA4]
  03744	e3530000	 cmp         r3, #0
  03748	1a000007	 bne         |$LN21@ProcessCom@2|

; 1209 :         DEBUGMSG(ZONE_WARNING,
; 1210 :             (L"-CCppiDmaRxChannel::ProcessCompletedPacket: ERROR - NULL HD\r\n"));

  0374c	e59f0724	 ldr         r0, [pc, #0x724]
  03750	eb000000	 bl          NKDbgPrintfW
  03754	e3a03001	 mov         r3, #1
  03758	e58d3048	 str         r3, [sp, #0x48]
  0375c	ea000001	 b           |$LN29@ProcessCom@2|
  03760	e3a03000	 mov         r3, #0
  03764	e58d3048	 str         r3, [sp, #0x48]
  03768		 |$LN29@ProcessCom@2|

; 1211 :         return;

  03768	ea0001b5	 b           |$LN22@ProcessCom@2|
  0376c		 |$LN21@ProcessCom@2|

; 1212 :     }
; 1213 : 
; 1214 :     if (pHd->NextPtr != 0) {

  0376c	e59d30a4	 ldr         r3, [sp, #0xA4]
  03770	e2833014	 add         r3, r3, #0x14
  03774	e5933000	 ldr         r3, [r3]
  03778	e3530000	 cmp         r3, #0
  0377c	0a000006	 beq         |$LN20@ProcessCom@2|

; 1215 :         DEBUGMSG(ZONE_WARNING,
; 1216 :             (L" CCppiDmaRxChannel::ProcessCompletedPacket: WARNING - Linked HD\r\n"));

  03780	e59f06ec	 ldr         r0, [pc, #0x6EC]
  03784	eb000000	 bl          NKDbgPrintfW
  03788	e3a03001	 mov         r3, #1
  0378c	e58d304c	 str         r3, [sp, #0x4C]
  03790	ea000001	 b           |$LN31@ProcessCom@2|
  03794	e3a03000	 mov         r3, #0
  03798	e58d304c	 str         r3, [sp, #0x4C]
  0379c		 |$LN31@ProcessCom@2|
  0379c		 |$LN20@ProcessCom@2|

; 1217 :     }
; 1218 : 
; 1219 :     if (m_fIsTeardownPending) {

  0379c	e59d30a0	 ldr         r3, [sp, #0xA0]
  037a0	e2833038	 add         r3, r3, #0x38
  037a4	e5933000	 ldr         r3, [r3]
  037a8	e3530000	 cmp         r3, #0
  037ac	0a00000c	 beq         |$LN19@ProcessCom@2|

; 1220 :         DEBUGMSG(ZONE_WARNING,
; 1221 :             (L"-CCppiDmaRxChannel::ProcessCompletedPacket: WARNING - Dropped (pending teardown)\r\n"));

  037b0	e59f06b8	 ldr         r0, [pc, #0x6B8]
  037b4	eb000000	 bl          NKDbgPrintfW
  037b8	e3a03001	 mov         r3, #1
  037bc	e58d3050	 str         r3, [sp, #0x50]
  037c0	ea000001	 b           |$LN33@ProcessCom@2|
  037c4	e3a03000	 mov         r3, #0
  037c8	e58d3050	 str         r3, [sp, #0x50]
  037cc		 |$LN33@ProcessCom@2|

; 1222 :         // Free the HD
; 1223 :         m_pController->HdFree(pHd);

  037cc	e59d10a4	 ldr         r1, [sp, #0xA4]
  037d0	e59d30a0	 ldr         r3, [sp, #0xA0]
  037d4	e283300c	 add         r3, r3, #0xC
  037d8	e5930000	 ldr         r0, [r3]
  037dc	eb000000	 bl          |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z|

; 1224 :         return;

  037e0	ea000197	 b           |$LN22@ProcessCom@2|
  037e4		 |$LN19@ProcessCom@2|

; 1225 :     }
; 1226 : 
; 1227 :     ChLock();

  037e4	e59d00a0	 ldr         r0, [sp, #0xA0]
  037e8	eb000000	 bl          |?ChLock@CCppiDmaChannel@@IAAXXZ|

; 1228 : 
; 1229 :     if (!IsInUse()) {

  037ec	e59d00a0	 ldr         r0, [sp, #0xA0]
  037f0	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  037f4	e58d0054	 str         r0, [sp, #0x54]
  037f8	e59d3054	 ldr         r3, [sp, #0x54]
  037fc	e3530000	 cmp         r3, #0
  03800	1a000008	 bne         |$LN18@ProcessCom@2|

; 1230 :         DEBUGMSG(ZONE_WARNING,
; 1231 :             (L"-CCppiDmaRxChannel::ProcessCompletedPacket: WARNING - Dropped (transfer cancelled)\r\n"));

  03804	e59f0660	 ldr         r0, [pc, #0x660]
  03808	eb000000	 bl          NKDbgPrintfW
  0380c	e3a03001	 mov         r3, #1
  03810	e58d3058	 str         r3, [sp, #0x58]
  03814	ea000001	 b           |$LN35@ProcessCom@2|
  03818	e3a03000	 mov         r3, #0
  0381c	e58d3058	 str         r3, [sp, #0x58]
  03820		 |$LN35@ProcessCom@2|

; 1232 :         goto _done;

  03820	ea000178	 b           |$LN17@ProcessCom@2|
  03824	ea000177	 b           |$_done$39419|
  03828		 |$LN18@ProcessCom@2|

; 1233 :     }
; 1234 : 
; 1235 :     if (!ValidateTransferState())

  03828	e59d30a0	 ldr         r3, [sp, #0xA0]
  0382c	e5933000	 ldr         r3, [r3]
  03830	e283300c	 add         r3, r3, #0xC
  03834	e59d00a0	 ldr         r0, [sp, #0xA0]
  03838	e5933000	 ldr         r3, [r3]
  0383c	e1a0e00f	 mov         lr, pc
  03840	e12fff13	 bx          r3
  03844	e58d005c	 str         r0, [sp, #0x5C]
  03848	e59d305c	 ldr         r3, [sp, #0x5C]
  0384c	e3530000	 cmp         r3, #0
  03850	1a000001	 bne         |$LN16@ProcessCom@2|
  03854	ea00016b	 b           |$LN15@ProcessCom@2|

; 1236 :         goto _done;

  03858	ea00016a	 b           |$_done$39419|
  0385c		 |$LN16@ProcessCom@2|

; 1237 : 
; 1238 :     // Some extra debug validation
; 1239 :     DEBUGCHK(m_pvTransferBuffer || m_paTransferBuffer);

  0385c	e59d30a0	 ldr         r3, [sp, #0xA0]
  03860	e283306c	 add         r3, r3, #0x6C
  03864	e5933000	 ldr         r3, [r3]
  03868	e3530000	 cmp         r3, #0
  0386c	1a00000e	 bne         |$LN36@ProcessCom@2|
  03870	e59d30a0	 ldr         r3, [sp, #0xA0]
  03874	e2833070	 add         r3, r3, #0x70
  03878	e5933000	 ldr         r3, [r3]
  0387c	e3530000	 cmp         r3, #0
  03880	1a000009	 bne         |$LN36@ProcessCom@2|
  03884	e3a03b01	 mov         r3, #1, 22
  03888	e38330d7	 orr         r3, r3, #0xD7
  0388c	e59f25d4	 ldr         r2, [pc, #0x5D4]
  03890	e59f15cc	 ldr         r1, [pc, #0x5CC]
  03894	e59f05c4	 ldr         r0, [pc, #0x5C4]
  03898	eb000000	 bl          NKDbgPrintfW
  0389c	e6000010	 __debugbreak_ce
  038a0	e3a03000	 mov         r3, #0
  038a4	e58d3060	 str         r3, [sp, #0x60]
  038a8	ea000001	 b           |$LN37@ProcessCom@2|
  038ac		 |$LN36@ProcessCom@2|
  038ac	e3a03001	 mov         r3, #1
  038b0	e58d3060	 str         r3, [sp, #0x60]
  038b4		 |$LN37@ProcessCom@2|

; 1240 :     DEBUGCHK(m_nTransferLength > 0);

  038b4	e59d30a0	 ldr         r3, [sp, #0xA0]
  038b8	e2833088	 add         r3, r3, #0x88
  038bc	e5933000	 ldr         r3, [r3]
  038c0	e3530000	 cmp         r3, #0
  038c4	9a000002	 bls         |$LN38@ProcessCom@2|
  038c8	e3a03001	 mov         r3, #1
  038cc	e58d3064	 str         r3, [sp, #0x64]
  038d0	ea000008	 b           |$LN39@ProcessCom@2|
  038d4		 |$LN38@ProcessCom@2|
  038d4	e3a03b01	 mov         r3, #1, 22
  038d8	e38330d8	 orr         r3, r3, #0xD8
  038dc	e59f2584	 ldr         r2, [pc, #0x584]
  038e0	e59f157c	 ldr         r1, [pc, #0x57C]
  038e4	e59f0574	 ldr         r0, [pc, #0x574]
  038e8	eb000000	 bl          NKDbgPrintfW
  038ec	e6000010	 __debugbreak_ce
  038f0	e3a03000	 mov         r3, #0
  038f4	e58d3064	 str         r3, [sp, #0x64]
  038f8		 |$LN39@ProcessCom@2|

; 1241 :     DEBUGCHK(m_nSegmentPending > 0);

  038f8	e59d30a0	 ldr         r3, [sp, #0xA0]
  038fc	e28330a0	 add         r3, r3, #0xA0
  03900	e5933000	 ldr         r3, [r3]
  03904	e3530000	 cmp         r3, #0
  03908	9a000002	 bls         |$LN40@ProcessCom@2|
  0390c	e3a03001	 mov         r3, #1
  03910	e58d3068	 str         r3, [sp, #0x68]
  03914	ea000008	 b           |$LN41@ProcessCom@2|
  03918		 |$LN40@ProcessCom@2|
  03918	e3a03b01	 mov         r3, #1, 22
  0391c	e38330d9	 orr         r3, r3, #0xD9
  03920	e59f2540	 ldr         r2, [pc, #0x540]
  03924	e59f1538	 ldr         r1, [pc, #0x538]
  03928	e59f0530	 ldr         r0, [pc, #0x530]
  0392c	eb000000	 bl          NKDbgPrintfW
  03930	e6000010	 __debugbreak_ce
  03934	e3a03000	 mov         r3, #0
  03938	e58d3068	 str         r3, [sp, #0x68]
  0393c		 |$LN41@ProcessCom@2|

; 1242 :     DEBUGCHK(m_nSegmentComplete < m_nSegmentPending);

  0393c	e59d30a0	 ldr         r3, [sp, #0xA0]
  03940	e28320ac	 add         r2, r3, #0xAC
  03944	e59d30a0	 ldr         r3, [sp, #0xA0]
  03948	e28330a0	 add         r3, r3, #0xA0
  0394c	e5922000	 ldr         r2, [r2]
  03950	e5933000	 ldr         r3, [r3]
  03954	e1520003	 cmp         r2, r3
  03958	2a000002	 bcs         |$LN42@ProcessCom@2|
  0395c	e3a03001	 mov         r3, #1
  03960	e58d306c	 str         r3, [sp, #0x6C]
  03964	ea000008	 b           |$LN43@ProcessCom@2|
  03968		 |$LN42@ProcessCom@2|
  03968	e3a03b01	 mov         r3, #1, 22
  0396c	e38330da	 orr         r3, r3, #0xDA
  03970	e59f24f0	 ldr         r2, [pc, #0x4F0]
  03974	e59f14e8	 ldr         r1, [pc, #0x4E8]
  03978	e59f04e0	 ldr         r0, [pc, #0x4E0]
  0397c	eb000000	 bl          NKDbgPrintfW
  03980	e6000010	 __debugbreak_ce
  03984	e3a03000	 mov         r3, #0
  03988	e58d306c	 str         r3, [sp, #0x6C]
  0398c		 |$LN43@ProcessCom@2|

; 1243 :     DEBUGCHK(m_nSegmentFramesComplete < m_nSegmentFramesPending);

  0398c	e59d30a0	 ldr         r3, [sp, #0xA0]
  03990	e28320a8	 add         r2, r3, #0xA8
  03994	e59d30a0	 ldr         r3, [sp, #0xA0]
  03998	e28330a4	 add         r3, r3, #0xA4
  0399c	e5922000	 ldr         r2, [r2]
  039a0	e5933000	 ldr         r3, [r3]
  039a4	e1520003	 cmp         r2, r3
  039a8	2a000002	 bcs         |$LN44@ProcessCom@2|
  039ac	e3a03001	 mov         r3, #1
  039b0	e58d3070	 str         r3, [sp, #0x70]
  039b4	ea000008	 b           |$LN45@ProcessCom@2|
  039b8		 |$LN44@ProcessCom@2|
  039b8	e3a03b01	 mov         r3, #1, 22
  039bc	e38330db	 orr         r3, r3, #0xDB
  039c0	e59f24a0	 ldr         r2, [pc, #0x4A0]
  039c4	e59f1498	 ldr         r1, [pc, #0x498]
  039c8	e59f0490	 ldr         r0, [pc, #0x490]
  039cc	eb000000	 bl          NKDbgPrintfW
  039d0	e6000010	 __debugbreak_ce
  039d4	e3a03000	 mov         r3, #0
  039d8	e58d3070	 str         r3, [sp, #0x70]
  039dc		 |$LN45@ProcessCom@2|

; 1244 : 
; 1245 :     // Count the frames in this packet (and their sizes)
; 1246 :     m_nSegmentFramesComplete++;

  039dc	e59d30a0	 ldr         r3, [sp, #0xA0]
  039e0	e28330a8	 add         r3, r3, #0xA8
  039e4	e5933000	 ldr         r3, [r3]
  039e8	e2832001	 add         r2, r3, #1
  039ec	e59d30a0	 ldr         r3, [sp, #0xA0]
  039f0	e28330a8	 add         r3, r3, #0xA8
  039f4	e5832000	 str         r2, [r3]

; 1247 :     nTransferred = pHd->BuffLen & USB_CPPI41_HD_BUF_LENGTH_MASK;

  039f8	e59d30a4	 ldr         r3, [sp, #0xA4]
  039fc	e283300c	 add         r3, r3, #0xC
  03a00	e5932000	 ldr         r2, [r3]
  03a04	e3e034ff	 mvn         r3, #0xFF, 8
  03a08	e2233503	 eor         r3, r3, #3, 10
  03a0c	e0023003	 and         r3, r2, r3
  03a10	e58d3018	 str         r3, [sp, #0x18]

; 1248 : 
; 1249 :     // Check for zero length packet
; 1250 :     if (pHd->PacketInfo & USB_CPPI41_PKT_FLAGS_ZLP)

  03a14	e59d30a4	 ldr         r3, [sp, #0xA4]
  03a18	e2833008	 add         r3, r3, #8
  03a1c	e5933000	 ldr         r3, [r3]
  03a20	e3130702	 tst         r3, #2, 14
  03a24	0a000001	 beq         |$LN14@ProcessCom@2|

; 1251 :         nTransferred = 0;

  03a28	e3a03000	 mov         r3, #0
  03a2c	e58d3018	 str         r3, [sp, #0x18]
  03a30		 |$LN14@ProcessCom@2|

; 1252 : 
; 1253 :     m_nSegmentComplete += nTransferred;

  03a30	e59d30a0	 ldr         r3, [sp, #0xA0]
  03a34	e28330ac	 add         r3, r3, #0xAC
  03a38	e5932000	 ldr         r2, [r3]
  03a3c	e59d3018	 ldr         r3, [sp, #0x18]
  03a40	e0822003	 add         r2, r2, r3
  03a44	e59d30a0	 ldr         r3, [sp, #0xA0]
  03a48	e28330ac	 add         r3, r3, #0xAC
  03a4c	e5832000	 str         r2, [r3]

; 1254 : 
; 1255 :     DEBUGMSG(CPPI_DBG_RX,
; 1256 :              (L" CCppiDmaRxChannel::ProcessCompletedPacket: Packet %u (of %u), bytes %u\r\n",
; 1257 :               m_nSegmentFramesComplete,
; 1258 :               m_nSegmentFramesPending,
; 1259 :               nTransferred));

  03a50	ea00000b	 b           |$LN46@ProcessCom@2|
  03a54	e59d3018	 ldr         r3, [sp, #0x18]
  03a58	e59d20a0	 ldr         r2, [sp, #0xA0]
  03a5c	e28220a4	 add         r2, r2, #0xA4
  03a60	e5922000	 ldr         r2, [r2]
  03a64	e59d10a0	 ldr         r1, [sp, #0xA0]
  03a68	e28110a8	 add         r1, r1, #0xA8
  03a6c	e5911000	 ldr         r1, [r1]
  03a70	e59f03e4	 ldr         r0, [pc, #0x3E4]
  03a74	eb000000	 bl          NKDbgPrintfW
  03a78	e3a03001	 mov         r3, #1
  03a7c	e58d3074	 str         r3, [sp, #0x74]
  03a80	ea000001	 b           |$LN47@ProcessCom@2|
  03a84		 |$LN46@ProcessCom@2|
  03a84	e3a03000	 mov         r3, #0
  03a88	e58d3074	 str         r3, [sp, #0x74]
  03a8c		 |$LN47@ProcessCom@2|

; 1260 : 
; 1261 :     if (IsIso())

  03a8c	e59d00a0	 ldr         r0, [sp, #0xA0]
  03a90	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  03a94	e58d0078	 str         r0, [sp, #0x78]
  03a98	e59d3078	 ldr         r3, [sp, #0x78]
  03a9c	e3530000	 cmp         r3, #0
  03aa0	0a00000b	 beq         |$LN13@ProcessCom@2|

; 1262 :     {
; 1263 :         // Store the actual frame length for ISO
; 1264 :         m_pTransferFrameLengthsActual[m_nSegmentFramesComplete-1] = nTransferred;

  03aa4	e59d30a0	 ldr         r3, [sp, #0xA0]
  03aa8	e283007c	 add         r0, r3, #0x7C
  03aac	e59d30a0	 ldr         r3, [sp, #0xA0]
  03ab0	e28330a8	 add         r3, r3, #0xA8
  03ab4	e5933000	 ldr         r3, [r3]
  03ab8	e2431001	 sub         r1, r3, #1
  03abc	e3a03004	 mov         r3, #4
  03ac0	e0020391	 mul         r2, r1, r3
  03ac4	e5903000	 ldr         r3, [r0]
  03ac8	e0832002	 add         r2, r3, r2
  03acc	e59d3018	 ldr         r3, [sp, #0x18]
  03ad0	e5823000	 str         r3, [r2]
  03ad4		 |$LN13@ProcessCom@2|

; 1265 :     }
; 1266 : 
; 1267 :     // Check for segment complete
; 1268 :     if (IsRndisMode())

  03ad4	e59d00a0	 ldr         r0, [sp, #0xA0]
  03ad8	eb000000	 bl          |?IsRndisMode@CCppiDmaChannel@@IBAHXZ|
  03adc	e58d007c	 str         r0, [sp, #0x7C]
  03ae0	e59d307c	 ldr         r3, [sp, #0x7C]
  03ae4	e3530000	 cmp         r3, #0
  03ae8	0a000002	 beq         |$LN12@ProcessCom@2|

; 1269 :     {
; 1270 :         // In Rndis mode, there is only one BD so segment has completed
; 1271 :         fSegmentComplete = TRUE;

  03aec	e3a03001	 mov         r3, #1
  03af0	e58d3014	 str         r3, [sp, #0x14]

; 1272 :     }
; 1273 :     else // Transparent mode

  03af4	ea00002a	 b           |$LN11@ProcessCom@2|
  03af8		 |$LN12@ProcessCom@2|

; 1274 :     {
; 1275 :         // Check for short packet. Isochronous endpoints handled elsewhere.
; 1276 :         if (!IsIso() && (nTransferred < m_epMaxPkt))

  03af8	e59d00a0	 ldr         r0, [sp, #0xA0]
  03afc	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  03b00	e58d0080	 str         r0, [sp, #0x80]
  03b04	e59d3080	 ldr         r3, [sp, #0x80]
  03b08	e3530000	 cmp         r3, #0
  03b0c	1a00001a	 bne         |$LN10@ProcessCom@2|
  03b10	e59d30a0	 ldr         r3, [sp, #0xA0]
  03b14	e2833064	 add         r3, r3, #0x64
  03b18	e1d320b0	 ldrh        r2, [r3]
  03b1c	e59d3018	 ldr         r3, [sp, #0x18]
  03b20	e1530002	 cmp         r3, r2
  03b24	2a000014	 bcs         |$LN10@ProcessCom@2|

; 1277 :         {
; 1278 :             fSegmentComplete = TRUE;

  03b28	e3a03001	 mov         r3, #1
  03b2c	e58d3014	 str         r3, [sp, #0x14]

; 1279 :             fTransferComplete = TRUE;

  03b30	e3a03001	 mov         r3, #1
  03b34	e58d301c	 str         r3, [sp, #0x1C]

; 1280 :             if (((m_nTransferLength % (UINT32)m_epMaxPkt) == 0) &&
; 1281 :                 ((m_nTransferOptions & USB_SHORT_TRANSFER_OK) == 0))

  03b38	e59d30a0	 ldr         r3, [sp, #0xA0]
  03b3c	e2832088	 add         r2, r3, #0x88
  03b40	e59d30a0	 ldr         r3, [sp, #0xA0]
  03b44	e2833064	 add         r3, r3, #0x64
  03b48	e1d300b0	 ldrh        r0, [r3]
  03b4c	e5921000	 ldr         r1, [r2]
  03b50	eb000000	 bl          __rt_udiv
  03b54	e3510000	 cmp         r1, #0
  03b58	1a000006	 bne         |$LN9@ProcessCom@2|
  03b5c	e59d30a0	 ldr         r3, [sp, #0xA0]
  03b60	e283308c	 add         r3, r3, #0x8C
  03b64	e5933000	 ldr         r3, [r3]
  03b68	e3130c02	 tst         r3, #2, 24
  03b6c	1a000001	 bne         |$LN9@ProcessCom@2|

; 1282 :             {
; 1283 :                 // Indicate underrun error if short packets are not accepted
; 1284 :                 nStatus = USB_DATA_UNDERRUN_ERROR;

  03b70	e3a03009	 mov         r3, #9
  03b74	e58d3010	 str         r3, [sp, #0x10]
  03b78		 |$LN9@ProcessCom@2|

; 1285 :             }
; 1286 :         }
; 1287 :         else

  03b78	ea000009	 b           |$LN8@ProcessCom@2|
  03b7c		 |$LN10@ProcessCom@2|

; 1288 :         {
; 1289 :             // Check to see if the segment is complete because
; 1290 :             // all the expected frames have been received
; 1291 :             if (m_nSegmentFramesComplete == m_nSegmentFramesPending)

  03b7c	e59d30a0	 ldr         r3, [sp, #0xA0]
  03b80	e28320a8	 add         r2, r3, #0xA8
  03b84	e59d30a0	 ldr         r3, [sp, #0xA0]
  03b88	e28330a4	 add         r3, r3, #0xA4
  03b8c	e5922000	 ldr         r2, [r2]
  03b90	e5933000	 ldr         r3, [r3]
  03b94	e1520003	 cmp         r2, r3
  03b98	1a000001	 bne         |$LN7@ProcessCom@2|

; 1292 :             {
; 1293 :                 fSegmentComplete = TRUE;

  03b9c	e3a03001	 mov         r3, #1
  03ba0	e58d3014	 str         r3, [sp, #0x14]
  03ba4		 |$LN7@ProcessCom@2|
  03ba4		 |$LN8@ProcessCom@2|
  03ba4		 |$LN11@ProcessCom@2|

; 1294 :             }
; 1295 :         }
; 1296 :     }        
; 1297 : 
; 1298 :     // Check for transfer complete
; 1299 :     if ((m_nTransferFramesComplete + m_nSegmentFramesComplete) == m_nTransferFrames)

  03ba4	e59d30a0	 ldr         r3, [sp, #0xA0]
  03ba8	e283209c	 add         r2, r3, #0x9C
  03bac	e59d30a0	 ldr         r3, [sp, #0xA0]
  03bb0	e28330a8	 add         r3, r3, #0xA8
  03bb4	e5922000	 ldr         r2, [r2]
  03bb8	e5933000	 ldr         r3, [r3]
  03bbc	e0822003	 add         r2, r2, r3
  03bc0	e59d30a0	 ldr         r3, [sp, #0xA0]
  03bc4	e2833074	 add         r3, r3, #0x74
  03bc8	e5933000	 ldr         r3, [r3]
  03bcc	e1520003	 cmp         r2, r3
  03bd0	1a000001	 bne         |$LN6@ProcessCom@2|

; 1300 :     {
; 1301 :         // Finished transfer
; 1302 :         fTransferComplete = TRUE;

  03bd4	e3a03001	 mov         r3, #1
  03bd8	e58d301c	 str         r3, [sp, #0x1C]
  03bdc		 |$LN6@ProcessCom@2|

; 1303 :     }
; 1304 : 
; 1305 :     DEBUGMSG(CPPI_DBG_RX,
; 1306 :         (L" CCppiDmaRxChannel::ProcessCompletedPacket: Received %u/%u, %u/%u (%u of %u frames)\r\n",
; 1307 :         m_nSegmentComplete,
; 1308 :         m_nSegmentPending,
; 1309 :         m_nTransferComplete,
; 1310 :         m_nTransferLength,
; 1311 :         m_nSegmentFramesComplete,
; 1312 :         m_nSegmentFramesPending));

  03bdc	ea000019	 b           |$LN48@ProcessCom@2|
  03be0	e59d30a0	 ldr         r3, [sp, #0xA0]
  03be4	e28330a4	 add         r3, r3, #0xA4
  03be8	e5933000	 ldr         r3, [r3]
  03bec	e58d3008	 str         r3, [sp, #8]
  03bf0	e59d30a0	 ldr         r3, [sp, #0xA0]
  03bf4	e28330a8	 add         r3, r3, #0xA8
  03bf8	e5933000	 ldr         r3, [r3]
  03bfc	e58d3004	 str         r3, [sp, #4]
  03c00	e59d30a0	 ldr         r3, [sp, #0xA0]
  03c04	e2833088	 add         r3, r3, #0x88
  03c08	e5933000	 ldr         r3, [r3]
  03c0c	e58d3000	 str         r3, [sp]
  03c10	e59d30a0	 ldr         r3, [sp, #0xA0]
  03c14	e2833098	 add         r3, r3, #0x98
  03c18	e5933000	 ldr         r3, [r3]
  03c1c	e59d20a0	 ldr         r2, [sp, #0xA0]
  03c20	e28220a0	 add         r2, r2, #0xA0
  03c24	e5922000	 ldr         r2, [r2]
  03c28	e59d10a0	 ldr         r1, [sp, #0xA0]
  03c2c	e28110ac	 add         r1, r1, #0xAC
  03c30	e5911000	 ldr         r1, [r1]
  03c34	e59f021c	 ldr         r0, [pc, #0x21C]
  03c38	eb000000	 bl          NKDbgPrintfW
  03c3c	e3a03001	 mov         r3, #1
  03c40	e58d3084	 str         r3, [sp, #0x84]
  03c44	ea000001	 b           |$LN49@ProcessCom@2|
  03c48		 |$LN48@ProcessCom@2|
  03c48	e3a03000	 mov         r3, #0
  03c4c	e58d3084	 str         r3, [sp, #0x84]
  03c50		 |$LN49@ProcessCom@2|

; 1313 : 
; 1314 :     if (fSegmentComplete)

  03c50	e59d3014	 ldr         r3, [sp, #0x14]
  03c54	e3530000	 cmp         r3, #0
  03c58	0a000063	 beq         |$LN5@ProcessCom@2|

; 1315 :     {
; 1316 :         nCsr = m_pUsbEpcsrRegs->RXCSR;

  03c5c	e59d30a0	 ldr         r3, [sp, #0xA0]
  03c60	e2833014	 add         r3, r3, #0x14
  03c64	e5933000	 ldr         r3, [r3]
  03c68	e2833006	 add         r3, r3, #6
  03c6c	e1d330b0	 ldrh        r3, [r3]
  03c70	e1cd30bc	 strh        r3, [sp, #0xC]

; 1317 : 
; 1318 :         // Turn things off and clear sticky bits
; 1319 :         m_pUsbEpcsrRegs->RXCSR =
; 1320 :             MGC_M_RXCSR_H_RXSTALL |
; 1321 :             MGC_M_RXCSR_H_ERROR |
; 1322 :             MGC_M_RXCSR_DATAERROR |
; 1323 :             MGC_M_RXCSR_RXPKTRDY;

  03c74	e59d30a0	 ldr         r3, [sp, #0xA0]
  03c78	e2833014	 add         r3, r3, #0x14
  03c7c	e5933000	 ldr         r3, [r3]
  03c80	e2832006	 add         r2, r3, #6
  03c84	e3a0304d	 mov         r3, #0x4D
  03c88	e1c230b0	 strh        r3, [r2]

; 1324 : 
; 1325 :         // Update user buffer
; 1326 :         ReleaseSegment();

  03c8c	e59d00a0	 ldr         r0, [sp, #0xA0]
  03c90	eb000000	 bl          |?ReleaseSegment@CCppiDmaChannel@@IAAXXZ|

; 1327 : 
; 1328 :         if (fTransferComplete)

  03c94	e59d301c	 ldr         r3, [sp, #0x1C]
  03c98	e3530000	 cmp         r3, #0
  03c9c	0a00004f	 beq         |$LN4@ProcessCom@2|

; 1329 :         {
; 1330 :             DEBUGMSG(CPPI_DBG_RX,
; 1331 :                 (L" CCppiDmaRxChannel::ProcessCompletedPacket: Completed %u/%u, status %x\r\n",
; 1332 :                 m_nTransferComplete,
; 1333 :                 m_nTransferLength,
; 1334 :                 nStatus));

  03ca0	ea00000b	 b           |$LN50@ProcessCom@2|
  03ca4	e59d3010	 ldr         r3, [sp, #0x10]
  03ca8	e59d20a0	 ldr         r2, [sp, #0xA0]
  03cac	e2822088	 add         r2, r2, #0x88
  03cb0	e5922000	 ldr         r2, [r2]
  03cb4	e59d10a0	 ldr         r1, [sp, #0xA0]
  03cb8	e2811098	 add         r1, r1, #0x98
  03cbc	e5911000	 ldr         r1, [r1]
  03cc0	e59f018c	 ldr         r0, [pc, #0x18C]
  03cc4	eb000000	 bl          NKDbgPrintfW
  03cc8	e3a03001	 mov         r3, #1
  03ccc	e58d3088	 str         r3, [sp, #0x88]
  03cd0	ea000001	 b           |$LN51@ProcessCom@2|
  03cd4		 |$LN50@ProcessCom@2|
  03cd4	e3a03000	 mov         r3, #0
  03cd8	e58d3088	 str         r3, [sp, #0x88]
  03cdc		 |$LN51@ProcessCom@2|

; 1335 : 
; 1336 :             // Let the client know the transfer has been completed
; 1337 :             if (m_pCallback)

  03cdc	e59d30a0	 ldr         r3, [sp, #0xA0]
  03ce0	e2833040	 add         r3, r3, #0x40
  03ce4	e5933000	 ldr         r3, [r3]
  03ce8	e3530000	 cmp         r3, #0
  03cec	0a00003a	 beq         |$LN3@ProcessCom@2|

; 1338 :             {
; 1339 :                 // Save information for the callback below, before cleaning-up
; 1340 :                 UINT32 nTransferLength = m_nTransferLength;

  03cf0	e59d30a0	 ldr         r3, [sp, #0xA0]
  03cf4	e2833088	 add         r3, r3, #0x88
  03cf8	e5933000	 ldr         r3, [r3]
  03cfc	e58d3024	 str         r3, [sp, #0x24]

; 1341 :                 UINT32 nTransferComplete = m_nTransferComplete;

  03d00	e59d30a0	 ldr         r3, [sp, #0xA0]
  03d04	e2833098	 add         r3, r3, #0x98
  03d08	e5933000	 ldr         r3, [r3]
  03d0c	e58d3020	 str         r3, [sp, #0x20]

; 1342 : 
; 1343 :                 // Cleanup *before* the callback (to prevent IssueTransfer calls while
; 1344 :                 // m_nTransferLength and m_nTransferFrames are still non-zero)
; 1345 :                 m_pvTransferBuffer = NULL;

  03d10	e59d30a0	 ldr         r3, [sp, #0xA0]
  03d14	e283206c	 add         r2, r3, #0x6C
  03d18	e3a03000	 mov         r3, #0
  03d1c	e5823000	 str         r3, [r2]

; 1346 :                 m_paTransferBuffer = 0;

  03d20	e59d30a0	 ldr         r3, [sp, #0xA0]
  03d24	e2832070	 add         r2, r3, #0x70
  03d28	e3a03000	 mov         r3, #0
  03d2c	e5823000	 str         r3, [r2]

; 1347 :                 m_nTransferLength = 0;

  03d30	e59d30a0	 ldr         r3, [sp, #0xA0]
  03d34	e2832088	 add         r2, r3, #0x88
  03d38	e3a03000	 mov         r3, #0
  03d3c	e5823000	 str         r3, [r2]

; 1348 :                 m_nTransferFrames = 0;

  03d40	e59d30a0	 ldr         r3, [sp, #0xA0]
  03d44	e2832074	 add         r2, r3, #0x74
  03d48	e3a03000	 mov         r3, #0
  03d4c	e5823000	 str         r3, [r2]

; 1349 :                 m_nSegmentPending = 0;

  03d50	e59d30a0	 ldr         r3, [sp, #0xA0]
  03d54	e28320a0	 add         r2, r3, #0xA0
  03d58	e3a03000	 mov         r3, #0
  03d5c	e5823000	 str         r3, [r2]

; 1350 :                 m_nSegmentFramesPending = 0;

  03d60	e59d30a0	 ldr         r3, [sp, #0xA0]
  03d64	e28320a4	 add         r2, r3, #0xA4
  03d68	e3a03000	 mov         r3, #0
  03d6c	e5823000	 str         r3, [r2]

; 1351 : 
; 1352 :                 // Let the client know the transfer has been completed
; 1353 :                 m_pCallback(
; 1354 :                     this,
; 1355 :                     nStatus,
; 1356 :                     nTransferLength,
; 1357 :                     nTransferComplete,
; 1358 :                     (nCsr & MGC_M_RXCSR_H_DATATOGGLE) ? USB_TOGGLE_CARRY : 0,
; 1359 :                     m_pTransferCookie1,
; 1360 :                     m_pTransferCookie2);

  03d70	e1dd30bc	 ldrh        r3, [sp, #0xC]
  03d74	e3130c02	 tst         r3, #2, 24
  03d78	0a000002	 beq         |$LN52@ProcessCom@2|
  03d7c	e3a03102	 mov         r3, #2, 2
  03d80	e58d308c	 str         r3, [sp, #0x8C]
  03d84	ea000001	 b           |$LN53@ProcessCom@2|
  03d88		 |$LN52@ProcessCom@2|
  03d88	e3a03000	 mov         r3, #0
  03d8c	e58d308c	 str         r3, [sp, #0x8C]
  03d90		 |$LN53@ProcessCom@2|
  03d90	e59d30a0	 ldr         r3, [sp, #0xA0]
  03d94	e2833094	 add         r3, r3, #0x94
  03d98	e5933000	 ldr         r3, [r3]
  03d9c	e58d3008	 str         r3, [sp, #8]
  03da0	e59d30a0	 ldr         r3, [sp, #0xA0]
  03da4	e2833090	 add         r3, r3, #0x90
  03da8	e5933000	 ldr         r3, [r3]
  03dac	e58d3004	 str         r3, [sp, #4]
  03db0	e59d308c	 ldr         r3, [sp, #0x8C]
  03db4	e58d3000	 str         r3, [sp]
  03db8	e59d3020	 ldr         r3, [sp, #0x20]
  03dbc	e59d2024	 ldr         r2, [sp, #0x24]
  03dc0	e59d1010	 ldr         r1, [sp, #0x10]
  03dc4	e59d00a0	 ldr         r0, [sp, #0xA0]
  03dc8	e59de0a0	 ldr         lr, [sp, #0xA0]
  03dcc	e28ee040	 add         lr, lr, #0x40
  03dd0	e59e4000	 ldr         r4, [lr]
  03dd4	e1a0e00f	 mov         lr, pc
  03dd8	e12fff14	 bx          r4
  03ddc		 |$LN3@ProcessCom@2|

; 1361 :             }
; 1362 :         }
; 1363 :         else

  03ddc	ea000001	 b           |$LN2@ProcessCom@2|
  03de0		 |$LN4@ProcessCom@2|

; 1364 :         {
; 1365 :             // Schedule next transfer
; 1366 :             ScheduleTransfer();

  03de0	e59d00a0	 ldr         r0, [sp, #0xA0]
  03de4	eb000000	 bl          |?ScheduleTransfer@CCppiDmaRxChannel@@QAAHXZ|
  03de8		 |$LN2@ProcessCom@2|

; 1367 :         }
; 1368 :     }
; 1369 :     else

  03de8	ea000006	 b           |$LN1@ProcessCom@2|
  03dec		 |$LN5@ProcessCom@2|

; 1370 :     {
; 1371 :         // Trigger next IN token
; 1372 :         m_pUsbEpcsrRegs->RXCSR =
; 1373 :             MGC_M_RXCSR_DMAENAB |
; 1374 :             MGC_M_RXCSR_H_REQPKT;

  03dec	e59d30a0	 ldr         r3, [sp, #0xA0]
  03df0	e2833014	 add         r3, r3, #0x14
  03df4	e5933000	 ldr         r3, [r3]
  03df8	e2832006	 add         r2, r3, #6
  03dfc	e3a03a02	 mov         r3, #2, 20
  03e00	e3833020	 orr         r3, r3, #0x20
  03e04	e1c230b0	 strh        r3, [r2]
  03e08		 |$LN1@ProcessCom@2|
  03e08		 |$LN15@ProcessCom@2|
  03e08		 |$LN17@ProcessCom@2|
  03e08		 |$_done$39419|

; 1375 :     }
; 1376 : 
; 1377 : _done:
; 1378 :     // Free the HD
; 1379 :     m_pController->HdFree(pHd);

  03e08	e59d10a4	 ldr         r1, [sp, #0xA4]
  03e0c	e59d30a0	 ldr         r3, [sp, #0xA0]
  03e10	e283300c	 add         r3, r3, #0xC
  03e14	e5930000	 ldr         r0, [r3]
  03e18	eb000000	 bl          |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z|

; 1380 : 
; 1381 :     ChUnlock();

  03e1c	e59d00a0	 ldr         r0, [sp, #0xA0]
  03e20	eb000000	 bl          |?ChUnlock@CCppiDmaChannel@@IAAXXZ|

; 1382 : 
; 1383 :     DEBUGMSG(CPPI_DBG_RX || ZONE_VERBOSE,
; 1384 :         (L"-CCppiDmaRxChannel::ProcessCompletedPacket\r\n"));

  03e24	ea000004	 b           |$LN54@ProcessCom@2|
  03e28	e59f0020	 ldr         r0, [pc, #0x20]
  03e2c	eb000000	 bl          NKDbgPrintfW
  03e30	e3a03001	 mov         r3, #1
  03e34	e58d3090	 str         r3, [sp, #0x90]
  03e38	ea000001	 b           |$LN55@ProcessCom@2|
  03e3c		 |$LN54@ProcessCom@2|
  03e3c	e3a03000	 mov         r3, #0
  03e40	e58d3090	 str         r3, [sp, #0x90]
  03e44		 |$LN55@ProcessCom@2|
  03e44		 |$LN22@ProcessCom@2|

; 1385 : }

  03e44	e28dd094	 add         sp, sp, #0x94
  03e48	e89d6010	 ldmia       sp, {r4, sp, lr}
  03e4c	e12fff1e	 bx          lr
  03e50		 |$LN59@ProcessCom@2|
  03e50		 |$LN60@ProcessCom@2|
  03e50	00000000	 DCD         |??_C@_1FK@BBCIMFO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e54		 |$LN61@ProcessCom@2|
  03e54	00000000	 DCD         |??_C@_1JC@KIHOAGAD@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e58		 |$LN62@ProcessCom@2|
  03e58	00000000	 DCD         |??_C@_1KM@NFPCCNBK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e5c		 |$LN63@ProcessCom@2|
  03e5c	00000000	 DCD         |??_C@_1JE@JNMLDHIC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e60		 |$LN64@ProcessCom@2|
  03e60	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  03e64		 |$LN65@ProcessCom@2|
  03e64	00000000	 DCD         |dpCurSettings|
  03e68		 |$LN66@ProcessCom@2|
  03e68	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03e6c		 |$LN67@ProcessCom@2|
  03e6c	00000000	 DCD         |??_C@_1KK@DEELJGKF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e70		 |$LN68@ProcessCom@2|
  03e70	00000000	 DCD         |??_C@_1KG@FNMOGAKM@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e74		 |$LN69@ProcessCom@2|
  03e74	00000000	 DCD         |??_C@_1IE@LIKGEAGA@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e78		 |$LN70@ProcessCom@2|
  03e78	00000000	 DCD         |??_C@_1HM@MKJNDHOF@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e7c		 |$LN71@ProcessCom@2|
  03e7c	00000000	 DCD         |??_C@_1HO@EBNGGKDK@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAR?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  03e80		 |$LN72@ProcessCom@2|
  03e80	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  03e84		 |$LN73@ProcessCom@2|
  03e84	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  03e88		 |$M40841|

			 ENDP  ; |?ProcessCompletedPacket@CCppiDmaRxChannel@@UAAXPAU_HOST_DESCRIPTOR@@@Z|, CCppiDmaRxChannel::ProcessCompletedPacket

	EXPORT	|??_C@_1CK@MFPAFFGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?DrainThreadStub@CCppiDmaTxChannel@@SAKPAX@Z| ; CCppiDmaTxChannel::DrainThreadStub
	EXPORT	|??_C@_1CK@LFIHEDIE@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_7CCppiDmaTxChannel@@6B@| [ DATA ]	; CCppiDmaTxChannel::`vftable'
	EXPORT	|??0CCppiDmaTxChannel@@QAA@PAVCCppiDmaController@@EP6AXPAVCCppiDmaChannel@@IIIIPAX2@Z@Z| ; CCppiDmaTxChannel::CCppiDmaTxChannel
	EXPORT	|?IssueTransfer@CCppiDmaTxChannel@@UAAHEEEGPAXIIIPAIPAK2I00@Z| ; CCppiDmaTxChannel::IssueTransfer
	EXPORT	|?CancelTransfer@CCppiDmaTxChannel@@UAAHXZ| ; CCppiDmaTxChannel::CancelTransfer
	EXPORT	|?ValidateTransferState@CCppiDmaTxChannel@@UAAHXZ| ; CCppiDmaTxChannel::ValidateTransferState
	EXPORT	|?ProcessCompletedPacket@CCppiDmaTxChannel@@UAAXPAU_HOST_DESCRIPTOR@@@Z| ; CCppiDmaTxChannel::ProcessCompletedPacket
	IMPORT	|CeSetThreadPriority|
	IMPORT	|g_IstThreadPriority|
	IMPORT	|CreateThread|
	IMPORT	|CreateEventW|
	IMPORT	|??_ECCppiDmaTxChannel@@UAAPAXI@Z|, WEAK |??_GCCppiDmaTxChannel@@UAAPAXI@Z| ; CCppiDmaTxChannel::`vector deleting destructor', CCppiDmaTxChannel::`scalar deleting destructor'

  00080			 AREA	 |.pdata|, PDATA
|$T40870| DCD	|$LN9@CCppiDmaTx|
	DCD	0x40006b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MFPAFFGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@LFIHEDIE@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CCppiDmaTxChannel@@6B@| DCD |??_ECCppiDmaTxChannel@@UAAPAXI@Z| ; CCppiDmaTxChannel::`vftable'
	DCD	|?IssueTransfer@CCppiDmaTxChannel@@UAAHEEEGPAXIIIPAIPAK2I00@Z|
	DCD	|?CancelTransfer@CCppiDmaTxChannel@@UAAHXZ|
	DCD	|?ValidateTransferState@CCppiDmaTxChannel@@UAAHXZ|
	DCD	|?ProcessCompletedPacket@CCppiDmaTxChannel@@UAAXPAU_HOST_DESCRIPTOR@@@Z|
; Function compile flags: /Odtp

  03e88			 AREA	 |.text|, CODE, ARM

  03e88		 |??0CCppiDmaTxChannel@@QAA@PAVCCppiDmaController@@EP6AXPAVCCppiDmaChannel@@IIIIPAX2@Z@Z| PROC ; CCppiDmaTxChannel::CCppiDmaTxChannel

; 1430 : {

  03e88		 |$LN9@CCppiDmaTx|
  03e88	e1a0c00d	 mov         r12, sp
  03e8c	e92d000f	 stmdb       sp!, {r0 - r3}
  03e90	e92d5000	 stmdb       sp!, {r12, lr}
  03e94	e24dd028	 sub         sp, sp, #0x28
  03e98		 |$M40867|
  03e98	e59d303c	 ldr         r3, [sp, #0x3C]
  03e9c	e5dd2038	 ldrb        r2, [sp, #0x38]
  03ea0	e59d1034	 ldr         r1, [sp, #0x34]
  03ea4	e59d0030	 ldr         r0, [sp, #0x30]
  03ea8	eb000000	 bl          |??0CCppiDmaChannel@@QAA@PAVCCppiDmaController@@EP6AXPAV0@IIIIPAX2@Z@Z|
  03eac	e58d0014	 str         r0, [sp, #0x14]
  03eb0	e59f2178	 ldr         r2, [pc, #0x178]
  03eb4	e59d3030	 ldr         r3, [sp, #0x30]
  03eb8	e5832000	 str         r2, [r3]

; 1431 :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 1432 :         (L"+CCppiDmaTxChannel\r\n"));

  03ebc	e59f0168	 ldr         r0, [pc, #0x168]
  03ec0	eb000000	 bl          NKDbgPrintfW
  03ec4	e3a03001	 mov         r3, #1
  03ec8	e58d3018	 str         r3, [sp, #0x18]
  03ecc	ea000001	 b           |$LN4@CCppiDmaTx|
  03ed0	e3a03000	 mov         r3, #0
  03ed4	e58d3018	 str         r3, [sp, #0x18]
  03ed8		 |$LN4@CCppiDmaTx|

; 1433 : 
; 1434 :     m_fIsOut = TRUE;

  03ed8	e59d3030	 ldr         r3, [sp, #0x30]
  03edc	e2832034	 add         r2, r3, #0x34
  03ee0	e3a03001	 mov         r3, #1
  03ee4	e5823000	 str         r3, [r2]

; 1435 :     m_qNum = pController->m_nTxQueueOffset + (2 * m_chNum);

  03ee8	e59d3034	 ldr         r3, [sp, #0x34]
  03eec	e283302a	 add         r3, r3, #0x2A
  03ef0	e5d33000	 ldrb        r3, [r3]
  03ef4	e1a01003	 mov         r1, r3
  03ef8	e59d3030	 ldr         r3, [sp, #0x30]
  03efc	e283303c	 add         r3, r3, #0x3C
  03f00	e5d33000	 ldrb        r3, [r3]
  03f04	e1a02003	 mov         r2, r3
  03f08	e3a03002	 mov         r3, #2
  03f0c	e0030392	 mul         r3, r2, r3
  03f10	e0813003	 add         r3, r1, r3
  03f14	e20320ff	 and         r2, r3, #0xFF
  03f18	e59d3030	 ldr         r3, [sp, #0x30]
  03f1c	e283303e	 add         r3, r3, #0x3E
  03f20	e5c32000	 strb        r2, [r3]

; 1436 : 
; 1437 :     m_fDrainThreadClosing = FALSE;

  03f24	e59d3030	 ldr         r3, [sp, #0x30]
  03f28	e28320b8	 add         r2, r3, #0xB8
  03f2c	e3a03000	 mov         r3, #0
  03f30	e5823000	 str         r3, [r2]

; 1438 :     m_hDrainEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  03f34	e3a03000	 mov         r3, #0
  03f38	e3a02000	 mov         r2, #0
  03f3c	e3a01000	 mov         r1, #0
  03f40	e3a00000	 mov         r0, #0
  03f44	eb000000	 bl          CreateEventW
  03f48	e58d001c	 str         r0, [sp, #0x1C]
  03f4c	e59d3030	 ldr         r3, [sp, #0x30]
  03f50	e28320bc	 add         r2, r3, #0xBC
  03f54	e59d301c	 ldr         r3, [sp, #0x1C]
  03f58	e5823000	 str         r3, [r2]

; 1439 :     m_hDrainThread = CreateThread(NULL, 0, DrainThreadStub, this, 0, NULL);

  03f5c	e3a03000	 mov         r3, #0
  03f60	e58d3004	 str         r3, [sp, #4]
  03f64	e3a03000	 mov         r3, #0
  03f68	e58d3000	 str         r3, [sp]
  03f6c	e59d3030	 ldr         r3, [sp, #0x30]
  03f70	e59f20b0	 ldr         r2, [pc, #0xB0]
  03f74	e3a01000	 mov         r1, #0
  03f78	e3a00000	 mov         r0, #0
  03f7c	eb000000	 bl          CreateThread
  03f80	e58d0020	 str         r0, [sp, #0x20]
  03f84	e59d3030	 ldr         r3, [sp, #0x30]
  03f88	e28320c0	 add         r2, r3, #0xC0
  03f8c	e59d3020	 ldr         r3, [sp, #0x20]
  03f90	e5823000	 str         r3, [r2]

; 1440 :     CeSetThreadPriority(m_hDrainThread, g_IstThreadPriority + 1);

  03f94	e59f3088	 ldr         r3, [pc, #0x88]
  03f98	e5933000	 ldr         r3, [r3]
  03f9c	e2831001	 add         r1, r3, #1
  03fa0	e59d3030	 ldr         r3, [sp, #0x30]
  03fa4	e28330c0	 add         r3, r3, #0xC0
  03fa8	e5930000	 ldr         r0, [r3]
  03fac	eb000000	 bl          CeSetThreadPriority

; 1441 :     m_nStatus = USB_NO_ERROR;

  03fb0	e59d3030	 ldr         r3, [sp, #0x30]
  03fb4	e28320c4	 add         r2, r3, #0xC4
  03fb8	e3a03000	 mov         r3, #0
  03fbc	e5823000	 str         r3, [r2]

; 1442 : 
; 1443 :     // Disable EP interrupt
; 1444 :     m_pUsbRegs->EP_INTMSKCLRR = (1 << (m_epNum + USB_OTG_TXINT_SHIFT));

  03fc0	e59d3030	 ldr         r3, [sp, #0x30]
  03fc4	e283303d	 add         r3, r3, #0x3D
  03fc8	e5d33000	 ldrb        r3, [r3]
  03fcc	e1a02003	 mov         r2, r3
  03fd0	e3a03001	 mov         r3, #1
  03fd4	e1a02213	 mov         r2, r3, lsl r2
  03fd8	e59d3030	 ldr         r3, [sp, #0x30]
  03fdc	e2833010	 add         r3, r3, #0x10
  03fe0	e5933000	 ldr         r3, [r3]
  03fe4	e2833034	 add         r3, r3, #0x34
  03fe8	e5832000	 str         r2, [r3]

; 1445 : 
; 1446 :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 1447 :         (L"-CCppiDmaTxChannel\r\n"));

  03fec	e59f002c	 ldr         r0, [pc, #0x2C]
  03ff0	eb000000	 bl          NKDbgPrintfW
  03ff4	e3a03001	 mov         r3, #1
  03ff8	e58d3024	 str         r3, [sp, #0x24]
  03ffc	ea000001	 b           |$LN6@CCppiDmaTx|
  04000	e3a03000	 mov         r3, #0
  04004	e58d3024	 str         r3, [sp, #0x24]
  04008		 |$LN6@CCppiDmaTx|

; 1448 : }

  04008	e59d3030	 ldr         r3, [sp, #0x30]
  0400c	e58d3010	 str         r3, [sp, #0x10]
  04010	e59d0010	 ldr         r0, [sp, #0x10]
  04014	e28dd028	 add         sp, sp, #0x28
  04018	e89d6000	 ldmia       sp, {sp, lr}
  0401c	e12fff1e	 bx          lr
  04020		 |$LN10@CCppiDmaTx|
  04020		 |$LN11@CCppiDmaTx|
  04020	00000000	 DCD         |??_C@_1CK@MFPAFFGC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  04024		 |$LN12@CCppiDmaTx|
  04024	00000000	 DCD         |g_IstThreadPriority|
  04028		 |$LN13@CCppiDmaTx|
  04028	00000000	 DCD         |?DrainThreadStub@CCppiDmaTxChannel@@SAKPAX@Z|
  0402c		 |$LN14@CCppiDmaTx|
  0402c	00000000	 DCD         |??_C@_1CK@LFIHEDIE@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  04030		 |$LN15@CCppiDmaTx|
  04030	00000000	 DCD         |??_7CCppiDmaTxChannel@@6B@|
  04034		 |$M40868|

			 ENDP  ; |??0CCppiDmaTxChannel@@QAA@PAVCCppiDmaController@@EP6AXPAVCCppiDmaChannel@@IIIIPAX2@Z@Z|, CCppiDmaTxChannel::CCppiDmaTxChannel

	EXPORT	|??1CCppiDmaTxChannel@@UAA@XZ|		; CCppiDmaTxChannel::~CCppiDmaTxChannel

  00000			 AREA	 |.pdata|, PDATA
|$T40882| DCD	|$LN6@scalar@3|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCCppiDmaTxChannel@@UAAPAXI@Z| PROC ; CCppiDmaTxChannel::`scalar deleting destructor'
  00000		 |$LN6@scalar@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M40879|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CCppiDmaTxChannel@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@3|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@3|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M40880|

			 ENDP  ; |??_GCCppiDmaTxChannel@@UAAPAXI@Z|, CCppiDmaTxChannel::`scalar deleting destructor'

	EXPORT	|??_C@_1CM@HEHHMOFA@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SetEvent|
	EXPORT	|??_C@_1EO@EFIKJKNE@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE@| [ DATA ] ; `string'
	IMPORT	|CloseHandle|
	IMPORT	|TerminateThread|
	IMPORT	|WaitForSingleObject|

  00088			 AREA	 |.pdata|, PDATA
|$T40897| DCD	|$LN14@CCppiDmaTx@2|
	DCD	0x40008404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@HEHHMOFA@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "~", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C"
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@EFIKJKNE@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE@| DCB "+"
	DCB	0x0, "~", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C"
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C"
	DCB	0x0, "h", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  04034			 AREA	 |.text|, CODE, ARM

  04034		 |??1CCppiDmaTxChannel@@UAA@XZ| PROC	; CCppiDmaTxChannel::~CCppiDmaTxChannel

; 1452 : {

  04034		 |$LN14@CCppiDmaTx@2|
  04034	e1a0c00d	 mov         r12, sp
  04038	e92d0001	 stmdb       sp!, {r0}
  0403c	e92d5000	 stmdb       sp!, {r12, lr}
  04040	e24dd018	 sub         sp, sp, #0x18
  04044		 |$M40894|
  04044	e59f21f4	 ldr         r2, [pc, #0x1F4]
  04048	e59d3020	 ldr         r3, [sp, #0x20]
  0404c	e5832000	 str         r2, [r3]

; 1453 :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 1454 :         (L"+~CCppiDmaTxChannel: %s Ch %u, EP %u\r\n",
; 1455 :         IsOut() ? L"OUT" : L"IN",
; 1456 :         m_chNum,
; 1457 :         m_epNum));

  04050	e59d0020	 ldr         r0, [sp, #0x20]
  04054	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  04058	e58d0000	 str         r0, [sp]
  0405c	e59d3000	 ldr         r3, [sp]
  04060	e3530000	 cmp         r3, #0
  04064	0a000002	 beq         |$LN4@CCppiDmaTx@2|
  04068	e59f31cc	 ldr         r3, [pc, #0x1CC]
  0406c	e58d3004	 str         r3, [sp, #4]
  04070	ea000001	 b           |$LN5@CCppiDmaTx@2|
  04074		 |$LN4@CCppiDmaTx@2|
  04074	e59f31bc	 ldr         r3, [pc, #0x1BC]
  04078	e58d3004	 str         r3, [sp, #4]
  0407c		 |$LN5@CCppiDmaTx@2|
  0407c	e59d3020	 ldr         r3, [sp, #0x20]
  04080	e283303d	 add         r3, r3, #0x3D
  04084	e5d33000	 ldrb        r3, [r3]
  04088	e59d2020	 ldr         r2, [sp, #0x20]
  0408c	e282203c	 add         r2, r2, #0x3C
  04090	e5d22000	 ldrb        r2, [r2]
  04094	e59d1004	 ldr         r1, [sp, #4]
  04098	e59f0194	 ldr         r0, [pc, #0x194]
  0409c	eb000000	 bl          NKDbgPrintfW
  040a0	e3a03001	 mov         r3, #1
  040a4	e58d3008	 str         r3, [sp, #8]
  040a8	ea000001	 b           |$LN7@CCppiDmaTx@2|
  040ac	e3a03000	 mov         r3, #0
  040b0	e58d3008	 str         r3, [sp, #8]
  040b4		 |$LN7@CCppiDmaTx@2|

; 1458 : 
; 1459 :     m_fDrainThreadClosing = TRUE;

  040b4	e59d3020	 ldr         r3, [sp, #0x20]
  040b8	e28320b8	 add         r2, r3, #0xB8
  040bc	e3a03001	 mov         r3, #1
  040c0	e5823000	 str         r3, [r2]

; 1460 :     SetEvent(m_hDrainEvent);

  040c4	e59d3020	 ldr         r3, [sp, #0x20]
  040c8	e28330bc	 add         r3, r3, #0xBC
  040cc	e5930000	 ldr         r0, [r3]
  040d0	eb000000	 bl          SetEvent

; 1461 :     if (WaitForSingleObject(m_hDrainThread, 5000) != WAIT_OBJECT_0 ) {

  040d4	e3a01c13	 mov         r1, #0x13, 24
  040d8	e3811088	 orr         r1, r1, #0x88
  040dc	e59d3020	 ldr         r3, [sp, #0x20]
  040e0	e28330c0	 add         r3, r3, #0xC0
  040e4	e5930000	 ldr         r0, [r3]
  040e8	eb000000	 bl          WaitForSingleObject
  040ec	e58d000c	 str         r0, [sp, #0xC]
  040f0	e59d300c	 ldr         r3, [sp, #0xC]
  040f4	e3530000	 cmp         r3, #0
  040f8	0a000011	 beq         |$LN1@CCppiDmaTx@2|

; 1462 :         DEBUGCHK(0);

  040fc	ea000002	 b           |$LN8@CCppiDmaTx@2|
  04100	e3a03001	 mov         r3, #1
  04104	e58d3010	 str         r3, [sp, #0x10]
  04108	ea000008	 b           |$LN9@CCppiDmaTx@2|
  0410c		 |$LN8@CCppiDmaTx@2|
  0410c	e3a03c05	 mov         r3, #5, 24
  04110	e38330b6	 orr         r3, r3, #0xB6
  04114	e59f2114	 ldr         r2, [pc, #0x114]
  04118	e59f110c	 ldr         r1, [pc, #0x10C]
  0411c	e59f0104	 ldr         r0, [pc, #0x104]
  04120	eb000000	 bl          NKDbgPrintfW
  04124	e6000010	 __debugbreak_ce
  04128	e3a03000	 mov         r3, #0
  0412c	e58d3010	 str         r3, [sp, #0x10]
  04130		 |$LN9@CCppiDmaTx@2|

; 1463 : #pragma warning(push)
; 1464 : #pragma warning(disable: 6258)
; 1465 :         TerminateThread(m_hDrainThread, (DWORD)-1);

  04130	e3e01000	 mvn         r1, #0
  04134	e59d3020	 ldr         r3, [sp, #0x20]
  04138	e28330c0	 add         r3, r3, #0xC0
  0413c	e5930000	 ldr         r0, [r3]
  04140	eb000000	 bl          TerminateThread
  04144		 |$LN1@CCppiDmaTx@2|

; 1466 : #pragma warning(pop)
; 1467 :     }
; 1468 :     CloseHandle(m_hDrainThread);

  04144	e59d3020	 ldr         r3, [sp, #0x20]
  04148	e28330c0	 add         r3, r3, #0xC0
  0414c	e5930000	 ldr         r0, [r3]
  04150	eb000000	 bl          CloseHandle

; 1469 :     m_hDrainThread = NULL;

  04154	e59d3020	 ldr         r3, [sp, #0x20]
  04158	e28320c0	 add         r2, r3, #0xC0
  0415c	e3a03000	 mov         r3, #0
  04160	e5823000	 str         r3, [r2]

; 1470 :     CloseHandle(m_hDrainEvent);

  04164	e59d3020	 ldr         r3, [sp, #0x20]
  04168	e28330bc	 add         r3, r3, #0xBC
  0416c	e5930000	 ldr         r0, [r3]
  04170	eb000000	 bl          CloseHandle

; 1471 :     m_hDrainEvent = NULL;

  04174	e59d3020	 ldr         r3, [sp, #0x20]
  04178	e28320bc	 add         r2, r3, #0xBC
  0417c	e3a03000	 mov         r3, #0
  04180	e5823000	 str         r3, [r2]

; 1472 : 
; 1473 :     // Flush FIFO and clear status bits
; 1474 :     m_pUsbEpcsrRegs->TXCSR =
; 1475 :         MGC_M_TXCSR_FLUSHFIFO |
; 1476 :         MGC_M_TXCSR_H_NAKTIMEOUT |
; 1477 :         MGC_M_TXCSR_H_RXSTALL |
; 1478 :         MGC_M_TXCSR_H_ERROR |
; 1479 :         MGC_M_TXCSR_FIFONOTEMPTY;

  04184	e59d3020	 ldr         r3, [sp, #0x20]
  04188	e2833014	 add         r3, r3, #0x14
  0418c	e5933000	 ldr         r3, [r3]
  04190	e2832002	 add         r2, r3, #2
  04194	e3a030ae	 mov         r3, #0xAE
  04198	e1c230b0	 strh        r3, [r2]

; 1480 : 
; 1481 :     // Clear EP interrupt
; 1482 :     m_pUsbRegs->EP_INTCLRR = (1 << (m_epNum + USB_OTG_TXINT_SHIFT));

  0419c	e59d3020	 ldr         r3, [sp, #0x20]
  041a0	e283303d	 add         r3, r3, #0x3D
  041a4	e5d33000	 ldrb        r3, [r3]
  041a8	e1a02003	 mov         r2, r3
  041ac	e3a03001	 mov         r3, #1
  041b0	e1a02213	 mov         r2, r3, lsl r2
  041b4	e59d3020	 ldr         r3, [sp, #0x20]
  041b8	e2833010	 add         r3, r3, #0x10
  041bc	e5933000	 ldr         r3, [r3]
  041c0	e2833028	 add         r3, r3, #0x28
  041c4	e5832000	 str         r2, [r3]

; 1483 : 
; 1484 :     // Restore EP interrupt
; 1485 :     m_pUsbRegs->EP_INTMSKSETR = (1 << (m_epNum + USB_OTG_TXINT_SHIFT));

  041c8	e59d3020	 ldr         r3, [sp, #0x20]
  041cc	e283303d	 add         r3, r3, #0x3D
  041d0	e5d33000	 ldrb        r3, [r3]
  041d4	e1a02003	 mov         r2, r3
  041d8	e3a03001	 mov         r3, #1
  041dc	e1a02213	 mov         r2, r3, lsl r2
  041e0	e59d3020	 ldr         r3, [sp, #0x20]
  041e4	e2833010	 add         r3, r3, #0x10
  041e8	e5933000	 ldr         r3, [r3]
  041ec	e2833030	 add         r3, r3, #0x30
  041f0	e5832000	 str         r2, [r3]

; 1486 : 
; 1487 :     DEBUGMSG(ZONE_INIT || CPPI_DBG_CHANNEL,
; 1488 :         (L"+~CCppiDmaTxChannel\r\n"));

  041f4	e59f0028	 ldr         r0, [pc, #0x28]
  041f8	eb000000	 bl          NKDbgPrintfW
  041fc	e3a03001	 mov         r3, #1
  04200	e58d3014	 str         r3, [sp, #0x14]
  04204	ea000001	 b           |$LN11@CCppiDmaTx@2|
  04208	e3a03000	 mov         r3, #0
  0420c	e58d3014	 str         r3, [sp, #0x14]
  04210		 |$LN11@CCppiDmaTx@2|

; 1489 : }

  04210	e59d0020	 ldr         r0, [sp, #0x20]
  04214	eb000000	 bl          |??1CCppiDmaChannel@@UAA@XZ|
  04218	e28dd018	 add         sp, sp, #0x18
  0421c	e89d6000	 ldmia       sp, {sp, lr}
  04220	e12fff1e	 bx          lr
  04224		 |$LN15@CCppiDmaTx@2|
  04224		 |$LN16@CCppiDmaTx@2|
  04224	00000000	 DCD         |??_C@_1CM@HEHHMOFA@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  04228		 |$LN17@CCppiDmaTx@2|
  04228	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0422c		 |$LN18@CCppiDmaTx@2|
  0422c	00000000	 DCD         |dpCurSettings|
  04230		 |$LN19@CCppiDmaTx@2|
  04230	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  04234		 |$LN20@CCppiDmaTx@2|
  04234	00000000	 DCD         |??_C@_1EO@EFIKJKNE@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AA?5?$AA?$CF?$AAu?$AA?0?$AA?5?$AAE@|
  04238		 |$LN21@CCppiDmaTx@2|
  04238	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  0423c		 |$LN22@CCppiDmaTx@2|
  0423c	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  04240		 |$LN23@CCppiDmaTx@2|
  04240	00000000	 DCD         |??_7CCppiDmaTxChannel@@6B@|
  04244		 |$M40895|

			 ENDP  ; |??1CCppiDmaTxChannel@@UAA@XZ|, CCppiDmaTxChannel::~CCppiDmaTxChannel

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T40912| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M40909|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M40910|

			 ENDP  ; |SetEvent|

	EXPORT	|??_C@_1EI@KCNNJCCN@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|?ScheduleTransfer@CCppiDmaTxChannel@@QAAHXZ| ; CCppiDmaTxChannel::ScheduleTransfer
	EXPORT	|??_C@_1JE@CCAOBHEO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@FAMJOMII@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@KMDCDODB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KI@KBHLFCKP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KK@CLDEICMA@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LC@HEKKLHBN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KO@GEJIKLBO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@CDACEHNG@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'

  00090			 AREA	 |.pdata|, PDATA
|$T40953| DCD	|$LN59@IssueTrans@2|
	DCD	0x4001d304
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KCNNJCCN@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@CCAOBHEO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "L", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@FAMJOMII@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "n"
	DCB	0x0, "d", 0x0, "i", 0x0, "s", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "e", 0x0, "p", 0x0, "M", 0x0, "a", 0x0, "x", 0x0, "P"
	DCB	0x0, "k", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ","
	DCB	0x0, " ", 0x0, "M", 0x0, "a", 0x0, "x", 0x0, "B", 0x0, "D"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@KMDCDODB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "P", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ",", 0x0, " "
	DCB	0x0, "l", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KI@KBHLFCKP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "I", 0x0, "S", 0x0, "O", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "z", 0x0, "e", 0x0, "r", 0x0, "o", 0x0, " ", 0x0, "t"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, "g"
	DCB	0x0, "t", 0x0, "h", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KK@CLDEICMA@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, "o", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LC@HEKKLHBN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, "o", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t"
	DCB	0x0, "h", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KO@GEJIKLBO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "p", 0x0, "v", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, "g"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@CDACEHNG@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%", 0x0, "u"
	DCB	0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, "/", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "/", 0x0, "%", 0x0, "u", 0x0, "/"
	DCB	0x0, "%", 0x0, "u", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  04244			 AREA	 |.text|, CODE, ARM

  04244		 |?IssueTransfer@CCppiDmaTxChannel@@UAAHEEEGPAXIIIPAIPAK2I00@Z| PROC ; CCppiDmaTxChannel::IssueTransfer

; 1496 : {

  04244		 |$LN59@IssueTrans@2|
  04244	e1a0c00d	 mov         r12, sp
  04248	e92d000f	 stmdb       sp!, {r0 - r3}
  0424c	e92d5000	 stmdb       sp!, {r12, lr}
  04250	e24dd074	 sub         sp, sp, #0x74
  04254		 |$M40950|

; 1497 :     BOOL fResult = FALSE;

  04254	e3a03000	 mov         r3, #0
  04258	e58d300c	 str         r3, [sp, #0xC]

; 1498 : 
; 1499 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 1500 :         (L"+CCppiDmaTxChannel::IssueTransfer: TX Ch %u (EP %u/0x%02x/%u/%u) - %u bytes\r\n",
; 1501 :         m_chNum,
; 1502 :         m_epNum,
; 1503 :         epAddr,
; 1504 :         epType,
; 1505 :         epMaxPkt,
; 1506 :         nLength));

  0425c	ea000011	 b           |$LN27@IssueTrans@2|
  04260	e59d3098	 ldr         r3, [sp, #0x98]
  04264	e58d3008	 str         r3, [sp, #8]
  04268	e1dd38bc	 ldrh        r3, [sp, #0x8C]
  0426c	e58d3004	 str         r3, [sp, #4]
  04270	e5dd3088	 ldrb        r3, [sp, #0x88]
  04274	e58d3000	 str         r3, [sp]
  04278	e5dd3080	 ldrb        r3, [sp, #0x80]
  0427c	e59d207c	 ldr         r2, [sp, #0x7C]
  04280	e282203d	 add         r2, r2, #0x3D
  04284	e5d22000	 ldrb        r2, [r2]
  04288	e59d107c	 ldr         r1, [sp, #0x7C]
  0428c	e281103c	 add         r1, r1, #0x3C
  04290	e5d11000	 ldrb        r1, [r1]
  04294	e59f06f0	 ldr         r0, [pc, #0x6F0]
  04298	eb000000	 bl          NKDbgPrintfW
  0429c	e3a03001	 mov         r3, #1
  042a0	e58d3028	 str         r3, [sp, #0x28]
  042a4	ea000001	 b           |$LN28@IssueTrans@2|
  042a8		 |$LN27@IssueTrans@2|
  042a8	e3a03000	 mov         r3, #0
  042ac	e58d3028	 str         r3, [sp, #0x28]
  042b0		 |$LN28@IssueTrans@2|

; 1507 : 
; 1508 :     // Validate input
; 1509 :     if (nLength && (!pvBuffer && !paBuffer))

  042b0	e59d3098	 ldr         r3, [sp, #0x98]
  042b4	e3530000	 cmp         r3, #0
  042b8	0a000011	 beq         |$LN24@IssueTrans@2|
  042bc	e59d3090	 ldr         r3, [sp, #0x90]
  042c0	e3530000	 cmp         r3, #0
  042c4	1a00000e	 bne         |$LN24@IssueTrans@2|
  042c8	e59d3094	 ldr         r3, [sp, #0x94]
  042cc	e3530000	 cmp         r3, #0
  042d0	1a00000b	 bne         |$LN24@IssueTrans@2|

; 1510 :     {
; 1511 :         RETAILMSG(CPPI_DBG_ERROR,
; 1512 :             (L" CCppiDmaTxChannel::IssueTransfer: ERROR - Invalid args, pv %08X, pa %08X, length %08X",
; 1513 :             pvBuffer,
; 1514 :             paBuffer,
; 1515 :             nLength));

  042d4	e59d3098	 ldr         r3, [sp, #0x98]
  042d8	e59d2094	 ldr         r2, [sp, #0x94]
  042dc	e59d1090	 ldr         r1, [sp, #0x90]
  042e0	e59f06a0	 ldr         r0, [pc, #0x6A0]
  042e4	eb000000	 bl          NKDbgPrintfW
  042e8	e3a03001	 mov         r3, #1
  042ec	e58d302c	 str         r3, [sp, #0x2C]
  042f0	ea000001	 b           |$LN30@IssueTrans@2|
  042f4	e3a03000	 mov         r3, #0
  042f8	e58d302c	 str         r3, [sp, #0x2C]
  042fc		 |$LN30@IssueTrans@2|

; 1516 : 
; 1517 :         goto _doneUnsafe;

  042fc	ea000189	 b           |$LN23@IssueTrans@2|
  04300	ea000188	 b           |$_doneUnsafe$39550|
  04304		 |$LN24@IssueTrans@2|

; 1518 :     }
; 1519 : 
; 1520 :     // Validate ISO frames
; 1521 :     if (epType == USB_ENDPOINT_TYPE_ISOCHRONOUS)

  04304	e5dd3088	 ldrb        r3, [sp, #0x88]
  04308	e3530001	 cmp         r3, #1
  0430c	1a000053	 bne         |$LN22@IssueTrans@2|

; 1522 :     {
; 1523 :         if (!nFrames || !pnFrameLengths)

  04310	e59d309c	 ldr         r3, [sp, #0x9C]
  04314	e3530000	 cmp         r3, #0
  04318	0a000002	 beq         |$LN20@IssueTrans@2|
  0431c	e59d30a0	 ldr         r3, [sp, #0xA0]
  04320	e3530000	 cmp         r3, #0
  04324	1a00000a	 bne         |$LN21@IssueTrans@2|
  04328		 |$LN20@IssueTrans@2|

; 1524 :         {
; 1525 :             RETAILMSG(CPPI_DBG_ERROR,
; 1526 :                 (L" CCppiDmaTxChannel::IssueTransfer: ERROR - Invalid iso args, frames %08X, lengths %08X\r\n",
; 1527 :                 nFrames,
; 1528 :                 pnFrameLengths));

  04328	e59d20a0	 ldr         r2, [sp, #0xA0]
  0432c	e59d109c	 ldr         r1, [sp, #0x9C]
  04330	e59f064c	 ldr         r0, [pc, #0x64C]
  04334	eb000000	 bl          NKDbgPrintfW
  04338	e3a03001	 mov         r3, #1
  0433c	e58d3030	 str         r3, [sp, #0x30]
  04340	ea000001	 b           |$LN32@IssueTrans@2|
  04344	e3a03000	 mov         r3, #0
  04348	e58d3030	 str         r3, [sp, #0x30]
  0434c		 |$LN32@IssueTrans@2|

; 1529 : 
; 1530 :             goto _doneUnsafe;

  0434c	ea000175	 b           |$LN19@IssueTrans@2|
  04350	ea000174	 b           |$_doneUnsafe$39550|
  04354		 |$LN21@IssueTrans@2|

; 1531 :         }
; 1532 : 
; 1533 :         nLength = 0;

  04354	e3a03000	 mov         r3, #0
  04358	e58d3098	 str         r3, [sp, #0x98]

; 1534 :         for (UINT32 n = 0; n < nFrames; n ++)

  0435c	e3a03000	 mov         r3, #0
  04360	e58d3014	 str         r3, [sp, #0x14]
  04364	ea000002	 b           |$LN18@IssueTrans@2|
  04368		 |$LN17@IssueTrans@2|
  04368	e59d3014	 ldr         r3, [sp, #0x14]
  0436c	e2833001	 add         r3, r3, #1
  04370	e58d3014	 str         r3, [sp, #0x14]
  04374		 |$LN18@IssueTrans@2|
  04374	e59d2014	 ldr         r2, [sp, #0x14]
  04378	e59d309c	 ldr         r3, [sp, #0x9C]
  0437c	e1520003	 cmp         r2, r3
  04380	2a00002a	 bcs         |$LN16@IssueTrans@2|

; 1535 :         {
; 1536 :             if (!pnFrameLengths[n] || (pnFrameLengths[n] > (UINT32)epMaxPkt))

  04384	e59d1014	 ldr         r1, [sp, #0x14]
  04388	e3a03004	 mov         r3, #4
  0438c	e0020391	 mul         r2, r1, r3
  04390	e59d30a0	 ldr         r3, [sp, #0xA0]
  04394	e0833002	 add         r3, r3, r2
  04398	e5933000	 ldr         r3, [r3]
  0439c	e3530000	 cmp         r3, #0
  043a0	0a000008	 beq         |$LN14@IssueTrans@2|
  043a4	e59d1014	 ldr         r1, [sp, #0x14]
  043a8	e3a03004	 mov         r3, #4
  043ac	e0020391	 mul         r2, r1, r3
  043b0	e59d30a0	 ldr         r3, [sp, #0xA0]
  043b4	e0833002	 add         r3, r3, r2
  043b8	e1dd28bc	 ldrh        r2, [sp, #0x8C]
  043bc	e5933000	 ldr         r3, [r3]
  043c0	e1530002	 cmp         r3, r2
  043c4	9a00000f	 bls         |$LN15@IssueTrans@2|
  043c8		 |$LN14@IssueTrans@2|

; 1537 :             {
; 1538 :                 RETAILMSG(CPPI_DBG_ERROR,
; 1539 :                     (L" CCppiDmaTxChannel::IssueTransfer: ERROR - Invalid iso args, frame %08X, size %08X\r\n",
; 1540 :                     n,
; 1541 :                     pnFrameLengths[n]));

  043c8	e59d1014	 ldr         r1, [sp, #0x14]
  043cc	e3a03004	 mov         r3, #4
  043d0	e0020391	 mul         r2, r1, r3
  043d4	e59d30a0	 ldr         r3, [sp, #0xA0]
  043d8	e0833002	 add         r3, r3, r2
  043dc	e5932000	 ldr         r2, [r3]
  043e0	e59d1014	 ldr         r1, [sp, #0x14]
  043e4	e59f0594	 ldr         r0, [pc, #0x594]
  043e8	eb000000	 bl          NKDbgPrintfW
  043ec	e3a03001	 mov         r3, #1
  043f0	e58d3034	 str         r3, [sp, #0x34]
  043f4	ea000001	 b           |$LN34@IssueTrans@2|
  043f8	e3a03000	 mov         r3, #0
  043fc	e58d3034	 str         r3, [sp, #0x34]
  04400		 |$LN34@IssueTrans@2|

; 1542 : 
; 1543 :                 goto _doneUnsafe;

  04400	ea000148	 b           |$LN13@IssueTrans@2|
  04404	ea000147	 b           |$_doneUnsafe$39550|
  04408		 |$LN15@IssueTrans@2|

; 1544 :             }
; 1545 : 
; 1546 :             nLength += pnFrameLengths[n];

  04408	e59d1014	 ldr         r1, [sp, #0x14]
  0440c	e3a03004	 mov         r3, #4
  04410	e0020391	 mul         r2, r1, r3
  04414	e59d30a0	 ldr         r3, [sp, #0xA0]
  04418	e0833002	 add         r3, r3, r2
  0441c	e59d2098	 ldr         r2, [sp, #0x98]
  04420	e5933000	 ldr         r3, [r3]
  04424	e0823003	 add         r3, r2, r3
  04428	e58d3098	 str         r3, [sp, #0x98]

; 1547 :         }

  0442c	eaffffcd	 b           |$LN17@IssueTrans@2|
  04430		 |$LN16@IssueTrans@2|

; 1548 : 
; 1549 :         if (!nLength)

  04430	e59d3098	 ldr         r3, [sp, #0x98]
  04434	e3530000	 cmp         r3, #0
  04438	1a000008	 bne         |$LN12@IssueTrans@2|

; 1550 :         {
; 1551 :             RETAILMSG(CPPI_DBG_ERROR,
; 1552 :                 (L" CCppiDmaTxChannel::IssueTransfer: ERROR - Invalid ISO args, zero transfer length\r\n"));

  0443c	e59f0538	 ldr         r0, [pc, #0x538]
  04440	eb000000	 bl          NKDbgPrintfW
  04444	e3a03001	 mov         r3, #1
  04448	e58d3038	 str         r3, [sp, #0x38]
  0444c	ea000001	 b           |$LN36@IssueTrans@2|
  04450	e3a03000	 mov         r3, #0
  04454	e58d3038	 str         r3, [sp, #0x38]
  04458		 |$LN36@IssueTrans@2|

; 1553 :             goto _doneUnsafe;

  04458	ea000132	 b           |$LN11@IssueTrans@2|
  0445c	ea000131	 b           |$_doneUnsafe$39550|
  04460		 |$LN12@IssueTrans@2|
  04460		 |$LN22@IssueTrans@2|

; 1554 :         }
; 1555 :     }
; 1556 : 
; 1557 :     // Go safe
; 1558 :     ChLock();

  04460	e59d007c	 ldr         r0, [sp, #0x7C]
  04464	eb000000	 bl          |?ChLock@CCppiDmaChannel@@IAAXXZ|

; 1559 : 
; 1560 :     // We are not supporting overlapped I/O by now
; 1561 :     if (IsInUse())

  04468	e59d007c	 ldr         r0, [sp, #0x7C]
  0446c	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  04470	e58d003c	 str         r0, [sp, #0x3C]
  04474	e59d303c	 ldr         r3, [sp, #0x3C]
  04478	e3530000	 cmp         r3, #0
  0447c	0a00000b	 beq         |$LN10@IssueTrans@2|

; 1562 :     {
; 1563 :         RETAILMSG(CPPI_DBG_ERROR,
; 1564 :             (L" CCppiDmaTxChannel::IssueTransfer: ERROR - Pending transfer, length %u",
; 1565 :             m_nTransferLength));

  04480	e59d307c	 ldr         r3, [sp, #0x7C]
  04484	e2833088	 add         r3, r3, #0x88
  04488	e5931000	 ldr         r1, [r3]
  0448c	e59f04e4	 ldr         r0, [pc, #0x4E4]
  04490	eb000000	 bl          NKDbgPrintfW
  04494	e3a03001	 mov         r3, #1
  04498	e58d3040	 str         r3, [sp, #0x40]
  0449c	ea000001	 b           |$LN38@IssueTrans@2|
  044a0	e3a03000	 mov         r3, #0
  044a4	e58d3040	 str         r3, [sp, #0x40]
  044a8		 |$LN38@IssueTrans@2|

; 1566 : 
; 1567 :         goto _done;

  044a8	ea00011c	 b           |$LN9@IssueTrans@2|
  044ac	ea00011b	 b           |$_done$39571|
  044b0		 |$LN10@IssueTrans@2|

; 1568 :     }
; 1569 : 
; 1570 :     // Extra debug checks
; 1571 :     DEBUGCHK(m_pvTransferBuffer == NULL);

  044b0	e59d307c	 ldr         r3, [sp, #0x7C]
  044b4	e283306c	 add         r3, r3, #0x6C
  044b8	e5933000	 ldr         r3, [r3]
  044bc	e3530000	 cmp         r3, #0
  044c0	1a000002	 bne         |$LN39@IssueTrans@2|
  044c4	e3a03001	 mov         r3, #1
  044c8	e58d3044	 str         r3, [sp, #0x44]
  044cc	ea000008	 b           |$LN40@IssueTrans@2|
  044d0		 |$LN39@IssueTrans@2|
  044d0	e3a03c06	 mov         r3, #6, 24
  044d4	e3833023	 orr         r3, r3, #0x23
  044d8	e59f2494	 ldr         r2, [pc, #0x494]
  044dc	e59f148c	 ldr         r1, [pc, #0x48C]
  044e0	e59f0484	 ldr         r0, [pc, #0x484]
  044e4	eb000000	 bl          NKDbgPrintfW
  044e8	e6000010	 __debugbreak_ce
  044ec	e3a03000	 mov         r3, #0
  044f0	e58d3044	 str         r3, [sp, #0x44]
  044f4		 |$LN40@IssueTrans@2|

; 1572 :     DEBUGCHK(m_paTransferBuffer == 0);

  044f4	e59d307c	 ldr         r3, [sp, #0x7C]
  044f8	e2833070	 add         r3, r3, #0x70
  044fc	e5933000	 ldr         r3, [r3]
  04500	e3530000	 cmp         r3, #0
  04504	1a000002	 bne         |$LN41@IssueTrans@2|
  04508	e3a03001	 mov         r3, #1
  0450c	e58d3048	 str         r3, [sp, #0x48]
  04510	ea000008	 b           |$LN42@IssueTrans@2|
  04514		 |$LN41@IssueTrans@2|
  04514	e3a03c06	 mov         r3, #6, 24
  04518	e3833024	 orr         r3, r3, #0x24
  0451c	e59f2450	 ldr         r2, [pc, #0x450]
  04520	e59f1448	 ldr         r1, [pc, #0x448]
  04524	e59f0440	 ldr         r0, [pc, #0x440]
  04528	eb000000	 bl          NKDbgPrintfW
  0452c	e6000010	 __debugbreak_ce
  04530	e3a03000	 mov         r3, #0
  04534	e58d3048	 str         r3, [sp, #0x48]
  04538		 |$LN42@IssueTrans@2|

; 1573 :     DEBUGCHK(m_nTransferLength == 0);

  04538	e59d307c	 ldr         r3, [sp, #0x7C]
  0453c	e2833088	 add         r3, r3, #0x88
  04540	e5933000	 ldr         r3, [r3]
  04544	e3530000	 cmp         r3, #0
  04548	1a000002	 bne         |$LN43@IssueTrans@2|
  0454c	e3a03001	 mov         r3, #1
  04550	e58d304c	 str         r3, [sp, #0x4C]
  04554	ea000008	 b           |$LN44@IssueTrans@2|
  04558		 |$LN43@IssueTrans@2|
  04558	e3a03c06	 mov         r3, #6, 24
  0455c	e3833025	 orr         r3, r3, #0x25
  04560	e59f240c	 ldr         r2, [pc, #0x40C]
  04564	e59f1404	 ldr         r1, [pc, #0x404]
  04568	e59f03fc	 ldr         r0, [pc, #0x3FC]
  0456c	eb000000	 bl          NKDbgPrintfW
  04570	e6000010	 __debugbreak_ce
  04574	e3a03000	 mov         r3, #0
  04578	e58d304c	 str         r3, [sp, #0x4C]
  0457c		 |$LN44@IssueTrans@2|

; 1574 :     DEBUGCHK(m_nSegmentPending == 0);

  0457c	e59d307c	 ldr         r3, [sp, #0x7C]
  04580	e28330a0	 add         r3, r3, #0xA0
  04584	e5933000	 ldr         r3, [r3]
  04588	e3530000	 cmp         r3, #0
  0458c	1a000002	 bne         |$LN45@IssueTrans@2|
  04590	e3a03001	 mov         r3, #1
  04594	e58d3050	 str         r3, [sp, #0x50]
  04598	ea000008	 b           |$LN46@IssueTrans@2|
  0459c		 |$LN45@IssueTrans@2|
  0459c	e3a03c06	 mov         r3, #6, 24
  045a0	e3833026	 orr         r3, r3, #0x26
  045a4	e59f23c8	 ldr         r2, [pc, #0x3C8]
  045a8	e59f13c0	 ldr         r1, [pc, #0x3C0]
  045ac	e59f03b8	 ldr         r0, [pc, #0x3B8]
  045b0	eb000000	 bl          NKDbgPrintfW
  045b4	e6000010	 __debugbreak_ce
  045b8	e3a03000	 mov         r3, #0
  045bc	e58d3050	 str         r3, [sp, #0x50]
  045c0		 |$LN46@IssueTrans@2|

; 1575 :     DEBUGCHK(m_nSegmentFramesPending == 0);

  045c0	e59d307c	 ldr         r3, [sp, #0x7C]
  045c4	e28330a4	 add         r3, r3, #0xA4
  045c8	e5933000	 ldr         r3, [r3]
  045cc	e3530000	 cmp         r3, #0
  045d0	1a000002	 bne         |$LN47@IssueTrans@2|
  045d4	e3a03001	 mov         r3, #1
  045d8	e58d3054	 str         r3, [sp, #0x54]
  045dc	ea000008	 b           |$LN48@IssueTrans@2|
  045e0		 |$LN47@IssueTrans@2|
  045e0	e3a03c06	 mov         r3, #6, 24
  045e4	e3833027	 orr         r3, r3, #0x27
  045e8	e59f2384	 ldr         r2, [pc, #0x384]
  045ec	e59f137c	 ldr         r1, [pc, #0x37C]
  045f0	e59f0374	 ldr         r0, [pc, #0x374]
  045f4	eb000000	 bl          NKDbgPrintfW
  045f8	e6000010	 __debugbreak_ce
  045fc	e3a03000	 mov         r3, #0
  04600	e58d3054	 str         r3, [sp, #0x54]
  04604		 |$LN48@IssueTrans@2|

; 1576 : 
; 1577 :     // Save transfer info
; 1578 :     m_epAddr = epAddr;

  04604	e59d307c	 ldr         r3, [sp, #0x7C]
  04608	e2832060	 add         r2, r3, #0x60
  0460c	e5dd3080	 ldrb        r3, [sp, #0x80]
  04610	e5c23000	 strb        r3, [r2]

; 1579 :     m_fnAddr = fnAddr;

  04614	e59d307c	 ldr         r3, [sp, #0x7C]
  04618	e2832061	 add         r2, r3, #0x61
  0461c	e5dd3084	 ldrb        r3, [sp, #0x84]
  04620	e5c23000	 strb        r3, [r2]

; 1580 :     m_epType = epType;

  04624	e59d307c	 ldr         r3, [sp, #0x7C]
  04628	e2832062	 add         r2, r3, #0x62
  0462c	e5dd3088	 ldrb        r3, [sp, #0x88]
  04630	e5c23000	 strb        r3, [r2]

; 1581 :     m_epMaxPkt = epMaxPkt;

  04634	e59d307c	 ldr         r3, [sp, #0x7C]
  04638	e2832064	 add         r2, r3, #0x64
  0463c	e1dd38bc	 ldrh        r3, [sp, #0x8C]
  04640	e1c230b0	 strh        r3, [r2]

; 1582 : 
; 1583 :     m_pvTransferBuffer = (UINT8 *)pvBuffer;

  04644	e59d307c	 ldr         r3, [sp, #0x7C]
  04648	e283206c	 add         r2, r3, #0x6C
  0464c	e59d3090	 ldr         r3, [sp, #0x90]
  04650	e5823000	 str         r3, [r2]

; 1584 :     m_paTransferBuffer = paBuffer;

  04654	e59d307c	 ldr         r3, [sp, #0x7C]
  04658	e2832070	 add         r2, r3, #0x70
  0465c	e59d3094	 ldr         r3, [sp, #0x94]
  04660	e5823000	 str         r3, [r2]

; 1585 :     m_nTransferLength = nLength;

  04664	e59d307c	 ldr         r3, [sp, #0x7C]
  04668	e2832088	 add         r2, r3, #0x88
  0466c	e59d3098	 ldr         r3, [sp, #0x98]
  04670	e5823000	 str         r3, [r2]

; 1586 :     m_nTransferFrames = nFrames;

  04674	e59d307c	 ldr         r3, [sp, #0x7C]
  04678	e2832074	 add         r2, r3, #0x74
  0467c	e59d309c	 ldr         r3, [sp, #0x9C]
  04680	e5823000	 str         r3, [r2]

; 1587 :     m_pTransferFrameLengths = pnFrameLengths;

  04684	e59d307c	 ldr         r3, [sp, #0x7C]
  04688	e2832078	 add         r2, r3, #0x78
  0468c	e59d30a0	 ldr         r3, [sp, #0xA0]
  04690	e5823000	 str         r3, [r2]

; 1588 :     m_pdwIsochErrors = pdwIsochErrors;

  04694	e59d307c	 ldr         r3, [sp, #0x7C]
  04698	e2832080	 add         r2, r3, #0x80
  0469c	e59d30a4	 ldr         r3, [sp, #0xA4]
  046a0	e5823000	 str         r3, [r2]

; 1589 :     m_pdwIsochLengths = pdwIsochLengths;

  046a4	e59d307c	 ldr         r3, [sp, #0x7C]
  046a8	e2832084	 add         r2, r3, #0x84
  046ac	e59d30a8	 ldr         r3, [sp, #0xA8]
  046b0	e5823000	 str         r3, [r2]

; 1590 :     m_nTransferOptions = nOptions;

  046b4	e59d307c	 ldr         r3, [sp, #0x7C]
  046b8	e283208c	 add         r2, r3, #0x8C
  046bc	e59d30ac	 ldr         r3, [sp, #0xAC]
  046c0	e5823000	 str         r3, [r2]

; 1591 :     m_pTransferCookie1 = pCookie1;

  046c4	e59d307c	 ldr         r3, [sp, #0x7C]
  046c8	e2832090	 add         r2, r3, #0x90
  046cc	e59d30b0	 ldr         r3, [sp, #0xB0]
  046d0	e5823000	 str         r3, [r2]

; 1592 :     m_pTransferCookie2 = pCookie2;

  046d4	e59d307c	 ldr         r3, [sp, #0x7C]
  046d8	e2832094	 add         r2, r3, #0x94
  046dc	e59d30b4	 ldr         r3, [sp, #0xB4]
  046e0	e5823000	 str         r3, [r2]

; 1593 :     m_nTransferComplete = 0;

  046e4	e59d307c	 ldr         r3, [sp, #0x7C]
  046e8	e2832098	 add         r2, r3, #0x98
  046ec	e3a03000	 mov         r3, #0
  046f0	e5823000	 str         r3, [r2]

; 1594 :     m_nTransferFramesComplete = 0;

  046f4	e59d307c	 ldr         r3, [sp, #0x7C]
  046f8	e283209c	 add         r2, r3, #0x9C
  046fc	e3a03000	 mov         r3, #0
  04700	e5823000	 str         r3, [r2]

; 1595 :     m_nSegmentPending = 0;

  04704	e59d307c	 ldr         r3, [sp, #0x7C]
  04708	e28320a0	 add         r2, r3, #0xA0
  0470c	e3a03000	 mov         r3, #0
  04710	e5823000	 str         r3, [r2]

; 1596 :     m_nSegmentFramesPending = 0;

  04714	e59d307c	 ldr         r3, [sp, #0x7C]
  04718	e28320a4	 add         r2, r3, #0xA4
  0471c	e3a03000	 mov         r3, #0
  04720	e5823000	 str         r3, [r2]

; 1597 : 
; 1598 :     BOOL fIsRndisMode;
; 1599 :     if (!IsIso())

  04724	e59d007c	 ldr         r0, [sp, #0x7C]
  04728	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  0472c	e58d0058	 str         r0, [sp, #0x58]
  04730	e59d3058	 ldr         r3, [sp, #0x58]
  04734	e3530000	 cmp         r3, #0
  04738	1a000011	 bne         |$LN8@IssueTrans@2|

; 1600 :         fIsRndisMode = ((m_epMaxPkt & 0x3f) == 0) &&
; 1601 :                        (m_nTransferLength <= 0x10000);

  0473c	e59d307c	 ldr         r3, [sp, #0x7C]
  04740	e2833064	 add         r3, r3, #0x64
  04744	e1d330b0	 ldrh        r3, [r3]
  04748	e313003f	 tst         r3, #0x3F
  0474c	1a000007	 bne         |$LN49@IssueTrans@2|
  04750	e59d307c	 ldr         r3, [sp, #0x7C]
  04754	e2833088	 add         r3, r3, #0x88
  04758	e5933000	 ldr         r3, [r3]
  0475c	e3530801	 cmp         r3, #1, 16
  04760	8a000002	 bhi         |$LN49@IssueTrans@2|
  04764	e3a03001	 mov         r3, #1
  04768	e58d305c	 str         r3, [sp, #0x5C]
  0476c	ea000001	 b           |$LN50@IssueTrans@2|
  04770		 |$LN49@IssueTrans@2|
  04770	e3a03000	 mov         r3, #0
  04774	e58d305c	 str         r3, [sp, #0x5C]
  04778		 |$LN50@IssueTrans@2|
  04778	e59d305c	 ldr         r3, [sp, #0x5C]
  0477c	e58d3010	 str         r3, [sp, #0x10]

; 1602 :     else

  04780	ea000001	 b           |$LN7@IssueTrans@2|
  04784		 |$LN8@IssueTrans@2|

; 1603 :         fIsRndisMode = FALSE;

  04784	e3a03000	 mov         r3, #0
  04788	e58d3010	 str         r3, [sp, #0x10]
  0478c		 |$LN7@IssueTrans@2|

; 1604 : 
; 1605 :     if (fIsRndisMode)

  0478c	e59d3010	 ldr         r3, [sp, #0x10]
  04790	e3530000	 cmp         r3, #0
  04794	0a000004	 beq         |$LN6@IssueTrans@2|

; 1606 :         m_nMaxBD = 0x10000;

  04798	e59d307c	 ldr         r3, [sp, #0x7C]
  0479c	e2832068	 add         r2, r3, #0x68
  047a0	e3a03801	 mov         r3, #1, 16
  047a4	e5823000	 str         r3, [r2]

; 1607 :     else

  047a8	ea000005	 b           |$LN5@IssueTrans@2|
  047ac		 |$LN6@IssueTrans@2|

; 1608 :         m_nMaxBD = m_epMaxPkt;

  047ac	e59d307c	 ldr         r3, [sp, #0x7C]
  047b0	e2833064	 add         r3, r3, #0x64
  047b4	e1d320b0	 ldrh        r2, [r3]
  047b8	e59d307c	 ldr         r3, [sp, #0x7C]
  047bc	e2833068	 add         r3, r3, #0x68
  047c0	e5832000	 str         r2, [r3]
  047c4		 |$LN5@IssueTrans@2|

; 1609 : 
; 1610 :     DEBUGMSG(CPPI_DBG_RX,
; 1611 :         (L" CCppiDmaTxChannel::IssueTransfer: RndisMode %d, epMaxPkt %u, MaxBD %u\r\n",
; 1612 :          fIsRndisMode, m_epMaxPkt, m_nMaxBD));

  047c4	ea00000b	 b           |$LN51@IssueTrans@2|
  047c8	e59d307c	 ldr         r3, [sp, #0x7C]
  047cc	e2833068	 add         r3, r3, #0x68
  047d0	e5933000	 ldr         r3, [r3]
  047d4	e59d207c	 ldr         r2, [sp, #0x7C]
  047d8	e2822064	 add         r2, r2, #0x64
  047dc	e1d220b0	 ldrh        r2, [r2]
  047e0	e59d1010	 ldr         r1, [sp, #0x10]
  047e4	e59f017c	 ldr         r0, [pc, #0x17C]
  047e8	eb000000	 bl          NKDbgPrintfW
  047ec	e3a03001	 mov         r3, #1
  047f0	e58d3060	 str         r3, [sp, #0x60]
  047f4	ea000001	 b           |$LN52@IssueTrans@2|
  047f8		 |$LN51@IssueTrans@2|
  047f8	e3a03000	 mov         r3, #0
  047fc	e58d3060	 str         r3, [sp, #0x60]
  04800		 |$LN52@IssueTrans@2|

; 1613 : 
; 1614 :     UpdateRndisMode(fIsRndisMode);

  04800	e59d1010	 ldr         r1, [sp, #0x10]
  04804	e59d007c	 ldr         r0, [sp, #0x7C]
  04808	eb000000	 bl          |?UpdateRndisMode@CCppiDmaChannel@@IAAXH@Z|

; 1615 : 
; 1616 :     if (!IsIso())

  0480c	e59d007c	 ldr         r0, [sp, #0x7C]
  04810	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  04814	e58d0064	 str         r0, [sp, #0x64]
  04818	e59d3064	 ldr         r3, [sp, #0x64]
  0481c	e3530000	 cmp         r3, #0
  04820	1a000023	 bne         |$LN4@IssueTrans@2|

; 1617 :     {
; 1618 :         if (m_nTransferLength)

  04824	e59d307c	 ldr         r3, [sp, #0x7C]
  04828	e2833088	 add         r3, r3, #0x88
  0482c	e5933000	 ldr         r3, [r3]
  04830	e3530000	 cmp         r3, #0
  04834	0a00001a	 beq         |$LN3@IssueTrans@2|

; 1619 :         {
; 1620 :             m_nTransferFrames = m_nTransferLength / m_nMaxBD;

  04838	e59d307c	 ldr         r3, [sp, #0x7C]
  0483c	e2832088	 add         r2, r3, #0x88
  04840	e59d307c	 ldr         r3, [sp, #0x7C]
  04844	e2833068	 add         r3, r3, #0x68
  04848	e5921000	 ldr         r1, [r2]
  0484c	e5930000	 ldr         r0, [r3]
  04850	eb000000	 bl          __rt_udiv
  04854	e59d307c	 ldr         r3, [sp, #0x7C]
  04858	e2833074	 add         r3, r3, #0x74
  0485c	e5830000	 str         r0, [r3]

; 1621 : 
; 1622 :             if (m_nTransferLength % m_nMaxBD)

  04860	e59d307c	 ldr         r3, [sp, #0x7C]
  04864	e2832088	 add         r2, r3, #0x88
  04868	e59d307c	 ldr         r3, [sp, #0x7C]
  0486c	e2833068	 add         r3, r3, #0x68
  04870	e5921000	 ldr         r1, [r2]
  04874	e5930000	 ldr         r0, [r3]
  04878	eb000000	 bl          __rt_udiv
  0487c	e3510000	 cmp         r1, #0
  04880	0a000006	 beq         |$LN2@IssueTrans@2|

; 1623 :             {
; 1624 :                 m_nTransferFrames ++;

  04884	e59d307c	 ldr         r3, [sp, #0x7C]
  04888	e2833074	 add         r3, r3, #0x74
  0488c	e5933000	 ldr         r3, [r3]
  04890	e2832001	 add         r2, r3, #1
  04894	e59d307c	 ldr         r3, [sp, #0x7C]
  04898	e2833074	 add         r3, r3, #0x74
  0489c	e5832000	 str         r2, [r3]
  048a0		 |$LN2@IssueTrans@2|

; 1625 :             }
; 1626 :         }
; 1627 :         else

  048a0	ea000003	 b           |$LN1@IssueTrans@2|
  048a4		 |$LN3@IssueTrans@2|

; 1628 :         {
; 1629 :             m_nTransferFrames = 1;

  048a4	e59d307c	 ldr         r3, [sp, #0x7C]
  048a8	e2832074	 add         r2, r3, #0x74
  048ac	e3a03001	 mov         r3, #1
  048b0	e5823000	 str         r3, [r2]
  048b4		 |$LN1@IssueTrans@2|
  048b4		 |$LN4@IssueTrans@2|

; 1630 :         }
; 1631 :     }
; 1632 : 
; 1633 :     DEBUGMSG(CPPI_DBG_TX,
; 1634 :         (L" CCppiDmaTxChannel::IssueTransfer: Length %u, %u frames, options 0x%08x\r\n",
; 1635 :         m_nTransferLength,
; 1636 :         m_nTransferFrames,
; 1637 :         m_nTransferOptions));

  048b4	ea00000d	 b           |$LN53@IssueTrans@2|
  048b8	e59d307c	 ldr         r3, [sp, #0x7C]
  048bc	e283308c	 add         r3, r3, #0x8C
  048c0	e5933000	 ldr         r3, [r3]
  048c4	e59d207c	 ldr         r2, [sp, #0x7C]
  048c8	e2822074	 add         r2, r2, #0x74
  048cc	e5922000	 ldr         r2, [r2]
  048d0	e59d107c	 ldr         r1, [sp, #0x7C]
  048d4	e2811088	 add         r1, r1, #0x88
  048d8	e5911000	 ldr         r1, [r1]
  048dc	e59f0080	 ldr         r0, [pc, #0x80]
  048e0	eb000000	 bl          NKDbgPrintfW
  048e4	e3a03001	 mov         r3, #1
  048e8	e58d3068	 str         r3, [sp, #0x68]
  048ec	ea000001	 b           |$LN54@IssueTrans@2|
  048f0		 |$LN53@IssueTrans@2|
  048f0	e3a03000	 mov         r3, #0
  048f4	e58d3068	 str         r3, [sp, #0x68]
  048f8		 |$LN54@IssueTrans@2|

; 1638 : 
; 1639 :     m_pCppiChannelRegs->TXGCR =
; 1640 :         BIT31 | /* Enable */ /*
; 1641 :         qmgr |
; 1642 :         qnum? */ USB_CPPI_TXCMPL_QNUM_HOST;

  048f8	e59d307c	 ldr         r3, [sp, #0x7C]
  048fc	e283301c	 add         r3, r3, #0x1C
  04900	e5932000	 ldr         r2, [r3]
  04904	e3a031fe	 mov         r3, #0xFE, 2
  04908	e5823000	 str         r3, [r2]

; 1643 : 
; 1644 :     // Schedule next transfer
; 1645 :     fResult = ScheduleTransfer();

  0490c	e59d007c	 ldr         r0, [sp, #0x7C]
  04910	eb000000	 bl          |?ScheduleTransfer@CCppiDmaTxChannel@@QAAHXZ|
  04914	e58d006c	 str         r0, [sp, #0x6C]
  04918	e59d306c	 ldr         r3, [sp, #0x6C]
  0491c	e58d300c	 str         r3, [sp, #0xC]
  04920		 |$LN9@IssueTrans@2|
  04920		 |$_done$39571|

; 1646 : 
; 1647 : _done:
; 1648 : 
; 1649 :     // Go unsafe
; 1650 :     ChUnlock();

  04920	e59d007c	 ldr         r0, [sp, #0x7C]
  04924	eb000000	 bl          |?ChUnlock@CCppiDmaChannel@@IAAXXZ|
  04928		 |$LN11@IssueTrans@2|
  04928		 |$LN13@IssueTrans@2|
  04928		 |$LN19@IssueTrans@2|
  04928		 |$LN23@IssueTrans@2|
  04928		 |$_doneUnsafe$39550|

; 1651 : 
; 1652 : _doneUnsafe:
; 1653 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 1654 :         (L"-CCppiDmaTxChannel::IssueTransfer\r\n"));

  04928	ea000004	 b           |$LN55@IssueTrans@2|
  0492c	e59f002c	 ldr         r0, [pc, #0x2C]
  04930	eb000000	 bl          NKDbgPrintfW
  04934	e3a03001	 mov         r3, #1
  04938	e58d3070	 str         r3, [sp, #0x70]
  0493c	ea000001	 b           |$LN56@IssueTrans@2|
  04940		 |$LN55@IssueTrans@2|
  04940	e3a03000	 mov         r3, #0
  04944	e58d3070	 str         r3, [sp, #0x70]
  04948		 |$LN56@IssueTrans@2|

; 1655 : 
; 1656 :     return fResult;

  04948	e59d300c	 ldr         r3, [sp, #0xC]
  0494c	e58d3024	 str         r3, [sp, #0x24]

; 1657 : }

  04950	e59d0024	 ldr         r0, [sp, #0x24]
  04954	e28dd074	 add         sp, sp, #0x74
  04958	e89d6000	 ldmia       sp, {sp, lr}
  0495c	e12fff1e	 bx          lr
  04960		 |$LN60@IssueTrans@2|
  04960		 |$LN61@IssueTrans@2|
  04960	00000000	 DCD         |??_C@_1EI@KCNNJCCN@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  04964		 |$LN62@IssueTrans@2|
  04964	00000000	 DCD         |??_C@_1JE@CCAOBHEO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  04968		 |$LN63@IssueTrans@2|
  04968	00000000	 DCD         |??_C@_1JC@FAMJOMII@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  0496c		 |$LN64@IssueTrans@2|
  0496c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  04970		 |$LN65@IssueTrans@2|
  04970	00000000	 DCD         |dpCurSettings|
  04974		 |$LN66@IssueTrans@2|
  04974	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  04978		 |$LN67@IssueTrans@2|
  04978	00000000	 DCD         |??_C@_1IO@KMDCDODB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  0497c		 |$LN68@IssueTrans@2|
  0497c	00000000	 DCD         |??_C@_1KI@KBHLFCKP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  04980		 |$LN69@IssueTrans@2|
  04980	00000000	 DCD         |??_C@_1KK@CLDEICMA@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  04984		 |$LN70@IssueTrans@2|
  04984	00000000	 DCD         |??_C@_1LC@HEKKLHBN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  04988		 |$LN71@IssueTrans@2|
  04988	00000000	 DCD         |??_C@_1KO@GEJIKLBO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  0498c		 |$LN72@IssueTrans@2|
  0498c	00000000	 DCD         |??_C@_1JM@CDACEHNG@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  04990		 |$M40951|

			 ENDP  ; |?IssueTransfer@CCppiDmaTxChannel@@UAAHEEEGPAXIIIPAIPAK2I00@Z|, CCppiDmaTxChannel::IssueTransfer

	EXPORT	|??_C@_1HI@KPIHGOEO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@FHEFGGCK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@ICNKILPO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LO@MEBENBLP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@OPNDFFBD@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'

  00098			 AREA	 |.pdata|, PDATA
|$T40990| DCD	|$LN29@CancelTran@2|
	DCD	0x40013504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@KPIHGOEO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@FHEFGGCK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, "/", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@ICNKILPO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "B", 0x0, "D", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "a", 0x0, "f", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "-", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@MEBENBLP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "d", 0x0, "-"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "e"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, ")"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@OPNDFFBD@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  04990			 AREA	 |.text|, CODE, ARM

  04990		 |?CancelTransfer@CCppiDmaTxChannel@@UAAHXZ| PROC ; CCppiDmaTxChannel::CancelTransfer

; 1661 : {

  04990		 |$LN29@CancelTran@2|
  04990	e1a0c00d	 mov         r12, sp
  04994	e92d0001	 stmdb       sp!, {r0}
  04998	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0499c	e24dd05c	 sub         sp, sp, #0x5C
  049a0		 |$M40987|

; 1662 :     BOOL fResult = FALSE;

  049a0	e3a03000	 mov         r3, #0
  049a4	e58d300c	 str         r3, [sp, #0xC]

; 1663 : 
; 1664 : #ifndef SHIP_BUILD
; 1665 :     WCHAR* szDir = m_fIsOut ? L"OUT" : L"IN";

  049a8	e59d3068	 ldr         r3, [sp, #0x68]
  049ac	e2833034	 add         r3, r3, #0x34
  049b0	e5933000	 ldr         r3, [r3]
  049b4	e3530000	 cmp         r3, #0
  049b8	0a000002	 beq         |$LN13@CancelTran@2|
  049bc	e59f349c	 ldr         r3, [pc, #0x49C]
  049c0	e58d3030	 str         r3, [sp, #0x30]
  049c4	ea000001	 b           |$LN14@CancelTran@2|
  049c8		 |$LN13@CancelTran@2|
  049c8	e59f348c	 ldr         r3, [pc, #0x48C]
  049cc	e58d3030	 str         r3, [sp, #0x30]
  049d0		 |$LN14@CancelTran@2|
  049d0	e59d3030	 ldr         r3, [sp, #0x30]
  049d4	e58d3010	 str         r3, [sp, #0x10]

; 1666 : #endif
; 1667 : 
; 1668 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 1669 :         (L"+CCppiDmaTxChannel::CancelTransfer: %s Ch %u (EP %u)\r\n",
; 1670 :         szDir,
; 1671 :         m_chNum,
; 1672 :         m_epNum));

  049d8	ea00000b	 b           |$LN15@CancelTran@2|
  049dc	e59d3068	 ldr         r3, [sp, #0x68]
  049e0	e283303d	 add         r3, r3, #0x3D
  049e4	e5d33000	 ldrb        r3, [r3]
  049e8	e59d2068	 ldr         r2, [sp, #0x68]
  049ec	e282203c	 add         r2, r2, #0x3C
  049f0	e5d22000	 ldrb        r2, [r2]
  049f4	e59d1010	 ldr         r1, [sp, #0x10]
  049f8	e59f0458	 ldr         r0, [pc, #0x458]
  049fc	eb000000	 bl          NKDbgPrintfW
  04a00	e3a03001	 mov         r3, #1
  04a04	e58d3034	 str         r3, [sp, #0x34]
  04a08	ea000001	 b           |$LN16@CancelTran@2|
  04a0c		 |$LN15@CancelTran@2|
  04a0c	e3a03000	 mov         r3, #0
  04a10	e58d3034	 str         r3, [sp, #0x34]
  04a14		 |$LN16@CancelTran@2|

; 1673 : 
; 1674 :     // Go safe
; 1675 :     ChLock();

  04a14	e59d0068	 ldr         r0, [sp, #0x68]
  04a18	eb000000	 bl          |?ChLock@CCppiDmaChannel@@IAAXXZ|

; 1676 : 
; 1677 :     // Only if there is a pending DMA transfer
; 1678 :     if (IsInUse())

  04a1c	e59d0068	 ldr         r0, [sp, #0x68]
  04a20	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  04a24	e58d0038	 str         r0, [sp, #0x38]
  04a28	e59d3038	 ldr         r3, [sp, #0x38]
  04a2c	e3530000	 cmp         r3, #0
  04a30	0a0000df	 beq         |$LN10@CancelTran@2|

; 1679 :     {
; 1680 :         m_fIsTeardownPending = TRUE;

  04a34	e59d3068	 ldr         r3, [sp, #0x68]
  04a38	e2832038	 add         r2, r3, #0x38
  04a3c	e3a03001	 mov         r3, #1
  04a40	e5823000	 str         r3, [r2]

; 1681 : 
; 1682 :         // 1. Initiate channel tear-down
; 1683 :         m_pCppiChannelRegs->TXGCR =
; 1684 :             BIT31 | /* Enable */
; 1685 :             BIT30 | /* Tear-down */ /*
; 1686 :             qmgr |
; 1687 :             qnum */ USB_CPPI_TXCMPL_QNUM_HOST;

  04a44	e59d3068	 ldr         r3, [sp, #0x68]
  04a48	e283301c	 add         r3, r3, #0x1C
  04a4c	e5932000	 ldr         r2, [r3]
  04a50	e3a031ff	 mov         r3, #0xFF, 2
  04a54	e5823000	 str         r3, [r2]

; 1688 : 
; 1689 :         // 2. Set USB controller TD bit
; 1690 :         m_pUsbRegs->TEARDOWN |= ((1 << m_epNum) << USB_OTG_TXTD_SHIFT);

  04a58	e59d3068	 ldr         r3, [sp, #0x68]
  04a5c	e2833010	 add         r3, r3, #0x10
  04a60	e5933000	 ldr         r3, [r3]
  04a64	e283101c	 add         r1, r3, #0x1C
  04a68	e59d3068	 ldr         r3, [sp, #0x68]
  04a6c	e283303d	 add         r3, r3, #0x3D
  04a70	e5d33000	 ldrb        r3, [r3]
  04a74	e1a02003	 mov         r2, r3
  04a78	e3a03001	 mov         r3, #1
  04a7c	e1a03213	 mov         r3, r3, lsl r2
  04a80	e1a02803	 mov         r2, r3, lsl #16
  04a84	e5913000	 ldr         r3, [r1]
  04a88	e1832002	 orr         r2, r3, r2
  04a8c	e59d3068	 ldr         r3, [sp, #0x68]
  04a90	e2833010	 add         r3, r3, #0x10
  04a94	e5933000	 ldr         r3, [r3]
  04a98	e283301c	 add         r3, r3, #0x1C
  04a9c	e5832000	 str         r2, [r3]

; 1691 : 
; 1692 :         // 3. Wait for CDMA completion and retry (due to TX disconnect issue)
; 1693 :         if (m_fIsTeardownPending)

  04aa0	e59d3068	 ldr         r3, [sp, #0x68]
  04aa4	e2833038	 add         r3, r3, #0x38
  04aa8	e5933000	 ldr         r3, [r3]
  04aac	e3530000	 cmp         r3, #0
  04ab0	0a000001	 beq         |$LN9@CancelTran@2|

; 1694 :             Sleep(10);

  04ab4	e3a0000a	 mov         r0, #0xA
  04ab8	eb000000	 bl          Sleep
  04abc		 |$LN9@CancelTran@2|

; 1695 : 
; 1696 :         DWORD tc0 = GetTickCount();

  04abc	eb000000	 bl          GetTickCount
  04ac0	e58d003c	 str         r0, [sp, #0x3C]
  04ac4	e59d303c	 ldr         r3, [sp, #0x3C]
  04ac8	e58d3014	 str         r3, [sp, #0x14]
  04acc		 |$LN8@CancelTran@2|

; 1697 :         while ((m_fIsTeardownPending) && ((GetTickCount() - tc0) < 2000)) {

  04acc	e59d3068	 ldr         r3, [sp, #0x68]
  04ad0	e2833038	 add         r3, r3, #0x38
  04ad4	e5933000	 ldr         r3, [r3]
  04ad8	e3530000	 cmp         r3, #0
  04adc	0a00001d	 beq         |$LN7@CancelTran@2|
  04ae0	eb000000	 bl          GetTickCount
  04ae4	e58d0040	 str         r0, [sp, #0x40]
  04ae8	e59d2040	 ldr         r2, [sp, #0x40]
  04aec	e59d3014	 ldr         r3, [sp, #0x14]
  04af0	e0423003	 sub         r3, r2, r3
  04af4	e3530e7d	 cmp         r3, #0x7D, 28
  04af8	2a000016	 bcs         |$LN7@CancelTran@2|

; 1698 :             m_pUsbRegs->TEARDOWN |= ((1 << m_epNum) << USB_OTG_TXTD_SHIFT);

  04afc	e59d3068	 ldr         r3, [sp, #0x68]
  04b00	e2833010	 add         r3, r3, #0x10
  04b04	e5933000	 ldr         r3, [r3]
  04b08	e283101c	 add         r1, r3, #0x1C
  04b0c	e59d3068	 ldr         r3, [sp, #0x68]
  04b10	e283303d	 add         r3, r3, #0x3D
  04b14	e5d33000	 ldrb        r3, [r3]
  04b18	e1a02003	 mov         r2, r3
  04b1c	e3a03001	 mov         r3, #1
  04b20	e1a03213	 mov         r3, r3, lsl r2
  04b24	e1a02803	 mov         r2, r3, lsl #16
  04b28	e5913000	 ldr         r3, [r1]
  04b2c	e1832002	 orr         r2, r3, r2
  04b30	e59d3068	 ldr         r3, [sp, #0x68]
  04b34	e2833010	 add         r3, r3, #0x10
  04b38	e5933000	 ldr         r3, [r3]
  04b3c	e283301c	 add         r3, r3, #0x1C
  04b40	e5832000	 str         r2, [r3]

; 1699 :             KickCompletionCallback();

  04b44	e59d0068	 ldr         r0, [sp, #0x68]
  04b48	eb000000	 bl          |?KickCompletionCallback@CCppiDmaChannel@@IAAXXZ|

; 1700 :             Sleep(10);

  04b4c	e3a0000a	 mov         r0, #0xA
  04b50	eb000000	 bl          Sleep

; 1701 :         }

  04b54	eaffffdc	 b           |$LN8@CancelTran@2|
  04b58		 |$LN7@CancelTran@2|

; 1702 : 
; 1703 :         // 4. Set USB controller TD bit
; 1704 :         m_pUsbRegs->TEARDOWN |= ((1 << m_epNum) << USB_OTG_TXTD_SHIFT);

  04b58	e59d3068	 ldr         r3, [sp, #0x68]
  04b5c	e2833010	 add         r3, r3, #0x10
  04b60	e5933000	 ldr         r3, [r3]
  04b64	e283101c	 add         r1, r3, #0x1C
  04b68	e59d3068	 ldr         r3, [sp, #0x68]
  04b6c	e283303d	 add         r3, r3, #0x3D
  04b70	e5d33000	 ldrb        r3, [r3]
  04b74	e1a02003	 mov         r2, r3
  04b78	e3a03001	 mov         r3, #1
  04b7c	e1a03213	 mov         r3, r3, lsl r2
  04b80	e1a02803	 mov         r2, r3, lsl #16
  04b84	e5913000	 ldr         r3, [r1]
  04b88	e1832002	 orr         r2, r3, r2
  04b8c	e59d3068	 ldr         r3, [sp, #0x68]
  04b90	e2833010	 add         r3, r3, #0x10
  04b94	e5933000	 ldr         r3, [r3]
  04b98	e283301c	 add         r3, r3, #0x1C
  04b9c	e5832000	 str         r2, [r3]

; 1705 : 
; 1706 :         // 5. Flush FIFO and clear status bits
; 1707 :         m_pUsbEpcsrRegs->TXCSR =
; 1708 :             MGC_M_TXCSR_FLUSHFIFO |
; 1709 :             MGC_M_TXCSR_H_NAKTIMEOUT |
; 1710 :             MGC_M_TXCSR_H_RXSTALL |
; 1711 :             MGC_M_TXCSR_H_ERROR |
; 1712 :             MGC_M_TXCSR_FIFONOTEMPTY;

  04ba0	e59d3068	 ldr         r3, [sp, #0x68]
  04ba4	e2833014	 add         r3, r3, #0x14
  04ba8	e5933000	 ldr         r3, [r3]
  04bac	e2832002	 add         r2, r3, #2
  04bb0	e3a030ae	 mov         r3, #0xAE
  04bb4	e1c230b0	 strh        r3, [r2]

; 1713 : 
; 1714 :         if (m_fIsTeardownPending) {

  04bb8	e59d3068	 ldr         r3, [sp, #0x68]
  04bbc	e2833038	 add         r3, r3, #0x38
  04bc0	e5933000	 ldr         r3, [r3]
  04bc4	e3530000	 cmp         r3, #0
  04bc8	0a00000d	 beq         |$LN6@CancelTran@2|

; 1715 :             RETAILMSG(CPPI_DBG_ERROR,
; 1716 :                 (L" CCppiDmaTxChannel::CancelTransfer: %s Ch %u (EP %u) - Timed-out (lost teardown descriptor)!\r\n",
; 1717 :                 szDir,
; 1718 :                 m_chNum,
; 1719 :                 m_epNum));

  04bcc	e59d3068	 ldr         r3, [sp, #0x68]
  04bd0	e283303d	 add         r3, r3, #0x3D
  04bd4	e5d33000	 ldrb        r3, [r3]
  04bd8	e59d2068	 ldr         r2, [sp, #0x68]
  04bdc	e282203c	 add         r2, r2, #0x3C
  04be0	e5d22000	 ldrb        r2, [r2]
  04be4	e59d1010	 ldr         r1, [sp, #0x10]
  04be8	e59f0264	 ldr         r0, [pc, #0x264]
  04bec	eb000000	 bl          NKDbgPrintfW
  04bf0	e3a03001	 mov         r3, #1
  04bf4	e58d3044	 str         r3, [sp, #0x44]
  04bf8	ea000001	 b           |$LN18@CancelTran@2|
  04bfc	e3a03000	 mov         r3, #0
  04c00	e58d3044	 str         r3, [sp, #0x44]
  04c04		 |$LN18@CancelTran@2|
  04c04		 |$LN6@CancelTran@2|
  04c04		 |$LN5@CancelTran@2|

; 1720 :         }
; 1721 : 
; 1722 :         // Pop all aborted BDs from the channel's queue and free them
; 1723 :         for(;;) {
; 1724 :             HOST_DESCRIPTOR* pHd = (HOST_DESCRIPTOR*)QueuePop();

  04c04	e59d0068	 ldr         r0, [sp, #0x68]
  04c08	eb000000	 bl          |?QueuePop@CCppiDmaChannel@@IAAPAXXZ|
  04c0c	e58d0048	 str         r0, [sp, #0x48]
  04c10	e59d3048	 ldr         r3, [sp, #0x48]
  04c14	e58d3018	 str         r3, [sp, #0x18]

; 1725 :             if (pHd != NULL) {

  04c18	e59d3018	 ldr         r3, [sp, #0x18]
  04c1c	e3530000	 cmp         r3, #0
  04c20	0a000011	 beq         |$LN3@CancelTran@2|

; 1726 :                 m_pController->HdFree(pHd);

  04c24	e59d1018	 ldr         r1, [sp, #0x18]
  04c28	e59d3068	 ldr         r3, [sp, #0x68]
  04c2c	e283300c	 add         r3, r3, #0xC
  04c30	e5930000	 ldr         r0, [r3]
  04c34	eb000000	 bl          |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z|

; 1727 :                 DEBUGMSG(ZONE_WARNING/*0*/,
; 1728 :                     (L" CCppiDmaTxChannel::CancelTransfer: Recovered %s BD on queue %u after tear-down\r\n",
; 1729 :                     szDir,
; 1730 :                     m_qNum));

  04c38	e59d3068	 ldr         r3, [sp, #0x68]
  04c3c	e283303e	 add         r3, r3, #0x3E
  04c40	e5d33000	 ldrb        r3, [r3]
  04c44	e1a02003	 mov         r2, r3
  04c48	e59d1010	 ldr         r1, [sp, #0x10]
  04c4c	e59f01fc	 ldr         r0, [pc, #0x1FC]
  04c50	eb000000	 bl          NKDbgPrintfW
  04c54	e3a03001	 mov         r3, #1
  04c58	e58d304c	 str         r3, [sp, #0x4C]
  04c5c	ea000001	 b           |$LN20@CancelTran@2|
  04c60	e3a03000	 mov         r3, #0
  04c64	e58d304c	 str         r3, [sp, #0x4C]
  04c68		 |$LN20@CancelTran@2|

; 1731 :             }
; 1732 :             else

  04c68	ea000000	 b           |$LN2@CancelTran@2|
  04c6c		 |$LN3@CancelTran@2|

; 1733 :                 break;

  04c6c	ea000000	 b           |$LN4@CancelTran@2|
  04c70		 |$LN2@CancelTran@2|

; 1734 :         }

  04c70	eaffffe3	 b           |$LN5@CancelTran@2|
  04c74		 |$LN4@CancelTran@2|

; 1735 : 
; 1736 :         DEBUGMSG(CPPI_DBG_TX,
; 1737 :             (L" CCppiDmaTxChannel::CancelTransfer: %s - Cancelled %u/%u\r\n",
; 1738 :             szDir,
; 1739 :             m_nTransferComplete,
; 1740 :             m_nTransferLength));

  04c74	ea00000b	 b           |$LN21@CancelTran@2|
  04c78	e59d3068	 ldr         r3, [sp, #0x68]
  04c7c	e2833088	 add         r3, r3, #0x88
  04c80	e5933000	 ldr         r3, [r3]
  04c84	e59d2068	 ldr         r2, [sp, #0x68]
  04c88	e2822098	 add         r2, r2, #0x98
  04c8c	e5922000	 ldr         r2, [r2]
  04c90	e59d1010	 ldr         r1, [sp, #0x10]
  04c94	e59f01b0	 ldr         r0, [pc, #0x1B0]
  04c98	eb000000	 bl          NKDbgPrintfW
  04c9c	e3a03001	 mov         r3, #1
  04ca0	e58d3050	 str         r3, [sp, #0x50]
  04ca4	ea000001	 b           |$LN22@CancelTran@2|
  04ca8		 |$LN21@CancelTran@2|
  04ca8	e3a03000	 mov         r3, #0
  04cac	e58d3050	 str         r3, [sp, #0x50]
  04cb0		 |$LN22@CancelTran@2|

; 1741 : 
; 1742 :         // Cancel complete
; 1743 :         m_fIsCancelPending = FALSE;

  04cb0	e59d3068	 ldr         r3, [sp, #0x68]
  04cb4	e2832058	 add         r2, r3, #0x58
  04cb8	e3a03000	 mov         r3, #0
  04cbc	e5823000	 str         r3, [r2]

; 1744 : 
; 1745 :         // Let the client know we are canceling this transfer
; 1746 :         if (m_pCallback)

  04cc0	e59d3068	 ldr         r3, [sp, #0x68]
  04cc4	e2833040	 add         r3, r3, #0x40
  04cc8	e5933000	 ldr         r3, [r3]
  04ccc	e3530000	 cmp         r3, #0
  04cd0	0a000018	 beq         |$LN1@CancelTran@2|

; 1747 :         {
; 1748 :             m_pCallback(
; 1749 :                 this,
; 1750 :                 m_nCancelStatus,
; 1751 :                 m_nTransferLength,
; 1752 :                 m_nTransferComplete,
; 1753 :                 0,
; 1754 :                 m_pTransferCookie1,
; 1755 :                 m_pTransferCookie2);

  04cd4	e59d3068	 ldr         r3, [sp, #0x68]
  04cd8	e2833094	 add         r3, r3, #0x94
  04cdc	e5933000	 ldr         r3, [r3]
  04ce0	e58d3008	 str         r3, [sp, #8]
  04ce4	e59d3068	 ldr         r3, [sp, #0x68]
  04ce8	e2833090	 add         r3, r3, #0x90
  04cec	e5933000	 ldr         r3, [r3]
  04cf0	e58d3004	 str         r3, [sp, #4]
  04cf4	e3a03000	 mov         r3, #0
  04cf8	e58d3000	 str         r3, [sp]
  04cfc	e59d3068	 ldr         r3, [sp, #0x68]
  04d00	e2833098	 add         r3, r3, #0x98
  04d04	e5933000	 ldr         r3, [r3]
  04d08	e59d2068	 ldr         r2, [sp, #0x68]
  04d0c	e2822088	 add         r2, r2, #0x88
  04d10	e5922000	 ldr         r2, [r2]
  04d14	e59d1068	 ldr         r1, [sp, #0x68]
  04d18	e281105c	 add         r1, r1, #0x5C
  04d1c	e5911000	 ldr         r1, [r1]
  04d20	e59d0068	 ldr         r0, [sp, #0x68]
  04d24	e59de068	 ldr         lr, [sp, #0x68]
  04d28	e28ee040	 add         lr, lr, #0x40
  04d2c	e59e4000	 ldr         r4, [lr]
  04d30	e1a0e00f	 mov         lr, pc
  04d34	e12fff14	 bx          r4
  04d38		 |$LN1@CancelTran@2|

; 1756 :         }
; 1757 : 
; 1758 :         // Cleanup
; 1759 :         m_pvTransferBuffer = NULL;

  04d38	e59d3068	 ldr         r3, [sp, #0x68]
  04d3c	e283206c	 add         r2, r3, #0x6C
  04d40	e3a03000	 mov         r3, #0
  04d44	e5823000	 str         r3, [r2]

; 1760 :         m_paTransferBuffer = 0;

  04d48	e59d3068	 ldr         r3, [sp, #0x68]
  04d4c	e2832070	 add         r2, r3, #0x70
  04d50	e3a03000	 mov         r3, #0
  04d54	e5823000	 str         r3, [r2]

; 1761 :         m_nTransferLength = 0;

  04d58	e59d3068	 ldr         r3, [sp, #0x68]
  04d5c	e2832088	 add         r2, r3, #0x88
  04d60	e3a03000	 mov         r3, #0
  04d64	e5823000	 str         r3, [r2]

; 1762 :         m_nTransferFrames = 0;

  04d68	e59d3068	 ldr         r3, [sp, #0x68]
  04d6c	e2832074	 add         r2, r3, #0x74
  04d70	e3a03000	 mov         r3, #0
  04d74	e5823000	 str         r3, [r2]

; 1763 :         m_nSegmentPending = 0;

  04d78	e59d3068	 ldr         r3, [sp, #0x68]
  04d7c	e28320a0	 add         r2, r3, #0xA0
  04d80	e3a03000	 mov         r3, #0
  04d84	e5823000	 str         r3, [r2]

; 1764 :         m_nSegmentFramesPending = 0;

  04d88	e59d3068	 ldr         r3, [sp, #0x68]
  04d8c	e28320a4	 add         r2, r3, #0xA4
  04d90	e3a03000	 mov         r3, #0
  04d94	e5823000	 str         r3, [r2]

; 1765 :         m_nCancelStatus = USB_CANCELED_ERROR;

  04d98	e59d3068	 ldr         r3, [sp, #0x68]
  04d9c	e283205c	 add         r2, r3, #0x5C
  04da0	e3a03c01	 mov         r3, #1, 24
  04da4	e3833001	 orr         r3, r3, #1
  04da8	e5823000	 str         r3, [r2]

; 1766 : 
; 1767 :         // Done
; 1768 :         fResult = TRUE;

  04dac	e3a03001	 mov         r3, #1
  04db0	e58d300c	 str         r3, [sp, #0xC]
  04db4		 |$LN10@CancelTran@2|

; 1769 :     }
; 1770 : 
; 1771 :     // Go unsafe
; 1772 :     ChUnlock();

  04db4	e59d0068	 ldr         r0, [sp, #0x68]
  04db8	eb000000	 bl          |?ChUnlock@CCppiDmaChannel@@IAAXXZ|

; 1773 : 
; 1774 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 1775 :         (L"-CCppiDmaTxChannel::CancelTransfer: %s Ch %u (EP %u) - %s\r\n",
; 1776 :         szDir,
; 1777 :         m_chNum,
; 1778 :         m_epNum,
; 1779 :         m_fIsTeardownPending ?
; 1780 :             L"FAILED!" :
; 1781 :             L"SUCCEEDED"));

  04dbc	ea000017	 b           |$LN25@CancelTran@2|
  04dc0	e59d3068	 ldr         r3, [sp, #0x68]
  04dc4	e2833038	 add         r3, r3, #0x38
  04dc8	e5933000	 ldr         r3, [r3]
  04dcc	e3530000	 cmp         r3, #0
  04dd0	0a000002	 beq         |$LN23@CancelTran@2|
  04dd4	e59f306c	 ldr         r3, [pc, #0x6C]
  04dd8	e58d3054	 str         r3, [sp, #0x54]
  04ddc	ea000001	 b           |$LN24@CancelTran@2|
  04de0		 |$LN23@CancelTran@2|
  04de0	e59f305c	 ldr         r3, [pc, #0x5C]
  04de4	e58d3054	 str         r3, [sp, #0x54]
  04de8		 |$LN24@CancelTran@2|
  04de8	e59d3054	 ldr         r3, [sp, #0x54]
  04dec	e58d3000	 str         r3, [sp]
  04df0	e59d3068	 ldr         r3, [sp, #0x68]
  04df4	e283303d	 add         r3, r3, #0x3D
  04df8	e5d33000	 ldrb        r3, [r3]
  04dfc	e59d2068	 ldr         r2, [sp, #0x68]
  04e00	e282203c	 add         r2, r2, #0x3C
  04e04	e5d22000	 ldrb        r2, [r2]
  04e08	e59d1010	 ldr         r1, [sp, #0x10]
  04e0c	e59f002c	 ldr         r0, [pc, #0x2C]
  04e10	eb000000	 bl          NKDbgPrintfW
  04e14	e3a03001	 mov         r3, #1
  04e18	e58d3058	 str         r3, [sp, #0x58]
  04e1c	ea000001	 b           |$LN26@CancelTran@2|
  04e20		 |$LN25@CancelTran@2|
  04e20	e3a03000	 mov         r3, #0
  04e24	e58d3058	 str         r3, [sp, #0x58]
  04e28		 |$LN26@CancelTran@2|

; 1782 : 
; 1783 :     return fResult;

  04e28	e59d300c	 ldr         r3, [sp, #0xC]
  04e2c	e58d302c	 str         r3, [sp, #0x2C]

; 1784 : }

  04e30	e59d002c	 ldr         r0, [sp, #0x2C]
  04e34	e28dd05c	 add         sp, sp, #0x5C
  04e38	e89d6010	 ldmia       sp, {r4, sp, lr}
  04e3c	e12fff1e	 bx          lr
  04e40		 |$LN30@CancelTran@2|
  04e40		 |$LN31@CancelTran@2|
  04e40	00000000	 DCD         |??_C@_1HI@KPIHGOEO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  04e44		 |$LN32@CancelTran@2|
  04e44	00000000	 DCD         |??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@|
  04e48		 |$LN33@CancelTran@2|
  04e48	00000000	 DCD         |??_C@_1BA@HGGLBLNE@?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$CB?$AA?$AA@|
  04e4c		 |$LN34@CancelTran@2|
  04e4c	00000000	 DCD         |??_C@_1HG@FHEFGGCK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  04e50		 |$LN35@CancelTran@2|
  04e50	00000000	 DCD         |??_C@_1KE@ICNKILPO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  04e54		 |$LN36@CancelTran@2|
  04e54	00000000	 DCD         |??_C@_1LO@MEBENBLP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  04e58		 |$LN37@CancelTran@2|
  04e58	00000000	 DCD         |??_C@_1GO@OPNDFFBD@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  04e5c		 |$LN38@CancelTran@2|
  04e5c	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  04e60		 |$LN39@CancelTran@2|
  04e60	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  04e64		 |$M40988|

			 ENDP  ; |?CancelTransfer@CCppiDmaTxChannel@@UAAHXZ|, CCppiDmaTxChannel::CancelTransfer

	EXPORT	|??_C@_1EO@IEJLKBMJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LO@PFNMHGPK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@NCHOBFMM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'

  000a0			 AREA	 |.pdata|, PDATA
|$T41018| DCD	|$LN23@ScheduleTr@2|
	DCD	0x4000a204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@IEJLKBMJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "S", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@PFNMHGPK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "S", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, ",", 0x0, " "
	DCB	0x0, "p", 0x0, "v", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@NCHOBFMM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "S", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  04e64			 AREA	 |.text|, CODE, ARM

  04e64		 |?ScheduleTransfer@CCppiDmaTxChannel@@QAAHXZ| PROC ; CCppiDmaTxChannel::ScheduleTransfer

; 1788 : {

  04e64		 |$LN23@ScheduleTr@2|
  04e64	e1a0c00d	 mov         r12, sp
  04e68	e92d0001	 stmdb       sp!, {r0}
  04e6c	e92d5000	 stmdb       sp!, {r12, lr}
  04e70	e24dd024	 sub         sp, sp, #0x24
  04e74		 |$M41015|

; 1789 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 1790 :         (L"+CCppiDmaTxChannel::ScheduleTransfer: %s Ch %u (EP %u)\r\n",
; 1791 :         IsOut() ? L"OUT" : L"IN",
; 1792 :         m_chNum,
; 1793 :         m_epNum));

  04e74	ea000016	 b           |$LN11@ScheduleTr@2|
  04e78	e59d002c	 ldr         r0, [sp, #0x2C]
  04e7c	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  04e80	e58d0008	 str         r0, [sp, #8]
  04e84	e59d3008	 ldr         r3, [sp, #8]
  04e88	e3530000	 cmp         r3, #0
  04e8c	0a000002	 beq         |$LN9@ScheduleTr@2|
  04e90	e59f3250	 ldr         r3, [pc, #0x250]
  04e94	e58d300c	 str         r3, [sp, #0xC]
  04e98	ea000001	 b           |$LN10@ScheduleTr@2|
  04e9c		 |$LN9@ScheduleTr@2|
  04e9c	e59f3240	 ldr         r3, [pc, #0x240]
  04ea0	e58d300c	 str         r3, [sp, #0xC]
  04ea4		 |$LN10@ScheduleTr@2|
  04ea4	e59d302c	 ldr         r3, [sp, #0x2C]
  04ea8	e283303d	 add         r3, r3, #0x3D
  04eac	e5d33000	 ldrb        r3, [r3]
  04eb0	e59d202c	 ldr         r2, [sp, #0x2C]
  04eb4	e282203c	 add         r2, r2, #0x3C
  04eb8	e5d22000	 ldrb        r2, [r2]
  04ebc	e59d100c	 ldr         r1, [sp, #0xC]
  04ec0	e59f0218	 ldr         r0, [pc, #0x218]
  04ec4	eb000000	 bl          NKDbgPrintfW
  04ec8	e3a03001	 mov         r3, #1
  04ecc	e58d3010	 str         r3, [sp, #0x10]
  04ed0	ea000001	 b           |$LN12@ScheduleTr@2|
  04ed4		 |$LN11@ScheduleTr@2|
  04ed4	e3a03000	 mov         r3, #0
  04ed8	e58d3010	 str         r3, [sp, #0x10]
  04edc		 |$LN12@ScheduleTr@2|

; 1794 : 
; 1795 :     if (m_nTransferLength)

  04edc	e59d302c	 ldr         r3, [sp, #0x2C]
  04ee0	e2833088	 add         r3, r3, #0x88
  04ee4	e5933000	 ldr         r3, [r3]
  04ee8	e3530000	 cmp         r3, #0
  04eec	0a00001c	 beq         |$LN6@ScheduleTr@2|

; 1796 :     {
; 1797 :         if (!m_pvTransferBuffer && !m_paTransferBuffer)

  04ef0	e59d302c	 ldr         r3, [sp, #0x2C]
  04ef4	e283306c	 add         r3, r3, #0x6C
  04ef8	e5933000	 ldr         r3, [r3]
  04efc	e3530000	 cmp         r3, #0
  04f00	1a000017	 bne         |$LN5@ScheduleTr@2|
  04f04	e59d302c	 ldr         r3, [sp, #0x2C]
  04f08	e2833070	 add         r3, r3, #0x70
  04f0c	e5933000	 ldr         r3, [r3]
  04f10	e3530000	 cmp         r3, #0
  04f14	1a000012	 bne         |$LN5@ScheduleTr@2|

; 1798 :         {
; 1799 :             RETAILMSG(CPPI_DBG_ERROR,
; 1800 :                 (L" CCppiDmaTxChannel::ScheduleTransfer: ERROR - Invalid state, pv 0x%08x, pa 0x%08x, length %u\r\n",
; 1801 :                 m_pvTransferBuffer,
; 1802 :                 m_paTransferBuffer,
; 1803 :                 m_nTransferLength));

  04f18	e59d302c	 ldr         r3, [sp, #0x2C]
  04f1c	e2833088	 add         r3, r3, #0x88
  04f20	e5933000	 ldr         r3, [r3]
  04f24	e59d202c	 ldr         r2, [sp, #0x2C]
  04f28	e2822070	 add         r2, r2, #0x70
  04f2c	e5922000	 ldr         r2, [r2]
  04f30	e59d102c	 ldr         r1, [sp, #0x2C]
  04f34	e281106c	 add         r1, r1, #0x6C
  04f38	e5911000	 ldr         r1, [r1]
  04f3c	e59f0198	 ldr         r0, [pc, #0x198]
  04f40	eb000000	 bl          NKDbgPrintfW
  04f44	e3a03001	 mov         r3, #1
  04f48	e58d3014	 str         r3, [sp, #0x14]
  04f4c	ea000001	 b           |$LN14@ScheduleTr@2|
  04f50	e3a03000	 mov         r3, #0
  04f54	e58d3014	 str         r3, [sp, #0x14]
  04f58		 |$LN14@ScheduleTr@2|

; 1804 : 
; 1805 :             return FALSE;

  04f58	e3a03000	 mov         r3, #0
  04f5c	e58d3004	 str         r3, [sp, #4]
  04f60	ea000055	 b           |$LN7@ScheduleTr@2|
  04f64		 |$LN5@ScheduleTr@2|
  04f64		 |$LN6@ScheduleTr@2|

; 1806 :         }
; 1807 :     }
; 1808 : 
; 1809 :     DEBUGCHK(m_nSegmentPending == 0);

  04f64	e59d302c	 ldr         r3, [sp, #0x2C]
  04f68	e28330a0	 add         r3, r3, #0xA0
  04f6c	e5933000	 ldr         r3, [r3]
  04f70	e3530000	 cmp         r3, #0
  04f74	1a000002	 bne         |$LN15@ScheduleTr@2|
  04f78	e3a03001	 mov         r3, #1
  04f7c	e58d3018	 str         r3, [sp, #0x18]
  04f80	ea000008	 b           |$LN16@ScheduleTr@2|
  04f84		 |$LN15@ScheduleTr@2|
  04f84	e3a03c07	 mov         r3, #7, 24
  04f88	e3833011	 orr         r3, r3, #0x11
  04f8c	e59f2144	 ldr         r2, [pc, #0x144]
  04f90	e59f113c	 ldr         r1, [pc, #0x13C]
  04f94	e59f0134	 ldr         r0, [pc, #0x134]
  04f98	eb000000	 bl          NKDbgPrintfW
  04f9c	e6000010	 __debugbreak_ce
  04fa0	e3a03000	 mov         r3, #0
  04fa4	e58d3018	 str         r3, [sp, #0x18]
  04fa8		 |$LN16@ScheduleTr@2|

; 1810 :     DEBUGCHK(m_nSegmentFramesPending == 0);

  04fa8	e59d302c	 ldr         r3, [sp, #0x2C]
  04fac	e28330a4	 add         r3, r3, #0xA4
  04fb0	e5933000	 ldr         r3, [r3]
  04fb4	e3530000	 cmp         r3, #0
  04fb8	1a000002	 bne         |$LN17@ScheduleTr@2|
  04fbc	e3a03001	 mov         r3, #1
  04fc0	e58d301c	 str         r3, [sp, #0x1C]
  04fc4	ea000008	 b           |$LN18@ScheduleTr@2|
  04fc8		 |$LN17@ScheduleTr@2|
  04fc8	e3a03c07	 mov         r3, #7, 24
  04fcc	e3833012	 orr         r3, r3, #0x12
  04fd0	e59f2100	 ldr         r2, [pc, #0x100]
  04fd4	e59f10f8	 ldr         r1, [pc, #0xF8]
  04fd8	e59f00f0	 ldr         r0, [pc, #0xF0]
  04fdc	eb000000	 bl          NKDbgPrintfW
  04fe0	e6000010	 __debugbreak_ce
  04fe4	e3a03000	 mov         r3, #0
  04fe8	e58d301c	 str         r3, [sp, #0x1C]
  04fec		 |$LN18@ScheduleTr@2|

; 1811 : 
; 1812 :     // A channel that has been torn down must be re-enabled before re-use
; 1813 :     if ((m_pCppiChannelRegs->TXGCR & BIT31) == 0)

  04fec	e59d302c	 ldr         r3, [sp, #0x2C]
  04ff0	e283301c	 add         r3, r3, #0x1C
  04ff4	e5933000	 ldr         r3, [r3]
  04ff8	e5933000	 ldr         r3, [r3]
  04ffc	e3130102	 tst         r3, #2, 2
  05000	1a000004	 bne         |$LN4@ScheduleTr@2|

; 1814 :         m_pCppiChannelRegs->TXGCR =
; 1815 :             BIT31 | /* Enable */ /*
; 1816 :             qmgr |
; 1817 :             qnum? */ USB_CPPI_TXCMPL_QNUM_HOST;

  05004	e59d302c	 ldr         r3, [sp, #0x2C]
  05008	e283301c	 add         r3, r3, #0x1C
  0500c	e5932000	 ldr         r2, [r3]
  05010	e3a031fe	 mov         r3, #0xFE, 2
  05014	e5823000	 str         r3, [r2]
  05018		 |$LN4@ScheduleTr@2|

; 1818 : 
; 1819 :     // Enable DMA mode
; 1820 :     UINT16 nCsr = MGC_M_TXCSR_MODE | MGC_M_TXCSR_DMAENAB;

  05018	e3a03a03	 mov         r3, #3, 20
  0501c	e1cd30b0	 strh        r3, [sp]

; 1821 : 
; 1822 :     if (m_nTransferComplete == 0)

  05020	e59d302c	 ldr         r3, [sp, #0x2C]
  05024	e2833098	 add         r3, r3, #0x98
  05028	e5933000	 ldr         r3, [r3]
  0502c	e3530000	 cmp         r3, #0
  05030	1a00000f	 bne         |$LN3@ScheduleTr@2|

; 1823 :     {
; 1824 :         if (m_nTransferOptions & USB_TOGGLE_CARRY)

  05034	e59d302c	 ldr         r3, [sp, #0x2C]
  05038	e283308c	 add         r3, r3, #0x8C
  0503c	e5933000	 ldr         r3, [r3]
  05040	e3130102	 tst         r3, #2, 2
  05044	0a000005	 beq         |$LN2@ScheduleTr@2|

; 1825 :             nCsr |= (MGC_M_TXCSR_H_WR_DATATOGGLE | MGC_M_TXCSR_H_DATATOGGLE);

  05048	e1dd30b0	 ldrh        r3, [sp]
  0504c	e3833c03	 orr         r3, r3, #3, 24
  05050	e1a03803	 mov         r3, r3, lsl #16
  05054	e1a03823	 mov         r3, r3, lsr #16
  05058	e1cd30b0	 strh        r3, [sp]

; 1826 :         else

  0505c	ea000004	 b           |$LN1@ScheduleTr@2|
  05060		 |$LN2@ScheduleTr@2|

; 1827 :             nCsr |= MGC_M_TXCSR_CLRDATATOG;

  05060	e1dd30b0	 ldrh        r3, [sp]
  05064	e3833040	 orr         r3, r3, #0x40
  05068	e1a03803	 mov         r3, r3, lsl #16
  0506c	e1a03823	 mov         r3, r3, lsr #16
  05070	e1cd30b0	 strh        r3, [sp]
  05074		 |$LN1@ScheduleTr@2|
  05074		 |$LN3@ScheduleTr@2|

; 1828 :     }
; 1829 : 
; 1830 :     m_pUsbEpcsrRegs->TXCSR = nCsr;

  05074	e59d302c	 ldr         r3, [sp, #0x2C]
  05078	e2833014	 add         r3, r3, #0x14
  0507c	e5933000	 ldr         r3, [r3]
  05080	e2832002	 add         r2, r3, #2
  05084	e1dd30b0	 ldrh        r3, [sp]
  05088	e1c230b0	 strh        r3, [r2]

; 1831 : 
; 1832 :     // Create HDs for next segment
; 1833 :     NextSegment();

  0508c	e59d002c	 ldr         r0, [sp, #0x2C]
  05090	eb000000	 bl          |?NextSegment@CCppiDmaChannel@@IAAXXZ|

; 1834 : 
; 1835 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 1836 :         (L"-CCppiDmaTxChannel::ScheduleTransfer\r\n"));

  05094	ea000004	 b           |$LN19@ScheduleTr@2|
  05098	e59f002c	 ldr         r0, [pc, #0x2C]
  0509c	eb000000	 bl          NKDbgPrintfW
  050a0	e3a03001	 mov         r3, #1
  050a4	e58d3020	 str         r3, [sp, #0x20]
  050a8	ea000001	 b           |$LN20@ScheduleTr@2|
  050ac		 |$LN19@ScheduleTr@2|
  050ac	e3a03000	 mov         r3, #0
  050b0	e58d3020	 str         r3, [sp, #0x20]
  050b4		 |$LN20@ScheduleTr@2|

; 1837 : 
; 1838 :     return TRUE;

  050b4	e3a03001	 mov         r3, #1
  050b8	e58d3004	 str         r3, [sp, #4]
  050bc		 |$LN7@ScheduleTr@2|

; 1839 : }

  050bc	e59d0004	 ldr         r0, [sp, #4]
  050c0	e28dd024	 add         sp, sp, #0x24
  050c4	e89d6000	 ldmia       sp, {sp, lr}
  050c8	e12fff1e	 bx          lr
  050cc		 |$LN24@ScheduleTr@2|
  050cc		 |$LN25@ScheduleTr@2|
  050cc	00000000	 DCD         |??_C@_1EO@IEJLKBMJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@|
  050d0		 |$LN26@ScheduleTr@2|
  050d0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  050d4		 |$LN27@ScheduleTr@2|
  050d4	00000000	 DCD         |dpCurSettings|
  050d8		 |$LN28@ScheduleTr@2|
  050d8	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  050dc		 |$LN29@ScheduleTr@2|
  050dc	00000000	 DCD         |??_C@_1LO@PFNMHGPK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@|
  050e0		 |$LN30@ScheduleTr@2|
  050e0	00000000	 DCD         |??_C@_1HC@NCHOBFMM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn@|
  050e4		 |$LN31@ScheduleTr@2|
  050e4	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  050e8		 |$LN32@ScheduleTr@2|
  050e8	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  050ec		 |$M41016|

			 ENDP  ; |?ScheduleTransfer@CCppiDmaTxChannel@@QAAHXZ|, CCppiDmaTxChannel::ScheduleTransfer

	EXPORT	|??_C@_1LI@PHLEACDP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@IJDGOKOJ@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AA?5@| [ DATA ] ; `string'

  000a8			 AREA	 |.pdata|, PDATA
|$T41037| DCD	|$LN15@ValidateTr@2|
	DCD	0x40005d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@PHLEACDP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAT?$AAr?$AAa?$AAn@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I", 0x0, "N"
	DCB	0x0, "G", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, " ", 0x0, "M", 0x0, "O", 0x0, "D", 0x0, "E", 0x0, "/"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, ",", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "R", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@IJDGOKOJ@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AA?5@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O"
	DCB	0x0, "R", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "R", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  050ec			 AREA	 |.text|, CODE, ARM

  050ec		 |?ValidateTransferState@CCppiDmaTxChannel@@UAAHXZ| PROC ; CCppiDmaTxChannel::ValidateTransferState

; 1843 : {

  050ec		 |$LN15@ValidateTr@2|
  050ec	e1a0c00d	 mov         r12, sp
  050f0	e92d0001	 stmdb       sp!, {r0}
  050f4	e92d5000	 stmdb       sp!, {r12, lr}
  050f8	e24dd018	 sub         sp, sp, #0x18
  050fc		 |$M41034|

; 1844 :     BOOL fStateOK = TRUE;

  050fc	e3a03001	 mov         r3, #1
  05100	e58d3000	 str         r3, [sp]

; 1845 : 
; 1846 :     if (IsInUse())

  05104	e59d0020	 ldr         r0, [sp, #0x20]
  05108	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  0510c	e58d000c	 str         r0, [sp, #0xC]
  05110	e59d300c	 ldr         r3, [sp, #0xC]
  05114	e3530000	 cmp         r3, #0
  05118	0a000048	 beq         |$LN6@ValidateTr@2|

; 1847 :     {
; 1848 :         // Check for errors
; 1849 :         UINT16 nCsr = m_pUsbEpcsrRegs->TXCSR;

  0511c	e59d3020	 ldr         r3, [sp, #0x20]
  05120	e2833014	 add         r3, r3, #0x14
  05124	e5933000	 ldr         r3, [r3]
  05128	e2833002	 add         r3, r3, #2
  0512c	e1d330b0	 ldrh        r3, [r3]
  05130	e1cd30b4	 strh        r3, [sp, #4]

; 1850 :         if (nCsr & (MGC_M_TXCSR_H_NAKTIMEOUT | MGC_M_TXCSR_H_RXSTALL | MGC_M_TXCSR_H_ERROR))

  05134	e1dd30b4	 ldrh        r3, [sp, #4]
  05138	e31300a4	 tst         r3, #0xA4
  0513c	0a000027	 beq         |$LN5@ValidateTr@2|

; 1851 :         {
; 1852 :             DEBUGMSG(CPPI_DBG_ERROR,
; 1853 :                 (L" CCppiDmaTxChannel:: ERROR - Ch %u, EP %u, CSR 0x%08x\r\n",
; 1854 :                 m_chNum,
; 1855 :                 m_epNum,
; 1856 :                 nCsr));

  05140	e1dd30b4	 ldrh        r3, [sp, #4]
  05144	e59d2020	 ldr         r2, [sp, #0x20]
  05148	e282203d	 add         r2, r2, #0x3D
  0514c	e5d22000	 ldrb        r2, [r2]
  05150	e59d1020	 ldr         r1, [sp, #0x20]
  05154	e281103c	 add         r1, r1, #0x3C
  05158	e5d11000	 ldrb        r1, [r1]
  0515c	e59f00f8	 ldr         r0, [pc, #0xF8]
  05160	eb000000	 bl          NKDbgPrintfW
  05164	e3a03001	 mov         r3, #1
  05168	e58d3010	 str         r3, [sp, #0x10]
  0516c	ea000001	 b           |$LN10@ValidateTr@2|
  05170	e3a03000	 mov         r3, #0
  05174	e58d3010	 str         r3, [sp, #0x10]
  05178		 |$LN10@ValidateTr@2|

; 1857 : 
; 1858 :             // Flush FIFO and leave status bits set
; 1859 :             m_pUsbEpcsrRegs->TXCSR =
; 1860 :                 MGC_M_TXCSR_MODE |
; 1861 :                 MGC_M_TXCSR_DMAENAB |
; 1862 :                 MGC_M_TXCSR_FLUSHFIFO |
; 1863 :                 MGC_M_TXCSR_H_NAKTIMEOUT |
; 1864 :                 MGC_M_TXCSR_H_RXSTALL |
; 1865 :                 MGC_M_TXCSR_H_ERROR |
; 1866 :                 MGC_M_TXCSR_FIFONOTEMPTY;

  05178	e59d3020	 ldr         r3, [sp, #0x20]
  0517c	e2833014	 add         r3, r3, #0x14
  05180	e5933000	 ldr         r3, [r3]
  05184	e2832002	 add         r2, r3, #2
  05188	e3a03a03	 mov         r3, #3, 20
  0518c	e38330ae	 orr         r3, r3, #0xAE
  05190	e1c230b0	 strh        r3, [r2]

; 1867 : 
; 1868 :             if (nCsr & MGC_M_TXCSR_H_RXSTALL)

  05194	e1dd30b4	 ldrh        r3, [sp, #4]
  05198	e3130020	 tst         r3, #0x20
  0519c	0a000004	 beq         |$LN4@ValidateTr@2|

; 1869 :             {
; 1870 :                 m_nCancelStatus = USB_STALL_ERROR;

  051a0	e59d3020	 ldr         r3, [sp, #0x20]
  051a4	e283205c	 add         r2, r3, #0x5C
  051a8	e3a03004	 mov         r3, #4
  051ac	e5823000	 str         r3, [r2]

; 1871 :             }
; 1872 :             else

  051b0	ea000003	 b           |$LN3@ValidateTr@2|
  051b4		 |$LN4@ValidateTr@2|

; 1873 :             {
; 1874 :                 m_nCancelStatus = USB_DEVICE_NOT_RESPONDING_ERROR;

  051b4	e59d3020	 ldr         r3, [sp, #0x20]
  051b8	e283205c	 add         r2, r3, #0x5C
  051bc	e3a03005	 mov         r3, #5
  051c0	e5823000	 str         r3, [r2]
  051c4		 |$LN3@ValidateTr@2|

; 1875 :             }
; 1876 : 
; 1877 :             // Need to perform a cancel (teardown) to clear out all HDs.  This is picked up
; 1878 :             // from the processing thread in CCppiDmaController::ValidateTransferState().
; 1879 :             m_fIsCancelPending = TRUE;

  051c4	e59d3020	 ldr         r3, [sp, #0x20]
  051c8	e2832058	 add         r2, r3, #0x58
  051cc	e3a03001	 mov         r3, #1
  051d0	e5823000	 str         r3, [r2]

; 1880 :             fStateOK = FALSE;

  051d4	e3a03000	 mov         r3, #0
  051d8	e58d3000	 str         r3, [sp]
  051dc	ea000017	 b           |$LN2@ValidateTr@2|
  051e0		 |$LN5@ValidateTr@2|

; 1881 :         }
; 1882 :         else if ((nCsr & (MGC_M_TXCSR_MODE | MGC_M_TXCSR_DMAENAB)) != (MGC_M_TXCSR_MODE | MGC_M_TXCSR_DMAENAB))

  051e0	e1dd30b4	 ldrh        r3, [sp, #4]
  051e4	e2033a03	 and         r3, r3, #3, 20
  051e8	e3530a03	 cmp         r3, #3, 20
  051ec	0a000013	 beq         |$LN1@ValidateTr@2|

; 1883 :         {
; 1884 :             DEBUGMSG(ZONE_WARNING,
; 1885 :                 (L" CCppiDmaTxChannel::ValidateTransferState: WARNING - TX MODE/DMA reset, EP %u, CSR 0x%08x\r\n",
; 1886 :                 m_epNum, nCsr));

  051f0	e1dd30b4	 ldrh        r3, [sp, #4]
  051f4	e1a02003	 mov         r2, r3
  051f8	e59d3020	 ldr         r3, [sp, #0x20]
  051fc	e283303d	 add         r3, r3, #0x3D
  05200	e5d33000	 ldrb        r3, [r3]
  05204	e1a01003	 mov         r1, r3
  05208	e59f0048	 ldr         r0, [pc, #0x48]
  0520c	eb000000	 bl          NKDbgPrintfW
  05210	e3a03001	 mov         r3, #1
  05214	e58d3014	 str         r3, [sp, #0x14]
  05218	ea000001	 b           |$LN12@ValidateTr@2|
  0521c	e3a03000	 mov         r3, #0
  05220	e58d3014	 str         r3, [sp, #0x14]
  05224		 |$LN12@ValidateTr@2|

; 1887 :             m_pUsbEpcsrRegs->TXCSR =
; 1888 :                 MGC_M_TXCSR_MODE |
; 1889 :                 MGC_M_TXCSR_DMAENAB |
; 1890 :                 MGC_M_TXCSR_H_NAKTIMEOUT |
; 1891 :                 MGC_M_TXCSR_H_RXSTALL |
; 1892 :                 MGC_M_TXCSR_H_ERROR |
; 1893 :                 MGC_M_TXCSR_FIFONOTEMPTY;

  05224	e59d3020	 ldr         r3, [sp, #0x20]
  05228	e2833014	 add         r3, r3, #0x14
  0522c	e5933000	 ldr         r3, [r3]
  05230	e2832002	 add         r2, r3, #2
  05234	e3a03a03	 mov         r3, #3, 20
  05238	e38330a6	 orr         r3, r3, #0xA6
  0523c	e1c230b0	 strh        r3, [r2]
  05240		 |$LN1@ValidateTr@2|
  05240		 |$LN2@ValidateTr@2|
  05240		 |$LN6@ValidateTr@2|

; 1894 :         }
; 1895 :     }
; 1896 : 
; 1897 :     return fStateOK;

  05240	e59d3000	 ldr         r3, [sp]
  05244	e58d3008	 str         r3, [sp, #8]

; 1898 : }

  05248	e59d0008	 ldr         r0, [sp, #8]
  0524c	e28dd018	 add         sp, sp, #0x18
  05250	e89d6000	 ldmia       sp, {sp, lr}
  05254	e12fff1e	 bx          lr
  05258		 |$LN16@ValidateTr@2|
  05258		 |$LN17@ValidateTr@2|
  05258	00000000	 DCD         |??_C@_1LI@PHLEACDP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAT?$AAr?$AAa?$AAn@|
  0525c		 |$LN18@ValidateTr@2|
  0525c	00000000	 DCD         |??_C@_1HA@IJDGOKOJ@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AA?5@|
  05260		 |$M41035|

			 ENDP  ; |?ValidateTransferState@CCppiDmaTxChannel@@UAAHXZ|, CCppiDmaTxChannel::ValidateTransferState

	EXPORT	|??_C@_1FK@FDMLGJKE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|?KickDrainThread@CCppiDmaTxChannel@@QAAXXZ| ; CCppiDmaTxChannel::KickDrainThread
	EXPORT	|?OnTransferComplete@CCppiDmaTxChannel@@QAAXXZ| ; CCppiDmaTxChannel::OnTransferComplete
	EXPORT	|?IsFifoEmpty@CCppiDmaTxChannel@@QBAHXZ| ; CCppiDmaTxChannel::IsFifoEmpty
	EXPORT	|??_C@_1JG@CIGKMCKN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@KGKLFPFI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@IECNGEK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KK@OCHPGHIB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KG@KIFCDNLB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@GHMFLNFB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@DCFFLIEG@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@LJPLODGJ@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'

  000b0			 AREA	 |.pdata|, PDATA
|$T41076| DCD	|$LN55@ProcessCom@3|
	DCD	0x40018504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FDMLGJKE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@CIGKMCKN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, "/", 0x0, "%", 0x0, "u", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@KGKLFPFI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, "/", 0x0, "%", 0x0, "u", 0x0, ","
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, "/", 0x0, "%", 0x0, "u"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@IECNGEK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "("
	DCB	0x0, "o", 0x0, "f", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ")"
	DCB	0x0, ",", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KK@OCHPGHIB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I"
	DCB	0x0, "N", 0x0, "G", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D"
	DCB	0x0, "r", 0x0, "o", 0x0, "p", 0x0, "p", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@KIFCDNLB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I"
	DCB	0x0, "N", 0x0, "G", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D"
	DCB	0x0, "r", 0x0, "o", 0x0, "p", 0x0, "p", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "e"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@GHMFLNFB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I"
	DCB	0x0, "N", 0x0, "G", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "L"
	DCB	0x0, "i", 0x0, "n", 0x0, "k", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@DCFFLIEG@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@LJPLODGJ@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "(", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  05260			 AREA	 |.text|, CODE, ARM

  05260		 |?ProcessCompletedPacket@CCppiDmaTxChannel@@UAAXPAU_HOST_DESCRIPTOR@@@Z| PROC ; CCppiDmaTxChannel::ProcessCompletedPacket

; 1901 : {

  05260		 |$LN55@ProcessCom@3|
  05260	e1a0c00d	 mov         r12, sp
  05264	e92d0003	 stmdb       sp!, {r0, r1}
  05268	e92d5000	 stmdb       sp!, {r12, lr}
  0526c	e24dd064	 sub         sp, sp, #0x64
  05270		 |$M41073|

; 1902 :     BOOL fTransferComplete = FALSE;

  05270	e3a03000	 mov         r3, #0
  05274	e58d300c	 str         r3, [sp, #0xC]

; 1903 :     BOOL fSegmentComplete = FALSE;

  05278	e3a03000	 mov         r3, #0
  0527c	e58d3004	 str         r3, [sp, #4]

; 1904 :     UINT32 nTransferred;
; 1905 : 
; 1906 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 1907 :         (L"+CCppiDmaTxChannel::ProcessCompletedPacket: %s Ch %u (EP %u)\r\n",
; 1908 :         m_fIsOut ? L"OUT" : L"IN",
; 1909 :         m_chNum,
; 1910 :         m_epNum));

  05280	ea000015	 b           |$LN25@ProcessCom@3|
  05284	e59d306c	 ldr         r3, [sp, #0x6C]
  05288	e2833034	 add         r3, r3, #0x34
  0528c	e5933000	 ldr         r3, [r3]
  05290	e3530000	 cmp         r3, #0
  05294	0a000002	 beq         |$LN23@ProcessCom@3|
  05298	e59f35d0	 ldr         r3, [pc, #0x5D0]
  0529c	e58d3014	 str         r3, [sp, #0x14]
  052a0	ea000001	 b           |$LN24@ProcessCom@3|
  052a4		 |$LN23@ProcessCom@3|
  052a4	e59f35c0	 ldr         r3, [pc, #0x5C0]
  052a8	e58d3014	 str         r3, [sp, #0x14]
  052ac		 |$LN24@ProcessCom@3|
  052ac	e59d306c	 ldr         r3, [sp, #0x6C]
  052b0	e283303d	 add         r3, r3, #0x3D
  052b4	e5d33000	 ldrb        r3, [r3]
  052b8	e59d206c	 ldr         r2, [sp, #0x6C]
  052bc	e282203c	 add         r2, r2, #0x3C
  052c0	e5d22000	 ldrb        r2, [r2]
  052c4	e59d1014	 ldr         r1, [sp, #0x14]
  052c8	e59f0598	 ldr         r0, [pc, #0x598]
  052cc	eb000000	 bl          NKDbgPrintfW
  052d0	e3a03001	 mov         r3, #1
  052d4	e58d3018	 str         r3, [sp, #0x18]
  052d8	ea000001	 b           |$LN26@ProcessCom@3|
  052dc		 |$LN25@ProcessCom@3|
  052dc	e3a03000	 mov         r3, #0
  052e0	e58d3018	 str         r3, [sp, #0x18]
  052e4		 |$LN26@ProcessCom@3|

; 1911 : 
; 1912 :     if (pHd == NULL) {

  052e4	e59d3070	 ldr         r3, [sp, #0x70]
  052e8	e3530000	 cmp         r3, #0
  052ec	1a000007	 bne         |$LN20@ProcessCom@3|

; 1913 :         DEBUGMSG(ZONE_WARNING,
; 1914 :             (L"-CCppiDmaTxChannel::ProcessCompletedPacket: ERROR - NULL HD\r\n"));

  052f0	e59f056c	 ldr         r0, [pc, #0x56C]
  052f4	eb000000	 bl          NKDbgPrintfW
  052f8	e3a03001	 mov         r3, #1
  052fc	e58d301c	 str         r3, [sp, #0x1C]
  05300	ea000001	 b           |$LN28@ProcessCom@3|
  05304	e3a03000	 mov         r3, #0
  05308	e58d301c	 str         r3, [sp, #0x1C]
  0530c		 |$LN28@ProcessCom@3|

; 1915 :         return;

  0530c	ea000147	 b           |$LN21@ProcessCom@3|
  05310		 |$LN20@ProcessCom@3|

; 1916 :     }
; 1917 : 
; 1918 :     if (pHd->NextPtr != 0) {

  05310	e59d3070	 ldr         r3, [sp, #0x70]
  05314	e2833014	 add         r3, r3, #0x14
  05318	e5933000	 ldr         r3, [r3]
  0531c	e3530000	 cmp         r3, #0
  05320	0a000006	 beq         |$LN19@ProcessCom@3|

; 1919 :         DEBUGMSG(ZONE_WARNING,
; 1920 :             (L" CCppiDmaTxChannel::ProcessCompletedPacket: WARNING - Linked HD\r\n"));

  05324	e59f0534	 ldr         r0, [pc, #0x534]
  05328	eb000000	 bl          NKDbgPrintfW
  0532c	e3a03001	 mov         r3, #1
  05330	e58d3020	 str         r3, [sp, #0x20]
  05334	ea000001	 b           |$LN30@ProcessCom@3|
  05338	e3a03000	 mov         r3, #0
  0533c	e58d3020	 str         r3, [sp, #0x20]
  05340		 |$LN30@ProcessCom@3|
  05340		 |$LN19@ProcessCom@3|

; 1921 :     }
; 1922 : 
; 1923 :     if (m_fIsTeardownPending) {

  05340	e59d306c	 ldr         r3, [sp, #0x6C]
  05344	e2833038	 add         r3, r3, #0x38
  05348	e5933000	 ldr         r3, [r3]
  0534c	e3530000	 cmp         r3, #0
  05350	0a00000c	 beq         |$LN18@ProcessCom@3|

; 1924 :         DEBUGMSG(ZONE_WARNING,
; 1925 :             (L"-CCppiDmaTxChannel::ProcessCompletedPacket: WARNING - Dropped (pending teardown)\r\n"));

  05354	e59f0500	 ldr         r0, [pc, #0x500]
  05358	eb000000	 bl          NKDbgPrintfW
  0535c	e3a03001	 mov         r3, #1
  05360	e58d3024	 str         r3, [sp, #0x24]
  05364	ea000001	 b           |$LN32@ProcessCom@3|
  05368	e3a03000	 mov         r3, #0
  0536c	e58d3024	 str         r3, [sp, #0x24]
  05370		 |$LN32@ProcessCom@3|

; 1926 :         // Free the HD
; 1927 :         m_pController->HdFree(pHd);

  05370	e59d1070	 ldr         r1, [sp, #0x70]
  05374	e59d306c	 ldr         r3, [sp, #0x6C]
  05378	e283300c	 add         r3, r3, #0xC
  0537c	e5930000	 ldr         r0, [r3]
  05380	eb000000	 bl          |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z|

; 1928 :         return;

  05384	ea000129	 b           |$LN21@ProcessCom@3|
  05388		 |$LN18@ProcessCom@3|

; 1929 :     }
; 1930 : 
; 1931 :     ChLock();

  05388	e59d006c	 ldr         r0, [sp, #0x6C]
  0538c	eb000000	 bl          |?ChLock@CCppiDmaChannel@@IAAXXZ|

; 1932 : 
; 1933 :     if (!IsInUse()) {

  05390	e59d006c	 ldr         r0, [sp, #0x6C]
  05394	eb000000	 bl          |?IsInUse@CCppiDmaChannel@@IBAHXZ|
  05398	e58d0028	 str         r0, [sp, #0x28]
  0539c	e59d3028	 ldr         r3, [sp, #0x28]
  053a0	e3530000	 cmp         r3, #0
  053a4	1a000008	 bne         |$LN17@ProcessCom@3|

; 1934 :         DEBUGMSG(ZONE_WARNING,
; 1935 :             (L"-CCppiDmaTxChannel::ProcessCompletedPacket: WARNING - Dropped (transfer cancelled)\r\n"));

  053a8	e59f04a8	 ldr         r0, [pc, #0x4A8]
  053ac	eb000000	 bl          NKDbgPrintfW
  053b0	e3a03001	 mov         r3, #1
  053b4	e58d302c	 str         r3, [sp, #0x2C]
  053b8	ea000001	 b           |$LN34@ProcessCom@3|
  053bc	e3a03000	 mov         r3, #0
  053c0	e58d302c	 str         r3, [sp, #0x2C]
  053c4		 |$LN34@ProcessCom@3|

; 1936 :         goto _done;

  053c4	ea00010a	 b           |$LN16@ProcessCom@3|
  053c8	ea000109	 b           |$_done$39683|
  053cc		 |$LN17@ProcessCom@3|

; 1937 :     }
; 1938 : 
; 1939 :     if (!ValidateTransferState())

  053cc	e59d306c	 ldr         r3, [sp, #0x6C]
  053d0	e5933000	 ldr         r3, [r3]
  053d4	e283300c	 add         r3, r3, #0xC
  053d8	e59d006c	 ldr         r0, [sp, #0x6C]
  053dc	e5933000	 ldr         r3, [r3]
  053e0	e1a0e00f	 mov         lr, pc
  053e4	e12fff13	 bx          r3
  053e8	e58d0030	 str         r0, [sp, #0x30]
  053ec	e59d3030	 ldr         r3, [sp, #0x30]
  053f0	e3530000	 cmp         r3, #0
  053f4	1a000001	 bne         |$LN15@ProcessCom@3|
  053f8	ea0000fd	 b           |$LN14@ProcessCom@3|

; 1940 :         goto _done;

  053fc	ea0000fc	 b           |$_done$39683|
  05400		 |$LN15@ProcessCom@3|

; 1941 : 
; 1942 :     // Some extra debug validation
; 1943 :     if (m_nTransferLength)

  05400	e59d306c	 ldr         r3, [sp, #0x6C]
  05404	e2833088	 add         r3, r3, #0x88
  05408	e5933000	 ldr         r3, [r3]
  0540c	e3530000	 cmp         r3, #0
  05410	0a00004f	 beq         |$LN13@ProcessCom@3|

; 1944 :     {
; 1945 :         DEBUGCHK(m_pvTransferBuffer || m_paTransferBuffer);

  05414	e59d306c	 ldr         r3, [sp, #0x6C]
  05418	e283306c	 add         r3, r3, #0x6C
  0541c	e5933000	 ldr         r3, [r3]
  05420	e3530000	 cmp         r3, #0
  05424	1a00000e	 bne         |$LN35@ProcessCom@3|
  05428	e59d306c	 ldr         r3, [sp, #0x6C]
  0542c	e2833070	 add         r3, r3, #0x70
  05430	e5933000	 ldr         r3, [r3]
  05434	e3530000	 cmp         r3, #0
  05438	1a000009	 bne         |$LN35@ProcessCom@3|
  0543c	e3a03c07	 mov         r3, #7, 24
  05440	e3833099	 orr         r3, r3, #0x99
  05444	e59f2408	 ldr         r2, [pc, #0x408]
  05448	e59f1400	 ldr         r1, [pc, #0x400]
  0544c	e59f03f8	 ldr         r0, [pc, #0x3F8]
  05450	eb000000	 bl          NKDbgPrintfW
  05454	e6000010	 __debugbreak_ce
  05458	e3a03000	 mov         r3, #0
  0545c	e58d3034	 str         r3, [sp, #0x34]
  05460	ea000001	 b           |$LN36@ProcessCom@3|
  05464		 |$LN35@ProcessCom@3|
  05464	e3a03001	 mov         r3, #1
  05468	e58d3034	 str         r3, [sp, #0x34]
  0546c		 |$LN36@ProcessCom@3|

; 1946 :         DEBUGCHK(m_nSegmentPending > 0);

  0546c	e59d306c	 ldr         r3, [sp, #0x6C]
  05470	e28330a0	 add         r3, r3, #0xA0
  05474	e5933000	 ldr         r3, [r3]
  05478	e3530000	 cmp         r3, #0
  0547c	9a000002	 bls         |$LN37@ProcessCom@3|
  05480	e3a03001	 mov         r3, #1
  05484	e58d3038	 str         r3, [sp, #0x38]
  05488	ea000008	 b           |$LN38@ProcessCom@3|
  0548c		 |$LN37@ProcessCom@3|
  0548c	e3a03c07	 mov         r3, #7, 24
  05490	e383309a	 orr         r3, r3, #0x9A
  05494	e59f23b8	 ldr         r2, [pc, #0x3B8]
  05498	e59f13b0	 ldr         r1, [pc, #0x3B0]
  0549c	e59f03a8	 ldr         r0, [pc, #0x3A8]
  054a0	eb000000	 bl          NKDbgPrintfW
  054a4	e6000010	 __debugbreak_ce
  054a8	e3a03000	 mov         r3, #0
  054ac	e58d3038	 str         r3, [sp, #0x38]
  054b0		 |$LN38@ProcessCom@3|

; 1947 :         DEBUGCHK(m_nSegmentComplete < m_nSegmentPending);

  054b0	e59d306c	 ldr         r3, [sp, #0x6C]
  054b4	e28320ac	 add         r2, r3, #0xAC
  054b8	e59d306c	 ldr         r3, [sp, #0x6C]
  054bc	e28330a0	 add         r3, r3, #0xA0
  054c0	e5922000	 ldr         r2, [r2]
  054c4	e5933000	 ldr         r3, [r3]
  054c8	e1520003	 cmp         r2, r3
  054cc	2a000002	 bcs         |$LN39@ProcessCom@3|
  054d0	e3a03001	 mov         r3, #1
  054d4	e58d303c	 str         r3, [sp, #0x3C]
  054d8	ea000008	 b           |$LN40@ProcessCom@3|
  054dc		 |$LN39@ProcessCom@3|
  054dc	e3a03c07	 mov         r3, #7, 24
  054e0	e383309b	 orr         r3, r3, #0x9B
  054e4	e59f2368	 ldr         r2, [pc, #0x368]
  054e8	e59f1360	 ldr         r1, [pc, #0x360]
  054ec	e59f0358	 ldr         r0, [pc, #0x358]
  054f0	eb000000	 bl          NKDbgPrintfW
  054f4	e6000010	 __debugbreak_ce
  054f8	e3a03000	 mov         r3, #0
  054fc	e58d303c	 str         r3, [sp, #0x3C]
  05500		 |$LN40@ProcessCom@3|

; 1948 :         DEBUGCHK(m_nSegmentFramesComplete < m_nSegmentFramesPending);

  05500	e59d306c	 ldr         r3, [sp, #0x6C]
  05504	e28320a8	 add         r2, r3, #0xA8
  05508	e59d306c	 ldr         r3, [sp, #0x6C]
  0550c	e28330a4	 add         r3, r3, #0xA4
  05510	e5922000	 ldr         r2, [r2]
  05514	e5933000	 ldr         r3, [r3]
  05518	e1520003	 cmp         r2, r3
  0551c	2a000002	 bcs         |$LN41@ProcessCom@3|
  05520	e3a03001	 mov         r3, #1
  05524	e58d3040	 str         r3, [sp, #0x40]
  05528	ea000008	 b           |$LN42@ProcessCom@3|
  0552c		 |$LN41@ProcessCom@3|
  0552c	e3a03c07	 mov         r3, #7, 24
  05530	e383309c	 orr         r3, r3, #0x9C
  05534	e59f2318	 ldr         r2, [pc, #0x318]
  05538	e59f1310	 ldr         r1, [pc, #0x310]
  0553c	e59f0308	 ldr         r0, [pc, #0x308]
  05540	eb000000	 bl          NKDbgPrintfW
  05544	e6000010	 __debugbreak_ce
  05548	e3a03000	 mov         r3, #0
  0554c	e58d3040	 str         r3, [sp, #0x40]
  05550		 |$LN42@ProcessCom@3|

; 1949 :     }
; 1950 :     else

  05550	ea00000f	 b           |$LN12@ProcessCom@3|
  05554		 |$LN13@ProcessCom@3|

; 1951 :     {
; 1952 :         DEBUGCHK(m_nSegmentFramesPending == 1);

  05554	e59d306c	 ldr         r3, [sp, #0x6C]
  05558	e28330a4	 add         r3, r3, #0xA4
  0555c	e5933000	 ldr         r3, [r3]
  05560	e3530001	 cmp         r3, #1
  05564	1a000002	 bne         |$LN43@ProcessCom@3|
  05568	e3a03001	 mov         r3, #1
  0556c	e58d3044	 str         r3, [sp, #0x44]
  05570	ea000007	 b           |$LN44@ProcessCom@3|
  05574		 |$LN43@ProcessCom@3|
  05574	e3a03e7a	 mov         r3, #0x7A, 28
  05578	e59f22d4	 ldr         r2, [pc, #0x2D4]
  0557c	e59f12cc	 ldr         r1, [pc, #0x2CC]
  05580	e59f02c4	 ldr         r0, [pc, #0x2C4]
  05584	eb000000	 bl          NKDbgPrintfW
  05588	e6000010	 __debugbreak_ce
  0558c	e3a03000	 mov         r3, #0
  05590	e58d3044	 str         r3, [sp, #0x44]
  05594		 |$LN44@ProcessCom@3|
  05594		 |$LN12@ProcessCom@3|

; 1953 :     }
; 1954 : 
; 1955 :     m_nStatus = USB_NO_ERROR;

  05594	e59d306c	 ldr         r3, [sp, #0x6C]
  05598	e28320c4	 add         r2, r3, #0xC4
  0559c	e3a03000	 mov         r3, #0
  055a0	e5823000	 str         r3, [r2]

; 1956 : 
; 1957 :     // Count the frames in this packet (and their sizes)
; 1958 :     m_nSegmentFramesComplete++;

  055a4	e59d306c	 ldr         r3, [sp, #0x6C]
  055a8	e28330a8	 add         r3, r3, #0xA8
  055ac	e5933000	 ldr         r3, [r3]
  055b0	e2832001	 add         r2, r3, #1
  055b4	e59d306c	 ldr         r3, [sp, #0x6C]
  055b8	e28330a8	 add         r3, r3, #0xA8
  055bc	e5832000	 str         r2, [r3]

; 1959 :     nTransferred = pHd->BuffLen & USB_CPPI41_HD_BUF_LENGTH_MASK;

  055c0	e59d3070	 ldr         r3, [sp, #0x70]
  055c4	e283300c	 add         r3, r3, #0xC
  055c8	e5932000	 ldr         r2, [r3]
  055cc	e3e034ff	 mvn         r3, #0xFF, 8
  055d0	e2233503	 eor         r3, r3, #3, 10
  055d4	e0023003	 and         r3, r2, r3
  055d8	e58d3008	 str         r3, [sp, #8]

; 1960 :     m_nSegmentComplete += nTransferred;

  055dc	e59d306c	 ldr         r3, [sp, #0x6C]
  055e0	e28330ac	 add         r3, r3, #0xAC
  055e4	e5932000	 ldr         r2, [r3]
  055e8	e59d3008	 ldr         r3, [sp, #8]
  055ec	e0822003	 add         r2, r2, r3
  055f0	e59d306c	 ldr         r3, [sp, #0x6C]
  055f4	e28330ac	 add         r3, r3, #0xAC
  055f8	e5832000	 str         r2, [r3]

; 1961 : 
; 1962 :     DEBUGMSG(CPPI_DBG_TX,
; 1963 :              (L" CCppiDmaTxChannel::ProcessCompletedPacket: Packet %u (of %u), bytes %u\r\n",
; 1964 :               m_nSegmentFramesComplete,
; 1965 :               m_nSegmentFramesPending,
; 1966 :               nTransferred));

  055fc	ea00000b	 b           |$LN45@ProcessCom@3|
  05600	e59d3008	 ldr         r3, [sp, #8]
  05604	e59d206c	 ldr         r2, [sp, #0x6C]
  05608	e28220a4	 add         r2, r2, #0xA4
  0560c	e5922000	 ldr         r2, [r2]
  05610	e59d106c	 ldr         r1, [sp, #0x6C]
  05614	e28110a8	 add         r1, r1, #0xA8
  05618	e5911000	 ldr         r1, [r1]
  0561c	e59f0224	 ldr         r0, [pc, #0x224]
  05620	eb000000	 bl          NKDbgPrintfW
  05624	e3a03001	 mov         r3, #1
  05628	e58d3048	 str         r3, [sp, #0x48]
  0562c	ea000001	 b           |$LN46@ProcessCom@3|
  05630		 |$LN45@ProcessCom@3|
  05630	e3a03000	 mov         r3, #0
  05634	e58d3048	 str         r3, [sp, #0x48]
  05638		 |$LN46@ProcessCom@3|

; 1967 : 
; 1968 :     if (IsIso())

  05638	e59d006c	 ldr         r0, [sp, #0x6C]
  0563c	eb000000	 bl          |?IsIso@CCppiDmaChannel@@IBAHXZ|
  05640	e58d004c	 str         r0, [sp, #0x4C]
  05644	e59d304c	 ldr         r3, [sp, #0x4C]
  05648	e3530000	 cmp         r3, #0
  0564c	0a00000b	 beq         |$LN11@ProcessCom@3|

; 1969 :     {
; 1970 :         // Store the actual frame length for ISO
; 1971 :         m_pTransferFrameLengthsActual[m_nSegmentFramesComplete-1] = nTransferred;

  05650	e59d306c	 ldr         r3, [sp, #0x6C]
  05654	e283007c	 add         r0, r3, #0x7C
  05658	e59d306c	 ldr         r3, [sp, #0x6C]
  0565c	e28330a8	 add         r3, r3, #0xA8
  05660	e5933000	 ldr         r3, [r3]
  05664	e2431001	 sub         r1, r3, #1
  05668	e3a03004	 mov         r3, #4
  0566c	e0020391	 mul         r2, r1, r3
  05670	e5903000	 ldr         r3, [r0]
  05674	e0832002	 add         r2, r3, r2
  05678	e59d3008	 ldr         r3, [sp, #8]
  0567c	e5823000	 str         r3, [r2]
  05680		 |$LN11@ProcessCom@3|

; 1972 :     }
; 1973 : 
; 1974 :     // Check for segment complete
; 1975 :     if (IsRndisMode())

  05680	e59d006c	 ldr         r0, [sp, #0x6C]
  05684	eb000000	 bl          |?IsRndisMode@CCppiDmaChannel@@IBAHXZ|
  05688	e58d0050	 str         r0, [sp, #0x50]
  0568c	e59d3050	 ldr         r3, [sp, #0x50]
  05690	e3530000	 cmp         r3, #0
  05694	0a000002	 beq         |$LN10@ProcessCom@3|

; 1976 :     {
; 1977 :         // In Rndis mode, there is only one BD so segment has completed
; 1978 :         fSegmentComplete = TRUE;

  05698	e3a03001	 mov         r3, #1
  0569c	e58d3004	 str         r3, [sp, #4]

; 1979 :     }
; 1980 :     else // Transparent mode

  056a0	ea000009	 b           |$LN9@ProcessCom@3|
  056a4		 |$LN10@ProcessCom@3|

; 1981 :     {
; 1982 :         // Check to see if the segment is complete because
; 1983 :         // all the expected frames have been transferred
; 1984 :         if (m_nSegmentFramesComplete == m_nSegmentFramesPending)

  056a4	e59d306c	 ldr         r3, [sp, #0x6C]
  056a8	e28320a8	 add         r2, r3, #0xA8
  056ac	e59d306c	 ldr         r3, [sp, #0x6C]
  056b0	e28330a4	 add         r3, r3, #0xA4
  056b4	e5922000	 ldr         r2, [r2]
  056b8	e5933000	 ldr         r3, [r3]
  056bc	e1520003	 cmp         r2, r3
  056c0	1a000001	 bne         |$LN8@ProcessCom@3|

; 1985 :         {
; 1986 :             fSegmentComplete = TRUE;

  056c4	e3a03001	 mov         r3, #1
  056c8	e58d3004	 str         r3, [sp, #4]
  056cc		 |$LN8@ProcessCom@3|
  056cc		 |$LN9@ProcessCom@3|

; 1987 :         }
; 1988 :     }
; 1989 : 
; 1990 :     // Check for transfer complete
; 1991 :     if ((m_nTransferFramesComplete + m_nSegmentFramesComplete) == m_nTransferFrames)

  056cc	e59d306c	 ldr         r3, [sp, #0x6C]
  056d0	e283209c	 add         r2, r3, #0x9C
  056d4	e59d306c	 ldr         r3, [sp, #0x6C]
  056d8	e28330a8	 add         r3, r3, #0xA8
  056dc	e5922000	 ldr         r2, [r2]
  056e0	e5933000	 ldr         r3, [r3]
  056e4	e0822003	 add         r2, r2, r3
  056e8	e59d306c	 ldr         r3, [sp, #0x6C]
  056ec	e2833074	 add         r3, r3, #0x74
  056f0	e5933000	 ldr         r3, [r3]
  056f4	e1520003	 cmp         r2, r3
  056f8	1a000001	 bne         |$LN7@ProcessCom@3|

; 1992 :     {
; 1993 :         // Finished transfer
; 1994 :         fTransferComplete = TRUE;

  056fc	e3a03001	 mov         r3, #1
  05700	e58d300c	 str         r3, [sp, #0xC]
  05704		 |$LN7@ProcessCom@3|

; 1995 :     }
; 1996 : 
; 1997 :     DEBUGMSG(CPPI_DBG_TX,
; 1998 :         (L" CCppiDmaTxChannel::ProcessCompletedPacket: Sent %u/%u, %u/%u\r\n",
; 1999 :         m_nSegmentComplete,
; 2000 :         m_nSegmentPending,
; 2001 :         m_nTransferComplete,
; 2002 :         m_nTransferLength));

  05704	ea000011	 b           |$LN47@ProcessCom@3|
  05708	e59d306c	 ldr         r3, [sp, #0x6C]
  0570c	e2833088	 add         r3, r3, #0x88
  05710	e5933000	 ldr         r3, [r3]
  05714	e58d3000	 str         r3, [sp]
  05718	e59d306c	 ldr         r3, [sp, #0x6C]
  0571c	e2833098	 add         r3, r3, #0x98
  05720	e5933000	 ldr         r3, [r3]
  05724	e59d206c	 ldr         r2, [sp, #0x6C]
  05728	e28220a0	 add         r2, r2, #0xA0
  0572c	e5922000	 ldr         r2, [r2]
  05730	e59d106c	 ldr         r1, [sp, #0x6C]
  05734	e28110ac	 add         r1, r1, #0xAC
  05738	e5911000	 ldr         r1, [r1]
  0573c	e59f0100	 ldr         r0, [pc, #0x100]
  05740	eb000000	 bl          NKDbgPrintfW
  05744	e3a03001	 mov         r3, #1
  05748	e58d3054	 str         r3, [sp, #0x54]
  0574c	ea000001	 b           |$LN48@ProcessCom@3|
  05750		 |$LN47@ProcessCom@3|
  05750	e3a03000	 mov         r3, #0
  05754	e58d3054	 str         r3, [sp, #0x54]
  05758		 |$LN48@ProcessCom@3|

; 2003 : 
; 2004 :     if (fSegmentComplete)

  05758	e59d3004	 ldr         r3, [sp, #4]
  0575c	e3530000	 cmp         r3, #0
  05760	0a000023	 beq         |$LN6@ProcessCom@3|

; 2005 :     {
; 2006 :         // Update user buffer
; 2007 :         ReleaseSegment();

  05764	e59d006c	 ldr         r0, [sp, #0x6C]
  05768	eb000000	 bl          |?ReleaseSegment@CCppiDmaChannel@@IAAXXZ|

; 2008 : 
; 2009 :         if (fTransferComplete)

  0576c	e59d300c	 ldr         r3, [sp, #0xC]
  05770	e3530000	 cmp         r3, #0
  05774	0a00001c	 beq         |$LN5@ProcessCom@3|

; 2010 :         {
; 2011 :             DEBUGMSG(CPPI_DBG_TX,
; 2012 :                 (L" CCppiDmaTxChannel::ProcessCompletedPacket: Completed %u/%u, status 0x%x\r\n",
; 2013 :                 m_nTransferComplete,
; 2014 :                 m_nTransferLength,
; 2015 :                 m_nStatus));

  05778	ea00000d	 b           |$LN49@ProcessCom@3|
  0577c	e59d306c	 ldr         r3, [sp, #0x6C]
  05780	e28330c4	 add         r3, r3, #0xC4
  05784	e5933000	 ldr         r3, [r3]
  05788	e59d206c	 ldr         r2, [sp, #0x6C]
  0578c	e2822088	 add         r2, r2, #0x88
  05790	e5922000	 ldr         r2, [r2]
  05794	e59d106c	 ldr         r1, [sp, #0x6C]
  05798	e2811098	 add         r1, r1, #0x98
  0579c	e5911000	 ldr         r1, [r1]
  057a0	e59f0098	 ldr         r0, [pc, #0x98]
  057a4	eb000000	 bl          NKDbgPrintfW
  057a8	e3a03001	 mov         r3, #1
  057ac	e58d3058	 str         r3, [sp, #0x58]
  057b0	ea000001	 b           |$LN50@ProcessCom@3|
  057b4		 |$LN49@ProcessCom@3|
  057b4	e3a03000	 mov         r3, #0
  057b8	e58d3058	 str         r3, [sp, #0x58]
  057bc		 |$LN50@ProcessCom@3|

; 2016 : 
; 2017 :             if (IsFifoEmpty())

  057bc	e59d006c	 ldr         r0, [sp, #0x6C]
  057c0	eb000000	 bl          |?IsFifoEmpty@CCppiDmaTxChannel@@QBAHXZ|
  057c4	e58d005c	 str         r0, [sp, #0x5C]
  057c8	e59d305c	 ldr         r3, [sp, #0x5C]
  057cc	e3530000	 cmp         r3, #0
  057d0	0a000002	 beq         |$LN4@ProcessCom@3|

; 2018 :                 OnTransferComplete();

  057d4	e59d006c	 ldr         r0, [sp, #0x6C]
  057d8	eb000000	 bl          |?OnTransferComplete@CCppiDmaTxChannel@@QAAXXZ|

; 2019 :             else

  057dc	ea000001	 b           |$LN3@ProcessCom@3|
  057e0		 |$LN4@ProcessCom@3|

; 2020 :                 KickDrainThread();

  057e0	e59d006c	 ldr         r0, [sp, #0x6C]
  057e4	eb000000	 bl          |?KickDrainThread@CCppiDmaTxChannel@@QAAXXZ|
  057e8		 |$LN3@ProcessCom@3|

; 2021 :         }
; 2022 :         else

  057e8	ea000001	 b           |$LN2@ProcessCom@3|
  057ec		 |$LN5@ProcessCom@3|

; 2023 :         {
; 2024 :             // Schedule next transfer
; 2025 :             ScheduleTransfer();

  057ec	e59d006c	 ldr         r0, [sp, #0x6C]
  057f0	eb000000	 bl          |?ScheduleTransfer@CCppiDmaTxChannel@@QAAHXZ|
  057f4		 |$LN2@ProcessCom@3|
  057f4		 |$LN6@ProcessCom@3|
  057f4		 |$LN14@ProcessCom@3|
  057f4		 |$LN16@ProcessCom@3|
  057f4		 |$_done$39683|

; 2026 :         }
; 2027 :     }
; 2028 :     else
; 2029 :     {
; 2030 :         // Nothing to do for TX transfers - wait for next HD
; 2031 :     }
; 2032 : 
; 2033 : _done:
; 2034 :     // Free the HD
; 2035 :     m_pController->HdFree(pHd);

  057f4	e59d1070	 ldr         r1, [sp, #0x70]
  057f8	e59d306c	 ldr         r3, [sp, #0x6C]
  057fc	e283300c	 add         r3, r3, #0xC
  05800	e5930000	 ldr         r0, [r3]
  05804	eb000000	 bl          |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z|

; 2036 : 
; 2037 :     ChUnlock();

  05808	e59d006c	 ldr         r0, [sp, #0x6C]
  0580c	eb000000	 bl          |?ChUnlock@CCppiDmaChannel@@IAAXXZ|

; 2038 : 
; 2039 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 2040 :         (L"-CCppiDmaTxChannel::ProcessCompletedPacket\r\n"));

  05810	ea000004	 b           |$LN51@ProcessCom@3|
  05814	e59f0020	 ldr         r0, [pc, #0x20]
  05818	eb000000	 bl          NKDbgPrintfW
  0581c	e3a03001	 mov         r3, #1
  05820	e58d3060	 str         r3, [sp, #0x60]
  05824	ea000001	 b           |$LN52@ProcessCom@3|
  05828		 |$LN51@ProcessCom@3|
  05828	e3a03000	 mov         r3, #0
  0582c	e58d3060	 str         r3, [sp, #0x60]
  05830		 |$LN52@ProcessCom@3|
  05830		 |$LN21@ProcessCom@3|

; 2041 : }

  05830	e28dd064	 add         sp, sp, #0x64
  05834	e89d6000	 ldmia       sp, {sp, lr}
  05838	e12fff1e	 bx          lr
  0583c		 |$LN56@ProcessCom@3|
  0583c		 |$LN57@ProcessCom@3|
  0583c	00000000	 DCD         |??_C@_1FK@FDMLGJKE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  05840		 |$LN58@ProcessCom@3|
  05840	00000000	 DCD         |??_C@_1JG@CIGKMCKN@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  05844		 |$LN59@ProcessCom@3|
  05844	00000000	 DCD         |??_C@_1IA@KGKLFPFI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  05848		 |$LN60@ProcessCom@3|
  05848	00000000	 DCD         |??_C@_1JE@IECNGEK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  0584c		 |$LN61@ProcessCom@3|
  0584c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  05850		 |$LN62@ProcessCom@3|
  05850	00000000	 DCD         |dpCurSettings|
  05854		 |$LN63@ProcessCom@3|
  05854	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  05858		 |$LN64@ProcessCom@3|
  05858	00000000	 DCD         |??_C@_1KK@OCHPGHIB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  0585c		 |$LN65@ProcessCom@3|
  0585c	00000000	 DCD         |??_C@_1KG@KIFCDNLB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  05860		 |$LN66@ProcessCom@3|
  05860	00000000	 DCD         |??_C@_1IE@GHMFLNFB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  05864		 |$LN67@ProcessCom@3|
  05864	00000000	 DCD         |??_C@_1HM@DCFFLIEG@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  05868		 |$LN68@ProcessCom@3|
  05868	00000000	 DCD         |??_C@_1HO@LJPLODGJ@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp?$AAl@|
  0586c		 |$LN69@ProcessCom@3|
  0586c	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  05870		 |$LN70@ProcessCom@3|
  05870	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  05874		 |$M41074|

			 ENDP  ; |?ProcessCompletedPacket@CCppiDmaTxChannel@@UAAXPAU_HOST_DESCRIPTOR@@@Z|, CCppiDmaTxChannel::ProcessCompletedPacket

	EXPORT	|??_C@_1FC@PCKACIGE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAO?$AAn?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@DOPODOEF@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAO?$AAn?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo@| [ DATA ] ; `string'

  000b8			 AREA	 |.pdata|, PDATA
|$T41107| DCD	|$LN16@OnTransfer|
	DCD	0x40008904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@PCKACIGE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAO?$AAn?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "O", 0x0, "n", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@DOPODOEF@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAO?$AAn?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "O", 0x0, "n", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, "(", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  05874			 AREA	 |.text|, CODE, ARM

  05874		 |?OnTransferComplete@CCppiDmaTxChannel@@QAAXXZ| PROC ; CCppiDmaTxChannel::OnTransferComplete

; 2044 : {

  05874		 |$LN16@OnTransfer|
  05874	e1a0c00d	 mov         r12, sp
  05878	e92d0001	 stmdb       sp!, {r0}
  0587c	e92d5010	 stmdb       sp!, {r4, r12, lr}
  05880	e24dd038	 sub         sp, sp, #0x38
  05884		 |$M41104|

; 2045 :     UINT32 nCsr;
; 2046 : 
; 2047 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 2048 :         (L"+CCppiDmaTxChannel::OnTransferComplete: %s Ch %u (EP %u)\r\n",
; 2049 :         m_fIsOut ? L"OUT" : L"IN",
; 2050 :         m_chNum,
; 2051 :         m_epNum));

  05884	ea000015	 b           |$LN8@OnTransfer|
  05888	e59d3044	 ldr         r3, [sp, #0x44]
  0588c	e2833034	 add         r3, r3, #0x34
  05890	e5933000	 ldr         r3, [r3]
  05894	e3530000	 cmp         r3, #0
  05898	0a000002	 beq         |$LN6@OnTransfer|
  0589c	e59f31f0	 ldr         r3, [pc, #0x1F0]
  058a0	e58d3024	 str         r3, [sp, #0x24]
  058a4	ea000001	 b           |$LN7@OnTransfer|
  058a8		 |$LN6@OnTransfer|
  058a8	e59f31e0	 ldr         r3, [pc, #0x1E0]
  058ac	e58d3024	 str         r3, [sp, #0x24]
  058b0		 |$LN7@OnTransfer|
  058b0	e59d3044	 ldr         r3, [sp, #0x44]
  058b4	e283303d	 add         r3, r3, #0x3D
  058b8	e5d33000	 ldrb        r3, [r3]
  058bc	e59d2044	 ldr         r2, [sp, #0x44]
  058c0	e282203c	 add         r2, r2, #0x3C
  058c4	e5d22000	 ldrb        r2, [r2]
  058c8	e59d1024	 ldr         r1, [sp, #0x24]
  058cc	e59f01b8	 ldr         r0, [pc, #0x1B8]
  058d0	eb000000	 bl          NKDbgPrintfW
  058d4	e3a03001	 mov         r3, #1
  058d8	e58d3028	 str         r3, [sp, #0x28]
  058dc	ea000001	 b           |$LN9@OnTransfer|
  058e0		 |$LN8@OnTransfer|
  058e0	e3a03000	 mov         r3, #0
  058e4	e58d3028	 str         r3, [sp, #0x28]
  058e8		 |$LN9@OnTransfer|

; 2052 : 
; 2053 :     // Need to check for errors (e.g. stalls) AFTER packet written 
; 2054 :     // out to bus.  Transfer will be cancelled on error.
; 2055 :     if (!ValidateTransferState())

  058e8	e59d3044	 ldr         r3, [sp, #0x44]
  058ec	e5933000	 ldr         r3, [r3]
  058f0	e283300c	 add         r3, r3, #0xC
  058f4	e59d0044	 ldr         r0, [sp, #0x44]
  058f8	e5933000	 ldr         r3, [r3]
  058fc	e1a0e00f	 mov         lr, pc
  05900	e12fff13	 bx          r3
  05904	e58d002c	 str         r0, [sp, #0x2C]
  05908	e59d302c	 ldr         r3, [sp, #0x2C]
  0590c	e3530000	 cmp         r3, #0
  05910	1a000001	 bne         |$LN3@OnTransfer|
  05914	ea000050	 b           |$LN2@OnTransfer|

; 2056 :         goto _done;

  05918	ea00004f	 b           |$_done$39725|
  0591c		 |$LN3@OnTransfer|

; 2057 : 
; 2058 :     nCsr = m_pUsbEpcsrRegs->TXCSR;

  0591c	e59d3044	 ldr         r3, [sp, #0x44]
  05920	e2833014	 add         r3, r3, #0x14
  05924	e5933000	 ldr         r3, [r3]
  05928	e2833002	 add         r3, r3, #2
  0592c	e1d330b0	 ldrh        r3, [r3]
  05930	e58d3010	 str         r3, [sp, #0x10]

; 2059 : 
; 2060 :     // Ensure TX MODE and DMAENAB remain set (they are sometimes reset)
; 2061 :     m_pUsbRegs->TXCSR =
; 2062 :         MGC_M_TXCSR_MODE |
; 2063 :         MGC_M_TXCSR_DMAENAB |
; 2064 :         MGC_M_TXCSR_H_NAKTIMEOUT |
; 2065 :         MGC_M_TXCSR_H_RXSTALL |
; 2066 :         MGC_M_TXCSR_H_ERROR |
; 2067 :         MGC_M_TXCSR_FIFONOTEMPTY;

  05934	e59d3044	 ldr         r3, [sp, #0x44]
  05938	e2833010	 add         r3, r3, #0x10
  0593c	e5933000	 ldr         r3, [r3]
  05940	e2833b01	 add         r3, r3, #1, 22
  05944	e2832012	 add         r2, r3, #0x12
  05948	e3a03a03	 mov         r3, #3, 20
  0594c	e38330a6	 orr         r3, r3, #0xA6
  05950	e1c230b0	 strh        r3, [r2]

; 2068 : 
; 2069 :     // Save information for the callback below, before cleaning-up
; 2070 :     UINT32 nTransferLength = m_nTransferLength;

  05954	e59d3044	 ldr         r3, [sp, #0x44]
  05958	e2833088	 add         r3, r3, #0x88
  0595c	e5933000	 ldr         r3, [r3]
  05960	e58d3014	 str         r3, [sp, #0x14]

; 2071 :     UINT32 nTransferComplete = m_nTransferComplete;

  05964	e59d3044	 ldr         r3, [sp, #0x44]
  05968	e2833098	 add         r3, r3, #0x98
  0596c	e5933000	 ldr         r3, [r3]
  05970	e58d300c	 str         r3, [sp, #0xC]

; 2072 : 
; 2073 :     // Cleanup *before* the callback (to prevent IssueTransfer calls while m_nTransferLength and
; 2074 :     // m_nTransferFrames are still non-zero)
; 2075 :     m_pvTransferBuffer = NULL;

  05974	e59d3044	 ldr         r3, [sp, #0x44]
  05978	e283206c	 add         r2, r3, #0x6C
  0597c	e3a03000	 mov         r3, #0
  05980	e5823000	 str         r3, [r2]

; 2076 :     m_paTransferBuffer = 0;

  05984	e59d3044	 ldr         r3, [sp, #0x44]
  05988	e2832070	 add         r2, r3, #0x70
  0598c	e3a03000	 mov         r3, #0
  05990	e5823000	 str         r3, [r2]

; 2077 :     m_nTransferLength = 0;

  05994	e59d3044	 ldr         r3, [sp, #0x44]
  05998	e2832088	 add         r2, r3, #0x88
  0599c	e3a03000	 mov         r3, #0
  059a0	e5823000	 str         r3, [r2]

; 2078 :     m_nTransferFrames = 0;

  059a4	e59d3044	 ldr         r3, [sp, #0x44]
  059a8	e2832074	 add         r2, r3, #0x74
  059ac	e3a03000	 mov         r3, #0
  059b0	e5823000	 str         r3, [r2]

; 2079 :     m_nSegmentPending = 0;

  059b4	e59d3044	 ldr         r3, [sp, #0x44]
  059b8	e28320a0	 add         r2, r3, #0xA0
  059bc	e3a03000	 mov         r3, #0
  059c0	e5823000	 str         r3, [r2]

; 2080 :     m_nSegmentFramesPending = 0;

  059c4	e59d3044	 ldr         r3, [sp, #0x44]
  059c8	e28320a4	 add         r2, r3, #0xA4
  059cc	e3a03000	 mov         r3, #0
  059d0	e5823000	 str         r3, [r2]

; 2081 : 
; 2082 :     // Let the client know the transfer has been completed
; 2083 :     if (m_pCallback)

  059d4	e59d3044	 ldr         r3, [sp, #0x44]
  059d8	e2833040	 add         r3, r3, #0x40
  059dc	e5933000	 ldr         r3, [r3]
  059e0	e3530000	 cmp         r3, #0
  059e4	0a00001c	 beq         |$LN1@OnTransfer|

; 2084 :     {
; 2085 :         m_pCallback(
; 2086 :             this,
; 2087 :             m_nStatus,
; 2088 :             nTransferLength,
; 2089 :             nTransferComplete,
; 2090 :             (nCsr & MGC_M_TXCSR_H_DATATOGGLE) ? USB_TOGGLE_CARRY : 0,
; 2091 :             m_pTransferCookie1,
; 2092 :             m_pTransferCookie2);

  059e8	e59d3010	 ldr         r3, [sp, #0x10]
  059ec	e3130c01	 tst         r3, #1, 24
  059f0	0a000002	 beq         |$LN10@OnTransfer|
  059f4	e3a03102	 mov         r3, #2, 2
  059f8	e58d3030	 str         r3, [sp, #0x30]
  059fc	ea000001	 b           |$LN11@OnTransfer|
  05a00		 |$LN10@OnTransfer|
  05a00	e3a03000	 mov         r3, #0
  05a04	e58d3030	 str         r3, [sp, #0x30]
  05a08		 |$LN11@OnTransfer|
  05a08	e59d3044	 ldr         r3, [sp, #0x44]
  05a0c	e2833094	 add         r3, r3, #0x94
  05a10	e5933000	 ldr         r3, [r3]
  05a14	e58d3008	 str         r3, [sp, #8]
  05a18	e59d3044	 ldr         r3, [sp, #0x44]
  05a1c	e2833090	 add         r3, r3, #0x90
  05a20	e5933000	 ldr         r3, [r3]
  05a24	e58d3004	 str         r3, [sp, #4]
  05a28	e59d3030	 ldr         r3, [sp, #0x30]
  05a2c	e58d3000	 str         r3, [sp]
  05a30	e59d300c	 ldr         r3, [sp, #0xC]
  05a34	e59d2014	 ldr         r2, [sp, #0x14]
  05a38	e59d1044	 ldr         r1, [sp, #0x44]
  05a3c	e28110c4	 add         r1, r1, #0xC4
  05a40	e5911000	 ldr         r1, [r1]
  05a44	e59d0044	 ldr         r0, [sp, #0x44]
  05a48	e59de044	 ldr         lr, [sp, #0x44]
  05a4c	e28ee040	 add         lr, lr, #0x40
  05a50	e59e4000	 ldr         r4, [lr]
  05a54	e1a0e00f	 mov         lr, pc
  05a58	e12fff14	 bx          r4
  05a5c		 |$LN1@OnTransfer|
  05a5c		 |$LN2@OnTransfer|
  05a5c		 |$_done$39725|

; 2093 :     }
; 2094 : 
; 2095 : _done:
; 2096 :     DEBUGMSG(CPPI_DBG_TX || ZONE_VERBOSE,
; 2097 :         (L"-CCppiDmaTxChannel::OnTransferComplete\r\n"));

  05a5c	ea000004	 b           |$LN12@OnTransfer|
  05a60	e59f0020	 ldr         r0, [pc, #0x20]
  05a64	eb000000	 bl          NKDbgPrintfW
  05a68	e3a03001	 mov         r3, #1
  05a6c	e58d3034	 str         r3, [sp, #0x34]
  05a70	ea000001	 b           |$LN13@OnTransfer|
  05a74		 |$LN12@OnTransfer|
  05a74	e3a03000	 mov         r3, #0
  05a78	e58d3034	 str         r3, [sp, #0x34]
  05a7c		 |$LN13@OnTransfer|

; 2098 : }

  05a7c	e28dd038	 add         sp, sp, #0x38
  05a80	e89d6010	 ldmia       sp, {r4, sp, lr}
  05a84	e12fff1e	 bx          lr
  05a88		 |$LN17@OnTransfer|
  05a88		 |$LN18@OnTransfer|
  05a88	00000000	 DCD         |??_C@_1FC@PCKACIGE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAO?$AAn?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo@|
  05a8c		 |$LN19@OnTransfer|
  05a8c	00000000	 DCD         |??_C@_1HG@DOPODOEF@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAO?$AAn?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAC?$AAo@|
  05a90		 |$LN20@OnTransfer|
  05a90	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  05a94		 |$LN21@OnTransfer|
  05a94	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  05a98		 |$M41105|

			 ENDP  ; |?OnTransferComplete@CCppiDmaTxChannel@@QAAXXZ|, CCppiDmaTxChannel::OnTransferComplete


  000c0			 AREA	 |.pdata|, PDATA
|$T41120| DCD	|$LN7@IsFifoEmpt|
	DCD	0x40001604
; Function compile flags: /Odtp

  05a98			 AREA	 |.text|, CODE, ARM

  05a98		 |?IsFifoEmpty@CCppiDmaTxChannel@@QBAHXZ| PROC ; CCppiDmaTxChannel::IsFifoEmpty

; 2101 : {

  05a98		 |$LN7@IsFifoEmpt|
  05a98	e1a0c00d	 mov         r12, sp
  05a9c	e92d0001	 stmdb       sp!, {r0}
  05aa0	e92d5000	 stmdb       sp!, {r12, lr}
  05aa4	e24dd008	 sub         sp, sp, #8
  05aa8		 |$M41117|

; 2102 :     return ((m_pUsbEpcsrRegs->TXCSR & MGC_M_TXCSR_TXPKTRDY) == 0);

  05aa8	e59d3010	 ldr         r3, [sp, #0x10]
  05aac	e2833014	 add         r3, r3, #0x14
  05ab0	e5933000	 ldr         r3, [r3]
  05ab4	e2833002	 add         r3, r3, #2
  05ab8	e1d330b0	 ldrh        r3, [r3]
  05abc	e3130001	 tst         r3, #1
  05ac0	1a000002	 bne         |$LN3@IsFifoEmpt|
  05ac4	e3a03001	 mov         r3, #1
  05ac8	e58d3004	 str         r3, [sp, #4]
  05acc	ea000001	 b           |$LN4@IsFifoEmpt|
  05ad0		 |$LN3@IsFifoEmpt|
  05ad0	e3a03000	 mov         r3, #0
  05ad4	e58d3004	 str         r3, [sp, #4]
  05ad8		 |$LN4@IsFifoEmpt|
  05ad8	e59d3004	 ldr         r3, [sp, #4]
  05adc	e58d3000	 str         r3, [sp]

; 2103 : }

  05ae0	e59d0000	 ldr         r0, [sp]
  05ae4	e28dd008	 add         sp, sp, #8
  05ae8	e89d6000	 ldmia       sp, {sp, lr}
  05aec	e12fff1e	 bx          lr
  05af0		 |$M41118|

			 ENDP  ; |?IsFifoEmpty@CCppiDmaTxChannel@@QBAHXZ|, CCppiDmaTxChannel::IsFifoEmpty


  000c8			 AREA	 |.pdata|, PDATA
|$T41125| DCD	|$LN5@KickDrainT|
	DCD	0x40000903
; Function compile flags: /Odtp

  05af0			 AREA	 |.text|, CODE, ARM

  05af0		 |?KickDrainThread@CCppiDmaTxChannel@@QAAXXZ| PROC ; CCppiDmaTxChannel::KickDrainThread

; 2106 : {

  05af0		 |$LN5@KickDrainT|
  05af0	e1a0c00d	 mov         r12, sp
  05af4	e92d0001	 stmdb       sp!, {r0}
  05af8	e92d5000	 stmdb       sp!, {r12, lr}
  05afc		 |$M41122|

; 2107 :     SetEvent(m_hDrainEvent);

  05afc	e59d3008	 ldr         r3, [sp, #8]
  05b00	e28330bc	 add         r3, r3, #0xBC
  05b04	e5930000	 ldr         r0, [r3]
  05b08	eb000000	 bl          SetEvent

; 2108 : }

  05b0c	e89d6000	 ldmia       sp, {sp, lr}
  05b10	e12fff1e	 bx          lr
  05b14		 |$M41123|

			 ENDP  ; |?KickDrainThread@CCppiDmaTxChannel@@QAAXXZ|, CCppiDmaTxChannel::KickDrainThread

	EXPORT	|??_C@_1EC@CIJDPCBC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@KKOIFHFH@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@DMFJJLLL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@EHJHBKBB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?6@| [ DATA ] ; `string'
	EXPORT	|?DrainThread@CCppiDmaTxChannel@@QAAKXZ| ; CCppiDmaTxChannel::DrainThread

  000d0			 AREA	 |.pdata|, PDATA
|$T41139| DCD	|$LN18@DrainThrea|
	DCD	0x40004c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@CIJDPCBC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?6@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "D", 0x0, "r", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@KKOIFHFH@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "D", 0x0, "r", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@DMFJJLLL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "D", 0x0, "r", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@EHJHBKBB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?6@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "D", 0x0, "r", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  05b14			 AREA	 |.text|, CODE, ARM

  05b14		 |?DrainThread@CCppiDmaTxChannel@@QAAKXZ| PROC ; CCppiDmaTxChannel::DrainThread

; 2111 : {

  05b14		 |$LN18@DrainThrea|
  05b14	e1a0c00d	 mov         r12, sp
  05b18	e92d0001	 stmdb       sp!, {r0}
  05b1c	e92d5000	 stmdb       sp!, {r12, lr}
  05b20	e24dd018	 sub         sp, sp, #0x18
  05b24		 |$M41136|

; 2112 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2113 :         (L"+CCppiDmaTxChannel::DrainThread\n"));

  05b24	e59f0114	 ldr         r0, [pc, #0x114]
  05b28	eb000000	 bl          NKDbgPrintfW
  05b2c	e3a03001	 mov         r3, #1
  05b30	e58d3004	 str         r3, [sp, #4]
  05b34	ea000001	 b           |$LN9@DrainThrea|
  05b38	e3a03000	 mov         r3, #0
  05b3c	e58d3004	 str         r3, [sp, #4]
  05b40		 |$LN9@DrainThrea|
  05b40		 |$LN5@DrainThrea|

; 2114 : 
; 2115 :     while (!m_fDrainThreadClosing)

  05b40	e59d3020	 ldr         r3, [sp, #0x20]
  05b44	e28330b8	 add         r3, r3, #0xB8
  05b48	e5933000	 ldr         r3, [r3]
  05b4c	e3530000	 cmp         r3, #0
  05b50	1a00002a	 bne         |$LN4@DrainThrea|

; 2116 :     {
; 2117 :         DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2118 :             (L" CCppiDmaTxChannel::DrainThread: Waiting...\r\n"));

  05b54	ea000004	 b           |$LN10@DrainThrea|
  05b58	e59f00dc	 ldr         r0, [pc, #0xDC]
  05b5c	eb000000	 bl          NKDbgPrintfW
  05b60	e3a03001	 mov         r3, #1
  05b64	e58d3008	 str         r3, [sp, #8]
  05b68	ea000001	 b           |$LN11@DrainThrea|
  05b6c		 |$LN10@DrainThrea|
  05b6c	e3a03000	 mov         r3, #0
  05b70	e58d3008	 str         r3, [sp, #8]
  05b74		 |$LN11@DrainThrea|

; 2119 : 
; 2120 :         WaitForSingleObject(m_hDrainEvent, INFINITE);

  05b74	e3e01000	 mvn         r1, #0
  05b78	e59d3020	 ldr         r3, [sp, #0x20]
  05b7c	e28330bc	 add         r3, r3, #0xBC
  05b80	e5930000	 ldr         r0, [r3]
  05b84	eb000000	 bl          WaitForSingleObject

; 2121 : 
; 2122 :         DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2123 :             (L" CCppiDmaTxChannel::DrainThread: Released\r\n"));

  05b88	ea000004	 b           |$LN12@DrainThrea|
  05b8c	e59f00a4	 ldr         r0, [pc, #0xA4]
  05b90	eb000000	 bl          NKDbgPrintfW
  05b94	e3a03001	 mov         r3, #1
  05b98	e58d300c	 str         r3, [sp, #0xC]
  05b9c	ea000001	 b           |$LN13@DrainThrea|
  05ba0		 |$LN12@DrainThrea|
  05ba0	e3a03000	 mov         r3, #0
  05ba4	e58d300c	 str         r3, [sp, #0xC]
  05ba8		 |$LN13@DrainThrea|
  05ba8		 |$LN3@DrainThrea|

; 2124 : 
; 2125 :         while ((!m_fDrainThreadClosing) && (!IsFifoEmpty()))

  05ba8	e59d3020	 ldr         r3, [sp, #0x20]
  05bac	e28330b8	 add         r3, r3, #0xB8
  05bb0	e5933000	 ldr         r3, [r3]
  05bb4	e3530000	 cmp         r3, #0
  05bb8	1a000008	 bne         |$LN2@DrainThrea|
  05bbc	e59d0020	 ldr         r0, [sp, #0x20]
  05bc0	eb000000	 bl          |?IsFifoEmpty@CCppiDmaTxChannel@@QBAHXZ|
  05bc4	e58d0010	 str         r0, [sp, #0x10]
  05bc8	e59d3010	 ldr         r3, [sp, #0x10]
  05bcc	e3530000	 cmp         r3, #0
  05bd0	1a000002	 bne         |$LN2@DrainThrea|

; 2126 :             Sleep(1);

  05bd4	e3a00001	 mov         r0, #1
  05bd8	eb000000	 bl          Sleep
  05bdc	eafffff1	 b           |$LN3@DrainThrea|
  05be0		 |$LN2@DrainThrea|

; 2127 : 
; 2128 :         if (!m_fDrainThreadClosing)

  05be0	e59d3020	 ldr         r3, [sp, #0x20]
  05be4	e28330b8	 add         r3, r3, #0xB8
  05be8	e5933000	 ldr         r3, [r3]
  05bec	e3530000	 cmp         r3, #0
  05bf0	1a000001	 bne         |$LN1@DrainThrea|

; 2129 :             OnTransferComplete();

  05bf4	e59d0020	 ldr         r0, [sp, #0x20]
  05bf8	eb000000	 bl          |?OnTransferComplete@CCppiDmaTxChannel@@QAAXXZ|
  05bfc		 |$LN1@DrainThrea|

; 2130 :     }

  05bfc	eaffffcf	 b           |$LN5@DrainThrea|
  05c00		 |$LN4@DrainThrea|

; 2131 : 
; 2132 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2133 :         (L"-CCppiDmaTxChannel::DrainThread\n"));

  05c00	e59f002c	 ldr         r0, [pc, #0x2C]
  05c04	eb000000	 bl          NKDbgPrintfW
  05c08	e3a03001	 mov         r3, #1
  05c0c	e58d3014	 str         r3, [sp, #0x14]
  05c10	ea000001	 b           |$LN15@DrainThrea|
  05c14	e3a03000	 mov         r3, #0
  05c18	e58d3014	 str         r3, [sp, #0x14]
  05c1c		 |$LN15@DrainThrea|

; 2134 : 
; 2135 :     return 0;

  05c1c	e3a03000	 mov         r3, #0
  05c20	e58d3000	 str         r3, [sp]

; 2136 : }

  05c24	e59d0000	 ldr         r0, [sp]
  05c28	e28dd018	 add         sp, sp, #0x18
  05c2c	e89d6000	 ldmia       sp, {sp, lr}
  05c30	e12fff1e	 bx          lr
  05c34		 |$LN19@DrainThrea|
  05c34		 |$LN20@DrainThrea|
  05c34	00000000	 DCD         |??_C@_1EC@CIJDPCBC@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?6@|
  05c38		 |$LN21@DrainThrea|
  05c38	00000000	 DCD         |??_C@_1FI@KKOIFHFH@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3@|
  05c3c		 |$LN22@DrainThrea|
  05c3c	00000000	 DCD         |??_C@_1FM@DMFJJLLL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3@|
  05c40		 |$LN23@DrainThrea|
  05c40	00000000	 DCD         |??_C@_1EC@EHJHBKBB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAT?$AAx?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?3?$AA?3?$AAD?$AAr?$AAa?$AAi?$AAn?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?6@|
  05c44		 |$M41137|

			 ENDP  ; |?DrainThread@CCppiDmaTxChannel@@QAAKXZ|, CCppiDmaTxChannel::DrainThread


  000d8			 AREA	 |.pdata|, PDATA
|$T41150| DCD	|$LN5@DrainThrea@2|
	DCD	0x40000d04
; Function compile flags: /Odtp

  05c44			 AREA	 |.text|, CODE, ARM

  05c44		 |?DrainThreadStub@CCppiDmaTxChannel@@SAKPAX@Z| PROC ; CCppiDmaTxChannel::DrainThreadStub

; 2139 : {

  05c44		 |$LN5@DrainThrea@2|
  05c44	e1a0c00d	 mov         r12, sp
  05c48	e92d0001	 stmdb       sp!, {r0}
  05c4c	e92d5000	 stmdb       sp!, {r12, lr}
  05c50	e24dd008	 sub         sp, sp, #8
  05c54		 |$M41147|

; 2140 :     return ((CCppiDmaTxChannel*)lpParameter)->DrainThread();

  05c54	e59d0010	 ldr         r0, [sp, #0x10]
  05c58	eb000000	 bl          |?DrainThread@CCppiDmaTxChannel@@QAAKXZ|
  05c5c	e58d0004	 str         r0, [sp, #4]
  05c60	e59d3004	 ldr         r3, [sp, #4]
  05c64	e58d3000	 str         r3, [sp]

; 2141 : }

  05c68	e59d0000	 ldr         r0, [sp]
  05c6c	e28dd008	 add         sp, sp, #8
  05c70	e89d6000	 ldmia       sp, {sp, lr}
  05c74	e12fff1e	 bx          lr
  05c78		 |$M41148|

			 ENDP  ; |?DrainThreadStub@CCppiDmaTxChannel@@SAKPAX@Z|, CCppiDmaTxChannel::DrainThreadStub

	EXPORT	|??_C@_1FE@OJEIELCB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OODAIPMC@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??0CCppiDmaController@@QAA@K@Z|	; CCppiDmaController::CCppiDmaController
	IMPORT	|memset|

  000e0			 AREA	 |.pdata|, PDATA
|$T41160| DCD	|$LN9@CCppiDmaCo|
	DCD	0x40006204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OJEIELCB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p"
	DCB	0x0, "i", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OODAIPMC@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p"
	DCB	0x0, "i", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  05c78			 AREA	 |.text|, CODE, ARM

  05c78		 |??0CCppiDmaController@@QAA@K@Z| PROC	; CCppiDmaController::CCppiDmaController

; 2150 : {

  05c78		 |$LN9@CCppiDmaCo|
  05c78	e1a0c00d	 mov         r12, sp
  05c7c	e92d0003	 stmdb       sp!, {r0, r1}
  05c80	e92d5000	 stmdb       sp!, {r12, lr}
  05c84	e24dd010	 sub         sp, sp, #0x10
  05c88		 |$M41157|
  05c88	e59d3018	 ldr         r3, [sp, #0x18]
  05c8c	e2832024	 add         r2, r3, #0x24
  05c90	e59d301c	 ldr         r3, [sp, #0x1C]
  05c94	e5823000	 str         r3, [r2]

; 2151 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE, (L"+CCppiDmaController::CCppiDmaController\r\n"));

  05c98	e59f015c	 ldr         r0, [pc, #0x15C]
  05c9c	eb000000	 bl          NKDbgPrintfW
  05ca0	e3a03001	 mov         r3, #1
  05ca4	e58d3004	 str         r3, [sp, #4]
  05ca8	ea000001	 b           |$LN4@CCppiDmaCo|
  05cac	e3a03000	 mov         r3, #0
  05cb0	e58d3004	 str         r3, [sp, #4]
  05cb4		 |$LN4@CCppiDmaCo|

; 2152 : 
; 2153 :     InitializeCriticalSection(&m_csLock);

  05cb4	e59d0018	 ldr         r0, [sp, #0x18]
  05cb8	eb000000	 bl          InitializeCriticalSection

; 2154 :     m_paUsbRegs = 0;

  05cbc	e59d3018	 ldr         r3, [sp, #0x18]
  05cc0	e2832014	 add         r2, r3, #0x14
  05cc4	e3a03000	 mov         r3, #0
  05cc8	e5823000	 str         r3, [r2]

; 2155 :     m_pUsbRegs = NULL;

  05ccc	e59d3018	 ldr         r3, [sp, #0x18]
  05cd0	e2832018	 add         r2, r3, #0x18
  05cd4	e3a03000	 mov         r3, #0
  05cd8	e5823000	 str         r3, [r2]

; 2156 :     m_pCppiRegs = NULL;

  05cdc	e59d3018	 ldr         r3, [sp, #0x18]
  05ce0	e283201c	 add         r2, r3, #0x1C
  05ce4	e3a03000	 mov         r3, #0
  05ce8	e5823000	 str         r3, [r2]

; 2157 :     m_hUsbCdma = NULL;

  05cec	e59d3018	 ldr         r3, [sp, #0x18]
  05cf0	e2832020	 add         r2, r3, #0x20
  05cf4	e3a03000	 mov         r3, #0
  05cf8	e5823000	 str         r3, [r2]

; 2158 : 
; 2159 :     m_nCppiChannelOffset = 0;

  05cfc	e59d3018	 ldr         r3, [sp, #0x18]
  05d00	e2832028	 add         r2, r3, #0x28
  05d04	e3a03000	 mov         r3, #0
  05d08	e5c23000	 strb        r3, [r2]

; 2160 :     m_nRxQueueOffset = USB_CPPI_RX_QNUM;

  05d0c	e59d3018	 ldr         r3, [sp, #0x18]
  05d10	e2832029	 add         r2, r3, #0x29
  05d14	e3a03000	 mov         r3, #0
  05d18	e5c23000	 strb        r3, [r2]

; 2161 :     m_nTxQueueOffset = USB_CPPI_TX_QNUM;

  05d1c	e59d3018	 ldr         r3, [sp, #0x18]
  05d20	e283202a	 add         r2, r3, #0x2A
  05d24	e3a03020	 mov         r3, #0x20
  05d28	e5c23000	 strb        r3, [r2]

; 2162 : 
; 2163 :     memset(m_pTxChannels, 0, sizeof(m_pTxChannels));

  05d2c	e3a02078	 mov         r2, #0x78
  05d30	e3a01000	 mov         r1, #0
  05d34	e59d3018	 ldr         r3, [sp, #0x18]
  05d38	e283002c	 add         r0, r3, #0x2C
  05d3c	eb000000	 bl          memset

; 2164 :     memset(m_pRxChannels, 0, sizeof(m_pRxChannels));

  05d40	e3a02078	 mov         r2, #0x78
  05d44	e3a01000	 mov         r1, #0
  05d48	e59d3018	 ldr         r3, [sp, #0x18]
  05d4c	e28300a4	 add         r0, r3, #0xA4
  05d50	eb000000	 bl          memset

; 2165 : 
; 2166 :     m_pvPool = NULL;

  05d54	e59d3018	 ldr         r3, [sp, #0x18]
  05d58	e2832f47	 add         r2, r3, #0x47, 30
  05d5c	e3a03000	 mov         r3, #0
  05d60	e5823000	 str         r3, [r2]

; 2167 :     m_paPool.QuadPart = 0;

  05d64	e59d3018	 ldr         r3, [sp, #0x18]
  05d68	e2833e12	 add         r3, r3, #0x12, 28
  05d6c	e58d3008	 str         r3, [sp, #8]
  05d70	e59d2008	 ldr         r2, [sp, #8]
  05d74	e3a03000	 mov         r3, #0
  05d78	e5823000	 str         r3, [r2]
  05d7c	e59d2008	 ldr         r2, [sp, #8]
  05d80	e3a03000	 mov         r3, #0
  05d84	e5823004	 str         r3, [r2, #4]

; 2168 :     m_cbPoolSize = 0;

  05d88	e59d3018	 ldr         r3, [sp, #0x18]
  05d8c	e2832f4a	 add         r2, r3, #0x4A, 30
  05d90	e3a03000	 mov         r3, #0
  05d94	e5823000	 str         r3, [r2]

; 2169 :     InitializeCriticalSection(&m_csPoolLock);

  05d98	e59d3018	 ldr         r3, [sp, #0x18]
  05d9c	e2830f4b	 add         r0, r3, #0x4B, 30
  05da0	eb000000	 bl          InitializeCriticalSection

; 2170 : 
; 2171 :     m_pvHdPool = NULL;

  05da4	e59d3018	 ldr         r3, [sp, #0x18]
  05da8	e2832d05	 add         r2, r3, #5, 26
  05dac	e3a03000	 mov         r3, #0
  05db0	e5823000	 str         r3, [r2]

; 2172 :     m_pvHdPoolHead = NULL;

  05db4	e59d3018	 ldr         r3, [sp, #0x18]
  05db8	e2832f51	 add         r2, r3, #0x51, 30
  05dbc	e3a03000	 mov         r3, #0
  05dc0	e5823000	 str         r3, [r2]

; 2173 : 
; 2174 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE, (L"-CCppiDmaController::CCppiDmaController\r\n"));

  05dc4	e59f002c	 ldr         r0, [pc, #0x2C]
  05dc8	eb000000	 bl          NKDbgPrintfW
  05dcc	e3a03001	 mov         r3, #1
  05dd0	e58d300c	 str         r3, [sp, #0xC]
  05dd4	ea000001	 b           |$LN6@CCppiDmaCo|
  05dd8	e3a03000	 mov         r3, #0
  05ddc	e58d300c	 str         r3, [sp, #0xC]
  05de0		 |$LN6@CCppiDmaCo|

; 2175 : }

  05de0	e59d3018	 ldr         r3, [sp, #0x18]
  05de4	e58d3000	 str         r3, [sp]
  05de8	e59d0000	 ldr         r0, [sp]
  05dec	e28dd010	 add         sp, sp, #0x10
  05df0	e89d6000	 ldmia       sp, {sp, lr}
  05df4	e12fff1e	 bx          lr
  05df8		 |$LN10@CCppiDmaCo|
  05df8		 |$LN11@CCppiDmaCo|
  05df8	00000000	 DCD         |??_C@_1FE@OJEIELCB@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn@|
  05dfc		 |$LN12@CCppiDmaCo|
  05dfc	00000000	 DCD         |??_C@_1FE@OODAIPMC@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn@|
  05e00		 |$M41158|

			 ENDP  ; |??0CCppiDmaController@@QAA@K@Z|, CCppiDmaController::CCppiDmaController

	EXPORT	|??_C@_1FG@OOMHPGIE@?$AA?9?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@HJNFHHK@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo@| [ DATA ] ; `string'
	EXPORT	|??1CCppiDmaController@@QAA@XZ|		; CCppiDmaController::~CCppiDmaController

  000e8			 AREA	 |.pdata|, PDATA
|$T41178| DCD	|$LN15@CCppiDmaCo@2|
	DCD	0x40005204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@OOMHPGIE@?$AA?9?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo@| DCB "-"
	DCB	0x0, "~", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "C", 0x0, "p"
	DCB	0x0, "p", 0x0, "i", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@HJNFHHK@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo@| DCB "+"
	DCB	0x0, "~", 0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "C", 0x0, "p"
	DCB	0x0, "p", 0x0, "i", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  05e00			 AREA	 |.text|, CODE, ARM

  05e00		 |??1CCppiDmaController@@QAA@XZ| PROC	; CCppiDmaController::~CCppiDmaController

; 2179 : {

  05e00		 |$LN15@CCppiDmaCo@2|
  05e00	e1a0c00d	 mov         r12, sp
  05e04	e92d0001	 stmdb       sp!, {r0}
  05e08	e92d5000	 stmdb       sp!, {r12, lr}
  05e0c	e24dd014	 sub         sp, sp, #0x14
  05e10		 |$M41175|

; 2180 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE, (L"+~CCppiDmaController::CCppiDmaController\r\n"));

  05e10	e59f012c	 ldr         r0, [pc, #0x12C]
  05e14	eb000000	 bl          NKDbgPrintfW
  05e18	e3a03001	 mov         r3, #1
  05e1c	e58d3000	 str         r3, [sp]
  05e20	ea000001	 b           |$LN4@CCppiDmaCo@2|
  05e24	e3a03000	 mov         r3, #0
  05e28	e58d3000	 str         r3, [sp]
  05e2c		 |$LN4@CCppiDmaCo@2|

; 2181 : 
; 2182 :     DEBUGCHK(m_paUsbRegs == 0);

  05e2c	e59d301c	 ldr         r3, [sp, #0x1C]
  05e30	e2833014	 add         r3, r3, #0x14
  05e34	e5933000	 ldr         r3, [r3]
  05e38	e3530000	 cmp         r3, #0
  05e3c	1a000002	 bne         |$LN5@CCppiDmaCo@2|
  05e40	e3a03001	 mov         r3, #1
  05e44	e58d3004	 str         r3, [sp, #4]
  05e48	ea000008	 b           |$LN6@CCppiDmaCo@2|
  05e4c		 |$LN5@CCppiDmaCo@2|
  05e4c	e3a03b02	 mov         r3, #2, 22
  05e50	e3833086	 orr         r3, r3, #0x86
  05e54	e59f20e4	 ldr         r2, [pc, #0xE4]
  05e58	e59f10dc	 ldr         r1, [pc, #0xDC]
  05e5c	e59f00d4	 ldr         r0, [pc, #0xD4]
  05e60	eb000000	 bl          NKDbgPrintfW
  05e64	e6000010	 __debugbreak_ce
  05e68	e3a03000	 mov         r3, #0
  05e6c	e58d3004	 str         r3, [sp, #4]
  05e70		 |$LN6@CCppiDmaCo@2|

; 2183 :     DEBUGCHK(m_pvPool == 0);

  05e70	e59d301c	 ldr         r3, [sp, #0x1C]
  05e74	e2833f47	 add         r3, r3, #0x47, 30
  05e78	e5933000	 ldr         r3, [r3]
  05e7c	e3530000	 cmp         r3, #0
  05e80	1a000002	 bne         |$LN7@CCppiDmaCo@2|
  05e84	e3a03001	 mov         r3, #1
  05e88	e58d3008	 str         r3, [sp, #8]
  05e8c	ea000008	 b           |$LN8@CCppiDmaCo@2|
  05e90		 |$LN7@CCppiDmaCo@2|
  05e90	e3a03b02	 mov         r3, #2, 22
  05e94	e3833087	 orr         r3, r3, #0x87
  05e98	e59f20a0	 ldr         r2, [pc, #0xA0]
  05e9c	e59f1098	 ldr         r1, [pc, #0x98]
  05ea0	e59f0090	 ldr         r0, [pc, #0x90]
  05ea4	eb000000	 bl          NKDbgPrintfW
  05ea8	e6000010	 __debugbreak_ce
  05eac	e3a03000	 mov         r3, #0
  05eb0	e58d3008	 str         r3, [sp, #8]
  05eb4		 |$LN8@CCppiDmaCo@2|

; 2184 :     DEBUGCHK(m_pvHdPoolHead == 0);

  05eb4	e59d301c	 ldr         r3, [sp, #0x1C]
  05eb8	e2833f51	 add         r3, r3, #0x51, 30
  05ebc	e5933000	 ldr         r3, [r3]
  05ec0	e3530000	 cmp         r3, #0
  05ec4	1a000002	 bne         |$LN9@CCppiDmaCo@2|
  05ec8	e3a03001	 mov         r3, #1
  05ecc	e58d300c	 str         r3, [sp, #0xC]
  05ed0	ea000008	 b           |$LN10@CCppiDmaCo@2|
  05ed4		 |$LN9@CCppiDmaCo@2|
  05ed4	e3a03b02	 mov         r3, #2, 22
  05ed8	e3833088	 orr         r3, r3, #0x88
  05edc	e59f205c	 ldr         r2, [pc, #0x5C]
  05ee0	e59f1054	 ldr         r1, [pc, #0x54]
  05ee4	e59f004c	 ldr         r0, [pc, #0x4C]
  05ee8	eb000000	 bl          NKDbgPrintfW
  05eec	e6000010	 __debugbreak_ce
  05ef0	e3a03000	 mov         r3, #0
  05ef4	e58d300c	 str         r3, [sp, #0xC]
  05ef8		 |$LN10@CCppiDmaCo@2|

; 2185 : 
; 2186 :     DeleteCriticalSection(&m_csPoolLock);

  05ef8	e59d301c	 ldr         r3, [sp, #0x1C]
  05efc	e2830f4b	 add         r0, r3, #0x4B, 30
  05f00	eb000000	 bl          DeleteCriticalSection

; 2187 :     DeleteCriticalSection(&m_csLock);

  05f04	e59d001c	 ldr         r0, [sp, #0x1C]
  05f08	eb000000	 bl          DeleteCriticalSection

; 2188 : 
; 2189 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE, (L"-~CCppiDmaController::CCppiDmaController\r\n"));

  05f0c	e59f0020	 ldr         r0, [pc, #0x20]
  05f10	eb000000	 bl          NKDbgPrintfW
  05f14	e3a03001	 mov         r3, #1
  05f18	e58d3010	 str         r3, [sp, #0x10]
  05f1c	ea000001	 b           |$LN12@CCppiDmaCo@2|
  05f20	e3a03000	 mov         r3, #0
  05f24	e58d3010	 str         r3, [sp, #0x10]
  05f28		 |$LN12@CCppiDmaCo@2|

; 2190 : }

  05f28	e28dd014	 add         sp, sp, #0x14
  05f2c	e89d6000	 ldmia       sp, {sp, lr}
  05f30	e12fff1e	 bx          lr
  05f34		 |$LN16@CCppiDmaCo@2|
  05f34		 |$LN17@CCppiDmaCo@2|
  05f34	00000000	 DCD         |??_C@_1FG@OOMHPGIE@?$AA?9?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo@|
  05f38		 |$LN18@CCppiDmaCo@2|
  05f38	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  05f3c		 |$LN19@CCppiDmaCo@2|
  05f3c	00000000	 DCD         |dpCurSettings|
  05f40		 |$LN20@CCppiDmaCo@2|
  05f40	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  05f44		 |$LN21@CCppiDmaCo@2|
  05f44	00000000	 DCD         |??_C@_1FG@HJNFHHK@?$AA?$CL?$AA?$HO?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo@|
  05f48		 |$M41176|

			 ENDP  ; |??1CCppiDmaController@@QAA@XZ|, CCppiDmaController::~CCppiDmaController

	EXPORT	|??_C@_1EE@BDBNFIAO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|?Unlock@CCppiDmaController@@IAAXXZ|	; CCppiDmaController::Unlock
	EXPORT	|??_C@_1HO@JANNNAOB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@OFBPNCEL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@| [ DATA ] ; `string'
	EXPORT	|?Lock@CCppiDmaController@@IAAXXZ|	; CCppiDmaController::Lock
	EXPORT	|?PoolInit@CCppiDmaController@@IAAHXZ|	; CCppiDmaController::PoolInit
	EXPORT	|??_C@_1EE@JGOBAOID@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|?Initialize@CCppiDmaController@@QAAHIPAX0@Z| ; CCppiDmaController::Initialize

  000f0			 AREA	 |.pdata|, PDATA
|$T41198| DCD	|$LN18@Initialize|
	DCD	0x40006404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@BDBNFIAO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$AN@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@JANNNAOB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O"
	DCB	0x0, "R", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "y", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@OFBPNCEL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O"
	DCB	0x0, "R", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "t", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@JGOBAOID@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$AN@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  05f48			 AREA	 |.text|, CODE, ARM

  05f48		 |?Initialize@CCppiDmaController@@QAAHIPAX0@Z| PROC ; CCppiDmaController::Initialize

; 2194 : {

  05f48		 |$LN18@Initialize|
  05f48	e1a0c00d	 mov         r12, sp
  05f4c	e92d000f	 stmdb       sp!, {r0 - r3}
  05f50	e92d5000	 stmdb       sp!, {r12, lr}
  05f54	e24dd018	 sub         sp, sp, #0x18
  05f58		 |$M41195|

; 2195 :     BOOL fResult = FALSE;

  05f58	e3a03000	 mov         r3, #0
  05f5c	e58d3000	 str         r3, [sp]

; 2196 : 
; 2197 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2198 :         (L"+CCppiDmaController::Initialize\r\n"));

  05f60	e59f016c	 ldr         r0, [pc, #0x16C]
  05f64	eb000000	 bl          NKDbgPrintfW
  05f68	e3a03001	 mov         r3, #1
  05f6c	e58d3008	 str         r3, [sp, #8]
  05f70	ea000001	 b           |$LN9@Initialize|
  05f74	e3a03000	 mov         r3, #0
  05f78	e58d3008	 str         r3, [sp, #8]
  05f7c		 |$LN9@Initialize|

; 2199 : 
; 2200 :     PoolInit();

  05f7c	e59d0020	 ldr         r0, [sp, #0x20]
  05f80	eb000000	 bl          |?PoolInit@CCppiDmaController@@IAAHXZ|

; 2201 : 
; 2202 :     Lock();

  05f84	e59d0020	 ldr         r0, [sp, #0x20]
  05f88	eb000000	 bl          |?Lock@CCppiDmaController@@IAAXXZ|

; 2203 : 
; 2204 :     // Validate input
; 2205 :     if (!paUdcBase || !pvUdcBase || !pvCppiBase)

  05f8c	e59d3024	 ldr         r3, [sp, #0x24]
  05f90	e3530000	 cmp         r3, #0
  05f94	0a000005	 beq         |$LN4@Initialize|
  05f98	e59d3028	 ldr         r3, [sp, #0x28]
  05f9c	e3530000	 cmp         r3, #0
  05fa0	0a000002	 beq         |$LN4@Initialize|
  05fa4	e59d302c	 ldr         r3, [sp, #0x2C]
  05fa8	e3530000	 cmp         r3, #0
  05fac	1a000008	 bne         |$LN5@Initialize|
  05fb0		 |$LN4@Initialize|

; 2206 :     {
; 2207 :         RETAILMSG(CPPI_DBG_ERROR,
; 2208 :             (L" CCppiDmaController::Initialize: ERROR - Invalid parametrs\r\n"));

  05fb0	e59f0118	 ldr         r0, [pc, #0x118]
  05fb4	eb000000	 bl          NKDbgPrintfW
  05fb8	e3a03001	 mov         r3, #1
  05fbc	e58d300c	 str         r3, [sp, #0xC]
  05fc0	ea000001	 b           |$LN11@Initialize|
  05fc4	e3a03000	 mov         r3, #0
  05fc8	e58d300c	 str         r3, [sp, #0xC]
  05fcc		 |$LN11@Initialize|

; 2209 :         goto _done;

  05fcc	ea00002e	 b           |$LN3@Initialize|
  05fd0	ea00002d	 b           |$_done$39793|
  05fd4		 |$LN5@Initialize|

; 2210 :     }
; 2211 : 
; 2212 :     // Do not allow multiple instances
; 2213 :     if (m_paUsbRegs)

  05fd4	e59d3020	 ldr         r3, [sp, #0x20]
  05fd8	e2833014	 add         r3, r3, #0x14
  05fdc	e5933000	 ldr         r3, [r3]
  05fe0	e3530000	 cmp         r3, #0
  05fe4	0a000008	 beq         |$LN2@Initialize|

; 2214 :     {
; 2215 :         RETAILMSG(CPPI_DBG_ERROR,
; 2216 :             (L" CCppiDmaController::Initialize: ERROR - Already initialized\r\n"));

  05fe8	e59f00dc	 ldr         r0, [pc, #0xDC]
  05fec	eb000000	 bl          NKDbgPrintfW
  05ff0	e3a03001	 mov         r3, #1
  05ff4	e58d3010	 str         r3, [sp, #0x10]
  05ff8	ea000001	 b           |$LN13@Initialize|
  05ffc	e3a03000	 mov         r3, #0
  06000	e58d3010	 str         r3, [sp, #0x10]
  06004		 |$LN13@Initialize|

; 2217 :         goto _done;

  06004	ea000020	 b           |$LN1@Initialize|
  06008	ea00001f	 b           |$_done$39793|
  0600c		 |$LN2@Initialize|

; 2218 :     }
; 2219 : 
; 2220 :     // Save input parameters
; 2221 :     m_paUsbRegs = paUdcBase;

  0600c	e59d3020	 ldr         r3, [sp, #0x20]
  06010	e2832014	 add         r2, r3, #0x14
  06014	e59d3024	 ldr         r3, [sp, #0x24]
  06018	e5823000	 str         r3, [r2]

; 2222 :     m_pUsbRegs  = (CSL_UsbRegs*)pvUdcBase;

  0601c	e59d3020	 ldr         r3, [sp, #0x20]
  06020	e2832018	 add         r2, r3, #0x18
  06024	e59d3028	 ldr         r3, [sp, #0x28]
  06028	e5823000	 str         r3, [r2]

; 2223 :     m_pCppiRegs = (CSL_CppiRegs*)pvCppiBase;

  0602c	e59d3020	 ldr         r3, [sp, #0x20]
  06030	e283201c	 add         r2, r3, #0x1C
  06034	e59d302c	 ldr         r3, [sp, #0x2C]
  06038	e5823000	 str         r3, [r2]

; 2224 : 
; 2225 :     // Disable RNIDS and AUTOREQ modes
; 2226 :     m_pUsbRegs->AUTOREQR = 0;

  0603c	e59d3020	 ldr         r3, [sp, #0x20]
  06040	e2833018	 add         r3, r3, #0x18
  06044	e5933000	 ldr         r3, [r3]
  06048	e2832014	 add         r2, r3, #0x14
  0604c	e3a03000	 mov         r3, #0
  06050	e5823000	 str         r3, [r2]

; 2227 :     m_pUsbRegs->TXMODE  = 0;

  06054	e59d3020	 ldr         r3, [sp, #0x20]
  06058	e2833018	 add         r3, r3, #0x18
  0605c	e5933000	 ldr         r3, [r3]
  06060	e2832070	 add         r2, r3, #0x70
  06064	e3a03000	 mov         r3, #0
  06068	e5823000	 str         r3, [r2]

; 2228 :     m_pUsbRegs->RXMODE  = 0;

  0606c	e59d3020	 ldr         r3, [sp, #0x20]
  06070	e2833018	 add         r3, r3, #0x18
  06074	e5933000	 ldr         r3, [r3]
  06078	e2832074	 add         r2, r3, #0x74
  0607c	e3a03000	 mov         r3, #0
  06080	e5823000	 str         r3, [r2]

; 2229 : 
; 2230 :     fResult = TRUE;

  06084	e3a03001	 mov         r3, #1
  06088	e58d3000	 str         r3, [sp]
  0608c		 |$LN1@Initialize|
  0608c		 |$LN3@Initialize|
  0608c		 |$_done$39793|

; 2231 : 
; 2232 : _done:
; 2233 :     Unlock();

  0608c	e59d0020	 ldr         r0, [sp, #0x20]
  06090	eb000000	 bl          |?Unlock@CCppiDmaController@@IAAXXZ|

; 2234 : 
; 2235 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2236 :         (L"-CCppiDmaController::Initialize\r\n"));

  06094	e59f002c	 ldr         r0, [pc, #0x2C]
  06098	eb000000	 bl          NKDbgPrintfW
  0609c	e3a03001	 mov         r3, #1
  060a0	e58d3014	 str         r3, [sp, #0x14]
  060a4	ea000001	 b           |$LN15@Initialize|
  060a8	e3a03000	 mov         r3, #0
  060ac	e58d3014	 str         r3, [sp, #0x14]
  060b0		 |$LN15@Initialize|

; 2237 : 
; 2238 :     return fResult;

  060b0	e59d3000	 ldr         r3, [sp]
  060b4	e58d3004	 str         r3, [sp, #4]

; 2239 : }

  060b8	e59d0004	 ldr         r0, [sp, #4]
  060bc	e28dd018	 add         sp, sp, #0x18
  060c0	e89d6000	 ldmia       sp, {sp, lr}
  060c4	e12fff1e	 bx          lr
  060c8		 |$LN19@Initialize|
  060c8		 |$LN20@Initialize|
  060c8	00000000	 DCD         |??_C@_1EE@BDBNFIAO@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$AN@|
  060cc		 |$LN21@Initialize|
  060cc	00000000	 DCD         |??_C@_1HO@JANNNAOB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@|
  060d0		 |$LN22@Initialize|
  060d0	00000000	 DCD         |??_C@_1HK@OFBPNCEL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@|
  060d4		 |$LN23@Initialize|
  060d4	00000000	 DCD         |??_C@_1EE@JGOBAOID@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$AN@|
  060d8		 |$M41196|

			 ENDP  ; |?Initialize@CCppiDmaController@@QAAHIPAX0@Z|, CCppiDmaController::Initialize

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T41208| DCD	|$LN5@Lock|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CCppiDmaController@@IAAXXZ| PROC ; CCppiDmaController::Lock

; 181  :     void Lock   () { EnterCriticalSection(&m_csLock); }

  00000		 |$LN5@Lock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M41205|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          EnterCriticalSection
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M41206|

			 ENDP  ; |?Lock@CCppiDmaController@@IAAXXZ|, CCppiDmaController::Lock


  00000			 AREA	 |.pdata|, PDATA
|$T41215| DCD	|$LN5@Unlock|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@CCppiDmaController@@IAAXXZ| PROC ; CCppiDmaController::Unlock

; 182  :     void Unlock () { LeaveCriticalSection(&m_csLock); }

  00000		 |$LN5@Unlock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M41212|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          LeaveCriticalSection
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M41213|

			 ENDP  ; |?Unlock@CCppiDmaController@@IAAXXZ|, CCppiDmaController::Unlock

	EXPORT	|??_C@_1EI@HOLJFEBG@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz@| [ DATA ] ; `string'
	EXPORT	|?PoolDeinit@CCppiDmaController@@IAAXXZ| ; CCppiDmaController::PoolDeinit
	EXPORT	|??_C@_1GO@HPKEBKC@?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@DICEJMBD@?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@CMGALBOM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz@| [ DATA ] ; `string'
	EXPORT	|?Deinitialize@CCppiDmaController@@QAAXXZ| ; CCppiDmaController::Deinitialize

  000f8			 AREA	 |.pdata|, PDATA
|$T41238| DCD	|$LN26@Deinitiali|
	DCD	0x4000c804
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@HOLJFEBG@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@HPKEBKC@?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| DCB "C"
	DCB	0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D", 0x0, "m"
	DCB	0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, ":", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "R"
	DCB	0x0, "X", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@DICEJMBD@?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| DCB "C"
	DCB	0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D", 0x0, "m"
	DCB	0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, ":", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "T"
	DCB	0x0, "X", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@CMGALBOM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  060d8			 AREA	 |.text|, CODE, ARM

  060d8		 |?Deinitialize@CCppiDmaController@@QAAXXZ| PROC ; CCppiDmaController::Deinitialize

; 2244 : {

  060d8		 |$LN26@Deinitiali|
  060d8	e1a0c00d	 mov         r12, sp
  060dc	e92d0001	 stmdb       sp!, {r0}
  060e0	e92d5000	 stmdb       sp!, {r12, lr}
  060e4	e24dd034	 sub         sp, sp, #0x34
  060e8		 |$M41235|

; 2245 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2246 :         (L"+CCppiDmaController::Deinitialize\r\n"));

  060e8	e59f0304	 ldr         r0, [pc, #0x304]
  060ec	eb000000	 bl          NKDbgPrintfW
  060f0	e3a03001	 mov         r3, #1
  060f4	e58d3014	 str         r3, [sp, #0x14]
  060f8	ea000001	 b           |$LN13@Deinitiali|
  060fc	e3a03000	 mov         r3, #0
  06100	e58d3014	 str         r3, [sp, #0x14]
  06104		 |$LN13@Deinitiali|

; 2247 : 
; 2248 :     Lock();

  06104	e59d003c	 ldr         r0, [sp, #0x3C]
  06108	eb000000	 bl          |?Lock@CCppiDmaController@@IAAXXZ|

; 2249 : 
; 2250 :     if (m_paUsbRegs)

  0610c	e59d303c	 ldr         r3, [sp, #0x3C]
  06110	e2833014	 add         r3, r3, #0x14
  06114	e5933000	 ldr         r3, [r3]
  06118	e3530000	 cmp         r3, #0
  0611c	0a0000a3	 beq         |$LN9@Deinitiali|

; 2251 :     {
; 2252 :         UINT32 i;
; 2253 : 
; 2254 :         // Abort any pending OUT transfers and release TX DMA channels
; 2255 :         for (i = 0; i < USB_CPPI_MAX_CHANNELS; i ++)

  06120	e3a03000	 mov         r3, #0
  06124	e58d3000	 str         r3, [sp]
  06128	ea000002	 b           |$LN8@Deinitiali|
  0612c		 |$LN7@Deinitiali|
  0612c	e59d3000	 ldr         r3, [sp]
  06130	e2833001	 add         r3, r3, #1
  06134	e58d3000	 str         r3, [sp]
  06138		 |$LN8@Deinitiali|
  06138	e59d3000	 ldr         r3, [sp]
  0613c	e353001e	 cmp         r3, #0x1E
  06140	2a000046	 bcs         |$LN6@Deinitiali|

; 2256 :         {
; 2257 :             if (m_pTxChannels[i])

  06144	e59d303c	 ldr         r3, [sp, #0x3C]
  06148	e283102c	 add         r1, r3, #0x2C
  0614c	e59d2000	 ldr         r2, [sp]
  06150	e3a03004	 mov         r3, #4
  06154	e0030392	 mul         r3, r2, r3
  06158	e0813003	 add         r3, r1, r3
  0615c	e5933000	 ldr         r3, [r3]
  06160	e3530000	 cmp         r3, #0
  06164	0a00003c	 beq         |$LN5@Deinitiali|

; 2258 :             {
; 2259 :                 DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2260 :                     (L"CCppiDmaController::Deinitialize: Closing TX channel\r\n", i));

  06168	e59d1000	 ldr         r1, [sp]
  0616c	e59f027c	 ldr         r0, [pc, #0x27C]
  06170	eb000000	 bl          NKDbgPrintfW
  06174	e3a03001	 mov         r3, #1
  06178	e58d3018	 str         r3, [sp, #0x18]
  0617c	ea000001	 b           |$LN15@Deinitiali|
  06180	e3a03000	 mov         r3, #0
  06184	e58d3018	 str         r3, [sp, #0x18]
  06188		 |$LN15@Deinitiali|

; 2261 :                 m_pTxChannels[i]->CancelTransfer();

  06188	e59d303c	 ldr         r3, [sp, #0x3C]
  0618c	e283102c	 add         r1, r3, #0x2C
  06190	e59d2000	 ldr         r2, [sp]
  06194	e3a03004	 mov         r3, #4
  06198	e0030392	 mul         r3, r2, r3
  0619c	e0813003	 add         r3, r1, r3
  061a0	e593e000	 ldr         lr, [r3]
  061a4	e59d1000	 ldr         r1, [sp]
  061a8	e3a03004	 mov         r3, #4
  061ac	e0020391	 mul         r2, r1, r3
  061b0	e59d303c	 ldr         r3, [sp, #0x3C]
  061b4	e283302c	 add         r3, r3, #0x2C
  061b8	e0833002	 add         r3, r3, r2
  061bc	e5930000	 ldr         r0, [r3]
  061c0	e59e3000	 ldr         r3, [lr]
  061c4	e2833008	 add         r3, r3, #8
  061c8	e5933000	 ldr         r3, [r3]
  061cc	e1a0e00f	 mov         lr, pc
  061d0	e12fff13	 bx          r3

; 2262 :                 delete m_pTxChannels[i];

  061d4	e59d303c	 ldr         r3, [sp, #0x3C]
  061d8	e283102c	 add         r1, r3, #0x2C
  061dc	e59d2000	 ldr         r2, [sp]
  061e0	e3a03004	 mov         r3, #4
  061e4	e0030392	 mul         r3, r2, r3
  061e8	e0813003	 add         r3, r1, r3
  061ec	e5933000	 ldr         r3, [r3]
  061f0	e58d3008	 str         r3, [sp, #8]
  061f4	e59d3008	 ldr         r3, [sp, #8]
  061f8	e58d3004	 str         r3, [sp, #4]
  061fc	e59d3004	 ldr         r3, [sp, #4]
  06200	e3530000	 cmp         r3, #0
  06204	0a00000a	 beq         |$LN16@Deinitiali|
  06208	e3a01001	 mov         r1, #1
  0620c	e59d3004	 ldr         r3, [sp, #4]
  06210	e5933000	 ldr         r3, [r3]
  06214	e59d0004	 ldr         r0, [sp, #4]
  06218	e5933000	 ldr         r3, [r3]
  0621c	e1a0e00f	 mov         lr, pc
  06220	e12fff13	 bx          r3
  06224	e58d001c	 str         r0, [sp, #0x1C]
  06228	e59d301c	 ldr         r3, [sp, #0x1C]
  0622c	e58d3020	 str         r3, [sp, #0x20]
  06230	ea000001	 b           |$LN17@Deinitiali|
  06234		 |$LN16@Deinitiali|
  06234	e3a03000	 mov         r3, #0
  06238	e58d3020	 str         r3, [sp, #0x20]
  0623c		 |$LN17@Deinitiali|

; 2263 :                 m_pTxChannels[i] = NULL;

  0623c	e59d303c	 ldr         r3, [sp, #0x3C]
  06240	e283102c	 add         r1, r3, #0x2C
  06244	e59d2000	 ldr         r2, [sp]
  06248	e3a03004	 mov         r3, #4
  0624c	e0030392	 mul         r3, r2, r3
  06250	e0812003	 add         r2, r1, r3
  06254	e3a03000	 mov         r3, #0
  06258	e5823000	 str         r3, [r2]
  0625c		 |$LN5@Deinitiali|

; 2264 :             }
; 2265 :         }

  0625c	eaffffb2	 b           |$LN7@Deinitiali|
  06260		 |$LN6@Deinitiali|

; 2266 : 
; 2267 :         // Abort any pending IN transfers and release RX DMA channels
; 2268 :         for (i = 0; i < USB_CPPI_MAX_CHANNELS; i ++)

  06260	e3a03000	 mov         r3, #0
  06264	e58d3000	 str         r3, [sp]
  06268	ea000002	 b           |$LN4@Deinitiali|
  0626c		 |$LN3@Deinitiali|
  0626c	e59d3000	 ldr         r3, [sp]
  06270	e2833001	 add         r3, r3, #1
  06274	e58d3000	 str         r3, [sp]
  06278		 |$LN4@Deinitiali|
  06278	e59d3000	 ldr         r3, [sp]
  0627c	e353001e	 cmp         r3, #0x1E
  06280	2a000046	 bcs         |$LN2@Deinitiali|

; 2269 :         {
; 2270 :             if (m_pRxChannels[i])

  06284	e59d303c	 ldr         r3, [sp, #0x3C]
  06288	e28310a4	 add         r1, r3, #0xA4
  0628c	e59d2000	 ldr         r2, [sp]
  06290	e3a03004	 mov         r3, #4
  06294	e0030392	 mul         r3, r2, r3
  06298	e0813003	 add         r3, r1, r3
  0629c	e5933000	 ldr         r3, [r3]
  062a0	e3530000	 cmp         r3, #0
  062a4	0a00003c	 beq         |$LN1@Deinitiali|

; 2271 :             {
; 2272 :                 DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2273 :                     (L"CCppiDmaController::Deinitialize: Closing RX channel\r\n", i));

  062a8	e59d1000	 ldr         r1, [sp]
  062ac	e59f0138	 ldr         r0, [pc, #0x138]
  062b0	eb000000	 bl          NKDbgPrintfW
  062b4	e3a03001	 mov         r3, #1
  062b8	e58d3024	 str         r3, [sp, #0x24]
  062bc	ea000001	 b           |$LN19@Deinitiali|
  062c0	e3a03000	 mov         r3, #0
  062c4	e58d3024	 str         r3, [sp, #0x24]
  062c8		 |$LN19@Deinitiali|

; 2274 :                 m_pRxChannels[i]->CancelTransfer();

  062c8	e59d303c	 ldr         r3, [sp, #0x3C]
  062cc	e28310a4	 add         r1, r3, #0xA4
  062d0	e59d2000	 ldr         r2, [sp]
  062d4	e3a03004	 mov         r3, #4
  062d8	e0030392	 mul         r3, r2, r3
  062dc	e0813003	 add         r3, r1, r3
  062e0	e593e000	 ldr         lr, [r3]
  062e4	e59d1000	 ldr         r1, [sp]
  062e8	e3a03004	 mov         r3, #4
  062ec	e0020391	 mul         r2, r1, r3
  062f0	e59d303c	 ldr         r3, [sp, #0x3C]
  062f4	e28330a4	 add         r3, r3, #0xA4
  062f8	e0833002	 add         r3, r3, r2
  062fc	e5930000	 ldr         r0, [r3]
  06300	e59e3000	 ldr         r3, [lr]
  06304	e2833008	 add         r3, r3, #8
  06308	e5933000	 ldr         r3, [r3]
  0630c	e1a0e00f	 mov         lr, pc
  06310	e12fff13	 bx          r3

; 2275 :                 delete m_pRxChannels[i];

  06314	e59d303c	 ldr         r3, [sp, #0x3C]
  06318	e28310a4	 add         r1, r3, #0xA4
  0631c	e59d2000	 ldr         r2, [sp]
  06320	e3a03004	 mov         r3, #4
  06324	e0030392	 mul         r3, r2, r3
  06328	e0813003	 add         r3, r1, r3
  0632c	e5933000	 ldr         r3, [r3]
  06330	e58d3010	 str         r3, [sp, #0x10]
  06334	e59d3010	 ldr         r3, [sp, #0x10]
  06338	e58d300c	 str         r3, [sp, #0xC]
  0633c	e59d300c	 ldr         r3, [sp, #0xC]
  06340	e3530000	 cmp         r3, #0
  06344	0a00000a	 beq         |$LN20@Deinitiali|
  06348	e3a01001	 mov         r1, #1
  0634c	e59d300c	 ldr         r3, [sp, #0xC]
  06350	e5933000	 ldr         r3, [r3]
  06354	e59d000c	 ldr         r0, [sp, #0xC]
  06358	e5933000	 ldr         r3, [r3]
  0635c	e1a0e00f	 mov         lr, pc
  06360	e12fff13	 bx          r3
  06364	e58d0028	 str         r0, [sp, #0x28]
  06368	e59d3028	 ldr         r3, [sp, #0x28]
  0636c	e58d302c	 str         r3, [sp, #0x2C]
  06370	ea000001	 b           |$LN21@Deinitiali|
  06374		 |$LN20@Deinitiali|
  06374	e3a03000	 mov         r3, #0
  06378	e58d302c	 str         r3, [sp, #0x2C]
  0637c		 |$LN21@Deinitiali|

; 2276 :                 m_pRxChannels[i] = NULL;

  0637c	e59d303c	 ldr         r3, [sp, #0x3C]
  06380	e28310a4	 add         r1, r3, #0xA4
  06384	e59d2000	 ldr         r2, [sp]
  06388	e3a03004	 mov         r3, #4
  0638c	e0030392	 mul         r3, r2, r3
  06390	e0812003	 add         r2, r1, r3
  06394	e3a03000	 mov         r3, #0
  06398	e5823000	 str         r3, [r2]
  0639c		 |$LN1@Deinitiali|

; 2277 :             }
; 2278 :         }

  0639c	eaffffb2	 b           |$LN3@Deinitiali|
  063a0		 |$LN2@Deinitiali|

; 2279 : 
; 2280 :         m_paUsbRegs = 0;

  063a0	e59d303c	 ldr         r3, [sp, #0x3C]
  063a4	e2832014	 add         r2, r3, #0x14
  063a8	e3a03000	 mov         r3, #0
  063ac	e5823000	 str         r3, [r2]
  063b0		 |$LN9@Deinitiali|

; 2281 :     }
; 2282 : 
; 2283 :     Unlock();

  063b0	e59d003c	 ldr         r0, [sp, #0x3C]
  063b4	eb000000	 bl          |?Unlock@CCppiDmaController@@IAAXXZ|

; 2284 : 
; 2285 :     PoolDeinit();

  063b8	e59d003c	 ldr         r0, [sp, #0x3C]
  063bc	eb000000	 bl          |?PoolDeinit@CCppiDmaController@@IAAXXZ|

; 2286 : 
; 2287 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2288 :         (L"-CCppiDmaController::Deinitialize\r\n"));

  063c0	e59f0020	 ldr         r0, [pc, #0x20]
  063c4	eb000000	 bl          NKDbgPrintfW
  063c8	e3a03001	 mov         r3, #1
  063cc	e58d3030	 str         r3, [sp, #0x30]
  063d0	ea000001	 b           |$LN23@Deinitiali|
  063d4	e3a03000	 mov         r3, #0
  063d8	e58d3030	 str         r3, [sp, #0x30]
  063dc		 |$LN23@Deinitiali|

; 2289 : }

  063dc	e28dd034	 add         sp, sp, #0x34
  063e0	e89d6000	 ldmia       sp, {sp, lr}
  063e4	e12fff1e	 bx          lr
  063e8		 |$LN27@Deinitiali|
  063e8		 |$LN28@Deinitiali|
  063e8	00000000	 DCD         |??_C@_1EI@HOLJFEBG@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz@|
  063ec		 |$LN29@Deinitiali|
  063ec	00000000	 DCD         |??_C@_1GO@HPKEBKC@?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@|
  063f0		 |$LN30@Deinitiali|
  063f0	00000000	 DCD         |??_C@_1GO@DICEJMBD@?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@|
  063f4		 |$LN31@Deinitiali|
  063f4	00000000	 DCD         |??_C@_1EI@CMGALBOM@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz@|
  063f8		 |$M41236|

			 ENDP  ; |?Deinitialize@CCppiDmaController@@QAAXXZ|, CCppiDmaController::Deinitialize

	EXPORT	|??_C@_1GE@HLJJKILA@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@OBAJDHJC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@KGCCHMMK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| [ DATA ] ; `string'
	EXPORT	|?GetRefCount@CCppiDmaChannel@@QAAIXZ|	; CCppiDmaChannel::GetRefCount
	EXPORT	|?AddRef@CCppiDmaChannel@@QAAIXZ|	; CCppiDmaChannel::AddRef
	EXPORT	|??_C@_1JI@POFIPIAC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@DCBMPOIF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@JNKIDJLP@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| [ DATA ] ; `string'
	EXPORT	|?AllocChannel@CCppiDmaController@@QAAPAVCCppiDmaChannel@@EEP6AXPAV2@IIIIPAX1@Z@Z| ; CCppiDmaController::AllocChannel
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00100			 AREA	 |.pdata|, PDATA
|$T41271| DCD	|$LN33@AllocChann|
	DCD	0x4000da04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HLJJKILA@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, "/", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@OBAJDHJC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "O", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@KGCCHMMK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "(", 0x0, "%"
	DCB	0x0, "u", 0x0, ")", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, "(", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "u"
	DCB	0x0, "/", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@POFIPIAC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@DCBMPOIF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "l", 0x0, " ", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, " ", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, "/"
	DCB	0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@JNKIDJLP@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, "/", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  063f8			 AREA	 |.text|, CODE, ARM

  063f8		 |?AllocChannel@CCppiDmaController@@QAAPAVCCppiDmaChannel@@EEP6AXPAV2@IIIIPAX1@Z@Z| PROC ; CCppiDmaController::AllocChannel

; 2296 : {

  063f8		 |$LN33@AllocChann|
  063f8	e1a0c00d	 mov         r12, sp
  063fc	e92d000f	 stmdb       sp!, {r0 - r3}
  06400	e92d5000	 stmdb       sp!, {r12, lr}
  06404	e24dd05c	 sub         sp, sp, #0x5C
  06408		 |$M41268|

; 2297 :     UINT8 chNum = epNum - 1;

  06408	e5dd3068	 ldrb        r3, [sp, #0x68]
  0640c	e2433001	 sub         r3, r3, #1
  06410	e20330ff	 and         r3, r3, #0xFF
  06414	e5cd3008	 strb        r3, [sp, #8]

; 2298 :     CCppiDmaChannel* pChannel = NULL;

  06418	e3a03000	 mov         r3, #0
  0641c	e58d300c	 str         r3, [sp, #0xC]

; 2299 : 
; 2300 :     DEBUGMSG(ZONE_PDD_DMA || ZONE_VERBOSE,
; 2301 :         (L"+CCppiDmaController::AllocChannel: EP %u/0x%02x\r\n",
; 2302 :         epNum,
; 2303 :         epAddr));

  06420	ea000008	 b           |$LN13@AllocChann|
  06424	e5dd306c	 ldrb        r3, [sp, #0x6C]
  06428	e1a02003	 mov         r2, r3
  0642c	e5dd3068	 ldrb        r3, [sp, #0x68]
  06430	e1a01003	 mov         r1, r3
  06434	e59f0320	 ldr         r0, [pc, #0x320]
  06438	eb000000	 bl          NKDbgPrintfW
  0643c	e3a03001	 mov         r3, #1
  06440	e58d3024	 str         r3, [sp, #0x24]
  06444	ea000001	 b           |$LN14@AllocChann|
  06448		 |$LN13@AllocChann|
  06448	e3a03000	 mov         r3, #0
  0644c	e58d3024	 str         r3, [sp, #0x24]
  06450		 |$LN14@AllocChann|

; 2304 : 
; 2305 :     if (chNum >= USB_CPPI_MAX_CHANNELS)

  06450	e5dd3008	 ldrb        r3, [sp, #8]
  06454	e353001e	 cmp         r3, #0x1E
  06458	ba00000b	 blt         |$LN10@AllocChann|

; 2306 :     {
; 2307 :         RETAILMSG(CPPI_DBG_ERROR,
; 2308 :             (L" CCppiDmaController::AllocChannel: ERROR - Channel out of range %u/%u\r\n",
; 2309 :             chNum,
; 2310 :             USB_CPPI_MAX_CHANNELS));

  0645c	e3a0201e	 mov         r2, #0x1E
  06460	e5dd3008	 ldrb        r3, [sp, #8]
  06464	e1a01003	 mov         r1, r3
  06468	e59f02e8	 ldr         r0, [pc, #0x2E8]
  0646c	eb000000	 bl          NKDbgPrintfW
  06470	e3a03001	 mov         r3, #1
  06474	e58d3028	 str         r3, [sp, #0x28]
  06478	ea000001	 b           |$LN16@AllocChann|
  0647c	e3a03000	 mov         r3, #0
  06480	e58d3028	 str         r3, [sp, #0x28]
  06484		 |$LN16@AllocChann|

; 2311 :         goto _doneUnsafe;

  06484	ea00009b	 b           |$LN9@AllocChann|
  06488	ea00009a	 b           |$_doneUnsafe$39839|
  0648c		 |$LN10@AllocChann|

; 2312 :     }
; 2313 : 
; 2314 :     // Go safe
; 2315 :     Lock();

  0648c	e59d0064	 ldr         r0, [sp, #0x64]
  06490	eb000000	 bl          |?Lock@CCppiDmaController@@IAAXXZ|

; 2316 : 
; 2317 :     if (!m_paUsbRegs)

  06494	e59d3064	 ldr         r3, [sp, #0x64]
  06498	e2833014	 add         r3, r3, #0x14
  0649c	e5933000	 ldr         r3, [r3]
  064a0	e3530000	 cmp         r3, #0
  064a4	1a000008	 bne         |$LN8@AllocChann|

; 2318 :     {
; 2319 :         RETAILMSG(CPPI_DBG_ERROR,
; 2320 :             (L" CCppiDmaController::AllocChannel: ERROR - DMA controller not initialized\r\n"));

  064a8	e59f02a4	 ldr         r0, [pc, #0x2A4]
  064ac	eb000000	 bl          NKDbgPrintfW
  064b0	e3a03001	 mov         r3, #1
  064b4	e58d302c	 str         r3, [sp, #0x2C]
  064b8	ea000001	 b           |$LN18@AllocChann|
  064bc	e3a03000	 mov         r3, #0
  064c0	e58d302c	 str         r3, [sp, #0x2C]
  064c4		 |$LN18@AllocChann|

; 2321 :         goto _doneSafe;

  064c4	ea000089	 b           |$LN7@AllocChann|
  064c8	ea000088	 b           |$_doneSafe$39843|
  064cc		 |$LN8@AllocChann|

; 2322 :     }
; 2323 : 
; 2324 :     if (USB_ENDPOINT_DIRECTION_OUT(epAddr))

  064cc	e5dd306c	 ldrb        r3, [sp, #0x6C]
  064d0	e3130080	 tst         r3, #0x80
  064d4	1a00002f	 bne         |$LN6@AllocChann|

; 2325 :     {
; 2326 :         // Allocate OUT channel
; 2327 :         if (!m_pTxChannels[chNum])

  064d8	e59d3064	 ldr         r3, [sp, #0x64]
  064dc	e283102c	 add         r1, r3, #0x2C
  064e0	e5dd3008	 ldrb        r3, [sp, #8]
  064e4	e1a02003	 mov         r2, r3
  064e8	e3a03004	 mov         r3, #4
  064ec	e0030392	 mul         r3, r2, r3
  064f0	e0813003	 add         r3, r1, r3
  064f4	e5933000	 ldr         r3, [r3]
  064f8	e3530000	 cmp         r3, #0
  064fc	1a00001b	 bne         |$LN5@AllocChann|

; 2328 :         {
; 2329 :             m_pTxChannels[chNum] = new CCppiDmaTxChannel(this, epNum, pCallback);

  06500	e3a000c8	 mov         r0, #0xC8
  06504	eb000000	 bl          |??2@YAPAXI@Z|
  06508	e58d0030	 str         r0, [sp, #0x30]
  0650c	e59d3030	 ldr         r3, [sp, #0x30]
  06510	e58d3010	 str         r3, [sp, #0x10]
  06514	e59d3010	 ldr         r3, [sp, #0x10]
  06518	e3530000	 cmp         r3, #0
  0651c	0a000008	 beq         |$LN19@AllocChann|
  06520	e59d3070	 ldr         r3, [sp, #0x70]
  06524	e5dd2068	 ldrb        r2, [sp, #0x68]
  06528	e59d1064	 ldr         r1, [sp, #0x64]
  0652c	e59d0010	 ldr         r0, [sp, #0x10]
  06530	eb000000	 bl          |??0CCppiDmaTxChannel@@QAA@PAVCCppiDmaController@@EP6AXPAVCCppiDmaChannel@@IIIIPAX2@Z@Z|
  06534	e58d0034	 str         r0, [sp, #0x34]
  06538	e59d3034	 ldr         r3, [sp, #0x34]
  0653c	e58d3038	 str         r3, [sp, #0x38]
  06540	ea000001	 b           |$LN20@AllocChann|
  06544		 |$LN19@AllocChann|
  06544	e3a03000	 mov         r3, #0
  06548	e58d3038	 str         r3, [sp, #0x38]
  0654c		 |$LN20@AllocChann|
  0654c	e59d3064	 ldr         r3, [sp, #0x64]
  06550	e283102c	 add         r1, r3, #0x2C
  06554	e5dd3008	 ldrb        r3, [sp, #8]
  06558	e1a02003	 mov         r2, r3
  0655c	e3a03004	 mov         r3, #4
  06560	e0030392	 mul         r3, r2, r3
  06564	e0812003	 add         r2, r1, r3
  06568	e59d3038	 ldr         r3, [sp, #0x38]
  0656c	e5823000	 str         r3, [r2]
  06570		 |$LN5@AllocChann|

; 2330 :         }
; 2331 : 
; 2332 :         pChannel = m_pTxChannels[chNum];

  06570	e59d3064	 ldr         r3, [sp, #0x64]
  06574	e283102c	 add         r1, r3, #0x2C
  06578	e5dd3008	 ldrb        r3, [sp, #8]
  0657c	e1a02003	 mov         r2, r3
  06580	e3a03004	 mov         r3, #4
  06584	e0030392	 mul         r3, r2, r3
  06588	e0813003	 add         r3, r1, r3
  0658c	e5933000	 ldr         r3, [r3]
  06590	e58d300c	 str         r3, [sp, #0xC]

; 2333 :     }
; 2334 :     else

  06594	ea00002e	 b           |$LN4@AllocChann|
  06598		 |$LN6@AllocChann|

; 2335 :     {
; 2336 :         // Allocate IN channel
; 2337 :         if (!m_pRxChannels[chNum])

  06598	e59d3064	 ldr         r3, [sp, #0x64]
  0659c	e28310a4	 add         r1, r3, #0xA4
  065a0	e5dd3008	 ldrb        r3, [sp, #8]
  065a4	e1a02003	 mov         r2, r3
  065a8	e3a03004	 mov         r3, #4
  065ac	e0030392	 mul         r3, r2, r3
  065b0	e0813003	 add         r3, r1, r3
  065b4	e5933000	 ldr         r3, [r3]
  065b8	e3530000	 cmp         r3, #0
  065bc	1a00001b	 bne         |$LN3@AllocChann|

; 2338 :         {
; 2339 :             m_pRxChannels[chNum] = new CCppiDmaRxChannel(this, epNum, pCallback);

  065c0	e3a000b8	 mov         r0, #0xB8
  065c4	eb000000	 bl          |??2@YAPAXI@Z|
  065c8	e58d003c	 str         r0, [sp, #0x3C]
  065cc	e59d303c	 ldr         r3, [sp, #0x3C]
  065d0	e58d3014	 str         r3, [sp, #0x14]
  065d4	e59d3014	 ldr         r3, [sp, #0x14]
  065d8	e3530000	 cmp         r3, #0
  065dc	0a000008	 beq         |$LN21@AllocChann|
  065e0	e59d3070	 ldr         r3, [sp, #0x70]
  065e4	e5dd2068	 ldrb        r2, [sp, #0x68]
  065e8	e59d1064	 ldr         r1, [sp, #0x64]
  065ec	e59d0014	 ldr         r0, [sp, #0x14]
  065f0	eb000000	 bl          |??0CCppiDmaRxChannel@@QAA@PAVCCppiDmaController@@EP6AXPAVCCppiDmaChannel@@IIIIPAX2@Z@Z|
  065f4	e58d0040	 str         r0, [sp, #0x40]
  065f8	e59d3040	 ldr         r3, [sp, #0x40]
  065fc	e58d3044	 str         r3, [sp, #0x44]
  06600	ea000001	 b           |$LN22@AllocChann|
  06604		 |$LN21@AllocChann|
  06604	e3a03000	 mov         r3, #0
  06608	e58d3044	 str         r3, [sp, #0x44]
  0660c		 |$LN22@AllocChann|
  0660c	e59d3064	 ldr         r3, [sp, #0x64]
  06610	e28310a4	 add         r1, r3, #0xA4
  06614	e5dd3008	 ldrb        r3, [sp, #8]
  06618	e1a02003	 mov         r2, r3
  0661c	e3a03004	 mov         r3, #4
  06620	e0030392	 mul         r3, r2, r3
  06624	e0812003	 add         r2, r1, r3
  06628	e59d3044	 ldr         r3, [sp, #0x44]
  0662c	e5823000	 str         r3, [r2]
  06630		 |$LN3@AllocChann|

; 2340 :         }
; 2341 : 
; 2342 :         pChannel = m_pRxChannels[chNum];

  06630	e59d3064	 ldr         r3, [sp, #0x64]
  06634	e28310a4	 add         r1, r3, #0xA4
  06638	e5dd3008	 ldrb        r3, [sp, #8]
  0663c	e1a02003	 mov         r2, r3
  06640	e3a03004	 mov         r3, #4
  06644	e0030392	 mul         r3, r2, r3
  06648	e0813003	 add         r3, r1, r3
  0664c	e5933000	 ldr         r3, [r3]
  06650	e58d300c	 str         r3, [sp, #0xC]
  06654		 |$LN4@AllocChann|

; 2343 :     }
; 2344 : 
; 2345 :     if (pChannel)

  06654	e59d300c	 ldr         r3, [sp, #0xC]
  06658	e3530000	 cmp         r3, #0
  0665c	0a00001c	 beq         |$LN2@AllocChann|

; 2346 :     {
; 2347 :         pChannel->AddRef();

  06660	e59d000c	 ldr         r0, [sp, #0xC]
  06664	eb000000	 bl          |?AddRef@CCppiDmaChannel@@QAAIXZ|

; 2348 : 
; 2349 :         DEBUGMSG(CPPI_DBG_CHANNEL,
; 2350 :             (L" CCppiDmaController::AllocChannel: AddRef(%u) %s Ch %u (EP %u/0x%02x)\r\n",
; 2351 :             pChannel->GetRefCount(),
; 2352 :             USB_ENDPOINT_DIRECTION_OUT(epAddr) ? L"OUT" : L"IN",
; 2353 :             chNum,
; 2354 :             epNum,
; 2355 :             epAddr));

  06668	ea000016	 b           |$LN25@AllocChann|
  0666c	e5dd306c	 ldrb        r3, [sp, #0x6C]
  06670	e3130080	 tst         r3, #0x80
  06674	1a000002	 bne         |$LN23@AllocChann|
  06678	e59f30d0	 ldr         r3, [pc, #0xD0]
  0667c	e58d3048	 str         r3, [sp, #0x48]
  06680	ea000001	 b           |$LN24@AllocChann|
  06684		 |$LN23@AllocChann|
  06684	e59f30c0	 ldr         r3, [pc, #0xC0]
  06688	e58d3048	 str         r3, [sp, #0x48]
  0668c		 |$LN24@AllocChann|
  0668c	e59d000c	 ldr         r0, [sp, #0xC]
  06690	eb000000	 bl          |?GetRefCount@CCppiDmaChannel@@QAAIXZ|
  06694	e58d004c	 str         r0, [sp, #0x4C]
  06698	e5dd306c	 ldrb        r3, [sp, #0x6C]
  0669c	e58d3004	 str         r3, [sp, #4]
  066a0	e5dd3068	 ldrb        r3, [sp, #0x68]
  066a4	e58d3000	 str         r3, [sp]
  066a8	e5dd3008	 ldrb        r3, [sp, #8]
  066ac	e59d2048	 ldr         r2, [sp, #0x48]
  066b0	e59d104c	 ldr         r1, [sp, #0x4C]
  066b4	e59f008c	 ldr         r0, [pc, #0x8C]
  066b8	eb000000	 bl          NKDbgPrintfW
  066bc	e3a03001	 mov         r3, #1
  066c0	e58d3050	 str         r3, [sp, #0x50]
  066c4	ea000001	 b           |$LN26@AllocChann|
  066c8		 |$LN25@AllocChann|
  066c8	e3a03000	 mov         r3, #0
  066cc	e58d3050	 str         r3, [sp, #0x50]
  066d0		 |$LN26@AllocChann|

; 2356 :     }
; 2357 :     else

  066d0	ea000006	 b           |$LN1@AllocChann|
  066d4		 |$LN2@AllocChann|

; 2358 :     {
; 2359 :         RETAILMSG(CPPI_DBG_ERROR,
; 2360 :             (L" CCppiDmaController::AllocChannel: ERROR - Out of memory\r\n"));

  066d4	e59f0068	 ldr         r0, [pc, #0x68]
  066d8	eb000000	 bl          NKDbgPrintfW
  066dc	e3a03001	 mov         r3, #1
  066e0	e58d3054	 str         r3, [sp, #0x54]
  066e4	ea000001	 b           |$LN28@AllocChann|
  066e8	e3a03000	 mov         r3, #0
  066ec	e58d3054	 str         r3, [sp, #0x54]
  066f0		 |$LN28@AllocChann|
  066f0		 |$LN1@AllocChann|
  066f0		 |$LN7@AllocChann|
  066f0		 |$_doneSafe$39843|

; 2361 :     }
; 2362 : 
; 2363 : _doneSafe:
; 2364 : 
; 2365 :     // Go unsafe
; 2366 :     Unlock();

  066f0	e59d0064	 ldr         r0, [sp, #0x64]
  066f4	eb000000	 bl          |?Unlock@CCppiDmaController@@IAAXXZ|
  066f8		 |$LN9@AllocChann|
  066f8		 |$_doneUnsafe$39839|

; 2367 : 
; 2368 : _doneUnsafe:
; 2369 :     DEBUGMSG(ZONE_PDD_DMA || ZONE_VERBOSE,
; 2370 :         (L"-CCppiDmaController::AllocChannel: EP %u/0x%02x\r\n",
; 2371 :         epNum,
; 2372 :         epAddr));

  066f8	ea000008	 b           |$LN29@AllocChann|
  066fc	e5dd306c	 ldrb        r3, [sp, #0x6C]
  06700	e1a02003	 mov         r2, r3
  06704	e5dd3068	 ldrb        r3, [sp, #0x68]
  06708	e1a01003	 mov         r1, r3
  0670c	e59f002c	 ldr         r0, [pc, #0x2C]
  06710	eb000000	 bl          NKDbgPrintfW
  06714	e3a03001	 mov         r3, #1
  06718	e58d3058	 str         r3, [sp, #0x58]
  0671c	ea000001	 b           |$LN30@AllocChann|
  06720		 |$LN29@AllocChann|
  06720	e3a03000	 mov         r3, #0
  06724	e58d3058	 str         r3, [sp, #0x58]
  06728		 |$LN30@AllocChann|

; 2373 : 
; 2374 :     return pChannel;

  06728	e59d300c	 ldr         r3, [sp, #0xC]
  0672c	e58d3020	 str         r3, [sp, #0x20]

; 2375 : }

  06730	e59d0020	 ldr         r0, [sp, #0x20]
  06734	e28dd05c	 add         sp, sp, #0x5C
  06738	e89d6000	 ldmia       sp, {sp, lr}
  0673c	e12fff1e	 bx          lr
  06740		 |$LN34@AllocChann|
  06740		 |$LN35@AllocChann|
  06740	00000000	 DCD         |??_C@_1GE@HLJJKILA@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@|
  06744		 |$LN36@AllocChann|
  06744	00000000	 DCD         |??_C@_1HG@OBAJDHJC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@|
  06748		 |$LN37@AllocChann|
  06748	00000000	 DCD         |??_C@_1JA@KGCCHMMK@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@|
  0674c		 |$LN38@AllocChann|
  0674c	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  06750		 |$LN39@AllocChann|
  06750	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  06754		 |$LN40@AllocChann|
  06754	00000000	 DCD         |??_C@_1JI@POFIPIAC@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@|
  06758		 |$LN41@AllocChann|
  06758	00000000	 DCD         |??_C@_1JA@DCBMPOIF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@|
  0675c		 |$LN42@AllocChann|
  0675c	00000000	 DCD         |??_C@_1GE@JNKIDJLP@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAl?$AAl?$AAo?$AAc?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe@|
  06760		 |$M41269|

			 ENDP  ; |?AllocChannel@CCppiDmaController@@QAAPAVCCppiDmaChannel@@EEP6AXPAV2@IIIIPAX1@Z@Z|, CCppiDmaController::AllocChannel

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T41286| DCD	|$LN5@AddRef|
	DCD	0x40001304
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddRef@CCppiDmaChannel@@QAAIXZ| PROC	; CCppiDmaChannel::AddRef

; 60   :     UINT32 AddRef      () { return ++m_nRefCount; }

  00000		 |$LN5@AddRef|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M41283|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833008	 add         r3, r3, #8
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2832001	 add         r2, r3, #1
  00020	e59d300c	 ldr         r3, [sp, #0xC]
  00024	e2833008	 add         r3, r3, #8
  00028	e5832000	 str         r2, [r3]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2833008	 add         r3, r3, #8
  00034	e5933000	 ldr         r3, [r3]
  00038	e58d3000	 str         r3, [sp]
  0003c	e59d0000	 ldr         r0, [sp]
  00040	e28dd004	 add         sp, sp, #4
  00044	e89d6000	 ldmia       sp, {sp, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M41284|

			 ENDP  ; |?AddRef@CCppiDmaChannel@@QAAIXZ|, CCppiDmaChannel::AddRef


  00000			 AREA	 |.pdata|, PDATA
|$T41294| DCD	|$LN5@GetRefCoun|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRefCount@CCppiDmaChannel@@QAAIXZ| PROC ; CCppiDmaChannel::GetRefCount

; 62   :     UINT32 GetRefCount () { return   m_nRefCount; }

  00000		 |$LN5@GetRefCoun|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M41291|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833008	 add         r3, r3, #8
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M41292|

			 ENDP  ; |?GetRefCount@CCppiDmaChannel@@QAAIXZ|, CCppiDmaChannel::GetRefCount

	EXPORT	|??_C@_1EM@IABFHAGL@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAC?$AAh?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|?Release@CCppiDmaChannel@@QAAIXZ|	; CCppiDmaChannel::Release
	EXPORT	|?ChannelNumber@CCppiDmaChannel@@IBAEXZ| ; CCppiDmaChannel::ChannelNumber
	EXPORT	|??_C@_1EM@BDHINKGN@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAC?$AAh?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|?ReleaseChannel@CCppiDmaController@@QAAXPAVCCppiDmaChannel@@@Z| ; CCppiDmaController::ReleaseChannel

  00108			 AREA	 |.pdata|, PDATA
|$T41321| DCD	|$LN29@ReleaseCha|
	DCD	0x4000db04
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@IABFHAGL@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAC?$AAh?$AAa?$AAn@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@BDHINKGN@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAC?$AAh?$AAa?$AAn@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  06760			 AREA	 |.text|, CODE, ARM

  06760		 |?ReleaseChannel@CCppiDmaController@@QAAXPAVCCppiDmaChannel@@@Z| PROC ; CCppiDmaController::ReleaseChannel

; 2379 : {

  06760		 |$LN29@ReleaseCha|
  06760	e1a0c00d	 mov         r12, sp
  06764	e92d0003	 stmdb       sp!, {r0, r1}
  06768	e92d5000	 stmdb       sp!, {r12, lr}
  0676c	e24dd048	 sub         sp, sp, #0x48
  06770		 |$M41318|

; 2380 :     UINT8 chNum;
; 2381 :     BOOL isOut;
; 2382 : 
; 2383 :     DEBUGMSG(ZONE_PDD_DMA || ZONE_VERBOSE,
; 2384 :         (L"+CCppiDmaController::ReleaseChannel\r\n"));

  06770	ea000004	 b           |$LN9@ReleaseCha|
  06774	e59f034c	 ldr         r0, [pc, #0x34C]
  06778	eb000000	 bl          NKDbgPrintfW
  0677c	e3a03001	 mov         r3, #1
  06780	e58d3010	 str         r3, [sp, #0x10]
  06784	ea000001	 b           |$LN10@ReleaseCha|
  06788		 |$LN9@ReleaseCha|
  06788	e3a03000	 mov         r3, #0
  0678c	e58d3010	 str         r3, [sp, #0x10]
  06790		 |$LN10@ReleaseCha|

; 2385 : 
; 2386 :     DEBUGCHK(pChannel != NULL);

  06790	e59d3054	 ldr         r3, [sp, #0x54]
  06794	e3530000	 cmp         r3, #0
  06798	0a000002	 beq         |$LN11@ReleaseCha|
  0679c	e3a03001	 mov         r3, #1
  067a0	e58d3014	 str         r3, [sp, #0x14]
  067a4	ea000008	 b           |$LN12@ReleaseCha|
  067a8		 |$LN11@ReleaseCha|
  067a8	e3a03c09	 mov         r3, #9, 24
  067ac	e3833052	 orr         r3, r3, #0x52
  067b0	e59f230c	 ldr         r2, [pc, #0x30C]
  067b4	e59f1304	 ldr         r1, [pc, #0x304]
  067b8	e59f02fc	 ldr         r0, [pc, #0x2FC]
  067bc	eb000000	 bl          NKDbgPrintfW
  067c0	e6000010	 __debugbreak_ce
  067c4	e3a03000	 mov         r3, #0
  067c8	e58d3014	 str         r3, [sp, #0x14]
  067cc		 |$LN12@ReleaseCha|

; 2387 :     if(pChannel != NULL)

  067cc	e59d3054	 ldr         r3, [sp, #0x54]
  067d0	e3530000	 cmp         r3, #0
  067d4	0a0000ac	 beq         |$LN6@ReleaseCha|

; 2388 :     {
; 2389 :         // Go safe
; 2390 :         Lock();

  067d8	e59d0050	 ldr         r0, [sp, #0x50]
  067dc	eb000000	 bl          |?Lock@CCppiDmaController@@IAAXXZ|

; 2391 : 
; 2392 :         DEBUGCHK(pChannel->GetRefCount());

  067e0	e59d0054	 ldr         r0, [sp, #0x54]
  067e4	eb000000	 bl          |?GetRefCount@CCppiDmaChannel@@QAAIXZ|
  067e8	e58d0018	 str         r0, [sp, #0x18]
  067ec	e59d3018	 ldr         r3, [sp, #0x18]
  067f0	e3530000	 cmp         r3, #0
  067f4	0a000002	 beq         |$LN13@ReleaseCha|
  067f8	e3a03001	 mov         r3, #1
  067fc	e58d301c	 str         r3, [sp, #0x1C]
  06800	ea000008	 b           |$LN14@ReleaseCha|
  06804		 |$LN13@ReleaseCha|
  06804	e3a03c09	 mov         r3, #9, 24
  06808	e3833058	 orr         r3, r3, #0x58
  0680c	e59f22b0	 ldr         r2, [pc, #0x2B0]
  06810	e59f12a8	 ldr         r1, [pc, #0x2A8]
  06814	e59f02a0	 ldr         r0, [pc, #0x2A0]
  06818	eb000000	 bl          NKDbgPrintfW
  0681c	e6000010	 __debugbreak_ce
  06820	e3a03000	 mov         r3, #0
  06824	e58d301c	 str         r3, [sp, #0x1C]
  06828		 |$LN14@ReleaseCha|

; 2393 :         DEBUGCHK(m_paUsbRegs != 0);

  06828	e59d3050	 ldr         r3, [sp, #0x50]
  0682c	e2833014	 add         r3, r3, #0x14
  06830	e5933000	 ldr         r3, [r3]
  06834	e3530000	 cmp         r3, #0
  06838	0a000002	 beq         |$LN15@ReleaseCha|
  0683c	e3a03001	 mov         r3, #1
  06840	e58d3020	 str         r3, [sp, #0x20]
  06844	ea000008	 b           |$LN16@ReleaseCha|
  06848		 |$LN15@ReleaseCha|
  06848	e3a03c09	 mov         r3, #9, 24
  0684c	e3833059	 orr         r3, r3, #0x59
  06850	e59f226c	 ldr         r2, [pc, #0x26C]
  06854	e59f1264	 ldr         r1, [pc, #0x264]
  06858	e59f025c	 ldr         r0, [pc, #0x25C]
  0685c	eb000000	 bl          NKDbgPrintfW
  06860	e6000010	 __debugbreak_ce
  06864	e3a03000	 mov         r3, #0
  06868	e58d3020	 str         r3, [sp, #0x20]
  0686c		 |$LN16@ReleaseCha|

; 2394 : 
; 2395 :         chNum = pChannel->ChannelNumber();

  0686c	e59d0054	 ldr         r0, [sp, #0x54]
  06870	eb000000	 bl          |?ChannelNumber@CCppiDmaChannel@@IBAEXZ|
  06874	e5cd0024	 strb        r0, [sp, #0x24]
  06878	e5dd3024	 ldrb        r3, [sp, #0x24]
  0687c	e5cd3000	 strb        r3, [sp]

; 2396 :         isOut = pChannel->IsOut();

  06880	e59d0054	 ldr         r0, [sp, #0x54]
  06884	eb000000	 bl          |?IsOut@CCppiDmaChannel@@IBAHXZ|
  06888	e58d0028	 str         r0, [sp, #0x28]
  0688c	e59d3028	 ldr         r3, [sp, #0x28]
  06890	e58d3004	 str         r3, [sp, #4]

; 2397 : 
; 2398 :         // Some extra debug checks
; 2399 :         DEBUGCHK(chNum < USB_CPPI_MAX_CHANNELS);

  06894	e5dd3000	 ldrb        r3, [sp]
  06898	e353001e	 cmp         r3, #0x1E
  0689c	aa000002	 bge         |$LN17@ReleaseCha|
  068a0	e3a03001	 mov         r3, #1
  068a4	e58d302c	 str         r3, [sp, #0x2C]
  068a8	ea000008	 b           |$LN18@ReleaseCha|
  068ac		 |$LN17@ReleaseCha|
  068ac	e3a03c09	 mov         r3, #9, 24
  068b0	e383305f	 orr         r3, r3, #0x5F
  068b4	e59f2208	 ldr         r2, [pc, #0x208]
  068b8	e59f1200	 ldr         r1, [pc, #0x200]
  068bc	e59f01f8	 ldr         r0, [pc, #0x1F8]
  068c0	eb000000	 bl          NKDbgPrintfW
  068c4	e6000010	 __debugbreak_ce
  068c8	e3a03000	 mov         r3, #0
  068cc	e58d302c	 str         r3, [sp, #0x2C]
  068d0		 |$LN18@ReleaseCha|

; 2400 : 
; 2401 :         // Cancel pending operation if any
; 2402 :         pChannel->CancelTransfer();

  068d0	e59d3054	 ldr         r3, [sp, #0x54]
  068d4	e5933000	 ldr         r3, [r3]
  068d8	e2833008	 add         r3, r3, #8
  068dc	e59d0054	 ldr         r0, [sp, #0x54]
  068e0	e5933000	 ldr         r3, [r3]
  068e4	e1a0e00f	 mov         lr, pc
  068e8	e12fff13	 bx          r3

; 2403 : 
; 2404 :         // Release channel ref
; 2405 :         pChannel->Release();

  068ec	e59d0054	 ldr         r0, [sp, #0x54]
  068f0	eb000000	 bl          |?Release@CCppiDmaChannel@@QAAIXZ|

; 2406 : 
; 2407 :         if (!pChannel->GetRefCount())

  068f4	e59d0054	 ldr         r0, [sp, #0x54]
  068f8	eb000000	 bl          |?GetRefCount@CCppiDmaChannel@@QAAIXZ|
  068fc	e58d0030	 str         r0, [sp, #0x30]
  06900	e59d3030	 ldr         r3, [sp, #0x30]
  06904	e3530000	 cmp         r3, #0
  06908	1a00005d	 bne         |$LN5@ReleaseCha|

; 2408 :         {
; 2409 :             if (isOut)

  0690c	e59d3004	 ldr         r3, [sp, #4]
  06910	e3530000	 cmp         r3, #0
  06914	0a000023	 beq         |$LN4@ReleaseCha|

; 2410 :             {
; 2411 :                 if(chNum < USB_CPPI_MAX_CHANNELS)

  06918	e5dd3000	 ldrb        r3, [sp]
  0691c	e353001e	 cmp         r3, #0x1E
  06920	aa00001f	 bge         |$LN3@ReleaseCha|

; 2412 :                 {
; 2413 :                     DEBUGCHK(pChannel == m_pTxChannels[chNum]);

  06924	e59d3050	 ldr         r3, [sp, #0x50]
  06928	e283102c	 add         r1, r3, #0x2C
  0692c	e5dd3000	 ldrb        r3, [sp]
  06930	e1a02003	 mov         r2, r3
  06934	e3a03004	 mov         r3, #4
  06938	e0030392	 mul         r3, r2, r3
  0693c	e0813003	 add         r3, r1, r3
  06940	e59d2054	 ldr         r2, [sp, #0x54]
  06944	e5933000	 ldr         r3, [r3]
  06948	e1520003	 cmp         r2, r3
  0694c	1a000002	 bne         |$LN19@ReleaseCha|
  06950	e3a03001	 mov         r3, #1
  06954	e58d3034	 str         r3, [sp, #0x34]
  06958	ea000008	 b           |$LN20@ReleaseCha|
  0695c		 |$LN19@ReleaseCha|
  0695c	e3a03c09	 mov         r3, #9, 24
  06960	e383306d	 orr         r3, r3, #0x6D
  06964	e59f2158	 ldr         r2, [pc, #0x158]
  06968	e59f1150	 ldr         r1, [pc, #0x150]
  0696c	e59f0148	 ldr         r0, [pc, #0x148]
  06970	eb000000	 bl          NKDbgPrintfW
  06974	e6000010	 __debugbreak_ce
  06978	e3a03000	 mov         r3, #0
  0697c	e58d3034	 str         r3, [sp, #0x34]
  06980		 |$LN20@ReleaseCha|

; 2414 :                     m_pTxChannels[chNum] = NULL;

  06980	e59d3050	 ldr         r3, [sp, #0x50]
  06984	e283102c	 add         r1, r3, #0x2C
  06988	e5dd3000	 ldrb        r3, [sp]
  0698c	e1a02003	 mov         r2, r3
  06990	e3a03004	 mov         r3, #4
  06994	e0030392	 mul         r3, r2, r3
  06998	e0812003	 add         r2, r1, r3
  0699c	e3a03000	 mov         r3, #0
  069a0	e5823000	 str         r3, [r2]
  069a4		 |$LN3@ReleaseCha|

; 2415 :                 }
; 2416 :             }
; 2417 :             else

  069a4	ea000022	 b           |$LN2@ReleaseCha|
  069a8		 |$LN4@ReleaseCha|

; 2418 :             {
; 2419 :                 if(chNum < USB_CPPI_MAX_CHANNELS)

  069a8	e5dd3000	 ldrb        r3, [sp]
  069ac	e353001e	 cmp         r3, #0x1E
  069b0	aa00001f	 bge         |$LN1@ReleaseCha|

; 2420 :                 {
; 2421 :                     DEBUGCHK(pChannel == m_pRxChannels[chNum]);

  069b4	e59d3050	 ldr         r3, [sp, #0x50]
  069b8	e28310a4	 add         r1, r3, #0xA4
  069bc	e5dd3000	 ldrb        r3, [sp]
  069c0	e1a02003	 mov         r2, r3
  069c4	e3a03004	 mov         r3, #4
  069c8	e0030392	 mul         r3, r2, r3
  069cc	e0813003	 add         r3, r1, r3
  069d0	e59d2054	 ldr         r2, [sp, #0x54]
  069d4	e5933000	 ldr         r3, [r3]
  069d8	e1520003	 cmp         r2, r3
  069dc	1a000002	 bne         |$LN21@ReleaseCha|
  069e0	e3a03001	 mov         r3, #1
  069e4	e58d3038	 str         r3, [sp, #0x38]
  069e8	ea000008	 b           |$LN22@ReleaseCha|
  069ec		 |$LN21@ReleaseCha|
  069ec	e3a03c09	 mov         r3, #9, 24
  069f0	e3833075	 orr         r3, r3, #0x75
  069f4	e59f20c8	 ldr         r2, [pc, #0xC8]
  069f8	e59f10c0	 ldr         r1, [pc, #0xC0]
  069fc	e59f00b8	 ldr         r0, [pc, #0xB8]
  06a00	eb000000	 bl          NKDbgPrintfW
  06a04	e6000010	 __debugbreak_ce
  06a08	e3a03000	 mov         r3, #0
  06a0c	e58d3038	 str         r3, [sp, #0x38]
  06a10		 |$LN22@ReleaseCha|

; 2422 :                     m_pRxChannels[chNum] = NULL;

  06a10	e59d3050	 ldr         r3, [sp, #0x50]
  06a14	e28310a4	 add         r1, r3, #0xA4
  06a18	e5dd3000	 ldrb        r3, [sp]
  06a1c	e1a02003	 mov         r2, r3
  06a20	e3a03004	 mov         r3, #4
  06a24	e0030392	 mul         r3, r2, r3
  06a28	e0812003	 add         r2, r1, r3
  06a2c	e3a03000	 mov         r3, #0
  06a30	e5823000	 str         r3, [r2]
  06a34		 |$LN1@ReleaseCha|
  06a34		 |$LN2@ReleaseCha|

; 2423 :                 }
; 2424 :             }
; 2425 : 
; 2426 :             // Delete the channel object
; 2427 :             delete pChannel;

  06a34	e59d3054	 ldr         r3, [sp, #0x54]
  06a38	e58d300c	 str         r3, [sp, #0xC]
  06a3c	e59d300c	 ldr         r3, [sp, #0xC]
  06a40	e58d3008	 str         r3, [sp, #8]
  06a44	e59d3008	 ldr         r3, [sp, #8]
  06a48	e3530000	 cmp         r3, #0
  06a4c	0a00000a	 beq         |$LN23@ReleaseCha|
  06a50	e3a01001	 mov         r1, #1
  06a54	e59d3008	 ldr         r3, [sp, #8]
  06a58	e5933000	 ldr         r3, [r3]
  06a5c	e59d0008	 ldr         r0, [sp, #8]
  06a60	e5933000	 ldr         r3, [r3]
  06a64	e1a0e00f	 mov         lr, pc
  06a68	e12fff13	 bx          r3
  06a6c	e58d003c	 str         r0, [sp, #0x3C]
  06a70	e59d303c	 ldr         r3, [sp, #0x3C]
  06a74	e58d3040	 str         r3, [sp, #0x40]
  06a78	ea000001	 b           |$LN24@ReleaseCha|
  06a7c		 |$LN23@ReleaseCha|
  06a7c	e3a03000	 mov         r3, #0
  06a80	e58d3040	 str         r3, [sp, #0x40]
  06a84		 |$LN24@ReleaseCha|
  06a84		 |$LN5@ReleaseCha|

; 2428 :         }
; 2429 : 
; 2430 :         // Go unsafe
; 2431 :         Unlock();

  06a84	e59d0050	 ldr         r0, [sp, #0x50]
  06a88	eb000000	 bl          |?Unlock@CCppiDmaController@@IAAXXZ|
  06a8c		 |$LN6@ReleaseCha|

; 2432 :     }
; 2433 : 
; 2434 :     DEBUGMSG(ZONE_PDD_DMA || ZONE_VERBOSE,
; 2435 :         (L"-CCppiDmaController::ReleaseChannel\r\n"));

  06a8c	ea000004	 b           |$LN25@ReleaseCha|
  06a90	e59f0020	 ldr         r0, [pc, #0x20]
  06a94	eb000000	 bl          NKDbgPrintfW
  06a98	e3a03001	 mov         r3, #1
  06a9c	e58d3044	 str         r3, [sp, #0x44]
  06aa0	ea000001	 b           |$LN26@ReleaseCha|
  06aa4		 |$LN25@ReleaseCha|
  06aa4	e3a03000	 mov         r3, #0
  06aa8	e58d3044	 str         r3, [sp, #0x44]
  06aac		 |$LN26@ReleaseCha|

; 2436 : }

  06aac	e28dd048	 add         sp, sp, #0x48
  06ab0	e89d6000	 ldmia       sp, {sp, lr}
  06ab4	e12fff1e	 bx          lr
  06ab8		 |$LN30@ReleaseCha|
  06ab8		 |$LN31@ReleaseCha|
  06ab8	00000000	 DCD         |??_C@_1EM@IABFHAGL@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAC?$AAh?$AAa?$AAn@|
  06abc		 |$LN32@ReleaseCha|
  06abc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  06ac0		 |$LN33@ReleaseCha|
  06ac0	00000000	 DCD         |dpCurSettings|
  06ac4		 |$LN34@ReleaseCha|
  06ac4	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  06ac8		 |$LN35@ReleaseCha|
  06ac8	00000000	 DCD         |??_C@_1EM@BDHINKGN@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAC?$AAh?$AAa?$AAn@|
  06acc		 |$M41319|

			 ENDP  ; |?ReleaseChannel@CCppiDmaController@@QAAXPAVCCppiDmaChannel@@@Z|, CCppiDmaController::ReleaseChannel

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T41333| DCD	|$LN5@Release|
	DCD	0x40001304
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Release@CCppiDmaChannel@@QAAIXZ| PROC ; CCppiDmaChannel::Release

; 61   :     UINT32 Release     () { return --m_nRefCount; }

  00000		 |$LN5@Release|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M41330|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833008	 add         r3, r3, #8
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2432001	 sub         r2, r3, #1
  00020	e59d300c	 ldr         r3, [sp, #0xC]
  00024	e2833008	 add         r3, r3, #8
  00028	e5832000	 str         r2, [r3]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2833008	 add         r3, r3, #8
  00034	e5933000	 ldr         r3, [r3]
  00038	e58d3000	 str         r3, [sp]
  0003c	e59d0000	 ldr         r0, [sp]
  00040	e28dd004	 add         sp, sp, #4
  00044	e89d6000	 ldmia       sp, {sp, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M41331|

			 ENDP  ; |?Release@CCppiDmaChannel@@QAAIXZ|, CCppiDmaChannel::Release


  00000			 AREA	 |.pdata|, PDATA
|$T41341| DCD	|$LN5@ChannelNum|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ChannelNumber@CCppiDmaChannel@@IBAEXZ| PROC ; CCppiDmaChannel::ChannelNumber

; 99   :     UINT8  ChannelNumber()     const { return m_chNum; }

  00000		 |$LN5@ChannelNum|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M41338|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5d33000	 ldrb        r3, [r3]
  0001c	e5cd3000	 strb        r3, [sp]
  00020	e5dd0000	 ldrb        r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M41339|

			 ENDP  ; |?ChannelNumber@CCppiDmaChannel@@IBAEXZ|, CCppiDmaChannel::ChannelNumber

	EXPORT	|??_C@_1IE@LCNBGBPL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAP?$AAu?$AAs?$AAh?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@LONLLCCG@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?DescriptorVAtoPA@CCppiDmaController@@IAAIPAX@Z| ; CCppiDmaController::DescriptorVAtoPA

  00110			 AREA	 |.pdata|, PDATA
|$T41352| DCD	|$LN15@QueuePush@2|
	DCD	0x40005904
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@LCNBGBPL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAP?$AAu?$AAs?$AAh?$AA?3?$AA?5@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u"
	DCB	0x0, "e", 0x0, "P", 0x0, "u", 0x0, "s", 0x0, "h", 0x0, ":"
	DCB	0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "q", 0x0, "u"
	DCB	0x0, "e", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "u"
	DCB	0x0, ",", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@LONLLCCG@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  06acc			 AREA	 |.text|, CODE, ARM

  06acc		 |?QueuePush@CCppiDmaController@@IAAXEPAX@Z| PROC ; CCppiDmaController::QueuePush

; 2439 : {

  06acc		 |$LN15@QueuePush@2|
  06acc	e1a0c00d	 mov         r12, sp
  06ad0	e92d0007	 stmdb       sp!, {r0 - r2}
  06ad4	e92d5000	 stmdb       sp!, {r12, lr}
  06ad8	e24dd020	 sub         sp, sp, #0x20
  06adc		 |$M41349|

; 2440 :     UINT32 value = 0;

  06adc	e3a03000	 mov         r3, #0
  06ae0	e58d3000	 str         r3, [sp]

; 2441 :     UINT32 type = 0;

  06ae4	e3a03000	 mov         r3, #0
  06ae8	e58d3004	 str         r3, [sp, #4]

; 2442 : 
; 2443 :     if (pD != NULL)

  06aec	e59d3030	 ldr         r3, [sp, #0x30]
  06af0	e3530000	 cmp         r3, #0
  06af4	0a00002f	 beq         |$LN6@QueuePush@2|

; 2444 :     {
; 2445 :         UINT32 addr  = DescriptorVAtoPA(pD);

  06af8	e59d1030	 ldr         r1, [sp, #0x30]
  06afc	e59d0028	 ldr         r0, [sp, #0x28]
  06b00	eb000000	 bl          |?DescriptorVAtoPA@CCppiDmaController@@IAAIPAX@Z|
  06b04	e58d0010	 str         r0, [sp, #0x10]
  06b08	e59d3010	 ldr         r3, [sp, #0x10]
  06b0c	e58d300c	 str         r3, [sp, #0xC]

; 2446 :         UINT32 size  = 0;

  06b10	e3a03000	 mov         r3, #0
  06b14	e58d3008	 str         r3, [sp, #8]

; 2447 : 
; 2448 :         type = (*(UINT32*)pD & USB_CPPI41_DESC_TYPE_MASK) >> USB_CPPI41_DESC_TYPE_SHIFT;

  06b18	e59d3030	 ldr         r3, [sp, #0x30]
  06b1c	e5933000	 ldr         r3, [r3]
  06b20	e203333e	 and         r3, r3, #0x3E, 6
  06b24	e1a03da3	 mov         r3, r3, lsr #27
  06b28	e58d3004	 str         r3, [sp, #4]

; 2449 :         switch (type)

  06b2c	e59d3004	 ldr         r3, [sp, #4]
  06b30	e58d3014	 str         r3, [sp, #0x14]
  06b34	e59d3014	 ldr         r3, [sp, #0x14]
  06b38	e3530010	 cmp         r3, #0x10
  06b3c	0a000003	 beq         |$LN3@QueuePush@2|
  06b40	e59d3014	 ldr         r3, [sp, #0x14]
  06b44	e3530013	 cmp         r3, #0x13
  06b48	0a000003	 beq         |$LN2@QueuePush@2|
  06b4c	ea000005	 b           |$LN1@QueuePush@2|
  06b50		 |$LN3@QueuePush@2|

; 2450 :         {
; 2451 :         case USB_CPPI41_DESC_TYPE_HOST:     /* Host descriptor */
; 2452 :             size = (CPPI_HD_SIZE - 24) / 4;

  06b50	e3a0300a	 mov         r3, #0xA
  06b54	e58d3008	 str         r3, [sp, #8]

; 2453 :             break;

  06b58	ea00000f	 b           |$LN4@QueuePush@2|
  06b5c		 |$LN2@QueuePush@2|

; 2454 : 
; 2455 :         case USB_CPPI41_DESC_TYPE_TEARDOWN: /* Teardown descriptor */
; 2456 :             size = (USB_CPPI_TD_SIZE - 24) / 4;

  06b5c	e3a03002	 mov         r3, #2
  06b60	e58d3008	 str         r3, [sp, #8]

; 2457 :             break;

  06b64	ea00000c	 b           |$LN4@QueuePush@2|
  06b68		 |$LN1@QueuePush@2|

; 2458 : 
; 2459 :         default:
; 2460 :             ERRORMSG(TRUE,
; 2461 :                 (L"Invalid descriptor type %u\r\n",
; 2462 :                 type));

  06b68	e3a02c09	 mov         r2, #9, 24
  06b6c	e382209e	 orr         r2, r2, #0x9E
  06b70	e59f10b4	 ldr         r1, [pc, #0xB4]
  06b74	e59f00ac	 ldr         r0, [pc, #0xAC]
  06b78	eb000000	 bl          NKDbgPrintfW
  06b7c	e59d1004	 ldr         r1, [sp, #4]
  06b80	e59f009c	 ldr         r0, [pc, #0x9C]
  06b84	eb000000	 bl          NKDbgPrintfW
  06b88	e3a03001	 mov         r3, #1
  06b8c	e58d3018	 str         r3, [sp, #0x18]
  06b90	ea000001	 b           |$LN10@QueuePush@2|
  06b94	e3a03000	 mov         r3, #0
  06b98	e58d3018	 str         r3, [sp, #0x18]
  06b9c		 |$LN10@QueuePush@2|
  06b9c		 |$LN4@QueuePush@2|

; 2463 :         }
; 2464 : 
; 2465 :         value = ((addr & QMGR_QUEUE_N_REG_D_DESC_ADDR_MASK) |
; 2466 :                  (size & QMGR_QUEUE_N_REG_D_DESCSZ_MASK   ));

  06b9c	e59d1008	 ldr         r1, [sp, #8]
  06ba0	e59d200c	 ldr         r2, [sp, #0xC]
  06ba4	e3e0301f	 mvn         r3, #0x1F
  06ba8	e0022003	 and         r2, r2, r3
  06bac	e201301f	 and         r3, r1, #0x1F
  06bb0	e1823003	 orr         r3, r2, r3
  06bb4	e58d3000	 str         r3, [sp]
  06bb8		 |$LN6@QueuePush@2|

; 2467 :     }
; 2468 : 
; 2469 :     m_pCppiRegs->QMQUEUEMGMT[qNum].QCTRLD = value;

  06bb8	e59d3028	 ldr         r3, [sp, #0x28]
  06bbc	e283301c	 add         r3, r3, #0x1C
  06bc0	e5933000	 ldr         r3, [r3]
  06bc4	e2831a05	 add         r1, r3, #5, 20
  06bc8	e5dd302c	 ldrb        r3, [sp, #0x2C]
  06bcc	e1a02003	 mov         r2, r3
  06bd0	e3a03010	 mov         r3, #0x10
  06bd4	e0030392	 mul         r3, r2, r3
  06bd8	e0813003	 add         r3, r1, r3
  06bdc	e283200c	 add         r2, r3, #0xC
  06be0	e59d3000	 ldr         r3, [sp]
  06be4	e5823000	 str         r3, [r2]

; 2470 : 
; 2471 :     DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2472 :         (L" CCppiDmaController::QueuePush: type %d, queue %u, value 0x%08x\r\n", type, qNum, value));

  06be8	ea000007	 b           |$LN11@QueuePush@2|
  06bec	e59d3000	 ldr         r3, [sp]
  06bf0	e5dd202c	 ldrb        r2, [sp, #0x2C]
  06bf4	e59d1004	 ldr         r1, [sp, #4]
  06bf8	e59f0020	 ldr         r0, [pc, #0x20]
  06bfc	eb000000	 bl          NKDbgPrintfW
  06c00	e3a03001	 mov         r3, #1
  06c04	e58d301c	 str         r3, [sp, #0x1C]
  06c08	ea000001	 b           |$LN12@QueuePush@2|
  06c0c		 |$LN11@QueuePush@2|
  06c0c	e3a03000	 mov         r3, #0
  06c10	e58d301c	 str         r3, [sp, #0x1C]
  06c14		 |$LN12@QueuePush@2|

; 2473 : }

  06c14	e28dd020	 add         sp, sp, #0x20
  06c18	e89d6000	 ldmia       sp, {sp, lr}
  06c1c	e12fff1e	 bx          lr
  06c20		 |$LN16@QueuePush@2|
  06c20		 |$LN17@QueuePush@2|
  06c20	00000000	 DCD         |??_C@_1IE@LCNBGBPL@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAP?$AAu?$AAs?$AAh?$AA?3?$AA?5@|
  06c24		 |$LN18@QueuePush@2|
  06c24	00000000	 DCD         |??_C@_1DK@LONLLCCG@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@|
  06c28		 |$LN19@QueuePush@2|
  06c28	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  06c2c		 |$LN20@QueuePush@2|
  06c2c	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  06c30		 |$M41350|

			 ENDP  ; |?QueuePush@CCppiDmaController@@IAAXEPAX@Z|, CCppiDmaController::QueuePush

	EXPORT	|?DescriptorPAtoVA@CCppiDmaController@@IAAPAXI@Z| ; CCppiDmaController::DescriptorPAtoVA
	EXPORT	|??_C@_1HA@NILOEBDB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAP?$AAo?$AAp?$AA?3?$AA?5?$AAq@| [ DATA ] ; `string'

  00118			 AREA	 |.pdata|, PDATA
|$T41365| DCD	|$LN7@QueuePop@2|
	DCD	0x40002804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@NILOEBDB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAP?$AAo?$AAp?$AA?3?$AA?5?$AAq@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u"
	DCB	0x0, "e", 0x0, "P", 0x0, "o", 0x0, "p", 0x0, ":", 0x0, " "
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, ",", 0x0, " ", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  06c30			 AREA	 |.text|, CODE, ARM

  06c30		 |?QueuePop@CCppiDmaController@@IAAPAXE@Z| PROC ; CCppiDmaController::QueuePop

; 2476 : {

  06c30		 |$LN7@QueuePop@2|
  06c30	e1a0c00d	 mov         r12, sp
  06c34	e92d0003	 stmdb       sp!, {r0, r1}
  06c38	e92d5000	 stmdb       sp!, {r12, lr}
  06c3c	e24dd010	 sub         sp, sp, #0x10
  06c40		 |$M41362|

; 2477 :     UINT32 value = m_pCppiRegs->QMQUEUEMGMT[qNum].QCTRLD & QMGR_QUEUE_N_REG_D_DESC_ADDR_MASK;

  06c40	e59d3018	 ldr         r3, [sp, #0x18]
  06c44	e283301c	 add         r3, r3, #0x1C
  06c48	e5933000	 ldr         r3, [r3]
  06c4c	e2831a05	 add         r1, r3, #5, 20
  06c50	e5dd301c	 ldrb        r3, [sp, #0x1C]
  06c54	e1a02003	 mov         r2, r3
  06c58	e3a03010	 mov         r3, #0x10
  06c5c	e0030392	 mul         r3, r2, r3
  06c60	e0813003	 add         r3, r1, r3
  06c64	e283300c	 add         r3, r3, #0xC
  06c68	e5932000	 ldr         r2, [r3]
  06c6c	e3e0301f	 mvn         r3, #0x1F
  06c70	e0023003	 and         r3, r2, r3
  06c74	e58d3000	 str         r3, [sp]

; 2478 : 
; 2479 :     DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2480 :         (L" CCppiDmaController::QueuePop: queue %u, value 0x%08x\r\n", qNum, value));

  06c78	ea000007	 b           |$LN3@QueuePop@2|
  06c7c	e59d2000	 ldr         r2, [sp]
  06c80	e5dd301c	 ldrb        r3, [sp, #0x1C]
  06c84	e1a01003	 mov         r1, r3
  06c88	e59f003c	 ldr         r0, [pc, #0x3C]
  06c8c	eb000000	 bl          NKDbgPrintfW
  06c90	e3a03001	 mov         r3, #1
  06c94	e58d3008	 str         r3, [sp, #8]
  06c98	ea000001	 b           |$LN4@QueuePop@2|
  06c9c		 |$LN3@QueuePop@2|
  06c9c	e3a03000	 mov         r3, #0
  06ca0	e58d3008	 str         r3, [sp, #8]
  06ca4		 |$LN4@QueuePop@2|

; 2481 : 
; 2482 :     return DescriptorPAtoVA(value);

  06ca4	e59d1000	 ldr         r1, [sp]
  06ca8	e59d0018	 ldr         r0, [sp, #0x18]
  06cac	eb000000	 bl          |?DescriptorPAtoVA@CCppiDmaController@@IAAPAXI@Z|
  06cb0	e58d000c	 str         r0, [sp, #0xC]
  06cb4	e59d300c	 ldr         r3, [sp, #0xC]
  06cb8	e58d3004	 str         r3, [sp, #4]

; 2483 : }

  06cbc	e59d0004	 ldr         r0, [sp, #4]
  06cc0	e28dd010	 add         sp, sp, #0x10
  06cc4	e89d6000	 ldmia       sp, {sp, lr}
  06cc8	e12fff1e	 bx          lr
  06ccc		 |$LN8@QueuePop@2|
  06ccc		 |$LN9@QueuePop@2|
  06ccc	00000000	 DCD         |??_C@_1HA@NILOEBDB@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAP?$AAo?$AAp?$AA?3?$AA?5?$AAq@|
  06cd0		 |$M41363|

			 ENDP  ; |?QueuePop@CCppiDmaController@@IAAPAXE@Z|, CCppiDmaController::QueuePop

	EXPORT	|?IsCancelPending@CCppiDmaChannel@@IBAHXZ| ; CCppiDmaChannel::IsCancelPending
	EXPORT	|?ValidateTransferState@CCppiDmaController@@IAAHXZ| ; CCppiDmaController::ValidateTransferState

  00120			 AREA	 |.pdata|, PDATA
|$T41373| DCD	|$LN14@ValidateTr@3|
	DCD	0x40009804
; Function compile flags: /Odtp

  06cd0			 AREA	 |.text|, CODE, ARM

  06cd0		 |?ValidateTransferState@CCppiDmaController@@IAAHXZ| PROC ; CCppiDmaController::ValidateTransferState

; 2486 : {

  06cd0		 |$LN14@ValidateTr@3|
  06cd0	e1a0c00d	 mov         r12, sp
  06cd4	e92d0001	 stmdb       sp!, {r0}
  06cd8	e92d5000	 stmdb       sp!, {r12, lr}
  06cdc	e24dd01c	 sub         sp, sp, #0x1C
  06ce0		 |$M41370|

; 2487 :     BOOL fStateOK = TRUE;

  06ce0	e3a03001	 mov         r3, #1
  06ce4	e58d3000	 str         r3, [sp]

; 2488 : 
; 2489 :     for (unsigned i = 0; i < USB_CPPI_MAX_CHANNELS; i ++)

  06ce8	e3a03000	 mov         r3, #0
  06cec	e58d3004	 str         r3, [sp, #4]
  06cf0	ea000002	 b           |$LN9@ValidateTr@3|
  06cf4		 |$LN8@ValidateTr@3|
  06cf4	e59d3004	 ldr         r3, [sp, #4]
  06cf8	e2833001	 add         r3, r3, #1
  06cfc	e58d3004	 str         r3, [sp, #4]
  06d00		 |$LN9@ValidateTr@3|
  06d00	e59d3004	 ldr         r3, [sp, #4]
  06d04	e353001e	 cmp         r3, #0x1E
  06d08	2a000082	 bcs         |$LN7@ValidateTr@3|

; 2490 :     {
; 2491 :         if (m_pRxChannels[i])

  06d0c	e59d3024	 ldr         r3, [sp, #0x24]
  06d10	e28310a4	 add         r1, r3, #0xA4
  06d14	e59d2004	 ldr         r2, [sp, #4]
  06d18	e3a03004	 mov         r3, #4
  06d1c	e0030392	 mul         r3, r2, r3
  06d20	e0813003	 add         r3, r1, r3
  06d24	e5933000	 ldr         r3, [r3]
  06d28	e3530000	 cmp         r3, #0
  06d2c	0a000037	 beq         |$LN6@ValidateTr@3|

; 2492 :         {
; 2493 :             if (!m_pRxChannels[i]->ValidateTransferState() ||
; 2494 :                 m_pRxChannels[i]->IsCancelPending())

  06d30	e59d3024	 ldr         r3, [sp, #0x24]
  06d34	e28310a4	 add         r1, r3, #0xA4
  06d38	e59d2004	 ldr         r2, [sp, #4]
  06d3c	e3a03004	 mov         r3, #4
  06d40	e0030392	 mul         r3, r2, r3
  06d44	e0813003	 add         r3, r1, r3
  06d48	e593e000	 ldr         lr, [r3]
  06d4c	e59d1004	 ldr         r1, [sp, #4]
  06d50	e3a03004	 mov         r3, #4
  06d54	e0020391	 mul         r2, r1, r3
  06d58	e59d3024	 ldr         r3, [sp, #0x24]
  06d5c	e28330a4	 add         r3, r3, #0xA4
  06d60	e0833002	 add         r3, r3, r2
  06d64	e5930000	 ldr         r0, [r3]
  06d68	e59e3000	 ldr         r3, [lr]
  06d6c	e283300c	 add         r3, r3, #0xC
  06d70	e5933000	 ldr         r3, [r3]
  06d74	e1a0e00f	 mov         lr, pc
  06d78	e12fff13	 bx          r3
  06d7c	e58d000c	 str         r0, [sp, #0xC]
  06d80	e59d300c	 ldr         r3, [sp, #0xC]
  06d84	e3530000	 cmp         r3, #0
  06d88	0a00000b	 beq         |$LN4@ValidateTr@3|
  06d8c	e59d3024	 ldr         r3, [sp, #0x24]
  06d90	e28310a4	 add         r1, r3, #0xA4
  06d94	e59d2004	 ldr         r2, [sp, #4]
  06d98	e3a03004	 mov         r3, #4
  06d9c	e0030392	 mul         r3, r2, r3
  06da0	e0813003	 add         r3, r1, r3
  06da4	e5930000	 ldr         r0, [r3]
  06da8	eb000000	 bl          |?IsCancelPending@CCppiDmaChannel@@IBAHXZ|
  06dac	e58d0010	 str         r0, [sp, #0x10]
  06db0	e59d3010	 ldr         r3, [sp, #0x10]
  06db4	e3530000	 cmp         r3, #0
  06db8	0a000014	 beq         |$LN5@ValidateTr@3|
  06dbc		 |$LN4@ValidateTr@3|

; 2495 :             {
; 2496 :                 m_pRxChannels[i]->CancelTransfer();

  06dbc	e59d3024	 ldr         r3, [sp, #0x24]
  06dc0	e28310a4	 add         r1, r3, #0xA4
  06dc4	e59d2004	 ldr         r2, [sp, #4]
  06dc8	e3a03004	 mov         r3, #4
  06dcc	e0030392	 mul         r3, r2, r3
  06dd0	e0813003	 add         r3, r1, r3
  06dd4	e593e000	 ldr         lr, [r3]
  06dd8	e59d1004	 ldr         r1, [sp, #4]
  06ddc	e3a03004	 mov         r3, #4
  06de0	e0020391	 mul         r2, r1, r3
  06de4	e59d3024	 ldr         r3, [sp, #0x24]
  06de8	e28330a4	 add         r3, r3, #0xA4
  06dec	e0833002	 add         r3, r3, r2
  06df0	e5930000	 ldr         r0, [r3]
  06df4	e59e3000	 ldr         r3, [lr]
  06df8	e2833008	 add         r3, r3, #8
  06dfc	e5933000	 ldr         r3, [r3]
  06e00	e1a0e00f	 mov         lr, pc
  06e04	e12fff13	 bx          r3

; 2497 :                 fStateOK = FALSE;

  06e08	e3a03000	 mov         r3, #0
  06e0c	e58d3000	 str         r3, [sp]
  06e10		 |$LN5@ValidateTr@3|
  06e10		 |$LN6@ValidateTr@3|

; 2498 :             }
; 2499 :         }
; 2500 : 
; 2501 :         if (m_pTxChannels[i])

  06e10	e59d3024	 ldr         r3, [sp, #0x24]
  06e14	e283102c	 add         r1, r3, #0x2C
  06e18	e59d2004	 ldr         r2, [sp, #4]
  06e1c	e3a03004	 mov         r3, #4
  06e20	e0030392	 mul         r3, r2, r3
  06e24	e0813003	 add         r3, r1, r3
  06e28	e5933000	 ldr         r3, [r3]
  06e2c	e3530000	 cmp         r3, #0
  06e30	0a000037	 beq         |$LN3@ValidateTr@3|

; 2502 :         {
; 2503 :             if (!m_pTxChannels[i]->ValidateTransferState() ||
; 2504 :                 m_pTxChannels[i]->IsCancelPending())

  06e34	e59d3024	 ldr         r3, [sp, #0x24]
  06e38	e283102c	 add         r1, r3, #0x2C
  06e3c	e59d2004	 ldr         r2, [sp, #4]
  06e40	e3a03004	 mov         r3, #4
  06e44	e0030392	 mul         r3, r2, r3
  06e48	e0813003	 add         r3, r1, r3
  06e4c	e593e000	 ldr         lr, [r3]
  06e50	e59d1004	 ldr         r1, [sp, #4]
  06e54	e3a03004	 mov         r3, #4
  06e58	e0020391	 mul         r2, r1, r3
  06e5c	e59d3024	 ldr         r3, [sp, #0x24]
  06e60	e283302c	 add         r3, r3, #0x2C
  06e64	e0833002	 add         r3, r3, r2
  06e68	e5930000	 ldr         r0, [r3]
  06e6c	e59e3000	 ldr         r3, [lr]
  06e70	e283300c	 add         r3, r3, #0xC
  06e74	e5933000	 ldr         r3, [r3]
  06e78	e1a0e00f	 mov         lr, pc
  06e7c	e12fff13	 bx          r3
  06e80	e58d0014	 str         r0, [sp, #0x14]
  06e84	e59d3014	 ldr         r3, [sp, #0x14]
  06e88	e3530000	 cmp         r3, #0
  06e8c	0a00000b	 beq         |$LN1@ValidateTr@3|
  06e90	e59d3024	 ldr         r3, [sp, #0x24]
  06e94	e283102c	 add         r1, r3, #0x2C
  06e98	e59d2004	 ldr         r2, [sp, #4]
  06e9c	e3a03004	 mov         r3, #4
  06ea0	e0030392	 mul         r3, r2, r3
  06ea4	e0813003	 add         r3, r1, r3
  06ea8	e5930000	 ldr         r0, [r3]
  06eac	eb000000	 bl          |?IsCancelPending@CCppiDmaChannel@@IBAHXZ|
  06eb0	e58d0018	 str         r0, [sp, #0x18]
  06eb4	e59d3018	 ldr         r3, [sp, #0x18]
  06eb8	e3530000	 cmp         r3, #0
  06ebc	0a000014	 beq         |$LN2@ValidateTr@3|
  06ec0		 |$LN1@ValidateTr@3|

; 2505 :             {
; 2506 :                 m_pTxChannels[i]->CancelTransfer();

  06ec0	e59d3024	 ldr         r3, [sp, #0x24]
  06ec4	e283102c	 add         r1, r3, #0x2C
  06ec8	e59d2004	 ldr         r2, [sp, #4]
  06ecc	e3a03004	 mov         r3, #4
  06ed0	e0030392	 mul         r3, r2, r3
  06ed4	e0813003	 add         r3, r1, r3
  06ed8	e593e000	 ldr         lr, [r3]
  06edc	e59d1004	 ldr         r1, [sp, #4]
  06ee0	e3a03004	 mov         r3, #4
  06ee4	e0020391	 mul         r2, r1, r3
  06ee8	e59d3024	 ldr         r3, [sp, #0x24]
  06eec	e283302c	 add         r3, r3, #0x2C
  06ef0	e0833002	 add         r3, r3, r2
  06ef4	e5930000	 ldr         r0, [r3]
  06ef8	e59e3000	 ldr         r3, [lr]
  06efc	e2833008	 add         r3, r3, #8
  06f00	e5933000	 ldr         r3, [r3]
  06f04	e1a0e00f	 mov         lr, pc
  06f08	e12fff13	 bx          r3

; 2507 :                 fStateOK = FALSE;

  06f0c	e3a03000	 mov         r3, #0
  06f10	e58d3000	 str         r3, [sp]
  06f14		 |$LN2@ValidateTr@3|
  06f14		 |$LN3@ValidateTr@3|

; 2508 :             }
; 2509 :         }
; 2510 :     }

  06f14	eaffff76	 b           |$LN8@ValidateTr@3|
  06f18		 |$LN7@ValidateTr@3|

; 2511 : 
; 2512 :     return fStateOK;

  06f18	e59d3000	 ldr         r3, [sp]
  06f1c	e58d3008	 str         r3, [sp, #8]

; 2513 : }

  06f20	e59d0008	 ldr         r0, [sp, #8]
  06f24	e28dd01c	 add         sp, sp, #0x1C
  06f28	e89d6000	 ldmia       sp, {sp, lr}
  06f2c	e12fff1e	 bx          lr
  06f30		 |$M41371|

			 ENDP  ; |?ValidateTransferState@CCppiDmaController@@IAAHXZ|, CCppiDmaController::ValidateTransferState

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T41379| DCD	|$LN5@IsCancelPe|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsCancelPending@CCppiDmaChannel@@IBAHXZ| PROC ; CCppiDmaChannel::IsCancelPending

; 112  :     BOOL   IsCancelPending()   const { return m_fIsCancelPending; }

  00000		 |$LN5@IsCancelPe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M41376|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833058	 add         r3, r3, #0x58
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M41377|

			 ENDP  ; |?IsCancelPending@CCppiDmaChannel@@IBAHXZ|, CCppiDmaChannel::IsCancelPending

	EXPORT	|??_C@_1FM@LGEKKOOJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@BKCENHLF@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAd?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@KEDFLBCF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@BIKFBDMF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@OMIBJOAI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@KDDHEOEK@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|?ProcessCompletionEvent@CCppiDmaController@@IAAXPAX@Z| ; CCppiDmaController::ProcessCompletionEvent

  00128			 AREA	 |.pdata|, PDATA
|$T41404| DCD	|$LN37@ProcessCom@4|
	DCD	0x4000e204
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@LGEKKOOJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@BKCENHLF@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAd?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@KEDFLBCF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, "(", 0x0, "T", 0x0, "D", 0x0, ")", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@BIKFBDMF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, "(", 0x0, "H", 0x0, "D", 0x0, ")", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@OMIBJOAI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@KDDHEOEK@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  06f30			 AREA	 |.text|, CODE, ARM

  06f30		 |?ProcessCompletionEvent@CCppiDmaController@@IAAXPAX@Z| PROC ; CCppiDmaController::ProcessCompletionEvent

; 2516 : {

  06f30		 |$LN37@ProcessCom@4|
  06f30	e1a0c00d	 mov         r12, sp
  06f34	e92d0003	 stmdb       sp!, {r0, r1}
  06f38	e92d5000	 stmdb       sp!, {r12, lr}
  06f3c	e24dd04c	 sub         sp, sp, #0x4C
  06f40		 |$M41401|

; 2517 :     DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2518 :         (L"+CCppiDmaController::ProcessCompletionEvent: 0x%08x\r\n"));

  06f40	ea000004	 b           |$LN17@ProcessCom@4|
  06f44	e59f0368	 ldr         r0, [pc, #0x368]
  06f48	eb000000	 bl          NKDbgPrintfW
  06f4c	e3a03001	 mov         r3, #1
  06f50	e58d3024	 str         r3, [sp, #0x24]
  06f54	ea000001	 b           |$LN18@ProcessCom@4|
  06f58		 |$LN17@ProcessCom@4|
  06f58	e3a03000	 mov         r3, #0
  06f5c	e58d3024	 str         r3, [sp, #0x24]
  06f60		 |$LN18@ProcessCom@4|

; 2519 : 
; 2520 :     DEBUGCHK(pD != NULL);

  06f60	e59d3058	 ldr         r3, [sp, #0x58]
  06f64	e3530000	 cmp         r3, #0
  06f68	0a000002	 beq         |$LN19@ProcessCom@4|
  06f6c	e3a03001	 mov         r3, #1
  06f70	e58d3028	 str         r3, [sp, #0x28]
  06f74	ea000008	 b           |$LN20@ProcessCom@4|
  06f78		 |$LN19@ProcessCom@4|
  06f78	e3a03c09	 mov         r3, #9, 24
  06f7c	e38330d8	 orr         r3, r3, #0xD8
  06f80	e59f2314	 ldr         r2, [pc, #0x314]
  06f84	e59f1324	 ldr         r1, [pc, #0x324]
  06f88	e59f031c	 ldr         r0, [pc, #0x31C]
  06f8c	eb000000	 bl          NKDbgPrintfW
  06f90	e6000010	 __debugbreak_ce
  06f94	e3a03000	 mov         r3, #0
  06f98	e58d3028	 str         r3, [sp, #0x28]
  06f9c		 |$LN20@ProcessCom@4|

; 2521 :     if (pD == NULL)

  06f9c	e59d3058	 ldr         r3, [sp, #0x58]
  06fa0	e3530000	 cmp         r3, #0
  06fa4	1a000000	 bne         |$LN14@ProcessCom@4|

; 2522 :         return;

  06fa8	ea0000b5	 b           |$LN15@ProcessCom@4|
  06fac		 |$LN14@ProcessCom@4|

; 2523 : 
; 2524 :     UINT32 type = (*(UINT32*)pD & USB_CPPI41_DESC_TYPE_MASK) >> USB_CPPI41_DESC_TYPE_SHIFT;

  06fac	e59d3058	 ldr         r3, [sp, #0x58]
  06fb0	e5933000	 ldr         r3, [r3]
  06fb4	e203333e	 and         r3, r3, #0x3E, 6
  06fb8	e1a03da3	 mov         r3, r3, lsr #27
  06fbc	e58d3000	 str         r3, [sp]

; 2525 : 
; 2526 :     DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2527 :         (L" CCppiDmaController::ProcessCompletionEvent: type %u\r\n", type));

  06fc0	ea000005	 b           |$LN21@ProcessCom@4|
  06fc4	e59d1000	 ldr         r1, [sp]
  06fc8	e59f02d8	 ldr         r0, [pc, #0x2D8]
  06fcc	eb000000	 bl          NKDbgPrintfW
  06fd0	e3a03001	 mov         r3, #1
  06fd4	e58d302c	 str         r3, [sp, #0x2C]
  06fd8	ea000001	 b           |$LN22@ProcessCom@4|
  06fdc		 |$LN21@ProcessCom@4|
  06fdc	e3a03000	 mov         r3, #0
  06fe0	e58d302c	 str         r3, [sp, #0x2C]
  06fe4		 |$LN22@ProcessCom@4|

; 2528 : 
; 2529 :     switch (type)

  06fe4	e59d3000	 ldr         r3, [sp]
  06fe8	e58d3030	 str         r3, [sp, #0x30]
  06fec	e59d3030	 ldr         r3, [sp, #0x30]
  06ff0	e3530010	 cmp         r3, #0x10
  06ff4	0a000003	 beq         |$LN11@ProcessCom@4|
  06ff8	e59d3030	 ldr         r3, [sp, #0x30]
  06ffc	e3530013	 cmp         r3, #0x13
  07000	0a000043	 beq         |$LN6@ProcessCom@4|
  07004	ea000089	 b           |$LN1@ProcessCom@4|
  07008		 |$LN11@ProcessCom@4|

; 2530 :     {
; 2531 :     case USB_CPPI41_DESC_TYPE_HOST: /* Host Descriptor */
; 2532 :         {
; 2533 :             HOST_DESCRIPTOR* pHd = (HOST_DESCRIPTOR*)pD;

  07008	e59d3058	 ldr         r3, [sp, #0x58]
  0700c	e58d3004	 str         r3, [sp, #4]

; 2534 :             CCppiDmaChannel* pChannel = NULL;

  07010	e3a03000	 mov         r3, #0
  07014	e58d3010	 str         r3, [sp, #0x10]

; 2535 :             BYTE chanNum  = (BYTE)((pHd->TagInfo2 & 0x1f0) >> 4);

  07018	e59d3004	 ldr         r3, [sp, #4]
  0701c	e2833030	 add         r3, r3, #0x30
  07020	e5933000	 ldr         r3, [r3]
  07024	e2033e1f	 and         r3, r3, #0x1F, 28
  07028	e1a03223	 mov         r3, r3, lsr #4
  0702c	e20330ff	 and         r3, r3, #0xFF
  07030	e5cd300c	 strb        r3, [sp, #0xC]

; 2536 :             BOOL transmit = (pHd->TagInfo2 & 0x200) ? TRUE : FALSE;

  07034	e59d3004	 ldr         r3, [sp, #4]
  07038	e2833030	 add         r3, r3, #0x30
  0703c	e5933000	 ldr         r3, [r3]
  07040	e3130c02	 tst         r3, #2, 24
  07044	0a000002	 beq         |$LN23@ProcessCom@4|
  07048	e3a03001	 mov         r3, #1
  0704c	e58d3034	 str         r3, [sp, #0x34]
  07050	ea000001	 b           |$LN24@ProcessCom@4|
  07054		 |$LN23@ProcessCom@4|
  07054	e3a03000	 mov         r3, #0
  07058	e58d3034	 str         r3, [sp, #0x34]
  0705c		 |$LN24@ProcessCom@4|
  0705c	e59d3034	 ldr         r3, [sp, #0x34]
  07060	e58d3008	 str         r3, [sp, #8]

; 2537 :             if (transmit)

  07064	e59d3008	 ldr         r3, [sp, #8]
  07068	e3530000	 cmp         r3, #0
  0706c	0a000009	 beq         |$LN10@ProcessCom@4|

; 2538 :                 pChannel = m_pTxChannels[chanNum];

  07070	e59d3054	 ldr         r3, [sp, #0x54]
  07074	e283102c	 add         r1, r3, #0x2C
  07078	e5dd300c	 ldrb        r3, [sp, #0xC]
  0707c	e1a02003	 mov         r2, r3
  07080	e3a03004	 mov         r3, #4
  07084	e0030392	 mul         r3, r2, r3
  07088	e0813003	 add         r3, r1, r3
  0708c	e5933000	 ldr         r3, [r3]
  07090	e58d3010	 str         r3, [sp, #0x10]

; 2539 :             else

  07094	ea000008	 b           |$LN9@ProcessCom@4|
  07098		 |$LN10@ProcessCom@4|

; 2540 :                 pChannel = m_pRxChannels[chanNum];

  07098	e59d3054	 ldr         r3, [sp, #0x54]
  0709c	e28310a4	 add         r1, r3, #0xA4
  070a0	e5dd300c	 ldrb        r3, [sp, #0xC]
  070a4	e1a02003	 mov         r2, r3
  070a8	e3a03004	 mov         r3, #4
  070ac	e0030392	 mul         r3, r2, r3
  070b0	e0813003	 add         r3, r1, r3
  070b4	e5933000	 ldr         r3, [r3]
  070b8	e58d3010	 str         r3, [sp, #0x10]
  070bc		 |$LN9@ProcessCom@4|

; 2541 : 
; 2542 :             if (pChannel)

  070bc	e59d3010	 ldr         r3, [sp, #0x10]
  070c0	e3530000	 cmp         r3, #0
  070c4	0a000008	 beq         |$LN8@ProcessCom@4|

; 2543 :                 pChannel->ProcessCompletedPacket(pHd);

  070c8	e59d1004	 ldr         r1, [sp, #4]
  070cc	e59d3010	 ldr         r3, [sp, #0x10]
  070d0	e5933000	 ldr         r3, [r3]
  070d4	e2833010	 add         r3, r3, #0x10
  070d8	e59d0010	 ldr         r0, [sp, #0x10]
  070dc	e5933000	 ldr         r3, [r3]
  070e0	e1a0e00f	 mov         lr, pc
  070e4	e12fff13	 bx          r3

; 2544 :             else

  070e8	ea000008	 b           |$LN7@ProcessCom@4|
  070ec		 |$LN8@ProcessCom@4|

; 2545 :                 DEBUGMSG(ZONE_ERROR,
; 2546 :                     (L" CCppiDmaController::ProcessCompletionEvent(HD): ERROR - Ch %u deleted\r\n",
; 2547 :                     chanNum));

  070ec	e5dd300c	 ldrb        r3, [sp, #0xC]
  070f0	e1a01003	 mov         r1, r3
  070f4	e59f01a8	 ldr         r0, [pc, #0x1A8]
  070f8	eb000000	 bl          NKDbgPrintfW
  070fc	e3a03001	 mov         r3, #1
  07100	e58d3038	 str         r3, [sp, #0x38]
  07104	ea000001	 b           |$LN26@ProcessCom@4|
  07108	e3a03000	 mov         r3, #0
  0710c	e58d3038	 str         r3, [sp, #0x38]
  07110		 |$LN26@ProcessCom@4|
  07110		 |$LN7@ProcessCom@4|

; 2548 :             break;

  07110	ea000053	 b           |$LN12@ProcessCom@4|
  07114		 |$LN6@ProcessCom@4|

; 2549 :         }
; 2550 : 
; 2551 :     case USB_CPPI41_DESC_TYPE_TEARDOWN: /* Teardown Descriptor */
; 2552 :         {
; 2553 :             TEARDOWN_DESCRIPTOR* pTd = (TEARDOWN_DESCRIPTOR*)pD;

  07114	e59d3058	 ldr         r3, [sp, #0x58]
  07118	e58d301c	 str         r3, [sp, #0x1C]

; 2554 :             CCppiDmaChannel* pChannel = NULL;

  0711c	e3a03000	 mov         r3, #0
  07120	e58d3020	 str         r3, [sp, #0x20]

; 2555 :             BYTE chanNum  = (BYTE)((pTd->DescInfo & 0x0001f) >> 0);

  07124	e59d301c	 ldr         r3, [sp, #0x1C]
  07128	e5933000	 ldr         r3, [r3]
  0712c	e203301f	 and         r3, r3, #0x1F
  07130	e20330ff	 and         r3, r3, #0xFF
  07134	e5cd3018	 strb        r3, [sp, #0x18]

; 2556 :             BOOL transmit = (pTd->DescInfo & 0x10000) ? FALSE : TRUE;

  07138	e59d301c	 ldr         r3, [sp, #0x1C]
  0713c	e5933000	 ldr         r3, [r3]
  07140	e3130801	 tst         r3, #1, 16
  07144	0a000002	 beq         |$LN27@ProcessCom@4|
  07148	e3a03000	 mov         r3, #0
  0714c	e58d303c	 str         r3, [sp, #0x3C]
  07150	ea000001	 b           |$LN28@ProcessCom@4|
  07154		 |$LN27@ProcessCom@4|
  07154	e3a03001	 mov         r3, #1
  07158	e58d303c	 str         r3, [sp, #0x3C]
  0715c		 |$LN28@ProcessCom@4|
  0715c	e59d303c	 ldr         r3, [sp, #0x3C]
  07160	e58d3014	 str         r3, [sp, #0x14]

; 2557 :             if (transmit)

  07164	e59d3014	 ldr         r3, [sp, #0x14]
  07168	e3530000	 cmp         r3, #0
  0716c	0a00000d	 beq         |$LN5@ProcessCom@4|

; 2558 :                 pChannel = m_pTxChannels[chanNum - m_nCppiChannelOffset];

  07170	e59d3054	 ldr         r3, [sp, #0x54]
  07174	e283102c	 add         r1, r3, #0x2C
  07178	e5dd3018	 ldrb        r3, [sp, #0x18]
  0717c	e1a02003	 mov         r2, r3
  07180	e59d3054	 ldr         r3, [sp, #0x54]
  07184	e2833028	 add         r3, r3, #0x28
  07188	e5d33000	 ldrb        r3, [r3]
  0718c	e0422003	 sub         r2, r2, r3
  07190	e3a03004	 mov         r3, #4
  07194	e0030392	 mul         r3, r2, r3
  07198	e0813003	 add         r3, r1, r3
  0719c	e5933000	 ldr         r3, [r3]
  071a0	e58d3020	 str         r3, [sp, #0x20]

; 2559 :             else

  071a4	ea00000c	 b           |$LN4@ProcessCom@4|
  071a8		 |$LN5@ProcessCom@4|

; 2560 :                 pChannel = m_pRxChannels[chanNum - m_nCppiChannelOffset];

  071a8	e59d3054	 ldr         r3, [sp, #0x54]
  071ac	e28310a4	 add         r1, r3, #0xA4
  071b0	e5dd3018	 ldrb        r3, [sp, #0x18]
  071b4	e1a02003	 mov         r2, r3
  071b8	e59d3054	 ldr         r3, [sp, #0x54]
  071bc	e2833028	 add         r3, r3, #0x28
  071c0	e5d33000	 ldrb        r3, [r3]
  071c4	e0422003	 sub         r2, r2, r3
  071c8	e3a03004	 mov         r3, #4
  071cc	e0030392	 mul         r3, r2, r3
  071d0	e0813003	 add         r3, r1, r3
  071d4	e5933000	 ldr         r3, [r3]
  071d8	e58d3020	 str         r3, [sp, #0x20]
  071dc		 |$LN4@ProcessCom@4|

; 2561 : 
; 2562 :             if (pChannel)

  071dc	e59d3020	 ldr         r3, [sp, #0x20]
  071e0	e3530000	 cmp         r3, #0
  071e4	0a000003	 beq         |$LN3@ProcessCom@4|

; 2563 :                 pChannel->ProcessCompletedTeardown(pTd);

  071e8	e59d101c	 ldr         r1, [sp, #0x1C]
  071ec	e59d0020	 ldr         r0, [sp, #0x20]
  071f0	eb000000	 bl          |?ProcessCompletedTeardown@CCppiDmaChannel@@IAAXPAU_TEARDOWN_DESCRIPTOR@@@Z|

; 2564 :             else

  071f4	ea00000c	 b           |$LN2@ProcessCom@4|
  071f8		 |$LN3@ProcessCom@4|

; 2565 :                 DEBUGMSG(ZONE_ERROR,
; 2566 :                     (L" CCppiDmaController::ProcessCompletionEvent(TD): ERROR - Ch %u deleted\r\n",
; 2567 :                     chanNum - m_nCppiChannelOffset));

  071f8	e5dd3018	 ldrb        r3, [sp, #0x18]
  071fc	e1a02003	 mov         r2, r3
  07200	e59d3054	 ldr         r3, [sp, #0x54]
  07204	e2833028	 add         r3, r3, #0x28
  07208	e5d33000	 ldrb        r3, [r3]
  0720c	e0421003	 sub         r1, r2, r3
  07210	e59f0088	 ldr         r0, [pc, #0x88]
  07214	eb000000	 bl          NKDbgPrintfW
  07218	e3a03001	 mov         r3, #1
  0721c	e58d3040	 str         r3, [sp, #0x40]
  07220	ea000001	 b           |$LN30@ProcessCom@4|
  07224	e3a03000	 mov         r3, #0
  07228	e58d3040	 str         r3, [sp, #0x40]
  0722c		 |$LN30@ProcessCom@4|
  0722c		 |$LN2@ProcessCom@4|

; 2568 :             break;

  0722c	ea00000c	 b           |$LN12@ProcessCom@4|
  07230		 |$LN1@ProcessCom@4|

; 2569 :         }
; 2570 : 
; 2571 :     default:
; 2572 :         ERRORMSG(TRUE,
; 2573 :             (L"Unknown descriptor type %u\r\n",
; 2574 :             type));

  07230	e3a02c0a	 mov         r2, #0xA, 24
  07234	e382200e	 orr         r2, r2, #0xE
  07238	e59f105c	 ldr         r1, [pc, #0x5C]
  0723c	e59f0054	 ldr         r0, [pc, #0x54]
  07240	eb000000	 bl          NKDbgPrintfW
  07244	e59d1000	 ldr         r1, [sp]
  07248	e59f0044	 ldr         r0, [pc, #0x44]
  0724c	eb000000	 bl          NKDbgPrintfW
  07250	e3a03001	 mov         r3, #1
  07254	e58d3044	 str         r3, [sp, #0x44]
  07258	ea000001	 b           |$LN32@ProcessCom@4|
  0725c	e3a03000	 mov         r3, #0
  07260	e58d3044	 str         r3, [sp, #0x44]
  07264		 |$LN32@ProcessCom@4|
  07264		 |$LN12@ProcessCom@4|

; 2575 :     }
; 2576 : 
; 2577 :     DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2578 :         (L"-CCppiDmaController::ProcessCompletionEvent\r\n"));

  07264	ea000004	 b           |$LN33@ProcessCom@4|
  07268	e59f0020	 ldr         r0, [pc, #0x20]
  0726c	eb000000	 bl          NKDbgPrintfW
  07270	e3a03001	 mov         r3, #1
  07274	e58d3048	 str         r3, [sp, #0x48]
  07278	ea000001	 b           |$LN34@ProcessCom@4|
  0727c		 |$LN33@ProcessCom@4|
  0727c	e3a03000	 mov         r3, #0
  07280	e58d3048	 str         r3, [sp, #0x48]
  07284		 |$LN34@ProcessCom@4|
  07284		 |$LN15@ProcessCom@4|

; 2579 : }

  07284	e28dd04c	 add         sp, sp, #0x4C
  07288	e89d6000	 ldmia       sp, {sp, lr}
  0728c	e12fff1e	 bx          lr
  07290		 |$LN38@ProcessCom@4|
  07290		 |$LN39@ProcessCom@4|
  07290	00000000	 DCD         |??_C@_1FM@LGEKKOOJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@|
  07294		 |$LN40@ProcessCom@4|
  07294	00000000	 DCD         |??_C@_1DK@BKCENHLF@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAd?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@|
  07298		 |$LN41@ProcessCom@4|
  07298	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0729c		 |$LN42@ProcessCom@4|
  0729c	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  072a0		 |$LN43@ProcessCom@4|
  072a0	00000000	 DCD         |??_C@_1JC@KEDFLBCF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@|
  072a4		 |$LN44@ProcessCom@4|
  072a4	00000000	 DCD         |??_C@_1JC@BIKFBDMF@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@|
  072a8		 |$LN45@ProcessCom@4|
  072a8	00000000	 DCD         |??_C@_1GO@OMIBJOAI@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@|
  072ac		 |$LN46@ProcessCom@4|
  072ac	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  072b0		 |$LN47@ProcessCom@4|
  072b0	00000000	 DCD         |dpCurSettings|
  072b4		 |$LN48@ProcessCom@4|
  072b4	00000000	 DCD         |??_C@_1GM@KDDHEOEK@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAp@|
  072b8		 |$M41402|

			 ENDP  ; |?ProcessCompletionEvent@CCppiDmaController@@IAAXPAX@Z|, CCppiDmaController::ProcessCompletionEvent

	EXPORT	|??_C@_1FC@EJPEILJP@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAO?$AAn?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@JDCDMGMC@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAO?$AAn?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|?OnCompletionEvent@CCppiDmaController@@IAAXXZ| ; CCppiDmaController::OnCompletionEvent

  00130			 AREA	 |.pdata|, PDATA
|$T41424| DCD	|$LN15@OnCompleti|
	DCD	0x40006004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@EJPEILJP@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAO?$AAn?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "O", 0x0, "n", 0x0, "C", 0x0, "o"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@JDCDMGMC@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAO?$AAn?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "O", 0x0, "n", 0x0, "C", 0x0, "o"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  072b8			 AREA	 |.text|, CODE, ARM

  072b8		 |?OnCompletionEvent@CCppiDmaController@@IAAXXZ| PROC ; CCppiDmaController::OnCompletionEvent

; 2582 : {

  072b8		 |$LN15@OnCompleti|
  072b8	e1a0c00d	 mov         r12, sp
  072bc	e92d0001	 stmdb       sp!, {r0}
  072c0	e92d5000	 stmdb       sp!, {r12, lr}
  072c4	e24dd028	 sub         sp, sp, #0x28
  072c8		 |$M41421|

; 2583 :     UINT32 pending1, pending2;
; 2584 : 
; 2585 :     DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2586 :         (L"+CCppiDmaController::OnCompletionEvent\r\n"));

  072c8	ea000004	 b           |$LN9@OnCompleti|
  072cc	e59f0160	 ldr         r0, [pc, #0x160]
  072d0	eb000000	 bl          NKDbgPrintfW
  072d4	e3a03001	 mov         r3, #1
  072d8	e58d3014	 str         r3, [sp, #0x14]
  072dc	ea000001	 b           |$LN10@OnCompleti|
  072e0		 |$LN9@OnCompleti|
  072e0	e3a03000	 mov         r3, #0
  072e4	e58d3014	 str         r3, [sp, #0x14]
  072e8		 |$LN10@OnCompleti|

; 2587 : 
; 2588 : 
; 2589 : 	pending1 = m_pCppiRegs->PEND1;

  072e8	e59d3030	 ldr         r3, [sp, #0x30]
  072ec	e283301c	 add         r3, r3, #0x1C
  072f0	e5933000	 ldr         r3, [r3]
  072f4	e2833a03	 add         r3, r3, #3, 20
  072f8	e2833094	 add         r3, r3, #0x94
  072fc	e5933000	 ldr         r3, [r3]
  07300	e58d3000	 str         r3, [sp]

; 2590 : 	pending2 = m_pCppiRegs->PEND2;

  07304	e59d3030	 ldr         r3, [sp, #0x30]
  07308	e283301c	 add         r3, r3, #0x1C
  0730c	e5933000	 ldr         r3, [r3]
  07310	e2833a03	 add         r3, r3, #3, 20
  07314	e2833098	 add         r3, r3, #0x98
  07318	e5933000	 ldr         r3, [r3]
  0731c	e58d3004	 str         r3, [sp, #4]
  07320		 |$LN6@OnCompleti|

; 2591 : 	while ((pending1 & USB_CPPI_PEND1_QMSK_HOST) ||
; 2592 : 		   (pending2 & USB_CPPI_PEND2_QMSK_HOST) )

  07320	e59d3000	 ldr         r3, [sp]
  07324	e3130102	 tst         r3, #2, 2
  07328	1a000002	 bne         |$LN4@OnCompleti|
  0732c	e59d3004	 ldr         r3, [sp, #4]
  07330	e3130012	 tst         r3, #0x12
  07334	0a000032	 beq         |$LN5@OnCompleti|
  07338		 |$LN4@OnCompleti|

; 2593 : 	{
; 2594 :         if (pending1 & QUEUE_N_BITMASK(USB_CPPI_TXCMPL_QNUM_HOST))

  07338	e59d3000	 ldr         r3, [sp]
  0733c	e3130102	 tst         r3, #2, 2
  07340	0a000008	 beq         |$LN3@OnCompleti|

; 2595 : 		{
; 2596 :             void* pD = QueuePop(USB_CPPI_TXCMPL_QNUM_HOST);

  07344	e3a0103f	 mov         r1, #0x3F
  07348	e59d0030	 ldr         r0, [sp, #0x30]
  0734c	eb000000	 bl          |?QueuePop@CCppiDmaController@@IAAPAXE@Z|
  07350	e58d0018	 str         r0, [sp, #0x18]
  07354	e59d3018	 ldr         r3, [sp, #0x18]
  07358	e58d3008	 str         r3, [sp, #8]

; 2597 :             ProcessCompletionEvent(pD);

  0735c	e59d1008	 ldr         r1, [sp, #8]
  07360	e59d0030	 ldr         r0, [sp, #0x30]
  07364	eb000000	 bl          |?ProcessCompletionEvent@CCppiDmaController@@IAAXPAX@Z|
  07368		 |$LN3@OnCompleti|

; 2598 :         }
; 2599 :         if (pending2 & QUEUE_N_BITMASK(USB_CPPI_RXCMPL_QNUM_HOST)) 

  07368	e59d3004	 ldr         r3, [sp, #4]
  0736c	e3130002	 tst         r3, #2
  07370	0a000008	 beq         |$LN2@OnCompleti|

; 2600 : 		{
; 2601 :             void* pD = QueuePop(USB_CPPI_RXCMPL_QNUM_HOST);

  07374	e3a01041	 mov         r1, #0x41
  07378	e59d0030	 ldr         r0, [sp, #0x30]
  0737c	eb000000	 bl          |?QueuePop@CCppiDmaController@@IAAPAXE@Z|
  07380	e58d001c	 str         r0, [sp, #0x1C]
  07384	e59d301c	 ldr         r3, [sp, #0x1C]
  07388	e58d300c	 str         r3, [sp, #0xC]

; 2602 :             ProcessCompletionEvent(pD);

  0738c	e59d100c	 ldr         r1, [sp, #0xC]
  07390	e59d0030	 ldr         r0, [sp, #0x30]
  07394	eb000000	 bl          |?ProcessCompletionEvent@CCppiDmaController@@IAAXPAX@Z|
  07398		 |$LN2@OnCompleti|

; 2603 :         }
; 2604 :         if (pending2 & QUEUE_N_BITMASK(USB_CPPI_TDCMPL_QNUM)) 

  07398	e59d3004	 ldr         r3, [sp, #4]
  0739c	e3130010	 tst         r3, #0x10
  073a0	0a000008	 beq         |$LN1@OnCompleti|

; 2605 : 		{
; 2606 :             void* pD = QueuePop(USB_CPPI_TDCMPL_QNUM);

  073a4	e3a01044	 mov         r1, #0x44
  073a8	e59d0030	 ldr         r0, [sp, #0x30]
  073ac	eb000000	 bl          |?QueuePop@CCppiDmaController@@IAAPAXE@Z|
  073b0	e58d0020	 str         r0, [sp, #0x20]
  073b4	e59d3020	 ldr         r3, [sp, #0x20]
  073b8	e58d3010	 str         r3, [sp, #0x10]

; 2607 :             ProcessCompletionEvent(pD);

  073bc	e59d1010	 ldr         r1, [sp, #0x10]
  073c0	e59d0030	 ldr         r0, [sp, #0x30]
  073c4	eb000000	 bl          |?ProcessCompletionEvent@CCppiDmaController@@IAAXPAX@Z|
  073c8		 |$LN1@OnCompleti|

; 2608 :         }
; 2609 : 		pending1 = m_pCppiRegs->PEND1;

  073c8	e59d3030	 ldr         r3, [sp, #0x30]
  073cc	e283301c	 add         r3, r3, #0x1C
  073d0	e5933000	 ldr         r3, [r3]
  073d4	e2833a03	 add         r3, r3, #3, 20
  073d8	e2833094	 add         r3, r3, #0x94
  073dc	e5933000	 ldr         r3, [r3]
  073e0	e58d3000	 str         r3, [sp]

; 2610 : 		pending2 = m_pCppiRegs->PEND2;

  073e4	e59d3030	 ldr         r3, [sp, #0x30]
  073e8	e283301c	 add         r3, r3, #0x1C
  073ec	e5933000	 ldr         r3, [r3]
  073f0	e2833a03	 add         r3, r3, #3, 20
  073f4	e2833098	 add         r3, r3, #0x98
  073f8	e5933000	 ldr         r3, [r3]
  073fc	e58d3004	 str         r3, [sp, #4]

; 2611 :     }

  07400	eaffffc6	 b           |$LN6@OnCompleti|
  07404		 |$LN5@OnCompleti|

; 2612 : 
; 2613 :     DEBUGMSG(ZONE_PDD_DMA && ZONE_VERBOSE,
; 2614 :         (L"-CCppiDmaController::OnCompletionEvent\r\n"));

  07404	ea000004	 b           |$LN11@OnCompleti|
  07408	e59f0020	 ldr         r0, [pc, #0x20]
  0740c	eb000000	 bl          NKDbgPrintfW
  07410	e3a03001	 mov         r3, #1
  07414	e58d3024	 str         r3, [sp, #0x24]
  07418	ea000001	 b           |$LN12@OnCompleti|
  0741c		 |$LN11@OnCompleti|
  0741c	e3a03000	 mov         r3, #0
  07420	e58d3024	 str         r3, [sp, #0x24]
  07424		 |$LN12@OnCompleti|

; 2615 : }

  07424	e28dd028	 add         sp, sp, #0x28
  07428	e89d6000	 ldmia       sp, {sp, lr}
  0742c	e12fff1e	 bx          lr
  07430		 |$LN16@OnCompleti|
  07430		 |$LN17@OnCompleti|
  07430	00000000	 DCD         |??_C@_1FC@EJPEILJP@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAO?$AAn?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo@|
  07434		 |$LN18@OnCompleti|
  07434	00000000	 DCD         |??_C@_1FC@JDCDMGMC@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAO?$AAn?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo@|
  07438		 |$M41422|

			 ENDP  ; |?OnCompletionEvent@CCppiDmaController@@IAAXXZ|, CCppiDmaController::OnCompletionEvent

	EXPORT	|??_C@_1JA@GIBCJNIM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo?$AAn?$AAC@| [ DATA ] ; `string'
	EXPORT	|?CompletionCallback@CCppiDmaController@@KAXPAX@Z| ; CCppiDmaController::CompletionCallback

  00138			 AREA	 |.pdata|, PDATA
|$T41434| DCD	|$LN8@Completion|
	DCD	0x40001d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@GIBCJNIM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo?$AAn?$AAC@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "C", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "b", 0x0, "a"
	DCB	0x0, "c", 0x0, "k", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  07438			 AREA	 |.text|, CODE, ARM

  07438		 |?CompletionCallback@CCppiDmaController@@KAXPAX@Z| PROC ; CCppiDmaController::CompletionCallback

; 2618 : {

  07438		 |$LN8@Completion|
  07438	e1a0c00d	 mov         r12, sp
  0743c	e92d0001	 stmdb       sp!, {r0}
  07440	e92d5000	 stmdb       sp!, {r12, lr}
  07444	e24dd004	 sub         sp, sp, #4
  07448		 |$M41431|

; 2619 :     if (param == NULL) {

  07448	e59d300c	 ldr         r3, [sp, #0xC]
  0744c	e3530000	 cmp         r3, #0
  07450	1a00000d	 bne         |$LN1@Completion|

; 2620 :         ERRORMSG(TRUE,
; 2621 :             (L" CCppiDmaController::CompletionCallback: ERROR - Invalid param 0x%08x\r\n",
; 2622 :             param));

  07454	e3a02c0a	 mov         r2, #0xA, 24
  07458	e382203e	 orr         r2, r2, #0x3E
  0745c	e59f1044	 ldr         r1, [pc, #0x44]
  07460	e59f003c	 ldr         r0, [pc, #0x3C]
  07464	eb000000	 bl          NKDbgPrintfW
  07468	e59d100c	 ldr         r1, [sp, #0xC]
  0746c	e59f002c	 ldr         r0, [pc, #0x2C]
  07470	eb000000	 bl          NKDbgPrintfW
  07474	e3a03001	 mov         r3, #1
  07478	e58d3000	 str         r3, [sp]
  0747c	ea000001	 b           |$LN5@Completion|
  07480	e3a03000	 mov         r3, #0
  07484	e58d3000	 str         r3, [sp]
  07488		 |$LN5@Completion|

; 2623 :         return;

  07488	ea000001	 b           |$LN2@Completion|
  0748c		 |$LN1@Completion|

; 2624 :     }
; 2625 : 
; 2626 :     ((CCppiDmaController*)param)->OnCompletionEvent();

  0748c	e59d000c	 ldr         r0, [sp, #0xC]
  07490	eb000000	 bl          |?OnCompletionEvent@CCppiDmaController@@IAAXXZ|
  07494		 |$LN2@Completion|

; 2627 : }

  07494	e28dd004	 add         sp, sp, #4
  07498	e89d6000	 ldmia       sp, {sp, lr}
  0749c	e12fff1e	 bx          lr
  074a0		 |$LN9@Completion|
  074a0		 |$LN10@Completion|
  074a0	00000000	 DCD         |??_C@_1JA@GIBCJNIM@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAi?$AAo?$AAn?$AAC@|
  074a4		 |$LN11@Completion|
  074a4	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  074a8		 |$LN12@Completion|
  074a8	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  074ac		 |$M41432|

			 ENDP  ; |?CompletionCallback@CCppiDmaController@@KAXPAX@Z|, CCppiDmaController::CompletionCallback

	EXPORT	|?HdPoolInit@CCppiDmaController@@IAAXXZ| ; CCppiDmaController::HdPoolInit
	EXPORT	|??_C@_1IC@MLDDFDEE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@MFEOKLLN@?$AAF?$AAA?$AAL?$AAI?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@PDIDIINM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAu?$AA?5?$AAb?$AAy?$AAt@| [ DATA ] ; `string'
	EXPORT	|?PoolUnlock@CCppiDmaController@@IAAXXZ| ; CCppiDmaController::PoolUnlock
	EXPORT	|?PoolLock@CCppiDmaController@@IAAXXZ|	; CCppiDmaController::PoolLock
	EXPORT	|??_C@_1FA@CJFIFGHB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	IMPORT	|USBCDMA_RegisterUsbModule|

  00140			 AREA	 |.pdata|, PDATA
|$T41456| DCD	|$LN17@PoolInit|
	DCD	0x40008404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@MLDDFDEE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AA?$CF@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "o", 0x0, "o", 0x0, "l"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "s", 0x0, "p", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "H", 0x0, "D"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@MFEOKLLN@?$AAF?$AAA?$AAL?$AAI?$AAE?$AAD?$AA?$AA@| DCB "F", 0x0, "A"
	DCB	0x0, "L", 0x0, "I", 0x0, "E", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@PDIDIINM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAu?$AA?5?$AAb?$AAy?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "b", 0x0, "y"
	DCB	0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r", 0x0, "i"
	DCB	0x0, "p", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "o", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@CJFIFGHB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AA?$CF@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "o", 0x0, "o", 0x0, "l"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  074ac			 AREA	 |.text|, CODE, ARM

  074ac		 |?PoolInit@CCppiDmaController@@IAAHXZ| PROC ; CCppiDmaController::PoolInit

; 2630 : {

  074ac		 |$LN17@PoolInit|
  074ac	e1a0c00d	 mov         r12, sp
  074b0	e92d0001	 stmdb       sp!, {r0}
  074b4	e92d5000	 stmdb       sp!, {r12, lr}
  074b8	e24dd030	 sub         sp, sp, #0x30
  074bc		 |$M41453|

; 2631 :     // Only initialise once
; 2632 :     if (m_pvPool != NULL)

  074bc	e59d3038	 ldr         r3, [sp, #0x38]
  074c0	e2833f47	 add         r3, r3, #0x47, 30
  074c4	e5933000	 ldr         r3, [r3]
  074c8	e3530000	 cmp         r3, #0
  074cc	0a000002	 beq         |$LN2@PoolInit|

; 2633 :         return TRUE;

  074d0	e3a03001	 mov         r3, #1
  074d4	e58d300c	 str         r3, [sp, #0xC]
  074d8	ea00006b	 b           |$LN3@PoolInit|
  074dc		 |$LN2@PoolInit|

; 2634 : 
; 2635 :     UINT16 nHdCount = (UINT16)m_dwDescriptorCount;

  074dc	e59d3038	 ldr         r3, [sp, #0x38]
  074e0	e2833024	 add         r3, r3, #0x24
  074e4	e5933000	 ldr         r3, [r3]
  074e8	e1a03803	 mov         r3, r3, lsl #16
  074ec	e1a03823	 mov         r3, r3, lsr #16
  074f0	e1cd30b8	 strh        r3, [sp, #8]

; 2636 : 
; 2637 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2638 :         (L"+CCppiDmaController::PoolInit: %u HDs\r\n",
; 2639 :         nHdCount));

  074f4	e1dd30b8	 ldrh        r3, [sp, #8]
  074f8	e1a01003	 mov         r1, r3
  074fc	e59f01b4	 ldr         r0, [pc, #0x1B4]
  07500	eb000000	 bl          NKDbgPrintfW
  07504	e3a03001	 mov         r3, #1
  07508	e58d3018	 str         r3, [sp, #0x18]
  0750c	ea000001	 b           |$LN6@PoolInit|
  07510	e3a03000	 mov         r3, #0
  07514	e58d3018	 str         r3, [sp, #0x18]
  07518		 |$LN6@PoolInit|

; 2640 : 
; 2641 :     PoolLock();

  07518	e59d0038	 ldr         r0, [sp, #0x38]
  0751c	eb000000	 bl          |?PoolLock@CCppiDmaController@@IAAXXZ|

; 2642 : 
; 2643 :     m_hUsbCdma = USBCDMA_RegisterUsbModule(
; 2644 :         nHdCount,
; 2645 :         CPPI_HD_SIZE,
; 2646 :         &m_paPool,
; 2647 :         &m_pvPool,
; 2648 :         CompletionCallback,
; 2649 :         this);

  07520	e59d3038	 ldr         r3, [sp, #0x38]
  07524	e58d3004	 str         r3, [sp, #4]
  07528	e59f3184	 ldr         r3, [pc, #0x184]
  0752c	e58d3000	 str         r3, [sp]
  07530	e59d3038	 ldr         r3, [sp, #0x38]
  07534	e2833f47	 add         r3, r3, #0x47, 30
  07538	e59d2038	 ldr         r2, [sp, #0x38]
  0753c	e2822e12	 add         r2, r2, #0x12, 28
  07540	e3a01040	 mov         r1, #0x40
  07544	e1dd00b8	 ldrh        r0, [sp, #8]
  07548	eb000000	 bl          USBCDMA_RegisterUsbModule
  0754c	e58d001c	 str         r0, [sp, #0x1C]
  07550	e59d3038	 ldr         r3, [sp, #0x38]
  07554	e2832020	 add         r2, r3, #0x20
  07558	e59d301c	 ldr         r3, [sp, #0x1C]
  0755c	e5823000	 str         r3, [r2]

; 2650 : 
; 2651 :     m_cbPoolSize = nHdCount * CPPI_HD_SIZE;

  07560	e1dd10b8	 ldrh        r1, [sp, #8]
  07564	e3a03040	 mov         r3, #0x40
  07568	e0020391	 mul         r2, r1, r3
  0756c	e59d3038	 ldr         r3, [sp, #0x38]
  07570	e2833f4a	 add         r3, r3, #0x4A, 30
  07574	e5832000	 str         r2, [r3]

; 2652 :     m_pvHdPool = NULL;

  07578	e59d3038	 ldr         r3, [sp, #0x38]
  0757c	e2832d05	 add         r2, r3, #5, 26
  07580	e3a03000	 mov         r3, #0
  07584	e5823000	 str         r3, [r2]

; 2653 :     m_pvHdPoolHead = NULL;

  07588	e59d3038	 ldr         r3, [sp, #0x38]
  0758c	e2832f51	 add         r2, r3, #0x51, 30
  07590	e3a03000	 mov         r3, #0
  07594	e5823000	 str         r3, [r2]

; 2654 : 
; 2655 :     PoolUnlock();

  07598	e59d0038	 ldr         r0, [sp, #0x38]
  0759c	eb000000	 bl          |?PoolUnlock@CCppiDmaController@@IAAXXZ|

; 2656 : 
; 2657 :     ERRORMSG(m_pvPool == NULL,
; 2658 :         (L"ERROR: Failed to allocate %u bytes for the descriptor pool\r\n",
; 2659 :         m_cbPoolSize));

  075a0	e59d3038	 ldr         r3, [sp, #0x38]
  075a4	e2833f47	 add         r3, r3, #0x47, 30
  075a8	e5933000	 ldr         r3, [r3]
  075ac	e3530000	 cmp         r3, #0
  075b0	1a00000c	 bne         |$LN7@PoolInit|
  075b4	e3a02c0a	 mov         r2, #0xA, 24
  075b8	e3822063	 orr         r2, r2, #0x63
  075bc	e59f10ec	 ldr         r1, [pc, #0xEC]
  075c0	e59f00e4	 ldr         r0, [pc, #0xE4]
  075c4	eb000000	 bl          NKDbgPrintfW
  075c8	e59d3038	 ldr         r3, [sp, #0x38]
  075cc	e2833f4a	 add         r3, r3, #0x4A, 30
  075d0	e5931000	 ldr         r1, [r3]
  075d4	e59f00cc	 ldr         r0, [pc, #0xCC]
  075d8	eb000000	 bl          NKDbgPrintfW
  075dc	e3a03001	 mov         r3, #1
  075e0	e58d3020	 str         r3, [sp, #0x20]
  075e4	ea000001	 b           |$LN8@PoolInit|
  075e8		 |$LN7@PoolInit|
  075e8	e3a03000	 mov         r3, #0
  075ec	e58d3020	 str         r3, [sp, #0x20]
  075f0		 |$LN8@PoolInit|

; 2660 : 
; 2661 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2662 :         (L"-CCppiDmaController::PoolInit: %s - Allocated space for %u HDs\r\n",
; 2663 :         (m_pvPool != NULL) ?
; 2664 :             L"SUCCEEDED" :
; 2665 :             L"FALIED",
; 2666 :         nHdCount));

  075f0	e59d3038	 ldr         r3, [sp, #0x38]
  075f4	e2833f47	 add         r3, r3, #0x47, 30
  075f8	e5933000	 ldr         r3, [r3]
  075fc	e3530000	 cmp         r3, #0
  07600	0a000002	 beq         |$LN9@PoolInit|
  07604	e59f3098	 ldr         r3, [pc, #0x98]
  07608	e58d3024	 str         r3, [sp, #0x24]
  0760c	ea000001	 b           |$LN10@PoolInit|
  07610		 |$LN9@PoolInit|
  07610	e59f3088	 ldr         r3, [pc, #0x88]
  07614	e58d3024	 str         r3, [sp, #0x24]
  07618		 |$LN10@PoolInit|
  07618	e1dd30b8	 ldrh        r3, [sp, #8]
  0761c	e1a02003	 mov         r2, r3
  07620	e59d1024	 ldr         r1, [sp, #0x24]
  07624	e59f0070	 ldr         r0, [pc, #0x70]
  07628	eb000000	 bl          NKDbgPrintfW
  0762c	e3a03001	 mov         r3, #1
  07630	e58d3028	 str         r3, [sp, #0x28]
  07634	ea000001	 b           |$LN12@PoolInit|
  07638	e3a03000	 mov         r3, #0
  0763c	e58d3028	 str         r3, [sp, #0x28]
  07640		 |$LN12@PoolInit|

; 2667 : 
; 2668 :     if (m_pvPool)

  07640	e59d3038	 ldr         r3, [sp, #0x38]
  07644	e2833f47	 add         r3, r3, #0x47, 30
  07648	e5933000	 ldr         r3, [r3]
  0764c	e3530000	 cmp         r3, #0
  07650	0a000001	 beq         |$LN1@PoolInit|

; 2669 :         HdPoolInit();

  07654	e59d0038	 ldr         r0, [sp, #0x38]
  07658	eb000000	 bl          |?HdPoolInit@CCppiDmaController@@IAAXXZ|
  0765c		 |$LN1@PoolInit|

; 2670 : 
; 2671 :     return (m_pvPool != NULL);

  0765c	e59d3038	 ldr         r3, [sp, #0x38]
  07660	e2833f47	 add         r3, r3, #0x47, 30
  07664	e5933000	 ldr         r3, [r3]
  07668	e3530000	 cmp         r3, #0
  0766c	0a000002	 beq         |$LN13@PoolInit|
  07670	e3a03001	 mov         r3, #1
  07674	e58d302c	 str         r3, [sp, #0x2C]
  07678	ea000001	 b           |$LN14@PoolInit|
  0767c		 |$LN13@PoolInit|
  0767c	e3a03000	 mov         r3, #0
  07680	e58d302c	 str         r3, [sp, #0x2C]
  07684		 |$LN14@PoolInit|
  07684	e59d302c	 ldr         r3, [sp, #0x2C]
  07688	e58d300c	 str         r3, [sp, #0xC]
  0768c		 |$LN3@PoolInit|

; 2672 : }

  0768c	e59d000c	 ldr         r0, [sp, #0xC]
  07690	e28dd030	 add         sp, sp, #0x30
  07694	e89d6000	 ldmia       sp, {sp, lr}
  07698	e12fff1e	 bx          lr
  0769c		 |$LN18@PoolInit|
  0769c		 |$LN19@PoolInit|
  0769c	00000000	 DCD         |??_C@_1IC@MLDDFDEE@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AA?$CF@|
  076a0		 |$LN20@PoolInit|
  076a0	00000000	 DCD         |??_C@_1O@MFEOKLLN@?$AAF?$AAA?$AAL?$AAI?$AAE?$AAD?$AA?$AA@|
  076a4		 |$LN21@PoolInit|
  076a4	00000000	 DCD         |??_C@_1BE@PGGAGLJA@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAE?$AAD?$AAE?$AAD?$AA?$AA@|
  076a8		 |$LN22@PoolInit|
  076a8	00000000	 DCD         |??_C@_1HK@PDIDIINM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAu?$AA?5?$AAb?$AAy?$AAt@|
  076ac		 |$LN23@PoolInit|
  076ac	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  076b0		 |$LN24@PoolInit|
  076b0	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  076b4		 |$LN25@PoolInit|
  076b4	00000000	 DCD         |?CompletionCallback@CCppiDmaController@@KAXPAX@Z|
  076b8		 |$LN26@PoolInit|
  076b8	00000000	 DCD         |??_C@_1FA@CJFIFGHB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AA?$CF@|
  076bc		 |$M41454|

			 ENDP  ; |?PoolInit@CCppiDmaController@@IAAHXZ|, CCppiDmaController::PoolInit

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T41470| DCD	|$LN5@PoolLock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PoolLock@CCppiDmaController@@IAAXXZ| PROC ; CCppiDmaController::PoolLock

; 205  :     void PoolLock   () { EnterCriticalSection(&m_csPoolLock); }

  00000		 |$LN5@PoolLock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M41467|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830f4b	 add         r0, r3, #0x4B, 30
  00014	eb000000	 bl          EnterCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M41468|

			 ENDP  ; |?PoolLock@CCppiDmaController@@IAAXXZ|, CCppiDmaController::PoolLock


  00000			 AREA	 |.pdata|, PDATA
|$T41477| DCD	|$LN5@PoolUnlock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PoolUnlock@CCppiDmaController@@IAAXXZ| PROC ; CCppiDmaController::PoolUnlock

; 206  :     void PoolUnlock () { LeaveCriticalSection(&m_csPoolLock); }

  00000		 |$LN5@PoolUnlock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M41474|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830f4b	 add         r0, r3, #0x4B, 30
  00014	eb000000	 bl          LeaveCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M41475|

			 ENDP  ; |?PoolUnlock@CCppiDmaController@@IAAXXZ|, CCppiDmaController::PoolUnlock

	EXPORT	|??_C@_1EE@HDNNHNIN@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@PGCBCLAA@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN@| [ DATA ] ; `string'
	IMPORT	|USBCDMA_DeregisterUsbModule|

  00148			 AREA	 |.pdata|, PDATA
|$T41488| DCD	|$LN10@PoolDeinit|
	DCD	0x40004204
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\cppidma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@HDNNHNIN@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "o", 0x0, "o", 0x0, "l"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@PGCBCLAA@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "o", 0x0, "o", 0x0, "l"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  076bc			 AREA	 |.text|, CODE, ARM

  076bc		 |?PoolDeinit@CCppiDmaController@@IAAXXZ| PROC ; CCppiDmaController::PoolDeinit

; 2675 : {

  076bc		 |$LN10@PoolDeinit|
  076bc	e1a0c00d	 mov         r12, sp
  076c0	e92d0001	 stmdb       sp!, {r0}
  076c4	e92d5000	 stmdb       sp!, {r12, lr}
  076c8	e24dd00c	 sub         sp, sp, #0xC
  076cc		 |$M41485|

; 2676 :     // Only deinitialise once
; 2677 :     if (m_pvPool == NULL)

  076cc	e59d3014	 ldr         r3, [sp, #0x14]
  076d0	e2833f47	 add         r3, r3, #0x47, 30
  076d4	e5933000	 ldr         r3, [r3]
  076d8	e3530000	 cmp         r3, #0
  076dc	1a000000	 bne         |$LN1@PoolDeinit|

; 2678 :         return;

  076e0	ea000032	 b           |$LN2@PoolDeinit|
  076e4		 |$LN1@PoolDeinit|

; 2679 : 
; 2680 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2681 :         (L"+CCppiDmaController::PoolDeinit\r\n"));

  076e4	e59f00d4	 ldr         r0, [pc, #0xD4]
  076e8	eb000000	 bl          NKDbgPrintfW
  076ec	e3a03001	 mov         r3, #1
  076f0	e58d3000	 str         r3, [sp]
  076f4	ea000001	 b           |$LN5@PoolDeinit|
  076f8	e3a03000	 mov         r3, #0
  076fc	e58d3000	 str         r3, [sp]
  07700		 |$LN5@PoolDeinit|

; 2682 : 
; 2683 :     PoolLock();

  07700	e59d0014	 ldr         r0, [sp, #0x14]
  07704	eb000000	 bl          |?PoolLock@CCppiDmaController@@IAAXXZ|

; 2684 : 
; 2685 :     m_pvHdPool = NULL;

  07708	e59d3014	 ldr         r3, [sp, #0x14]
  0770c	e2832d05	 add         r2, r3, #5, 26
  07710	e3a03000	 mov         r3, #0
  07714	e5823000	 str         r3, [r2]

; 2686 :     m_pvHdPoolHead = NULL;

  07718	e59d3014	 ldr         r3, [sp, #0x14]
  0771c	e2832f51	 add         r2, r3, #0x51, 30
  07720	e3a03000	 mov         r3, #0
  07724	e5823000	 str         r3, [r2]

; 2687 : 
; 2688 :     USBCDMA_DeregisterUsbModule(m_hUsbCdma);

  07728	e59d3014	 ldr         r3, [sp, #0x14]
  0772c	e2833020	 add         r3, r3, #0x20
  07730	e5930000	 ldr         r0, [r3]
  07734	eb000000	 bl          USBCDMA_DeregisterUsbModule

; 2689 :     m_hUsbCdma = NULL;

  07738	e59d3014	 ldr         r3, [sp, #0x14]
  0773c	e2832020	 add         r2, r3, #0x20
  07740	e3a03000	 mov         r3, #0
  07744	e5823000	 str         r3, [r2]

; 2690 : 
; 2691 :     m_cbPoolSize = 0;

  07748	e59d3014	 ldr         r3, [sp, #0x14]
  0774c	e2832f4a	 add         r2, r3, #0x4A, 30
  07750	e3a03000	 mov         r3, #0
  07754	e5823000	 str         r3, [r2]

; 2692 :     m_paPool.QuadPart = 0;

  07758	e59d3014	 ldr         r3, [sp, #0x14]
  0775c	e2833e12	 add         r3, r3, #0x12, 28
  07760	e58d3004	 str         r3, [sp, #4]
  07764	e59d2004	 ldr         r2, [sp, #4]
  07768	e3a03000	 mov         r3, #0
  0776c	e5823000	 str         r3, [r2]
  07770	e59d2004	 ldr         r2, [sp, #4]
  07774	e3a03000	 mov         r3, #0
  07778	e5823004	 str         r3, [r2, #4]

; 2693 :     m_pvPool = NULL;

  0777c	e59d3014	 ldr         r3, [sp, #0x14]
  07780	e2832f47	 add         r2, r3, #0x47, 30
  07784	e3a03000	 mov         r3, #0
  07788	e5823000	 str         r3, [r2]

; 2694 : 
; 2695 :     PoolUnlock();

  0778c	e59d0014	 ldr         r0, [sp, #0x14]
  07790	eb000000	 bl          |?PoolUnlock@CCppiDmaController@@IAAXXZ|

; 2696 : 
; 2697 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2698 :         (L"-CCppiDmaController::PoolDeinit\r\n"));

  07794	e59f0020	 ldr         r0, [pc, #0x20]
  07798	eb000000	 bl          NKDbgPrintfW
  0779c	e3a03001	 mov         r3, #1
  077a0	e58d3008	 str         r3, [sp, #8]
  077a4	ea000001	 b           |$LN7@PoolDeinit|
  077a8	e3a03000	 mov         r3, #0
  077ac	e58d3008	 str         r3, [sp, #8]
  077b0		 |$LN7@PoolDeinit|
  077b0		 |$LN2@PoolDeinit|

; 2699 : }

  077b0	e28dd00c	 add         sp, sp, #0xC
  077b4	e89d6000	 ldmia       sp, {sp, lr}
  077b8	e12fff1e	 bx          lr
  077bc		 |$LN11@PoolDeinit|
  077bc		 |$LN12@PoolDeinit|
  077bc	00000000	 DCD         |??_C@_1EE@HDNNHNIN@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN@|
  077c0		 |$LN13@PoolDeinit|
  077c0	00000000	 DCD         |??_C@_1EE@PGCBCLAA@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAo?$AAo?$AAl?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN@|
  077c4		 |$M41486|

			 ENDP  ; |?PoolDeinit@CCppiDmaController@@IAAXXZ|, CCppiDmaController::PoolDeinit

	EXPORT	|??_C@_1GI@EHFKNNBJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@CJBFNHMB@?$AAH?$AAD?$AA?5?$AA?$CF?$AA0?$AA4?$AAu?$AA?3?$AA?5?$AAP?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAV?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@JENOFIGB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3@| [ DATA ] ; `string'

  00150			 AREA	 |.pdata|, PDATA
|$T41504| DCD	|$LN18@HdPoolInit|
	DCD	0x40007604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@EHFKNNBJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3@| DCB "-"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "d", 0x0, "P", 0x0, "o"
	DCB	0x0, "o", 0x0, "l", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "u", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@CJBFNHMB@?$AAH?$AAD?$AA?5?$AA?$CF?$AA0?$AA4?$AAu?$AA?3?$AA?5?$AAP?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAV?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| DCB "H"
	DCB	0x0, "D", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "u"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "V", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@JENOFIGB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3@| DCB "+"
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "d", 0x0, "P", 0x0, "o"
	DCB	0x0, "o", 0x0, "l", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, "H"
	DCB	0x0, "D", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  077c4			 AREA	 |.text|, CODE, ARM

  077c4		 |?HdPoolInit@CCppiDmaController@@IAAXXZ| PROC ; CCppiDmaController::HdPoolInit

; 2702 : {

  077c4		 |$LN18@HdPoolInit|
  077c4	e1a0c00d	 mov         r12, sp
  077c8	e92d0001	 stmdb       sp!, {r0}
  077cc	e92d5000	 stmdb       sp!, {r12, lr}
  077d0	e24dd020	 sub         sp, sp, #0x20
  077d4		 |$M41501|

; 2703 :     unsigned nHdCount = m_dwDescriptorCount;

  077d4	e59d3028	 ldr         r3, [sp, #0x28]
  077d8	e2833024	 add         r3, r3, #0x24
  077dc	e5933000	 ldr         r3, [r3]
  077e0	e58d3004	 str         r3, [sp, #4]

; 2704 :     unsigned n = 0;

  077e4	e3a03000	 mov         r3, #0
  077e8	e58d3000	 str         r3, [sp]

; 2705 : 
; 2706 :     // Only initialise once
; 2707 :     if (m_pvHdPool != NULL)

  077ec	e59d3028	 ldr         r3, [sp, #0x28]
  077f0	e2833d05	 add         r3, r3, #5, 26
  077f4	e5933000	 ldr         r3, [r3]
  077f8	e3530000	 cmp         r3, #0
  077fc	0a000001	 beq         |$LN5@HdPoolInit|
  07800	ea000054	 b           |$LN4@HdPoolInit|

; 2708 :         goto done;

  07804	ea000053	 b           |$done$40037|
  07808		 |$LN5@HdPoolInit|

; 2709 : 
; 2710 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2711 :         (L"+CCppiDmaController::HdPoolInit: %u HDs\r\n", nHdCount));

  07808	e59d1004	 ldr         r1, [sp, #4]
  0780c	e59f0184	 ldr         r0, [pc, #0x184]
  07810	eb000000	 bl          NKDbgPrintfW
  07814	e3a03001	 mov         r3, #1
  07818	e58d300c	 str         r3, [sp, #0xC]
  0781c	ea000001	 b           |$LN9@HdPoolInit|
  07820	e3a03000	 mov         r3, #0
  07824	e58d300c	 str         r3, [sp, #0xC]
  07828		 |$LN9@HdPoolInit|

; 2712 : 
; 2713 :     // The descriptor pool must be initialised before the host descriptor pool
; 2714 :     PoolInit();

  07828	e59d0028	 ldr         r0, [sp, #0x28]
  0782c	eb000000	 bl          |?PoolInit@CCppiDmaController@@IAAHXZ|

; 2715 :     DEBUGCHK(m_pvPool != NULL);

  07830	e59d3028	 ldr         r3, [sp, #0x28]
  07834	e2833f47	 add         r3, r3, #0x47, 30
  07838	e5933000	 ldr         r3, [r3]
  0783c	e3530000	 cmp         r3, #0
  07840	0a000002	 beq         |$LN10@HdPoolInit|
  07844	e3a03001	 mov         r3, #1
  07848	e58d3010	 str         r3, [sp, #0x10]
  0784c	ea000008	 b           |$LN11@HdPoolInit|
  07850		 |$LN10@HdPoolInit|
  07850	e3a03c0a	 mov         r3, #0xA, 24
  07854	e383309b	 orr         r3, r3, #0x9B
  07858	e59f2134	 ldr         r2, [pc, #0x134]
  0785c	e59f112c	 ldr         r1, [pc, #0x12C]
  07860	e59f0124	 ldr         r0, [pc, #0x124]
  07864	eb000000	 bl          NKDbgPrintfW
  07868	e6000010	 __debugbreak_ce
  0786c	e3a03000	 mov         r3, #0
  07870	e58d3010	 str         r3, [sp, #0x10]
  07874		 |$LN11@HdPoolInit|

; 2716 : 
; 2717 :     // The host descriptor pool begins at the base of the descriptor pool
; 2718 :     HOST_DESCRIPTOR* pHd = (HOST_DESCRIPTOR*)m_pvPool;

  07874	e59d3028	 ldr         r3, [sp, #0x28]
  07878	e2833f47	 add         r3, r3, #0x47, 30
  0787c	e5933000	 ldr         r3, [r3]
  07880	e58d3008	 str         r3, [sp, #8]

; 2719 :     m_pvHdPool = (HOST_DESCRIPTOR*)&pHd[0];

  07884	e59d3028	 ldr         r3, [sp, #0x28]
  07888	e2832d05	 add         r2, r3, #5, 26
  0788c	e59d3008	 ldr         r3, [sp, #8]
  07890	e5823000	 str         r3, [r2]

; 2720 : 
; 2721 :     PoolLock();

  07894	e59d0028	 ldr         r0, [sp, #0x28]
  07898	eb000000	 bl          |?PoolLock@CCppiDmaController@@IAAXXZ|

; 2722 : 
; 2723 :     // Build the host descriptor free list
; 2724 :     m_pvHdPoolHead = NULL;

  0789c	e59d3028	 ldr         r3, [sp, #0x28]
  078a0	e2832f51	 add         r2, r3, #0x51, 30
  078a4	e3a03000	 mov         r3, #0
  078a8	e5823000	 str         r3, [r2]

; 2725 :     for (n = 0; n < nHdCount; n++, pHd++)

  078ac	e3a03000	 mov         r3, #0
  078b0	e58d3000	 str         r3, [sp]
  078b4	ea000005	 b           |$LN3@HdPoolInit|
  078b8		 |$LN2@HdPoolInit|
  078b8	e59d3000	 ldr         r3, [sp]
  078bc	e2833001	 add         r3, r3, #1
  078c0	e58d3000	 str         r3, [sp]
  078c4	e59d3008	 ldr         r3, [sp, #8]
  078c8	e2833040	 add         r3, r3, #0x40
  078cc	e58d3008	 str         r3, [sp, #8]
  078d0		 |$LN3@HdPoolInit|
  078d0	e59d2000	 ldr         r2, [sp]
  078d4	e59d3004	 ldr         r3, [sp, #4]
  078d8	e1520003	 cmp         r2, r3
  078dc	2a00001b	 bcs         |$LN1@HdPoolInit|

; 2726 :     {
; 2727 :         // Set descriptor type to 'host'
; 2728 :         pHd->DescInfo = (UINT32)(USB_CPPI41_DESC_TYPE_HOST << USB_CPPI41_DESC_TYPE_SHIFT);

  078e0	e59d2008	 ldr         r2, [sp, #8]
  078e4	e3a03102	 mov         r3, #2, 2
  078e8	e5823000	 str         r3, [r2]

; 2729 : 
; 2730 :         // Host descriptors have their physical address in their 'addr' member
; 2731 :         pHd->addr = DescriptorVAtoPA(pHd);

  078ec	e59d1008	 ldr         r1, [sp, #8]
  078f0	e59d0028	 ldr         r0, [sp, #0x28]
  078f4	eb000000	 bl          |?DescriptorVAtoPA@CCppiDmaController@@IAAIPAX@Z|
  078f8	e58d0014	 str         r0, [sp, #0x14]
  078fc	e59d3008	 ldr         r3, [sp, #8]
  07900	e283202c	 add         r2, r3, #0x2C
  07904	e59d3014	 ldr         r3, [sp, #0x14]
  07908	e5823000	 str         r3, [r2]

; 2732 : 
; 2733 :         HdFree(pHd);

  0790c	e59d1008	 ldr         r1, [sp, #8]
  07910	e59d0028	 ldr         r0, [sp, #0x28]
  07914	eb000000	 bl          |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z|

; 2734 : 
; 2735 :         DEBUGMSG(0 /*ZONE_INIT && ZONE_VERBOSE*/,
; 2736 :             (L"HD %04u: PAddr 0x%08x VAddr 0x%08x\r\n",
; 2737 :             n, pHd->addr, pHd));

  07918	ea000009	 b           |$LN12@HdPoolInit|
  0791c	e59d3008	 ldr         r3, [sp, #8]
  07920	e59d2008	 ldr         r2, [sp, #8]
  07924	e282202c	 add         r2, r2, #0x2C
  07928	e5922000	 ldr         r2, [r2]
  0792c	e59d1000	 ldr         r1, [sp]
  07930	e59f0050	 ldr         r0, [pc, #0x50]
  07934	eb000000	 bl          NKDbgPrintfW
  07938	e3a03001	 mov         r3, #1
  0793c	e58d3018	 str         r3, [sp, #0x18]
  07940	ea000001	 b           |$LN13@HdPoolInit|
  07944		 |$LN12@HdPoolInit|
  07944	e3a03000	 mov         r3, #0
  07948	e58d3018	 str         r3, [sp, #0x18]
  0794c		 |$LN13@HdPoolInit|

; 2738 :     }

  0794c	eaffffd9	 b           |$LN2@HdPoolInit|
  07950		 |$LN1@HdPoolInit|

; 2739 : 
; 2740 :     PoolUnlock();

  07950	e59d0028	 ldr         r0, [sp, #0x28]
  07954	eb000000	 bl          |?PoolUnlock@CCppiDmaController@@IAAXXZ|
  07958		 |$LN4@HdPoolInit|
  07958		 |$done$40037|

; 2741 : 
; 2742 : done:
; 2743 :     DEBUGMSG(ZONE_INIT || ZONE_VERBOSE,
; 2744 :         (L"-CCppiDmaController::HdPoolInit: Allocated %u HDs\r\n",
; 2745 :         n));

  07958	e59d1000	 ldr         r1, [sp]
  0795c	e59f0020	 ldr         r0, [pc, #0x20]
  07960	eb000000	 bl          NKDbgPrintfW
  07964	e3a03001	 mov         r3, #1
  07968	e58d301c	 str         r3, [sp, #0x1C]
  0796c	ea000001	 b           |$LN15@HdPoolInit|
  07970	e3a03000	 mov         r3, #0
  07974	e58d301c	 str         r3, [sp, #0x1C]
  07978		 |$LN15@HdPoolInit|

; 2746 : }

  07978	e28dd020	 add         sp, sp, #0x20
  0797c	e89d6000	 ldmia       sp, {sp, lr}
  07980	e12fff1e	 bx          lr
  07984		 |$LN19@HdPoolInit|
  07984		 |$LN20@HdPoolInit|
  07984	00000000	 DCD         |??_C@_1GI@EHFKNNBJ@?$AA?9?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3@|
  07988		 |$LN21@HdPoolInit|
  07988	00000000	 DCD         |??_C@_1EK@CJBFNHMB@?$AAH?$AAD?$AA?5?$AA?$CF?$AA0?$AA4?$AAu?$AA?3?$AA?5?$AAP?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAV?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@|
  0798c		 |$LN22@HdPoolInit|
  0798c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  07990		 |$LN23@HdPoolInit|
  07990	00000000	 DCD         |dpCurSettings|
  07994		 |$LN24@HdPoolInit|
  07994	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  07998		 |$LN25@HdPoolInit|
  07998	00000000	 DCD         |??_C@_1FE@JENOFIGB@?$AA?$CL?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAP?$AAo?$AAo?$AAl?$AAI?$AAn?$AAi?$AAt?$AA?3@|
  0799c		 |$M41502|

			 ENDP  ; |?HdPoolInit@CCppiDmaController@@IAAXXZ|, CCppiDmaController::HdPoolInit

	EXPORT	|??_C@_1JA@LOOKCNP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?3?$AA?5?$AAE?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NC@IOKLCPNE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?3?$AA?5?$AAF?$AAA@| [ DATA ] ; `string'

  00158			 AREA	 |.pdata|, PDATA
|$T41521| DCD	|$LN12@HdAlloc|
	DCD	0x40004304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@LOOKCNP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?3?$AA?5?$AAE?$AAR@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "d", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "M", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "g", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r", 0x0, "i"
	DCB	0x0, "p", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NC@IOKLCPNE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?3?$AA?5?$AAF?$AAA@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "d", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "A", 0x0, "I", 0x0, "L", 0x0, "E", 0x0, "D", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s"
	DCB	0x0, "c", 0x0, "r", 0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o"
	DCB	0x0, "r", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "i", 0x0, "n"
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, " ", 0x0, "D", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r"
	DCB	0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "y", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ")", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0799c			 AREA	 |.text|, CODE, ARM

  0799c		 |?HdAlloc@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@XZ| PROC ; CCppiDmaController::HdAlloc

; 2749 : {

  0799c		 |$LN12@HdAlloc|
  0799c	e1a0c00d	 mov         r12, sp
  079a0	e92d0001	 stmdb       sp!, {r0}
  079a4	e92d5000	 stmdb       sp!, {r12, lr}
  079a8	e24dd010	 sub         sp, sp, #0x10
  079ac		 |$M41518|

; 2750 :     HOST_DESCRIPTOR* pHd;
; 2751 : 
; 2752 :     PoolLock();

  079ac	e59d0018	 ldr         r0, [sp, #0x18]
  079b0	eb000000	 bl          |?PoolLock@CCppiDmaController@@IAAXXZ|

; 2753 :     pHd = m_pvHdPoolHead;

  079b4	e59d3018	 ldr         r3, [sp, #0x18]
  079b8	e2833f51	 add         r3, r3, #0x51, 30
  079bc	e5933000	 ldr         r3, [r3]
  079c0	e58d3000	 str         r3, [sp]

; 2754 :     if (pHd) {

  079c4	e59d3000	 ldr         r3, [sp]
  079c8	e3530000	 cmp         r3, #0
  079cc	0a000009	 beq         |$LN3@HdAlloc|

; 2755 :         m_pvHdPoolHead = pHd->next;

  079d0	e59d3000	 ldr         r3, [sp]
  079d4	e2831028	 add         r1, r3, #0x28
  079d8	e59d3018	 ldr         r3, [sp, #0x18]
  079dc	e2832f51	 add         r2, r3, #0x51, 30
  079e0	e5913000	 ldr         r3, [r1]
  079e4	e5823000	 str         r3, [r2]

; 2756 :         pHd->NextPtr = NULL;

  079e8	e59d3000	 ldr         r3, [sp]
  079ec	e2832014	 add         r2, r3, #0x14
  079f0	e3a03000	 mov         r3, #0
  079f4	e5823000	 str         r3, [r2]
  079f8		 |$LN3@HdAlloc|

; 2757 :     }
; 2758 :     PoolUnlock();

  079f8	e59d0018	 ldr         r0, [sp, #0x18]
  079fc	eb000000	 bl          |?PoolUnlock@CCppiDmaController@@IAAXXZ|

; 2759 : 
; 2760 :     if (pHd == NULL) {

  07a00	e59d3000	 ldr         r3, [sp]
  07a04	e3530000	 cmp         r3, #0
  07a08	1a00000c	 bne         |$LN2@HdAlloc|

; 2761 :         ERRORMSG(1,
; 2762 :             (L" CCppiDmaController::HdAlloc: FAILED - Out of descriptors (increase DescriptorCount registry setting)!\r\n"));

  07a0c	e3a02c0a	 mov         r2, #0xA, 24
  07a10	e38220ca	 orr         r2, r2, #0xCA
  07a14	e59f1084	 ldr         r1, [pc, #0x84]
  07a18	e59f007c	 ldr         r0, [pc, #0x7C]
  07a1c	eb000000	 bl          NKDbgPrintfW
  07a20	e59f007c	 ldr         r0, [pc, #0x7C]
  07a24	eb000000	 bl          NKDbgPrintfW
  07a28	e3a03001	 mov         r3, #1
  07a2c	e58d3008	 str         r3, [sp, #8]
  07a30	ea000001	 b           |$LN7@HdAlloc|
  07a34	e3a03000	 mov         r3, #0
  07a38	e58d3008	 str         r3, [sp, #8]
  07a3c		 |$LN7@HdAlloc|

; 2763 :     }
; 2764 :     else {

  07a3c	ea00000f	 b           |$LN1@HdAlloc|
  07a40		 |$LN2@HdAlloc|

; 2765 :         ERRORMSG(((UINT32)pHd & (CPPI_HD_ALIGN - 1)),
; 2766 :             (L" CCppiDmaController::HdAlloc: ERROR - Misaligned descriptor - 0x%08x!\r\n",
; 2767 :             pHd));

  07a40	e59d3000	 ldr         r3, [sp]
  07a44	e313003f	 tst         r3, #0x3F
  07a48	0a00000a	 beq         |$LN8@HdAlloc|
  07a4c	e3a02c0a	 mov         r2, #0xA, 24
  07a50	e38220cf	 orr         r2, r2, #0xCF
  07a54	e59f1044	 ldr         r1, [pc, #0x44]
  07a58	e59f003c	 ldr         r0, [pc, #0x3C]
  07a5c	eb000000	 bl          NKDbgPrintfW
  07a60	e59d1000	 ldr         r1, [sp]
  07a64	e59f002c	 ldr         r0, [pc, #0x2C]
  07a68	eb000000	 bl          NKDbgPrintfW
  07a6c	e3a03001	 mov         r3, #1
  07a70	e58d300c	 str         r3, [sp, #0xC]
  07a74	ea000001	 b           |$LN9@HdAlloc|
  07a78		 |$LN8@HdAlloc|
  07a78	e3a03000	 mov         r3, #0
  07a7c	e58d300c	 str         r3, [sp, #0xC]
  07a80		 |$LN9@HdAlloc|
  07a80		 |$LN1@HdAlloc|

; 2768 :     }
; 2769 : 
; 2770 :     return pHd;

  07a80	e59d3000	 ldr         r3, [sp]
  07a84	e58d3004	 str         r3, [sp, #4]

; 2771 : }

  07a88	e59d0004	 ldr         r0, [sp, #4]
  07a8c	e28dd010	 add         sp, sp, #0x10
  07a90	e89d6000	 ldmia       sp, {sp, lr}
  07a94	e12fff1e	 bx          lr
  07a98		 |$LN13@HdAlloc|
  07a98		 |$LN14@HdAlloc|
  07a98	00000000	 DCD         |??_C@_1JA@LOOKCNP@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?3?$AA?5?$AAE?$AAR@|
  07a9c		 |$LN15@HdAlloc|
  07a9c	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  07aa0		 |$LN16@HdAlloc|
  07aa0	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  07aa4		 |$LN17@HdAlloc|
  07aa4	00000000	 DCD         |??_C@_1NC@IOKLCPNE@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?3?$AA?5?$AAF?$AAA@|
  07aa8		 |$M41519|

			 ENDP  ; |?HdAlloc@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@XZ|, CCppiDmaController::HdAlloc

	EXPORT	|??_C@_1HK@DDEFFNKO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAF?$AAr?$AAe?$AAe?$AA?3?$AA?5?$AAN?$AAo?$AAt@| [ DATA ] ; `string'

  00160			 AREA	 |.pdata|, PDATA
|$T41536| DCD	|$LN11@HdFree|
	DCD	0x40004a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@DDEFFNKO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAF?$AAr?$AAe?$AAe?$AA?3?$AA?5?$AAN?$AAo?$AAt@| DCB " "
	DCB	0x0, "C", 0x0, "C", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "d", 0x0, "F", 0x0, "r"
	DCB	0x0, "e", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "H", 0x0, "o"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s"
	DCB	0x0, "c", 0x0, "r", 0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  07aa8			 AREA	 |.text|, CODE, ARM

  07aa8		 |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z| PROC ; CCppiDmaController::HdFree

; 2774 : {

  07aa8		 |$LN11@HdFree|
  07aa8	e1a0c00d	 mov         r12, sp
  07aac	e92d0003	 stmdb       sp!, {r0, r1}
  07ab0	e92d5000	 stmdb       sp!, {r12, lr}
  07ab4	e24dd010	 sub         sp, sp, #0x10
  07ab8		 |$M41533|

; 2775 :     UINT32 type;
; 2776 : 
; 2777 :     DEBUGCHK(pHd != NULL);

  07ab8	e59d301c	 ldr         r3, [sp, #0x1C]
  07abc	e3530000	 cmp         r3, #0
  07ac0	0a000002	 beq         |$LN5@HdFree|
  07ac4	e3a03001	 mov         r3, #1
  07ac8	e58d3008	 str         r3, [sp, #8]
  07acc	ea000008	 b           |$LN6@HdFree|
  07ad0		 |$LN5@HdFree|
  07ad0	e3a03c0a	 mov         r3, #0xA, 24
  07ad4	e38330d9	 orr         r3, r3, #0xD9
  07ad8	e59f20e4	 ldr         r2, [pc, #0xE4]
  07adc	e59f10e8	 ldr         r1, [pc, #0xE8]
  07ae0	e59f00e0	 ldr         r0, [pc, #0xE0]
  07ae4	eb000000	 bl          NKDbgPrintfW
  07ae8	e6000010	 __debugbreak_ce
  07aec	e3a03000	 mov         r3, #0
  07af0	e58d3008	 str         r3, [sp, #8]
  07af4		 |$LN6@HdFree|

; 2778 :     if (!pHd)

  07af4	e59d301c	 ldr         r3, [sp, #0x1C]
  07af8	e3530000	 cmp         r3, #0
  07afc	1a000002	 bne         |$LN2@HdFree|

; 2779 :         return pHd;

  07b00	e59d301c	 ldr         r3, [sp, #0x1C]
  07b04	e58d3004	 str         r3, [sp, #4]
  07b08	ea000027	 b           |$LN3@HdFree|
  07b0c		 |$LN2@HdFree|

; 2780 : 
; 2781 :     type = (pHd->DescInfo & USB_CPPI41_DESC_TYPE_MASK) >> USB_CPPI41_DESC_TYPE_SHIFT;

  07b0c	e59d301c	 ldr         r3, [sp, #0x1C]
  07b10	e5933000	 ldr         r3, [r3]
  07b14	e203333e	 and         r3, r3, #0x3E, 6
  07b18	e1a03da3	 mov         r3, r3, lsr #27
  07b1c	e58d3000	 str         r3, [sp]

; 2782 :     if (type != USB_CPPI41_DESC_TYPE_HOST) {

  07b20	e59d3000	 ldr         r3, [sp]
  07b24	e3530010	 cmp         r3, #0x10
  07b28	0a00000f	 beq         |$LN1@HdFree|

; 2783 :         ERRORMSG(1,
; 2784 :             (L" CCppiDmaController::HdFree: Not a Host descriptor type %u\r\n",
; 2785 :             type));

  07b2c	e3a02c0a	 mov         r2, #0xA, 24
  07b30	e38220e1	 orr         r2, r2, #0xE1
  07b34	e59f1088	 ldr         r1, [pc, #0x88]
  07b38	e59f0080	 ldr         r0, [pc, #0x80]
  07b3c	eb000000	 bl          NKDbgPrintfW
  07b40	e59d1000	 ldr         r1, [sp]
  07b44	e59f0070	 ldr         r0, [pc, #0x70]
  07b48	eb000000	 bl          NKDbgPrintfW
  07b4c	e3a03001	 mov         r3, #1
  07b50	e58d300c	 str         r3, [sp, #0xC]
  07b54	ea000001	 b           |$LN8@HdFree|
  07b58	e3a03000	 mov         r3, #0
  07b5c	e58d300c	 str         r3, [sp, #0xC]
  07b60		 |$LN8@HdFree|

; 2786 :         return pHd;

  07b60	e59d301c	 ldr         r3, [sp, #0x1C]
  07b64	e58d3004	 str         r3, [sp, #4]
  07b68	ea00000f	 b           |$LN3@HdFree|
  07b6c		 |$LN1@HdFree|

; 2787 :     }
; 2788 : 
; 2789 :     PoolLock();

  07b6c	e59d0018	 ldr         r0, [sp, #0x18]
  07b70	eb000000	 bl          |?PoolLock@CCppiDmaController@@IAAXXZ|

; 2790 :     pHd->next = m_pvHdPoolHead;

  07b74	e59d3018	 ldr         r3, [sp, #0x18]
  07b78	e2831f51	 add         r1, r3, #0x51, 30
  07b7c	e59d301c	 ldr         r3, [sp, #0x1C]
  07b80	e2832028	 add         r2, r3, #0x28
  07b84	e5913000	 ldr         r3, [r1]
  07b88	e5823000	 str         r3, [r2]

; 2791 :     m_pvHdPoolHead = pHd;

  07b8c	e59d3018	 ldr         r3, [sp, #0x18]
  07b90	e2832f51	 add         r2, r3, #0x51, 30
  07b94	e59d301c	 ldr         r3, [sp, #0x1C]
  07b98	e5823000	 str         r3, [r2]

; 2792 :     PoolUnlock();

  07b9c	e59d0018	 ldr         r0, [sp, #0x18]
  07ba0	eb000000	 bl          |?PoolUnlock@CCppiDmaController@@IAAXXZ|

; 2793 : 
; 2794 :     return NULL;

  07ba4	e3a03000	 mov         r3, #0
  07ba8	e58d3004	 str         r3, [sp, #4]
  07bac		 |$LN3@HdFree|

; 2795 : }

  07bac	e59d0004	 ldr         r0, [sp, #4]
  07bb0	e28dd010	 add         sp, sp, #0x10
  07bb4	e89d6000	 ldmia       sp, {sp, lr}
  07bb8	e12fff1e	 bx          lr
  07bbc		 |$LN12@HdFree|
  07bbc		 |$LN13@HdFree|
  07bbc	00000000	 DCD         |??_C@_1HK@DDEFFNKO@?$AA?5?$AAC?$AAC?$AAp?$AAp?$AAi?$AAD?$AAm?$AAa?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAH?$AAd?$AAF?$AAr?$AAe?$AAe?$AA?3?$AA?5?$AAN?$AAo?$AAt@|
  07bc0		 |$LN14@HdFree|
  07bc0	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  07bc4		 |$LN15@HdFree|
  07bc4	00000000	 DCD         |??_C@_1JO@GFKEKIMG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  07bc8		 |$LN16@HdFree|
  07bc8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  07bcc		 |$LN17@HdFree|
  07bcc	00000000	 DCD         |dpCurSettings|
  07bd0		 |$M41534|

			 ENDP  ; |?HdFree@CCppiDmaController@@IAAPAU_HOST_DESCRIPTOR@@PAU2@@Z|, CCppiDmaController::HdFree

	IMPORT	|USBCDMA_DescriptorVAtoPA|

  00168			 AREA	 |.pdata|, PDATA
|$T41548| DCD	|$LN9@Descriptor|
	DCD	0x40003404
; Function compile flags: /Odtp

  07bd0			 AREA	 |.text|, CODE, ARM

  07bd0		 |?DescriptorVAtoPA@CCppiDmaController@@IAAIPAX@Z| PROC ; CCppiDmaController::DescriptorVAtoPA

; 2798 : {

  07bd0		 |$LN9@Descriptor|
  07bd0	e1a0c00d	 mov         r12, sp
  07bd4	e92d0003	 stmdb       sp!, {r0, r1}
  07bd8	e92d5000	 stmdb       sp!, {r12, lr}
  07bdc	e24dd014	 sub         sp, sp, #0x14
  07be0		 |$M41545|

; 2799 :     UINT32 pa = 0;

  07be0	e3a03000	 mov         r3, #0
  07be4	e58d3000	 str         r3, [sp]

; 2800 : 
; 2801 :     if (va != NULL) {

  07be8	e59d3020	 ldr         r3, [sp, #0x20]
  07bec	e3530000	 cmp         r3, #0
  07bf0	0a000024	 beq         |$LN4@Descriptor|

; 2802 :         UINT32 vaPoolBase  = (UINT32)m_pvPool;

  07bf4	e59d301c	 ldr         r3, [sp, #0x1C]
  07bf8	e2833f47	 add         r3, r3, #0x47, 30
  07bfc	e5933000	 ldr         r3, [r3]
  07c00	e58d3004	 str         r3, [sp, #4]

; 2803 :         UINT32 vaPoolLimit = (UINT32)m_pvPool + m_cbPoolSize;

  07c04	e59d301c	 ldr         r3, [sp, #0x1C]
  07c08	e2832f47	 add         r2, r3, #0x47, 30
  07c0c	e59d301c	 ldr         r3, [sp, #0x1C]
  07c10	e2833f4a	 add         r3, r3, #0x4A, 30
  07c14	e5922000	 ldr         r2, [r2]
  07c18	e5933000	 ldr         r3, [r3]
  07c1c	e0823003	 add         r3, r2, r3
  07c20	e58d3008	 str         r3, [sp, #8]

; 2804 : 
; 2805 :         if (((UINT32)va < vaPoolBase) || ((UINT32)va > vaPoolLimit))

  07c24	e59d2020	 ldr         r2, [sp, #0x20]
  07c28	e59d3004	 ldr         r3, [sp, #4]
  07c2c	e1520003	 cmp         r2, r3
  07c30	3a000003	 bcc         |$LN2@Descriptor|
  07c34	e59d2020	 ldr         r2, [sp, #0x20]
  07c38	e59d3008	 ldr         r3, [sp, #8]
  07c3c	e1520003	 cmp         r2, r3
  07c40	9a000008	 bls         |$LN3@Descriptor|
  07c44		 |$LN2@Descriptor|

; 2806 :             pa = USBCDMA_DescriptorVAtoPA(m_hUsbCdma, va);

  07c44	e59d1020	 ldr         r1, [sp, #0x20]
  07c48	e59d301c	 ldr         r3, [sp, #0x1C]
  07c4c	e2833020	 add         r3, r3, #0x20
  07c50	e5930000	 ldr         r0, [r3]
  07c54	eb000000	 bl          USBCDMA_DescriptorVAtoPA
  07c58	e58d0010	 str         r0, [sp, #0x10]
  07c5c	e59d3010	 ldr         r3, [sp, #0x10]
  07c60	e58d3000	 str         r3, [sp]

; 2807 :         else

  07c64	ea000007	 b           |$LN1@Descriptor|
  07c68		 |$LN3@Descriptor|

; 2808 :             pa = m_paPool.LowPart + ((UINT32)va - vaPoolBase);

  07c68	e59d301c	 ldr         r3, [sp, #0x1C]
  07c6c	e2831e12	 add         r1, r3, #0x12, 28
  07c70	e59d2020	 ldr         r2, [sp, #0x20]
  07c74	e59d3004	 ldr         r3, [sp, #4]
  07c78	e0422003	 sub         r2, r2, r3
  07c7c	e5913000	 ldr         r3, [r1]
  07c80	e0833002	 add         r3, r3, r2
  07c84	e58d3000	 str         r3, [sp]
  07c88		 |$LN1@Descriptor|
  07c88		 |$LN4@Descriptor|

; 2809 :     }
; 2810 : 
; 2811 :     return pa;

  07c88	e59d3000	 ldr         r3, [sp]
  07c8c	e58d300c	 str         r3, [sp, #0xC]

; 2812 : }

  07c90	e59d000c	 ldr         r0, [sp, #0xC]
  07c94	e28dd014	 add         sp, sp, #0x14
  07c98	e89d6000	 ldmia       sp, {sp, lr}
  07c9c	e12fff1e	 bx          lr
  07ca0		 |$M41546|

			 ENDP  ; |?DescriptorVAtoPA@CCppiDmaController@@IAAIPAX@Z|, CCppiDmaController::DescriptorVAtoPA

	IMPORT	|USBCDMA_DescriptorPAtoVA|

  00170			 AREA	 |.pdata|, PDATA
|$T41554| DCD	|$LN9@Descriptor@2|
	DCD	0x40003404
; Function compile flags: /Odtp

  07ca0			 AREA	 |.text|, CODE, ARM

  07ca0		 |?DescriptorPAtoVA@CCppiDmaController@@IAAPAXI@Z| PROC ; CCppiDmaController::DescriptorPAtoVA

; 2815 : {

  07ca0		 |$LN9@Descriptor@2|
  07ca0	e1a0c00d	 mov         r12, sp
  07ca4	e92d0003	 stmdb       sp!, {r0, r1}
  07ca8	e92d5000	 stmdb       sp!, {r12, lr}
  07cac	e24dd014	 sub         sp, sp, #0x14
  07cb0		 |$M41551|

; 2816 :     void *va = NULL;

  07cb0	e3a03000	 mov         r3, #0
  07cb4	e58d3000	 str         r3, [sp]

; 2817 : 
; 2818 :     if (pa != 0) {

  07cb8	e59d3020	 ldr         r3, [sp, #0x20]
  07cbc	e3530000	 cmp         r3, #0
  07cc0	0a000024	 beq         |$LN4@Descriptor@2|

; 2819 :         UINT32 paPoolBase  = m_paPool.LowPart;

  07cc4	e59d301c	 ldr         r3, [sp, #0x1C]
  07cc8	e2833e12	 add         r3, r3, #0x12, 28
  07ccc	e5933000	 ldr         r3, [r3]
  07cd0	e58d3008	 str         r3, [sp, #8]

; 2820 :         UINT32 paPoolLimit = m_paPool.LowPart + m_cbPoolSize;

  07cd4	e59d301c	 ldr         r3, [sp, #0x1C]
  07cd8	e2832e12	 add         r2, r3, #0x12, 28
  07cdc	e59d301c	 ldr         r3, [sp, #0x1C]
  07ce0	e2833f4a	 add         r3, r3, #0x4A, 30
  07ce4	e5922000	 ldr         r2, [r2]
  07ce8	e5933000	 ldr         r3, [r3]
  07cec	e0823003	 add         r3, r2, r3
  07cf0	e58d3004	 str         r3, [sp, #4]

; 2821 : 
; 2822 :         if ((pa < paPoolBase) || (pa > paPoolLimit))

  07cf4	e59d2020	 ldr         r2, [sp, #0x20]
  07cf8	e59d3008	 ldr         r3, [sp, #8]
  07cfc	e1520003	 cmp         r2, r3
  07d00	3a000003	 bcc         |$LN2@Descriptor@2|
  07d04	e59d2020	 ldr         r2, [sp, #0x20]
  07d08	e59d3004	 ldr         r3, [sp, #4]
  07d0c	e1520003	 cmp         r2, r3
  07d10	9a000008	 bls         |$LN3@Descriptor@2|
  07d14		 |$LN2@Descriptor@2|

; 2823 :             va = USBCDMA_DescriptorPAtoVA(m_hUsbCdma, pa);

  07d14	e59d1020	 ldr         r1, [sp, #0x20]
  07d18	e59d301c	 ldr         r3, [sp, #0x1C]
  07d1c	e2833020	 add         r3, r3, #0x20
  07d20	e5930000	 ldr         r0, [r3]
  07d24	eb000000	 bl          USBCDMA_DescriptorPAtoVA
  07d28	e58d0010	 str         r0, [sp, #0x10]
  07d2c	e59d3010	 ldr         r3, [sp, #0x10]
  07d30	e58d3000	 str         r3, [sp]

; 2824 :         else

  07d34	ea000007	 b           |$LN1@Descriptor@2|
  07d38		 |$LN3@Descriptor@2|

; 2825 :             va = (void *)(((UINT32)m_pvPool) + (pa - paPoolBase));

  07d38	e59d301c	 ldr         r3, [sp, #0x1C]
  07d3c	e2831f47	 add         r1, r3, #0x47, 30
  07d40	e59d2020	 ldr         r2, [sp, #0x20]
  07d44	e59d3008	 ldr         r3, [sp, #8]
  07d48	e0422003	 sub         r2, r2, r3
  07d4c	e5913000	 ldr         r3, [r1]
  07d50	e0833002	 add         r3, r3, r2
  07d54	e58d3000	 str         r3, [sp]
  07d58		 |$LN1@Descriptor@2|
  07d58		 |$LN4@Descriptor@2|

; 2826 :     }
; 2827 : 
; 2828 :     return va;

  07d58	e59d3000	 ldr         r3, [sp]
  07d5c	e58d300c	 str         r3, [sp, #0xC]

; 2829 : }

  07d60	e59d000c	 ldr         r0, [sp, #0xC]
  07d64	e28dd014	 add         sp, sp, #0x14
  07d68	e89d6000	 ldmia       sp, {sp, lr}
  07d6c	e12fff1e	 bx          lr
  07d70		 |$M41552|

			 ENDP  ; |?DescriptorPAtoVA@CCppiDmaController@@IAAPAXI@Z|, CCppiDmaController::DescriptorPAtoVA

	END
