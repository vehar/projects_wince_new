// All rights reserved ADENEO EMBEDDED 2010
//
//=============================================================================
//            Texas Instruments OMAP(TM) Platform Software
// (c) Copyright Texas Instruments, Incorporated. All Rights Reserved.
//
//  Use of this software is controlled by the terms and conditions found
// in the license agreement under which this software has been supplied.
//
//=============================================================================
//

//------------------------------------------------------------------------------
//
//  File:  bsp.h
//
#ifndef __BSP_H
#define __BSP_H


//------------------------------------------------------------------------------
// Standard BSP includes
#pragma warning(push)
#pragma warning(disable: 4115 4201 4204 4214 4220)
#include <windows.h>
#include <nkintr.h>
#include <ceddk.h>
#pragma warning(pop)


#include "omap3530.h"
#include "bsp_base_regs.h"
#include "image_cfg.h"
#include "bsp_def.h"
#include "bsp_version.h"

//#include "tps65023.h"
//------------------------------------------------------------------------------
typedef struct _SysInfor
{
	char  szModelName[16];
    char  szFWVersion[16];
    char  szBuildDate[16];
    WORD  dwBootMode;
    WORD  dwDevicePower;
    WORD  dwBuildInDevice;
    BYTE  dwBCRType;
    BYTE  dwKeypadInputMode;
}SysInfor, *lpSysInfor;

#define SYSTEM_INFORMATION_MEMORY_START	(IMAGE_SHARE_ARGS_CA + 0x800) 
#define MODEL_NAME_STORE_ADDR		SYSTEM_INFORMATION_MEMORY_START	//size char[16]
#define SW_VERSION_STORE_ADDR		(MODEL_NAME_STORE_ADDR+16)		//size char[16]
#define BUILD_DATE_STORE_ADDR		(SW_VERSION_STORE_ADDR+16)		//size char[16]   
#define BOOT_MODE_STORE_ADDR		(BUILD_DATE_STORE_ADDR+16)		// 2 bytes ; WORD
#define DEVICE_POWER_FLAG_ADDR		(BOOT_MODE_STORE_ADDR+2)		// 2 bytes ; WORD 
																	// bit 0: barcode power
																	// bit 1: BT power
																	// bit 2: WLAN power
																	// bit 3: GPRS power
																	// bit 4: RFID power
																	// bit 5: VIBRATOR power
#define BUILD_IN_DEVICE_FLAG_ADDR	(DEVICE_POWER_FLAG_ADDR+2)		// 2 bytes ; WORD 
																	// bit 0: barcode 
																	// bit 1: BT 
																	// bit 2: WLAN 
																	// bit 3: GPRS 
																	// bit 4: RFID 
#define BCR_ENGINE_TYPE_STORE_ADDR	(BUILD_IN_DEVICE_FLAG_ADDR+2)	// 1 byte
#define KEYPAD_MODE_STORE_ADDR		(BCR_ENGINE_TYPE_STORE_ADDR+1)	// 1 byte
#define SERIAL_NUMBER_STORE_ADDR	(KEYPAD_MODE_STORE_ADDR+1)		//size char[24] 

//-----------------------------------------------------------------------------
#define WG7311_WIFI   "TIWLNAPI1"
//-----------------------------------------------------------------------------
#define PRELOAD_DIRECTORY		TEXT("\\SD Card\\Preload")
#define PRELOAD_CONFIG_FILE		TEXT("\\SD Card\\Preload\\Preload.inf")

#define SYSTEM_DATA_DIRECTORY	TEXT("\\Flash Disk\\sys")
#define SUPERVISOR_CONFIG_FILE	TEXT("\\Flash Disk\\sys\\user.inf")
#define BARCODE_CONFIG_FILE		TEXT("\\Flash Disk\\sys\\bcconfig.inf")
#define TOUCHCALIB_CONFIG_FILE	TEXT("\\Flash Disk\\CaliData.inf")
//#define TOUCHCALIB_EBOOT_FILE	TEXT("CaliData.inf") // e-boot (8.3 format)
//-----------------------------------------------------------------------------
#define RK_CONTROLPANEL_VOLUME  TEXT("ControlPanel\\Volume")
#define RV_KEY                  TEXT("Key")        // LOWORD==Keyclick volume (0==off, 1==soft 2==loud)
#define RV_SCREEN               TEXT("Screen")     // LOWORD==ScreenTap volume (0==off, 1==soft 2==loud)
#define RV_MUTE                 TEXT("Mute")       // Events: 0==mute, 1==play. Bit0=Notif, Bit1==Apps, Bit2==Events
#define RV_VOLUME               TEXT("Volume")     // Volume: 0==off, 0xFFFFFFFF=max. loword & hiword must match (L & R channels)
//------------------------------------------------------------------------------
#define KEY_HOOK_WND  TEXT("FunKeyHook")
//------------------------------------------------------------------------------
//Keypad input mode
#define NUMERAL_KEY_MODE 0
#define CAPITAL_KEY_MODE (NUMERAL_KEY_MODE+1)
#define LOWCASE_KEY_MODE (NUMERAL_KEY_MODE+2)
#define FUNC_KEY_MODE    (NUMERAL_KEY_MODE+3)

//Boot mode configure bits
#define ARSR_HW_RESET          	0x01
#define ARSR_WATCHDOG_RESET   	(0x01<<1)
#define ARSR_SLEEP_RESET      	(0x01<<2)
#define ARSR_SW_RESET         	(0x01<<3)
#define SYSTEM_DEBUG_BOOT     	(0x01<<4)
#define SYSTEM_CLEAN_BOOT     	(0x01<<5)
#define SYSTEM_TEST_MODE_BOOT 	(0x01<<6) 
#define SYSTEM_FM_UPDATE_BOOT 	(0x01<<7)

//Build-In Device 
#define BCR_BUILD_IN_MASK		(0x01<<0)
#define BT_BUILD_IN_MASK    	(0x01<<1)
#define WIFI_BUILD_IN_MASK  	(0x01<<2)
#define GPRS_BUILD_IN_MASK  	(0x01<<3)
#define RFID_BUILD_IN_MASK  	(0x01<<4)
#define GPS_BUILD_IN_MASK   	(0x01<<5) 

//Device Power
#define BCR_POWER_MASK			(0x01<<0)
#define BT_POWER_MASK			(0x01<<1)
#define WIFI_POWER_MASK			(0x01<<2)
#define VIBRATORI_POWER_MASK	(0x01<<5)

#endif
