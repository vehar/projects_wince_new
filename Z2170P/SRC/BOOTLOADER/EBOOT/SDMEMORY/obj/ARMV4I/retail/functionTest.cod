; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\BOOTLOADER\EBOOT\functionTest.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@ECNEDNKA@?$AAB?$AAu?$AAr?$AAn?$AA?9?$AAI?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@POLGPPDB@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAa?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DJCNJJMD@?$AAB?$AAa?$AAr?$AAc?$AAo?$AAd?$AAe?$AA?5?$AAS?$AAc?$AAa?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@FKKAMPJP@?$AAL?$AAE?$AAD?$AA?5?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAo?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@KIOELMDE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@BNGFPPEB@?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@GFKLDENM@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@DFLOJDLG@?$AAD?$AAR?$AAA?$AAM?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@MFOPBHMC@?$AAL?$AAC?$AAM?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@FJOPBKKD@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@NDBHKBD@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|stall_1Sec| [ DATA ]
	EXPORT	|sleep1Sec| [ DATA ]
	EXPORT	|g_menu2170PTest| [ DATA ]
	EXPORT	|g_menuZ2000Test| [ DATA ]
	EXPORT	|pUartRegs| [ DATA ]

  00000			 AREA	 |.data|, DATA
	 COMMON	|gKeypadMatrix|, 0x8


  00000			 AREA	 |.bss|, NOINIT
|pUartRegs| %	0x4
|keyStatus| %	0x68

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@| DCB "E"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@ECNEDNKA@?$AAB?$AAu?$AAr?$AAn?$AA?9?$AAI?$AAn?$AA?$AA@| DCB "B"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "-", 0x0, "I", 0x0, "n"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@POLGPPDB@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAa?$AAl?$AA?$AA@| DCB "K"
	DCB	0x0, "e", 0x0, "y", 0x0, "p", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DJCNJJMD@?$AAB?$AAa?$AAr?$AAc?$AAo?$AAd?$AAe?$AA?5?$AAS?$AAc?$AAa?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "r", 0x0, "c", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, " ", 0x0, "S", 0x0, "c", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@FKKAMPJP@?$AAL?$AAE?$AAD?$AA?5?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAo?$AAr?$AA?$AA@| DCB "L"
	DCB	0x0, "E", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "d"
	DCB	0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KIOELMDE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "T", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@BNGFPPEB@?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "T"
	DCB	0x0, "o", 0x0, "u", 0x0, "c", 0x0, "h", 0x0, " ", 0x0, "P"
	DCB	0x0, "a", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, " ", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@GFKLDENM@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "K"
	DCB	0x0, "e", 0x0, "y", 0x0, "p", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, " ", 0x0, "T", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@DFLOJDLG@?$AAD?$AAR?$AAA?$AAM?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "R", 0x0, "A", 0x0, "M", 0x0, " ", 0x0, "T", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@MFOPBHMC@?$AAL?$AAC?$AAM?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "L"
	DCB	0x0, "C", 0x0, "M", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "c"
	DCB	0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t"
	DCB	0x0, " ", 0x0, "T", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@FJOPBKKD@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "p", 0x0, "l", 0x0, "a", 0x0, "y"
	DCB	0x0, " ", 0x0, "T", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NDBHKBD@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "l", 0x0, "l", 0x0, " ", 0x0, "F", 0x0, "u", 0x0, "n"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "T", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|stall_1Sec| DCD 0xf4240
|sleep1Sec| DCD	0x3e8
|g_menu2170PTest| DCW 0x31
	%	2
	DCD	|??_C@_1CE@NDBHKBD@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|AllFunctionTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x32
	%	2
	DCD	|??_C@_1BK@FJOPBKKD@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|DisplayTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x33
	%	2
	DCD	|??_C@_1CG@MFOPBHMC@?$AAL?$AAC?$AAM?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|BkTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x34
	%	2
	DCD	|??_C@_1BE@DFLOJDLG@?$AAD?$AAR?$AAA?$AAM?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|DRAMTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x35
	%	2
	DCD	|??_C@_1CM@GFKLDENM@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|KeypadBkTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x36
	%	2
	DCD	|??_C@_1CC@BNGFPPEB@?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|TouchPanelTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x37
	%	2
	DCD	|??_C@_1BK@KIOELMDE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|BatteryTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x38
	%	2
	DCD	|??_C@_1BM@FKKAMPJP@?$AAL?$AAE?$AAD?$AA?5?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAo?$AAr?$AA?$AA@|
	DCD	|LEDTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x39
	%	2
	DCD	|??_C@_1CC@DJCNJJMD@?$AAB?$AAa?$AAr?$AAc?$AAo?$AAd?$AAe?$AA?5?$AAS?$AAc?$AAa?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?$AA@|
	DCD	|BarcodeTest_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x61
	%	2
	DCD	|??_C@_1CE@POLGPPDB@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAa?$AAl?$AA?$AA@|
	DCD	|KeypadFunc_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x62
	%	2
	DCD	|??_C@_1BA@ECNEDNKA@?$AAB?$AAu?$AAr?$AAn?$AA?9?$AAI?$AAn?$AA?$AA@|
	DCD	|BurnIn_Z2170P|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x30
	%	2
	DCD	|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x0
	%	2
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
|g_menuZ2000Test| DCW 0x31
	%	2
	DCD	|??_C@_1CE@NDBHKBD@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|AllFunctionTest_Z2000|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x32
	%	2
	DCD	|??_C@_1BK@FJOPBKKD@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
	DCD	|DisplayTest_Z2000|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x30
	%	2
	DCD	|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x0
	%	2
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1CA@IPGENFE@?$AA?$AN?$AA?6?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DisplayShow|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|OALBLMenuHeader|
	IMPORT	|BLShowLogo|
; File c:\wince600\platform\z2170p\src\bootloader\eboot\functiontest.c

  00000			 AREA	 |.pdata|, PDATA
|$T48089| DCD	|$LN5@DisplayTes|
	DCD	0x40000b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@IPGENFE@?$AA?$AN?$AA?6?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "R", 0x0, "u", 0x0, "n", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DisplayTest_Z2170P| PROC

; 206  : {

  00000		 |$LN5@DisplayTes|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48086|

; 207  :     BLShowLogo();

  00004	eb000000	 bl          BLShowLogo

; 208  :     OALBLMenuHeader(L"Display Test");

  00008	e59f0018	 ldr         r0, [pc, #0x18]
  0000c	eb000000	 bl          OALBLMenuHeader

; 209  : 	UNREFERENCED_PARAMETER(pMenu);
; 210  :     OALLog(L"\r\n Running...\r\n");

  00010	e59f000c	 ldr         r0, [pc, #0xC]
  00014	eb000000	 bl          NKDbgPrintfW

; 211  : 	//DisplayShow(BSP_Z2170P);
; 212  : 	DisplayShow();

  00018	eb000000	 bl          DisplayShow

; 213  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@DisplayTes|
  00024		 |$LN7@DisplayTes|
  00024	00000000	 DCD         |??_C@_1CA@IPGENFE@?$AA?$AN?$AA?6?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00028		 |$LN8@DisplayTes|
  00028	00000000	 DCD         |??_C@_1BK@FJOPBKKD@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  0002c		 |$M48087|

			 ENDP  ; |DisplayTest_Z2170P|

	EXPORT	|SetBacklight|
	EXPORT	|??_C@_1FE@PFEMMGFN@?$AA?$AN?$AA?5?$AA?$CB?$AAP?$AAl?$AAu?$AAs?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAb?$AAr?$AAi?$AAg?$AAh?$AAt?$AAn?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?5?$AAa@| [ DATA ] ; `string'
	IMPORT	|GPIOClose|
	IMPORT	|GPIOSetBit|
	IMPORT	|LcdStall|
	IMPORT	|GPIOClrBit|
	IMPORT	|GPIOOpen|

  00000			 AREA	 |.pdata|, PDATA
|$T48104| DCD	|$LN12@SetBacklig|
	DCD	0x40004702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@PFEMMGFN@?$AA?$AN?$AA?5?$AA?$CB?$AAP?$AAl?$AAu?$AAs?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAb?$AAr?$AAi?$AAg?$AAh?$AAt?$AAn?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?5?$AAa@| DCB 0xd
	DCB	0x0, " ", 0x0, "!", 0x0, "P", 0x0, "l", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "b", 0x0, "r", 0x0, "i", 0x0, "g", 0x0, "h"
	DCB	0x0, "t", 0x0, "n", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "s", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "%", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetBacklight| PROC

; 227  : {

  00000		 |$LN12@SetBacklig|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd02c	 sub         sp, sp, #0x2C
  00008		 |$M48101|

; 228  :     HANDLE hGPIO;
; 229  :     //WCHAR key;
; 230  :     int i, value, k, scale = 0;    
; 231  :     int AAT3123Code[11] = { 1, 4 , 7, 10, 13, 16, 19, 22, 25, 28, 32};

  00008	e3a07019	 mov         r7, #0x19
  0000c	e3a03001	 mov         r3, #1
  00010	e3a02004	 mov         r2, #4
  00014	e3a01007	 mov         r1, #7
  00018	e3a0000a	 mov         r0, #0xA
  0001c	e3a0e00d	 mov         lr, #0xD
  00020	e3a04010	 mov         r4, #0x10
  00024	e3a05013	 mov         r5, #0x13
  00028	e3a06016	 mov         r6, #0x16
  0002c	e3a0801c	 mov         r8, #0x1C
  00030	e3a09020	 mov         r9, #0x20
  00034	e58d7020	 str         r7, [sp, #0x20]
  00038	e3a07000	 mov         r7, #0
  0003c	e58d3000	 str         r3, [sp]
  00040	e58d2004	 str         r2, [sp, #4]
  00044	e58d1008	 str         r1, [sp, #8]
  00048	e58d000c	 str         r0, [sp, #0xC]
  0004c	e58de010	 str         lr, [sp, #0x10]
  00050	e58d4014	 str         r4, [sp, #0x14]
  00054	e58d5018	 str         r5, [sp, #0x18]
  00058	e58d601c	 str         r6, [sp, #0x1C]
  0005c	e58d8024	 str         r8, [sp, #0x24]
  00060	e58d9028	 str         r9, [sp, #0x28]

; 232  :                           //0  10  20  30 40  50  60  70  80  90  100
; 233  :    
; 234  :     hGPIO = GPIOOpen();

  00064	eb000000	 bl          GPIOOpen

; 235  : 
; 236  :     GPIOClrBit(hGPIO, BK_SET_GPIO);

  00068	e3a0103d	 mov         r1, #0x3D
  0006c	e1a05000	 mov         r5, r0
  00070	eb000000	 bl          GPIOClrBit

; 237  :     LcdStall(stall_1Sec); 

  00074	e59f809c	 ldr         r8, [pc, #0x9C]
  00078	e5980000	 ldr         r0, [r8]
  0007c	eb000000	 bl          LcdStall

; 238  :             
; 239  :     for(i=1, k=0; i<=32; i++)

  00080	e3a04001	 mov         r4, #1
  00084	e28d6000	 add         r6, sp, #0
  00088		 |$LL5@SetBacklig|

; 240  :     {
; 241  :         if(i == (value = AAT3123Code[k]))

  00088	e5963000	 ldr         r3, [r6]

; 242  :         {
; 243  :             GPIOClrBit(hGPIO, BK_SET_GPIO);

  0008c	e3a0103d	 mov         r1, #0x3D
  00090	e1a00005	 mov         r0, r5
  00094	e1540003	 cmp         r4, r3
  00098	1a00000d	 bne         |$LN2@SetBacklig|
  0009c	eb000000	 bl          GPIOClrBit

; 244  :             LcdStall(1);

  000a0	e3a00001	 mov         r0, #1
  000a4	eb000000	 bl          LcdStall

; 245  :             GPIOSetBit(hGPIO, BK_SET_GPIO);

  000a8	e3a0103d	 mov         r1, #0x3D
  000ac	e1a00005	 mov         r0, r5
  000b0	eb000000	 bl          GPIOSetBit

; 246  :             LcdStall(stall_1Sec);

  000b4	e5980000	 ldr         r0, [r8]
  000b8	eb000000	 bl          LcdStall

; 247  :             OALLog(L"\r !Plus after brightness scale at %d %%\r\n",scale);

  000bc	e59f0050	 ldr         r0, [pc, #0x50]
  000c0	e1a01007	 mov         r1, r7
  000c4	eb000000	 bl          NKDbgPrintfW

; 248  :             scale+=10;

  000c8	e287700a	 add         r7, r7, #0xA

; 249  :             k++;

  000cc	e2866004	 add         r6, r6, #4

; 250  :         }else{

  000d0	ea000007	 b           |$LN4@SetBacklig|
  000d4		 |$LN2@SetBacklig|

; 251  :             GPIOClrBit(hGPIO, BK_SET_GPIO);

  000d4	eb000000	 bl          GPIOClrBit

; 252  :             LcdStall(1);

  000d8	e3a00001	 mov         r0, #1
  000dc	eb000000	 bl          LcdStall

; 253  :             GPIOSetBit(hGPIO, BK_SET_GPIO);

  000e0	e3a0103d	 mov         r1, #0x3D
  000e4	e1a00005	 mov         r0, r5
  000e8	eb000000	 bl          GPIOSetBit

; 254  :             LcdStall(1);

  000ec	e3a00001	 mov         r0, #1
  000f0	eb000000	 bl          LcdStall
  000f4		 |$LN4@SetBacklig|
  000f4	e2844001	 add         r4, r4, #1
  000f8	e3540020	 cmp         r4, #0x20
  000fc	daffffe1	 ble         |$LL5@SetBacklig|

; 255  :         }
; 256  :     }   
; 257  :     /*for (i=0; i<BK_EXIT; i++)
; 258  :     {
; 259  :         OALLog(L" [%d] %s\r\n", i+1, lcmBacklight[i].bkName);
; 260  : 	}
; 261  :     OALLog(L" [0] Exit and Continue\r\n");*/
; 262  : 
; 263  :     //OALLog(L"\r\n Selection : ");
; 264  : 
; 265  :     /*do{ 
; 266  :         key = OALBLMenuReadKey(TRUE);
; 267  :     }while(key < L'0' || key > L'0' + i);
; 268  :     // Show selection
; 269  : 	OALLog(L"%c\r\n", key);*/
; 270  : 	
; 271  :     /*switch(key)
; 272  :     {
; 273  :          case L'1':
; 274  :              GPIOClrBit(hGPIO, BK_SET_GPIO);
; 275  :              LcdStall(stall_1Sec); 
; 276  :             
; 277  :              for(i=1, k=0; i<=32; i++)
; 278  :              {
; 279  :                 if(i == (value = AAT3123Code[k]))
; 280  :                 {
; 281  :                     GPIOClrBit(hGPIO, BK_SET_GPIO);
; 282  :                     LcdStall(1);
; 283  :                     GPIOSetBit(hGPIO, BK_SET_GPIO);
; 284  :                     LcdStall(stall_1Sec);
; 285  :                     OALLog(L"\r !Plus after brightness scale at %d %%\r\n",scale);
; 286  :                     scale+=10;
; 287  :                     k++;
; 288  :                 }else{
; 289  :                     GPIOClrBit(hGPIO, BK_SET_GPIO);
; 290  :                     LcdStall(1);
; 291  :                     GPIOSetBit(hGPIO, BK_SET_GPIO);
; 292  :                     LcdStall(1);
; 293  :                 }
; 294  :             }
; 295  :             break;
; 296  :          case L'2':
; 297  :              for(i=1; i<=22; i++)
; 298  :              {
; 299  :                  GPIOClrBit(hGPIO, BK_SET_GPIO);
; 300  :                  LcdStall(1);
; 301  :                  GPIOSetBit(hGPIO, BK_SET_GPIO);
; 302  :                  LcdStall(1);
; 303  :              }
; 304  :              OALLog(L"\r !Now Backlight ON,default scale at 70%%\r\n");
; 305  :              break;
; 306  :          case L'3':
; 307  :              GPIOClrBit(hGPIO, BK_SET_GPIO);
; 308  :              LcdStall(1);
; 309  :              OALLog(L"\r !Now Backlight OFF\r\n");
; 310  :              break;
; 311  :     }*/
; 312  :     GPIOClose(hGPIO);

  00100	e1a00005	 mov         r0, r5
  00104	eb000000	 bl          GPIOClose

; 313  :     
; 314  :     //if (key == L'0') return;    
; 315  : }

  00108	e28dd02c	 add         sp, sp, #0x2C
  0010c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00110	e12fff1e	 bx          lr
  00114		 |$LN13@SetBacklig|
  00114		 |$LN14@SetBacklig|
  00114	00000000	 DCD         |??_C@_1FE@PFEMMGFN@?$AA?$AN?$AA?5?$AA?$CB?$AAP?$AAl?$AAu?$AAs?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAb?$AAr?$AAi?$AAg?$AAh?$AAt?$AAn?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?5?$AAa@|
  00118		 |$LN15@SetBacklig|
  00118	00000000	 DCD         |stall_1Sec|
  0011c		 |$M48102|

			 ENDP  ; |SetBacklight|

	EXPORT	|??_C@_1CC@JNFCCOBJ@?$AA?$AN?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAk?$AA?$CB?$AA?$CB?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@IAOAAODF@?$AA?$AN?$AA?6?$AAS?$AAc?$AAa?$AAn?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13BBDEGPLJ@?$AA?$CK?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@GBEKHDOH@?$AA?$AN?$AA?6?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@LFDKHCLM@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@KFOFBOBN@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAT?$AAe?$AAs?$AAt?$AA1?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@FOMMJKGJ@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAE?$AAn?$AAd?$AA?5?$AA?5?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@GKBCNJJJ@?$AA?$AN?$AA?6?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48118| DCD	|$LN13@DRAMTest_Z|
	DCD	0x40004201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@JNFCCOBJ@?$AA?$AN?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAk?$AA?$CB?$AA?$CB?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "T", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "k", 0x0, "!", 0x0, "!"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@IAOAAODF@?$AA?$AN?$AA?6?$AAS?$AAc?$AAa?$AAn?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "S", 0x0, "c", 0x0, "a", 0x0, "n", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, "k", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13BBDEGPLJ@?$AA?$CK?$AA?$AA@| DCB "*", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@GBEKHDOH@?$AA?$AN?$AA?6?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AAX?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "X", 0x0, "%", 0x0, "X", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@LFDKHCLM@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "!", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, " ", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "0", 0x0, "X", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@KFOFBOBN@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAT?$AAe?$AAs?$AAt?$AA1?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "!", 0x0, "T", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "1", 0x0, " ", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "0", 0x0, "X", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@FOMMJKGJ@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAE?$AAn?$AAd?$AA?5?$AA?5?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "!", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "0", 0x0, "X", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@GKBCNJJJ@?$AA?$AN?$AA?6?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DRAMTest_Z2170P| PROC

; 332  : {

  00000		 |$LN13@DRAMTest_Z|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M48115|

; 333  :     ULONG  startAddress = IMAGE_SHARE_ARGS_CA;
; 334  :     ULONG  endAddress = startAddress|(256 *1024 *1024 -1); //endAddress = startAddress + size(256MB) 
; 335  :     ULONG   test1_Address = (startAddress|0x0000FFFF);      //
; 336  :     //ULONG   test2_Address = (startAddress|0x0FFFFF00);
; 337  :     //ULONG   ebootAddress = IMAGE_EBOOT_CODE_CA ;
; 338  :     ULONG   i, testAddress =  0xFFFFFFFF;
; 339  :     BYTE    value, temp, pattern = 0x1A; 
; 340  :     //ULONG   percentRange;
; 341  :     ULONG   percent;        
; 342  :      
; 343  : 	UNREFERENCED_PARAMETER(pMenu);
; 344  : 	OALBLMenuHeader(L"DRAM Test");

  00004	e59f00f8	 ldr         r0, [pc, #0xF8]
  00008	eb000000	 bl          OALBLMenuHeader

; 345  : 
; 346  : 	//percentRange = (endAddress - startAddress)/100;
; 347  :     OALLog(L"\r\n !Start Address: 0X%08X", (startAddress&testAddress));

  0000c	e59f00ec	 ldr         r0, [pc, #0xEC]
  00010	e3a01102	 mov         r1, #2, 2
  00014	eb000000	 bl          NKDbgPrintfW

; 348  :     OALLog(L"\r\n !Test1 Address: 0X%08X", (test1_Address&testAddress));

  00018	e59f00dc	 ldr         r0, [pc, #0xDC]
  0001c	e3e0347f	 mvn         r3, #0x7F, 8
  00020	e22318ff	 eor         r1, r3, #0xFF, 16
  00024	eb000000	 bl          NKDbgPrintfW

; 349  :     //OALLog(L"\r\n !Test2 Address: 0X%08X", (test2_Address&test));
; 350  :     OALLog(L"\r\n !End   Address: 0X%08X", (endAddress&testAddress));

  00028	e59f00c8	 ldr         r0, [pc, #0xC8]
  0002c	e3e01207	 mvn         r1, #7, 4
  00030	eb000000	 bl          NKDbgPrintfW

; 351  :     OALLog(L"\r\n------------------------------------------\n");

  00034	e59f00b8	 ldr         r0, [pc, #0xB8]
  00038	eb000000	 bl          NKDbgPrintfW

; 352  :   
; 353  : 	/*for(i=0, percent=0; i<(test1_Address - startAddress); i++)
; 354  : 	{
; 355  :         temp = *(volatile BYTE *)(startAddress + i);        //read data     ;temp(0x8000_0000) to get a address 
; 356  :         *(volatile BYTE *)(startAddress + i) = pattern;     //write pattern ;pattern write into address(1A) 
; 357  :         value = *(volatile BYTE *)(startAddress + i);       //read pattern  ;value == 1A, setup value
; 358  :         *(volatile BYTE *)(startAddress + i) = temp;        //store data
; 359  : 
; 360  :         if(value != pattern)                                //check value(in address value) equal pattern
; 361  :         {
; 362  :             OALLog(L"\r\n Error Address: 0X%X", startAddress+i);
; 363  :         }else{
; 364  :             percent++;
; 365  :             OALLog(L"\r\n Decoding Memoey percent: %d >>>  Address: 0X%X",percent, startAddress+i);   
; 366  :             //OALLog(L"\r\n Address: 0X%X", startAddress+i);
; 367  :         }
; 368  : 
; 369  :         if( (percent%10) == 0){
; 370  :             OALLog(L"\r\n-----------------------------------\n");
; 371  :             LcdStall(stall_1Sec); 
; 372  :         }
; 373  : 	}
; 374  :     OALLog(L"\r\n");
; 375  :     LcdStall(stall_1Sec*3);*/
; 376  : 
; 377  :     OALLog(L"\r\n");

  0003c	e59f00ac	 ldr         r0, [pc, #0xAC]
  00040	eb000000	 bl          NKDbgPrintfW
  00044	e3a03cff	 mov         r3, #0xFF, 24
  00048	e38350ff	 orr         r5, r3, #0xFF
  0004c	e3a03c03	 mov         r3, #3, 24
  00050	e59f7094	 ldr         r7, [pc, #0x94]
  00054	e59f808c	 ldr         r8, [pc, #0x8C]
  00058	e38360ff	 orr         r6, r3, #0xFF
  0005c	e3a04102	 mov         r4, #2, 2
  00060	e3a0901a	 mov         r9, #0x1A
  00064		 |$LL6@DRAMTest_Z|

; 378  :     for(i=0, percent=1; i<(test1_Address - startAddress); i++, percent++)
; 379  : 	{
; 380  :         temp = *(volatile BYTE *)(startAddress + i);        //read data     ;temp(0x8000_0000) to get a address 

  00064	e5d42000	 ldrb        r2, [r4]

; 381  :         *(volatile BYTE *)(startAddress + i) = pattern;     //write pattern ;pattern write into address(1A) 

  00068	e5c49000	 strb        r9, [r4]

; 382  :         value = *(volatile BYTE *)(startAddress + i);       //read pattern  ;value == 1A, setup value

  0006c	e5d43000	 ldrb        r3, [r4]

; 383  :         *(volatile BYTE *)(startAddress + i) = temp;        //store data

  00070	e5c42000	 strb        r2, [r4]

; 384  :         
; 385  :         if(value != pattern)                                //check value(in address value) equal pattern

  00074	e353001a	 cmp         r3, #0x1A
  00078	0a000003	 beq         |$LN3@DRAMTest_Z|

; 386  :         {
; 387  :             OALLog(L"\r\n Error Address: 0X%X", startAddress+i);

  0007c	e59f0060	 ldr         r0, [pc, #0x60]
  00080	e1a01004	 mov         r1, r4
  00084	eb000000	 bl          NKDbgPrintfW

; 388  :         }else{

  00088	ea000001	 b           |$LN2@DRAMTest_Z|
  0008c		 |$LN3@DRAMTest_Z|

; 389  :             OALLog(L"*");

  0008c	e59f004c	 ldr         r0, [pc, #0x4C]
  00090	eb000000	 bl          NKDbgPrintfW
  00094		 |$LN2@DRAMTest_Z|

; 390  :             //percent++;
; 391  :             //OALLog(L"\r\n Decoding Memoey percent: %d >>>  Address: 0X%X",percent, test2_Address+i);   
; 392  :             //OALLog(L"\r\n Address: 0X%X", startAddress+i);
; 393  :         }
; 394  : 
; 395  :         if( (percent%1024) == 0){   //scan 1k show tip 

  00094	e2843106	 add         r3, r4, #6, 2
  00098	e1130006	 tst         r3, r6
  0009c	1a000006	 bne         |$LN5@DRAMTest_Z|

; 396  :             OALLog(L"\r\nScan size: %dk\r\n",percent/1024);

  000a0	e59f0034	 ldr         r0, [pc, #0x34]
  000a4	e1a01523	 mov         r1, r3, lsr #10
  000a8	eb000000	 bl          NKDbgPrintfW

; 397  :             LcdStall(stall_1Sec/1000); 

  000ac	e5971000	 ldr         r1, [r7]
  000b0	e0832891	 umull       r2, r3, r1, r8
  000b4	e1a00323	 mov         r0, r3, lsr #6
  000b8	eb000000	 bl          LcdStall
  000bc		 |$LN5@DRAMTest_Z|
  000bc	e2844001	 add         r4, r4, #1
  000c0	e2555001	 subs        r5, r5, #1
  000c4	1affffe6	 bne         |$LL6@DRAMTest_Z|

; 398  :         }
; 399  : 	}
; 400  :     OALLog(L"\r Tested ok!! \r\n");

  000c8	e59f0008	 ldr         r0, [pc, #8]
  000cc	eb000000	 bl          NKDbgPrintfW

; 401  : 
; 402  :     //LcdStall(stall_1Sec*3); 
; 403  :     
; 404  : 	/*for(i=0, Round=1; i<0xFF; i++)                         //Testing eboot, Ray  131113
; 405  :     {
; 406  :         if(i==65)
; 407  :         {
; 408  :             temp = *(volatile BYTE *)(startAddress + i);        //read data     ;temp(0x8000_0000) to get a address 
; 409  :             *(volatile BYTE *)(startAddress + i) = pattern;     //write pattern ;pattern write into address(1A) 
; 410  :             value = *(volatile BYTE *)(startAddress + i);       //read pattern  ;value == 1A, setup value
; 411  :             *(volatile BYTE *)(startAddress + i) = temp;        //store data   
; 412  :             if(value != pattern)                                //check value(in address value) equal pattern
; 413  :             {
; 414  :                 OALLog(L"\r\n Error Address: 0X%X", (ebootAddress+i));
; 415  :             }
; 416  :         }
; 417  : 
; 418  :         OALLog(L"\r\n Eboot Address: 0x%08x, Value = 0x%08x", (ebootAddress+i),*(volatile BYTE *)(ebootAddress+i));
; 419  :         
; 420  :         if((Round%16)== 0)
; 421  :         {
; 422  :             OALLog(L"\r\n Round %d",Round);
; 423  :             OALLog(L"\r\n---------------------\n"); 
; 424  :             Round++;
; 425  :         }
; 426  :     }*/
; 427  : }

  000d0	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN14@DRAMTest_Z|
  000d8		 |$LN15@DRAMTest_Z|
  000d8	00000000	 DCD         |??_C@_1CC@JNFCCOBJ@?$AA?$AN?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAk?$AA?$CB?$AA?$CB?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  000dc		 |$LN16@DRAMTest_Z|
  000dc	00000000	 DCD         |??_C@_1CG@IAOAAODF@?$AA?$AN?$AA?6?$AAS?$AAc?$AAa?$AAn?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  000e0		 |$LN17@DRAMTest_Z|
  000e0	00000000	 DCD         |??_C@_13BBDEGPLJ@?$AA?$CK?$AA?$AA@|
  000e4		 |$LN18@DRAMTest_Z|
  000e4	00000000	 DCD         |??_C@_1CO@GBEKHDOH@?$AA?$AN?$AA?6?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AAX?$AA?$AA@|
  000e8		 |$LN19@DRAMTest_Z|
  000e8	10624dd3	 DCD         0x10624dd3
  000ec		 |$LN20@DRAMTest_Z|
  000ec	00000000	 DCD         |stall_1Sec|
  000f0		 |$LN21@DRAMTest_Z|
  000f0	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  000f4		 |$LN22@DRAMTest_Z|
  000f4	00000000	 DCD         |??_C@_1FM@GKBCNJJJ@?$AA?$AN?$AA?6?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  000f8		 |$LN23@DRAMTest_Z|
  000f8	00000000	 DCD         |??_C@_1DE@FOMMJKGJ@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAE?$AAn?$AAd?$AA?5?$AA?5?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@|
  000fc		 |$LN24@DRAMTest_Z|
  000fc	00000000	 DCD         |??_C@_1DE@KFOFBOBN@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAT?$AAe?$AAs?$AAt?$AA1?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@|
  00100		 |$LN25@DRAMTest_Z|
  00100	00000000	 DCD         |??_C@_1DE@LFDKHCLM@?$AA?$AN?$AA?6?$AA?5?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA0?$AAX?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AA@|
  00104		 |$LN26@DRAMTest_Z|
  00104	00000000	 DCD         |??_C@_1BE@DFLOJDLG@?$AAD?$AAR?$AAA?$AAM?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00108		 |$M48116|

			 ENDP  ; |DRAMTest_Z2170P|

	EXPORT	|??_C@_1EC@NLKOKMKL@?$AA?$AN?$AA?5?$AA?$CB?$AAN?$AAo?$AAw?$AA?5?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAL?$AAE?$AAD?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@MFHKLEP@?$AA?$AN?$AA?5?$AA?$CB?$AAN?$AAo?$AAw?$AA?5?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAL?$AAE?$AAD?$AA?5?$AAt?$AAw?$AAi?$AAc?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|LcdSleep|

  00000			 AREA	 |.pdata|, PDATA
|$T48139| DCD	|$LN5@KeypadBkTe|
	DCD	0x40002601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@NLKOKMKL@?$AA?$AN?$AA?5?$AA?$CB?$AAN?$AAo?$AAw?$AA?5?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAL?$AAE?$AAD?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AA?$AN?$AA?6@| DCB 0xd
	DCB	0x0, " ", 0x0, "!", 0x0, "N", 0x0, "o", 0x0, "w", 0x0, " "
	DCB	0x0, "K", 0x0, "e", 0x0, "y", 0x0, "p", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "L", 0x0, "E", 0x0, "D", 0x0, " ", 0x0, "f"
	DCB	0x0, "i", 0x0, "r", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@MFHKLEP@?$AA?$AN?$AA?5?$AA?$CB?$AAN?$AAo?$AAw?$AA?5?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAL?$AAE?$AAD?$AA?5?$AAt?$AAw?$AAi?$AAc?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AA?$AN?$AA?6@| DCB 0xd
	DCB	0x0, " ", 0x0, "!", 0x0, "N", 0x0, "o", 0x0, "w", 0x0, " "
	DCB	0x0, "K", 0x0, "e", 0x0, "y", 0x0, "p", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "L", 0x0, "E", 0x0, "D", 0x0, " ", 0x0, "t"
	DCB	0x0, "w", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "f"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |KeypadBkTest_Z2170P| PROC

; 433  : {

  00000		 |$LN5@KeypadBkTe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48136|

; 434  : 	DWORD delay = 1000;
; 435  : 	HANDLE hGPIO;
; 436  : 	UNREFERENCED_PARAMETER(pMenu);
; 437  : 	OALBLMenuHeader(L"Keypad Backlight Test");

  00004	e59f0088	 ldr         r0, [pc, #0x88]
  00008	eb000000	 bl          OALBLMenuHeader

; 438  : 
; 439  :     hGPIO = GPIOOpen();

  0000c	eb000000	 bl          GPIOOpen

; 440  : 
; 441  :     GPIOClrBit(hGPIO, KP_LED_SET_GPIO);

  00010	e3a0109b	 mov         r1, #0x9B
  00014	e1a04000	 mov         r4, r0
  00018	eb000000	 bl          GPIOClrBit

; 442  :     LcdStall(1);

  0001c	e3a00001	 mov         r0, #1
  00020	eb000000	 bl          LcdStall

; 443  :     GPIOSetBit(hGPIO, KP_LED_SET_GPIO);

  00024	e3a0109b	 mov         r1, #0x9B
  00028	e1a00004	 mov         r0, r4
  0002c	eb000000	 bl          GPIOSetBit

; 444  :     OALLog(L"\r !Now Keypad LED first flash \r\n");

  00030	e59f0058	 ldr         r0, [pc, #0x58]
  00034	eb000000	 bl          NKDbgPrintfW

; 445  :     LcdSleep(delay*2);

  00038	e3a00e7d	 mov         r0, #0x7D, 28
  0003c	eb000000	 bl          LcdSleep

; 446  :     
; 447  :     
; 448  :     GPIOClrBit(hGPIO, KP_LED_SET_GPIO);

  00040	e3a0109b	 mov         r1, #0x9B
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          GPIOClrBit

; 449  :     LcdStall(delay);

  0004c	e3a00ffa	 mov         r0, #0xFA, 30
  00050	eb000000	 bl          LcdStall

; 450  :     GPIOSetBit(hGPIO, KP_LED_SET_GPIO);

  00054	e3a0109b	 mov         r1, #0x9B
  00058	e1a00004	 mov         r0, r4
  0005c	eb000000	 bl          GPIOSetBit

; 451  :     OALLog(L"\r !Now Keypad LED twice flash \r\n");

  00060	e59f0024	 ldr         r0, [pc, #0x24]
  00064	eb000000	 bl          NKDbgPrintfW

; 452  :     LcdSleep(delay*2);

  00068	e3a00e7d	 mov         r0, #0x7D, 28
  0006c	eb000000	 bl          LcdSleep

; 453  : 
; 454  :     GPIOClrBit(hGPIO, KP_LED_SET_GPIO);

  00070	e3a0109b	 mov         r1, #0x9B
  00074	e1a00004	 mov         r0, r4
  00078	eb000000	 bl          GPIOClrBit

; 455  : 
; 456  :     GPIOClose(hGPIO);

  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          GPIOClose

; 457  : 
; 458  : }

  00084	e8bd4010	 ldmia       sp!, {r4, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN6@KeypadBkTe|
  0008c		 |$LN7@KeypadBkTe|
  0008c	00000000	 DCD         |??_C@_1EC@MFHKLEP@?$AA?$AN?$AA?5?$AA?$CB?$AAN?$AAo?$AAw?$AA?5?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAL?$AAE?$AAD?$AA?5?$AAt?$AAw?$AAi?$AAc?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AA?$AN?$AA?6@|
  00090		 |$LN8@KeypadBkTe|
  00090	00000000	 DCD         |??_C@_1EC@NLKOKMKL@?$AA?$AN?$AA?5?$AA?$CB?$AAN?$AAo?$AAw?$AA?5?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAL?$AAE?$AAD?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AA?$AN?$AA?6@|
  00094		 |$LN9@KeypadBkTe|
  00094	00000000	 DCD         |??_C@_1CM@GFKLDENM@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00098		 |$M48137|

			 ENDP  ; |KeypadBkTest_Z2170P|

	EXPORT	|??_C@_1DG@MPNEEBCD@?$AA?$AN?$AA?5?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@CGGKAMLC@?$AA?$AN?$AA?5?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAE?$AAn?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|tsc2046Test|

  00000			 AREA	 |.pdata|, PDATA
|$T48150| DCD	|$LN5@TouchPanel|
	DCD	0x40000d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@MPNEEBCD@?$AA?$AN?$AA?5?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "T", 0x0, "o", 0x0, "u", 0x0, "c", 0x0, "h"
	DCB	0x0, " ", 0x0, "P", 0x0, "a", 0x0, "n", 0x0, "e", 0x0, "l"
	DCB	0x0, " ", 0x0, "R", 0x0, "u", 0x0, "n", 0x0, "n", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@CGGKAMLC@?$AA?$AN?$AA?5?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAE?$AAn?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "T", 0x0, "o", 0x0, "u", 0x0, "c", 0x0, "h"
	DCB	0x0, " ", 0x0, "P", 0x0, "a", 0x0, "n", 0x0, "e", 0x0, "l"
	DCB	0x0, " ", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, ".", 0x0, "."
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TouchPanelTest_Z2170P| PROC

; 464  : {

  00000		 |$LN5@TouchPanel|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48147|

; 465  :     UNREFERENCED_PARAMETER(pMenu);
; 466  :     OALBLMenuHeader(L"Touch Panel Test");

  00004	e59f0024	 ldr         r0, [pc, #0x24]
  00008	eb000000	 bl          OALBLMenuHeader

; 467  :     
; 468  :     OALLog(L"\r Touch Panel Running...\r\n");  

  0000c	e59f0018	 ldr         r0, [pc, #0x18]
  00010	eb000000	 bl          NKDbgPrintfW

; 469  :     tsc2046Test();

  00014	eb000000	 bl          tsc2046Test

; 470  :     OALLog(L"\r Touch Panel End...\r\n");  

  00018	e59f0008	 ldr         r0, [pc, #8]
  0001c	eb000000	 bl          NKDbgPrintfW

; 471  : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN6@TouchPanel|
  00028		 |$LN7@TouchPanel|
  00028	00000000	 DCD         |??_C@_1CO@CGGKAMLC@?$AA?$AN?$AA?5?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAE?$AAn?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  0002c		 |$LN8@TouchPanel|
  0002c	00000000	 DCD         |??_C@_1DG@MPNEEBCD@?$AA?$AN?$AA?5?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00030		 |$LN9@TouchPanel|
  00030	00000000	 DCD         |??_C@_1CC@BNGFPPEB@?$AAT?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00034		 |$M48148|

			 ENDP  ; |TouchPanelTest_Z2170P|

	EXPORT	|I2C_Clk|

  00000			 AREA	 |.pdata|, PDATA
|$T48162| DCD	|$LN5@I2C_Clk|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_Clk| PROC

; 479  : {

  00000		 |$LN5@I2C_Clk|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48159|
  00004	e1a04000	 mov         r4, r0

; 480  :     GPIOSetBit(hGPIO_I2C, I2C3_SCL_GPIO);  

  00008	e3a010b8	 mov         r1, #0xB8
  0000c	eb000000	 bl          GPIOSetBit

; 481  :     LcdStall(50);

  00010	e3a00032	 mov         r0, #0x32
  00014	eb000000	 bl          LcdStall

; 482  :     GPIOClrBit(hGPIO_I2C, I2C3_SCL_GPIO); 

  00018	e3a010b8	 mov         r1, #0xB8
  0001c	e1a00004	 mov         r0, r4
  00020	eb000000	 bl          GPIOClrBit

; 483  :     //LcdStall(50);
; 484  : }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M48160|

			 ENDP  ; |I2C_Clk|

	EXPORT	|I2C_ACKnowledge|
	IMPORT	|GPIOGetBit|
	IMPORT	|GPIOSetMode|

  00000			 AREA	 |.pdata|, PDATA
|$T48170| DCD	|$LN5@I2C_ACKnow|
	DCD	0x40001c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_ACKnowledge| PROC

; 489  : {

  00000		 |$LN5@I2C_ACKnow|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48167|
  00004	e1a04000	 mov         r4, r0

; 490  : 
; 491  :     GPIOSetMode(hGPIO_I2C, I2C3_SDA_GPIO, GPIO_DIR_INPUT);      //Get slave a ACK value for SDA line  

  00008	e3a02001	 mov         r2, #1
  0000c	e3a010b9	 mov         r1, #0xB9
  00010	eb000000	 bl          GPIOSetMode

; 492  :     LcdStall(50);

  00014	e3a00032	 mov         r0, #0x32
  00018	eb000000	 bl          LcdStall

; 493  :     GPIOSetBit(hGPIO_I2C, I2C3_SCL_GPIO);

  0001c	e3a010b8	 mov         r1, #0xB8
  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          GPIOSetBit

; 494  :     LcdStall(50); 

  00028	e3a00032	 mov         r0, #0x32
  0002c	eb000000	 bl          LcdStall

; 495  :     GPIOGetBit(hGPIO_I2C, I2C3_SDA_GPIO); 

  00030	e3a010b9	 mov         r1, #0xB9
  00034	e1a00004	 mov         r0, r4
  00038	eb000000	 bl          GPIOGetBit

; 496  :     LcdStall(50);

  0003c	e3a00032	 mov         r0, #0x32
  00040	eb000000	 bl          LcdStall

; 497  : 
; 498  :     GPIOSetMode(hGPIO_I2C, I2C3_SDA_GPIO, GPIO_DIR_OUTPUT); 

  00044	e3a02000	 mov         r2, #0
  00048	e3a010b9	 mov         r1, #0xB9
  0004c	e1a00004	 mov         r0, r4
  00050	eb000000	 bl          GPIOSetMode

; 499  :     //LcdStall(50);
; 500  :     GPIOClrBit(hGPIO_I2C, I2C3_SCL_GPIO);   

  00054	e3a010b8	 mov         r1, #0xB8
  00058	e1a00004	 mov         r0, r4
  0005c	eb000000	 bl          GPIOClrBit

; 501  :     LcdStall(50);   

  00060	e3a00032	 mov         r0, #0x32
  00064	eb000000	 bl          LcdStall

; 502  :     //Doesnot Needs SDA Line falling time!!
; 503  :     /*GPIOClrBit(hGPIO_I2C, I2C3_SDA_GPIO); 
; 504  :     LcdStall(50);*/
; 505  : }

  00068	e8bd4010	 ldmia       sp!, {r4, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M48168|

			 ENDP  ; |I2C_ACKnowledge|

	EXPORT	|I2C_ACKnowledge_READ|

  00000			 AREA	 |.pdata|, PDATA
|$T48178| DCD	|$LN5@I2C_ACKnow@2|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_ACKnowledge_READ| PROC

; 510  : {       

  00000		 |$LN5@I2C_ACKnow@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48175|
  00004	e1a04000	 mov         r4, r0

; 511  : 
; 512  :     //GPIOSetMode(hGPIO_I2C, I2C3_SDA_GPIO, GPIO_DIR_INPUT);      //Get slave a ACK value for SDA line  
; 513  :     //LcdStall(50);
; 514  :     GPIOSetBit(hGPIO_I2C, I2C3_SCL_GPIO);

  00008	e3a010b8	 mov         r1, #0xB8
  0000c	eb000000	 bl          GPIOSetBit

; 515  :     LcdStall(50); 

  00010	e3a00032	 mov         r0, #0x32
  00014	eb000000	 bl          LcdStall

; 516  :     GPIOGetBit(hGPIO_I2C, I2C3_SDA_GPIO); 

  00018	e3a010b9	 mov         r1, #0xB9
  0001c	e1a00004	 mov         r0, r4
  00020	eb000000	 bl          GPIOGetBit

; 517  :     LcdStall(50);

  00024	e3a00032	 mov         r0, #0x32
  00028	eb000000	 bl          LcdStall

; 518  :     
; 519  :     //GPIOSetMode(hGPIO_I2C, I2C3_SDA_GPIO, GPIO_DIR_OUTPUT); 
; 520  :     //LcdStall(50);
; 521  :     GPIOClrBit(hGPIO_I2C, I2C3_SCL_GPIO);   

  0002c	e3a010b8	 mov         r1, #0xB8
  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          GPIOClrBit

; 522  :     LcdStall(50);         

  00038	e3a00032	 mov         r0, #0x32
  0003c	eb000000	 bl          LcdStall

; 523  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M48176|

			 ENDP  ; |I2C_ACKnowledge_READ|

	EXPORT	|I2C_Clk_READ|

  00000			 AREA	 |.pdata|, PDATA
|$T48189| DCD	|$LN5@I2C_Clk_RE|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_Clk_READ| PROC

; 528  : {

  00000		 |$LN5@I2C_Clk_RE|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M48186|
  00004	e1a05000	 mov         r5, r0

; 529  :     DWORD data=0;
; 530  :     
; 531  :     GPIOSetBit(hGPIO_I2C, I2C3_SCL_GPIO);

  00008	e3a010b8	 mov         r1, #0xB8
  0000c	eb000000	 bl          GPIOSetBit

; 532  :     LcdStall(50);

  00010	e3a00032	 mov         r0, #0x32
  00014	eb000000	 bl          LcdStall

; 533  :     data = GPIOGetBit(hGPIO_I2C, I2C3_SDA_GPIO); 

  00018	e3a010b9	 mov         r1, #0xB9
  0001c	e1a00005	 mov         r0, r5
  00020	eb000000	 bl          GPIOGetBit
  00024	e1a04000	 mov         r4, r0

; 534  :     LcdStall(10);

  00028	e3a0000a	 mov         r0, #0xA
  0002c	eb000000	 bl          LcdStall

; 535  :     
; 536  :     GPIOClrBit(hGPIO_I2C, I2C3_SCL_GPIO);   

  00030	e3a010b8	 mov         r1, #0xB8
  00034	e1a00005	 mov         r0, r5
  00038	eb000000	 bl          GPIOClrBit

; 537  :     LcdStall(50); 

  0003c	e3a00032	 mov         r0, #0x32
  00040	eb000000	 bl          LcdStall

; 538  :     
; 539  :     return (int)data;
; 540  : }

  00044	e1a00004	 mov         r0, r4
  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M48187|

			 ENDP  ; |I2C_Clk_READ|

	EXPORT	|I2C_READ|

  00000			 AREA	 |.pdata|, PDATA
|$T48203| DCD	|$LN10@I2C_READ|
	DCD	0x40001b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_READ| PROC

; 545  : {

  00000		 |$LN10@I2C_READ|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M48200|
  00004	e1a05000	 mov         r5, r0

; 546  :     int i, rx, value;
; 547  :     
; 548  :     GPIOSetMode(hGPIO_I2C, I2C3_SDA_GPIO, GPIO_DIR_INPUT);      //Get slave a ACK value for SDA line  

  00008	e3a02001	 mov         r2, #1
  0000c	e3a010b9	 mov         r1, #0xB9
  00010	eb000000	 bl          GPIOSetMode

; 549  :     LcdStall(50);

  00014	e3a00032	 mov         r0, #0x32
  00018	eb000000	 bl          LcdStall

; 550  :     for(i=7, value=0; i>=0; i--)

  0001c	e3a04007	 mov         r4, #7
  00020	e3a06000	 mov         r6, #0
  00024		 |$LL3@I2C_READ|

; 551  :     {
; 552  :         rx = I2C_Clk_READ(hGPIO_I2C); 

  00024	e1a00005	 mov         r0, r5
  00028	eb000000	 bl          I2C_Clk_READ

; 553  :         value += (rx<<i);

  0002c	e0866410	 add         r6, r6, r0, lsl r4
  00030	e2544001	 subs        r4, r4, #1
  00034	5afffffa	 bpl         |$LL3@I2C_READ|

; 554  :     }
; 555  :     
; 556  :     GPIOSetMode(hGPIO_I2C, I2C3_SDA_GPIO, GPIO_DIR_OUTPUT);      

  00038	e3a02000	 mov         r2, #0
  0003c	e3a010b9	 mov         r1, #0xB9
  00040	e1a00005	 mov         r0, r5
  00044	eb000000	 bl          GPIOSetMode

; 557  :     GPIOClrBit(hGPIO_I2C, I2C3_SCL_GPIO);    

  00048	e3a010b8	 mov         r1, #0xB8
  0004c	e1a00005	 mov         r0, r5
  00050	eb000000	 bl          GPIOClrBit

; 558  :     GPIOClrBit(hGPIO_I2C, I2C3_SDA_GPIO); 

  00054	e3a010b9	 mov         r1, #0xB9
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          GPIOClrBit

; 559  :     //LcdStall(50); 
; 560  :     
; 561  :     return value;
; 562  : }

  00060	e1a00006	 mov         r0, r6
  00064	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M48201|

			 ENDP  ; |I2C_READ|

	EXPORT	|I2C_WRITE|

  00000			 AREA	 |.pdata|, PDATA
|$T48222| DCD	|$LN17@I2C_WRITE|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_WRITE| PROC

; 567  : {

  00000		 |$LN17@I2C_WRITE|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M48219|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 568  :     int i;
; 569  :     for(i=7; i>=0; i--)

  0000c	e3a04007	 mov         r4, #7
  00010	e3a07001	 mov         r7, #1
  00014		 |$LL5@I2C_WRITE|

; 570  :     {
; 571  :         if( CMD&(1<<i) ){

  00014	e1160417	 tst         r6, r7, lsl r4

; 572  :             GPIOSetBit(hGPIO_I2C, I2C3_SDA_GPIO);  

  00018	e3a010b9	 mov         r1, #0xB9
  0001c	e1a00005	 mov         r0, r5
  00020	0a000001	 beq         |$LN2@I2C_WRITE|
  00024	eb000000	 bl          GPIOSetBit

; 573  :             LcdStall(50);
; 574  :             I2C_Clk(hGPIO_I2C);
; 575  :         }else{

  00028	ea000000	 b           |$LN14@I2C_WRITE|
  0002c		 |$LN2@I2C_WRITE|

; 576  :             GPIOClrBit(hGPIO_I2C, I2C3_SDA_GPIO);   

  0002c	eb000000	 bl          GPIOClrBit
  00030		 |$LN14@I2C_WRITE|

; 577  :             LcdStall(50);

  00030	e3a00032	 mov         r0, #0x32
  00034	eb000000	 bl          LcdStall

; 578  :             I2C_Clk(hGPIO_I2C);

  00038	e3a010b8	 mov         r1, #0xB8
  0003c	e1a00005	 mov         r0, r5
  00040	eb000000	 bl          GPIOSetBit
  00044	e3a00032	 mov         r0, #0x32
  00048	eb000000	 bl          LcdStall
  0004c	e3a010b8	 mov         r1, #0xB8
  00050	e1a00005	 mov         r0, r5
  00054	eb000000	 bl          GPIOClrBit
  00058	e2544001	 subs        r4, r4, #1
  0005c	5affffec	 bpl         |$LL5@I2C_WRITE|

; 579  :         }
; 580  :     }           
; 581  : }

  00060	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M48220|

			 ENDP  ; |I2C_WRITE|

	EXPORT	|I2C_setSlaveAddress_READ|

  00000			 AREA	 |.pdata|, PDATA
|$T48241| DCD	|$LN17@I2C_setSla|
	DCD	0x40001f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_setSlaveAddress_READ| PROC

; 586  : {    

  00000		 |$LN17@I2C_setSla|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M48238|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 587  :     int i; 
; 588  :     for(i=7; i >=0; i--)

  0000c	e3a04007	 mov         r4, #7
  00010	e3a07001	 mov         r7, #1
  00014		 |$LL5@I2C_setSla|

; 589  :     {         
; 590  :         if( addr&(1<<i) ){

  00014	e1160417	 tst         r6, r7, lsl r4

; 591  :             GPIOSetBit(hGPIO_I2C, I2C3_SDA_GPIO);  

  00018	e3a010b9	 mov         r1, #0xB9
  0001c	e1a00005	 mov         r0, r5
  00020	0a000001	 beq         |$LN2@I2C_setSla|
  00024	eb000000	 bl          GPIOSetBit

; 592  :             LcdStall(50);
; 593  :             I2C_Clk(hGPIO_I2C);
; 594  :         }else{

  00028	ea000000	 b           |$LN14@I2C_setSla|
  0002c		 |$LN2@I2C_setSla|

; 595  :             GPIOClrBit(hGPIO_I2C, I2C3_SDA_GPIO);   

  0002c	eb000000	 bl          GPIOClrBit
  00030		 |$LN14@I2C_setSla|

; 596  :             LcdStall(50);

  00030	e3a00032	 mov         r0, #0x32
  00034	eb000000	 bl          LcdStall

; 597  :             I2C_Clk(hGPIO_I2C);

  00038	e3a010b8	 mov         r1, #0xB8
  0003c	e1a00005	 mov         r0, r5
  00040	eb000000	 bl          GPIOSetBit
  00044	e3a00032	 mov         r0, #0x32
  00048	eb000000	 bl          LcdStall
  0004c	e3a010b8	 mov         r1, #0xB8
  00050	e1a00005	 mov         r0, r5
  00054	eb000000	 bl          GPIOClrBit
  00058	e2544001	 subs        r4, r4, #1
  0005c	5affffec	 bpl         |$LL5@I2C_setSla|

; 598  :         }
; 599  :     }
; 600  :     GPIOClrBit(hGPIO_I2C, I2C3_SDA_GPIO); 

  00060	e3a010b9	 mov         r1, #0xB9
  00064	e1a00005	 mov         r0, r5
  00068	eb000000	 bl          GPIOClrBit

; 601  :     LcdStall(50);

  0006c	e3a00032	 mov         r0, #0x32
  00070	eb000000	 bl          LcdStall

; 602  : }

  00074	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M48239|

			 ENDP  ; |I2C_setSlaveAddress_READ|

	EXPORT	|I2C_setSlaveAddress|

  00000			 AREA	 |.pdata|, PDATA
|$T48260| DCD	|$LN17@I2C_setSla@2|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_setSlaveAddress| PROC

; 607  : {    

  00000		 |$LN17@I2C_setSla@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M48257|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 608  :     int i;  
; 609  :     for(i=7; i >=0; i--)

  0000c	e3a04007	 mov         r4, #7
  00010	e3a07001	 mov         r7, #1
  00014		 |$LL5@I2C_setSla@2|

; 610  :     {         
; 611  :         if( addr&(1<<i) ){

  00014	e1160417	 tst         r6, r7, lsl r4

; 612  :             GPIOSetBit(hGPIO_I2C, I2C3_SDA_GPIO);  

  00018	e3a010b9	 mov         r1, #0xB9
  0001c	e1a00005	 mov         r0, r5
  00020	0a000001	 beq         |$LN2@I2C_setSla@2|
  00024	eb000000	 bl          GPIOSetBit

; 613  :             LcdStall(50);
; 614  :             I2C_Clk(hGPIO_I2C);
; 615  :         }else{

  00028	ea000000	 b           |$LN14@I2C_setSla@2|
  0002c		 |$LN2@I2C_setSla@2|

; 616  :             GPIOClrBit(hGPIO_I2C, I2C3_SDA_GPIO);   

  0002c	eb000000	 bl          GPIOClrBit
  00030		 |$LN14@I2C_setSla@2|

; 617  :             LcdStall(50);

  00030	e3a00032	 mov         r0, #0x32
  00034	eb000000	 bl          LcdStall

; 618  :             I2C_Clk(hGPIO_I2C);

  00038	e3a010b8	 mov         r1, #0xB8
  0003c	e1a00005	 mov         r0, r5
  00040	eb000000	 bl          GPIOSetBit
  00044	e3a00032	 mov         r0, #0x32
  00048	eb000000	 bl          LcdStall
  0004c	e3a010b8	 mov         r1, #0xB8
  00050	e1a00005	 mov         r0, r5
  00054	eb000000	 bl          GPIOClrBit
  00058	e2544001	 subs        r4, r4, #1
  0005c	5affffec	 bpl         |$LL5@I2C_setSla@2|

; 619  :         }
; 620  :     }  
; 621  : }

  00060	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M48258|

			 ENDP  ; |I2C_setSlaveAddress|

	EXPORT	|I2C_START|

  00000			 AREA	 |.pdata|, PDATA
|$T48268| DCD	|$LN5@I2C_START|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_START| PROC

; 626  : {

  00000		 |$LN5@I2C_START|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48265|
  00004	e1a04000	 mov         r4, r0

; 627  :     GPIOSetBit(hGPIO_I2C, I2C3_SDA_GPIO);   //S1, SDA = High

  00008	e3a010b9	 mov         r1, #0xB9
  0000c	eb000000	 bl          GPIOSetBit

; 628  :     LcdStall(100);                          

  00010	e3a00064	 mov         r0, #0x64
  00014	eb000000	 bl          LcdStall

; 629  :     GPIOSetBit(hGPIO_I2C, I2C3_SCL_GPIO);   //S2, SCL = High ; kept high   

  00018	e3a010b8	 mov         r1, #0xB8
  0001c	e1a00004	 mov         r0, r4
  00020	eb000000	 bl          GPIOSetBit

; 630  :     LcdStall(100);

  00024	e3a00064	 mov         r0, #0x64
  00028	eb000000	 bl          LcdStall

; 631  :     
; 632  :     GPIOClrBit(hGPIO_I2C, I2C3_SDA_GPIO);   //S3, When SDA changes High -> Low , start bit generating

  0002c	e3a010b9	 mov         r1, #0xB9
  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          GPIOClrBit

; 633  :     LcdStall(50);                           

  00038	e3a00032	 mov         r0, #0x32
  0003c	eb000000	 bl          LcdStall

; 634  :     GPIOClrBit(hGPIO_I2C, I2C3_SCL_GPIO);   //S4, SCL = Low 

  00040	e3a010b8	 mov         r1, #0xB8
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          GPIOClrBit

; 635  :     LcdStall(50);                          

  0004c	e3a00032	 mov         r0, #0x32
  00050	eb000000	 bl          LcdStall

; 636  : }

  00054	e8bd4010	 ldmia       sp!, {r4, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M48266|

			 ENDP  ; |I2C_START|

	EXPORT	|I2C_STOP|

  00000			 AREA	 |.pdata|, PDATA
|$T48276| DCD	|$LN5@I2C_STOP|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |I2C_STOP| PROC

; 641  : {   

  00000		 |$LN5@I2C_STOP|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48273|
  00004	e1a04000	 mov         r4, r0

; 642  :     //GPIOClrBit(hGPIO_I2C, I2C3_SCL_GPIO);
; 643  :     GPIOClrBit(hGPIO_I2C, I2C3_SDA_GPIO);   //P1

  00008	e3a010b9	 mov         r1, #0xB9
  0000c	eb000000	 bl          GPIOClrBit

; 644  :     LcdStall(50);

  00010	e3a00032	 mov         r0, #0x32
  00014	eb000000	 bl          LcdStall

; 645  :     GPIOSetBit(hGPIO_I2C, I2C3_SCL_GPIO);   //P2

  00018	e3a010b8	 mov         r1, #0xB8
  0001c	e1a00004	 mov         r0, r4
  00020	eb000000	 bl          GPIOSetBit

; 646  :     LcdStall(50);

  00024	e3a00032	 mov         r0, #0x32
  00028	eb000000	 bl          LcdStall

; 647  :     GPIOSetBit(hGPIO_I2C, I2C3_SDA_GPIO);   //P3

  0002c	e3a010b9	 mov         r1, #0xB9
  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          GPIOSetBit

; 648  :     LcdStall(50);    

  00038	e3a00032	 mov         r0, #0x32
  0003c	eb000000	 bl          LcdStall

; 649  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M48274|

			 ENDP  ; |I2C_STOP|

	EXPORT	|gaugeInformation|

  00000			 AREA	 |.pdata|, PDATA
|$T48295| DCD	|$LN13@gaugeInfor|
	DCD	0x40004a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |gaugeInformation| PROC

; 654  : {

  00000		 |$LN13@gaugeInfor|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd040	 sub         sp, sp, #0x40
  00008		 |$M48292|
  00008	e1a04001	 mov         r4, r1
  0000c	e1a06000	 mov         r6, r0
  00010	e3a03a03	 mov         r3, #3, 20

; 655  :     int LSB = 0, MSB = 0; 
; 656  :     int i, temp, sum, a[16];
; 657  : 
; 658  :     LcdStall(12500);

  00014	e38300d4	 orr         r0, r3, #0xD4
  00018	eb000000	 bl          LcdStall

; 659  :     //*************************
; 660  :     I2C_START(hGPIO_I2C);  

  0001c	e1a00006	 mov         r0, r6
  00020	eb000000	 bl          I2C_START

; 661  :     I2C_setSlaveAddress(hGPIO_I2C, BQ27510_ADDRESS_WRITE);   //ADDR[7:1] + R/W[0] 

  00024	e3a010aa	 mov         r1, #0xAA
  00028	e1a00006	 mov         r0, r6
  0002c	eb000000	 bl          I2C_setSlaveAddress

; 662  :     LcdStall(100);    

  00030	e3a00064	 mov         r0, #0x64
  00034	eb000000	 bl          LcdStall

; 663  :     I2C_ACKnowledge(hGPIO_I2C);

  00038	e1a00006	 mov         r0, r6
  0003c	eb000000	 bl          I2C_ACKnowledge

; 664  :     
; 665  :     I2C_WRITE(hGPIO_I2C,  stdCMD);              //CMD[7:0]

  00040	e1a01004	 mov         r1, r4
  00044	e1a00006	 mov         r0, r6
  00048	eb000000	 bl          I2C_WRITE

; 666  :     //I2C_WRITE(hGPIO_I2C, bq27500CMD_VOLT_LSB);
; 667  :     LcdStall(300);                                          //100 200 500-ok 50, Maybe trouble        

  0004c	e3a00f4b	 mov         r0, #0x4B, 30
  00050	eb000000	 bl          LcdStall

; 668  :     I2C_ACKnowledge(hGPIO_I2C);

  00054	e1a00006	 mov         r0, r6
  00058	eb000000	 bl          I2C_ACKnowledge

; 669  :     //*************************
; 670  :      
; 671  :     //Sr
; 672  :     LcdStall(1000); 

  0005c	e3a00ffa	 mov         r0, #0xFA, 30
  00060	eb000000	 bl          LcdStall

; 673  : 
; 674  :     //*************************    
; 675  :     I2C_START(hGPIO_I2C);

  00064	e1a00006	 mov         r0, r6
  00068	eb000000	 bl          I2C_START

; 676  :     I2C_setSlaveAddress_READ(hGPIO_I2C, BQ27510_ADDRESS_READ);

  0006c	e3a010ab	 mov         r1, #0xAB
  00070	e1a00006	 mov         r0, r6
  00074	eb000000	 bl          I2C_setSlaveAddress_READ

; 677  :     LcdStall(300);  

  00078	e3a00f4b	 mov         r0, #0x4B, 30
  0007c	eb000000	 bl          LcdStall

; 678  :     I2C_ACKnowledge(hGPIO_I2C);

  00080	e1a00006	 mov         r0, r6
  00084	eb000000	 bl          I2C_ACKnowledge

; 679  : 
; 680  :     //prepare get Data LSB
; 681  :     LcdStall(300); 

  00088	e3a00f4b	 mov         r0, #0x4B, 30
  0008c	eb000000	 bl          LcdStall

; 682  :     LSB  = I2C_READ(hGPIO_I2C);

  00090	e1a00006	 mov         r0, r6
  00094	eb000000	 bl          I2C_READ
  00098	e1a05000	 mov         r5, r0

; 683  :     LcdStall(300);

  0009c	e3a00f4b	 mov         r0, #0x4B, 30
  000a0	eb000000	 bl          LcdStall

; 684  :     I2C_ACKnowledge_READ(hGPIO_I2C);

  000a4	e1a00006	 mov         r0, r6
  000a8	eb000000	 bl          I2C_ACKnowledge_READ

; 685  : 
; 686  :     //prepare get Data MSB
; 687  :     LcdStall(1000); 

  000ac	e3a00ffa	 mov         r0, #0xFA, 30
  000b0	eb000000	 bl          LcdStall

; 688  :     MSB = I2C_READ(hGPIO_I2C);

  000b4	e1a00006	 mov         r0, r6
  000b8	eb000000	 bl          I2C_READ
  000bc	e1a04000	 mov         r4, r0

; 689  :     LcdStall(300);

  000c0	e3a00f4b	 mov         r0, #0x4B, 30
  000c4	eb000000	 bl          LcdStall

; 690  :     I2C_ACKnowledge_READ(hGPIO_I2C);

  000c8	e1a00006	 mov         r0, r6
  000cc	eb000000	 bl          I2C_ACKnowledge_READ

; 691  :     LcdStall(500);

  000d0	e3a00f7d	 mov         r0, #0x7D, 30
  000d4	eb000000	 bl          LcdStall

; 692  :     I2C_STOP(hGPIO_I2C);

  000d8	e1a00006	 mov         r0, r6
  000dc	eb000000	 bl          I2C_STOP

; 693  :     //*************************
; 694  :     
; 695  :     //RETAILMSG(1, (L" ~Value = 0x%02x 0x%02x \r\n",MSB ,LSB));
; 696  : 
; 697  :     temp = (MSB<<8);
; 698  :     temp |= LSB;

  000e0	e185e404	 orr         lr, r5, r4, lsl #8

; 699  : 
; 700  :     for(i=0, sum=0; i<16; i++){

  000e4	e3a04001	 mov         r4, #1
  000e8	e3a05001	 mov         r5, #1
  000ec	e3a03000	 mov         r3, #0
  000f0	e3a00000	 mov         r0, #0
  000f4	e28d1000	 add         r1, sp, #0
  000f8		 |$LL5@gaugeInfor|

; 701  : 		if(i<8)

  000f8	e3530008	 cmp         r3, #8

; 702  : 			a[i] = temp & (1<<i);

  000fc	b00e2314	 andlt       r2, lr, r4, lsl r3

; 703  : 		else
; 704  : 			a[i] = temp & (1<<i);

  00100	a00e2315	 andge       r2, lr, r5, lsl r3
  00104	e2833001	 add         r3, r3, #1
  00108	e5812000	 str         r2, [r1]

; 705  : 			
; 706  : 		sum += a[i];

  0010c	e2811004	 add         r1, r1, #4
  00110	e3530010	 cmp         r3, #0x10
  00114	e0800002	 add         r0, r0, r2
  00118	bafffff6	 blt         |$LL5@gaugeInfor|

; 707  : 	}
; 708  :     return sum;
; 709  : }

  0011c	e28dd040	 add         sp, sp, #0x40
  00120	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00124	e12fff1e	 bx          lr
  00128		 |$M48293|

			 ENDP  ; |gaugeInformation|

	EXPORT	|InitI2CWithBQ27510|
	EXPORT	|??_C@_1FA@JMHKMEFE@?$AA?5?$AA?$HO?$AAR?$AAe?$AAp?$AAo?$AAr?$AAt?$AAs?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?3?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OLEHJPML@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@NOEMNDJB@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAm?$AAV?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@IBICOHAA@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAN?$AAo?$AAm?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAC?$AAa?$AAp?$AAa@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48308| DCD	|$LN5@InitI2CWit|
	DCD	0x40008c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@JMHKMEFE@?$AA?5?$AA?$HO?$AAR?$AAe?$AAp?$AAo?$AAr?$AAt?$AAs?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?3?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX@| DCB " "
	DCB	0x0, "~", 0x0, "R", 0x0, "e", 0x0, "p", 0x0, "o", 0x0, "r"
	DCB	0x0, "t", 0x0, "s", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, ":", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "X", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OLEHJPML@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "~", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "T", 0x0, "e", 0x0, "m"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "C", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@NOEMNDJB@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAm?$AAV?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "~", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "V", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@IBICOHAA@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAN?$AAo?$AAm?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAC?$AAa?$AAp?$AAa@| DCB " "
	DCB	0x0, "~", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "m"
	DCB	0x0, "i", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "A"
	DCB	0x0, "v", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "p"
	DCB	0x0, "a", 0x0, "c", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "A", 0x0, "h", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitI2CWithBQ27510| PROC

; 714  : {

  00000		 |$LN5@InitI2CWit|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M48305|
  00004	e1a09000	 mov         r9, r0

; 715  :     bq_dataram data;
; 716  :     int LSB = 0, MSB = 0; 
; 717  :     //int i, temp, sum, a[16];
; 718  :     
; 719  :     //*************************
; 720  :     I2C_START(hGPIO_I2C);  

  00008	eb000000	 bl          I2C_START

; 721  :     I2C_setSlaveAddress(hGPIO_I2C, BQ27510_ADDRESS_WRITE);   //ADDR[7:1] + R/W[0] 

  0000c	e3a010aa	 mov         r1, #0xAA
  00010	e1a00009	 mov         r0, r9
  00014	eb000000	 bl          I2C_setSlaveAddress

; 722  :     LcdStall(100);    

  00018	e3a00064	 mov         r0, #0x64
  0001c	eb000000	 bl          LcdStall

; 723  :     I2C_ACKnowledge(hGPIO_I2C);

  00020	e1a00009	 mov         r0, r9
  00024	eb000000	 bl          I2C_ACKnowledge

; 724  :     
; 725  :     I2C_WRITE(hGPIO_I2C,  bq27500CMD_CNTL_LSB);              //CMD[7:0] 

  00028	e3a01000	 mov         r1, #0
  0002c	e1a00009	 mov         r0, r9
  00030	eb000000	 bl          I2C_WRITE

; 726  :     LcdStall(300);                                          

  00034	e3a00f4b	 mov         r0, #0x4B, 30
  00038	eb000000	 bl          LcdStall

; 727  :     I2C_ACKnowledge(hGPIO_I2C);

  0003c	e1a00009	 mov         r0, r9
  00040	eb000000	 bl          I2C_ACKnowledge

; 728  : 
; 729  :     I2C_WRITE(hGPIO_I2C,  0x01);          

  00044	e3a01001	 mov         r1, #1
  00048	e1a00009	 mov         r0, r9
  0004c	eb000000	 bl          I2C_WRITE

; 730  :     LcdStall(300);                                                  

  00050	e3a00f4b	 mov         r0, #0x4B, 30
  00054	eb000000	 bl          LcdStall

; 731  :     I2C_ACKnowledge(hGPIO_I2C);

  00058	e1a00009	 mov         r0, r9
  0005c	eb000000	 bl          I2C_ACKnowledge

; 732  : 
; 733  :     I2C_WRITE(hGPIO_I2C,  0x00);          

  00060	e3a01000	 mov         r1, #0
  00064	e1a00009	 mov         r0, r9
  00068	eb000000	 bl          I2C_WRITE

; 734  :     LcdStall(300);                                                  

  0006c	e3a00f4b	 mov         r0, #0x4B, 30
  00070	eb000000	 bl          LcdStall

; 735  :     I2C_ACKnowledge(hGPIO_I2C);

  00074	e1a00009	 mov         r0, r9
  00078	eb000000	 bl          I2C_ACKnowledge

; 736  :     I2C_STOP(hGPIO_I2C);

  0007c	e1a00009	 mov         r0, r9
  00080	eb000000	 bl          I2C_STOP

; 737  :     //*************************
; 738  :     
; 739  :     LcdStall(1000); 

  00084	e3a00ffa	 mov         r0, #0xFA, 30
  00088	eb000000	 bl          LcdStall

; 740  :     //*************************    
; 741  :     I2C_START(hGPIO_I2C);                                    //Sr 

  0008c	e1a00009	 mov         r0, r9
  00090	eb000000	 bl          I2C_START

; 742  :     I2C_setSlaveAddress(hGPIO_I2C, BQ27510_ADDRESS_WRITE);   //ADDR[7:1] + R/W[0] 

  00094	e3a010aa	 mov         r1, #0xAA
  00098	e1a00009	 mov         r0, r9
  0009c	eb000000	 bl          I2C_setSlaveAddress

; 743  :     LcdStall(100);    

  000a0	e3a00064	 mov         r0, #0x64
  000a4	eb000000	 bl          LcdStall

; 744  :     I2C_ACKnowledge(hGPIO_I2C);

  000a8	e1a00009	 mov         r0, r9
  000ac	eb000000	 bl          I2C_ACKnowledge

; 745  :     
; 746  :     I2C_WRITE(hGPIO_I2C,  bq27500CMD_CNTL_LSB);              //CMD[7:0] 

  000b0	e3a01000	 mov         r1, #0
  000b4	e1a00009	 mov         r0, r9
  000b8	eb000000	 bl          I2C_WRITE

; 747  :     LcdStall(300);                                         

  000bc	e3a00f4b	 mov         r0, #0x4B, 30
  000c0	eb000000	 bl          LcdStall

; 748  :     I2C_ACKnowledge(hGPIO_I2C);

  000c4	e1a00009	 mov         r0, r9
  000c8	eb000000	 bl          I2C_ACKnowledge

; 749  : 
; 750  :     I2C_START(hGPIO_I2C);

  000cc	e1a00009	 mov         r0, r9
  000d0	eb000000	 bl          I2C_START

; 751  :     I2C_setSlaveAddress_READ(hGPIO_I2C, BQ27510_ADDRESS_READ);

  000d4	e3a010ab	 mov         r1, #0xAB
  000d8	e1a00009	 mov         r0, r9
  000dc	eb000000	 bl          I2C_setSlaveAddress_READ

; 752  :     LcdStall(300);  

  000e0	e3a00f4b	 mov         r0, #0x4B, 30
  000e4	eb000000	 bl          LcdStall

; 753  :     I2C_ACKnowledge(hGPIO_I2C);

  000e8	e1a00009	 mov         r0, r9
  000ec	eb000000	 bl          I2C_ACKnowledge

; 754  : 
; 755  :     //prepare get Data LSB
; 756  :     LcdStall(300); 

  000f0	e3a00f4b	 mov         r0, #0x4B, 30
  000f4	eb000000	 bl          LcdStall

; 757  :     LSB  = I2C_READ(hGPIO_I2C);

  000f8	e1a00009	 mov         r0, r9
  000fc	eb000000	 bl          I2C_READ
  00100	e1a08000	 mov         r8, r0

; 758  :     LcdStall(300);

  00104	e3a00f4b	 mov         r0, #0x4B, 30
  00108	eb000000	 bl          LcdStall

; 759  :     I2C_ACKnowledge_READ(hGPIO_I2C);

  0010c	e1a00009	 mov         r0, r9
  00110	eb000000	 bl          I2C_ACKnowledge_READ

; 760  : 
; 761  :     //prepare get Data MSB
; 762  :     LcdStall(1000); 

  00114	e3a00ffa	 mov         r0, #0xFA, 30
  00118	eb000000	 bl          LcdStall

; 763  :     MSB = I2C_READ(hGPIO_I2C);

  0011c	e1a00009	 mov         r0, r9
  00120	eb000000	 bl          I2C_READ
  00124	e1a07000	 mov         r7, r0

; 764  :     LcdStall(300);

  00128	e3a00f4b	 mov         r0, #0x4B, 30
  0012c	eb000000	 bl          LcdStall

; 765  :     I2C_ACKnowledge_READ(hGPIO_I2C);

  00130	e1a00009	 mov         r0, r9
  00134	eb000000	 bl          I2C_ACKnowledge_READ

; 766  :     LcdStall(500);

  00138	e3a00f7d	 mov         r0, #0x7D, 30
  0013c	eb000000	 bl          LcdStall

; 767  :     I2C_STOP(hGPIO_I2C);

  00140	e1a00009	 mov         r0, r9
  00144	eb000000	 bl          I2C_STOP

; 768  :     //*************************
; 769  :     
; 770  :     
; 771  :     I2C_START(hGPIO_I2C);

  00148	e1a00009	 mov         r0, r9
  0014c	eb000000	 bl          I2C_START

; 772  :     I2C_STOP(hGPIO_I2C);

  00150	e1a00009	 mov         r0, r9
  00154	eb000000	 bl          I2C_STOP

; 773  :     gaugeInformation(hGPIO_I2C,  0x00);         //This opreating means clean register

  00158	e3a01000	 mov         r1, #0
  0015c	e1a00009	 mov         r0, r9
  00160	eb000000	 bl          gaugeInformation

; 774  :     data.Temp =(short) gaugeInformation(hGPIO_I2C,  bq27500CMD_TEMP_LSB);

  00164	e3a01006	 mov         r1, #6
  00168	e1a00009	 mov         r0, r9
  0016c	eb000000	 bl          gaugeInformation
  00170	e1a03000	 mov         r3, r0

; 775  :     gaugeInformation(hGPIO_I2C,  0x00);

  00174	e1a06803	 mov         r6, r3, lsl #16
  00178	e1a00009	 mov         r0, r9
  0017c	e3a01000	 mov         r1, #0
  00180	e1a06846	 mov         r6, r6, asr #16
  00184	eb000000	 bl          gaugeInformation

; 776  :     data.Voltage =(short) gaugeInformation(hGPIO_I2C,  bq27500CMD_VOLT_LSB);

  00188	e3a01008	 mov         r1, #8
  0018c	e1a00009	 mov         r0, r9
  00190	eb000000	 bl          gaugeInformation
  00194	e1a05000	 mov         r5, r0

; 777  :     gaugeInformation(hGPIO_I2C,  0x00);

  00198	e1a00009	 mov         r0, r9
  0019c	e3a01000	 mov         r1, #0
  001a0	eb000000	 bl          gaugeInformation

; 778  :     data.NomAvailCap =(short) gaugeInformation(hGPIO_I2C,  bq27500CMD_NAC_LSB);

  001a4	e3a0100c	 mov         r1, #0xC
  001a8	e1a00009	 mov         r0, r9
  001ac	eb000000	 bl          gaugeInformation
  001b0	e1a04000	 mov         r4, r0

; 779  :     gaugeInformation(hGPIO_I2C,  0x00);

  001b4	e1a00009	 mov         r0, r9
  001b8	e3a01000	 mov         r1, #0
  001bc	eb000000	 bl          gaugeInformation

; 780  :     
; 781  :     OALLog(L" ~Reports the device type:0x%02X%02X \r\n",MSB ,LSB);

  001c0	e59f0064	 ldr         r0, [pc, #0x64]
  001c4	e1a02008	 mov         r2, r8
  001c8	e1a01007	 mov         r1, r7
  001cc	eb000000	 bl          NKDbgPrintfW

; 782  :     OALLog(L" ~Battery Temperature = %d C\r\n",(data.Temp/10)-273);

  001d0	e59f3050	 ldr         r3, [pc, #0x50]
  001d4	e3a02c01	 mov         r2, #1, 24
  001d8	e59f0044	 ldr         r0, [pc, #0x44]
  001dc	e0c3e396	 smull       lr, r3, r6, r3
  001e0	e3822011	 orr         r2, r2, #0x11
  001e4	e1a03143	 mov         r3, r3, asr #2
  001e8	e0833fa3	 add         r3, r3, r3, lsr #31
  001ec	e0431002	 sub         r1, r3, r2
  001f0	eb000000	 bl          NKDbgPrintfW

; 783  :     OALLog(L" ~Battery Voltages = %d mV\r\n",data.Voltage);

  001f4	e1a01805	 mov         r1, r5, lsl #16
  001f8	e59f0020	 ldr         r0, [pc, #0x20]
  001fc	e1a01841	 mov         r1, r1, asr #16
  00200	eb000000	 bl          NKDbgPrintfW

; 784  :     OALLog(L" ~Battery Nominal Available Capacity = %d mAh\r\n",data.NomAvailCap);

  00204	e59f0010	 ldr         r0, [pc, #0x10]
  00208	e1a01804	 mov         r1, r4, lsl #16
  0020c	e1a01841	 mov         r1, r1, asr #16
  00210	eb000000	 bl          NKDbgPrintfW

; 785  : }

  00214	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00218	e12fff1e	 bx          lr
  0021c		 |$LN6@InitI2CWit|
  0021c		 |$LN7@InitI2CWit|
  0021c	00000000	 DCD         |??_C@_1GA@IBICOHAA@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAN?$AAo?$AAm?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAA?$AAv?$AAa?$AAi?$AAl?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAC?$AAa?$AAp?$AAa@|
  00220		 |$LN8@InitI2CWit|
  00220	00000000	 DCD         |??_C@_1DK@NOEMNDJB@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAm?$AAV?$AA?$AN?$AA?6?$AA?$AA@|
  00224		 |$LN9@InitI2CWit|
  00224	00000000	 DCD         |??_C@_1DO@OLEHJPML@?$AA?5?$AA?$HO?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AA?$AN?$AA?6?$AA?$AA@|
  00228		 |$LN10@InitI2CWit|
  00228	66666667	 DCD         0x66666667
  0022c		 |$LN11@InitI2CWit|
  0022c	00000000	 DCD         |??_C@_1FA@JMHKMEFE@?$AA?5?$AA?$HO?$AAR?$AAe?$AAp?$AAo?$AAr?$AAt?$AAs?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?3?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX@|
  00230		 |$M48306|

			 ENDP  ; |InitI2CWithBQ27510|

	EXPORT	|??_C@_1FO@BKJKLBCH@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?3?$AA?5?$AAB?$AAQ?$AA2?$AA7?$AA5?$AA1?$AA0?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAI?$AA2?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@GBHIDOHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAQ?$AA2?$AA7?$AA5?$AA1?$AA0?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAI?$AA2?$AAC?$AA?5?$AAd@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48322| DCD	|$LN7@BatteryTes|
	DCD	0x40002301

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@BKJKLBCH@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?3?$AA?5?$AAB?$AAQ?$AA2?$AA7?$AA5?$AA1?$AA0?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAI?$AA2?$AAC@| DCB "S"
	DCB	0x0, "U", 0x0, "C", 0x0, "C", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, ":", 0x0, " ", 0x0, "B", 0x0, "Q", 0x0, "2", 0x0, "7"
	DCB	0x0, "5", 0x0, "1", 0x0, "0", 0x0, "_", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "O"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "I", 0x0, "2"
	DCB	0x0, "C", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "O", 0x0, "K", 0x0, "!"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@GBHIDOHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAQ?$AA2?$AA7?$AA5?$AA1?$AA0?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAI?$AA2?$AAC?$AA?5?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "Q", 0x0, "2", 0x0, "7", 0x0, "5", 0x0, "1"
	DCB	0x0, "0", 0x0, "_", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "O", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, " ", 0x0, "I", 0x0, "2", 0x0, "C", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BatteryTest_Z2170P| PROC

; 790  : {

  00000		 |$LN7@BatteryTes|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48319|

; 791  :     HANDLE hGPIO_I2C;
; 792  :     
; 793  :     UNREFERENCED_PARAMETER(pMenu);
; 794  :     OALBLMenuHeader(L"Battery Test");

  00004	e59f007c	 ldr         r0, [pc, #0x7C]
  00008	eb000000	 bl          OALBLMenuHeader

; 795  :     
; 796  :     if((hGPIO_I2C = GPIOOpen()) == NULL) 

  0000c	eb000000	 bl          GPIOOpen
  00010	e1b04000	 movs        r4, r0
  00014	1a000003	 bne         |$LN2@BatteryTes|

; 797  : 	{
; 798  :         RETAILMSG(1,(L"ERROR: BQ27510_init - Open I2C device Failed!!\r\n"));

  00018	e59f0064	 ldr         r0, [pc, #0x64]
  0001c	eb000000	 bl          NKDbgPrintfW

; 812  : I2COpenFalse: 
; 813  :     return;    
; 814  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN2@BatteryTes|

; 799  :         goto I2COpenFalse;
; 800  : 	}else{
; 801  :         RETAILMSG(1,(L"SUCCESS: BQ27510_init - Open I2C device OK!!\r\n"));

  00028	e59f0050	 ldr         r0, [pc, #0x50]
  0002c	eb000000	 bl          NKDbgPrintfW

; 802  : 	}
; 803  :     //OALLog(L"\r\n >>>Set hGPIO_I2C:%X \r\n",hGPIO_I2C);  
; 804  :     
; 805  :     GPIOClrBit(hGPIO_I2C,  184);  

  00030	e3a010b8	 mov         r1, #0xB8
  00034	e1a00004	 mov         r0, r4
  00038	eb000000	 bl          GPIOClrBit

; 806  :     GPIOSetMode(hGPIO_I2C, 184, GPIO_DIR_OUTPUT);   //I2C3_CLK, Ray 131129 

  0003c	e3a02000	 mov         r2, #0
  00040	e3a010b8	 mov         r1, #0xB8
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          GPIOSetMode

; 807  :     GPIOClrBit(hGPIO_I2C,  185);

  0004c	e3a010b9	 mov         r1, #0xB9
  00050	e1a00004	 mov         r0, r4
  00054	eb000000	 bl          GPIOClrBit

; 808  :     GPIOSetMode(hGPIO_I2C, 185, GPIO_DIR_OUTPUT);   //I2C3_SDA, Ray 131129 

  00058	e3a02000	 mov         r2, #0
  0005c	e3a010b9	 mov         r1, #0xB9
  00060	e1a00004	 mov         r0, r4
  00064	eb000000	 bl          GPIOSetMode

; 809  :     
; 810  :     InitI2CWithBQ27510(hGPIO_I2C);

  00068	e1a00004	 mov         r0, r4
  0006c	eb000000	 bl          InitI2CWithBQ27510

; 811  :     GPIOClose(hGPIO_I2C);

  00070	e1a00004	 mov         r0, r4
  00074	eb000000	 bl          GPIOClose
  00078		 |$I2COpenFalse$47652|

; 812  : I2COpenFalse: 
; 813  :     return;    
; 814  : }

  00078	e8bd4010	 ldmia       sp!, {r4, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$LN8@BatteryTes|
  00080		 |$LN9@BatteryTes|
  00080	00000000	 DCD         |??_C@_1FO@BKJKLBCH@?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?3?$AA?5?$AAB?$AAQ?$AA2?$AA7?$AA5?$AA1?$AA0?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAI?$AA2?$AAC@|
  00084		 |$LN10@BatteryTes|
  00084	00000000	 DCD         |??_C@_1GC@GBHIDOHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAQ?$AA2?$AA7?$AA5?$AA1?$AA0?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAI?$AA2?$AAC?$AA?5?$AAd@|
  00088		 |$LN11@BatteryTes|
  00088	00000000	 DCD         |??_C@_1BK@KIOELMDE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  0008c		 |$M48320|

			 ENDP  ; |BatteryTest_Z2170P|

	EXPORT	|??_C@_1CG@CDBIFFDJ@?$AAL?$AAE?$AAD?$AA?5?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48334| DCD	|$LN5@LEDTest_Z2|
	DCD	0x40003801

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@CDBIFFDJ@?$AAL?$AAE?$AAD?$AA?5?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "L"
	DCB	0x0, "E", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "d"
	DCB	0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "T", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |LEDTest_Z2170P| PROC

; 821  : {

  00000		 |$LN5@LEDTest_Z2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M48331|

; 822  :     DWORD stall_1mSec = 1000;
; 823  : //    int i;
; 824  : 	HANDLE hGPIO;
; 825  : 	UNREFERENCED_PARAMETER(pMenu);
; 826  : 	
; 827  : 	OALBLMenuHeader(L"LED Indicator Test");

  00004	e59f00d0	 ldr         r0, [pc, #0xD0]
  00008	eb000000	 bl          OALBLMenuHeader

; 828  :     hGPIO = GPIOOpen();

  0000c	eb000000	 bl          GPIOOpen

; 829  :     
; 830  :     //for(i=0; i<2; i++){
; 831  :         GPIOClrBit(hGPIO, BARCODE_LED_SET_GPIO);

  00010	e3a010a0	 mov         r1, #0xA0
  00014	e1a05000	 mov         r5, r0
  00018	eb000000	 bl          GPIOClrBit

; 832  :         LcdStall(stall_1mSec);

  0001c	e3a00ffa	 mov         r0, #0xFA, 30
  00020	eb000000	 bl          LcdStall

; 833  :         GPIOSetBit(hGPIO, BARCODE_LED_SET_GPIO);

  00024	e3a010a0	 mov         r1, #0xA0
  00028	e1a00005	 mov         r0, r5
  0002c	eb000000	 bl          GPIOSetBit

; 834  :         LcdStall(stall_1Sec);

  00030	e59f40a0	 ldr         r4, [pc, #0xA0]
  00034	e5940000	 ldr         r0, [r4]
  00038	eb000000	 bl          LcdStall

; 835  :         GPIOClrBit(hGPIO, BARCODE_LED_SET_GPIO);

  0003c	e3a010a0	 mov         r1, #0xA0
  00040	e1a00005	 mov         r0, r5
  00044	eb000000	 bl          GPIOClrBit

; 836  :         LcdStall(stall_1Sec);

  00048	e5940000	 ldr         r0, [r4]
  0004c	eb000000	 bl          LcdStall

; 837  :         
; 838  :         GPIOClrBit(hGPIO, GREEN_LED_SET_GPIO); //??

  00050	e3a01022	 mov         r1, #0x22
  00054	e1a00005	 mov         r0, r5
  00058	eb000000	 bl          GPIOClrBit

; 839  :         LcdStall(stall_1mSec);

  0005c	e3a00ffa	 mov         r0, #0xFA, 30
  00060	eb000000	 bl          LcdStall

; 840  :         GPIOSetBit(hGPIO, GREEN_LED_SET_GPIO);

  00064	e3a01022	 mov         r1, #0x22
  00068	e1a00005	 mov         r0, r5
  0006c	eb000000	 bl          GPIOSetBit

; 841  :         LcdStall(stall_1Sec);

  00070	e5940000	 ldr         r0, [r4]
  00074	eb000000	 bl          LcdStall

; 842  :         GPIOClrBit(hGPIO, GREEN_LED_SET_GPIO);

  00078	e3a01022	 mov         r1, #0x22
  0007c	e1a00005	 mov         r0, r5
  00080	eb000000	 bl          GPIOClrBit

; 843  :         LcdStall(stall_1Sec);

  00084	e5940000	 ldr         r0, [r4]
  00088	eb000000	 bl          LcdStall

; 844  :         
; 845  :         GPIOClrBit(hGPIO, RED_LED_SET_GPIO);    //?

  0008c	e3a0108c	 mov         r1, #0x8C
  00090	e1a00005	 mov         r0, r5
  00094	eb000000	 bl          GPIOClrBit

; 846  :         LcdStall(stall_1mSec);

  00098	e3a00ffa	 mov         r0, #0xFA, 30
  0009c	eb000000	 bl          LcdStall

; 847  :         GPIOSetBit(hGPIO, RED_LED_SET_GPIO);

  000a0	e3a0108c	 mov         r1, #0x8C
  000a4	e1a00005	 mov         r0, r5
  000a8	eb000000	 bl          GPIOSetBit

; 848  :         LcdStall(stall_1Sec);

  000ac	e5940000	 ldr         r0, [r4]
  000b0	eb000000	 bl          LcdStall

; 849  :         GPIOClrBit(hGPIO, RED_LED_SET_GPIO);

  000b4	e3a0108c	 mov         r1, #0x8C
  000b8	e1a00005	 mov         r0, r5
  000bc	eb000000	 bl          GPIOClrBit

; 850  :         LcdStall(stall_1Sec);

  000c0	e5940000	 ldr         r0, [r4]
  000c4	eb000000	 bl          LcdStall

; 851  :     //}
; 852  :     GPIOClose(hGPIO);

  000c8	e1a00005	 mov         r0, r5
  000cc	eb000000	 bl          GPIOClose

; 853  : }

  000d0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN6@LEDTest_Z2|
  000d8		 |$LN7@LEDTest_Z2|
  000d8	00000000	 DCD         |stall_1Sec|
  000dc		 |$LN8@LEDTest_Z2|
  000dc	00000000	 DCD         |??_C@_1CG@CDBIFFDJ@?$AAL?$AAE?$AAD?$AA?5?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  000e0		 |$M48332|

			 ENDP  ; |LEDTest_Z2170P|

	EXPORT	|BCRSetRTS|

  00000			 AREA	 |.pdata|, PDATA
|$T48347| DCD	|$LN7@BCRSetRTS|
	DCD	0x40000a00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BCRSetRTS| PROC

; 862  : {

  00000		 |$LN7@BCRSetRTS|
  00000		 |$M48344|
  00000	e3500000	 cmp         r0, #0

; 863  :     UINT bData = INREG8(&pUartRegs->MCR);

  00004	e59f3018	 ldr         r3, [pc, #0x18]
  00008	e5932000	 ldr         r2, [r3]
  0000c	e5d23010	 ldrb        r3, [r2, #0x10]

; 864  : 
; 865  :     if(bSet)
; 866  :         bData |= UART_MCR_RTS;

  00010	13833002	 orrne       r3, r3, #2

; 869  : 
; 870  :     OUTREG8(&pUartRegs->MCR, bData);      

  00014	15c23010	 strneb      r3, [r2, #0x10]

; 867  :     else
; 868  :         bData &= ~UART_MCR_RTS;     //

  00018	03c33002	 biceq       r3, r3, #2

; 869  : 
; 870  :     OUTREG8(&pUartRegs->MCR, bData);      

  0001c	05c23010	 streqb      r3, [r2, #0x10]

; 871  : }

  00020	e12fff1e	 bx          lr
  00024		 |$LN8@BCRSetRTS|
  00024		 |$LN9@BCRSetRTS|
  00024	00000000	 DCD         |pUartRegs|
  00028		 |$M48345|

			 ENDP  ; |BCRSetRTS|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1BE@NKOCEIML@?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@PBEKMGPM@?$AA?9?$AA?$DO?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@LBDGOOHC@?$AA?$AN?$AA?5?$AAT?$AAh?$AAe?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?8?$AA0?$AA?8?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OALBLMenuReadKey|
	IMPORT	|OALPAtoVA|
	IMPORT	|GetAddressByDevice|
	IMPORT	|EnableDeviceClocks|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T48388| DCD	|$LN30@BarcodeTes|
	DCD	0xc0008502

  00000			 AREA	 |.xdata|, DATA
|$T48384| DCD	0xffffffdc

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@NKOCEIML@?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@PBEKMGPM@?$AA?9?$AA?$DO?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, ">", 0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@LBDGOOHC@?$AA?$AN?$AA?5?$AAT?$AAh?$AAe?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?8?$AA0?$AA?8?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "T", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, " "
	DCB	0x0, "k", 0x0, "e", 0x0, "y", 0x0, " ", 0x0, "'", 0x0, "0"
	DCB	0x0, "'", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T48384|

  00008		 |BarcodeTest_Z2170P| PROC

; 875  : {

  00008		 |$LN30@BarcodeTes|
  00008	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  0000c	e24dd068	 sub         sp, sp, #0x68
  00010		 |$M48385|
  00010	e59f3200	 ldr         r3, [pc, #0x200]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3064	 str         r3, [sp, #0x64]

; 876  :     HANDLE  hGPIO;
; 877  :     UINT8   status, ch, running = 1;
; 878  :     int     count = 30, inNum = 0;
; 879  :     //int     i = 0;
; 880  :     WCHAR   key;
; 881  :     WCHAR   scan[50];
; 882  :        
; 883  : 	UNREFERENCED_PARAMETER(pMenu);	
; 884  : 	OALBLMenuHeader(L"LED Indicator Test");

  0001c	e59f01f0	 ldr         r0, [pc, #0x1F0]
  00020	e3a0401e	 mov         r4, #0x1E
  00024	e3a06000	 mov         r6, #0
  00028	eb000000	 bl          OALBLMenuHeader

; 885  :     hGPIO = GPIOOpen();

  0002c	eb000000	 bl          GPIOOpen

; 886  :     GPIOSetMode(hGPIO, BCR_ENG_PWEN, GPIO_DIR_OUTPUT);   

  00030	e3a02000	 mov         r2, #0
  00034	e3a01026	 mov         r1, #0x26
  00038	e1a05000	 mov         r5, r0
  0003c	eb000000	 bl          GPIOSetMode

; 887  :     GPIOSetMode(hGPIO, BCR_ENG_TRIG, GPIO_DIR_OUTPUT);

  00040	e3a02000	 mov         r2, #0
  00044	e3a01024	 mov         r1, #0x24
  00048	e1a00005	 mov         r0, r5
  0004c	eb000000	 bl          GPIOSetMode

; 888  :     
; 889  :     GPIOSetBit(hGPIO, BCR_ENG_PWEN);                    //Power ON

  00050	e3a01026	 mov         r1, #0x26
  00054	e1a00005	 mov         r0, r5
  00058	eb000000	 bl          GPIOSetBit

; 890  :     EnableDeviceClocks(OMAP_DEVICE_UART1, TRUE); 

  0005c	e3a01001	 mov         r1, #1
  00060	e3a0000a	 mov         r0, #0xA
  00064	eb000000	 bl          EnableDeviceClocks

; 891  :     pUartRegs = OALPAtoUA(GetAddressByDevice(OMAP_DEVICE_UART1));

  00068	e3a0000a	 mov         r0, #0xA
  0006c	eb000000	 bl          GetAddressByDevice
  00070	e3a01000	 mov         r1, #0
  00074	eb000000	 bl          OALPAtoVA
  00078	e59f8190	 ldr         r8, [pc, #0x190]

; 892  :        
; 893  :     
; 894  :     // reset uart
; 895  : 	OUTREG8(&pUartRegs->SYSC, UART_SYSC_RST);

  0007c	e3a03002	 mov         r3, #2
  00080	e5880000	 str         r0, [r8]
  00084	e5c03054	 strb        r3, [r0, #0x54]
  00088	e5982000	 ldr         r2, [r8]
  0008c		 |$LL9@BarcodeTes|

; 896  :     while ((INREG8(&pUartRegs->SYSS) & UART_SYSS_RST_DONE) == 0)

  0008c	e5d23058	 ldrb        r3, [r2, #0x58]
  00090	e3130001	 tst         r3, #1
  00094	0afffffc	 beq         |$LL9@BarcodeTes|

; 897  :         ;
; 898  : 
; 899  :     // Set baud rate
; 900  :     OUTREG8(&pUartRegs->LCR, UART_LCR_DLAB);    //Line control register, DIV_EN

  00098	e3a03080	 mov         r3, #0x80
  0009c	e5c2300c	 strb        r3, [r2, #0xC]

; 901  :     OUTREG8(&pUartRegs->DLL, 0x38);             //9.6kbps

  000a0	e5983000	 ldr         r3, [r8]
  000a4	e3a02038	 mov         r2, #0x38

; 902  :     OUTREG8(&pUartRegs->DLH, 0x01);

  000a8	e3a0e001	 mov         lr, #1
  000ac	e5c32000	 strb        r2, [r3]
  000b0	e5983000	 ldr         r3, [r8]

; 903  :     OUTREG8(&pUartRegs->LCR, 0x00);

  000b4	e3a0a000	 mov         r10, #0

; 904  : 
; 905  :     // 8 bit, 1 stop bit, no parity
; 906  :     OUTREG8(&pUartRegs->LCR, 0x03);             

  000b8	e3a02003	 mov         r2, #3
  000bc	e5c3e004	 strb        lr, [r3, #4]
  000c0	e5983000	 ldr         r3, [r8]

; 907  :     // Enable FIFO
; 908  :     OUTREG8(&pUartRegs->FCR, UART_FCR_FIFO_EN);
; 909  :     OUTREG8(&pUartRegs->FCR, UART_FCR_FIFO_EN|UART_FCR_RX_FIFO_CLEAR|UART_FCR_TX_FIFO_CLEAR);

  000c4	e3a01007	 mov         r1, #7

; 910  :     // Pool
; 911  :     OUTREG8(&pUartRegs->IER, 0);
; 912  :     // Set DTR/RTS signals
; 913  :     OUTREG8(&pUartRegs->MCR, 0); //UART_MCR_DTR|UART_MCR_RTS);
; 914  :     // Configuration complete so select UART 16x mode
; 915  : 	OUTREG8(&pUartRegs->MDR1, UART_MDR1_UART16);
; 916  :     BCRSetRTS(TRUE);
; 917  :     //OALLog(L"\r Scan Mode key '5', if Cancel '0'.\r\n");
; 918  :     
; 919  :     OALLog(L"\r The Cancel key '0'.\r\n");

  000c8	e59f013c	 ldr         r0, [pc, #0x13C]
  000cc	e5c3a00c	 strb        r10, [r3, #0xC]
  000d0	e5983000	 ldr         r3, [r8]
  000d4	e5c3200c	 strb        r2, [r3, #0xC]
  000d8	e5983000	 ldr         r3, [r8]
  000dc	e5c3e008	 strb        lr, [r3, #8]
  000e0	e5983000	 ldr         r3, [r8]
  000e4	e5c31008	 strb        r1, [r3, #8]
  000e8	e5983000	 ldr         r3, [r8]
  000ec	e5c3a004	 strb        r10, [r3, #4]
  000f0	e5983000	 ldr         r3, [r8]
  000f4	e5c3a010	 strb        r10, [r3, #0x10]
  000f8	e5983000	 ldr         r3, [r8]
  000fc	e5c3a020	 strb        r10, [r3, #0x20]
  00100	e5982000	 ldr         r2, [r8]
  00104	e5d23010	 ldrb        r3, [r2, #0x10]
  00108	e3833002	 orr         r3, r3, #2
  0010c	e5c23010	 strb        r3, [r2, #0x10]
  00110	eb000000	 bl          NKDbgPrintfW
  00114	e28d9000	 add         r9, sp, #0
  00118		 |$LL7@BarcodeTes|

; 920  :     while(running)
; 921  :     {
; 922  : 		//if(key == L'5')             // SCAN KEY
; 923  : 		//{
; 924  : 		    LcdSleep(500);

  00118	e3a00f7d	 mov         r0, #0x7D, 30
  0011c	eb000000	 bl          LcdSleep

; 925  : 			GPIOClrBit(hGPIO, BCR_ENG_TRIG);

  00120	e3a01024	 mov         r1, #0x24
  00124	e1a00005	 mov         r0, r5
  00128	eb000000	 bl          GPIOClrBit

; 926  : 			BCRSetRTS(FALSE);

  0012c	e5982000	 ldr         r2, [r8]

; 927  : 			LcdSleep(500);

  00130	e3a00f7d	 mov         r0, #0x7D, 30
  00134	e5d23010	 ldrb        r3, [r2, #0x10]
  00138	e20330fd	 and         r3, r3, #0xFD
  0013c	e5c23010	 strb        r3, [r2, #0x10]
  00140	eb000000	 bl          LcdSleep

; 928  : 			
; 929  : 			while( count-- )

  00144	e3540000	 cmp         r4, #0
  00148	0a00000b	 beq         |$LN25@BarcodeTes|

; 920  :     while(running)
; 921  :     {
; 922  : 		//if(key == L'5')             // SCAN KEY
; 923  : 		//{
; 924  : 		    LcdSleep(500);

  0014c	e0897086	 add         r7, r9, r6, lsl #1
  00150		 |$LL5@BarcodeTes|

; 930  : 			{
; 931  : 				status = INREG8(&pUartRegs->LSR);

  00150	e5982000	 ldr         r2, [r8]

; 932  : 				if ((status & UART_LSR_RX_FIFO_E) != 0)
; 933  : 				{
; 934  : 					ch = INREG8(&pUartRegs->RHR);
; 935  : 					scan[inNum++] = ch;
; 936  : 					//OALLog(L" %c\r\n",ch);
; 937  : 				}
; 938  : 				LcdSleep(100);

  00154	e3a00064	 mov         r0, #0x64
  00158	e2444001	 sub         r4, r4, #1
  0015c	e5d23014	 ldrb        r3, [r2, #0x14]
  00160	e3130001	 tst         r3, #1
  00164	15d23000	 ldrneb      r3, [r2]
  00168	12866001	 addne       r6, r6, #1
  0016c	10c730b2	 strneh      r3, [r7], #2
  00170	eb000000	 bl          LcdSleep
  00174	e3540000	 cmp         r4, #0
  00178	1afffff4	 bne         |$LL5@BarcodeTes|
  0017c		 |$LN25@BarcodeTes|

; 939  : 			}
; 940  : 			
; 941  : 			GPIOSetBit(hGPIO, BCR_ENG_TRIG);

  0017c	e3a01024	 mov         r1, #0x24
  00180	e1a00005	 mov         r0, r5
  00184	e2444001	 sub         r4, r4, #1
  00188	eb000000	 bl          GPIOSetBit

; 942  : 			if( inNum > 0 )

  0018c	e3560000	 cmp         r6, #0
  00190	ca00000b	 bgt         |$LN23@BarcodeTes|

; 951  : 				break;
; 952  : 			}
; 953  : 			
; 954  : 			key = OALBLMenuReadKey(TRUE);

  00194	e3a00001	 mov         r0, #1
  00198	eb000000	 bl          OALBLMenuReadKey
  0019c	e1a03800	 mov         r3, r0, lsl #16
  001a0	e1a03823	 mov         r3, r3, lsr #16

; 955  : 			if(key == L'0')             // ESC KEY

  001a4	e3530030	 cmp         r3, #0x30
  001a8	0a000002	 beq         |$LN24@BarcodeTes|

; 958  : 			    break;
; 959  : 		    }
; 960  : 		//}
; 961  : 		LcdSleep(150);

  001ac	e3a00096	 mov         r0, #0x96
  001b0	eb000000	 bl          LcdSleep
  001b4	eaffffd7	 b           |$LL7@BarcodeTes|
  001b8		 |$LN24@BarcodeTes|

; 956  : 		    {
; 957  : 			    OALLog(L"Cancel \r\n");

  001b8	e59f0048	 ldr         r0, [pc, #0x48]
  001bc	eb000000	 bl          NKDbgPrintfW
  001c0	ea000005	 b           |$LN6@BarcodeTes|
  001c4		 |$LN23@BarcodeTes|

; 943  : 			{
; 944  : 				/*while(scan[i] != L'\0'){
; 945  : 				    OALLog(L"%c ",scan[i]);
; 946  : 				    i++;
; 947  : 				}
; 948  : 				OALLog(L"\r\n");*/
; 949  : 				scan[inNum] = '\0';
; 950  : 				OALLog(L"->%s\r\n",scan);

  001c4	e59f0038	 ldr         r0, [pc, #0x38]
  001c8	e28d3000	 add         r3, sp, #0
  001cc	e0833086	 add         r3, r3, r6, lsl #1
  001d0	e28d1000	 add         r1, sp, #0
  001d4	e1c3a0b0	 strh        r10, [r3]
  001d8	eb000000	 bl          NKDbgPrintfW

; 956  : 		    {
; 957  : 			    OALLog(L"Cancel \r\n");

  001dc		 |$LN6@BarcodeTes|

; 962  : 	}
; 963  : 	GPIOClrBit(hGPIO, BCR_ENG_PWEN);

  001dc	e3a01026	 mov         r1, #0x26
  001e0	e1a00005	 mov         r0, r5
  001e4	eb000000	 bl          GPIOClrBit

; 964  : 	GPIOClose(hGPIO);

  001e8	e1a00005	 mov         r0, r5
  001ec	eb000000	 bl          GPIOClose
  001f0	e59d0064	 ldr         r0, [sp, #0x64]
  001f4	eb000000	 bl          __security_check_cookie

; 965  : }

  001f8	e28dd068	 add         sp, sp, #0x68
  001fc	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00200	e12fff1e	 bx          lr
  00204		 |$LN31@BarcodeTes|
  00204		 |$LN32@BarcodeTes|
  00204	00000000	 DCD         |??_C@_1O@PBEKMGPM@?$AA?9?$AA?$DO?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00208		 |$LN33@BarcodeTes|
  00208	00000000	 DCD         |??_C@_1BE@NKOCEIML@?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  0020c		 |$LN34@BarcodeTes|
  0020c	00000000	 DCD         |??_C@_1DA@LBDGOOHC@?$AA?$AN?$AA?5?$AAT?$AAh?$AAe?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?8?$AA0?$AA?8?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00210		 |$LN35@BarcodeTes|
  00210	00000000	 DCD         |pUartRegs|
  00214		 |$LN36@BarcodeTes|
  00214	00000000	 DCD         |??_C@_1CG@CDBIFFDJ@?$AAL?$AAE?$AAD?$AA?5?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00218		 |$LN37@BarcodeTes|
  00218	00000000	 DCD         |__security_cookie|
  0021c		 |$M48386|

			 ENDP  ; |BarcodeTest_Z2170P|

	EXPORT	|??_C@_1BM@NMMNENJO@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAA?$AAn?$AAd?$AA?5?$AAM?$AAI?$AAC?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48403| DCD	|$LN5@AudioAndMI|
	DCD	0x40000601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NMMNENJO@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAA?$AAn?$AAd?$AA?5?$AAM?$AAI?$AAC?$AA?$AA@| DCB "A"
	DCB	0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o", 0x0, " ", 0x0, "A"
	DCB	0x0, "n", 0x0, "d", 0x0, " ", 0x0, "M", 0x0, "I", 0x0, "C"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |AudioAndMIC_Z2170P| PROC

; 997  : {

  00000		 |$LN5@AudioAndMI|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48400|

; 998  :     UNREFERENCED_PARAMETER(pMenu);
; 999  : 	OALBLMenuHeader(L"Audio And MIC");	

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          OALBLMenuHeader

; 1000 : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@AudioAndMI|
  00014		 |$LN7@AudioAndMI|
  00014	00000000	 DCD         |??_C@_1BM@NMMNENJO@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAA?$AAn?$AAd?$AA?5?$AAM?$AAI?$AAC?$AA?$AA@|
  00018		 |$M48401|

			 ENDP  ; |AudioAndMIC_Z2170P|

	EXPORT	|clear|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T48417| DCD	|$LN12@clear|
	DCD	0x40001302
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |clear| PROC

; 1008 : {

  00000		 |$LN12@clear|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd068	 sub         sp, sp, #0x68
  00008		 |$M48414|

; 1009 :     int i;
; 1010 :     int keyClear[KEYPAD_SIZE] = {0};

  00008	e3a03000	 mov         r3, #0
  0000c	e3a02064	 mov         r2, #0x64
  00010	e3a01000	 mov         r1, #0
  00014	e28d0004	 add         r0, sp, #4
  00018	e58d3000	 str         r3, [sp]
  0001c	eb000000	 bl          memset

; 1011 :     
; 1012 :     for(i=0; i<KEYPAD_SIZE; i++)
; 1013 :         keyStatus[i] = keyClear[i];

  00020	e59f2020	 ldr         r2, [pc, #0x20]
  00024	e28d1000	 add         r1, sp, #0
  00028	e2820068	 add         r0, r2, #0x68
  0002c		 |$LN8@clear|
  0002c	e4913004	 ldr         r3, [r1], #4
  00030	e4823004	 str         r3, [r2], #4
  00034	e1520000	 cmp         r2, r0
  00038	1afffffb	 bne         |$LN8@clear|

; 1014 : }

  0003c	e28dd068	 add         sp, sp, #0x68
  00040	e49de004	 ldr         lr, [sp], #4
  00044	e12fff1e	 bx          lr
  00048		 |$LN13@clear|
  00048		 |$LN14@clear|
  00048	00000000	 DCD         |keyStatus|
  0004c		 |$M48415|

			 ENDP  ; |clear|

	EXPORT	|KeypadMatrixStatus|

  00000			 AREA	 |.pdata|, PDATA
|$T48430| DCD	|$LN7@KeypadMatr|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |KeypadMatrixStatus| PROC

; 1018 : {

  00000		 |$LN7@KeypadMatr|
  00000		 |$M48427|

; 1019 :     //UINT8   matrix[8];
; 1020 :     int  temp=0;
; 1021 :     BOOL event = FALSE;
; 1022 :     
; 1023 :     temp = gKeypadMatrix[row] & (1<<col);
; 1024 :  
; 1025 :     if(temp)

  00000	e59f3014	 ldr         r3, [pc, #0x14]
  00004	e3a02001	 mov         r2, #1
  00008	e7d03003	 ldrb        r3, [r0, +r3]
  0000c	e1130112	 tst         r3, r2, lsl r1

; 1026 :         return event = TRUE;

  00010	13a00001	 movne       r0, #1

; 1027 :     else
; 1028 :         return event;

  00014	03a00000	 moveq       r0, #0

; 1029 : }

  00018	e12fff1e	 bx          lr
  0001c		 |$LN8@KeypadMatr|
  0001c		 |$LN9@KeypadMatr|
  0001c	00000000	 DCD         |gKeypadMatrix|
  00020		 |$M48428|

			 ENDP  ; |KeypadMatrixStatus|

	EXPORT	|KeypadFuncMatrix|
	EXPORT	|??_C@_1O@JBBNDMAH@?$AA?$FL?$AAS?$AAC?$AAA?$AAN?$AA?$FN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@DONJNFAC@?$AAK?$AAe?$AAy?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AAt?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@HDOIAKCC@?$AA?$FL?$AAT?$AAA?$AAB?$AA?$FN?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@HAOHBPFE@?$AA?$FL?$AAF?$AAN?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@NNDLDEOD@?$AA?$FL?$AAS?$AAP?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@JBIMAKAF@?$AA?$FL?$AAF?$AA4?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@JMJCHKEC@?$AA?$FL?$AAF?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@HHKFMBEB@?$AA?$FL?$AAF?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@DCFMJPNM@?$AA?$FL?$AA?$CL?$AA?9?$AA?$CK?$AA?1?$AA?$FN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@KFHFLLAI@?$AA?$FL?$AA?4?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@EAFMIFOK@?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@NNPFLPHL@?$AA?$FL?$AA9?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@DEMEGMGF@?$AA?$FL?$AA7?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@KPGBCAAK@?$AA?$FL?$AA6?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@NIPPPCPK@?$AA?$FL?$AA5?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@EDFKLOJF@?$AA?$FL?$AA4?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@DHMCFHBK@?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@KMGHBLHF@?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@NLPJMJIF@?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@IEDFHHHN@?$AA?$FL?$AAR?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@EJHFOAFG@?$AA?$FL?$AAD?$AAO?$AAW?$AAN?$AA?$FN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@DCAGJBAD@?$AA?$FL?$AAU?$AAP?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@GBBMEJJP@?$AA?$FL?$AAL?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@KBLBCOHD@?$AA?$FL?$AAB?$AAS?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@BDAJLGKP@?$AA?$FL?$AAE?$AAS?$AAC?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@MHIJACAE@?$AA?$FL?$AAE?$AAN?$AAT?$AAR?$AA?$FN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@POFFGBOP@?$AA?$FL?$AAE?$AAN?$AAT?$AAL?$AA?$FN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@ODGGFLH@?$AA?5?$AAH?$AAo?$AAt?$AAK?$AAe?$AAy?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13CMNBPIDO@?$AA?$AN?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|TWLReadRegs|
	IMPORT	|ghTwl|

  00000			 AREA	 |.pdata|, PDATA
|$T48708| DCD	|$LN223@KeypadFunc|
	DCD	0x40011b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@JBBNDMAH@?$AA?$FL?$AAS?$AAC?$AAA?$AAN?$AA?$FN?$AA?$AA@| DCB "[", 0x0
	DCB	"S", 0x0, "C", 0x0, "A", 0x0, "N", 0x0, "]", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@DONJNFAC@?$AAK?$AAe?$AAy?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AAt?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "K"
	DCB	0x0, "e", 0x0, "y", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "e"
	DCB	0x0, "s", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "g", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@HDOIAKCC@?$AA?$FL?$AAT?$AAA?$AAB?$AA?$FN?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "T", 0x0, "A", 0x0, "B", 0x0, "]", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@HAOHBPFE@?$AA?$FL?$AAF?$AAN?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "F", 0x0, "N", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NNDLDEOD@?$AA?$FL?$AAS?$AAP?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "S", 0x0, "P", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@JBIMAKAF@?$AA?$FL?$AAF?$AA4?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "F", 0x0, "4", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@JMJCHKEC@?$AA?$FL?$AAF?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "F", 0x0, "2", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@HHKFMBEB@?$AA?$FL?$AAF?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "F", 0x0, "1", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DCFMJPNM@?$AA?$FL?$AA?$CL?$AA?9?$AA?$CK?$AA?1?$AA?$FN?$AA?$AA@| DCB "["
	DCB	0x0, "+", 0x0, "-", 0x0, "*", 0x0, "/", 0x0, "]", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@KFHFLLAI@?$AA?$FL?$AA?4?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, ".", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@EAFMIFOK@?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "0", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NNPFLPHL@?$AA?$FL?$AA9?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "9", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DEMEGMGF@?$AA?$FL?$AA7?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "7", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@KPGBCAAK@?$AA?$FL?$AA6?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "6", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NIPPPCPK@?$AA?$FL?$AA5?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "5", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@EDFKLOJF@?$AA?$FL?$AA4?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "4", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DHMCFHBK@?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "3", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@KMGHBLHF@?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "2", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NLPJMJIF@?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "1", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@IEDFHHHN@?$AA?$FL?$AAR?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "R", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@EJHFOAFG@?$AA?$FL?$AAD?$AAO?$AAW?$AAN?$AA?$FN?$AA?$AA@| DCB "[", 0x0
	DCB	"D", 0x0, "O", 0x0, "W", 0x0, "N", 0x0, "]", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DCAGJBAD@?$AA?$FL?$AAU?$AAP?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "U", 0x0, "P", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@GBBMEJJP@?$AA?$FL?$AAL?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "L", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@KBLBCOHD@?$AA?$FL?$AAB?$AAS?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "B", 0x0, "S", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@BDAJLGKP@?$AA?$FL?$AAE?$AAS?$AAC?$AA?$FN?$AA?5?$AA?5?$AA?$AA@| DCB "["
	DCB	0x0, "E", 0x0, "S", 0x0, "C", 0x0, "]", 0x0, " ", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@MHIJACAE@?$AA?$FL?$AAE?$AAN?$AAT?$AAR?$AA?$FN?$AA?$AA@| DCB "[", 0x0
	DCB	"E", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "]", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@POFFGBOP@?$AA?$FL?$AAE?$AAN?$AAT?$AAL?$AA?$FN?$AA?$AA@| DCB "[", 0x0
	DCB	"E", 0x0, "N", 0x0, "T", 0x0, "L", 0x0, "]", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@ODGGFLH@?$AA?5?$AAH?$AAo?$AAt?$AAK?$AAe?$AAy?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "H", 0x0, "o", 0x0, "t", 0x0, "K", 0x0, "e", 0x0, "y"
	DCB	0x0, "F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "[", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, "%", 0x0, "d", 0x0, "]", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13CMNBPIDO@?$AA?$AN?$AA?$AA@| DCB 0xd, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |KeypadFuncMatrix| PROC

; 1033 : {

  00000		 |$LN223@KeypadFunc|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd068	 sub         sp, sp, #0x68
  00008		 |$M48705|
  00008	e59f4458	 ldr         r4, [pc, #0x458]
  0000c	e59f5450	 ldr         r5, [pc, #0x450]
  00010	e3a070db	 mov         r7, #0xDB
  00014	e3a06001	 mov         r6, #1
  00018		 |$LL67@KeypadFunc|

; 1034 :     ULONG   ik, ix, row, column;
; 1035 :     USHORT  state;
; 1036 :     int     k, entry;
; 1037 :     BOOL    press = FALSE;
; 1038 :     
; 1039 :     /*static int  ENTL=0, SCAN=0, ENTR=0, ESC=0, BS=0, L=0,
; 1040 :                 U=0, D=0, R=0, ONE=0, TWO=0, THREE=0, 
; 1041 :                 FOUR=0, FIVE=0, SIX=0, SEVEN=0, NINE=0, ZERO=0,
; 1042 :                 DOT=0, PLUS=0, F1=0, F2=0, F4=0, SP=0, FN=0, TAB=0;*/
; 1043 :     
; 1044 :     //BOOL    ENTL=FALSE, SCAN=FALSE, ENTR=FALSE, ESC=FALSE;
; 1045 :                  
; 1046 :     //printing matrix array, Ray
; 1047 :     for(;;){
; 1048 :         //for(ik=0; ik<3; ik++)
; 1049 :         //{
; 1050 :         TWLReadRegs(ghTwl, TWL_LOGADDR_FULL_CODE_7_0, gKeypadMatrix, sizeof(gKeypadMatrix));  //Stand by read value, Ray 140103   

  00018	e5940000	 ldr         r0, [r4]
  0001c	e3a03008	 mov         r3, #8
  00020	e1a02005	 mov         r2, r5
  00024	e24718fe	 sub         r1, r7, #0xFE, 16
  00028	eb000000	 bl          TWLReadRegs

; 1051 :         //OALLog(L" %d\r\n",sizeof(gKeypadMatrix));         //8
; 1052 :         
; 1053 :         /*OALLog(L" HotKeyFunction: matrix  ");
; 1054 :             for(ix=0; ix<8; ix++)
; 1055 :                  OALLog(L"[%d]", matrix[ix]);
; 1056 :             OALLog(L"\r\n");      
; 1057 :         }*/
; 1058 :         for(row=0, ik=0; row<8; row++)

  0002c	e3a01000	 mov         r1, #0
  00030	e3a03000	 mov         r3, #0
  00034		 |$LL65@KeypadFunc|

; 1059 :         {
; 1060 :             // Get matrix state 
; 1061 :             ix = row;
; 1062 :             state = gKeypadMatrix[ix] & 0xFF;     

  00034	e7d10005	 ldrb        r0, [r1, +r5]

; 1063 : 
; 1064 :             // If no-key is pressed continue with new rows
; 1065 :             if(state == 0)

  00038	e3500000	 cmp         r0, #0

; 1066 :             {
; 1067 :                 ik += 8;

  0003c	02833008	 addeq       r3, r3, #8
  00040	0a000006	 beq         |$LN64@KeypadFunc|

; 1068 :                 continue;           //if state event desnot 
; 1069 :             }
; 1070 :             
; 1071 :             for(column=0; column<8; column++, ik++)

  00044	e3a02000	 mov         r2, #0
  00048		 |$LL61@KeypadFunc|

; 1072 :             {
; 1073 :                 if((state & (1<<column)) !=0 ){

  00048	e1100216	 tst         r0, r6, lsl r2
  0004c	1a000007	 bne         |$LN189@KeypadFunc|
  00050	e2822001	 add         r2, r2, #1
  00054	e3520008	 cmp         r2, #8
  00058	e2833001	 add         r3, r3, #1
  0005c	3afffff9	 bcc         |$LL61@KeypadFunc|
  00060		 |$LN64@KeypadFunc|

; 1051 :         //OALLog(L" %d\r\n",sizeof(gKeypadMatrix));         //8
; 1052 :         
; 1053 :         /*OALLog(L" HotKeyFunction: matrix  ");
; 1054 :             for(ix=0; ix<8; ix++)
; 1055 :                  OALLog(L"[%d]", matrix[ix]);
; 1056 :             OALLog(L"\r\n");      
; 1057 :         }*/
; 1058 :         for(row=0, ik=0; row<8; row++)

  00060	e2811001	 add         r1, r1, #1
  00064	e3510008	 cmp         r1, #8
  00068	3afffff1	 bcc         |$LL65@KeypadFunc|

; 1076 :                     goto status;
; 1077 :                 }
; 1078 :             }
; 1079 :         }
; 1080 :     }   

  0006c	eaffffe9	 b           |$LL67@KeypadFunc|
  00070		 |$LN189@KeypadFunc|

; 1074 :                     //RETAILMSG(TRUE, (L" HotKeyFunction: [%d,%d]\r\n",row ,column));
; 1075 :                     OALLog(L" HotKeyFunction: [%d,%d]\r\n",row ,column);

  00070	e59f03e8	 ldr         r0, [pc, #0x3E8]
  00074	eb000000	 bl          NKDbgPrintfW

; 1081 : status:
; 1082 :         OALLog(L"\r");

  00078	e59f03dc	 ldr         r0, [pc, #0x3DC]
  0007c		 |$status$47768|
  0007c	eb000000	 bl          NKDbgPrintfW
  00080	e5d52000	 ldrb        r2, [r5]

; 1083 :         if(KeypadMatrixStatus(0, 5)){

  00084	e59f43cc	 ldr         r4, [pc, #0x3CC]
  00088	e3120020	 tst         r2, #0x20
  0008c	0a000004	 beq         |$LN57@KeypadFunc|

; 1084 :             OALLog(L"[ENTL]");

  00090	e59f03bc	 ldr         r0, [pc, #0x3BC]
  00094	eb000000	 bl          NKDbgPrintfW

; 1085 :             keyStatus[0]=1;

  00098	e3a03001	 mov         r3, #1
  0009c	e5843000	 str         r3, [r4]
  000a0	ea0000b6	 b           |$LN5@KeypadFunc|
  000a4		 |$LN57@KeypadFunc|
  000a4	e5d53001	 ldrb        r3, [r5, #1]

; 1086 :             //ENTL = 1;
; 1087 :         }else if( KeypadMatrixStatus(1, 4)|| KeypadMatrixStatus(0, 3)){

  000a8	e3130010	 tst         r3, #0x10
  000ac	1a0000af	 bne         |$LN54@KeypadFunc|
  000b0	e3120008	 tst         r2, #8
  000b4	1a0000ad	 bne         |$LN54@KeypadFunc|

; 1090 :             //SCAN = 1;
; 1091 :         }else if( KeypadMatrixStatus(0, 1)){

  000b8	e3120002	 tst         r2, #2
  000bc	0a000004	 beq         |$LN52@KeypadFunc|

; 1092 :             OALLog(L"[ENTR]");

  000c0	e59f0388	 ldr         r0, [pc, #0x388]
  000c4	eb000000	 bl          NKDbgPrintfW

; 1093 :             keyStatus[2]=1;

  000c8	e3a03001	 mov         r3, #1
  000cc	e5843008	 str         r3, [r4, #8]
  000d0	ea0000aa	 b           |$LN5@KeypadFunc|
  000d4		 |$LN52@KeypadFunc|

; 1094 :             //ENTR = 1;
; 1095 :         }else if( KeypadMatrixStatus(1, 5)){

  000d4	e3130020	 tst         r3, #0x20
  000d8	0a000004	 beq         |$LN50@KeypadFunc|

; 1096 :             OALLog(L"[ESC]  ");

  000dc	e59f0368	 ldr         r0, [pc, #0x368]
  000e0	eb000000	 bl          NKDbgPrintfW

; 1097 :             keyStatus[3]=1;

  000e4	e3a03001	 mov         r3, #1
  000e8	e584300c	 str         r3, [r4, #0xC]

; 1098 :            //ESC = 1;
; 1099 :         }/*else if( KeypadMatrixStatus(0, 1)){

  000ec	ea0000a3	 b           |$LN5@KeypadFunc|
  000f0		 |$LN50@KeypadFunc|

; 1100 :             OALLog(L"[SCAN] ");
; 1101 :         }*/else if( KeypadMatrixStatus(0, 2)){

  000f0	e3120004	 tst         r2, #4
  000f4	0a000004	 beq         |$LN48@KeypadFunc|

; 1102 :             OALLog(L"[BS]  ");

  000f8	e59f0348	 ldr         r0, [pc, #0x348]
  000fc	eb000000	 bl          NKDbgPrintfW

; 1103 :             keyStatus[4]=1;

  00100	e3a03001	 mov         r3, #1
  00104	e5843010	 str         r3, [r4, #0x10]
  00108	ea00009c	 b           |$LN5@KeypadFunc|
  0010c		 |$LN48@KeypadFunc|

; 1104 :             //BS = 1;
; 1105 :         }else if( KeypadMatrixStatus(1, 3)){

  0010c	e3130008	 tst         r3, #8
  00110	0a000004	 beq         |$LN46@KeypadFunc|

; 1106 :             OALLog(L"[L]   ");

  00114	e59f0328	 ldr         r0, [pc, #0x328]
  00118	eb000000	 bl          NKDbgPrintfW

; 1107 :             keyStatus[5]=1;

  0011c	e3a03001	 mov         r3, #1
  00120	e5843014	 str         r3, [r4, #0x14]
  00124	ea000095	 b           |$LN5@KeypadFunc|
  00128		 |$LN46@KeypadFunc|

; 1108 :             //L = 1;
; 1109 :         }else if( KeypadMatrixStatus(1, 2)){

  00128	e3130004	 tst         r3, #4
  0012c	0a000004	 beq         |$LN44@KeypadFunc|

; 1110 :             OALLog(L"[UP]  ");

  00130	e59f0308	 ldr         r0, [pc, #0x308]
  00134	eb000000	 bl          NKDbgPrintfW

; 1111 :             keyStatus[6]=1;

  00138	e3a03001	 mov         r3, #1
  0013c	e5843018	 str         r3, [r4, #0x18]
  00140	ea00008e	 b           |$LN5@KeypadFunc|
  00144		 |$LN44@KeypadFunc|
  00144	e5d52002	 ldrb        r2, [r5, #2]

; 1112 :             //U = 1;
; 1113 :         }else if( KeypadMatrixStatus(2, 4)){

  00148	e3120010	 tst         r2, #0x10
  0014c	0a000004	 beq         |$LN42@KeypadFunc|

; 1114 :             OALLog(L"[DOWN]");

  00150	e59f02e4	 ldr         r0, [pc, #0x2E4]
  00154	eb000000	 bl          NKDbgPrintfW

; 1115 :             keyStatus[7]=1;

  00158	e3a03001	 mov         r3, #1
  0015c	e584301c	 str         r3, [r4, #0x1C]
  00160	ea000086	 b           |$LN5@KeypadFunc|
  00164		 |$LN42@KeypadFunc|

; 1116 :             //D = 1;
; 1117 :         }else if( KeypadMatrixStatus(1, 0)){

  00164	e3130001	 tst         r3, #1
  00168	0a000004	 beq         |$LN40@KeypadFunc|

; 1118 :             OALLog(L"[R]   ");

  0016c	e59f02c4	 ldr         r0, [pc, #0x2C4]
  00170	eb000000	 bl          NKDbgPrintfW

; 1119 :             keyStatus[8]=1;

  00174	e3a03001	 mov         r3, #1
  00178	e5843020	 str         r3, [r4, #0x20]
  0017c	ea00007f	 b           |$LN5@KeypadFunc|
  00180		 |$LN40@KeypadFunc|

; 1120 :             //R = 1;
; 1121 :         }else if( KeypadMatrixStatus(2, 3)){

  00180	e3120008	 tst         r2, #8
  00184	0a000004	 beq         |$LN38@KeypadFunc|

; 1122 :             OALLog(L"[1]   ");

  00188	e59f02a4	 ldr         r0, [pc, #0x2A4]
  0018c	eb000000	 bl          NKDbgPrintfW

; 1123 :             keyStatus[9]=1;

  00190	e3a03001	 mov         r3, #1
  00194	e5843024	 str         r3, [r4, #0x24]
  00198	ea000078	 b           |$LN5@KeypadFunc|
  0019c		 |$LN38@KeypadFunc|

; 1124 :             //ONE = 1;
; 1125 :         }else if( KeypadMatrixStatus(2, 5)){

  0019c	e3120020	 tst         r2, #0x20
  001a0	0a000004	 beq         |$LN36@KeypadFunc|

; 1126 :             OALLog(L"[2]   ");

  001a4	e59f0284	 ldr         r0, [pc, #0x284]
  001a8	eb000000	 bl          NKDbgPrintfW

; 1127 :             keyStatus[10]=1;

  001ac	e3a03001	 mov         r3, #1
  001b0	e5843028	 str         r3, [r4, #0x28]
  001b4	ea000071	 b           |$LN5@KeypadFunc|
  001b8		 |$LN36@KeypadFunc|

; 1128 :             //TWO = 1;
; 1129 :         }else if( KeypadMatrixStatus(1, 1)){

  001b8	e3130002	 tst         r3, #2
  001bc	0a000004	 beq         |$LN34@KeypadFunc|

; 1130 :             OALLog(L"[3]   ");

  001c0	e59f0264	 ldr         r0, [pc, #0x264]
  001c4	eb000000	 bl          NKDbgPrintfW

; 1131 :             keyStatus[11]=1;

  001c8	e3a03001	 mov         r3, #1
  001cc	e584302c	 str         r3, [r4, #0x2C]
  001d0	ea00006a	 b           |$LN5@KeypadFunc|
  001d4		 |$LN34@KeypadFunc|
  001d4	e5d53003	 ldrb        r3, [r5, #3]

; 1132 :             //THREE = 1;
; 1133 :         }else if( KeypadMatrixStatus(3, 3)){

  001d8	e3130008	 tst         r3, #8
  001dc	0a000004	 beq         |$LN32@KeypadFunc|

; 1134 :             OALLog(L"[4]   ");

  001e0	e59f0240	 ldr         r0, [pc, #0x240]
  001e4	eb000000	 bl          NKDbgPrintfW

; 1135 :             keyStatus[12]=1;

  001e8	e3a03001	 mov         r3, #1
  001ec	e5843030	 str         r3, [r4, #0x30]
  001f0	ea000062	 b           |$LN5@KeypadFunc|
  001f4		 |$LN32@KeypadFunc|

; 1136 :             //FOUR = 1;
; 1137 :         }else if( KeypadMatrixStatus(2, 2)){

  001f4	e3120004	 tst         r2, #4
  001f8	0a000004	 beq         |$LN30@KeypadFunc|

; 1138 :             OALLog(L"[5]   ");

  001fc	e59f0220	 ldr         r0, [pc, #0x220]
  00200	eb000000	 bl          NKDbgPrintfW

; 1139 :             keyStatus[13]=1;

  00204	e3a03001	 mov         r3, #1
  00208	e5843034	 str         r3, [r4, #0x34]
  0020c	ea00005b	 b           |$LN5@KeypadFunc|
  00210		 |$LN30@KeypadFunc|

; 1140 :             //FIVE = 1;
; 1141 :         }else if( KeypadMatrixStatus(2, 1)){

  00210	e3120002	 tst         r2, #2
  00214	0a000004	 beq         |$LN28@KeypadFunc|

; 1142 :             OALLog(L"[6]   ");

  00218	e59f0200	 ldr         r0, [pc, #0x200]
  0021c	eb000000	 bl          NKDbgPrintfW

; 1143 :             keyStatus[14]=1;

  00220	e3a03001	 mov         r3, #1
  00224	e5843038	 str         r3, [r4, #0x38]
  00228	ea000054	 b           |$LN5@KeypadFunc|
  0022c		 |$LN28@KeypadFunc|

; 1144 :             //SIX = 1;
; 1145 :         }else if( KeypadMatrixStatus(3, 5)){

  0022c	e3130020	 tst         r3, #0x20
  00230	0a000004	 beq         |$LN26@KeypadFunc|

; 1146 :             OALLog(L"[7]   ");

  00234	e59f01e0	 ldr         r0, [pc, #0x1E0]
  00238	eb000000	 bl          NKDbgPrintfW

; 1147 :             keyStatus[15]=1;

  0023c	e3a03001	 mov         r3, #1
  00240	e584303c	 str         r3, [r4, #0x3C]
  00244	ea00004d	 b           |$LN5@KeypadFunc|
  00248		 |$LN26@KeypadFunc|

; 1148 :             //SEVEN = 1;
; 1149 :         }/*else if( KeypadMatrixStatus(?, ?))
; 1150 :             OALLog(L"\r[8] ");
; 1151 :             EIGHT = 1;*/
; 1152 :         else if( KeypadMatrixStatus(2, 0)){

  00248	e3120001	 tst         r2, #1
  0024c	0a000004	 beq         |$LN24@KeypadFunc|

; 1153 :             OALLog(L"[9]   ");

  00250	e59f01c0	 ldr         r0, [pc, #0x1C0]
  00254	eb000000	 bl          NKDbgPrintfW

; 1154 :             keyStatus[16]=1;

  00258	e3a03001	 mov         r3, #1
  0025c	e5843040	 str         r3, [r4, #0x40]
  00260	ea000046	 b           |$LN5@KeypadFunc|
  00264		 |$LN24@KeypadFunc|

; 1155 :             //NINE = 1;
; 1156 :         }else if( KeypadMatrixStatus(3, 4)){

  00264	e3130010	 tst         r3, #0x10
  00268	0a000004	 beq         |$LN22@KeypadFunc|

; 1157 :             OALLog(L"[0]   ");

  0026c	e59f01a0	 ldr         r0, [pc, #0x1A0]
  00270	eb000000	 bl          NKDbgPrintfW

; 1158 :             keyStatus[17]=1;

  00274	e3a03001	 mov         r3, #1
  00278	e5843044	 str         r3, [r4, #0x44]
  0027c	ea00003f	 b           |$LN5@KeypadFunc|
  00280		 |$LN22@KeypadFunc|

; 1159 :             //ZERO = 1;
; 1160 :         }else if( KeypadMatrixStatus(3, 0)){

  00280	e3130001	 tst         r3, #1
  00284	0a000004	 beq         |$LN20@KeypadFunc|

; 1161 :             OALLog(L"[.]   ");

  00288	e59f0180	 ldr         r0, [pc, #0x180]
  0028c	eb000000	 bl          NKDbgPrintfW

; 1162 :             keyStatus[18]=1;

  00290	e3a03001	 mov         r3, #1
  00294	e5843048	 str         r3, [r4, #0x48]
  00298	ea000038	 b           |$LN5@KeypadFunc|
  0029c		 |$LN20@KeypadFunc|
  0029c	e5d52004	 ldrb        r2, [r5, #4]

; 1163 :             //DOT = 1;
; 1164 :         }else if( KeypadMatrixStatus(4, 1)){

  002a0	e3120002	 tst         r2, #2
  002a4	0a000004	 beq         |$LN18@KeypadFunc|

; 1165 :             OALLog(L"[+-*/]");

  002a8	e59f015c	 ldr         r0, [pc, #0x15C]
  002ac	eb000000	 bl          NKDbgPrintfW

; 1166 :             keyStatus[19]=1;

  002b0	e3a03001	 mov         r3, #1
  002b4	e584304c	 str         r3, [r4, #0x4C]
  002b8	ea000030	 b           |$LN5@KeypadFunc|
  002bc		 |$LN18@KeypadFunc|

; 1167 :             //PLUS = 1;
; 1168 :         }else if( KeypadMatrixStatus(3, 2)){

  002bc	e3130004	 tst         r3, #4
  002c0	0a000004	 beq         |$LN16@KeypadFunc|

; 1169 :             OALLog(L"[F1]  ");

  002c4	e59f013c	 ldr         r0, [pc, #0x13C]
  002c8	eb000000	 bl          NKDbgPrintfW

; 1170 :             keyStatus[20]=1;

  002cc	e3a03001	 mov         r3, #1
  002d0	e5843050	 str         r3, [r4, #0x50]
  002d4	ea000029	 b           |$LN5@KeypadFunc|
  002d8		 |$LN16@KeypadFunc|

; 1171 :             //F1 = 1;
; 1172 :         }else if( KeypadMatrixStatus(4, 3)){

  002d8	e3120008	 tst         r2, #8
  002dc	0a000004	 beq         |$LN14@KeypadFunc|

; 1173 :             OALLog(L"[F2]  ");

  002e0	e59f011c	 ldr         r0, [pc, #0x11C]
  002e4	eb000000	 bl          NKDbgPrintfW

; 1174 :             keyStatus[21]=1;

  002e8	e3a03001	 mov         r3, #1
  002ec	e5843054	 str         r3, [r4, #0x54]

; 1175 :             //F2 = 1;
; 1176 :         }/*else if( KeypadMatrixStatus(?, ?)){

  002f0	ea000022	 b           |$LN5@KeypadFunc|
  002f4		 |$LN14@KeypadFunc|

; 1177 :             OALLog(L"\r[F3] ");
; 1178 :             F3 = 1;
; 1179 :         }*/else if( KeypadMatrixStatus(3, 1)){

  002f4	e3130002	 tst         r3, #2
  002f8	0a000004	 beq         |$LN12@KeypadFunc|

; 1180 :             OALLog(L"[F4]  ");

  002fc	e59f00fc	 ldr         r0, [pc, #0xFC]
  00300	eb000000	 bl          NKDbgPrintfW

; 1181 :             keyStatus[22]=1;

  00304	e3a03001	 mov         r3, #1
  00308	e5843058	 str         r3, [r4, #0x58]
  0030c	ea00001b	 b           |$LN5@KeypadFunc|
  00310		 |$LN12@KeypadFunc|

; 1182 :             //F4 = 1;
; 1183 :         }else if( KeypadMatrixStatus(4, 2)){

  00310	e3120004	 tst         r2, #4
  00314	0a000004	 beq         |$LN10@KeypadFunc|

; 1184 :             OALLog(L"[SP]  ");

  00318	e59f00dc	 ldr         r0, [pc, #0xDC]
  0031c	eb000000	 bl          NKDbgPrintfW

; 1185 :             keyStatus[23]=1;

  00320	e3a03001	 mov         r3, #1
  00324	e584305c	 str         r3, [r4, #0x5C]
  00328	ea000014	 b           |$LN5@KeypadFunc|
  0032c		 |$LN10@KeypadFunc|

; 1186 :             //SP = 1;
; 1187 :         }else if( KeypadMatrixStatus(4, 4)){

  0032c	e3120010	 tst         r2, #0x10
  00330	0a000004	 beq         |$LN8@KeypadFunc|

; 1188 :             OALLog(L"[FN]  ");

  00334	e59f00bc	 ldr         r0, [pc, #0xBC]
  00338	eb000000	 bl          NKDbgPrintfW

; 1189 :             keyStatus[24]=1;

  0033c	e3a03001	 mov         r3, #1
  00340	e5843060	 str         r3, [r4, #0x60]
  00344	ea00000d	 b           |$LN5@KeypadFunc|
  00348		 |$LN8@KeypadFunc|

; 1190 :             //FN = 1;
; 1191 :         }else if( KeypadMatrixStatus(4, 5)){

  00348	e3120020	 tst         r2, #0x20
  0034c	0a000004	 beq         |$LN6@KeypadFunc|

; 1192 :             OALLog(L"[TAB] ");

  00350	e59f009c	 ldr         r0, [pc, #0x9C]
  00354	eb000000	 bl          NKDbgPrintfW

; 1193 :             keyStatus[25]=1;

  00358	e3a03001	 mov         r3, #1
  0035c	e5843064	 str         r3, [r4, #0x64]

; 1194 :             //TAB = 1;
; 1195 :         }else{

  00360	ea000006	 b           |$LN5@KeypadFunc|
  00364		 |$LN6@KeypadFunc|

; 1196 :             OALLog(L"Key doesnt range\r\n");

  00364	e59f0084	 ldr         r0, [pc, #0x84]
  00368	eb000000	 bl          NKDbgPrintfW
  0036c	ea000003	 b           |$LN5@KeypadFunc|
  00370		 |$LN54@KeypadFunc|

; 1088 :             OALLog(L"[SCAN]");

  00370	e59f0074	 ldr         r0, [pc, #0x74]
  00374	eb000000	 bl          NKDbgPrintfW

; 1089 :             keyStatus[1]=1;

  00378	e3a03001	 mov         r3, #1
  0037c	e5843004	 str         r3, [r4, #4]
  00380		 |$LN5@KeypadFunc|

; 1197 :         }
; 1198 : 
; 1199 :         /*OALLog(L"%d\n",keyStatus[0]);
; 1200 :         OALLog(L"%d\n",*(keyStatus+1));
; 1201 :         OALLog(L"%d\n",*(keyStatus+2));
; 1202 :         OALLog(L"%d\n",*(keyStatus+3));*/
; 1203 :         
; 1204 :         for(k=0, entry=1; k<KEYPAD_SIZE; k++){

  00380	e3a02001	 mov         r2, #1
  00384	e1a01004	 mov         r1, r4
  00388	e3a0001a	 mov         r0, #0x1A
  0038c		 |$LL4@KeypadFunc|

; 1205 :             entry &= keyStatus[k];

  0038c	e4913004	 ldr         r3, [r1], #4
  00390	e2500001	 subs        r0, r0, #1
  00394	e0032002	 and         r2, r3, r2
  00398	1afffffb	 bne         |$LL4@KeypadFunc|

; 1206 :         }
; 1207 :         
; 1208 :         //ENTL && SCAN && ENTR && ESC;/* && BS && L && U && D && R*/
; 1209 :         if(entry){

  0039c	e3520000	 cmp         r2, #0
  003a0	0a00000d	 beq         |$LN1@KeypadFunc|

; 1210 :             clear();

  003a4	e3a03000	 mov         r3, #0
  003a8	e3a02064	 mov         r2, #0x64
  003ac	e3a01000	 mov         r1, #0
  003b0	e28d0004	 add         r0, sp, #4
  003b4	e58d3000	 str         r3, [sp]
  003b8	eb000000	 bl          memset
  003bc	e28d2000	 add         r2, sp, #0
  003c0	e2841068	 add         r1, r4, #0x68
  003c4		 |$LN219@KeypadFunc|
  003c4	e4923004	 ldr         r3, [r2], #4
  003c8	e4843004	 str         r3, [r4], #4
  003cc	e1540001	 cmp         r4, r1
  003d0	1afffffb	 bne         |$LN219@KeypadFunc|

; 1211 :             return press = TRUE;

  003d4	e3a00001	 mov         r0, #1
  003d8	ea000000	 b           |$LN68@KeypadFunc|
  003dc		 |$LN1@KeypadFunc|

; 1212 :         }
; 1213 : 
; 1214 :     return press;

  003dc	e3a00000	 mov         r0, #0
  003e0		 |$LN68@KeypadFunc|

; 1215 : }

  003e0	e28dd068	 add         sp, sp, #0x68
  003e4	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  003e8	e12fff1e	 bx          lr
  003ec		 |$LN224@KeypadFunc|
  003ec		 |$LN225@KeypadFunc|
  003ec	00000000	 DCD         |??_C@_1O@JBBNDMAH@?$AA?$FL?$AAS?$AAC?$AAA?$AAN?$AA?$FN?$AA?$AA@|
  003f0		 |$LN226@KeypadFunc|
  003f0	00000000	 DCD         |??_C@_1CG@DONJNFAC@?$AAK?$AAe?$AAy?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AAt?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  003f4		 |$LN227@KeypadFunc|
  003f4	00000000	 DCD         |??_C@_1O@HDOIAKCC@?$AA?$FL?$AAT?$AAA?$AAB?$AA?$FN?$AA?5?$AA?$AA@|
  003f8		 |$LN228@KeypadFunc|
  003f8	00000000	 DCD         |??_C@_1O@HAOHBPFE@?$AA?$FL?$AAF?$AAN?$AA?$FN?$AA?5?$AA?5?$AA?$AA@|
  003fc		 |$LN229@KeypadFunc|
  003fc	00000000	 DCD         |??_C@_1O@NNDLDEOD@?$AA?$FL?$AAS?$AAP?$AA?$FN?$AA?5?$AA?5?$AA?$AA@|
  00400		 |$LN230@KeypadFunc|
  00400	00000000	 DCD         |??_C@_1O@JBIMAKAF@?$AA?$FL?$AAF?$AA4?$AA?$FN?$AA?5?$AA?5?$AA?$AA@|
  00404		 |$LN231@KeypadFunc|
  00404	00000000	 DCD         |??_C@_1O@JMJCHKEC@?$AA?$FL?$AAF?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?$AA@|
  00408		 |$LN232@KeypadFunc|
  00408	00000000	 DCD         |??_C@_1O@HHKFMBEB@?$AA?$FL?$AAF?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?$AA@|
  0040c		 |$LN233@KeypadFunc|
  0040c	00000000	 DCD         |??_C@_1O@DCFMJPNM@?$AA?$FL?$AA?$CL?$AA?9?$AA?$CK?$AA?1?$AA?$FN?$AA?$AA@|
  00410		 |$LN234@KeypadFunc|
  00410	00000000	 DCD         |??_C@_1O@KFHFLLAI@?$AA?$FL?$AA?4?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00414		 |$LN235@KeypadFunc|
  00414	00000000	 DCD         |??_C@_1O@EAFMIFOK@?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00418		 |$LN236@KeypadFunc|
  00418	00000000	 DCD         |??_C@_1O@NNPFLPHL@?$AA?$FL?$AA9?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  0041c		 |$LN237@KeypadFunc|
  0041c	00000000	 DCD         |??_C@_1O@DEMEGMGF@?$AA?$FL?$AA7?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00420		 |$LN238@KeypadFunc|
  00420	00000000	 DCD         |??_C@_1O@KPGBCAAK@?$AA?$FL?$AA6?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00424		 |$LN239@KeypadFunc|
  00424	00000000	 DCD         |??_C@_1O@NIPPPCPK@?$AA?$FL?$AA5?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00428		 |$LN240@KeypadFunc|
  00428	00000000	 DCD         |??_C@_1O@EDFKLOJF@?$AA?$FL?$AA4?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  0042c		 |$LN241@KeypadFunc|
  0042c	00000000	 DCD         |??_C@_1O@DHMCFHBK@?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00430		 |$LN242@KeypadFunc|
  00430	00000000	 DCD         |??_C@_1O@KMGHBLHF@?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00434		 |$LN243@KeypadFunc|
  00434	00000000	 DCD         |??_C@_1O@NLPJMJIF@?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00438		 |$LN244@KeypadFunc|
  00438	00000000	 DCD         |??_C@_1O@IEDFHHHN@?$AA?$FL?$AAR?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  0043c		 |$LN245@KeypadFunc|
  0043c	00000000	 DCD         |??_C@_1O@EJHFOAFG@?$AA?$FL?$AAD?$AAO?$AAW?$AAN?$AA?$FN?$AA?$AA@|
  00440		 |$LN246@KeypadFunc|
  00440	00000000	 DCD         |??_C@_1O@DCAGJBAD@?$AA?$FL?$AAU?$AAP?$AA?$FN?$AA?5?$AA?5?$AA?$AA@|
  00444		 |$LN247@KeypadFunc|
  00444	00000000	 DCD         |??_C@_1O@GBBMEJJP@?$AA?$FL?$AAL?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  00448		 |$LN248@KeypadFunc|
  00448	00000000	 DCD         |??_C@_1O@KBLBCOHD@?$AA?$FL?$AAB?$AAS?$AA?$FN?$AA?5?$AA?5?$AA?$AA@|
  0044c		 |$LN249@KeypadFunc|
  0044c	00000000	 DCD         |??_C@_1BA@BDAJLGKP@?$AA?$FL?$AAE?$AAS?$AAC?$AA?$FN?$AA?5?$AA?5?$AA?$AA@|
  00450		 |$LN250@KeypadFunc|
  00450	00000000	 DCD         |??_C@_1O@MHIJACAE@?$AA?$FL?$AAE?$AAN?$AAT?$AAR?$AA?$FN?$AA?$AA@|
  00454		 |$LN251@KeypadFunc|
  00454	00000000	 DCD         |??_C@_1O@POFFGBOP@?$AA?$FL?$AAE?$AAN?$AAT?$AAL?$AA?$FN?$AA?$AA@|
  00458		 |$LN252@KeypadFunc|
  00458	00000000	 DCD         |keyStatus|
  0045c		 |$LN253@KeypadFunc|
  0045c	00000000	 DCD         |??_C@_13CMNBPIDO@?$AA?$AN?$AA?$AA@|
  00460		 |$LN254@KeypadFunc|
  00460	00000000	 DCD         |??_C@_1DG@ODGGFLH@?$AA?5?$AAH?$AAo?$AAt?$AAK?$AAe?$AAy?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  00464		 |$LN255@KeypadFunc|
  00464	00000000	 DCD         |gKeypadMatrix|
  00468		 |$LN256@KeypadFunc|
  00468	00000000	 DCD         |ghTwl|
  0046c		 |$M48706|

			 ENDP  ; |KeypadFuncMatrix|

	EXPORT	|??_C@_13LBAGMAIH@?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@HKDIMIAG@?$AA?$AN?$AA?5?$AA?$FL?$AAP?$AAW?$AAR?$AA?$FN?$AA?$FL?$AAT?$AAA?$AAB?$AA?$FN?$AA?$FL?$AAF?$AAN?$AA?$FN?$AA?$FL?$AAS?$AAP?$AA?$FN?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@JMCFGCIK@?$AA?$AN?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAa?$AAn?$AAy?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAk?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_15OJKDPEFE@?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@EBPDEGHE@?$AA?$FL?$AAF?$AA?$CF?$AAd?$AA?$FN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MODKIPFA@?$AA?$AN?$AA?5?$AA?$FL?$AA?5?$AA?4?$AA?5?$AA?$FN?$AA?5?$AA?$FL?$AA?5?$AA0?$AA?5?$AA?$FN?$AA?5?$AA?$FL?$AA?$CL?$AA?9?$AA?$CK?$AA?1?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13HOIJIPNN@?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@ILEOOHEJ@?$AA?5?$AA?5?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@IJDKLNIK@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAa?$AAl?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@IOKPGCGC@?$AA?$AN?$AA?5?$AA?$FL?$AAE?$AAN?$AAT?$AA?$FN?$AA?5?$AA?$FL?$AAS?$AAC?$AAA?$AAN?$AA?$FN?$AA?5?$AA?$FL?$AAE?$AAN?$AAT?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@IPBDPNGH@?$AA?$AN?$AA?5?$AA?$FL?$AAE?$AAS?$AAC?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$FL?$AAB?$AAS?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@EGBJCCJE@?$AA?$AN?$AA?5?$AA?$FL?$AAL?$AA?$FN?$AA?5?$AA?$FL?$AAU?$AAP?$AA?$FN?$AA?$FL?$AAD?$AAO?$AAW?$AAN?$AA?$FN?$AA?5?$AA?$FL?$AAR?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48756| DCD	|$LN22@KeypadFunc@2|
	DCD	0x40004501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13LBAGMAIH@?$AA?6?$AA?$AA@| DCB 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HKDIMIAG@?$AA?$AN?$AA?5?$AA?$FL?$AAP?$AAW?$AAR?$AA?$FN?$AA?$FL?$AAT?$AAA?$AAB?$AA?$FN?$AA?$FL?$AAF?$AAN?$AA?$FN?$AA?$FL?$AAS?$AAP?$AA?$FN?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "[", 0x0, "P", 0x0, "W", 0x0, "R", 0x0, "]"
	DCB	0x0, "[", 0x0, "T", 0x0, "A", 0x0, "B", 0x0, "]", 0x0, "["
	DCB	0x0, "F", 0x0, "N", 0x0, "]", 0x0, "[", 0x0, "S", 0x0, "P"
	DCB	0x0, "]", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@JMCFGCIK@?$AA?$AN?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAa?$AAn?$AAy?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAk?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAi@| DCB 0xd
	DCB	0x0, " ", 0x0, "P", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "a", 0x0, "n", 0x0, "y", 0x0, " ", 0x0, "k"
	DCB	0x0, "e", 0x0, "y", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e"
	DCB	0x0, " ", 0x0, "k", 0x0, "e", 0x0, "y", 0x0, "p", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ">", 0x0, ">", 0x0, ">"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15OJKDPEFE@?$AA?5?$AA?5?$AA?$AA@| DCB " ", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@EBPDEGHE@?$AA?$FL?$AAF?$AA?$CF?$AAd?$AA?$FN?$AA?$AA@| DCB "[", 0x0
	DCB	"F", 0x0, "%", 0x0, "d", 0x0, "]", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MODKIPFA@?$AA?$AN?$AA?5?$AA?$FL?$AA?5?$AA?4?$AA?5?$AA?$FN?$AA?5?$AA?$FL?$AA?5?$AA0?$AA?5?$AA?$FN?$AA?5?$AA?$FL?$AA?$CL?$AA?9?$AA?$CK?$AA?1?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "[", 0x0, " ", 0x0, ".", 0x0, " ", 0x0, "]"
	DCB	0x0, " ", 0x0, "[", 0x0, " ", 0x0, "0", 0x0, " ", 0x0, "]"
	DCB	0x0, " ", 0x0, "[", 0x0, "+", 0x0, "-", 0x0, "*", 0x0, "/"
	DCB	0x0, "]", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13HOIJIPNN@?$AA?5?$AA?$AA@| DCB " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@ILEOOHEJ@?$AA?5?$AA?5?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?$AA@| DCB " "
	DCB	0x0, " ", 0x0, " ", 0x0, "[", 0x0, "%", 0x0, "d", 0x0, "]"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@IJDKLNIK@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAa?$AAl?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "K"
	DCB	0x0, "e", 0x0, "y", 0x0, "p", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@IOKPGCGC@?$AA?$AN?$AA?5?$AA?$FL?$AAE?$AAN?$AAT?$AA?$FN?$AA?5?$AA?$FL?$AAS?$AAC?$AAA?$AAN?$AA?$FN?$AA?5?$AA?$FL?$AAE?$AAN?$AAT?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "[", 0x0, "E", 0x0, "N", 0x0, "T", 0x0, "]"
	DCB	0x0, " ", 0x0, "[", 0x0, "S", 0x0, "C", 0x0, "A", 0x0, "N"
	DCB	0x0, "]", 0x0, " ", 0x0, "[", 0x0, "E", 0x0, "N", 0x0, "T"
	DCB	0x0, "]", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@IPBDPNGH@?$AA?$AN?$AA?5?$AA?$FL?$AAE?$AAS?$AAC?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$FL?$AAB?$AAS?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "[", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "]"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "[", 0x0, "B", 0x0, "S"
	DCB	0x0, "]", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@EGBJCCJE@?$AA?$AN?$AA?5?$AA?$FL?$AAL?$AA?$FN?$AA?5?$AA?$FL?$AAU?$AAP?$AA?$FN?$AA?$FL?$AAD?$AAO?$AAW?$AAN?$AA?$FN?$AA?5?$AA?$FL?$AAR?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, " ", 0x0, "[", 0x0, "L", 0x0, "]", 0x0, " ", 0x0, "["
	DCB	0x0, "U", 0x0, "P", 0x0, "]", 0x0, "[", 0x0, "D", 0x0, "O"
	DCB	0x0, "W", 0x0, "N", 0x0, "]", 0x0, " ", 0x0, "[", 0x0, "R"
	DCB	0x0, "]", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |KeypadFunc_Z2170P| PROC

; 1219 : {

  00000		 |$LN22@KeypadFunc@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M48753|

; 1220 :     int     num;
; 1221 :     BOOL    LOOP = TRUE;
; 1222 :     //WCHAR   key;
; 1223 :     BOOL    EXIT;
; 1224 :     
; 1225 :     UNREFERENCED_PARAMETER(pMenu);
; 1226 : 	OALBLMenuHeader(L"Keypad Functional Test");

  00004	e59f0104	 ldr         r0, [pc, #0x104]
  00008	eb000000	 bl          OALBLMenuHeader

; 1227 : 	//OALLog(L"!!!!!!hTwl: %X....\r\n", ghTwl);
; 1228 :     
; 1229 : 	//printing keypad 
; 1230 : 	OALLog(L"\r [ENT] [SCAN] [ENT]\r\n");

  0000c	e59f00f8	 ldr         r0, [pc, #0xF8]
  00010	eb000000	 bl          NKDbgPrintfW

; 1231 : 	OALLog(L"\r [ESC]         [BS]\r\n");

  00014	e59f00ec	 ldr         r0, [pc, #0xEC]
  00018	eb000000	 bl          NKDbgPrintfW

; 1232 : 	OALLog(L"\r [L] [UP][DOWN] [R]\r\n");

  0001c	e59f00e0	 ldr         r0, [pc, #0xE0]
  00020	eb000000	 bl          NKDbgPrintfW

; 1233 : 		
; 1234 : 	for(num=1; num<10; num++){

  00024	e59f50d4	 ldr         r5, [pc, #0xD4]
  00028	e3a04001	 mov         r4, #1
  0002c		 |$LL11@KeypadFunc@2|

; 1235 :         OALLog(L"   [%d]",num);

  0002c	e59f00c8	 ldr         r0, [pc, #0xC8]
  00030	e1a01004	 mov         r1, r4
  00034	eb000000	 bl          NKDbgPrintfW

; 1236 :         if((num%3) == 0)

  00038	e0c32594	 smull       r2, r3, r4, r5
  0003c	e0833fa3	 add         r3, r3, r3, lsr #31
  00040	e0833083	 add         r3, r3, r3, lsl #1
  00044	e0543003	 subs        r3, r4, r3

; 1237 :             OALLog(L"\r\n");

  00048	059f0090	 ldreq       r0, [pc, #0x90]
  0004c	0b000000	 bleq        NKDbgPrintfW
  00050	e2844001	 add         r4, r4, #1
  00054	e354000a	 cmp         r4, #0xA
  00058	bafffff3	 blt         |$LL11@KeypadFunc@2|

; 1238 :     }
; 1239 : 	OALLog(L"\r [ . ] [ 0 ] [+-*/]\r\n");

  0005c	e59f0094	 ldr         r0, [pc, #0x94]
  00060	eb000000	 bl          NKDbgPrintfW

; 1240 : 	OALLog(L" "); 

  00064	e59f0088	 ldr         r0, [pc, #0x88]
  00068	eb000000	 bl          NKDbgPrintfW

; 1241 : 	for(num=1; num<5; num++){

  0006c	e3a04001	 mov         r4, #1
  00070		 |$LL7@KeypadFunc@2|

; 1242 :         OALLog(L"[F%d]",num);

  00070	e59f0078	 ldr         r0, [pc, #0x78]
  00074	e1a01004	 mov         r1, r4
  00078	eb000000	 bl          NKDbgPrintfW

; 1243 :         if((num%2) == 0)

  0007c	e0843fa4	 add         r3, r4, r4, lsr #31
  00080	e1a030c3	 mov         r3, r3, asr #1
  00084	e0543083	 subs        r3, r4, r3, lsl #1

; 1244 :             OALLog(L"  ");

  00088	059f005c	 ldreq       r0, [pc, #0x5C]
  0008c	0b000000	 bleq        NKDbgPrintfW
  00090	e2844001	 add         r4, r4, #1
  00094	e3540005	 cmp         r4, #5
  00098	bafffff4	 blt         |$LL7@KeypadFunc@2|

; 1245 :     }
; 1246 : 	OALLog(L"\n");   

  0009c	e59f0044	 ldr         r0, [pc, #0x44]
  000a0	eb000000	 bl          NKDbgPrintfW

; 1247 :     OALLog(L"\r [PWR][TAB][FN][SP] \r\n");

  000a4	e59f0038	 ldr         r0, [pc, #0x38]
  000a8	eb000000	 bl          NKDbgPrintfW

; 1248 : 	OALLog(L"\r\n");

  000ac	e59f002c	 ldr         r0, [pc, #0x2C]
  000b0	eb000000	 bl          NKDbgPrintfW

; 1249 :     OALLog(L"\r Press any key the keypad testing>>>\r\n");

  000b4	e59f0020	 ldr         r0, [pc, #0x20]
  000b8	eb000000	 bl          NKDbgPrintfW
  000bc		 |$LL3@KeypadFunc@2|

; 1250 :     
; 1251 : 	while(LOOP){
; 1252 :        EXIT = KeypadFuncMatrix();

  000bc	eb000000	 bl          KeypadFuncMatrix
  000c0	e3500000	 cmp         r0, #0

; 1253 :         if(EXIT)

  000c4	0afffffc	 beq         |$LL3@KeypadFunc@2|
  000c8		 |$TESTED$47884|

; 1254 : 	        goto TESTED;
; 1255 :     }
; 1256 : TESTED:
; 1257 :     OALLog(L"\r Tested ok!! \r\n");

  000c8	e59f0008	 ldr         r0, [pc, #8]
  000cc	eb000000	 bl          NKDbgPrintfW

; 1258 :     /*OALLog(L"\r Tested ok, enter '0' !! \r\n");
; 1259 :     key = OALBLMenuReadKey(TRUE);
; 1260 :     if(key == L'0')                  // EXIT KEY
; 1261 :     {*/
; 1262 :         return;
; 1263 :     //}
; 1264 : }

  000d0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN23@KeypadFunc@2|
  000d8		 |$LN24@KeypadFunc@2|
  000d8	00000000	 DCD         |??_C@_1CC@JNFCCOBJ@?$AA?$AN?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAk?$AA?$CB?$AA?$CB?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  000dc		 |$LN25@KeypadFunc@2|
  000dc	00000000	 DCD         |??_C@_1FA@JMCFGCIK@?$AA?$AN?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAa?$AAn?$AAy?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAk?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAi@|
  000e0		 |$LN26@KeypadFunc@2|
  000e0	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  000e4		 |$LN27@KeypadFunc@2|
  000e4	00000000	 DCD         |??_C@_1DA@HKDIMIAG@?$AA?$AN?$AA?5?$AA?$FL?$AAP?$AAW?$AAR?$AA?$FN?$AA?$FL?$AAT?$AAA?$AAB?$AA?$FN?$AA?$FL?$AAF?$AAN?$AA?$FN?$AA?$FL?$AAS?$AAP?$AA?$FN?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  000e8		 |$LN28@KeypadFunc@2|
  000e8	00000000	 DCD         |??_C@_13LBAGMAIH@?$AA?6?$AA?$AA@|
  000ec		 |$LN29@KeypadFunc@2|
  000ec	00000000	 DCD         |??_C@_15OJKDPEFE@?$AA?5?$AA?5?$AA?$AA@|
  000f0		 |$LN30@KeypadFunc@2|
  000f0	00000000	 DCD         |??_C@_1M@EBPDEGHE@?$AA?$FL?$AAF?$AA?$CF?$AAd?$AA?$FN?$AA?$AA@|
  000f4		 |$LN31@KeypadFunc@2|
  000f4	00000000	 DCD         |??_C@_13HOIJIPNN@?$AA?5?$AA?$AA@|
  000f8		 |$LN32@KeypadFunc@2|
  000f8	00000000	 DCD         |??_C@_1CO@MODKIPFA@?$AA?$AN?$AA?5?$AA?$FL?$AA?5?$AA?4?$AA?5?$AA?$FN?$AA?5?$AA?$FL?$AA?5?$AA0?$AA?5?$AA?$FN?$AA?5?$AA?$FL?$AA?$CL?$AA?9?$AA?$CK?$AA?1?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  000fc		 |$LN33@KeypadFunc@2|
  000fc	00000000	 DCD         |??_C@_1BA@ILEOOHEJ@?$AA?5?$AA?5?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?$AA@|
  00100		 |$LN34@KeypadFunc@2|
  00100	55555556	 DCD         0x55555556
  00104		 |$LN35@KeypadFunc@2|
  00104	00000000	 DCD         |??_C@_1CO@EGBJCCJE@?$AA?$AN?$AA?5?$AA?$FL?$AAL?$AA?$FN?$AA?5?$AA?$FL?$AAU?$AAP?$AA?$FN?$AA?$FL?$AAD?$AAO?$AAW?$AAN?$AA?$FN?$AA?5?$AA?$FL?$AAR?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  00108		 |$LN36@KeypadFunc@2|
  00108	00000000	 DCD         |??_C@_1CO@IPBDPNGH@?$AA?$AN?$AA?5?$AA?$FL?$AAE?$AAS?$AAC?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$FL?$AAB?$AAS?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  0010c		 |$LN37@KeypadFunc@2|
  0010c	00000000	 DCD         |??_C@_1CO@IOKPGCGC@?$AA?$AN?$AA?5?$AA?$FL?$AAE?$AAN?$AAT?$AA?$FN?$AA?5?$AA?$FL?$AAS?$AAC?$AAA?$AAN?$AA?$FN?$AA?5?$AA?$FL?$AAE?$AAN?$AAT?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  00110		 |$LN38@KeypadFunc@2|
  00110	00000000	 DCD         |??_C@_1CO@IJDKLNIK@?$AAK?$AAe?$AAy?$AAp?$AAa?$AAd?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAa?$AAl?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00114		 |$M48754|

			 ENDP  ; |KeypadFunc_Z2170P|

	EXPORT	|??_C@_1EA@NHFEEJFC@?$AA?$AN?$AA?6?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AAA?$AAl?$AAl?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@BGFONFOF@?$AA?$AN?$AA?6?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AAA?$AAl?$AAl?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48779| DCD	|$LN5@AllFunctio|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NHFEEJFC@?$AA?$AN?$AA?6?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AAA?$AAl?$AAl?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, ">", 0x0, ">", 0x0, ">", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, " ", 0x0, "f", 0x0, "u", 0x0, "n"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "t", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@BGFONFOF@?$AA?$AN?$AA?6?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AAA?$AAl?$AAl?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, ">", 0x0, ">", 0x0, ">", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, " ", 0x0, "f", 0x0, "u", 0x0, "n"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "t", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |AllFunctionTest_Z2000| PROC

; 1302 : {

  00000		 |$LN5@AllFunctio|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48776|

; 1303 :     //OAL_BLMENU_ITEM *ptr = NULL;
; 1304 : 	//ALL Test
; 1305 : 	UNREFERENCED_PARAMETER(pMenu);
; 1306 : 	OALBLMenuHeader(L"All Function Test");

  00004	e59f0020	 ldr         r0, [pc, #0x20]
  00008	eb000000	 bl          OALBLMenuHeader

; 1307 :     
; 1308 :     OALLog(L"\r\n >>>All function testing...\r\n");    

  0000c	e59f0014	 ldr         r0, [pc, #0x14]
  00010	eb000000	 bl          NKDbgPrintfW

; 1309 : 
; 1310 : 	/*DisplayTest_Z2170P(ptr);
; 1311 : 	LcdStall(stall_1Sec*3);                         //2
; 1312 :   
; 1313 : 	BkTest_Z2170P(ptr);
; 1314 : 	LcdStall(stall_1Sec*3);                         //3
; 1315 :          
; 1316 : 	DRAMTest_Z2170P(ptr);                                  
; 1317 : 	LcdStall(stall_1Sec*3);                         //4 
; 1318 : 	   
; 1319 : 	KeypadBkTest_Z2170P(ptr);                              
; 1320 : 	LcdStall(stall_1Sec*3);                         //5 */
; 1321 : 	OALLog(L"\r\n >>>All function tested...\r\n");

  00014	e59f0008	 ldr         r0, [pc, #8]
  00018	eb000000	 bl          NKDbgPrintfW

; 1322 : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@AllFunctio|
  00024		 |$LN7@AllFunctio|
  00024	00000000	 DCD         |??_C@_1DO@BGFONFOF@?$AA?$AN?$AA?6?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AAA?$AAl?$AAl?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00028		 |$LN8@AllFunctio|
  00028	00000000	 DCD         |??_C@_1EA@NHFEEJFC@?$AA?$AN?$AA?6?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AAA?$AAl?$AAl?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  0002c		 |$LN9@AllFunctio|
  0002c	00000000	 DCD         |??_C@_1CE@NDBHKBD@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00030		 |$M48777|

			 ENDP  ; |AllFunctionTest_Z2000|


  00000			 AREA	 |.pdata|, PDATA
|$T48790| DCD	|$LN5@DisplayTes@2|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DisplayTest_Z2000| PROC

; 1328 : {

  00000		 |$LN5@DisplayTes@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48787|

; 1329 :     BLShowLogo();

  00004	eb000000	 bl          BLShowLogo

; 1330 :     OALBLMenuHeader(L"Display Test");

  00008	e59f0018	 ldr         r0, [pc, #0x18]
  0000c	eb000000	 bl          OALBLMenuHeader

; 1331 : 	UNREFERENCED_PARAMETER(pMenu);
; 1332 :     OALLog(L"\r\n Running...\r\n");

  00010	e59f000c	 ldr         r0, [pc, #0xC]
  00014	eb000000	 bl          NKDbgPrintfW

; 1333 : 	//DisplayShow(BSP_Z2000);
; 1334 : 	DisplayShow();

  00018	eb000000	 bl          DisplayShow

; 1335 : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@DisplayTes@2|
  00024		 |$LN7@DisplayTes@2|
  00024	00000000	 DCD         |??_C@_1CA@IPGENFE@?$AA?$AN?$AA?6?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00028		 |$LN8@DisplayTes@2|
  00028	00000000	 DCD         |??_C@_1BK@FJOPBKKD@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  0002c		 |$M48788|

			 ENDP  ; |DisplayTest_Z2000|


  00000			 AREA	 |.pdata|, PDATA
|$T48800| DCD	|$LN5@BkTest_Z21|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BkTest_Z2170P| PROC

; 219  : {

  00000		 |$LN5@BkTest_Z21|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48797|

; 220  : 	OALBLMenuHeader(L"LCM Backlight Test");

  00004	e59f000c	 ldr         r0, [pc, #0xC]
  00008	eb000000	 bl          OALBLMenuHeader

; 221  : 	UNREFERENCED_PARAMETER(pMenu);
; 222  :     SetBacklight();

  0000c	eb000000	 bl          SetBacklight

; 223  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@BkTest_Z21|
  00018		 |$LN7@BkTest_Z21|
  00018	00000000	 DCD         |??_C@_1CG@MFOPBHMC@?$AAL?$AAC?$AAM?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  0001c		 |$M48798|

			 ENDP  ; |BkTest_Z2170P|

	EXPORT	|??_C@_1BK@HOMLCKFD@?$AAB?$AAu?$AAr?$AAn?$AA?9?$AAI?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48816| DCD	|$LN12@BurnIn_Z21|
	DCD	0x40002301

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@HOMLCKFD@?$AAB?$AAu?$AAr?$AAn?$AA?9?$AAI?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "-", 0x0, "I", 0x0, "n"
	DCB	0x0, " ", 0x0, "T", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BurnIn_Z2170P| PROC

; 1270 : {

  00000		 |$LN12@BurnIn_Z21|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48813|

; 1271 :     OAL_BLMENU_ITEM *ptr = NULL;
; 1272 :     
; 1273 :     UNREFERENCED_PARAMETER(pMenu);
; 1274 : 	OALBLMenuHeader(L"Burn-In Test");

  00004	e59f007c	 ldr         r0, [pc, #0x7C]
  00008	eb000000	 bl          OALBLMenuHeader
  0000c	e59f4070	 ldr         r4, [pc, #0x70]
  00010		 |$LL2@BurnIn_Z21|

; 1275 : 	
; 1276 : 	for(;;){
; 1277 : 	    //OALLog(L"\r\n >>>Display Testing...\r\n");
; 1278 : 	    DisplayTest_Z2170P(ptr);

  00010	eb000000	 bl          BLShowLogo
  00014	e59f0064	 ldr         r0, [pc, #0x64]
  00018	eb000000	 bl          OALBLMenuHeader
  0001c	e59f0058	 ldr         r0, [pc, #0x58]
  00020	eb000000	 bl          NKDbgPrintfW
  00024	eb000000	 bl          DisplayShow

; 1279 :         LcdStall(stall_1Sec*1); 

  00028	e5940000	 ldr         r0, [r4]
  0002c	eb000000	 bl          LcdStall

; 1280 : 
; 1281 :         //OALLog(L"\r\n >>>LCM Backlight Testing...\r\n");
; 1282 : 	    BkTest_Z2170P(ptr);

  00030	e59f0040	 ldr         r0, [pc, #0x40]
  00034	eb000000	 bl          OALBLMenuHeader
  00038	eb000000	 bl          SetBacklight

; 1283 :         LcdStall(stall_1Sec*1); 

  0003c	e5940000	 ldr         r0, [r4]
  00040	eb000000	 bl          LcdStall

; 1284 : 
; 1285 :         //OALLog(L"\r\n >>>DRAM Testing...\r\n");
; 1286 :         DRAMTest_Z2170P(ptr);

  00044	e3a00000	 mov         r0, #0
  00048	eb000000	 bl          DRAMTest_Z2170P

; 1287 :         LcdStall(stall_1Sec*1); 

  0004c	e5940000	 ldr         r0, [r4]
  00050	eb000000	 bl          LcdStall

; 1288 : 
; 1289 :         //OALLog(L"\r\n >>>Keypad Backlight Testing...\r\n");
; 1290 :         KeypadBkTest_Z2170P(ptr);

  00054	e3a00000	 mov         r0, #0
  00058	eb000000	 bl          KeypadBkTest_Z2170P

; 1291 :         LcdStall(stall_1Sec*1); 

  0005c	e5940000	 ldr         r0, [r4]
  00060	eb000000	 bl          LcdStall

; 1292 : 
; 1293 :         LEDTest_Z2170P(ptr); 

  00064	e3a00000	 mov         r0, #0
  00068	eb000000	 bl          LEDTest_Z2170P

; 1294 :         LcdStall(stall_1Sec*1);

  0006c	e5940000	 ldr         r0, [r4]
  00070	eb000000	 bl          LcdStall

; 1295 : 	}

  00074	eaffffe5	 b           |$LL2@BurnIn_Z21|
  00078		 |$LN13@BurnIn_Z21|
  00078		 |$LN14@BurnIn_Z21|
  00078	00000000	 DCD         |??_C@_1CG@MFOPBHMC@?$AAL?$AAC?$AAM?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  0007c		 |$LN15@BurnIn_Z21|
  0007c	00000000	 DCD         |??_C@_1CA@IPGENFE@?$AA?$AN?$AA?6?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00080		 |$LN16@BurnIn_Z21|
  00080	00000000	 DCD         |??_C@_1BK@FJOPBKKD@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00084		 |$LN17@BurnIn_Z21|
  00084	00000000	 DCD         |stall_1Sec|
  00088		 |$LN18@BurnIn_Z21|
  00088	00000000	 DCD         |??_C@_1BK@HOMLCKFD@?$AAB?$AAu?$AAr?$AAn?$AA?9?$AAI?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  0008c		 |$M48814|

			 ENDP  ; |BurnIn_Z2170P|


  00000			 AREA	 |.pdata|, PDATA
|$T48838| DCD	|$LN11@AllFunctio@2|
	DCD	0x40004401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |AllFunctionTest_Z2170P| PROC

; 158  : {

  00000		 |$LN11@AllFunctio@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48835|

; 159  :     OAL_BLMENU_ITEM *ptr = NULL;
; 160  : 	//ALL Test
; 161  : 	UNREFERENCED_PARAMETER(pMenu);
; 162  : 	OALBLMenuHeader(L"All Function Test");

  00004	e59f0100	 ldr         r0, [pc, #0x100]
  00008	eb000000	 bl          OALBLMenuHeader

; 163  :     
; 164  :     OALLog(L"\r\n >>>All function testing...\r\n");    

  0000c	e59f00f4	 ldr         r0, [pc, #0xF4]
  00010	eb000000	 bl          NKDbgPrintfW

; 165  : 
; 166  : 	DisplayTest_Z2170P(ptr);

  00014	eb000000	 bl          BLShowLogo
  00018	e59f00e4	 ldr         r0, [pc, #0xE4]
  0001c	eb000000	 bl          OALBLMenuHeader
  00020	e59f00d8	 ldr         r0, [pc, #0xD8]
  00024	eb000000	 bl          NKDbgPrintfW
  00028	eb000000	 bl          DisplayShow

; 167  : 	LcdStall(stall_1Sec*2);                     //2

  0002c	e59f40c8	 ldr         r4, [pc, #0xC8]
  00030	e5943000	 ldr         r3, [r4]
  00034	e1a00083	 mov         r0, r3, lsl #1
  00038	eb000000	 bl          LcdStall

; 168  :   
; 169  : 	BkTest_Z2170P(ptr);

  0003c	e59f00b4	 ldr         r0, [pc, #0xB4]
  00040	eb000000	 bl          OALBLMenuHeader
  00044	eb000000	 bl          SetBacklight

; 170  : 	LcdStall(stall_1Sec*2);                     //3

  00048	e5943000	 ldr         r3, [r4]
  0004c	e1a00083	 mov         r0, r3, lsl #1
  00050	eb000000	 bl          LcdStall

; 171  :          
; 172  : 	DRAMTest_Z2170P(ptr);                                  

  00054	e3a00000	 mov         r0, #0
  00058	eb000000	 bl          DRAMTest_Z2170P

; 173  : 	LcdStall(stall_1Sec*2);                     //4 

  0005c	e5943000	 ldr         r3, [r4]
  00060	e1a00083	 mov         r0, r3, lsl #1
  00064	eb000000	 bl          LcdStall

; 174  : 	   
; 175  : 	KeypadBkTest_Z2170P(ptr);                              

  00068	e3a00000	 mov         r0, #0
  0006c	eb000000	 bl          KeypadBkTest_Z2170P

; 176  : 	LcdStall(stall_1Sec*2);                     //5 

  00070	e5943000	 ldr         r3, [r4]
  00074	e1a00083	 mov         r0, r3, lsl #1
  00078	eb000000	 bl          LcdStall

; 177  : 
; 178  : 	TouchPanelTest_Z2170P(ptr);                 //6 

  0007c	e3a00000	 mov         r0, #0
  00080	eb000000	 bl          TouchPanelTest_Z2170P

; 179  :     LcdStall(stall_1Sec*2);

  00084	e5943000	 ldr         r3, [r4]
  00088	e1a00083	 mov         r0, r3, lsl #1
  0008c	eb000000	 bl          LcdStall

; 180  :     
; 181  :     BatteryTest_Z2170P(ptr);                    //7 

  00090	e3a00000	 mov         r0, #0
  00094	eb000000	 bl          BatteryTest_Z2170P

; 182  :     LcdStall(stall_1Sec*2);

  00098	e5943000	 ldr         r3, [r4]
  0009c	e1a00083	 mov         r0, r3, lsl #1
  000a0	eb000000	 bl          LcdStall

; 183  :     
; 184  :     LEDTest_Z2170P(ptr);                        //8

  000a4	e3a00000	 mov         r0, #0
  000a8	eb000000	 bl          LEDTest_Z2170P

; 185  :     LcdStall(stall_1Sec*2);

  000ac	e5943000	 ldr         r3, [r4]
  000b0	e1a00083	 mov         r0, r3, lsl #1
  000b4	eb000000	 bl          LcdStall

; 186  :     
; 187  :     BarcodeTest_Z2170P(ptr);                    //9 

  000b8	e3a00000	 mov         r0, #0
  000bc	eb000000	 bl          BarcodeTest_Z2170P

; 188  :     LcdStall(stall_1Sec*2);

  000c0	e5943000	 ldr         r3, [r4]
  000c4	e1a00083	 mov         r0, r3, lsl #1
  000c8	eb000000	 bl          LcdStall

; 189  :     
; 190  :     AudioAndMIC_Z2170P(ptr);                    //a

  000cc	e59f0020	 ldr         r0, [pc, #0x20]
  000d0	eb000000	 bl          OALBLMenuHeader

; 191  :     LcdStall(stall_1Sec*2);

  000d4	e5943000	 ldr         r3, [r4]
  000d8	e1a00083	 mov         r0, r3, lsl #1
  000dc	eb000000	 bl          LcdStall

; 192  :     
; 193  :     /*KeypadFunc_Z2170P(ptr);                     //b
; 194  :     LcdStall(stall_1Sec*2);
; 195  :     
; 196  :     BurnIn_Z2170P(ptr);                         //c
; 197  :     LcdStall(stall_1Sec*2);*/
; 198  : 	
; 199  : 	OALLog(L"\r\n >>>All function tested...\r\n");

  000e0	e59f0008	 ldr         r0, [pc, #8]
  000e4	eb000000	 bl          NKDbgPrintfW

; 200  : }

  000e8	e8bd4010	 ldmia       sp!, {r4, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN12@AllFunctio@2|
  000f0		 |$LN13@AllFunctio@2|
  000f0	00000000	 DCD         |??_C@_1DO@BGFONFOF@?$AA?$AN?$AA?6?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AAA?$AAl?$AAl?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  000f4		 |$LN14@AllFunctio@2|
  000f4	00000000	 DCD         |??_C@_1BM@NMMNENJO@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAA?$AAn?$AAd?$AA?5?$AAM?$AAI?$AAC?$AA?$AA@|
  000f8		 |$LN15@AllFunctio@2|
  000f8	00000000	 DCD         |??_C@_1CG@MFOPBHMC@?$AAL?$AAC?$AAM?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  000fc		 |$LN16@AllFunctio@2|
  000fc	00000000	 DCD         |stall_1Sec|
  00100		 |$LN17@AllFunctio@2|
  00100	00000000	 DCD         |??_C@_1CA@IPGENFE@?$AA?$AN?$AA?6?$AA?5?$AAR?$AAu?$AAn?$AAn?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00104		 |$LN18@AllFunctio@2|
  00104	00000000	 DCD         |??_C@_1BK@FJOPBKKD@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00108		 |$LN19@AllFunctio@2|
  00108	00000000	 DCD         |??_C@_1EA@NHFEEJFC@?$AA?$AN?$AA?6?$AA?5?$AA?$DO?$AA?$DO?$AA?$DO?$AAA?$AAl?$AAl?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  0010c		 |$LN20@AllFunctio@2|
  0010c	00000000	 DCD         |??_C@_1CE@NDBHKBD@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?$AA@|
  00110		 |$M48836|

			 ENDP  ; |AllFunctionTest_Z2170P|

	END
